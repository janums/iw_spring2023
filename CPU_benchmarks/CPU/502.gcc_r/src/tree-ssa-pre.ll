; ModuleID = 'tree-ssa-pre.bc'
source_filename = "tree-ssa-pre.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.VEC_bitmap_set_t_heap = type { %struct.VEC_bitmap_set_t_base }
%struct.VEC_bitmap_set_t_base = type { i32, i32, [1 x %struct.bitmap_set*] }
%struct.bitmap_set = type { %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.gimple_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.VEC_unsigned_heap = type { %struct.VEC_unsigned_base }
%struct.VEC_unsigned_base = type { i32, i32, [1 x i32] }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_pre_expr_heap = type { %struct.VEC_pre_expr_base }
%struct.VEC_pre_expr_base = type { i32, i32, [1 x %struct.pre_expr_d*] }
%struct.pre_expr_d = type { i32, i32, %union.pre_expr_union_d }
%union.pre_expr_union_d = type { %union.tree_node* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.anon = type { i32, i32, i32, i32, i32 }
%struct.VEC_gimple_heap = type { %struct.VEC_gimple_base }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.vn_ssa_aux = type { %union.tree_node*, %union.tree_node*, i32, i32, i32, i8 }
%struct.vn_nary_op_s = type { i32, i32, i32, %union.tree_node*, %union.tree_node*, [4 x %union.tree_node*] }
%struct.vn_reference_s = type { i32, i32, %union.tree_node*, i32, %union.tree_node*, %struct.VEC_vn_reference_op_s_heap*, %union.tree_node* }
%struct.VEC_vn_reference_op_s_heap = type { %struct.VEC_vn_reference_op_s_base }
%struct.VEC_vn_reference_op_s_base = type { i32, i32, [1 x %struct.vn_reference_op_struct] }
%struct.vn_reference_op_struct = type { i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.tree_ssa_name = type { %struct.tree_common, %union.tree_node*, %union.gimple_statement_d*, i32, %struct.ptr_info_def*, %struct.ssa_use_operand_d }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.bb_bitmap_sets = type { %struct.bitmap_set*, %struct.bitmap_set*, %struct.bitmap_set*, %struct.bitmap_set*, %struct.bitmap_set*, %struct.bitmap_set*, %struct.bitmap_set*, %struct.bitmap_head_def*, i8 }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.VEC_basic_block_heap = type { %struct.VEC_basic_block_base }
%struct.expr_pred_trans_d = type { %struct.pre_expr_d*, %struct.basic_block_def*, %struct.pre_expr_d*, i32 }
%struct.var_ann_d = type { i8, i32, %union.tree_node* }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.ao_ref_s = type { %union.tree_node*, %union.tree_node*, i64, i64, i64, i32, i32 }
%struct.affine_iv = type { %union.tree_node*, %union.tree_node*, i8 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [15 x i8] c"tree-ssa-pre.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@value_expressions = internal global %struct.VEC_bitmap_set_t_heap* null, align 8, !dbg !0
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"%04d\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"pre\00", align 1
@pass_pre = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i8 ()* @gate_pre, i32 ()* @do_pre, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 69, i32 104, i32 0, i32 0, i32 1048576, i32 16391 } }, align 8, !dbg !2178
@.str.6 = private unnamed_addr constant [4 x i8] c"fre\00", align 1
@pass_fre = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8 ()* @gate_fre, i32 ()* @execute_fre, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 71, i32 40, i32 0, i32 0, i32 0, i32 7 } }, align 8, !dbg !2206
@bitmap_set_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !2208
@grand_bitmap_obstack = internal global %struct.bitmap_obstack zeroinitializer, align 8, !dbg !2231
@name_to_id = internal global %struct.VEC_unsigned_heap* null, align 8, !dbg !2233
@expression_to_id = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2235
@next_expression_id = internal unnamed_addr global i32 0, align 4, !dbg !2237
@expressions = internal global %struct.VEC_pre_expr_heap* null, align 8, !dbg !2239
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.7 = private unnamed_addr constant [5 x i8] c"{%s,\00", align 1
@tree_code_name = external dso_local local_unnamed_addr constant [0 x i8*], align 8
@.str.8 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.11 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"%s[%d] := { \00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c" (%04d)\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c" }\0A\00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@flag_tree_pre = external dso_local local_unnamed_addr global i32, align 4
@optimize = external dso_local local_unnamed_addr global i32, align 4
@do_partial_partial = internal unnamed_addr global i8 0, align 1, !dbg !2241
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.19 = private unnamed_addr constant [8 x i8] c"exp_gen\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"phi_gen\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"tmp_gen\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"avail_out\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"Insertions\00", align 1
@pre_stats = internal global %struct.anon zeroinitializer, align 4, !dbg !2279
@.str.24 = private unnamed_addr constant [12 x i8] c"PA inserted\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"New PHIs\00", align 1
@.str.26 = private unnamed_addr constant [11 x i8] c"Eliminated\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"Constified\00", align 1
@inserted_exprs = internal global %struct.VEC_gimple_heap* null, align 8, !dbg !2243
@.str.28 = private unnamed_addr constant [32 x i8] c"Removing unnecessary insertion:\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@.str.30 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@in_fre = internal unnamed_addr global i8 0, align 1, !dbg !2245
@need_creation = internal global %struct.VEC_gimple_heap* null, align 8, !dbg !2247
@pretemp = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !2249
@prephitemp = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !2253
@postorder = internal unnamed_addr global i32* null, align 8, !dbg !2255
@inserted_phi_names = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2257
@phi_translate_table = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2259
@.str.31 = private unnamed_addr constant [12 x i8] c"Bitmap sets\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"pre_expr nodes\00", align 1
@pre_expr_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !2261
@need_eh_cleanup = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2263
@.str.33 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@has_abnormal_preds = internal unnamed_addr global %struct.simple_bitmap_def* null, align 8, !dbg !2265
@changed_blocks = internal unnamed_addr global %struct.simple_bitmap_def* null, align 8, !dbg !2277
@.str.34 = private unnamed_addr constant [23 x i8] c"Starting iteration %d\0A\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"compute_antic iterations\00", align 1
@.str.36 = private unnamed_addr constant [33 x i8] c"compute_partial_antic iterations\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"ANTIC_OUT\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ANTIC_IN\00", align 1
@.str.39 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.40 = private unnamed_addr constant [47 x i8] c"Block %d was deferred for a future iteration.\0A\00", align 1
@.str.41 = private unnamed_addr constant [55 x i8] c"Could not find SSA_NAME representative for expression:\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"pretmp\00", align 1
@.str.43 = private unnamed_addr constant [33 x i8] c"Created SSA_NAME representative \00", align 1
@.str.44 = private unnamed_addr constant [17 x i8] c" for expression:\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.45 = private unnamed_addr constant [7 x i8] c"PA_OUT\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"PA_IN\00", align 1
@.str.47 = private unnamed_addr constant [18 x i8] c"insert iterations\00", align 1
@.str.48 = private unnamed_addr constant [29 x i8] c"Found fully redundant value\0A\00", align 1
@.str.49 = private unnamed_addr constant [41 x i8] c"Found partial redundancy for expression \00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c" (%04d)\0A\00", align 1
@.str.51 = private unnamed_addr constant [84 x i8] c"Skipping insertion of phi for partial redundancy: Looks like an induction variable\0A\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"prephitmp\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c"Created phi \00", align 1
@.str.54 = private unnamed_addr constant [14 x i8] c" in block %d\0A\00", align 1
@flag_tree_vectorize = external dso_local local_unnamed_addr global i32, align 4
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@.str.55 = private unnamed_addr constant [10 x i8] c"Inserted \00", align 1
@.str.56 = private unnamed_addr constant [20 x i8] c" in predecessor %d\0A\00", align 1
@.str.57 = private unnamed_addr constant [10 x i8] c"Replaced \00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c" with \00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c" in \00", align 1
@VN_TOP = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.60 = private unnamed_addr constant [28 x i8] c"  Removed EH side effects.\0A\00", align 1
@.str.61 = private unnamed_addr constant [25 x i8] c"Deleted redundant store \00", align 1
@.str.62 = private unnamed_addr constant [28 x i8] c"Replacing call target with \00", align 1
@.str.63 = private unnamed_addr constant [38 x i8] c"Replaced redundant PHI node defining \00", align 1
@flag_tree_fre = external dso_local local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2292 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2305, metadata !DIExpression()), !dbg !2307
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2306, metadata !DIExpression()), !dbg !2307
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2308
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2309
  ret i32 %call, !dbg !2310
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2311 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2315
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2316
  ret i32 %call, !dbg !2317
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2318 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2373, metadata !DIExpression()), !dbg !2374
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2375
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2375
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2375
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2375
  %cmp = icmp uge i8* %0, %1, !dbg !2375
  %conv1 = zext i1 %cmp to i64, !dbg !2375
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2375
  %tobool = icmp eq i64 %expval, 0, !dbg !2375
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2375

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2375
  br label %cond.end, !dbg !2375

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2375
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2375
  %2 = load i8, i8* %0, align 1, !dbg !2375
  %conv3 = zext i8 %2 to i32, !dbg !2375
  br label %cond.end, !dbg !2375

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2375
  ret i32 %cond, !dbg !2376
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2377 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2379, metadata !DIExpression()), !dbg !2380
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2381
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2381
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2381
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2381
  %cmp = icmp uge i8* %0, %1, !dbg !2381
  %conv1 = zext i1 %cmp to i64, !dbg !2381
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2381
  %tobool = icmp eq i64 %expval, 0, !dbg !2381
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2381

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2381
  br label %cond.end, !dbg !2381

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2381
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2381
  %2 = load i8, i8* %0, align 1, !dbg !2381
  %conv3 = zext i8 %2 to i32, !dbg !2381
  br label %cond.end, !dbg !2381

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2381
  ret i32 %cond, !dbg !2382
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2383 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2384
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2384
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2384
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2384
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2384
  %cmp = icmp uge i8* %1, %2, !dbg !2384
  %conv1 = zext i1 %cmp to i64, !dbg !2384
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2384
  %tobool = icmp eq i64 %expval, 0, !dbg !2384
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2384

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2384
  br label %cond.end, !dbg !2384

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2384
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2384
  %3 = load i8, i8* %1, align 1, !dbg !2384
  %conv3 = zext i8 %3 to i32, !dbg !2384
  br label %cond.end, !dbg !2384

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2384
  ret i32 %cond, !dbg !2385
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2386 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2390, metadata !DIExpression()), !dbg !2391
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2392
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2393
  ret i32 %call, !dbg !2394
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2395 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2399, metadata !DIExpression()), !dbg !2401
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2400, metadata !DIExpression()), !dbg !2401
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2402
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2402
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2402
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2402
  %cmp = icmp uge i8* %0, %1, !dbg !2402
  %conv1 = zext i1 %cmp to i64, !dbg !2402
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2402
  %tobool = icmp eq i64 %expval, 0, !dbg !2402
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2402

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2402
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2402
  br label %cond.end, !dbg !2402

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2402
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2402
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2402
  store i8 %conv2, i8* %0, align 1, !dbg !2402
  %conv6 = and i32 %__c, 255, !dbg !2402
  br label %cond.end, !dbg !2402

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2402
  ret i32 %cond, !dbg !2403
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2404 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2406, metadata !DIExpression()), !dbg !2408
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2407, metadata !DIExpression()), !dbg !2408
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2409
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2409
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2409
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2409
  %cmp = icmp uge i8* %0, %1, !dbg !2409
  %conv1 = zext i1 %cmp to i64, !dbg !2409
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2409
  %tobool = icmp eq i64 %expval, 0, !dbg !2409
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2409

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2409
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2409
  br label %cond.end, !dbg !2409

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2409
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2409
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2409
  store i8 %conv2, i8* %0, align 1, !dbg !2409
  %conv6 = and i32 %__c, 255, !dbg !2409
  br label %cond.end, !dbg !2409

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2409
  ret i32 %cond, !dbg !2410
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2411 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2413, metadata !DIExpression()), !dbg !2414
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2415
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2415
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2415
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2415
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2415
  %cmp = icmp uge i8* %1, %2, !dbg !2415
  %conv1 = zext i1 %cmp to i64, !dbg !2415
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2415
  %tobool = icmp eq i64 %expval, 0, !dbg !2415
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2415

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2415
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2415
  br label %cond.end, !dbg !2415

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2415
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2415
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2415
  store i8 %conv4, i8* %1, align 1, !dbg !2415
  %conv6 = and i32 %__c, 255, !dbg !2415
  br label %cond.end, !dbg !2415

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2415
  ret i32 %cond, !dbg !2416
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2417 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2423, metadata !DIExpression()), !dbg !2426
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2424, metadata !DIExpression()), !dbg !2426
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2425, metadata !DIExpression()), !dbg !2426
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2427
  ret i64 %call, !dbg !2428
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2429 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2431, metadata !DIExpression()), !dbg !2432
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2433
  %0 = load i32, i32* %_flags, align 8, !dbg !2433
  %and = lshr i32 %0, 4, !dbg !2433
  %and.lobit = and i32 %and, 1, !dbg !2433
  ret i32 %and.lobit, !dbg !2434
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2435 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2437, metadata !DIExpression()), !dbg !2438
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2439
  %0 = load i32, i32* %_flags, align 8, !dbg !2439
  %and = lshr i32 %0, 5, !dbg !2439
  %and.lobit = and i32 %and, 1, !dbg !2439
  ret i32 %and.lobit, !dbg !2440
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2441 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2444, metadata !DIExpression()), !dbg !2445
  %__c.off = add i32 %__c, 128, !dbg !2446
  %0 = icmp ult i32 %__c.off, 384, !dbg !2446
  br i1 %0, label %cond.true, label %cond.end, !dbg !2446

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2447
  %1 = load i32*, i32** %call, align 8, !dbg !2448
  %idxprom = sext i32 %__c to i64, !dbg !2449
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2449
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2449
  br label %cond.end, !dbg !2450

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2450
  ret i32 %cond, !dbg !2451
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2452 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2454, metadata !DIExpression()), !dbg !2455
  %__c.off = add i32 %__c, 128, !dbg !2456
  %0 = icmp ult i32 %__c.off, 384, !dbg !2456
  br i1 %0, label %cond.true, label %cond.end, !dbg !2456

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2457
  %1 = load i32*, i32** %call, align 8, !dbg !2458
  %idxprom = sext i32 %__c to i64, !dbg !2459
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2459
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2459
  br label %cond.end, !dbg !2460

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2460
  ret i32 %cond, !dbg !2461
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2462 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2467, metadata !DIExpression()), !dbg !2468
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2469
  %conv = trunc i64 %call to i32, !dbg !2470
  ret i32 %conv, !dbg !2471
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2472 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2476, metadata !DIExpression()), !dbg !2477
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2478
  ret i64 %call, !dbg !2479
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2480 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2485, metadata !DIExpression()), !dbg !2486
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2487
  ret i64 %call, !dbg !2488
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2489 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2495, metadata !DIExpression()), !dbg !2505
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2496, metadata !DIExpression()), !dbg !2505
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2497, metadata !DIExpression()), !dbg !2505
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2498, metadata !DIExpression()), !dbg !2505
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2499, metadata !DIExpression()), !dbg !2505
  call void @llvm.dbg.value(metadata i64 0, metadata !2500, metadata !DIExpression()), !dbg !2505
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2501, metadata !DIExpression()), !dbg !2505
  br label %while.cond, !dbg !2506

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2507
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2505
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2501, metadata !DIExpression()), !dbg !2505
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2500, metadata !DIExpression()), !dbg !2505
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2508
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2506

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2509
  %div = lshr i64 %add, 1, !dbg !2511
  call void @llvm.dbg.value(metadata i64 %div, metadata !2502, metadata !DIExpression()), !dbg !2505
  %mul = mul i64 %div, %__size, !dbg !2512
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2513
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2503, metadata !DIExpression()), !dbg !2505
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2514
  call void @llvm.dbg.value(metadata i32 %call, metadata !2504, metadata !DIExpression()), !dbg !2505
  %cmp1 = icmp slt i32 %call, 0, !dbg !2515
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2517

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2518
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2520

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2521
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2500, metadata !DIExpression()), !dbg !2505
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2505
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2505
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2501, metadata !DIExpression()), !dbg !2505
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2500, metadata !DIExpression()), !dbg !2505
  br label %while.cond, !dbg !2506, !llvm.loop !2522

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2505
  ret i8* %retval.0, !dbg !2524
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2525 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2531, metadata !DIExpression()), !dbg !2532
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2533
  ret double %call, !dbg !2534
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2535 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2544, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2545, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata i32 %base, metadata !2546, metadata !DIExpression()), !dbg !2547
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2548
  ret i64 %call, !dbg !2549
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2550 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2556, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2557, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.value(metadata i32 %base, metadata !2558, metadata !DIExpression()), !dbg !2559
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2560
  ret i64 %call, !dbg !2561
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2562 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2573, metadata !DIExpression()), !dbg !2576
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2574, metadata !DIExpression()), !dbg !2576
  call void @llvm.dbg.value(metadata i32 %base, metadata !2575, metadata !DIExpression()), !dbg !2576
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2577
  ret i64 %call, !dbg !2578
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2579 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2583, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2584, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata i32 %base, metadata !2585, metadata !DIExpression()), !dbg !2586
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2587
  ret i64 %call, !dbg !2588
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2589 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2629, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2630, metadata !DIExpression()), !dbg !2631
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2632
  ret i32 %call, !dbg !2633
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2634 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2636, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2637, metadata !DIExpression()), !dbg !2638
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2639
  ret i32 %call, !dbg !2640
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2641 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2645, metadata !DIExpression()), !dbg !2647
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2646, metadata !DIExpression()), !dbg !2647
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2648
  ret i32 %call, !dbg !2649
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2650 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2654, metadata !DIExpression()), !dbg !2658
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2655, metadata !DIExpression()), !dbg !2658
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2656, metadata !DIExpression()), !dbg !2658
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2657, metadata !DIExpression()), !dbg !2658
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2659
  ret i32 %call, !dbg !2660
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2661 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2665, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2666, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2667, metadata !DIExpression()), !dbg !2668
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2667, metadata !DIExpression(DW_OP_deref)), !dbg !2668
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2669
  ret i32 %call, !dbg !2670
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2671 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2675, metadata !DIExpression()), !dbg !2679
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2676, metadata !DIExpression()), !dbg !2679
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2677, metadata !DIExpression()), !dbg !2679
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2678, metadata !DIExpression()), !dbg !2679
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2678, metadata !DIExpression(DW_OP_deref)), !dbg !2679
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2680
  ret i32 %call, !dbg !2681
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2682 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2706, metadata !DIExpression()), !dbg !2708
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2707, metadata !DIExpression()), !dbg !2708
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2709
  ret i32 %call, !dbg !2710
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2711 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2713, metadata !DIExpression()), !dbg !2715
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2714, metadata !DIExpression()), !dbg !2715
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2716
  ret i32 %call, !dbg !2717
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2718 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2722, metadata !DIExpression()), !dbg !2724
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2723, metadata !DIExpression()), !dbg !2724
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2725
  ret i32 %call, !dbg !2726
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2727 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2731, metadata !DIExpression()), !dbg !2735
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2732, metadata !DIExpression()), !dbg !2735
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2733, metadata !DIExpression()), !dbg !2735
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2734, metadata !DIExpression()), !dbg !2735
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2736
  ret i32 %call, !dbg !2737
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @add_to_value(i32 %v, %struct.pre_expr_d* %e) local_unnamed_addr #5 !dbg !2738 {
entry:
  call void @llvm.dbg.value(metadata i32 %v, metadata !2742, metadata !DIExpression()), !dbg !2745
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %e, metadata !2743, metadata !DIExpression()), !dbg !2745
  %call = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %e) #7, !dbg !2746
  %cmp = icmp eq i32 %call, %v, !dbg !2746
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !2746

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 601, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2746
  br label %cond.end, !dbg !2746

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !2747
  %base = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %0, i64 0, i32 0, !dbg !2747
  %call5 = tail call fastcc i32 @VEC_bitmap_set_t_base_length(%struct.VEC_bitmap_set_t_base* %base) #7, !dbg !2747
  %cmp6 = icmp ugt i32 %call5, %v, !dbg !2749
  br i1 %cmp6, label %if.end, label %if.then, !dbg !2750

if.then:                                          ; preds = %cond.end
  %add = add i32 %v, 1, !dbg !2751
  tail call fastcc void @VEC_bitmap_set_t_heap_safe_grow_cleared(%struct.VEC_bitmap_set_t_heap** nonnull @value_expressions, i32 %add) #7, !dbg !2751
  br label %if.end, !dbg !2753

if.end:                                           ; preds = %cond.end, %if.then
  %1 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !2754
  %base9 = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %1, i64 0, i32 0, !dbg !2754
  %call13 = tail call fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_index(%struct.VEC_bitmap_set_t_base* %base9, i32 %v) #7, !dbg !2754
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call13, metadata !2744, metadata !DIExpression()), !dbg !2745
  %tobool14 = icmp eq %struct.bitmap_set* %call13, null, !dbg !2755
  br i1 %tobool14, label %if.then15, label %if.end24, !dbg !2757

if.then15:                                        ; preds = %if.end
  %call16 = tail call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !2758
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call16, metadata !2744, metadata !DIExpression()), !dbg !2745
  %2 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !2760
  %base19 = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %2, i64 0, i32 0, !dbg !2760
  %call23 = tail call fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_replace(%struct.VEC_bitmap_set_t_base* %base19, i32 %v, %struct.bitmap_set* %call16) #7, !dbg !2760
  br label %if.end24, !dbg !2761

if.end24:                                         ; preds = %if.end, %if.then15
  %set.0 = phi %struct.bitmap_set* [ %call13, %if.end ], [ %call16, %if.then15 ], !dbg !2745
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set.0, metadata !2744, metadata !DIExpression()), !dbg !2745
  tail call fastcc void @bitmap_insert_into_set_1(%struct.bitmap_set* %set.0, %struct.pre_expr_d* %e, i32 %v, i8 zeroext 1) #7, !dbg !2762
  ret void, !dbg !2763
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %expr) unnamed_addr #5 !dbg !2764 {
entry:
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !2768, metadata !DIExpression()), !dbg !2772
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 0, !dbg !2773
  %0 = load i32, i32* %kind, align 8, !dbg !2773
  switch i32 %0, label %sw.default [
    i32 3, label %sw.bb
    i32 0, label %sw.bb4
    i32 1, label %sw.bb7
    i32 2, label %sw.bb10
  ], !dbg !2774

sw.bb:                                            ; preds = %entry
  %constant = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, i32 0, !dbg !2775
  %1 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !2775
  %call = tail call i32 @get_constant_value_id(%union.tree_node* %1) #6, !dbg !2776
  call void @llvm.dbg.value(metadata i32 %call, metadata !2769, metadata !DIExpression()), !dbg !2777
  %cmp = icmp eq i32 %call, 0, !dbg !2778
  br i1 %cmp, label %if.then, label %return, !dbg !2780

if.then:                                          ; preds = %sw.bb
  %2 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !2781
  %call3 = tail call i32 @get_or_alloc_constant_value_id(%union.tree_node* %2) #6, !dbg !2783
  call void @llvm.dbg.value(metadata i32 %call3, metadata !2769, metadata !DIExpression()), !dbg !2777
  tail call void @add_to_value(i32 %call3, %struct.pre_expr_d* %expr) #7, !dbg !2784
  br label %return, !dbg !2785

sw.bb4:                                           ; preds = %entry
  %name = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, i32 0, !dbg !2786
  %3 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !2786
  %call6 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %3) #6, !dbg !2787
  %value_id = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call6, i64 0, i32 2, !dbg !2788
  %4 = load i32, i32* %value_id, align 8, !dbg !2788
  br label %return, !dbg !2789

sw.bb7:                                           ; preds = %entry
  %u8 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, !dbg !2790
  %nary = bitcast %union.pre_expr_union_d* %u8 to %struct.vn_nary_op_s**, !dbg !2790
  %5 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %nary, align 8, !dbg !2790
  %value_id9 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %5, i64 0, i32 0, !dbg !2791
  %6 = load i32, i32* %value_id9, align 8, !dbg !2791
  br label %return, !dbg !2792

sw.bb10:                                          ; preds = %entry
  %u11 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, !dbg !2793
  %reference = bitcast %union.pre_expr_union_d* %u11 to %struct.vn_reference_s**, !dbg !2793
  %7 = load %struct.vn_reference_s*, %struct.vn_reference_s** %reference, align 8, !dbg !2793
  %value_id12 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %7, i64 0, i32 0, !dbg !2794
  %8 = load i32, i32* %value_id12, align 8, !dbg !2794
  br label %return, !dbg !2795

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2796
  br label %return, !dbg !2797

return:                                           ; preds = %sw.bb, %if.then, %sw.default, %sw.bb10, %sw.bb7, %sw.bb4
  %retval.0 = phi i32 [ 0, %sw.default ], [ %8, %sw.bb10 ], [ %6, %sw.bb7 ], [ %4, %sw.bb4 ], [ %call3, %if.then ], [ %call, %sw.bb ], !dbg !2772
  ret i32 %retval.0, !dbg !2798
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_bitmap_set_t_base_length(%struct.VEC_bitmap_set_t_base* %vec_) unnamed_addr #0 !dbg !2799 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_set_t_base* %vec_, metadata !2805, metadata !DIExpression()), !dbg !2806
  %tobool = icmp eq %struct.VEC_bitmap_set_t_base* %vec_, null, !dbg !2807
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2807

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_bitmap_set_t_base, %struct.VEC_bitmap_set_t_base* %vec_, i64 0, i32 0, !dbg !2807
  %0 = load i32, i32* %num, align 8, !dbg !2807
  br label %cond.end, !dbg !2807

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2807
  ret i32 %cond, !dbg !2807
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_bitmap_set_t_heap_safe_grow_cleared(%struct.VEC_bitmap_set_t_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !2808 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_set_t_heap** @value_expressions, metadata !2813, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.value(metadata i32 %size_, metadata !2814, metadata !DIExpression()), !dbg !2816
  %0 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !2817
  %tobool = icmp eq %struct.VEC_bitmap_set_t_heap* %0, null, !dbg !2817
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2817

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %0, i64 0, i32 0, !dbg !2817
  br label %cond.end, !dbg !2817

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_bitmap_set_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2817
  %call = tail call fastcc i32 @VEC_bitmap_set_t_base_length(%struct.VEC_bitmap_set_t_base* %cond) #7, !dbg !2817
  call void @llvm.dbg.value(metadata i32 %call, metadata !2815, metadata !DIExpression()), !dbg !2816
  tail call fastcc void @VEC_bitmap_set_t_heap_safe_grow(%struct.VEC_bitmap_set_t_heap** nonnull @value_expressions, i32 %size_) #7, !dbg !2817
  %1 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !2817
  %tobool1 = icmp eq %struct.VEC_bitmap_set_t_heap* %1, null, !dbg !2817
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !2817

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %1, i64 0, i32 0, !dbg !2817
  br label %cond.end5, !dbg !2817

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_bitmap_set_t_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !2817
  %call7 = tail call fastcc %struct.bitmap_set** @VEC_bitmap_set_t_base_address(%struct.VEC_bitmap_set_t_base* %cond6) #7, !dbg !2817
  %idxprom = sext i32 %call to i64, !dbg !2817
  %arrayidx = getelementptr inbounds %struct.bitmap_set*, %struct.bitmap_set** %call7, i64 %idxprom, !dbg !2817
  %2 = bitcast %struct.bitmap_set** %arrayidx to i8*, !dbg !2817
  %sub = sub nsw i32 %size_, %call, !dbg !2817
  %conv = sext i32 %sub to i64, !dbg !2817
  %mul = shl nsw i64 %conv, 3, !dbg !2817
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !2817
  ret void, !dbg !2817
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_index(%struct.VEC_bitmap_set_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2818 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_set_t_base* %vec_, metadata !2822, metadata !DIExpression()), !dbg !2824
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2823, metadata !DIExpression()), !dbg !2824
  br label %land.end, !dbg !2825

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2825
  %arrayidx = getelementptr inbounds %struct.VEC_bitmap_set_t_base, %struct.VEC_bitmap_set_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2825
  %0 = load %struct.bitmap_set*, %struct.bitmap_set** %arrayidx, align 8, !dbg !2825
  ret %struct.bitmap_set* %0, !dbg !2825
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.bitmap_set* @bitmap_set_new() unnamed_addr #5 !dbg !2826 {
entry:
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @bitmap_set_pool, align 8, !dbg !2831
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %0) #6, !dbg !2832
  %1 = bitcast i8* %call to %struct.bitmap_set*, !dbg !2833
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %1, metadata !2830, metadata !DIExpression()), !dbg !2834
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @grand_bitmap_obstack) #6, !dbg !2835
  %expressions = bitcast i8* %call to %struct.bitmap_head_def**, !dbg !2836
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** %expressions, align 8, !dbg !2837
  %call2 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @grand_bitmap_obstack) #6, !dbg !2838
  %values = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2839
  %2 = bitcast i8* %values to %struct.bitmap_head_def**, !dbg !2839
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** %2, align 8, !dbg !2840
  ret %struct.bitmap_set* %1, !dbg !2841
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_replace(%struct.VEC_bitmap_set_t_base* %vec_, i32 %ix_, %struct.bitmap_set* %obj_) unnamed_addr #0 !dbg !2842 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_set_t_base* %vec_, metadata !2847, metadata !DIExpression()), !dbg !2851
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2848, metadata !DIExpression()), !dbg !2851
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %obj_, metadata !2849, metadata !DIExpression()), !dbg !2851
  %idxprom = zext i32 %ix_ to i64, !dbg !2852
  %arrayidx = getelementptr inbounds %struct.VEC_bitmap_set_t_base, %struct.VEC_bitmap_set_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2852
  %0 = load %struct.bitmap_set*, %struct.bitmap_set** %arrayidx, align 8, !dbg !2852
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %0, metadata !2850, metadata !DIExpression()), !dbg !2851
  store %struct.bitmap_set* %obj_, %struct.bitmap_set** %arrayidx, align 8, !dbg !2852
  ret %struct.bitmap_set* %0, !dbg !2852
}

; Function Attrs: nounwind uwtable
define internal fastcc void @bitmap_insert_into_set_1(%struct.bitmap_set* %set, %struct.pre_expr_d* %expr, i32 %val, i8 zeroext %allow_constants) unnamed_addr #5 !dbg !2853 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !2857, metadata !DIExpression()), !dbg !2861
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !2858, metadata !DIExpression()), !dbg !2861
  call void @llvm.dbg.value(metadata i32 %val, metadata !2859, metadata !DIExpression()), !dbg !2861
  call void @llvm.dbg.value(metadata i8 %allow_constants, metadata !2860, metadata !DIExpression()), !dbg !2861
  %tobool = icmp eq i8 %allow_constants, 0, !dbg !2862
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2864

lor.lhs.false:                                    ; preds = %entry
  %call = tail call zeroext i8 @value_id_constant_p(i32 %val) #6, !dbg !2865
  %tobool1 = icmp eq i8 %call, 0, !dbg !2865
  br i1 %tobool1, label %if.then, label %if.end, !dbg !2866

if.then:                                          ; preds = %lor.lhs.false, %entry
  %values = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 1, !dbg !2867
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !2867
  %call2 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %val) #6, !dbg !2869
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 0, !dbg !2870
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !2870
  %call3 = tail call fastcc i32 @get_or_alloc_expression_id(%struct.pre_expr_d* %expr) #7, !dbg !2871
  %call4 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %1, i32 %call3) #6, !dbg !2872
  br label %if.end, !dbg !2873

if.end:                                           ; preds = %lor.lhs.false, %if.then
  ret void, !dbg !2874
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_pre_expr(%struct.pre_expr_d* %e) local_unnamed_addr #5 !dbg !2875 {
entry:
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %e, metadata !2879, metadata !DIExpression()), !dbg !2880
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2881
  tail call fastcc void @print_pre_expr(%struct._IO_FILE* %0, %struct.pre_expr_d* %e) #7, !dbg !2882
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2883
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2884
  ret void, !dbg !2885
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_pre_expr(%struct._IO_FILE* %outfile, %struct.pre_expr_d* %expr) unnamed_addr #5 !dbg !2886 {
entry:
  %vro = alloca %struct.vn_reference_op_struct*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outfile, metadata !2891, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !2892, metadata !DIExpression()), !dbg !2907
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 0, !dbg !2908
  %0 = load i32, i32* %kind, align 8, !dbg !2908
  switch i32 %0, label %sw.epilog [
    i32 3, label %sw.bb
    i32 0, label %sw.bb1
    i32 1, label %sw.bb3
    i32 2, label %sw.bb15
  ], !dbg !2909

sw.bb:                                            ; preds = %entry
  %constant = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, i32 0, !dbg !2910
  %1 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !2910
  tail call void @print_generic_expr(%struct._IO_FILE* %outfile, %union.tree_node* %1, i32 0) #6, !dbg !2911
  br label %sw.epilog, !dbg !2912

sw.bb1:                                           ; preds = %entry
  %name = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, i32 0, !dbg !2913
  %2 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !2913
  tail call void @print_generic_expr(%struct._IO_FILE* %outfile, %union.tree_node* %2, i32 0) #6, !dbg !2914
  br label %sw.epilog, !dbg !2915

sw.bb3:                                           ; preds = %entry
  %u4 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, !dbg !2916
  %nary5 = bitcast %union.pre_expr_union_d* %u4 to %struct.vn_nary_op_s**, !dbg !2916
  %3 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %nary5, align 8, !dbg !2916
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %3, metadata !2896, metadata !DIExpression()), !dbg !2917
  %opcode = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %3, i64 0, i32 1, !dbg !2918
  %bf.load = load i32, i32* %opcode, align 4, !dbg !2918
  %bf.clear = and i32 %bf.load, 65535, !dbg !2918
  %idxprom = zext i32 %bf.clear to i64, !dbg !2919
  %arrayidx = getelementptr inbounds [0 x i8*], [0 x i8*]* @tree_code_name, i64 0, i64 %idxprom, !dbg !2919
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !2919
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8* %4) #6, !dbg !2920
  call void @llvm.dbg.value(metadata i32 0, metadata !2893, metadata !DIExpression()), !dbg !2917
  br label %for.cond, !dbg !2921

for.cond:                                         ; preds = %for.inc, %sw.bb3
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %sw.bb3 ], !dbg !2923
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2893, metadata !DIExpression()), !dbg !2917
  %bf.load6 = load i32, i32* %opcode, align 4, !dbg !2924
  %bf.lshr = lshr i32 %bf.load6, 16, !dbg !2924
  %5 = zext i32 %bf.lshr to i64, !dbg !2926
  %cmp = icmp ult i64 %indvars.iv, %5, !dbg !2926
  br i1 %cmp, label %for.body, label %for.end, !dbg !2927

for.body:                                         ; preds = %for.cond
  %arrayidx8 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %3, i64 0, i32 5, i64 %indvars.iv, !dbg !2928
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx8, align 8, !dbg !2928
  tail call void @print_generic_expr(%struct._IO_FILE* %outfile, %union.tree_node* %6, i32 0) #6, !dbg !2930
  %bf.load10 = load i32, i32* %opcode, align 4, !dbg !2931
  %bf.lshr11 = lshr i32 %bf.load10, 16, !dbg !2931
  %sub = add nsw i32 %bf.lshr11, -1, !dbg !2933
  %7 = zext i32 %sub to i64, !dbg !2934
  %cmp12 = icmp eq i64 %indvars.iv, %7, !dbg !2934
  br i1 %cmp12, label %for.inc, label %if.then, !dbg !2935

if.then:                                          ; preds = %for.body
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2936
  br label %for.inc, !dbg !2936

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2937
  call void @llvm.dbg.value(metadata i32 undef, metadata !2893, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2917
  br label %for.cond, !dbg !2938, !llvm.loop !2939

for.end:                                          ; preds = %for.cond
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2941
  br label %sw.epilog, !dbg !2942

sw.bb15:                                          ; preds = %entry
  %8 = bitcast %struct.vn_reference_op_struct** %vro to i8*, !dbg !2943
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8, !dbg !2943
  %u17 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, !dbg !2944
  %reference = bitcast %union.pre_expr_union_d* %u17 to %struct.vn_reference_s**, !dbg !2944
  %9 = load %struct.vn_reference_s*, %struct.vn_reference_s** %reference, align 8, !dbg !2944
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %9, metadata !2902, metadata !DIExpression()), !dbg !2945
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !2946
  call void @llvm.dbg.value(metadata i32 0, metadata !2901, metadata !DIExpression()), !dbg !2945
  %operands = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %9, i64 0, i32 5, !dbg !2947
  br label %for.cond19, !dbg !2948

for.cond19:                                       ; preds = %for.inc73, %sw.bb15
  %i16.0 = phi i32 [ 0, %sw.bb15 ], [ %inc74, %for.inc73 ], !dbg !2949
  call void @llvm.dbg.value(metadata i32 %i16.0, metadata !2901, metadata !DIExpression()), !dbg !2945
  %10 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !2950
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_heap* %10, null, !dbg !2950
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2950

cond.true:                                        ; preds = %for.cond19
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %10, i64 0, i32 0, !dbg !2950
  br label %cond.end, !dbg !2950

cond.end:                                         ; preds = %for.cond19, %cond.true
  %cond = phi %struct.VEC_vn_reference_op_s_base* [ %base, %cond.true ], [ null, %for.cond19 ], !dbg !2950
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %vro, metadata !2897, metadata !DIExpression(DW_OP_deref)), !dbg !2945
  %call21 = call fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %cond, i32 %i16.0, %struct.vn_reference_op_struct** nonnull %vro) #7, !dbg !2950
  %tobool22 = icmp eq i32 %call21, 0, !dbg !2951
  br i1 %tobool22, label %for.end75, label %for.body23, !dbg !2951

for.body23:                                       ; preds = %cond.end
  call void @llvm.dbg.value(metadata i8 0, metadata !2903, metadata !DIExpression()), !dbg !2952
  %11 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !2953
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %11, metadata !2897, metadata !DIExpression()), !dbg !2945
  %opcode24 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %11, i64 0, i32 0, !dbg !2955
  %12 = load i32, i32* %opcode24, align 8, !dbg !2955
  %cmp25 = icmp eq i32 %12, 141, !dbg !2956
  br i1 %cmp25, label %if.end39, label %land.lhs.true, !dbg !2957

land.lhs.true:                                    ; preds = %for.body23
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %11, metadata !2897, metadata !DIExpression()), !dbg !2945
  %idxprom27 = sext i32 %12 to i64, !dbg !2958
  %arrayidx28 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom27, !dbg !2958
  %13 = load i32, i32* %arrayidx28, align 4, !dbg !2958
  %cmp29 = icmp eq i32 %13, 3, !dbg !2959
  br i1 %cmp29, label %if.end39, label %if.then30, !dbg !2960

if.then30:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %11, metadata !2897, metadata !DIExpression()), !dbg !2945
  %idxprom32 = zext i32 %12 to i64, !dbg !2961
  %arrayidx33 = getelementptr inbounds [0 x i8*], [0 x i8*]* @tree_code_name, i64 0, i64 %idxprom32, !dbg !2961
  %14 = load i8*, i8** %arrayidx33, align 8, !dbg !2961
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* %14) #6, !dbg !2963
  %15 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !2964
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %15, metadata !2897, metadata !DIExpression()), !dbg !2945
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %15, i64 0, i32 2, !dbg !2966
  %16 = load %union.tree_node*, %union.tree_node** %op0, align 8, !dbg !2966
  %tobool35 = icmp eq %union.tree_node* %16, null, !dbg !2964
  br i1 %tobool35, label %if.end39, label %if.then36, !dbg !2967

if.then36:                                        ; preds = %if.then30
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !2968
  call void @llvm.dbg.value(metadata i8 1, metadata !2903, metadata !DIExpression()), !dbg !2952
  %.pre = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !2970
  br label %if.end39, !dbg !2972

if.end39:                                         ; preds = %if.then30, %land.lhs.true, %for.body23, %if.then36
  %17 = phi %struct.vn_reference_op_struct* [ %11, %land.lhs.true ], [ %11, %for.body23 ], [ %.pre, %if.then36 ], [ %15, %if.then30 ], !dbg !2970
  %closebrace.1 = phi i8 [ 0, %land.lhs.true ], [ 0, %for.body23 ], [ 1, %if.then36 ], [ 0, %if.then30 ], !dbg !2952
  call void @llvm.dbg.value(metadata i8 %closebrace.1, metadata !2903, metadata !DIExpression()), !dbg !2952
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %17, metadata !2897, metadata !DIExpression()), !dbg !2945
  %op040 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %17, i64 0, i32 2, !dbg !2973
  %18 = load %union.tree_node*, %union.tree_node** %op040, align 8, !dbg !2973
  %tobool41 = icmp eq %union.tree_node* %18, null, !dbg !2970
  br i1 %tobool41, label %if.end54, label %if.then42, !dbg !2974

if.then42:                                        ; preds = %if.end39
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %17, metadata !2897, metadata !DIExpression()), !dbg !2945
  call void @print_generic_expr(%struct._IO_FILE* %outfile, %union.tree_node* nonnull %18, i32 0) #6, !dbg !2975
  %19 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !2977
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %19, metadata !2897, metadata !DIExpression()), !dbg !2945
  %op1 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %19, i64 0, i32 3, !dbg !2979
  %20 = load %union.tree_node*, %union.tree_node** %op1, align 8, !dbg !2979
  %tobool44 = icmp eq %union.tree_node* %20, null, !dbg !2977
  br i1 %tobool44, label %if.end48, label %if.then45, !dbg !2980

if.then45:                                        ; preds = %if.then42
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2981
  %21 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !2983
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %21, metadata !2897, metadata !DIExpression()), !dbg !2945
  %op147 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %21, i64 0, i32 3, !dbg !2984
  %22 = load %union.tree_node*, %union.tree_node** %op147, align 8, !dbg !2984
  call void @print_generic_expr(%struct._IO_FILE* %outfile, %union.tree_node* %22, i32 0) #6, !dbg !2985
  %.pre1 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !2986
  br label %if.end48, !dbg !2988

if.end48:                                         ; preds = %if.then42, %if.then45
  %23 = phi %struct.vn_reference_op_struct* [ %19, %if.then42 ], [ %.pre1, %if.then45 ], !dbg !2986
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %23, metadata !2897, metadata !DIExpression()), !dbg !2945
  %op2 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %23, i64 0, i32 4, !dbg !2989
  %24 = load %union.tree_node*, %union.tree_node** %op2, align 8, !dbg !2989
  %tobool49 = icmp eq %union.tree_node* %24, null, !dbg !2986
  br i1 %tobool49, label %if.end54, label %if.then50, !dbg !2990

if.then50:                                        ; preds = %if.end48
  %call51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2991
  %25 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !2993
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %25, metadata !2897, metadata !DIExpression()), !dbg !2945
  %op252 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %25, i64 0, i32 4, !dbg !2994
  %26 = load %union.tree_node*, %union.tree_node** %op252, align 8, !dbg !2994
  call void @print_generic_expr(%struct._IO_FILE* %outfile, %union.tree_node* %26, i32 0) #6, !dbg !2995
  br label %if.end54, !dbg !2996

if.end54:                                         ; preds = %if.end48, %if.end39, %if.then50
  %tobool55 = icmp eq i8 %closebrace.1, 0, !dbg !2997
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !2999

if.then56:                                        ; preds = %if.end54
  %call57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3000
  br label %if.end58, !dbg !3000

if.end58:                                         ; preds = %if.end54, %if.then56
  %27 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !3001
  %tobool60 = icmp eq %struct.VEC_vn_reference_op_s_heap* %27, null, !dbg !3001
  br i1 %tobool60, label %cond.end65, label %cond.true61, !dbg !3001

cond.true61:                                      ; preds = %if.end58
  %base63 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %27, i64 0, i32 0, !dbg !3001
  br label %cond.end65, !dbg !3001

cond.end65:                                       ; preds = %if.end58, %cond.true61
  %cond66 = phi %struct.VEC_vn_reference_op_s_base* [ %base63, %cond.true61 ], [ null, %if.end58 ], !dbg !3001
  %call67 = call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %cond66) #7, !dbg !3001
  %sub68 = add i32 %call67, -1, !dbg !3003
  %cmp69 = icmp eq i32 %i16.0, %sub68, !dbg !3004
  br i1 %cmp69, label %for.inc73, label %if.then70, !dbg !3005

if.then70:                                        ; preds = %cond.end65
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3006
  br label %for.inc73, !dbg !3006

for.inc73:                                        ; preds = %cond.end65, %if.then70
  %inc74 = add i32 %i16.0, 1, !dbg !3007
  call void @llvm.dbg.value(metadata i32 %inc74, metadata !2901, metadata !DIExpression()), !dbg !2945
  br label %for.cond19, !dbg !3008, !llvm.loop !3009

for.end75:                                        ; preds = %cond.end
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3011
  %vuse = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %9, i64 0, i32 2, !dbg !3012
  %28 = load %union.tree_node*, %union.tree_node** %vuse, align 8, !dbg !3012
  %tobool77 = icmp eq %union.tree_node* %28, null, !dbg !3014
  br i1 %tobool77, label %if.end81, label %if.then78, !dbg !3015

if.then78:                                        ; preds = %for.end75
  %call79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !3016
  %29 = load %union.tree_node*, %union.tree_node** %vuse, align 8, !dbg !3018
  call void @print_generic_expr(%struct._IO_FILE* %outfile, %union.tree_node* %29, i32 0) #6, !dbg !3019
  br label %if.end81, !dbg !3020

if.end81:                                         ; preds = %for.end75, %if.then78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8, !dbg !3021
  br label %sw.epilog, !dbg !3022

sw.epilog:                                        ; preds = %entry, %if.end81, %for.end, %sw.bb1, %sw.bb
  ret void, !dbg !3023
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_bitmap_set(%struct.bitmap_set* %set) local_unnamed_addr #5 !dbg !3024 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !3028, metadata !DIExpression()), !dbg !3029
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3030
  tail call fastcc void @print_bitmap_set(%struct._IO_FILE* %0, %struct.bitmap_set* %set, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 0) #7, !dbg !3031
  ret void, !dbg !3032
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_bitmap_set(%struct._IO_FILE* %outfile, %struct.bitmap_set* %set, i8* %setname, i32 %blockindex) unnamed_addr #5 !dbg !3033 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outfile, metadata !3037, metadata !DIExpression()), !dbg !3057
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !3038, metadata !DIExpression()), !dbg !3057
  call void @llvm.dbg.value(metadata i8* %setname, metadata !3039, metadata !DIExpression()), !dbg !3057
  call void @llvm.dbg.value(metadata i32 %blockindex, metadata !3040, metadata !DIExpression()), !dbg !3057
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8* %setname, i32 %blockindex) #6, !dbg !3058
  %tobool = icmp eq %struct.bitmap_set* %set, null, !dbg !3059
  br i1 %tobool, label %if.end9, label %if.then, !dbg !3060

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8 1, metadata !3041, metadata !DIExpression()), !dbg !3061
  %0 = bitcast i32* %i to i8*, !dbg !3062
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3062
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3063
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !3063
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 0, !dbg !3064
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !3064
  call void @llvm.dbg.value(metadata i32* %i, metadata !3044, metadata !DIExpression(DW_OP_deref)), !dbg !3061
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3045, metadata !DIExpression(DW_OP_deref)), !dbg !3061
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %2, i32 0, i32* nonnull %i) #7, !dbg !3064
  br label %for.cond, !dbg !3064

for.cond:                                         ; preds = %if.end, %if.then
  %first.0 = phi i8 [ 1, %if.then ], [ 0, %if.end ], !dbg !3061
  call void @llvm.dbg.value(metadata i8 %first.0, metadata !3041, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.value(metadata i32* %i, metadata !3044, metadata !DIExpression(DW_OP_deref)), !dbg !3061
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3045, metadata !DIExpression(DW_OP_deref)), !dbg !3061
  %call1 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3065
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3064
  br i1 %tobool2, label %for.end, label %for.body, !dbg !3064

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !3066
  call void @llvm.dbg.value(metadata i32 %3, metadata !3044, metadata !DIExpression()), !dbg !3061
  %call3 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %3) #7, !dbg !3067
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call3, metadata !3053, metadata !DIExpression()), !dbg !3068
  %tobool4 = icmp eq i8 %first.0, 0, !dbg !3069
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !3071

if.then5:                                         ; preds = %for.body
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !3072
  br label %if.end, !dbg !3072

if.end:                                           ; preds = %for.body, %if.then5
  call void @llvm.dbg.value(metadata i8 0, metadata !3041, metadata !DIExpression()), !dbg !3061
  call fastcc void @print_pre_expr(%struct._IO_FILE* %outfile, %struct.pre_expr_d* %call3) #7, !dbg !3073
  %call7 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call3) #7, !dbg !3074
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i32 %call7) #6, !dbg !3075
  call void @llvm.dbg.value(metadata i32* %i, metadata !3044, metadata !DIExpression(DW_OP_deref)), !dbg !3061
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3045, metadata !DIExpression(DW_OP_deref)), !dbg !3061
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3065
  br label %for.cond, !dbg !3065, !llvm.loop !3076

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !3078
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3078
  br label %if.end9, !dbg !3079

if.end9:                                          ; preds = %entry, %for.end
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !3080
  ret void, !dbg !3081
}

; Function Attrs: nounwind uwtable
define dso_local void @print_value_expressions(%struct._IO_FILE* %outfile, i32 %val) local_unnamed_addr #5 !dbg !3082 {
entry:
  %s = alloca [10 x i8], align 1
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outfile, metadata !3086, metadata !DIExpression()), !dbg !3095
  call void @llvm.dbg.value(metadata i32 %val, metadata !3087, metadata !DIExpression()), !dbg !3095
  %0 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !3096
  %base = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %0, i64 0, i32 0, !dbg !3096
  %call = tail call fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_index(%struct.VEC_bitmap_set_t_base* %base, i32 %val) #7, !dbg !3096
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call, metadata !3088, metadata !DIExpression()), !dbg !3095
  %tobool1 = icmp eq %struct.bitmap_set* %call, null, !dbg !3097
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3098

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds [10 x i8], [10 x i8]* %s, i64 0, i64 0, !dbg !3099
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %1) #8, !dbg !3099
  call void @llvm.dbg.declare(metadata [10 x i8]* %s, metadata !3089, metadata !DIExpression()), !dbg !3100
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i32 %val) #6, !dbg !3101
  call fastcc void @print_bitmap_set(%struct._IO_FILE* %outfile, %struct.bitmap_set* nonnull %call, i8* nonnull %1, i32 0) #7, !dbg !3102
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %1) #8, !dbg !3103
  br label %if.end, !dbg !3104

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3105
}

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_value_expressions(i32 %val) local_unnamed_addr #5 !dbg !3106 {
entry:
  call void @llvm.dbg.value(metadata i32 %val, metadata !3110, metadata !DIExpression()), !dbg !3111
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3112
  tail call void @print_value_expressions(%struct._IO_FILE* %0, i32 %val) #7, !dbg !3113
  ret void, !dbg !3114
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_pre() #5 !dbg !3115 {
entry:
  %0 = load i32, i32* @flag_tree_pre, align 4, !dbg !3116
  %cmp = icmp ne i32 %0, 0, !dbg !3117
  %conv1 = zext i1 %cmp to i8, !dbg !3116
  ret i8 %conv1, !dbg !3118
}

; Function Attrs: nounwind uwtable
define internal i32 @do_pre() #5 !dbg !3119 {
entry:
  %call = tail call fastcc i32 @execute_pre(i8 zeroext 0) #7, !dbg !3120
  ret i32 %call, !dbg !3121
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_fre() #5 !dbg !3122 {
entry:
  %0 = load i32, i32* @flag_tree_fre, align 4, !dbg !3123
  %cmp = icmp ne i32 %0, 0, !dbg !3124
  %conv1 = zext i1 %cmp to i8, !dbg !3123
  ret i8 %conv1, !dbg !3125
}

; Function Attrs: nounwind uwtable
define internal i32 @execute_fre() #5 !dbg !3126 {
entry:
  %call = tail call fastcc i32 @execute_pre(i8 zeroext 1) #7, !dbg !3127
  ret i32 %call, !dbg !3128
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_bitmap_set_t_heap_safe_grow(%struct.VEC_bitmap_set_t_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !3129 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_set_t_heap** @value_expressions, metadata !3131, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.value(metadata i32 %size_, metadata !3132, metadata !DIExpression()), !dbg !3133
  %cmp = icmp sgt i32 %size_, -1, !dbg !3134
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3134

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !3134
  %tobool = icmp eq %struct.VEC_bitmap_set_t_heap* %0, null, !dbg !3134
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3134

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %0, i64 0, i32 0, !dbg !3134
  br label %cond.end, !dbg !3134

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_bitmap_set_t_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !3134
  %call = tail call fastcc i32 @VEC_bitmap_set_t_base_length(%struct.VEC_bitmap_set_t_base* %cond) #7, !dbg !3134
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !3134
  %tobool2 = icmp eq %struct.VEC_bitmap_set_t_heap* %1, null, !dbg !3134
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !3134

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %1, i64 0, i32 0, i32 0, !dbg !3134
  %2 = load i32, i32* %num, align 8, !dbg !3134
  br label %cond.end11, !dbg !3134

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !3134
  %sub = sub nsw i32 %size_, %cond12, !dbg !3134
  %call13 = tail call fastcc i32 @VEC_bitmap_set_t_heap_reserve_exact(%struct.VEC_bitmap_set_t_heap** nonnull @value_expressions, i32 %sub) #7, !dbg !3134
  %3 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !3134
  %num20 = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %3, i64 0, i32 0, i32 0, !dbg !3134
  store i32 %size_, i32* %num20, align 8, !dbg !3134
  ret void, !dbg !3134
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.bitmap_set** @VEC_bitmap_set_t_base_address(%struct.VEC_bitmap_set_t_base* %vec_) unnamed_addr #0 !dbg !3135 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_set_t_base* %vec_, metadata !3140, metadata !DIExpression()), !dbg !3141
  %tobool = icmp eq %struct.VEC_bitmap_set_t_base* %vec_, null, !dbg !3142
  %arraydecay = getelementptr inbounds %struct.VEC_bitmap_set_t_base, %struct.VEC_bitmap_set_t_base* %vec_, i64 0, i32 2, i64 0, !dbg !3142
  %cond = select i1 %tobool, %struct.bitmap_set** null, %struct.bitmap_set** %arraydecay, !dbg !3142
  ret %struct.bitmap_set** %cond, !dbg !3142
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_bitmap_set_t_heap_reserve_exact(%struct.VEC_bitmap_set_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3143 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_set_t_heap** @value_expressions, metadata !3147, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3148, metadata !DIExpression()), !dbg !3150
  %0 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !3151
  %tobool = icmp eq %struct.VEC_bitmap_set_t_heap* %0, null, !dbg !3151
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3151

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %0, i64 0, i32 0, !dbg !3151
  br label %cond.end, !dbg !3151

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_bitmap_set_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3151
  %call = tail call fastcc i32 @VEC_bitmap_set_t_base_space(%struct.VEC_bitmap_set_t_base* %cond, i32 %alloc_) #7, !dbg !3151
  %tobool1 = icmp eq i32 %call, 0, !dbg !3151
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !3151
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !3149, metadata !DIExpression()), !dbg !3150
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3151

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_bitmap_set_t_heap** @value_expressions to i8**), align 8, !dbg !3152
  %call3 = tail call i8* @vec_heap_p_reserve_exact(i8* %1, i32 %alloc_) #6, !dbg !3152
  store i8* %call3, i8** bitcast (%struct.VEC_bitmap_set_t_heap** @value_expressions to i8**), align 8, !dbg !3152
  br label %if.end, !dbg !3152

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !3151
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_bitmap_set_t_base_space(%struct.VEC_bitmap_set_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3154 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_set_t_base* %vec_, metadata !3158, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3159, metadata !DIExpression()), !dbg !3160
  %tobool = icmp eq %struct.VEC_bitmap_set_t_base* %vec_, null, !dbg !3161
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3161

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_bitmap_set_t_base, %struct.VEC_bitmap_set_t_base* %vec_, i64 0, i32 1, !dbg !3161
  %0 = load i32, i32* %alloc, align 4, !dbg !3161
  %num = getelementptr inbounds %struct.VEC_bitmap_set_t_base, %struct.VEC_bitmap_set_t_base* %vec_, i64 0, i32 0, !dbg !3161
  %1 = load i32, i32* %num, align 8, !dbg !3161
  %sub = sub i32 %0, %1, !dbg !3161
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !3161
  br label %cond.end, !dbg !3161

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !3161
  br label %cond.end, !dbg !3161

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !3161
  ret i32 %cond, !dbg !3161
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local i32 @get_constant_value_id(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @get_or_alloc_constant_value_id(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.vn_ssa_aux* @VN_INFO(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @value_id_constant_p(i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_or_alloc_expression_id(%struct.pre_expr_d* %expr) unnamed_addr #0 !dbg !3162 {
entry:
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !3164, metadata !DIExpression()), !dbg !3166
  %call = tail call fastcc i32 @lookup_expression_id(%struct.pre_expr_d* %expr) #7, !dbg !3167
  call void @llvm.dbg.value(metadata i32 %call, metadata !3165, metadata !DIExpression()), !dbg !3166
  %cmp = icmp eq i32 %call, 0, !dbg !3168
  br i1 %cmp, label %if.then, label %if.end, !dbg !3170

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc i32 @alloc_expression_id(%struct.pre_expr_d* %expr) #7, !dbg !3171
  br label %cleanup, !dbg !3172

if.end:                                           ; preds = %entry
  %id2 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 1, !dbg !3173
  store i32 %call, i32* %id2, align 4, !dbg !3174
  br label %cleanup, !dbg !3175

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call1, %if.then ], [ %call, %if.end ], !dbg !3166
  ret i32 %retval.0, !dbg !3176
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @lookup_expression_id(%struct.pre_expr_d* %expr) unnamed_addr #0 !dbg !3177 {
entry:
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !3181, metadata !DIExpression()), !dbg !3186
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 0, !dbg !3187
  %0 = load i32, i32* %kind, align 8, !dbg !3187
  %cmp = icmp eq i32 %0, 0, !dbg !3188
  br i1 %cmp, label %if.then, label %if.else, !dbg !3189

if.then:                                          ; preds = %entry
  %name = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, i32 0, !dbg !3190
  %1 = bitcast %union.tree_node** %name to %struct.tree_ssa_name**, !dbg !3190
  %2 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %1, align 8, !dbg !3190
  %version1 = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %2, i64 0, i32 3, !dbg !3190
  %3 = load i32, i32* %version1, align 8, !dbg !3190
  call void @llvm.dbg.value(metadata i32 %3, metadata !3183, metadata !DIExpression()), !dbg !3191
  %4 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !3192
  %base = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %4, i64 0, i32 0, !dbg !3192
  %call = tail call fastcc i32 @VEC_unsigned_base_length(%struct.VEC_unsigned_base* %base) #7, !dbg !3192
  %cmp2 = icmp ugt i32 %call, %3, !dbg !3194
  br i1 %cmp2, label %if.end, label %cleanup15, !dbg !3195

if.end:                                           ; preds = %if.then
  %5 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !3196
  %base6 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %5, i64 0, i32 0, !dbg !3196
  %call10 = tail call fastcc i32 @VEC_unsigned_base_index(%struct.VEC_unsigned_base* %base6, i32 %3) #7, !dbg !3196
  br label %cleanup15, !dbg !3197

if.else:                                          ; preds = %entry
  %6 = load %struct.htab*, %struct.htab** @expression_to_id, align 8, !dbg !3198
  %7 = bitcast %struct.pre_expr_d* %expr to i8*, !dbg !3200
  %call11 = tail call i8** @htab_find_slot(%struct.htab* %6, i8* %7, i32 0) #6, !dbg !3201
  call void @llvm.dbg.value(metadata i8** %call11, metadata !3182, metadata !DIExpression()), !dbg !3186
  %tobool12 = icmp eq i8** %call11, null, !dbg !3202
  br i1 %tobool12, label %cleanup15, label %if.end14, !dbg !3204

if.end14:                                         ; preds = %if.else
  %8 = bitcast i8** %call11 to %struct.pre_expr_d**, !dbg !3205
  %9 = load %struct.pre_expr_d*, %struct.pre_expr_d** %8, align 8, !dbg !3205
  %id = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %9, i64 0, i32 1, !dbg !3206
  %10 = load i32, i32* %id, align 4, !dbg !3206
  br label %cleanup15, !dbg !3207

cleanup15:                                        ; preds = %if.then, %if.else, %if.end, %if.end14
  %retval.1 = phi i32 [ %10, %if.end14 ], [ %call10, %if.end ], [ 0, %if.then ], [ 0, %if.else ], !dbg !3208
  ret i32 %retval.1, !dbg !3209
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @alloc_expression_id(%struct.pre_expr_d* %expr) unnamed_addr #0 !dbg !3210 {
entry:
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !3212, metadata !DIExpression()), !dbg !3217
  %0 = load i32, i32* @next_expression_id, align 4, !dbg !3218
  %cmp = icmp eq i32 %0, -1, !dbg !3218
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3218

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 254, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3218
  %.pre = load i32, i32* @next_expression_id, align 4, !dbg !3219
  br label %cond.end, !dbg !3218

cond.end:                                         ; preds = %entry, %cond.true
  %1 = phi i32 [ %0, %entry ], [ %.pre, %cond.true ], !dbg !3219
  %inc = add i32 %1, 1, !dbg !3219
  store i32 %inc, i32* @next_expression_id, align 4, !dbg !3219
  %id = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 1, !dbg !3220
  store i32 %1, i32* %id, align 4, !dbg !3221
  %call = tail call fastcc %struct.pre_expr_d** @VEC_pre_expr_heap_safe_push(%struct.VEC_pre_expr_heap** nonnull @expressions, %struct.pre_expr_d* %expr) #7, !dbg !3222
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 0, !dbg !3223
  %2 = load i32, i32* %kind, align 8, !dbg !3223
  %cmp1 = icmp eq i32 %2, 0, !dbg !3224
  br i1 %cmp1, label %if.then, label %if.else, !dbg !3225

if.then:                                          ; preds = %cond.end
  %name = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, i32 0, !dbg !3226
  %3 = bitcast %union.tree_node** %name to %struct.tree_ssa_name**, !dbg !3226
  %4 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %3, align 8, !dbg !3226
  %version2 = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %4, i64 0, i32 3, !dbg !3226
  %5 = load i32, i32* %version2, align 8, !dbg !3226
  call void @llvm.dbg.value(metadata i32 %5, metadata !3214, metadata !DIExpression()), !dbg !3227
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3228
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 3, !dbg !3228
  %7 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3228
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %7, i64 0, i32 2, !dbg !3228
  %8 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3228
  %tobool = icmp eq %struct.VEC_tree_gc* %8, null, !dbg !3228
  br i1 %tobool, label %cond.end8, label %cond.true3, !dbg !3228

cond.true3:                                       ; preds = %if.then
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %8, i64 0, i32 0, !dbg !3228
  br label %cond.end8, !dbg !3228

cond.end8:                                        ; preds = %if.then, %cond.true3
  %cond9 = phi %struct.VEC_tree_base* [ %base, %cond.true3 ], [ null, %if.then ], !dbg !3228
  %call10 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond9) #7, !dbg !3228
  %call11 = tail call fastcc i32 @VEC_unsigned_heap_reserve(%struct.VEC_unsigned_heap** nonnull @name_to_id, i32 %call10) #7, !dbg !3228
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3229
  %gimple_df13 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 3, !dbg !3229
  %10 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df13, align 8, !dbg !3229
  %ssa_names14 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %10, i64 0, i32 2, !dbg !3229
  %11 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names14, align 8, !dbg !3229
  %tobool15 = icmp eq %struct.VEC_tree_gc* %11, null, !dbg !3229
  br i1 %tobool15, label %cond.end22, label %cond.true16, !dbg !3229

cond.true16:                                      ; preds = %cond.end8
  %base20 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %11, i64 0, i32 0, !dbg !3229
  br label %cond.end22, !dbg !3229

cond.end22:                                       ; preds = %cond.end8, %cond.true16
  %cond23 = phi %struct.VEC_tree_base* [ %base20, %cond.true16 ], [ null, %cond.end8 ], !dbg !3229
  %call24 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond23) #7, !dbg !3229
  tail call fastcc void @VEC_unsigned_heap_safe_grow_cleared(%struct.VEC_unsigned_heap** nonnull @name_to_id, i32 %call24) #7, !dbg !3229
  %12 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !3230
  %base27 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %12, i64 0, i32 0, !dbg !3230
  %call31 = tail call fastcc i32 @VEC_unsigned_base_index(%struct.VEC_unsigned_base* %base27, i32 %5) #7, !dbg !3230
  %cmp32 = icmp eq i32 %call31, 0, !dbg !3230
  br i1 %cmp32, label %cond.end35, label %cond.true33, !dbg !3230

cond.true33:                                      ; preds = %cond.end22
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 265, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3230
  br label %cond.end35, !dbg !3230

cond.end35:                                       ; preds = %cond.end22, %cond.true33
  %13 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !3231
  %base39 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %13, i64 0, i32 0, !dbg !3231
  %14 = load i32, i32* %id, align 4, !dbg !3231
  %call44 = tail call fastcc i32 @VEC_unsigned_base_replace(%struct.VEC_unsigned_base* %base39, i32 %5, i32 %14) #7, !dbg !3231
  br label %if.end, !dbg !3232

if.else:                                          ; preds = %cond.end
  %15 = load %struct.htab*, %struct.htab** @expression_to_id, align 8, !dbg !3233
  %16 = bitcast %struct.pre_expr_d* %expr to i8*, !dbg !3235
  %call45 = tail call i8** @htab_find_slot(%struct.htab* %15, i8* %16, i32 1) #6, !dbg !3236
  call void @llvm.dbg.value(metadata i8** %call45, metadata !3213, metadata !DIExpression()), !dbg !3217
  %17 = load i8*, i8** %call45, align 8, !dbg !3237
  %tobool46 = icmp eq i8* %17, null, !dbg !3237
  br i1 %tobool46, label %cond.end49, label %cond.true47, !dbg !3237

cond.true47:                                      ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 271, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3237
  br label %cond.end49, !dbg !3237

cond.end49:                                       ; preds = %if.else, %cond.true47
  %18 = bitcast i8** %call45 to %struct.pre_expr_d**, !dbg !3238
  store %struct.pre_expr_d* %expr, %struct.pre_expr_d** %18, align 8, !dbg !3238
  br label %if.end

if.end:                                           ; preds = %cond.end49, %cond.end35
  %19 = load i32, i32* @next_expression_id, align 4, !dbg !3239
  %sub = add i32 %19, -1, !dbg !3240
  ret i32 %sub, !dbg !3241
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_unsigned_base_length(%struct.VEC_unsigned_base* %vec_) unnamed_addr #0 !dbg !3242 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_base* %vec_, metadata !3248, metadata !DIExpression()), !dbg !3249
  %tobool = icmp eq %struct.VEC_unsigned_base* %vec_, null, !dbg !3250
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3250

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 0, !dbg !3250
  %0 = load i32, i32* %num, align 4, !dbg !3250
  br label %cond.end, !dbg !3250

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3250
  ret i32 %cond, !dbg !3250
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_unsigned_base_index(%struct.VEC_unsigned_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3251 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_base* %vec_, metadata !3255, metadata !DIExpression()), !dbg !3257
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3256, metadata !DIExpression()), !dbg !3257
  br label %land.end, !dbg !3258

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3258
  %arrayidx = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3258
  %0 = load i32, i32* %arrayidx, align 4, !dbg !3258
  ret i32 %0, !dbg !3258
}

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.pre_expr_d** @VEC_pre_expr_heap_safe_push(%struct.VEC_pre_expr_heap** %vec_, %struct.pre_expr_d* %obj_) unnamed_addr #0 !dbg !3259 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap** %vec_, metadata !3264, metadata !DIExpression()), !dbg !3266
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %obj_, metadata !3265, metadata !DIExpression()), !dbg !3266
  %call = tail call fastcc i32 @VEC_pre_expr_heap_reserve(%struct.VEC_pre_expr_heap** %vec_, i32 1) #7, !dbg !3267
  %0 = load %struct.VEC_pre_expr_heap*, %struct.VEC_pre_expr_heap** %vec_, align 8, !dbg !3267
  %tobool = icmp eq %struct.VEC_pre_expr_heap* %0, null, !dbg !3267
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3267

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_pre_expr_heap, %struct.VEC_pre_expr_heap* %0, i64 0, i32 0, !dbg !3267
  br label %cond.end, !dbg !3267

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_pre_expr_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3267
  %call1 = tail call fastcc %struct.pre_expr_d** @VEC_pre_expr_base_quick_push(%struct.VEC_pre_expr_base* %cond, %struct.pre_expr_d* %obj_) #7, !dbg !3267
  ret %struct.pre_expr_d** %call1, !dbg !3267
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_unsigned_heap_reserve(%struct.VEC_unsigned_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3268 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap** @name_to_id, metadata !3273, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3274, metadata !DIExpression()), !dbg !3276
  %0 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !3277
  %tobool = icmp eq %struct.VEC_unsigned_heap* %0, null, !dbg !3277
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3277

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %0, i64 0, i32 0, !dbg !3277
  br label %cond.end, !dbg !3277

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_unsigned_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3277
  %call = tail call fastcc i32 @VEC_unsigned_base_space(%struct.VEC_unsigned_base* %cond, i32 %alloc_) #7, !dbg !3277
  %tobool1 = icmp eq i32 %call, 0, !dbg !3277
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !3277
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !3275, metadata !DIExpression()), !dbg !3276
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3277

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_unsigned_heap** @name_to_id to i8**), align 8, !dbg !3278
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %1, i32 %alloc_, i64 8, i64 4) #6, !dbg !3278
  store i8* %call3, i8** bitcast (%struct.VEC_unsigned_heap** @name_to_id to i8**), align 8, !dbg !3278
  br label %if.end, !dbg !3278

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !3277
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !3280 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3286, metadata !DIExpression()), !dbg !3287
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !3288
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3288

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !3288
  %0 = load i32, i32* %num, align 8, !dbg !3288
  br label %cond.end, !dbg !3288

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3288
  ret i32 %cond, !dbg !3288
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_unsigned_heap_safe_grow_cleared(%struct.VEC_unsigned_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !3289 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap** @name_to_id, metadata !3293, metadata !DIExpression()), !dbg !3296
  call void @llvm.dbg.value(metadata i32 %size_, metadata !3294, metadata !DIExpression()), !dbg !3296
  %0 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !3297
  %tobool = icmp eq %struct.VEC_unsigned_heap* %0, null, !dbg !3297
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3297

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %0, i64 0, i32 0, !dbg !3297
  br label %cond.end, !dbg !3297

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_unsigned_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3297
  %call = tail call fastcc i32 @VEC_unsigned_base_length(%struct.VEC_unsigned_base* %cond) #7, !dbg !3297
  call void @llvm.dbg.value(metadata i32 %call, metadata !3295, metadata !DIExpression()), !dbg !3296
  tail call fastcc void @VEC_unsigned_heap_safe_grow(%struct.VEC_unsigned_heap** nonnull @name_to_id, i32 %size_) #7, !dbg !3297
  %1 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !3297
  %tobool1 = icmp eq %struct.VEC_unsigned_heap* %1, null, !dbg !3297
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !3297

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %1, i64 0, i32 0, !dbg !3297
  br label %cond.end5, !dbg !3297

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_unsigned_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !3297
  %call7 = tail call fastcc i32* @VEC_unsigned_base_address(%struct.VEC_unsigned_base* %cond6) #7, !dbg !3297
  %idxprom = sext i32 %call to i64, !dbg !3297
  %arrayidx = getelementptr inbounds i32, i32* %call7, i64 %idxprom, !dbg !3297
  %2 = bitcast i32* %arrayidx to i8*, !dbg !3297
  %sub = sub nsw i32 %size_, %call, !dbg !3297
  %conv = sext i32 %sub to i64, !dbg !3297
  %mul = shl nsw i64 %conv, 2, !dbg !3297
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !3297
  ret void, !dbg !3297
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_unsigned_base_replace(%struct.VEC_unsigned_base* %vec_, i32 %ix_, i32 %obj_) unnamed_addr #0 !dbg !3298 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_base* %vec_, metadata !3303, metadata !DIExpression()), !dbg !3307
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3304, metadata !DIExpression()), !dbg !3307
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !3305, metadata !DIExpression()), !dbg !3307
  %idxprom = zext i32 %ix_ to i64, !dbg !3308
  %arrayidx = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3308
  %0 = load i32, i32* %arrayidx, align 4, !dbg !3308
  call void @llvm.dbg.value(metadata i32 %0, metadata !3306, metadata !DIExpression()), !dbg !3307
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !3308
  ret i32 %0, !dbg !3308
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_pre_expr_heap_reserve(%struct.VEC_pre_expr_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3309 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap** %vec_, metadata !3313, metadata !DIExpression()), !dbg !3316
  call void @llvm.dbg.value(metadata i32 1, metadata !3314, metadata !DIExpression()), !dbg !3316
  %0 = load %struct.VEC_pre_expr_heap*, %struct.VEC_pre_expr_heap** %vec_, align 8, !dbg !3317
  %tobool = icmp eq %struct.VEC_pre_expr_heap* %0, null, !dbg !3317
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3317

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_pre_expr_heap, %struct.VEC_pre_expr_heap* %0, i64 0, i32 0, !dbg !3317
  br label %cond.end, !dbg !3317

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_pre_expr_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3317
  %call = tail call fastcc i32 @VEC_pre_expr_base_space(%struct.VEC_pre_expr_base* %cond, i32 1) #7, !dbg !3317
  %tobool1 = icmp eq i32 %call, 0, !dbg !3317
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !3317
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !3315, metadata !DIExpression()), !dbg !3316
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3317

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_pre_expr_heap** %vec_ to i8**, !dbg !3318
  %2 = load i8*, i8** %1, align 8, !dbg !3318
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !3318
  store i8* %call3, i8** %1, align 8, !dbg !3318
  br label %if.end, !dbg !3318

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !3317
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.pre_expr_d** @VEC_pre_expr_base_quick_push(%struct.VEC_pre_expr_base* %vec_, %struct.pre_expr_d* %obj_) unnamed_addr #0 !dbg !3320 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_base* %vec_, metadata !3325, metadata !DIExpression()), !dbg !3328
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %obj_, metadata !3326, metadata !DIExpression()), !dbg !3328
  %num1 = getelementptr inbounds %struct.VEC_pre_expr_base, %struct.VEC_pre_expr_base* %vec_, i64 0, i32 0, !dbg !3329
  %0 = load i32, i32* %num1, align 8, !dbg !3329
  %inc = add i32 %0, 1, !dbg !3329
  store i32 %inc, i32* %num1, align 8, !dbg !3329
  %idxprom = zext i32 %0 to i64, !dbg !3329
  %arrayidx = getelementptr inbounds %struct.VEC_pre_expr_base, %struct.VEC_pre_expr_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3329
  call void @llvm.dbg.value(metadata %struct.pre_expr_d** %arrayidx, metadata !3327, metadata !DIExpression()), !dbg !3328
  store %struct.pre_expr_d* %obj_, %struct.pre_expr_d** %arrayidx, align 8, !dbg !3329
  ret %struct.pre_expr_d** %arrayidx, !dbg !3329
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_pre_expr_base_space(%struct.VEC_pre_expr_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3330 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_base* %vec_, metadata !3334, metadata !DIExpression()), !dbg !3336
  call void @llvm.dbg.value(metadata i32 1, metadata !3335, metadata !DIExpression()), !dbg !3336
  %tobool = icmp eq %struct.VEC_pre_expr_base* %vec_, null, !dbg !3337
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3337

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_pre_expr_base, %struct.VEC_pre_expr_base* %vec_, i64 0, i32 1, !dbg !3337
  %0 = load i32, i32* %alloc, align 4, !dbg !3337
  %num = getelementptr inbounds %struct.VEC_pre_expr_base, %struct.VEC_pre_expr_base* %vec_, i64 0, i32 0, !dbg !3337
  %1 = load i32, i32* %num, align 8, !dbg !3337
  %cmp1 = icmp ne i32 %0, %1, !dbg !3337
  %phitmp = zext i1 %cmp1 to i32, !dbg !3337
  br label %cond.end, !dbg !3337

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3337

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !3337
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_unsigned_base_space(%struct.VEC_unsigned_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3338 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_base* %vec_, metadata !3342, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3343, metadata !DIExpression()), !dbg !3344
  %tobool = icmp eq %struct.VEC_unsigned_base* %vec_, null, !dbg !3345
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3345

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 1, !dbg !3345
  %0 = load i32, i32* %alloc, align 4, !dbg !3345
  %num = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 0, !dbg !3345
  %1 = load i32, i32* %num, align 4, !dbg !3345
  %sub = sub i32 %0, %1, !dbg !3345
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !3345
  br label %cond.end, !dbg !3345

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !3345
  br label %cond.end, !dbg !3345

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !3345
  ret i32 %cond, !dbg !3345
}

declare dso_local i8* @vec_heap_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_unsigned_heap_safe_grow(%struct.VEC_unsigned_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !3346 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap** @name_to_id, metadata !3348, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata i32 %size_, metadata !3349, metadata !DIExpression()), !dbg !3350
  %cmp = icmp sgt i32 %size_, -1, !dbg !3351
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3351

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !3351
  %tobool = icmp eq %struct.VEC_unsigned_heap* %0, null, !dbg !3351
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3351

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %0, i64 0, i32 0, !dbg !3351
  br label %cond.end, !dbg !3351

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_unsigned_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !3351
  %call = tail call fastcc i32 @VEC_unsigned_base_length(%struct.VEC_unsigned_base* %cond) #7, !dbg !3351
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !3351
  %tobool2 = icmp eq %struct.VEC_unsigned_heap* %1, null, !dbg !3351
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !3351

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %1, i64 0, i32 0, i32 0, !dbg !3351
  %2 = load i32, i32* %num, align 4, !dbg !3351
  br label %cond.end11, !dbg !3351

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !3351
  %sub = sub nsw i32 %size_, %cond12, !dbg !3351
  %call13 = tail call fastcc i32 @VEC_unsigned_heap_reserve_exact(%struct.VEC_unsigned_heap** nonnull @name_to_id, i32 %sub) #7, !dbg !3351
  %3 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !3351
  %num20 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %3, i64 0, i32 0, i32 0, !dbg !3351
  store i32 %size_, i32* %num20, align 4, !dbg !3351
  ret void, !dbg !3351
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_unsigned_base_address(%struct.VEC_unsigned_base* %vec_) unnamed_addr #0 !dbg !3352 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_base* %vec_, metadata !3357, metadata !DIExpression()), !dbg !3358
  %tobool = icmp eq %struct.VEC_unsigned_base* %vec_, null, !dbg !3359
  %arraydecay = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 2, i64 0, !dbg !3359
  %cond = select i1 %tobool, i32* null, i32* %arraydecay, !dbg !3359
  ret i32* %cond, !dbg !3359
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_unsigned_heap_reserve_exact(%struct.VEC_unsigned_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3360 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap** @name_to_id, metadata !3362, metadata !DIExpression()), !dbg !3365
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3363, metadata !DIExpression()), !dbg !3365
  %0 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !3366
  %tobool = icmp eq %struct.VEC_unsigned_heap* %0, null, !dbg !3366
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3366

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %0, i64 0, i32 0, !dbg !3366
  br label %cond.end, !dbg !3366

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_unsigned_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3366
  %call = tail call fastcc i32 @VEC_unsigned_base_space(%struct.VEC_unsigned_base* %cond, i32 %alloc_) #7, !dbg !3366
  %tobool1 = icmp eq i32 %call, 0, !dbg !3366
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !3366
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !3364, metadata !DIExpression()), !dbg !3365
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3366

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_unsigned_heap** @name_to_id to i8**), align 8, !dbg !3367
  %call3 = tail call i8* @vec_heap_o_reserve_exact(i8* %1, i32 %alloc_, i64 8, i64 4) #6, !dbg !3367
  store i8* %call3, i8** bitcast (%struct.VEC_unsigned_heap** @name_to_id to i8**), align 8, !dbg !3367
  br label %if.end, !dbg !3367

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !3366
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %vec_, i32 %ix_, %struct.vn_reference_op_struct** %ptr) unnamed_addr #0 !dbg !3369 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !3375, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3376, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %ptr, metadata !3377, metadata !DIExpression()), !dbg !3378
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_base* %vec_, null, !dbg !3379
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3379

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 0, !dbg !3379
  %0 = load i32, i32* %num, align 8, !dbg !3379
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3379
  br i1 %cmp, label %if.then, label %if.else, !dbg !3381

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3382
  %arrayidx = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3382
  br label %return, !dbg !3382

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3384

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.vn_reference_op_struct* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !3386
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3386
  store %struct.vn_reference_op_struct* %storemerge, %struct.vn_reference_op_struct** %ptr, align 8, !dbg !3386
  ret i32 %retval.0, !dbg !3381
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %vec_) unnamed_addr #0 !dbg !3387 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !3393, metadata !DIExpression()), !dbg !3394
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_base* %vec_, null, !dbg !3395
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3395

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 0, !dbg !3395
  %0 = load i32, i32* %num, align 8, !dbg !3395
  br label %cond.end, !dbg !3395

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3395
  ret i32 %cond, !dbg !3395
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !3396 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3404, metadata !DIExpression()), !dbg !3408
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !3405, metadata !DIExpression()), !dbg !3408
  call void @llvm.dbg.value(metadata i32 0, metadata !3406, metadata !DIExpression()), !dbg !3408
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3407, metadata !DIExpression()), !dbg !3408
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !3409
  %1 = load i64, i64* %0, align 8, !dbg !3409
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !3410
  store i64 %1, i64* %2, align 8, !dbg !3410
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !3411
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !3412
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !3413
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !3416
  br label %while.body, !dbg !3416

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !3417
  br i1 %tobool, label %if.then, label %if.end, !dbg !3418

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !3419
  br label %while.end, !dbg !3421

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !3422

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !3416, !llvm.loop !3423

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !3425

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !3425
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !3427
  %7 = load i32, i32* %indx9, align 8, !dbg !3427
  %cmp11 = icmp eq i32 %7, 0, !dbg !3428
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !3429

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !3430
  %8 = load i32, i32* %indx14, align 8, !dbg !3430
  %mul = shl i32 %8, 7, !dbg !3431
  call void @llvm.dbg.value(metadata i32 %mul, metadata !3406, metadata !DIExpression()), !dbg !3408
  br label %if.end15, !dbg !3432

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !3406, metadata !DIExpression()), !dbg !3408
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !3433
  store i32 0, i32* %word_no, align 8, !dbg !3434
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !3435
  %9 = load i64, i64* %arrayidx, align 8, !dbg !3435
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3436
  store i64 %9, i64* %bits21, align 8, !dbg !3437
  %tobool23 = icmp eq i64 %9, 0, !dbg !3438
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !3438
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !3439
  call void @llvm.dbg.value(metadata i32 %add, metadata !3406, metadata !DIExpression()), !dbg !3408
  store i32 %add, i32* %bit_no, align 4, !dbg !3440
  ret void, !dbg !3441
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !3442 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3446, metadata !DIExpression()), !dbg !3451
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3447, metadata !DIExpression()), !dbg !3451
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3452
  %0 = load i64, i64* %bits, align 8, !dbg !3452
  %tobool = icmp eq i64 %0, 0, !dbg !3453
  br i1 %tobool, label %if.end, label %next_bit, !dbg !3454

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !3455
  br label %next_bit, !dbg !3458

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !3448), !dbg !3459
  br label %while.cond, !dbg !3458

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !3460
  %and = and i64 %2, 1, !dbg !3461
  %tobool2 = icmp eq i64 %and, 0, !dbg !3462
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !3458

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !3463
  store i64 %shr, i64* %bits, align 8, !dbg !3463
  %3 = load i32, i32* %bit_no, align 4, !dbg !3465
  %add = add i32 %3, 1, !dbg !3465
  store i32 %add, i32* %bit_no, align 4, !dbg !3465
  %.pre = load i64, i64* %bits, align 8, !dbg !3460
  br label %while.cond, !dbg !3458, !llvm.loop !3466

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !3468
  %sub = add i32 %4, 63, !dbg !3469
  %div = and i32 %sub, -64, !dbg !3470
  store i32 %div, i32* %bit_no, align 4, !dbg !3471
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !3472
  %5 = load i32, i32* %word_no, align 8, !dbg !3473
  %inc = add i32 %5, 1, !dbg !3473
  store i32 %inc, i32* %word_no, align 8, !dbg !3473
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !3474
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !3474
  br label %while.body6, !dbg !3475

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !3476

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !3477
  %cmp = icmp eq i32 %8, 2, !dbg !3478
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !3474
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !3476

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !3455
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !3455
  %10 = load i64, i64* %arrayidx, align 8, !dbg !3455
  store i64 %10, i64* %bits, align 8, !dbg !3479
  %tobool14 = icmp eq i64 %10, 0, !dbg !3480
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !3482

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !3483
  %add17 = add i32 %11, 64, !dbg !3483
  store i32 %add17, i32* %bit_no, align 4, !dbg !3483
  %12 = load i32, i32* %word_no, align 8, !dbg !3484
  %inc19 = add i32 %12, 1, !dbg !3484
  store i32 %inc19, i32* %word_no, align 8, !dbg !3484
  br label %while.cond7, !dbg !3476, !llvm.loop !3485

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !3474
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !3487
  %14 = load i64, i64* %13, align 8, !dbg !3487
  store i64 %14, i64* %6, align 8, !dbg !3488
  %tobool24 = icmp eq i64 %14, 0, !dbg !3489
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !3491

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !3491
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !3492
  %16 = load i32, i32* %indx, align 8, !dbg !3492
  %mul28 = shl i32 %16, 7, !dbg !3493
  store i32 %mul28, i32* %bit_no, align 4, !dbg !3494
  store i32 0, i32* %word_no, align 8, !dbg !3495
  br label %while.body6, !dbg !3475, !llvm.loop !3496

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !3498

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !3498

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !3451
  ret i8 %retval.0, !dbg !3498
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.pre_expr_d* @expression_for_id(i32 %id) unnamed_addr #0 !dbg !3499 {
entry:
  call void @llvm.dbg.value(metadata i32 %id, metadata !3503, metadata !DIExpression()), !dbg !3504
  %0 = load %struct.VEC_pre_expr_heap*, %struct.VEC_pre_expr_heap** @expressions, align 8, !dbg !3505
  %base = getelementptr inbounds %struct.VEC_pre_expr_heap, %struct.VEC_pre_expr_heap* %0, i64 0, i32 0, !dbg !3505
  %call = tail call fastcc %struct.pre_expr_d* @VEC_pre_expr_base_index(%struct.VEC_pre_expr_base* %base, i32 %id) #7, !dbg !3505
  ret %struct.pre_expr_d* %call, !dbg !3506
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !3507 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3511, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3512, metadata !DIExpression()), !dbg !3513
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3514
  %0 = load i64, i64* %bits, align 8, !dbg !3515
  %shr = lshr i64 %0, 1, !dbg !3515
  store i64 %shr, i64* %bits, align 8, !dbg !3515
  %1 = load i32, i32* %bit_no, align 4, !dbg !3516
  %add = add i32 %1, 1, !dbg !3516
  store i32 %add, i32* %bit_no, align 4, !dbg !3516
  ret void, !dbg !3517
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.pre_expr_d* @VEC_pre_expr_base_index(%struct.VEC_pre_expr_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3518 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_base* %vec_, metadata !3524, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3525, metadata !DIExpression()), !dbg !3526
  br label %land.end, !dbg !3527

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3527
  %arrayidx = getelementptr inbounds %struct.VEC_pre_expr_base, %struct.VEC_pre_expr_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3527
  %0 = load %struct.pre_expr_d*, %struct.pre_expr_d** %arrayidx, align 8, !dbg !3527
  ret %struct.pre_expr_d* %0, !dbg !3527
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @execute_pre(i8 zeroext %do_fre) unnamed_addr #5 !dbg !3528 {
entry:
  call void @llvm.dbg.value(metadata i8 %do_fre, metadata !3532, metadata !DIExpression()), !dbg !3537
  call void @llvm.dbg.value(metadata i32 0, metadata !3533, metadata !DIExpression()), !dbg !3537
  %0 = load i32, i32* @optimize, align 4, !dbg !3538
  %cmp = icmp sgt i32 %0, 2, !dbg !3539
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3540

land.rhs:                                         ; preds = %entry
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3541
  %call = tail call zeroext i8 @optimize_function_for_speed_p(%struct.function* %1) #6, !dbg !3542
  %tobool = icmp ne i8 %call, 0, !dbg !3540
  %phitmp = zext i1 %tobool to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  store i8 %2, i8* @do_partial_partial, align 1, !dbg !3543
  %tobool2 = icmp eq i8 %do_fre, 0, !dbg !3544
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3546

if.then:                                          ; preds = %land.end
  tail call void @loop_optimizer_init(i32 7) #6, !dbg !3547
  br label %if.end, !dbg !3547

if.end:                                           ; preds = %land.end, %if.then
  %call3 = tail call zeroext i8 @run_scc_vn(i8 zeroext %do_fre) #6, !dbg !3548
  %tobool4 = icmp eq i8 %call3, 0, !dbg !3548
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !3550

if.then5:                                         ; preds = %if.end
  br i1 %tobool2, label %if.then7, label %cleanup, !dbg !3551

if.then7:                                         ; preds = %if.then5
  tail call fastcc void @remove_dead_inserted_code() #7, !dbg !3553
  tail call void @loop_optimizer_finalize() #6, !dbg !3556
  br label %cleanup, !dbg !3557

if.end9:                                          ; preds = %if.end
  tail call fastcc void @init_pre(i8 zeroext %do_fre) #7, !dbg !3558
  tail call void @scev_initialize() #6, !dbg !3559
  tail call fastcc void @compute_avail() #7, !dbg !3560
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3561
  %tobool10 = icmp eq %struct._IO_FILE* %3, null, !dbg !3561
  br i1 %tobool10, label %if.end21, label %land.lhs.true, !dbg !3562

land.lhs.true:                                    ; preds = %if.end9
  %4 = load i32, i32* @dump_flags, align 4, !dbg !3563
  %and = and i32 %4, 8, !dbg !3564
  %tobool11 = icmp eq i32 %and, 0, !dbg !3564
  br i1 %tobool11, label %if.end21, label %if.then12, !dbg !3565

if.then12:                                        ; preds = %land.lhs.true
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3566
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !3566
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3566
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !3566
  br label %for.cond, !dbg !3566

for.cond:                                         ; preds = %for.body, %if.then12
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %if.then12 ], [ %next_bb, %for.body ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3568
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3534, metadata !DIExpression()), !dbg !3569
  %tobool14 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !3566
  br i1 %tobool14, label %if.end21.loopexit, label %for.body, !dbg !3566

for.body:                                         ; preds = %for.cond
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3570
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 2, !dbg !3573
  %8 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !3573
  %9 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %8, align 8, !dbg !3573
  %exp_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %9, i64 0, i32 0, !dbg !3573
  %10 = load %struct.bitmap_set*, %struct.bitmap_set** %exp_gen, align 8, !dbg !3573
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3574
  %11 = load i32, i32* %index, align 8, !dbg !3574
  tail call fastcc void @print_bitmap_set(%struct._IO_FILE* %7, %struct.bitmap_set* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i32 %11) #7, !dbg !3575
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3576
  %13 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %8, align 8, !dbg !3577
  %phi_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %13, i64 0, i32 1, !dbg !3577
  %14 = load %struct.bitmap_set*, %struct.bitmap_set** %phi_gen, align 8, !dbg !3577
  %15 = load i32, i32* %index, align 8, !dbg !3578
  tail call fastcc void @print_bitmap_set(%struct._IO_FILE* %12, %struct.bitmap_set* %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i32 %15) #7, !dbg !3579
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3580
  %17 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %8, align 8, !dbg !3581
  %tmp_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %17, i64 0, i32 2, !dbg !3581
  %18 = load %struct.bitmap_set*, %struct.bitmap_set** %tmp_gen, align 8, !dbg !3581
  %19 = load i32, i32* %index, align 8, !dbg !3582
  tail call fastcc void @print_bitmap_set(%struct._IO_FILE* %16, %struct.bitmap_set* %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i32 %19) #7, !dbg !3583
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3584
  %21 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %8, align 8, !dbg !3585
  %avail_out = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %21, i64 0, i32 3, !dbg !3585
  %22 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out, align 8, !dbg !3585
  %23 = load i32, i32* %index, align 8, !dbg !3586
  tail call fastcc void @print_bitmap_set(%struct._IO_FILE* %20, %struct.bitmap_set* %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), i32 %23) #7, !dbg !3587
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !3588
  br label %for.cond, !dbg !3588, !llvm.loop !3589

if.end21.loopexit:                                ; preds = %for.cond
  br label %if.end21, !dbg !3591

if.end21:                                         ; preds = %if.end21.loopexit, %land.lhs.true, %if.end9
  br i1 %tobool2, label %land.lhs.true23, label %if.end29, !dbg !3593

land.lhs.true23:                                  ; preds = %if.end21
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3594
  %cfg25 = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, i32 1, !dbg !3594
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg25, align 8, !dbg !3594
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i64 0, i32 3, !dbg !3594
  %26 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !3594
  %cmp26 = icmp slt i32 %26, 4000, !dbg !3595
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !3596

if.then28:                                        ; preds = %land.lhs.true23
  tail call fastcc void @compute_antic() #7, !dbg !3597
  tail call fastcc void @insert() #7, !dbg !3599
  br label %if.end29, !dbg !3600

if.end29:                                         ; preds = %if.end21, %if.then28, %land.lhs.true23
  %call30 = tail call fastcc i32 @eliminate() #7, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %call30, metadata !3533, metadata !DIExpression()), !dbg !3537
  %27 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3602
  %28 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 1), align 4, !dbg !3603
  tail call void @statistics_counter_event(%struct.function* %27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i32 %28) #6, !dbg !3604
  %29 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3605
  %30 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 2), align 4, !dbg !3606
  tail call void @statistics_counter_event(%struct.function* %29, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0), i32 %30) #6, !dbg !3607
  %31 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3608
  %32 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 3), align 4, !dbg !3609
  tail call void @statistics_counter_event(%struct.function* %31, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 %32) #6, !dbg !3610
  %33 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3611
  %34 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 0), align 4, !dbg !3612
  tail call void @statistics_counter_event(%struct.function* %33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i64 0, i64 0), i32 %34) #6, !dbg !3613
  %35 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3614
  %36 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 4), align 4, !dbg !3615
  tail call void @statistics_counter_event(%struct.function* %35, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i32 %36) #6, !dbg !3616
  tail call void @remove_fake_exit_edges() #6, !dbg !3617
  tail call void @gsi_commit_edge_inserts() #6, !dbg !3618
  tail call fastcc void @clear_expression_ids() #7, !dbg !3619
  tail call void @free_scc_vn() #6, !dbg !3620
  br i1 %tobool2, label %if.then37, label %if.end38, !dbg !3621

if.then37:                                        ; preds = %if.end29
  tail call fastcc void @remove_dead_inserted_code() #7, !dbg !3622
  br label %if.end38, !dbg !3622

if.end38:                                         ; preds = %if.end29, %if.then37
  tail call void @scev_finalize() #6, !dbg !3624
  tail call fastcc void @fini_pre(i8 zeroext %do_fre) #7, !dbg !3625
  br label %cleanup, !dbg !3626

cleanup:                                          ; preds = %if.then5, %if.then7, %if.end38
  %retval.0 = phi i32 [ %call30, %if.end38 ], [ 0, %if.then7 ], [ 0, %if.then5 ], !dbg !3537
  ret i32 %retval.0, !dbg !3627
}

declare dso_local zeroext i8 @optimize_function_for_speed_p(%struct.function*) local_unnamed_addr #2

declare dso_local void @loop_optimizer_init(i32) local_unnamed_addr #2

declare dso_local zeroext i8 @run_scc_vn(i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_dead_inserted_code() unnamed_addr #5 !dbg !3628 {
entry:
  %worklist = alloca %struct.VEC_gimple_heap*, align 8
  %t = alloca %union.gimple_statement_d*, align 8
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %0 = bitcast %struct.VEC_gimple_heap** %worklist to i8*, !dbg !3677
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3677
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* null, metadata !3632, metadata !DIExpression()), !dbg !3678
  %1 = bitcast %union.gimple_statement_d** %t to i8*, !dbg !3679
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3679
  %2 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** @inserted_exprs, align 8, !dbg !3680
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %2, i64 0, i32 0, !dbg !3680
  %call = tail call fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %base) #7, !dbg !3680
  %call1 = tail call fastcc %struct.VEC_gimple_heap* @VEC_gimple_heap_alloc(i32 %call) #7, !dbg !3680
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %call1, metadata !3632, metadata !DIExpression()), !dbg !3678
  store %struct.VEC_gimple_heap* %call1, %struct.VEC_gimple_heap** %worklist, align 8, !dbg !3681
  call void @llvm.dbg.value(metadata i32 0, metadata !3633, metadata !DIExpression()), !dbg !3678
  br label %for.cond, !dbg !3682

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !3684
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3633, metadata !DIExpression()), !dbg !3678
  %3 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** @inserted_exprs, align 8, !dbg !3685
  %base4 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %3, i64 0, i32 0, !dbg !3685
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %t, metadata !3634, metadata !DIExpression(DW_OP_deref)), !dbg !3678
  %call8 = call fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %base4, i32 %i.0, %union.gimple_statement_d** nonnull %t) #7, !dbg !3685
  %tobool9 = icmp eq i32 %call8, 0, !dbg !3687
  br i1 %tobool9, label %while.cond.preheader, label %for.body, !dbg !3687

while.cond.preheader:                             ; preds = %for.cond
  %4 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !3688
  br label %while.cond, !dbg !3689

for.body:                                         ; preds = %for.cond
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %t, align 8, !dbg !3690
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %5, metadata !3634, metadata !DIExpression()), !dbg !3678
  %call10 = call fastcc i32 @gimple_plf(%union.gimple_statement_d* %5, i32 1) #7, !dbg !3693
  %tobool11 = icmp eq i32 %call10, 0, !dbg !3693
  br i1 %tobool11, label %for.inc, label %if.then, !dbg !3694

if.then:                                          ; preds = %for.body
  %6 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %worklist, align 8, !dbg !3695
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %6, metadata !3632, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %6, metadata !3632, metadata !DIExpression()), !dbg !3678
  %base14 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %6, i64 0, i32 0, !dbg !3695
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %t, align 8, !dbg !3695
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %7, metadata !3634, metadata !DIExpression()), !dbg !3678
  %call18 = call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %base14, %union.gimple_statement_d* %7) #7, !dbg !3695
  br label %for.inc, !dbg !3695

for.inc:                                          ; preds = %for.body, %if.then
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3696
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3633, metadata !DIExpression()), !dbg !3678
  br label %for.cond, !dbg !3697, !llvm.loop !3698

while.cond:                                       ; preds = %while.cond.preheader, %if.end76
  %8 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %worklist, align 8, !dbg !3700
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %8, metadata !3632, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %8, metadata !3632, metadata !DIExpression()), !dbg !3678
  %base21 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %8, i64 0, i32 0, !dbg !3700
  %call25 = call fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %base21) #7, !dbg !3700
  %cmp = icmp eq i32 %call25, 0, !dbg !3701
  br i1 %cmp, label %for.cond77.preheader, label %while.body, !dbg !3689

for.cond77.preheader:                             ; preds = %while.cond
  %9 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3702
  %10 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3702
  br label %for.cond77, !dbg !3703

while.body:                                       ; preds = %while.cond
  %11 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %worklist, align 8, !dbg !3704
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %11, metadata !3632, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %11, metadata !3632, metadata !DIExpression()), !dbg !3678
  %base28 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %11, i64 0, i32 0, !dbg !3704
  %call32 = call fastcc %union.gimple_statement_d* @VEC_gimple_base_pop(%struct.VEC_gimple_base* %base28) #7, !dbg !3704
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call32, metadata !3634, metadata !DIExpression()), !dbg !3678
  store %union.gimple_statement_d* %call32, %union.gimple_statement_d** %t, align 8, !dbg !3705
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call32, metadata !3634, metadata !DIExpression()), !dbg !3678
  %call33 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call32) #7, !dbg !3706
  %cmp34 = icmp eq i32 %call33, 16, !dbg !3707
  br i1 %cmp34, label %if.then35, label %if.else, !dbg !3708

if.then35:                                        ; preds = %while.body
  %12 = load %union.gimple_statement_d*, %union.gimple_statement_d** %t, align 8, !dbg !3709
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %12, metadata !3634, metadata !DIExpression()), !dbg !3678
  %call36 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %12) #7, !dbg !3709
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !3632, metadata !DIExpression(DW_OP_deref)), !dbg !3678
  %call37 = call fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** nonnull %worklist, i32 %call36) #7, !dbg !3709
  call void @llvm.dbg.value(metadata i32 0, metadata !3635, metadata !DIExpression()), !dbg !3710
  br label %for.cond38, !dbg !3711

for.cond38:                                       ; preds = %for.inc59, %if.then35
  %k.0 = phi i32 [ 0, %if.then35 ], [ %inc60, %for.inc59 ], !dbg !3712
  call void @llvm.dbg.value(metadata i32 %k.0, metadata !3635, metadata !DIExpression()), !dbg !3710
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %t, align 8, !dbg !3713
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %13, metadata !3634, metadata !DIExpression()), !dbg !3678
  %call39 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %13) #7, !dbg !3714
  %cmp40 = icmp ult i32 %k.0, %call39, !dbg !3715
  br i1 %cmp40, label %for.body41, label %if.end76.loopexit, !dbg !3716

for.body41:                                       ; preds = %for.cond38
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %t, align 8, !dbg !3717
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %14, metadata !3634, metadata !DIExpression()), !dbg !3678
  %call42 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %14, i32 %k.0) #7, !dbg !3717
  %call43 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call42) #7, !dbg !3717
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !3639, metadata !DIExpression()), !dbg !3718
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3719
  %bf.load = load i64, i64* %15, align 8, !dbg !3719
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3720
  %cmp45 = icmp eq i64 %bf.cast1, 141, !dbg !3720
  br i1 %cmp45, label %if.then46, label %for.inc59, !dbg !3721

if.then46:                                        ; preds = %for.body41
  %call47 = call fastcc %union.gimple_statement_d* @mark_operand_necessary(%union.tree_node* %call43) #7, !dbg !3722
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call47, metadata !3643, metadata !DIExpression()), !dbg !3723
  %tobool48 = icmp eq %union.gimple_statement_d* %call47, null, !dbg !3724
  br i1 %tobool48, label %for.inc59, label %if.then49, !dbg !3726

if.then49:                                        ; preds = %if.then46
  %16 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %worklist, align 8, !dbg !3727
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %16, metadata !3632, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %16, metadata !3632, metadata !DIExpression()), !dbg !3678
  %base52 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %16, i64 0, i32 0, !dbg !3727
  %call56 = call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %base52, %union.gimple_statement_d* nonnull %call47) #7, !dbg !3727
  br label %for.inc59, !dbg !3727

for.inc59:                                        ; preds = %if.then46, %for.body41, %if.then49
  %inc60 = add i32 %k.0, 1, !dbg !3728
  call void @llvm.dbg.value(metadata i32 %inc60, metadata !3635, metadata !DIExpression()), !dbg !3710
  br label %for.cond38, !dbg !3729, !llvm.loop !3730

if.else:                                          ; preds = %while.body
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #8, !dbg !3732
  %17 = load %union.gimple_statement_d*, %union.gimple_statement_d** %t, align 8, !dbg !3733
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %17, metadata !3634, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3646, metadata !DIExpression(DW_OP_deref)), !dbg !3688
  %call62 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %17, i32 5) #7, !dbg !3733
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !3660, metadata !DIExpression()), !dbg !3688
  br label %for.cond63, !dbg !3733

for.cond63:                                       ; preds = %for.inc73, %if.else
  %use.0 = phi %union.tree_node* [ %call62, %if.else ], [ %call74, %for.inc73 ], !dbg !3734
  call void @llvm.dbg.value(metadata %union.tree_node* %use.0, metadata !3660, metadata !DIExpression()), !dbg !3688
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3646, metadata !DIExpression(DW_OP_deref)), !dbg !3688
  %call64 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !3735
  %tobool65 = icmp eq i8 %call64, 0, !dbg !3735
  br i1 %tobool65, label %for.body66, label %for.end75, !dbg !3733

for.body66:                                       ; preds = %for.cond63
  %call68 = call fastcc %union.gimple_statement_d* @mark_operand_necessary(%union.tree_node* %use.0) #7, !dbg !3736
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call68, metadata !3661, metadata !DIExpression()), !dbg !3737
  %tobool69 = icmp eq %union.gimple_statement_d* %call68, null, !dbg !3738
  br i1 %tobool69, label %for.inc73, label %if.then70, !dbg !3740

if.then70:                                        ; preds = %for.body66
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !3632, metadata !DIExpression(DW_OP_deref)), !dbg !3678
  %call71 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** nonnull %worklist, %union.gimple_statement_d* nonnull %call68) #7, !dbg !3741
  br label %for.inc73, !dbg !3741

for.inc73:                                        ; preds = %for.body66, %if.then70
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3646, metadata !DIExpression(DW_OP_deref)), !dbg !3688
  %call74 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !3735
  call void @llvm.dbg.value(metadata %union.tree_node* %call74, metadata !3660, metadata !DIExpression()), !dbg !3688
  br label %for.cond63, !dbg !3735, !llvm.loop !3742

for.end75:                                        ; preds = %for.cond63
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #8, !dbg !3744
  br label %if.end76

if.end76.loopexit:                                ; preds = %for.cond38
  br label %if.end76, !dbg !3689

if.end76:                                         ; preds = %if.end76.loopexit, %for.end75
  br label %while.cond, !dbg !3689, !llvm.loop !3745

for.cond77:                                       ; preds = %for.cond77.preheader, %for.inc101
  %i.1 = phi i32 [ %inc102, %for.inc101 ], [ 0, %for.cond77.preheader ], !dbg !3747
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !3633, metadata !DIExpression()), !dbg !3678
  %18 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** @inserted_exprs, align 8, !dbg !3748
  %base80 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %18, i64 0, i32 0, !dbg !3748
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %t, metadata !3634, metadata !DIExpression(DW_OP_deref)), !dbg !3678
  %call84 = call fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %base80, i32 %i.1, %union.gimple_statement_d** nonnull %t) #7, !dbg !3748
  %tobool85 = icmp eq i32 %call84, 0, !dbg !3703
  br i1 %tobool85, label %for.end103, label %for.body86, !dbg !3703

for.body86:                                       ; preds = %for.cond77
  %19 = load %union.gimple_statement_d*, %union.gimple_statement_d** %t, align 8, !dbg !3749
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %19, metadata !3634, metadata !DIExpression()), !dbg !3678
  %call87 = call fastcc i32 @gimple_plf(%union.gimple_statement_d* %19, i32 1) #7, !dbg !3750
  %tobool88 = icmp eq i32 %call87, 0, !dbg !3750
  br i1 %tobool88, label %if.then89, label %for.inc101, !dbg !3751

if.then89:                                        ; preds = %for.body86
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !3752
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3753
  %tobool90 = icmp eq %struct._IO_FILE* %20, null, !dbg !3753
  br i1 %tobool90, label %if.end94, label %land.lhs.true, !dbg !3755

land.lhs.true:                                    ; preds = %if.then89
  %21 = load i32, i32* @dump_flags, align 4, !dbg !3756
  %and = and i32 %21, 8, !dbg !3757
  %tobool91 = icmp eq i32 %and, 0, !dbg !3757
  br i1 %tobool91, label %if.end94, label %if.then92, !dbg !3758

if.then92:                                        ; preds = %land.lhs.true
  %call93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %20, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !3759
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3761
  %23 = load %union.gimple_statement_d*, %union.gimple_statement_d** %t, align 8, !dbg !3762
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %23, metadata !3634, metadata !DIExpression()), !dbg !3678
  call void @print_gimple_stmt(%struct._IO_FILE* %22, %union.gimple_statement_d* %23, i32 0, i32 0) #6, !dbg !3763
  br label %if.end94, !dbg !3764

if.end94:                                         ; preds = %land.lhs.true, %if.then89, %if.then92
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8, !dbg !3765
  %24 = load %union.gimple_statement_d*, %union.gimple_statement_d** %t, align 8, !dbg !3766
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %24, metadata !3634, metadata !DIExpression()), !dbg !3678
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* %24) #6, !dbg !3765
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !3765
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8, !dbg !3765
  %25 = load %union.gimple_statement_d*, %union.gimple_statement_d** %t, align 8, !dbg !3767
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %25, metadata !3634, metadata !DIExpression()), !dbg !3678
  %call95 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %25) #7, !dbg !3769
  %cmp96 = icmp eq i32 %call95, 16, !dbg !3770
  br i1 %cmp96, label %if.then97, label %if.else98, !dbg !3771

if.then97:                                        ; preds = %if.end94
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3665, metadata !DIExpression(DW_OP_deref)), !dbg !3702
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !3772
  br label %if.end99, !dbg !3772

if.else98:                                        ; preds = %if.end94
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3665, metadata !DIExpression(DW_OP_deref)), !dbg !3702
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !3773
  %26 = load %union.gimple_statement_d*, %union.gimple_statement_d** %t, align 8, !dbg !3775
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %26, metadata !3634, metadata !DIExpression()), !dbg !3678
  call void @release_defs(%union.gimple_statement_d* %26) #6, !dbg !3776
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !3777
  br label %for.inc101, !dbg !3778

for.inc101:                                       ; preds = %for.body86, %if.end99
  %inc102 = add nuw nsw i32 %i.1, 1, !dbg !3779
  call void @llvm.dbg.value(metadata i32 %inc102, metadata !3633, metadata !DIExpression()), !dbg !3678
  br label %for.cond77, !dbg !3780, !llvm.loop !3781

for.end103:                                       ; preds = %for.cond77
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !3632, metadata !DIExpression(DW_OP_deref)), !dbg !3678
  call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull %worklist) #7, !dbg !3783
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3784
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3784
  ret void, !dbg !3784
}

declare dso_local void @loop_optimizer_finalize() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @init_pre(i8 zeroext %do_fre) unnamed_addr #5 !dbg !3785 {
entry:
  call void @llvm.dbg.value(metadata i8 %do_fre, metadata !3789, metadata !DIExpression()), !dbg !3791
  store i32 1, i32* @next_expression_id, align 4, !dbg !3792
  store %struct.VEC_pre_expr_heap* null, %struct.VEC_pre_expr_heap** @expressions, align 8, !dbg !3793
  %call = tail call fastcc %struct.pre_expr_d** @VEC_pre_expr_heap_safe_push(%struct.VEC_pre_expr_heap** nonnull @expressions, %struct.pre_expr_d* null) #7, !dbg !3794
  %call1 = tail call i32 @get_max_value_id() #6, !dbg !3795
  %add = add i32 %call1, 1, !dbg !3795
  %call2 = tail call fastcc %struct.VEC_bitmap_set_t_heap* @VEC_bitmap_set_t_heap_alloc(i32 %add) #7, !dbg !3795
  store %struct.VEC_bitmap_set_t_heap* %call2, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !3796
  %call3 = tail call i32 @get_max_value_id() #6, !dbg !3797
  %add4 = add i32 %call3, 1, !dbg !3797
  tail call fastcc void @VEC_bitmap_set_t_heap_safe_grow_cleared(%struct.VEC_bitmap_set_t_heap** nonnull @value_expressions, i32 %add4) #7, !dbg !3797
  store %struct.VEC_unsigned_heap* null, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !3798
  store i8 %do_fre, i8* @in_fre, align 1, !dbg !3799
  store %struct.VEC_gimple_heap* null, %struct.VEC_gimple_heap** @inserted_exprs, align 8, !dbg !3800
  store %struct.VEC_gimple_heap* null, %struct.VEC_gimple_heap** @need_creation, align 8, !dbg !3801
  store %union.tree_node* null, %union.tree_node** @pretemp, align 8, !dbg !3802
  store %union.tree_node* null, %union.tree_node** @prephitemp, align 8, !dbg !3803
  tail call void @connect_infinite_loops_to_exit() #6, !dbg !3804
  %call5 = tail call i8* @memset(i8* bitcast (%struct.anon* @pre_stats to i8*), i32 0, i64 20) #6, !dbg !3805
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3806
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3806
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3806
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !3806
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !3806
  %sub = add nsw i32 %2, -2, !dbg !3806
  %conv = sext i32 %sub to i64, !dbg !3806
  %mul = shl nsw i64 %conv, 2, !dbg !3806
  %call6 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !3806
  store i8* %call6, i8** bitcast (i32** @postorder to i8**), align 8, !dbg !3807
  %.cast = bitcast i8* %call6 to i32*, !dbg !3808
  %call7 = tail call fastcc i32 @my_rev_post_order_compute(i32* %.cast, i8 zeroext 0) #7, !dbg !3809
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3810
  %cfg9 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !3810
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9, align 8, !dbg !3810
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !3810
  br label %for.cond, !dbg !3810

for.cond:                                         ; preds = %for.body, %entry
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %entry ], [ %next_bb, %for.body ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3812
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3790, metadata !DIExpression()), !dbg !3791
  %tobool = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !3810
  br i1 %tobool, label %for.end, label %for.body, !dbg !3810

for.body:                                         ; preds = %for.cond
  %call10 = tail call i8* @xcalloc(i64 1, i64 72) #6, !dbg !3813
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 2, !dbg !3815
  store i8* %call10, i8** %aux, align 8, !dbg !3816
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !3817
  br label %for.cond, !dbg !3817, !llvm.loop !3818

for.end:                                          ; preds = %for.cond
  tail call void @calculate_dominance_info(i32 2) #6, !dbg !3820
  tail call void @calculate_dominance_info(i32 1) #6, !dbg !3821
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* nonnull @grand_bitmap_obstack) #6, !dbg !3822
  %call11 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @grand_bitmap_obstack) #6, !dbg !3823
  store %struct.bitmap_head_def* %call11, %struct.bitmap_head_def** @inserted_phi_names, align 8, !dbg !3824
  %call12 = tail call %struct.htab* @htab_create(i64 5110, i32 (i8*)* nonnull @expr_pred_trans_hash, i32 (i8*, i8*)* nonnull @expr_pred_trans_eq, void (i8*)* nonnull @free) #6, !dbg !3825
  store %struct.htab* %call12, %struct.htab** @phi_translate_table, align 8, !dbg !3826
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3827
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 3, !dbg !3827
  %6 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3827
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %6, i64 0, i32 2, !dbg !3827
  %7 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3827
  %tobool14 = icmp eq %struct.VEC_tree_gc* %7, null, !dbg !3827
  br i1 %tobool14, label %cond.end, label %cond.true, !dbg !3827

cond.true:                                        ; preds = %for.end
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %7, i64 0, i32 0, !dbg !3827
  br label %cond.end, !dbg !3827

cond.end:                                         ; preds = %for.end, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.end ], !dbg !3827
  %call18 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !3827
  %mul19 = mul i32 %call18, 3, !dbg !3828
  %conv20 = zext i32 %mul19 to i64, !dbg !3827
  %call21 = tail call %struct.htab* @htab_create(i64 %conv20, i32 (i8*)* nonnull @pre_expr_hash, i32 (i8*, i8*)* nonnull @pre_expr_eq, void (i8*)* null) #6, !dbg !3829
  store %struct.htab* %call21, %struct.htab** @expression_to_id, align 8, !dbg !3830
  %call22 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i64 16, i64 30) #6, !dbg !3831
  store %struct.alloc_pool_def* %call22, %struct.alloc_pool_def** @bitmap_set_pool, align 8, !dbg !3832
  %call23 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0), i64 16, i64 30) #6, !dbg !3833
  store %struct.alloc_pool_def* %call23, %struct.alloc_pool_def** @pre_expr_pool, align 8, !dbg !3834
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3835
  %cfg25 = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 1, !dbg !3835
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg25, align 8, !dbg !3835
  %x_entry_block_ptr26 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 0, !dbg !3835
  br label %for.cond27, !dbg !3835

for.cond27:                                       ; preds = %for.body29, %cond.end
  %bb.1.in = phi %struct.basic_block_def** [ %x_entry_block_ptr26, %cond.end ], [ %next_bb39, %for.body29 ]
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !3837
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !3790, metadata !DIExpression()), !dbg !3791
  %tobool28 = icmp eq %struct.basic_block_def* %bb.1, null, !dbg !3835
  br i1 %tobool28, label %for.end40, label %for.body29, !dbg !3835

for.body29:                                       ; preds = %for.cond27
  %call30 = tail call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !3838
  %aux31 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 2, !dbg !3841
  %10 = bitcast i8** %aux31 to %struct.bb_bitmap_sets**, !dbg !3841
  %11 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %10, align 8, !dbg !3841
  %exp_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %11, i64 0, i32 0, !dbg !3841
  store %struct.bitmap_set* %call30, %struct.bitmap_set** %exp_gen, align 8, !dbg !3842
  %call32 = tail call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !3843
  %12 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %10, align 8, !dbg !3844
  %phi_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %12, i64 0, i32 1, !dbg !3844
  store %struct.bitmap_set* %call32, %struct.bitmap_set** %phi_gen, align 8, !dbg !3845
  %call34 = tail call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !3846
  %13 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %10, align 8, !dbg !3847
  %tmp_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %13, i64 0, i32 2, !dbg !3847
  store %struct.bitmap_set* %call34, %struct.bitmap_set** %tmp_gen, align 8, !dbg !3848
  %call36 = tail call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !3849
  %14 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %10, align 8, !dbg !3850
  %avail_out = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %14, i64 0, i32 3, !dbg !3850
  store %struct.bitmap_set* %call36, %struct.bitmap_set** %avail_out, align 8, !dbg !3851
  %next_bb39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 6, !dbg !3852
  br label %for.cond27, !dbg !3852, !llvm.loop !3853

for.end40:                                        ; preds = %for.cond27
  %call41 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3855
  store %struct.bitmap_head_def* %call41, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !3856
  ret void, !dbg !3857
}

declare dso_local void @scev_initialize() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_avail() unnamed_addr #5 !dbg !3858 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp72 = alloca %struct.gimple_stmt_iterator, align 8
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  %ref = alloca %struct.vn_reference_s*, align 8
  %vro = alloca %struct.vn_reference_op_struct*, align 8
  %ops = alloca %struct.VEC_vn_reference_op_s_heap*, align 8
  %nary = alloca %struct.vn_nary_op_s*, align 8
  %ref257 = alloca %struct.vn_reference_s*, align 8
  %vro259 = alloca %struct.vn_reference_op_struct*, align 8
  call void @llvm.dbg.value(metadata i64 0, metadata !3863, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i32 1, metadata !3864, metadata !DIExpression()), !dbg !3904
  br label %for.cond, !dbg !3905

for.cond:                                         ; preds = %cleanup, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %cleanup ], !dbg !3906
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3864, metadata !DIExpression()), !dbg !3904
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3907
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 3, !dbg !3907
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3907
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 2, !dbg !3907
  %2 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3907
  %tobool = icmp eq %struct.VEC_tree_gc* %2, null, !dbg !3907
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3907

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %2, i64 0, i32 0, !dbg !3907
  br label %cond.end, !dbg !3907

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3907
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !3907
  %cmp = icmp ult i32 %i.0, %call, !dbg !3908
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3904
  br i1 %cmp, label %for.body, label %for.end, !dbg !3909

for.body:                                         ; preds = %cond.end
  %gimple_df5 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 3, !dbg !3910
  %4 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df5, align 8, !dbg !3910
  %ssa_names6 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %4, i64 0, i32 2, !dbg !3910
  %5 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names6, align 8, !dbg !3910
  %tobool7 = icmp eq %struct.VEC_tree_gc* %5, null, !dbg !3910
  br i1 %tobool7, label %cond.end14, label %cond.true8, !dbg !3910

cond.true8:                                       ; preds = %for.body
  %base12 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %5, i64 0, i32 0, !dbg !3910
  br label %cond.end14, !dbg !3910

cond.end14:                                       ; preds = %for.body, %cond.true8
  %cond15 = phi %struct.VEC_tree_base* [ %base12, %cond.true8 ], [ null, %for.body ], !dbg !3910
  %call16 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond15, i32 %i.0) #7, !dbg !3910
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !3865, metadata !DIExpression()), !dbg !3911
  %tobool17 = icmp eq %union.tree_node* %call16, null, !dbg !3912
  br i1 %tobool17, label %cleanup, label %lor.lhs.false, !dbg !3914

lor.lhs.false:                                    ; preds = %cond.end14
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3915
  %bf.load = load i64, i64* %6, align 8, !dbg !3915
  %bf.cast11 = and i64 %bf.load, 4294967296, !dbg !3915
  %tobool19 = icmp eq i64 %bf.cast11, 0, !dbg !3915
  br i1 %tobool19, label %cleanup, label %lor.lhs.false20, !dbg !3916

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %call21 = tail call fastcc zeroext i8 @has_zero_uses(%union.tree_node* nonnull %call16) #7, !dbg !3917
  %tobool22 = icmp eq i8 %call21, 0, !dbg !3917
  br i1 %tobool22, label %lor.lhs.false23, label %cleanup, !dbg !3918

lor.lhs.false23:                                  ; preds = %lor.lhs.false20
  %call24 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* nonnull %call16) #6, !dbg !3919
  %tobool25 = icmp eq i8 %call24, 0, !dbg !3919
  br i1 %tobool25, label %cleanup, label %if.end, !dbg !3920

if.end:                                           ; preds = %lor.lhs.false23
  %call26 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* nonnull %call16) #7, !dbg !3921
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call26, metadata !3869, metadata !DIExpression()), !dbg !3911
  %call27 = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call26) #7, !dbg !3922
  tail call void @add_to_value(i32 %call27, %struct.pre_expr_d* %call26) #7, !dbg !3923
  %7 = load i8, i8* @in_fre, align 1, !dbg !3924
  %tobool28 = icmp eq i8 %7, 0, !dbg !3924
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !3926

if.then29:                                        ; preds = %if.end
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3927
  %cfg = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 1, !dbg !3927
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3927
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 0, !dbg !3927
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3927
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i64 0, i32 2, !dbg !3927
  %11 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !3927
  %12 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %11, align 8, !dbg !3927
  %tmp_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %12, i64 0, i32 2, !dbg !3927
  %13 = load %struct.bitmap_set*, %struct.bitmap_set** %tmp_gen, align 8, !dbg !3927
  tail call fastcc void @bitmap_insert_into_set(%struct.bitmap_set* %13, %struct.pre_expr_d* %call26) #7, !dbg !3928
  br label %if.end31, !dbg !3928

if.end31:                                         ; preds = %if.end, %if.then29
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3929
  %cfg33 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !3929
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg33, align 8, !dbg !3929
  %x_entry_block_ptr34 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 0, !dbg !3929
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr34, align 8, !dbg !3929
  %aux35 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 2, !dbg !3929
  %17 = bitcast i8** %aux35 to %struct.bb_bitmap_sets**, !dbg !3929
  %18 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %17, align 8, !dbg !3929
  %avail_out = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %18, i64 0, i32 3, !dbg !3929
  %19 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out, align 8, !dbg !3929
  tail call fastcc void @bitmap_value_insert_into_set(%struct.bitmap_set* %19, %struct.pre_expr_d* %call26) #7, !dbg !3930
  br label %cleanup, !dbg !3931

cleanup:                                          ; preds = %lor.lhs.false23, %lor.lhs.false20, %lor.lhs.false, %cond.end14, %if.end31
  %inc = add i32 %i.0, 1, !dbg !3932
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3864, metadata !DIExpression()), !dbg !3904
  br label %for.cond, !dbg !3933, !llvm.loop !3934

for.end:                                          ; preds = %cond.end
  %.lcssa = phi %struct.function* [ %3, %cond.end ], !dbg !3904
  %cfg38 = getelementptr inbounds %struct.function, %struct.function* %.lcssa, i64 0, i32 1, !dbg !3936
  %20 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg38, align 8, !dbg !3936
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i64 0, i32 3, !dbg !3936
  %21 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !3936
  %conv39 = sext i32 %21 to i64, !dbg !3936
  %mul = shl nsw i64 %conv39, 3, !dbg !3936
  %call40 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !3936
  %22 = bitcast i8* %call40 to %struct.basic_block_def**, !dbg !3936
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %22, metadata !3862, metadata !DIExpression()), !dbg !3904
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3937
  %cfg42 = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, i32 1, !dbg !3937
  %24 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg42, align 8, !dbg !3937
  %x_entry_block_ptr43 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %24, i64 0, i32 0, !dbg !3937
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr43, align 8, !dbg !3937
  %call44 = tail call %struct.basic_block_def* @first_dom_son(i32 1, %struct.basic_block_def* %25) #6, !dbg !3939
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call44, metadata !3861, metadata !DIExpression()), !dbg !3904
  br label %for.cond45, !dbg !3940

for.cond45:                                       ; preds = %for.body47, %for.end
  %sp.0 = phi i64 [ 0, %for.end ], [ %inc48, %for.body47 ], !dbg !3904
  %son.0 = phi %struct.basic_block_def* [ %call44, %for.end ], [ %call50, %for.body47 ], !dbg !3941
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %son.0, metadata !3861, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i64 %sp.0, metadata !3863, metadata !DIExpression()), !dbg !3904
  %tobool46 = icmp eq %struct.basic_block_def* %son.0, null, !dbg !3942
  br i1 %tobool46, label %while.cond.preheader, label %for.body47, !dbg !3942

while.cond.preheader:                             ; preds = %for.cond45
  %sp.0.lcssa = phi i64 [ %sp.0, %for.cond45 ], !dbg !3904
  call void @llvm.dbg.value(metadata i64 %sp.0.lcssa, metadata !3863, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i64 %sp.0.lcssa, metadata !3863, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i64 %sp.0.lcssa, metadata !3863, metadata !DIExpression()), !dbg !3904
  %26 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3943
  %27 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3944
  %28 = bitcast %struct.gimple_stmt_iterator* %tmp72 to i8*, !dbg !3946
  %29 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !3947
  %30 = bitcast %struct.vn_reference_s** %ref257 to i8*, !dbg !3948
  %31 = bitcast %struct.vn_reference_op_struct** %vro259 to i8*, !dbg !3948
  %32 = bitcast %struct.vn_reference_s** %ref257 to i64*, !dbg !3948
  %33 = bitcast %struct.vn_nary_op_s** %nary to i8*, !dbg !3949
  %34 = bitcast %struct.vn_nary_op_s** %nary to i64*, !dbg !3949
  %35 = bitcast %struct.vn_reference_s** %ref to i8*, !dbg !3950
  %36 = bitcast %struct.vn_reference_op_struct** %vro to i8*, !dbg !3950
  %37 = bitcast %struct.VEC_vn_reference_op_s_heap** %ops to i8*, !dbg !3950
  %38 = bitcast %struct.vn_reference_s** %ref to i64*, !dbg !3950
  br label %while.cond, !dbg !3951

for.body47:                                       ; preds = %for.cond45
  %inc48 = add i64 %sp.0, 1, !dbg !3952
  call void @llvm.dbg.value(metadata i64 %inc48, metadata !3863, metadata !DIExpression()), !dbg !3904
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %22, i64 %sp.0, !dbg !3954
  store %struct.basic_block_def* %son.0, %struct.basic_block_def** %arrayidx, align 8, !dbg !3955
  %call50 = tail call %struct.basic_block_def* @next_dom_son(i32 1, %struct.basic_block_def* nonnull %son.0) #6, !dbg !3956
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call50, metadata !3861, metadata !DIExpression()), !dbg !3904
  br label %for.cond45, !dbg !3957, !llvm.loop !3958

while.cond:                                       ; preds = %while.cond.preheader, %for.end362
  %sp.1 = phi i64 [ %sp.2.lcssa, %for.end362 ], [ %sp.0.lcssa, %while.cond.preheader ], !dbg !3904
  call void @llvm.dbg.value(metadata i64 %sp.1, metadata !3863, metadata !DIExpression()), !dbg !3904
  %tobool52 = icmp eq i64 %sp.1, 0, !dbg !3951
  br i1 %tobool52, label %while.end, label %while.body, !dbg !3951

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8, !dbg !3960
  call void @llvm.dbg.value(metadata i32 1, metadata !3874, metadata !DIExpression()), !dbg !3943
  %dec = add i64 %sp.1, -1, !dbg !3961
  call void @llvm.dbg.value(metadata i64 %dec, metadata !3863, metadata !DIExpression()), !dbg !3904
  %arrayidx53 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %22, i64 %dec, !dbg !3962
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx53, align 8, !dbg !3962
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %39, metadata !3860, metadata !DIExpression()), !dbg !3904
  %call54 = call %struct.basic_block_def* @get_immediate_dominator(i32 1, %struct.basic_block_def* %39) #6, !dbg !3963
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call54, metadata !3873, metadata !DIExpression()), !dbg !3943
  %tobool55 = icmp eq %struct.basic_block_def* %call54, null, !dbg !3964
  br i1 %tobool55, label %if.end61, label %if.then56, !dbg !3966

if.then56:                                        ; preds = %while.body
  %aux57 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i64 0, i32 2, !dbg !3967
  %40 = bitcast i8** %aux57 to %struct.bb_bitmap_sets**, !dbg !3967
  %41 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %40, align 8, !dbg !3967
  %avail_out58 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %41, i64 0, i32 3, !dbg !3967
  %42 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out58, align 8, !dbg !3967
  %aux59 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call54, i64 0, i32 2, !dbg !3968
  %43 = bitcast i8** %aux59 to %struct.bb_bitmap_sets**, !dbg !3968
  %44 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %43, align 8, !dbg !3968
  %avail_out60 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %44, i64 0, i32 3, !dbg !3968
  %45 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out60, align 8, !dbg !3968
  call fastcc void @bitmap_set_copy(%struct.bitmap_set* %42, %struct.bitmap_set* %45) #7, !dbg !3969
  br label %if.end61, !dbg !3969

if.end61:                                         ; preds = %while.body, %if.then56
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8, !dbg !3970
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %39) #6, !dbg !3970
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %27, i64 24, i1 false), !dbg !3970
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8, !dbg !3970
  br label %for.cond62, !dbg !3971

for.cond62:                                       ; preds = %for.body65, %if.end61
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3870, metadata !DIExpression(DW_OP_deref)), !dbg !3943
  %call63 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3972
  %tobool64 = icmp eq i8 %call63, 0, !dbg !3974
  br i1 %tobool64, label %for.body65, label %for.end68, !dbg !3975

for.body65:                                       ; preds = %for.cond62
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3870, metadata !DIExpression(DW_OP_deref)), !dbg !3943
  %call66 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3976
  call fastcc void @make_values_for_phi(%union.gimple_statement_d* %call66, %struct.basic_block_def* %39) #7, !dbg !3977
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3870, metadata !DIExpression(DW_OP_deref)), !dbg !3943
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3978
  br label %for.cond62, !dbg !3979, !llvm.loop !3980

for.end68:                                        ; preds = %for.cond62
  %aux69 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i64 0, i32 2, !dbg !3982
  %46 = bitcast i8** %aux69 to %struct.bb_bitmap_sets**, !dbg !3982
  %47 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %46, align 8, !dbg !3982
  %contains_may_not_return_call = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %47, i64 0, i32 8, !dbg !3982
  %bf.load70 = load i8, i8* %contains_may_not_return_call, align 8, !dbg !3983
  %bf.clear71 = and i8 %bf.load70, -5, !dbg !3983
  store i8 %bf.clear71, i8* %contains_may_not_return_call, align 8, !dbg !3983
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8, !dbg !3984
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp72, %struct.basic_block_def* %39) #7, !dbg !3984
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %28, i64 24, i1 false), !dbg !3984
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8, !dbg !3984
  br label %for.cond73, !dbg !3985

for.cond73:                                       ; preds = %cleanup348, %for.end68
  %stmt_uid.0 = phi i32 [ 1, %for.end68 ], [ %inc79, %cleanup348 ], !dbg !3943
  call void @llvm.dbg.value(metadata i32 %stmt_uid.0, metadata !3874, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3870, metadata !DIExpression(DW_OP_deref)), !dbg !3943
  %call74 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3986
  %tobool75 = icmp eq i8 %call74, 0, !dbg !3987
  br i1 %tobool75, label %for.body77, label %for.end353, !dbg !3988

for.body77:                                       ; preds = %for.cond73
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #8, !dbg !3989
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3870, metadata !DIExpression(DW_OP_deref)), !dbg !3943
  %call78 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3990
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call78, metadata !3872, metadata !DIExpression()), !dbg !3943
  %inc79 = add i32 %stmt_uid.0, 1, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %inc79, metadata !3874, metadata !DIExpression()), !dbg !3943
  call fastcc void @gimple_set_uid(%union.gimple_statement_d* %call78, i32 %stmt_uid.0) #7, !dbg !3992
  %call80 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call78) #7, !dbg !3993
  %tobool82 = icmp eq i8 %call80, 0, !dbg !3993
  br i1 %tobool82, label %if.end97, label %land.lhs.true, !dbg !3994

land.lhs.true:                                    ; preds = %for.body77
  %call83 = call zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* %call78) #6, !dbg !3995
  %tobool84 = icmp eq i8 %call83, 0, !dbg !3995
  br i1 %tobool84, label %if.then85, label %if.end97, !dbg !3996

if.then85:                                        ; preds = %land.lhs.true
  %call86 = call i32 @gimple_call_flags(%union.gimple_statement_d* %call78) #6, !dbg !3997
  call void @llvm.dbg.value(metadata i32 %call86, metadata !3880, metadata !DIExpression()), !dbg !3998
  %48 = and i32 %call86, 5, !dbg !3999
  %49 = icmp eq i32 %48, 1, !dbg !3999
  br i1 %49, label %if.end97, label %if.then91, !dbg !3999

if.then91:                                        ; preds = %if.then85
  %50 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %46, align 8, !dbg !4001
  %contains_may_not_return_call93 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %50, i64 0, i32 8, !dbg !4001
  %bf.load94 = load i8, i8* %contains_may_not_return_call93, align 8, !dbg !4002
  %bf.set = or i8 %bf.load94, 4, !dbg !4002
  store i8 %bf.set, i8* %contains_may_not_return_call93, align 8, !dbg !4002
  br label %if.end97, !dbg !4001

if.end97:                                         ; preds = %if.then85, %land.lhs.true, %for.body77, %if.then91
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3875, metadata !DIExpression(DW_OP_deref)), !dbg !3947
  %call98 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call78, i32 2) #7, !dbg !4003
  call void @llvm.dbg.value(metadata %union.tree_node* %call98, metadata !3879, metadata !DIExpression()), !dbg !3947
  br label %for.cond99, !dbg !4003

for.cond99:                                       ; preds = %if.end111, %if.end97
  %op.0 = phi %union.tree_node* [ %call98, %if.end97 ], [ %call115, %if.end111 ], !dbg !4004
  call void @llvm.dbg.value(metadata %union.tree_node* %op.0, metadata !3879, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3875, metadata !DIExpression(DW_OP_deref)), !dbg !3947
  %call100 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4005
  %tobool101 = icmp eq i8 %call100, 0, !dbg !4005
  br i1 %tobool101, label %for.body103, label %for.end116, !dbg !4003

for.body103:                                      ; preds = %for.cond99
  %call105 = call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %op.0) #7, !dbg !4006
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call105, metadata !3883, metadata !DIExpression()), !dbg !4007
  %call106 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call105) #7, !dbg !4008
  call void @add_to_value(i32 %call106, %struct.pre_expr_d* %call105) #7, !dbg !4009
  %51 = load i8, i8* @in_fre, align 1, !dbg !4010
  %tobool107 = icmp eq i8 %51, 0, !dbg !4010
  br i1 %tobool107, label %if.then108, label %if.end111, !dbg !4012

if.then108:                                       ; preds = %for.body103
  %52 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %46, align 8, !dbg !4013
  %tmp_gen110 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %52, i64 0, i32 2, !dbg !4013
  %53 = load %struct.bitmap_set*, %struct.bitmap_set** %tmp_gen110, align 8, !dbg !4013
  call fastcc void @bitmap_insert_into_set(%struct.bitmap_set* %53, %struct.pre_expr_d* %call105) #7, !dbg !4014
  br label %if.end111, !dbg !4014

if.end111:                                        ; preds = %for.body103, %if.then108
  %54 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %46, align 8, !dbg !4015
  %avail_out113 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %54, i64 0, i32 3, !dbg !4015
  %55 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out113, align 8, !dbg !4015
  call fastcc void @bitmap_value_insert_into_set(%struct.bitmap_set* %55, %struct.pre_expr_d* %call105) #7, !dbg !4016
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3875, metadata !DIExpression(DW_OP_deref)), !dbg !3947
  %call115 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4005
  call void @llvm.dbg.value(metadata %union.tree_node* %call115, metadata !3879, metadata !DIExpression()), !dbg !3947
  br label %for.cond99, !dbg !4005, !llvm.loop !4017

for.end116:                                       ; preds = %for.cond99
  %call117 = call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %call78) #7, !dbg !4019
  %tobool119 = icmp eq i8 %call117, 0, !dbg !4019
  br i1 %tobool119, label %lor.lhs.false120, label %cleanup348, !dbg !4021

lor.lhs.false120:                                 ; preds = %for.end116
  %call121 = call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %call78) #6, !dbg !4022
  %tobool123 = icmp eq i8 %call121, 0, !dbg !4022
  br i1 %tobool123, label %if.end125, label %cleanup348, !dbg !4023

if.end125:                                        ; preds = %lor.lhs.false120
  %call126 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call78) #7, !dbg !4024
  switch i32 %call126, label %cleanup348 [
    i32 9, label %sw.bb
    i32 8, label %sw.bb136
    i32 6, label %sw.bb210
  ], !dbg !4025

sw.bb:                                            ; preds = %if.end125
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3875, metadata !DIExpression(DW_OP_deref)), !dbg !3947
  %call127 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call78, i32 1) #7, !dbg !4026
  call void @llvm.dbg.value(metadata %union.tree_node* %call127, metadata !3879, metadata !DIExpression()), !dbg !3947
  br label %for.cond128, !dbg !4026

for.cond128:                                      ; preds = %for.body132, %sw.bb
  %op.1 = phi %union.tree_node* [ %call127, %sw.bb ], [ %call134, %for.body132 ], !dbg !4028
  call void @llvm.dbg.value(metadata %union.tree_node* %op.1, metadata !3879, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3875, metadata !DIExpression(DW_OP_deref)), !dbg !3947
  %call129 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4029
  %tobool130 = icmp eq i8 %call129, 0, !dbg !4029
  br i1 %tobool130, label %for.body132, label %cleanup348.loopexit, !dbg !4026

for.body132:                                      ; preds = %for.cond128
  call fastcc void @add_to_exp_gen(%struct.basic_block_def* %39, %union.tree_node* %op.1) #7, !dbg !4031
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3875, metadata !DIExpression(DW_OP_deref)), !dbg !3947
  %call134 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4029
  call void @llvm.dbg.value(metadata %union.tree_node* %call134, metadata !3879, metadata !DIExpression()), !dbg !3947
  br label %for.cond128, !dbg !4029, !llvm.loop !4032

sw.bb136:                                         ; preds = %if.end125
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8, !dbg !4034
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8, !dbg !4035
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* null, metadata !3892, metadata !DIExpression()), !dbg !3950
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8, !dbg !4036
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* null, metadata !3893, metadata !DIExpression()), !dbg !3950
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** %ops, align 8, !dbg !4037
  %call138 = call fastcc zeroext i8 @can_value_number_call(%union.gimple_statement_d* %call78) #7, !dbg !4038
  %tobool139 = icmp eq i8 %call138, 0, !dbg !4038
  br i1 %tobool139, label %cleanup205, label %if.end141, !dbg !4040

if.end141:                                        ; preds = %sw.bb136
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %ops, metadata !3893, metadata !DIExpression(DW_OP_deref)), !dbg !3950
  call void @copy_reference_ops_from_call(%union.gimple_statement_d* %call78, %struct.VEC_vn_reference_op_s_heap** nonnull %ops) #6, !dbg !4041
  %call142 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %call78) #7, !dbg !4042
  %call143 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %call78) #7, !dbg !4043
  %56 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %ops, align 8, !dbg !4044
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %56, metadata !3893, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata %struct.vn_reference_s** %ref, metadata !3887, metadata !DIExpression(DW_OP_deref)), !dbg !3950
  %call144 = call %union.tree_node* @vn_reference_lookup_pieces(%union.tree_node* %call142, i32 0, %union.tree_node* %call143, %struct.VEC_vn_reference_op_s_heap* %56, %struct.vn_reference_s** nonnull %ref, i8 zeroext 0) #6, !dbg !4045
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %ops, metadata !3893, metadata !DIExpression(DW_OP_deref)), !dbg !3950
  call fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** nonnull %ops) #7, !dbg !4046
  %57 = load %struct.vn_reference_s*, %struct.vn_reference_s** %ref, align 8, !dbg !4047
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %57, metadata !3887, metadata !DIExpression()), !dbg !3950
  %tobool145 = icmp eq %struct.vn_reference_s* %57, null, !dbg !4047
  br i1 %tobool145, label %cleanup205, label %for.cond148.preheader, !dbg !4049

for.cond148.preheader:                            ; preds = %if.end141
  br label %for.cond148, !dbg !4050

for.cond148:                                      ; preds = %for.cond148.preheader, %for.inc195
  %58 = phi %struct.vn_reference_s* [ %.pre18, %for.inc195 ], [ %57, %for.cond148.preheader ], !dbg !4052
  %i137.0 = phi i32 [ %inc196, %for.inc195 ], [ 0, %for.cond148.preheader ], !dbg !4054
  call void @llvm.dbg.value(metadata i32 %i137.0, metadata !3890, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %58, metadata !3887, metadata !DIExpression()), !dbg !3950
  %operands = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %58, i64 0, i32 5, !dbg !4052
  %59 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !4052
  %tobool149 = icmp eq %struct.VEC_vn_reference_op_s_heap* %59, null, !dbg !4052
  br i1 %tobool149, label %cond.end154, label %cond.true150, !dbg !4052

cond.true150:                                     ; preds = %for.cond148
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %58, metadata !3887, metadata !DIExpression()), !dbg !3950
  %base152 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %59, i64 0, i32 0, !dbg !4052
  br label %cond.end154, !dbg !4052

cond.end154:                                      ; preds = %for.cond148, %cond.true150
  %cond155 = phi %struct.VEC_vn_reference_op_s_base* [ %base152, %cond.true150 ], [ null, %for.cond148 ], !dbg !4052
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %vro, metadata !3891, metadata !DIExpression(DW_OP_deref)), !dbg !3950
  %call156 = call fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %cond155, i32 %i137.0, %struct.vn_reference_op_struct** nonnull %vro) #7, !dbg !4052
  %tobool157 = icmp eq i32 %call156, 0, !dbg !4050
  br i1 %tobool157, label %for.end197, label %for.body158, !dbg !4050

for.body158:                                      ; preds = %cond.end154
  %60 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !4055
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %60, metadata !3891, metadata !DIExpression()), !dbg !3950
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %60, i64 0, i32 2, !dbg !4058
  %61 = load %union.tree_node*, %union.tree_node** %op0, align 8, !dbg !4058
  %tobool159 = icmp eq %union.tree_node* %61, null, !dbg !4055
  br i1 %tobool159, label %if.end170, label %land.lhs.true160, !dbg !4059

land.lhs.true160:                                 ; preds = %for.body158
  %62 = getelementptr inbounds %union.tree_node, %union.tree_node* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4059
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %60, metadata !3891, metadata !DIExpression()), !dbg !3950
  %bf.load163 = load i64, i64* %62, align 8, !dbg !4060
  %bf.cast16510 = and i64 %bf.load163, 65535, !dbg !4061
  %cmp166 = icmp eq i64 %bf.cast16510, 141, !dbg !4061
  br i1 %cmp166, label %if.then168, label %if.end170, !dbg !4062

if.then168:                                       ; preds = %land.lhs.true160
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %60, metadata !3891, metadata !DIExpression()), !dbg !3950
  call fastcc void @add_to_exp_gen(%struct.basic_block_def* %39, %union.tree_node* nonnull %61) #7, !dbg !4063
  %.pre19 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !4064
  br label %if.end170, !dbg !4063

if.end170:                                        ; preds = %for.body158, %if.then168, %land.lhs.true160
  %63 = phi %struct.vn_reference_op_struct* [ %60, %for.body158 ], [ %.pre19, %if.then168 ], [ %60, %land.lhs.true160 ], !dbg !4064
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %63, metadata !3891, metadata !DIExpression()), !dbg !3950
  %op1 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %63, i64 0, i32 3, !dbg !4066
  %64 = load %union.tree_node*, %union.tree_node** %op1, align 8, !dbg !4066
  %tobool171 = icmp eq %union.tree_node* %64, null, !dbg !4064
  br i1 %tobool171, label %if.end182, label %land.lhs.true172, !dbg !4067

land.lhs.true172:                                 ; preds = %if.end170
  %65 = getelementptr inbounds %union.tree_node, %union.tree_node* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4067
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %63, metadata !3891, metadata !DIExpression()), !dbg !3950
  %bf.load175 = load i64, i64* %65, align 8, !dbg !4068
  %bf.cast1779 = and i64 %bf.load175, 65535, !dbg !4069
  %cmp178 = icmp eq i64 %bf.cast1779, 141, !dbg !4069
  br i1 %cmp178, label %if.then180, label %if.end182, !dbg !4070

if.then180:                                       ; preds = %land.lhs.true172
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %63, metadata !3891, metadata !DIExpression()), !dbg !3950
  call fastcc void @add_to_exp_gen(%struct.basic_block_def* %39, %union.tree_node* nonnull %64) #7, !dbg !4071
  %.pre20 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !4072
  br label %if.end182, !dbg !4071

if.end182:                                        ; preds = %if.end170, %if.then180, %land.lhs.true172
  %66 = phi %struct.vn_reference_op_struct* [ %63, %if.end170 ], [ %.pre20, %if.then180 ], [ %63, %land.lhs.true172 ], !dbg !4072
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %66, metadata !3891, metadata !DIExpression()), !dbg !3950
  %op2 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %66, i64 0, i32 4, !dbg !4074
  %67 = load %union.tree_node*, %union.tree_node** %op2, align 8, !dbg !4074
  %tobool183 = icmp eq %union.tree_node* %67, null, !dbg !4072
  br i1 %tobool183, label %for.inc195, label %land.lhs.true184, !dbg !4075

land.lhs.true184:                                 ; preds = %if.end182
  %68 = getelementptr inbounds %union.tree_node, %union.tree_node* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4075
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %66, metadata !3891, metadata !DIExpression()), !dbg !3950
  %bf.load187 = load i64, i64* %68, align 8, !dbg !4076
  %bf.cast1898 = and i64 %bf.load187, 65535, !dbg !4077
  %cmp190 = icmp eq i64 %bf.cast1898, 141, !dbg !4077
  br i1 %cmp190, label %if.then192, label %for.inc195, !dbg !4078

if.then192:                                       ; preds = %land.lhs.true184
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %66, metadata !3891, metadata !DIExpression()), !dbg !3950
  call fastcc void @add_to_exp_gen(%struct.basic_block_def* %39, %union.tree_node* nonnull %67) #7, !dbg !4079
  br label %for.inc195, !dbg !4079

for.inc195:                                       ; preds = %if.end182, %land.lhs.true184, %if.then192
  %inc196 = add i32 %i137.0, 1, !dbg !4080
  call void @llvm.dbg.value(metadata i32 %inc196, metadata !3890, metadata !DIExpression()), !dbg !3950
  %.pre18 = load %struct.vn_reference_s*, %struct.vn_reference_s** %ref, align 8, !dbg !4052
  br label %for.cond148, !dbg !4081, !llvm.loop !4082

for.end197:                                       ; preds = %cond.end154
  %69 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @pre_expr_pool, align 8, !dbg !4084
  %call198 = call i8* @pool_alloc(%struct.alloc_pool_def* %69) #6, !dbg !4085
  %70 = bitcast i8* %call198 to %struct.pre_expr_d*, !dbg !4086
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %70, metadata !3892, metadata !DIExpression()), !dbg !3950
  %kind = bitcast i8* %call198 to i32*, !dbg !4087
  store i32 2, i32* %kind, align 8, !dbg !4088
  %id = getelementptr inbounds i8, i8* %call198, i64 4, !dbg !4089
  %71 = bitcast i8* %id to i32*, !dbg !4089
  store i32 0, i32* %71, align 4, !dbg !4090
  %72 = load i64, i64* %38, align 8, !dbg !4091
  %u = getelementptr inbounds i8, i8* %call198, i64 8, !dbg !4092
  %73 = bitcast i8* %u to i64*, !dbg !4093
  store i64 %72, i64* %73, align 8, !dbg !4093
  %call199 = call fastcc i32 @get_or_alloc_expression_id(%struct.pre_expr_d* %70) #7, !dbg !4094
  %call200 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %70) #7, !dbg !4095
  call void @add_to_value(i32 %call200, %struct.pre_expr_d* %70) #7, !dbg !4096
  %74 = load i8, i8* @in_fre, align 1, !dbg !4097
  %tobool201 = icmp eq i8 %74, 0, !dbg !4097
  br i1 %tobool201, label %if.then202, label %cleanup205, !dbg !4099

if.then202:                                       ; preds = %for.end197
  %75 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %46, align 8, !dbg !4100
  %exp_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %75, i64 0, i32 0, !dbg !4100
  %76 = load %struct.bitmap_set*, %struct.bitmap_set** %exp_gen, align 8, !dbg !4100
  call fastcc void @bitmap_value_insert_into_set(%struct.bitmap_set* %76, %struct.pre_expr_d* %70) #7, !dbg !4101
  br label %cleanup205, !dbg !4101

cleanup205:                                       ; preds = %for.end197, %if.end141, %sw.bb136, %if.then202
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8, !dbg !4102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8, !dbg !4102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8, !dbg !4102
  br label %cleanup348

sw.bb210:                                         ; preds = %if.end125
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* null, metadata !3894, metadata !DIExpression()), !dbg !4103
  %call212 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %call78) #7, !dbg !4104
  %idxprom = sext i32 %call212 to i64, !dbg !4104
  %arrayidx213 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !4104
  %77 = load i32, i32* %arrayidx213, align 4, !dbg !4104
  switch i32 %77, label %sw.default [
    i32 6, label %sw.bb214
    i32 7, label %sw.bb214
    i32 5, label %sw.bb214
    i32 3, label %sw.bb256
    i32 4, label %sw.bb256
  ], !dbg !4105

sw.bb214:                                         ; preds = %sw.bb210, %sw.bb210, %sw.bb210
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8, !dbg !4106
  %call216 = call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %call78) #7, !dbg !4107
  %sub = add i32 %call216, -1, !dbg !4108
  %call217 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %call78) #7, !dbg !4109
  %call218 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %call78) #7, !dbg !4110
  %call219 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call78) #7, !dbg !4111
  %call220 = call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %call78) #7, !dbg !4112
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s** %nary, metadata !3896, metadata !DIExpression(DW_OP_deref)), !dbg !3949
  %call221 = call %union.tree_node* @vn_nary_op_lookup_pieces(i32 %sub, i32 %call217, %union.tree_node* %call218, %union.tree_node* %call219, %union.tree_node* %call220, %union.tree_node* null, %union.tree_node* null, %struct.vn_nary_op_s** nonnull %nary) #6, !dbg !4113
  %78 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %nary, align 8, !dbg !4114
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %78, metadata !3896, metadata !DIExpression()), !dbg !3949
  %tobool222 = icmp eq %struct.vn_nary_op_s* %78, null, !dbg !4114
  br i1 %tobool222, label %cleanup253, label %for.cond225.preheader, !dbg !4116

for.cond225.preheader:                            ; preds = %sw.bb214
  br label %for.cond225, !dbg !4117

for.cond225:                                      ; preds = %for.cond225.preheader, %for.inc245
  %indvars.iv = phi i64 [ 0, %for.cond225.preheader ], [ %indvars.iv.next, %for.inc245 ]
  %.pre1516 = phi %struct.vn_nary_op_s* [ %78, %for.cond225.preheader ], [ %.pre15, %for.inc245 ]
  %79 = phi %struct.vn_nary_op_s* [ %78, %for.cond225.preheader ], [ %.pre15, %for.inc245 ], !dbg !4119
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3899, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %79, metadata !3896, metadata !DIExpression()), !dbg !3949
  %length = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %79, i64 0, i32 1, !dbg !4121
  %bf.load226 = load i32, i32* %length, align 4, !dbg !4121
  %bf.lshr227 = lshr i32 %bf.load226, 16, !dbg !4121
  %80 = zext i32 %bf.lshr227 to i64, !dbg !4122
  %cmp228 = icmp ult i64 %indvars.iv, %80, !dbg !4122
  br i1 %cmp228, label %for.body230, label %for.end247, !dbg !4117

for.body230:                                      ; preds = %for.cond225
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %79, metadata !3896, metadata !DIExpression()), !dbg !3949
  %arrayidx233 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %79, i64 0, i32 5, i64 %indvars.iv, !dbg !4123
  %81 = bitcast %union.tree_node** %arrayidx233 to i64**, !dbg !4123
  %82 = load i64*, i64** %81, align 8, !dbg !4123
  %bf.load235 = load i64, i64* %82, align 8, !dbg !4123
  %bf.cast2377 = and i64 %bf.load235, 65535, !dbg !4125
  %cmp238 = icmp eq i64 %bf.cast2377, 141, !dbg !4125
  br i1 %cmp238, label %if.then240, label %for.inc245, !dbg !4126

if.then240:                                       ; preds = %for.body230
  %83 = bitcast i64* %82 to %union.tree_node*, !dbg !4126
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %79, metadata !3896, metadata !DIExpression()), !dbg !3949
  call fastcc void @add_to_exp_gen(%struct.basic_block_def* %39, %union.tree_node* %83) #7, !dbg !4127
  %.pre15.pre = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %nary, align 8, !dbg !4119
  br label %for.inc245, !dbg !4127

for.inc245:                                       ; preds = %for.body230, %if.then240
  %.pre15 = phi %struct.vn_nary_op_s* [ %.pre1516, %for.body230 ], [ %.pre15.pre, %if.then240 ], !dbg !4119
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4128
  call void @llvm.dbg.value(metadata i32 undef, metadata !3899, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3949
  br label %for.cond225, !dbg !4129, !llvm.loop !4130

for.end247:                                       ; preds = %for.cond225
  %84 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @pre_expr_pool, align 8, !dbg !4132
  %call248 = call i8* @pool_alloc(%struct.alloc_pool_def* %84) #6, !dbg !4133
  %85 = bitcast i8* %call248 to %struct.pre_expr_d*, !dbg !4134
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %85, metadata !3894, metadata !DIExpression()), !dbg !4103
  %kind249 = bitcast i8* %call248 to i32*, !dbg !4135
  store i32 1, i32* %kind249, align 8, !dbg !4136
  %id250 = getelementptr inbounds i8, i8* %call248, i64 4, !dbg !4137
  %86 = bitcast i8* %id250 to i32*, !dbg !4137
  store i32 0, i32* %86, align 4, !dbg !4138
  %87 = load i64, i64* %34, align 8, !dbg !4139
  %u251 = getelementptr inbounds i8, i8* %call248, i64 8, !dbg !4140
  %88 = bitcast i8* %u251 to i64*, !dbg !4141
  store i64 %87, i64* %88, align 8, !dbg !4141
  br label %cleanup253, !dbg !4142

cleanup253:                                       ; preds = %sw.bb214, %for.end247
  %cleanup.dest.slot.2 = phi i1 [ true, %for.end247 ], [ false, %sw.bb214 ]
  %result211.0 = phi %struct.pre_expr_d* [ %85, %for.end247 ], [ null, %sw.bb214 ], !dbg !4103
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %result211.0, metadata !3894, metadata !DIExpression()), !dbg !4103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8, !dbg !4143
  br i1 %cleanup.dest.slot.2, label %sw.epilog, label %cleanup348

sw.bb256:                                         ; preds = %sw.bb210, %sw.bb210
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8, !dbg !4144
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8, !dbg !4145
  %call260 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call78) #7, !dbg !4146
  %call261 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %call78) #7, !dbg !4147
  call void @llvm.dbg.value(metadata %struct.vn_reference_s** %ref257, metadata !3900, metadata !DIExpression(DW_OP_deref)), !dbg !3948
  %call262 = call %union.tree_node* @vn_reference_lookup(%union.tree_node* %call260, %union.tree_node* %call261, i8 zeroext 1, %struct.vn_reference_s** nonnull %ref257) #6, !dbg !4148
  %89 = load %struct.vn_reference_s*, %struct.vn_reference_s** %ref257, align 8, !dbg !4149
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %89, metadata !3900, metadata !DIExpression()), !dbg !3948
  %tobool263 = icmp eq %struct.vn_reference_s* %89, null, !dbg !4149
  br i1 %tobool263, label %cleanup325, label %for.cond266.preheader, !dbg !4151

for.cond266.preheader:                            ; preds = %sw.bb256
  br label %for.cond266, !dbg !4152

for.cond266:                                      ; preds = %for.cond266.preheader, %for.inc317
  %90 = phi %struct.vn_reference_s* [ %.pre, %for.inc317 ], [ %89, %for.cond266.preheader ], !dbg !4154
  %i258.0 = phi i32 [ %inc318, %for.inc317 ], [ 0, %for.cond266.preheader ], !dbg !4156
  call void @llvm.dbg.value(metadata i32 %i258.0, metadata !3902, metadata !DIExpression()), !dbg !3948
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %90, metadata !3900, metadata !DIExpression()), !dbg !3948
  %operands267 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %90, i64 0, i32 5, !dbg !4154
  %91 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands267, align 8, !dbg !4154
  %tobool268 = icmp eq %struct.VEC_vn_reference_op_s_heap* %91, null, !dbg !4154
  br i1 %tobool268, label %cond.end273, label %cond.true269, !dbg !4154

cond.true269:                                     ; preds = %for.cond266
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %90, metadata !3900, metadata !DIExpression()), !dbg !3948
  %base271 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %91, i64 0, i32 0, !dbg !4154
  br label %cond.end273, !dbg !4154

cond.end273:                                      ; preds = %for.cond266, %cond.true269
  %cond274 = phi %struct.VEC_vn_reference_op_s_base* [ %base271, %cond.true269 ], [ null, %for.cond266 ], !dbg !4154
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %vro259, metadata !3903, metadata !DIExpression(DW_OP_deref)), !dbg !3948
  %call275 = call fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %cond274, i32 %i258.0, %struct.vn_reference_op_struct** nonnull %vro259) #7, !dbg !4154
  %tobool276 = icmp eq i32 %call275, 0, !dbg !4152
  br i1 %tobool276, label %for.end319, label %for.body277, !dbg !4152

for.body277:                                      ; preds = %cond.end273
  %92 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro259, align 8, !dbg !4157
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %92, metadata !3903, metadata !DIExpression()), !dbg !3948
  %op0278 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %92, i64 0, i32 2, !dbg !4160
  %93 = load %union.tree_node*, %union.tree_node** %op0278, align 8, !dbg !4160
  %tobool279 = icmp eq %union.tree_node* %93, null, !dbg !4157
  br i1 %tobool279, label %if.end290, label %land.lhs.true280, !dbg !4161

land.lhs.true280:                                 ; preds = %for.body277
  %94 = getelementptr inbounds %union.tree_node, %union.tree_node* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4161
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %92, metadata !3903, metadata !DIExpression()), !dbg !3948
  %bf.load283 = load i64, i64* %94, align 8, !dbg !4162
  %bf.cast2856 = and i64 %bf.load283, 65535, !dbg !4163
  %cmp286 = icmp eq i64 %bf.cast2856, 141, !dbg !4163
  br i1 %cmp286, label %if.then288, label %if.end290, !dbg !4164

if.then288:                                       ; preds = %land.lhs.true280
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %92, metadata !3903, metadata !DIExpression()), !dbg !3948
  call fastcc void @add_to_exp_gen(%struct.basic_block_def* %39, %union.tree_node* nonnull %93) #7, !dbg !4165
  %.pre13 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro259, align 8, !dbg !4166
  br label %if.end290, !dbg !4165

if.end290:                                        ; preds = %for.body277, %if.then288, %land.lhs.true280
  %95 = phi %struct.vn_reference_op_struct* [ %92, %for.body277 ], [ %.pre13, %if.then288 ], [ %92, %land.lhs.true280 ], !dbg !4166
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %95, metadata !3903, metadata !DIExpression()), !dbg !3948
  %op1291 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %95, i64 0, i32 3, !dbg !4168
  %96 = load %union.tree_node*, %union.tree_node** %op1291, align 8, !dbg !4168
  %tobool292 = icmp eq %union.tree_node* %96, null, !dbg !4166
  br i1 %tobool292, label %if.end303, label %land.lhs.true293, !dbg !4169

land.lhs.true293:                                 ; preds = %if.end290
  %97 = getelementptr inbounds %union.tree_node, %union.tree_node* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4169
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %95, metadata !3903, metadata !DIExpression()), !dbg !3948
  %bf.load296 = load i64, i64* %97, align 8, !dbg !4170
  %bf.cast2985 = and i64 %bf.load296, 65535, !dbg !4171
  %cmp299 = icmp eq i64 %bf.cast2985, 141, !dbg !4171
  br i1 %cmp299, label %if.then301, label %if.end303, !dbg !4172

if.then301:                                       ; preds = %land.lhs.true293
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %95, metadata !3903, metadata !DIExpression()), !dbg !3948
  call fastcc void @add_to_exp_gen(%struct.basic_block_def* %39, %union.tree_node* nonnull %96) #7, !dbg !4173
  %.pre14 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro259, align 8, !dbg !4174
  br label %if.end303, !dbg !4173

if.end303:                                        ; preds = %if.end290, %if.then301, %land.lhs.true293
  %98 = phi %struct.vn_reference_op_struct* [ %95, %if.end290 ], [ %.pre14, %if.then301 ], [ %95, %land.lhs.true293 ], !dbg !4174
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %98, metadata !3903, metadata !DIExpression()), !dbg !3948
  %op2304 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %98, i64 0, i32 4, !dbg !4176
  %99 = load %union.tree_node*, %union.tree_node** %op2304, align 8, !dbg !4176
  %tobool305 = icmp eq %union.tree_node* %99, null, !dbg !4174
  br i1 %tobool305, label %for.inc317, label %land.lhs.true306, !dbg !4177

land.lhs.true306:                                 ; preds = %if.end303
  %100 = getelementptr inbounds %union.tree_node, %union.tree_node* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4177
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %98, metadata !3903, metadata !DIExpression()), !dbg !3948
  %bf.load309 = load i64, i64* %100, align 8, !dbg !4178
  %bf.cast3114 = and i64 %bf.load309, 65535, !dbg !4179
  %cmp312 = icmp eq i64 %bf.cast3114, 141, !dbg !4179
  br i1 %cmp312, label %if.then314, label %for.inc317, !dbg !4180

if.then314:                                       ; preds = %land.lhs.true306
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %98, metadata !3903, metadata !DIExpression()), !dbg !3948
  call fastcc void @add_to_exp_gen(%struct.basic_block_def* %39, %union.tree_node* nonnull %99) #7, !dbg !4181
  br label %for.inc317, !dbg !4181

for.inc317:                                       ; preds = %if.end303, %land.lhs.true306, %if.then314
  %inc318 = add i32 %i258.0, 1, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %inc318, metadata !3902, metadata !DIExpression()), !dbg !3948
  %.pre = load %struct.vn_reference_s*, %struct.vn_reference_s** %ref257, align 8, !dbg !4154
  br label %for.cond266, !dbg !4183, !llvm.loop !4184

for.end319:                                       ; preds = %cond.end273
  %101 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @pre_expr_pool, align 8, !dbg !4186
  %call320 = call i8* @pool_alloc(%struct.alloc_pool_def* %101) #6, !dbg !4187
  %102 = bitcast i8* %call320 to %struct.pre_expr_d*, !dbg !4188
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %102, metadata !3894, metadata !DIExpression()), !dbg !4103
  %kind321 = bitcast i8* %call320 to i32*, !dbg !4189
  store i32 2, i32* %kind321, align 8, !dbg !4190
  %id322 = getelementptr inbounds i8, i8* %call320, i64 4, !dbg !4191
  %103 = bitcast i8* %id322 to i32*, !dbg !4191
  store i32 0, i32* %103, align 4, !dbg !4192
  %104 = load i64, i64* %32, align 8, !dbg !4193
  %u323 = getelementptr inbounds i8, i8* %call320, i64 8, !dbg !4194
  %105 = bitcast i8* %u323 to i64*, !dbg !4195
  store i64 %104, i64* %105, align 8, !dbg !4195
  br label %cleanup325, !dbg !4196

cleanup325:                                       ; preds = %sw.bb256, %for.end319
  %cleanup.dest.slot.3 = phi i1 [ true, %for.end319 ], [ false, %sw.bb256 ]
  %result211.1 = phi %struct.pre_expr_d* [ %102, %for.end319 ], [ null, %sw.bb256 ], !dbg !4103
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %result211.1, metadata !3894, metadata !DIExpression()), !dbg !4103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8, !dbg !4197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8, !dbg !4197
  br i1 %cleanup.dest.slot.3, label %sw.epilog, label %cleanup348

sw.default:                                       ; preds = %sw.bb210
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3875, metadata !DIExpression(DW_OP_deref)), !dbg !3947
  %call329 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call78, i32 1) #7, !dbg !4198
  call void @llvm.dbg.value(metadata %union.tree_node* %call329, metadata !3879, metadata !DIExpression()), !dbg !3947
  br label %for.cond330, !dbg !4198

for.cond330:                                      ; preds = %for.body334, %sw.default
  %op.2 = phi %union.tree_node* [ %call329, %sw.default ], [ %call336, %for.body334 ], !dbg !4200
  call void @llvm.dbg.value(metadata %union.tree_node* %op.2, metadata !3879, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3875, metadata !DIExpression(DW_OP_deref)), !dbg !3947
  %call331 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4201
  %tobool332 = icmp eq i8 %call331, 0, !dbg !4201
  br i1 %tobool332, label %for.body334, label %cleanup348.loopexit12, !dbg !4198

for.body334:                                      ; preds = %for.cond330
  call fastcc void @add_to_exp_gen(%struct.basic_block_def* %39, %union.tree_node* %op.2) #7, !dbg !4203
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3875, metadata !DIExpression(DW_OP_deref)), !dbg !3947
  %call336 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4201
  call void @llvm.dbg.value(metadata %union.tree_node* %call336, metadata !3879, metadata !DIExpression()), !dbg !3947
  br label %for.cond330, !dbg !4201, !llvm.loop !4204

sw.epilog:                                        ; preds = %cleanup253, %cleanup325
  %result211.2 = phi %struct.pre_expr_d* [ %result211.1, %cleanup325 ], [ %result211.0, %cleanup253 ], !dbg !4206
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %result211.2, metadata !3894, metadata !DIExpression()), !dbg !4103
  %call338 = call fastcc i32 @get_or_alloc_expression_id(%struct.pre_expr_d* %result211.2) #7, !dbg !4207
  %call339 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %result211.2) #7, !dbg !4208
  call void @add_to_value(i32 %call339, %struct.pre_expr_d* %result211.2) #7, !dbg !4209
  %106 = load i8, i8* @in_fre, align 1, !dbg !4210
  %tobool340 = icmp eq i8 %106, 0, !dbg !4210
  br i1 %tobool340, label %if.then341, label %cleanup348, !dbg !4212

if.then341:                                       ; preds = %sw.epilog
  %107 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %46, align 8, !dbg !4213
  %exp_gen343 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %107, i64 0, i32 0, !dbg !4213
  %108 = load %struct.bitmap_set*, %struct.bitmap_set** %exp_gen343, align 8, !dbg !4213
  call fastcc void @bitmap_value_insert_into_set(%struct.bitmap_set* %108, %struct.pre_expr_d* %result211.2) #7, !dbg !4214
  br label %cleanup348, !dbg !4214

cleanup348.loopexit:                              ; preds = %for.cond128
  br label %cleanup348, !dbg !4215

cleanup348.loopexit12:                            ; preds = %for.cond330
  br label %cleanup348, !dbg !4215

cleanup348:                                       ; preds = %cleanup348.loopexit12, %cleanup348.loopexit, %sw.epilog, %lor.lhs.false120, %for.end116, %if.end125, %cleanup325, %cleanup253, %if.then341, %cleanup205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #8, !dbg !4215
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3870, metadata !DIExpression(DW_OP_deref)), !dbg !3943
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !4216
  br label %for.cond73, !dbg !4217, !llvm.loop !4218

for.end353:                                       ; preds = %for.cond73
  %call354 = call %struct.basic_block_def* @first_dom_son(i32 1, %struct.basic_block_def* %39) #6, !dbg !4220
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call354, metadata !3861, metadata !DIExpression()), !dbg !3904
  br label %for.cond355, !dbg !4222

for.cond355:                                      ; preds = %for.body357, %for.end353
  %sp.2 = phi i64 [ %dec, %for.end353 ], [ %inc358, %for.body357 ], !dbg !3943
  %son.1 = phi %struct.basic_block_def* [ %call354, %for.end353 ], [ %call361, %for.body357 ], !dbg !4223
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %son.1, metadata !3861, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i64 %sp.2, metadata !3863, metadata !DIExpression()), !dbg !3904
  %tobool356 = icmp eq %struct.basic_block_def* %son.1, null, !dbg !4224
  br i1 %tobool356, label %for.end362, label %for.body357, !dbg !4224

for.body357:                                      ; preds = %for.cond355
  %inc358 = add i64 %sp.2, 1, !dbg !4225
  call void @llvm.dbg.value(metadata i64 %inc358, metadata !3863, metadata !DIExpression()), !dbg !3904
  %arrayidx359 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %22, i64 %sp.2, !dbg !4227
  store %struct.basic_block_def* %son.1, %struct.basic_block_def** %arrayidx359, align 8, !dbg !4228
  %call361 = call %struct.basic_block_def* @next_dom_son(i32 1, %struct.basic_block_def* nonnull %son.1) #6, !dbg !4229
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call361, metadata !3861, metadata !DIExpression()), !dbg !3904
  br label %for.cond355, !dbg !4230, !llvm.loop !4231

for.end362:                                       ; preds = %for.cond355
  %sp.2.lcssa = phi i64 [ %sp.2, %for.cond355 ], !dbg !3943
  call void @llvm.dbg.value(metadata i64 %sp.2.lcssa, metadata !3863, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i64 %sp.2.lcssa, metadata !3863, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i64 %sp.2.lcssa, metadata !3863, metadata !DIExpression()), !dbg !3904
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8, !dbg !4233
  br label %while.cond, !dbg !3951, !llvm.loop !4234

while.end:                                        ; preds = %while.cond
  call void @free(i8* %call40) #6, !dbg !4235
  ret void, !dbg !4236
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_antic() unnamed_addr #5 !dbg !4237 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i8 1, metadata !4239, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 0, metadata !4240, metadata !DIExpression()), !dbg !4264
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4265
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4265
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4265
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !4265
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !4265
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %2) #6, !dbg !4266
  store %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def** @has_abnormal_preds, align 8, !dbg !4267
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !4268
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4269
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !4269
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !4269
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !4269
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4269
  %6 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4270
  %7 = bitcast %struct.edge_def** %e to i8*, !dbg !4270
  %8 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4271
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4271
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4271
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4273
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4273
  br label %for.cond, !dbg !4269

for.cond:                                         ; preds = %for.end, %entry
  %13 = phi %struct.control_flow_graph* [ %4, %entry ], [ %.pre3, %for.end ], !dbg !4275
  %.pn = phi %struct.basic_block_def* [ %5, %entry ], [ %block.0, %for.end ]
  %block.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4276
  %block.0 = load %struct.basic_block_def*, %struct.basic_block_def** %block.0.in, align 8, !dbg !4276
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block.0, metadata !4241, metadata !DIExpression()), !dbg !4264
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 1, !dbg !4275
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4275
  %cmp = icmp eq %struct.basic_block_def* %block.0, %14, !dbg !4275
  br i1 %cmp, label %for.end21, label %for.body, !dbg !4269

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !4277
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8, !dbg !4278
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !4279
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block.0, i64 0, i32 0, !dbg !4279
  %call5 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !4279
  %15 = extractvalue { i32, %struct.VEC_edge_gc** } %call5, 0, !dbg !4279
  store i32 %15, i32* %9, align 8, !dbg !4279
  %16 = extractvalue { i32, %struct.VEC_edge_gc** } %call5, 1, !dbg !4279
  store %struct.VEC_edge_gc** %16, %struct.VEC_edge_gc*** %10, align 8, !dbg !4279
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !4279
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !4279
  br label %for.cond6, !dbg !4279

for.cond6:                                        ; preds = %for.inc, %for.body
  %17 = load i32, i32* %11, align 8, !dbg !4280
  %18 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !4280
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4247, metadata !DIExpression(DW_OP_deref)), !dbg !4270
  %call7 = call fastcc zeroext i8 @ei_cond(i32 %17, %struct.VEC_edge_gc** %18, %struct.edge_def** nonnull %e) #7, !dbg !4280
  %tobool = icmp eq i8 %call7, 0, !dbg !4279
  br i1 %tobool, label %for.end.loopexit, label %for.body8, !dbg !4279

for.body8:                                        ; preds = %for.cond6
  %19 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4281
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !4247, metadata !DIExpression()), !dbg !4270
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %19, i64 0, i32 7, !dbg !4283
  %20 = load i32, i32* %flags, align 8, !dbg !4284
  %and = and i32 %20, -33, !dbg !4284
  store i32 %and, i32* %flags, align 8, !dbg !4284
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !4247, metadata !DIExpression()), !dbg !4270
  %and10 = and i32 %20, 2, !dbg !4285
  %tobool11 = icmp eq i32 %and10, 0, !dbg !4285
  br i1 %tobool11, label %for.inc, label %if.then, !dbg !4287

if.then:                                          ; preds = %for.body8
  %21 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @has_abnormal_preds, align 8, !dbg !4288
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block.0, i64 0, i32 9, !dbg !4290
  %22 = load i32, i32* %index, align 8, !dbg !4290
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %21, i32 %22) #7, !dbg !4291
  br label %for.end, !dbg !4292

for.inc:                                          ; preds = %for.body8
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4243, metadata !DIExpression(DW_OP_deref)), !dbg !4270
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4280
  br label %for.cond6, !dbg !4280, !llvm.loop !4293

for.end.loopexit:                                 ; preds = %for.cond6
  br label %for.end, !dbg !4295

for.end:                                          ; preds = %for.end.loopexit, %if.then
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block.0, i64 0, i32 2, !dbg !4295
  %23 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !4295
  %24 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %23, align 8, !dbg !4295
  %visited = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %24, i64 0, i32 8, !dbg !4295
  %bf.load = load i8, i8* %visited, align 8, !dbg !4296
  %bf.clear = and i8 %bf.load, -2, !dbg !4296
  store i8 %bf.clear, i8* %visited, align 8, !dbg !4296
  %25 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %23, align 8, !dbg !4297
  %deferred = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %25, i64 0, i32 8, !dbg !4297
  %bf.load13 = load i8, i8* %deferred, align 8, !dbg !4298
  %bf.clear14 = and i8 %bf.load13, -3, !dbg !4298
  store i8 %bf.clear14, i8* %deferred, align 8, !dbg !4298
  %call15 = call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !4299
  %26 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %23, align 8, !dbg !4300
  %antic_in = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %26, i64 0, i32 4, !dbg !4300
  store %struct.bitmap_set* %call15, %struct.bitmap_set** %antic_in, align 8, !dbg !4301
  %call17 = call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !4302
  %27 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %23, align 8, !dbg !4303
  %pa_in = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %27, i64 0, i32 5, !dbg !4303
  store %struct.bitmap_set* %call17, %struct.bitmap_set** %pa_in, align 8, !dbg !4304
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8, !dbg !4305
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !4305
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4275
  %cfg4.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4306
  %.pre3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4.phi.trans.insert, align 8, !dbg !4275
  br label %for.cond, !dbg !4275, !llvm.loop !4307

for.end21:                                        ; preds = %for.cond
  %call22 = call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !4309
  %28 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4310
  %cfg24 = getelementptr inbounds %struct.function, %struct.function* %28, i64 0, i32 1, !dbg !4310
  %29 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg24, align 8, !dbg !4310
  %x_exit_block_ptr25 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %29, i64 0, i32 1, !dbg !4310
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr25, align 8, !dbg !4310
  %aux26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i64 0, i32 2, !dbg !4310
  %31 = bitcast i8** %aux26 to %struct.bb_bitmap_sets**, !dbg !4310
  %32 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %31, align 8, !dbg !4310
  %antic_in27 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %32, i64 0, i32 4, !dbg !4310
  store %struct.bitmap_set* %call22, %struct.bitmap_set** %antic_in27, align 8, !dbg !4311
  %33 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg24, align 8, !dbg !4312
  %x_exit_block_ptr30 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %33, i64 0, i32 1, !dbg !4312
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr30, align 8, !dbg !4312
  %aux31 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %34, i64 0, i32 2, !dbg !4312
  %35 = bitcast i8** %aux31 to %struct.bb_bitmap_sets**, !dbg !4312
  %36 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %35, align 8, !dbg !4312
  %visited32 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %36, i64 0, i32 8, !dbg !4312
  %bf.load33 = load i8, i8* %visited32, align 8, !dbg !4313
  %bf.set = or i8 %bf.load33, 1, !dbg !4313
  store i8 %bf.set, i8* %visited32, align 8, !dbg !4313
  %call35 = call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !4314
  %37 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4315
  %cfg37 = getelementptr inbounds %struct.function, %struct.function* %37, i64 0, i32 1, !dbg !4315
  %38 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg37, align 8, !dbg !4315
  %x_exit_block_ptr38 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %38, i64 0, i32 1, !dbg !4315
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr38, align 8, !dbg !4315
  %aux39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i64 0, i32 2, !dbg !4315
  %40 = bitcast i8** %aux39 to %struct.bb_bitmap_sets**, !dbg !4315
  %41 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %40, align 8, !dbg !4315
  %pa_in40 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %41, i64 0, i32 5, !dbg !4315
  store %struct.bitmap_set* %call35, %struct.bitmap_set** %pa_in40, align 8, !dbg !4316
  %42 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg37, align 8, !dbg !4317
  %x_last_basic_block43 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %42, i64 0, i32 5, !dbg !4317
  %43 = load i32, i32* %x_last_basic_block43, align 8, !dbg !4317
  %add = add nsw i32 %43, 1, !dbg !4318
  %call44 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %add) #6, !dbg !4319
  store %struct.simple_bitmap_def* %call44, %struct.simple_bitmap_def** @changed_blocks, align 8, !dbg !4320
  call void @sbitmap_ones(%struct.simple_bitmap_def* %call44) #6, !dbg !4321
  br label %while.cond, !dbg !4322

while.cond.loopexit:                              ; preds = %for.cond55
  %changed.1.lcssa = phi i8 [ %changed.1, %for.cond55 ], !dbg !4323
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !4239, metadata !DIExpression()), !dbg !4264
  %inc = add nuw nsw i32 %num_iterations.0, 1, !dbg !4324
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !4239, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !4239, metadata !DIExpression()), !dbg !4264
  br label %while.cond, !dbg !4322

while.cond:                                       ; preds = %while.cond.loopexit, %for.end21
  %num_iterations.0 = phi i32 [ 0, %for.end21 ], [ %inc, %while.cond.loopexit ], !dbg !4264
  %changed.0 = phi i8 [ 1, %for.end21 ], [ %changed.1.lcssa, %while.cond.loopexit ], !dbg !4264
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !4239, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %num_iterations.0, metadata !4240, metadata !DIExpression()), !dbg !4264
  %tobool45 = icmp eq i8 %changed.0, 0, !dbg !4322
  br i1 %tobool45, label %while.end, label %while.body, !dbg !4322

while.body:                                       ; preds = %while.cond
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4325
  %tobool46 = icmp eq %struct._IO_FILE* %44, null, !dbg !4325
  br i1 %tobool46, label %if.end51, label %land.lhs.true, !dbg !4327

land.lhs.true:                                    ; preds = %while.body
  %45 = load i32, i32* @dump_flags, align 4, !dbg !4328
  %and47 = and i32 %45, 8, !dbg !4329
  %tobool48 = icmp eq i32 %and47, 0, !dbg !4329
  br i1 %tobool48, label %if.end51, label %if.then49, !dbg !4330

if.then49:                                        ; preds = %land.lhs.true
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %44, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i32 %num_iterations.0) #6, !dbg !4331
  br label %if.end51, !dbg !4331

if.end51:                                         ; preds = %land.lhs.true, %while.body, %if.then49
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4240, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8 0, metadata !4239, metadata !DIExpression()), !dbg !4264
  %46 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4332
  %cfg53 = getelementptr inbounds %struct.function, %struct.function* %46, i64 0, i32 1, !dbg !4332
  %47 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg53, align 8, !dbg !4332
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %47, i64 0, i32 3, !dbg !4332
  %48 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !4332
  call void @llvm.dbg.value(metadata i32 %48, metadata !4242, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !4264
  %49 = add i32 %48, -3, !dbg !4333
  %50 = sext i32 %49 to i64, !dbg !4333
  br label %for.cond55, !dbg !4333

for.cond55:                                       ; preds = %for.inc90, %if.end51
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc90 ], [ %50, %if.end51 ], !dbg !4334
  %changed.1 = phi i8 [ %changed.2, %for.inc90 ], [ 0, %if.end51 ], !dbg !4323
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !4239, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !4242, metadata !DIExpression()), !dbg !4264
  %cmp56 = icmp sgt i64 %indvars.iv4, -1, !dbg !4335
  br i1 %cmp56, label %for.body57, label %while.cond.loopexit, !dbg !4336, !llvm.loop !4337

for.body57:                                       ; preds = %for.cond55
  %51 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed_blocks, align 8, !dbg !4339
  %52 = load i32*, i32** @postorder, align 8, !dbg !4339
  %arrayidx = getelementptr inbounds i32, i32* %52, i64 %indvars.iv4, !dbg !4339
  %53 = load i32, i32* %arrayidx, align 4, !dbg !4339
  %div = lshr i32 %53, 6, !dbg !4339
  %idxprom58 = zext i32 %div to i64, !dbg !4339
  %arrayidx59 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %51, i64 0, i32 3, i64 %idxprom58, !dbg !4339
  %54 = load i64, i64* %arrayidx59, align 8, !dbg !4339
  %rem = and i32 %53, 63, !dbg !4339
  %sh_prom = zext i32 %rem to i64, !dbg !4339
  %55 = shl i64 1, %sh_prom, !dbg !4339
  %56 = and i64 %54, %55, !dbg !4339
  %tobool63 = icmp eq i64 %56, 0, !dbg !4339
  br i1 %tobool63, label %for.inc90, label %if.then64, !dbg !4340

if.then64:                                        ; preds = %for.body57
  %57 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4341
  %cfg67 = getelementptr inbounds %struct.function, %struct.function* %57, i64 0, i32 1, !dbg !4341
  %58 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg67, align 8, !dbg !4341
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %58, i64 0, i32 2, !dbg !4341
  %59 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4341
  %tobool68 = icmp eq %struct.VEC_basic_block_gc* %59, null, !dbg !4341
  br i1 %tobool68, label %cond.end, label %cond.true, !dbg !4341

cond.true:                                        ; preds = %if.then64
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %59, i64 0, i32 0, !dbg !4341
  br label %cond.end, !dbg !4341

cond.end:                                         ; preds = %if.then64, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %if.then64 ], !dbg !4341
  %call74 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %53) #7, !dbg !4341
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call74, metadata !4248, metadata !DIExpression()), !dbg !4342
  %60 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @has_abnormal_preds, align 8, !dbg !4343
  %index76 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call74, i64 0, i32 9, !dbg !4343
  %61 = load i32, i32* %index76, align 8, !dbg !4343
  %div77 = lshr i32 %61, 6, !dbg !4343
  %idxprom78 = zext i32 %div77 to i64, !dbg !4343
  %arrayidx79 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %60, i64 0, i32 3, i64 %idxprom78, !dbg !4343
  %62 = load i64, i64* %arrayidx79, align 8, !dbg !4343
  %rem81 = and i32 %61, 63, !dbg !4343
  %sh_prom82 = zext i32 %rem81 to i64, !dbg !4343
  %shr83 = lshr i64 %62, %sh_prom82, !dbg !4343
  %63 = trunc i64 %shr83 to i8, !dbg !4343
  %conv = and i8 %63, 1, !dbg !4343
  %call85 = call fastcc zeroext i8 @compute_antic_aux(%struct.basic_block_def* %call74, i8 zeroext %conv) #7, !dbg !4344
  %or2 = or i8 %changed.1, %call85, !dbg !4345
  call void @llvm.dbg.value(metadata i8 %or2, metadata !4239, metadata !DIExpression()), !dbg !4264
  br label %for.inc90, !dbg !4346

for.inc90:                                        ; preds = %for.body57, %cond.end
  %changed.2 = phi i8 [ %or2, %cond.end ], [ %changed.1, %for.body57 ], !dbg !4323
  call void @llvm.dbg.value(metadata i8 %changed.2, metadata !4239, metadata !DIExpression()), !dbg !4264
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, -1, !dbg !4347
  call void @llvm.dbg.value(metadata i32 undef, metadata !4242, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4264
  br label %for.cond55, !dbg !4348, !llvm.loop !4349

while.end:                                        ; preds = %while.cond
  %num_iterations.0.lcssa = phi i32 [ %num_iterations.0, %while.cond ], !dbg !4264
  call void @llvm.dbg.value(metadata i32 %num_iterations.0.lcssa, metadata !4240, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %num_iterations.0.lcssa, metadata !4240, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %num_iterations.0.lcssa, metadata !4240, metadata !DIExpression()), !dbg !4264
  %64 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4351
  call void @statistics_histogram_event(%struct.function* %64, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0), i32 %num_iterations.0.lcssa) #6, !dbg !4352
  %65 = load i8, i8* @do_partial_partial, align 1, !dbg !4353
  %tobool93 = icmp eq i8 %65, 0, !dbg !4353
  br i1 %tobool93, label %if.end168, label %if.then94, !dbg !4354

if.then94:                                        ; preds = %while.end
  %66 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed_blocks, align 8, !dbg !4355
  call void @sbitmap_ones(%struct.simple_bitmap_def* %66) #6, !dbg !4356
  %call95 = call zeroext i8 @mark_dfs_back_edges() #6, !dbg !4357
  call void @llvm.dbg.value(metadata i32 0, metadata !4240, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8 1, metadata !4239, metadata !DIExpression()), !dbg !4264
  br label %while.cond96, !dbg !4358

while.cond96.loopexit:                            ; preds = %for.cond112
  %changed.4.lcssa = phi i8 [ %changed.4, %for.cond112 ], !dbg !4359
  call void @llvm.dbg.value(metadata i8 %changed.4.lcssa, metadata !4239, metadata !DIExpression()), !dbg !4264
  %inc106 = add nuw nsw i32 %num_iterations.1, 1, !dbg !4360
  call void @llvm.dbg.value(metadata i8 %changed.4.lcssa, metadata !4239, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8 %changed.4.lcssa, metadata !4239, metadata !DIExpression()), !dbg !4264
  br label %while.cond96, !dbg !4358

while.cond96:                                     ; preds = %while.cond96.loopexit, %if.then94
  %num_iterations.1 = phi i32 [ 0, %if.then94 ], [ %inc106, %while.cond96.loopexit ], !dbg !4361
  %changed.3 = phi i8 [ 1, %if.then94 ], [ %changed.4.lcssa, %while.cond96.loopexit ], !dbg !4361
  call void @llvm.dbg.value(metadata i8 %changed.3, metadata !4239, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %num_iterations.1, metadata !4240, metadata !DIExpression()), !dbg !4264
  %tobool97 = icmp eq i8 %changed.3, 0, !dbg !4358
  br i1 %tobool97, label %while.end166, label %while.body98, !dbg !4358

while.body98:                                     ; preds = %while.cond96
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4362
  %tobool99 = icmp eq %struct._IO_FILE* %67, null, !dbg !4362
  br i1 %tobool99, label %if.end105, label %land.lhs.true100, !dbg !4364

land.lhs.true100:                                 ; preds = %while.body98
  %68 = load i32, i32* @dump_flags, align 4, !dbg !4365
  %and101 = and i32 %68, 8, !dbg !4366
  %tobool102 = icmp eq i32 %and101, 0, !dbg !4366
  br i1 %tobool102, label %if.end105, label %if.then103, !dbg !4367

if.then103:                                       ; preds = %land.lhs.true100
  %call104 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %67, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i32 %num_iterations.1) #6, !dbg !4368
  br label %if.end105, !dbg !4368

if.end105:                                        ; preds = %land.lhs.true100, %while.body98, %if.then103
  call void @llvm.dbg.value(metadata i32 %inc106, metadata !4240, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8 0, metadata !4239, metadata !DIExpression()), !dbg !4264
  %69 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4369
  %cfg108 = getelementptr inbounds %struct.function, %struct.function* %69, i64 0, i32 1, !dbg !4369
  %70 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg108, align 8, !dbg !4369
  %x_n_basic_blocks109 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %70, i64 0, i32 3, !dbg !4369
  %71 = load i32, i32* %x_n_basic_blocks109, align 8, !dbg !4369
  call void @llvm.dbg.value(metadata i32 %71, metadata !4242, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !4264
  %72 = add i32 %71, -3, !dbg !4370
  %73 = sext i32 %72 to i64, !dbg !4370
  br label %for.cond112, !dbg !4370

for.cond112:                                      ; preds = %for.inc163, %if.end105
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc163 ], [ %73, %if.end105 ], !dbg !4371
  %changed.4 = phi i8 [ %changed.5, %for.inc163 ], [ 0, %if.end105 ], !dbg !4359
  call void @llvm.dbg.value(metadata i8 %changed.4, metadata !4239, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4242, metadata !DIExpression()), !dbg !4264
  %cmp113 = icmp sgt i64 %indvars.iv, -1, !dbg !4372
  br i1 %cmp113, label %for.body115, label %while.cond96.loopexit, !dbg !4373, !llvm.loop !4374

for.body115:                                      ; preds = %for.cond112
  %74 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed_blocks, align 8, !dbg !4376
  %75 = load i32*, i32** @postorder, align 8, !dbg !4376
  %arrayidx118 = getelementptr inbounds i32, i32* %75, i64 %indvars.iv, !dbg !4376
  %76 = load i32, i32* %arrayidx118, align 4, !dbg !4376
  %div119 = lshr i32 %76, 6, !dbg !4376
  %idxprom120 = zext i32 %div119 to i64, !dbg !4376
  %arrayidx121 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %74, i64 0, i32 3, i64 %idxprom120, !dbg !4376
  %77 = load i64, i64* %arrayidx121, align 8, !dbg !4376
  %rem124 = and i32 %76, 63, !dbg !4376
  %sh_prom125 = zext i32 %rem124 to i64, !dbg !4376
  %78 = shl i64 1, %sh_prom125, !dbg !4376
  %79 = and i64 %77, %78, !dbg !4376
  %tobool128 = icmp eq i64 %79, 0, !dbg !4376
  br i1 %tobool128, label %for.inc163, label %if.then129, !dbg !4377

if.then129:                                       ; preds = %for.body115
  %80 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4378
  %cfg132 = getelementptr inbounds %struct.function, %struct.function* %80, i64 0, i32 1, !dbg !4378
  %81 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg132, align 8, !dbg !4378
  %x_basic_block_info133 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %81, i64 0, i32 2, !dbg !4378
  %82 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info133, align 8, !dbg !4378
  %tobool134 = icmp eq %struct.VEC_basic_block_gc* %82, null, !dbg !4378
  br i1 %tobool134, label %cond.end141, label %cond.true135, !dbg !4378

cond.true135:                                     ; preds = %if.then129
  %base139 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %82, i64 0, i32 0, !dbg !4378
  br label %cond.end141, !dbg !4378

cond.end141:                                      ; preds = %if.then129, %cond.true135
  %cond142 = phi %struct.VEC_basic_block_base* [ %base139, %cond.true135 ], [ null, %if.then129 ], !dbg !4378
  %call145 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond142, i32 %76) #7, !dbg !4378
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call145, metadata !4255, metadata !DIExpression()), !dbg !4379
  %83 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @has_abnormal_preds, align 8, !dbg !4380
  %index147 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call145, i64 0, i32 9, !dbg !4380
  %84 = load i32, i32* %index147, align 8, !dbg !4380
  %div148 = lshr i32 %84, 6, !dbg !4380
  %idxprom149 = zext i32 %div148 to i64, !dbg !4380
  %arrayidx150 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %83, i64 0, i32 3, i64 %idxprom149, !dbg !4380
  %85 = load i64, i64* %arrayidx150, align 8, !dbg !4380
  %rem152 = and i32 %84, 63, !dbg !4380
  %sh_prom153 = zext i32 %rem152 to i64, !dbg !4380
  %shr154 = lshr i64 %85, %sh_prom153, !dbg !4380
  %86 = trunc i64 %shr154 to i8, !dbg !4380
  %conv156 = and i8 %86, 1, !dbg !4380
  %call157 = call fastcc zeroext i8 @compute_partial_antic_aux(%struct.basic_block_def* %call145, i8 zeroext %conv156) #7, !dbg !4381
  %or1601 = or i8 %changed.4, %call157, !dbg !4382
  call void @llvm.dbg.value(metadata i8 %or1601, metadata !4239, metadata !DIExpression()), !dbg !4264
  br label %for.inc163, !dbg !4383

for.inc163:                                       ; preds = %for.body115, %cond.end141
  %changed.5 = phi i8 [ %or1601, %cond.end141 ], [ %changed.4, %for.body115 ], !dbg !4359
  call void @llvm.dbg.value(metadata i8 %changed.5, metadata !4239, metadata !DIExpression()), !dbg !4264
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !4384
  call void @llvm.dbg.value(metadata i32 undef, metadata !4242, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4264
  br label %for.cond112, !dbg !4385, !llvm.loop !4386

while.end166:                                     ; preds = %while.cond96
  %num_iterations.1.lcssa = phi i32 [ %num_iterations.1, %while.cond96 ], !dbg !4361
  call void @llvm.dbg.value(metadata i32 %num_iterations.1.lcssa, metadata !4240, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %num_iterations.1.lcssa, metadata !4240, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %num_iterations.1.lcssa, metadata !4240, metadata !DIExpression()), !dbg !4264
  %87 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4388
  call void @statistics_histogram_event(%struct.function* %87, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i64 0, i64 0), i32 %num_iterations.1.lcssa) #6, !dbg !4389
  br label %if.end168, !dbg !4390

if.end168:                                        ; preds = %while.end, %while.end166
  %88 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @has_abnormal_preds, align 8, !dbg !4391
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %88, i64 0, i32 0, !dbg !4391
  %89 = load i8*, i8** %popcount, align 8, !dbg !4391
  call void @free(i8* %89) #6, !dbg !4391
  %90 = load i8*, i8** bitcast (%struct.simple_bitmap_def** @has_abnormal_preds to i8**), align 8, !dbg !4391
  call void @free(i8* %90) #6, !dbg !4391
  %91 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed_blocks, align 8, !dbg !4392
  %popcount169 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %91, i64 0, i32 0, !dbg !4392
  %92 = load i8*, i8** %popcount169, align 8, !dbg !4392
  call void @free(i8* %92) #6, !dbg !4392
  %93 = load i8*, i8** bitcast (%struct.simple_bitmap_def** @changed_blocks to i8**), align 8, !dbg !4392
  call void @free(i8* %93) #6, !dbg !4392
  ret void, !dbg !4393
}

; Function Attrs: nounwind uwtable
define internal fastcc void @insert() unnamed_addr #5 !dbg !4394 {
entry:
  call void @llvm.dbg.value(metadata i8 1, metadata !4396, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 0, metadata !4398, metadata !DIExpression()), !dbg !4399
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4400
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4400
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4400
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !4400
  br label %for.cond, !dbg !4400

for.cond:                                         ; preds = %for.body, %entry
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %entry ], [ %next_bb, %for.body ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4402
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4397, metadata !DIExpression()), !dbg !4399
  %tobool = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !4400
  br i1 %tobool, label %while.cond.preheader, label %for.body, !dbg !4400

while.cond.preheader:                             ; preds = %for.cond
  br label %while.cond, !dbg !4403

for.body:                                         ; preds = %for.cond
  %call = tail call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !4404
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 2, !dbg !4406
  %2 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !4406
  %3 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %2, align 8, !dbg !4406
  %new_sets = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %3, i64 0, i32 6, !dbg !4406
  store %struct.bitmap_set* %call, %struct.bitmap_set** %new_sets, align 8, !dbg !4407
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !4408
  br label %for.cond, !dbg !4408, !llvm.loop !4409

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %num_iterations.0 = phi i32 [ %inc, %while.body ], [ 0, %while.cond.preheader ], !dbg !4399
  %new_stuff.0 = phi i8 [ %call5, %while.body ], [ 1, %while.cond.preheader ], !dbg !4399
  call void @llvm.dbg.value(metadata i8 %new_stuff.0, metadata !4396, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 %num_iterations.0, metadata !4398, metadata !DIExpression()), !dbg !4399
  %tobool1 = icmp eq i8 %new_stuff.0, 0, !dbg !4403
  br i1 %tobool1, label %while.end, label %while.body, !dbg !4403

while.body:                                       ; preds = %while.cond
  %inc = add nuw nsw i32 %num_iterations.0, 1, !dbg !4411
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4398, metadata !DIExpression()), !dbg !4399
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4413
  %cfg3 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !4413
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3, align 8, !dbg !4413
  %x_entry_block_ptr4 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !4413
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr4, align 8, !dbg !4413
  %call5 = tail call fastcc zeroext i8 @insert_aux(%struct.basic_block_def* %6) #7, !dbg !4414
  call void @llvm.dbg.value(metadata i8 %call5, metadata !4396, metadata !DIExpression()), !dbg !4399
  br label %while.cond, !dbg !4403, !llvm.loop !4415

while.end:                                        ; preds = %while.cond
  %num_iterations.0.lcssa = phi i32 [ %num_iterations.0, %while.cond ], !dbg !4399
  call void @llvm.dbg.value(metadata i32 %num_iterations.0.lcssa, metadata !4398, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 %num_iterations.0.lcssa, metadata !4398, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 %num_iterations.0.lcssa, metadata !4398, metadata !DIExpression()), !dbg !4399
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4417
  tail call void @statistics_histogram_event(%struct.function* %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i64 0, i64 0), i32 %num_iterations.0.lcssa) #6, !dbg !4418
  ret void, !dbg !4419
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @eliminate() unnamed_addr #5 !dbg !4420 {
entry:
  %to_remove = alloca %struct.VEC_gimple_heap*, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %stmt = alloca %union.gimple_statement_d*, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp336 = alloca %struct.gimple_stmt_iterator, align 8
  %gsi2 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp423 = alloca %struct.gimple_stmt_iterator, align 8
  %use_p = alloca %struct.ssa_use_operand_d*, align 8
  %use_stmt = alloca %union.gimple_statement_d*, align 8
  %tmp489 = alloca %struct.gimple_stmt_iterator, align 8
  %0 = bitcast %struct.VEC_gimple_heap** %to_remove to i8*, !dbg !4473
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4473
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* null, metadata !4422, metadata !DIExpression()), !dbg !4474
  store %struct.VEC_gimple_heap* null, %struct.VEC_gimple_heap** %to_remove, align 8, !dbg !4475
  call void @llvm.dbg.value(metadata i32 0, metadata !4424, metadata !DIExpression()), !dbg !4474
  %1 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4476
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4476
  %2 = bitcast %union.gimple_statement_d** %stmt to i8*, !dbg !4477
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4477
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4478
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !4478
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4478
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !4478
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4478
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4479
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp336 to i8*, !dbg !4480
  %8 = bitcast %struct.gimple_stmt_iterator* %gsi2 to i8*, !dbg !4481
  %9 = bitcast %struct.gimple_stmt_iterator* %tmp423 to i8*, !dbg !4481
  br label %for.cond, !dbg !4478

for.cond:                                         ; preds = %for.inc436, %entry
  %10 = phi %struct.control_flow_graph* [ %4, %entry ], [ %.pre21, %for.inc436 ], !dbg !4482
  %todo.0 = phi i32 [ 0, %entry ], [ %todo.1.lcssa, %for.inc436 ], !dbg !4483
  %.pn = phi %struct.basic_block_def* [ %5, %entry ], [ %b.0, %for.inc436 ]
  %b.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4484
  %b.0 = load %struct.basic_block_def*, %struct.basic_block_def** %b.0.in, align 8, !dbg !4484
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b.0, metadata !4423, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata i32 %todo.0, metadata !4424, metadata !DIExpression()), !dbg !4474
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 1, !dbg !4482
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4482
  %cmp = icmp eq %struct.basic_block_def* %b.0, %11, !dbg !4482
  br i1 %cmp, label %for.cond439.preheader, label %for.body, !dbg !4478

for.cond439.preheader:                            ; preds = %for.cond
  %todo.0.lcssa = phi i32 [ %todo.0, %for.cond ], !dbg !4483
  call void @llvm.dbg.value(metadata i32 %todo.0.lcssa, metadata !4424, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata i32 %todo.0.lcssa, metadata !4424, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata i32 %todo.0.lcssa, metadata !4424, metadata !DIExpression()), !dbg !4474
  %12 = bitcast %struct.ssa_use_operand_d** %use_p to i8*, !dbg !4485
  %13 = bitcast %union.gimple_statement_d** %use_stmt to i8*, !dbg !4485
  %14 = bitcast %struct.gimple_stmt_iterator* %tmp489 to i8*, !dbg !4486
  br label %for.cond439, !dbg !4489

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !4490
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %b.0) #7, !dbg !4490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !4490
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !4490
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 2, !dbg !4491
  %15 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !4491
  br label %for.cond3, !dbg !4492

for.cond3:                                        ; preds = %for.inc, %for.body
  %todo.1 = phi i32 [ %todo.0, %for.body ], [ %todo.8, %for.inc ], !dbg !4474
  call void @llvm.dbg.value(metadata i32 %todo.1, metadata !4424, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4493
  %tobool = icmp eq i8 %call, 0, !dbg !4494
  br i1 %tobool, label %for.body4, label %for.end, !dbg !4495

for.body4:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call5 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4496
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !4426, metadata !DIExpression()), !dbg !4474
  store %union.gimple_statement_d* %call5, %union.gimple_statement_d** %stmt, align 8, !dbg !4497
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call6 = call fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %call5) #7, !dbg !4498
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4498
  br i1 %tobool7, label %if.else184, label %land.lhs.true, !dbg !4499

land.lhs.true:                                    ; preds = %for.body4
  %16 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4500
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %16, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call8 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %16) #6, !dbg !4500
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4500
  %bf.load = load i64, i64* %17, align 8, !dbg !4500
  %bf.cast16 = and i64 %bf.load, 65535, !dbg !4501
  %cmp9 = icmp eq i64 %bf.cast16, 141, !dbg !4501
  br i1 %cmp9, label %land.lhs.true11, label %if.else184, !dbg !4502

land.lhs.true11:                                  ; preds = %land.lhs.true
  %18 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4503
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %18, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call12 = call zeroext i8 @gimple_assign_ssa_name_copy_p(%union.gimple_statement_d* %18) #6, !dbg !4504
  %tobool13 = icmp eq i8 %call12, 0, !dbg !4504
  br i1 %tobool13, label %land.lhs.true14, label %if.else184, !dbg !4505

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %19 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4506
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %19, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call15 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %19) #6, !dbg !4507
  %tobool16 = icmp eq i8 %call15, 0, !dbg !4507
  br i1 %tobool16, label %land.lhs.true20, label %lor.lhs.false, !dbg !4508

lor.lhs.false:                                    ; preds = %land.lhs.true14
  %20 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4509
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %20, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call17 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %20) #7, !dbg !4510
  %call18 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call17) #6, !dbg !4511
  %tobool19 = icmp eq i8 %call18, 0, !dbg !4511
  br i1 %tobool19, label %land.lhs.true20, label %if.else184, !dbg !4512

land.lhs.true20:                                  ; preds = %lor.lhs.false, %land.lhs.true14
  %21 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4513
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %21, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call21 = call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %21) #7, !dbg !4514
  %tobool22 = icmp eq i8 %call21, 0, !dbg !4514
  br i1 %tobool22, label %land.lhs.true23, label %if.else184, !dbg !4515

land.lhs.true23:                                  ; preds = %land.lhs.true20
  %22 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4516
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %22, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call24 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %22) #6, !dbg !4517
  %call25 = call fastcc zeroext i8 @has_zero_uses(%union.tree_node* %call24) #7, !dbg !4518
  %tobool26 = icmp eq i8 %call25, 0, !dbg !4518
  br i1 %tobool26, label %if.then, label %if.else184, !dbg !4519

if.then:                                          ; preds = %land.lhs.true23
  %23 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4520
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %23, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call27 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %23) #6, !dbg !4521
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !4428, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4437, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4438, metadata !DIExpression()), !dbg !4491
  %call28 = call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %call27) #7, !dbg !4522
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call28, metadata !4439, metadata !DIExpression()), !dbg !4491
  %24 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4523
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %24, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call29 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %24) #6, !dbg !4525
  %tobool30 = icmp eq i8 %call29, 0, !dbg !4525
  br i1 %tobool30, label %if.end, label %if.then31, !dbg !4526

if.then31:                                        ; preds = %if.then
  %25 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4527
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %25, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call32 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %25) #7, !dbg !4528
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !4437, metadata !DIExpression()), !dbg !4491
  br label %if.end, !dbg !4529

if.end:                                           ; preds = %if.then, %if.then31
  %rhs.0 = phi %union.tree_node* [ %call32, %if.then31 ], [ null, %if.then ], !dbg !4491
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0, metadata !4437, metadata !DIExpression()), !dbg !4491
  %26 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %15, align 8, !dbg !4530
  %avail_out = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %26, i64 0, i32 3, !dbg !4530
  %27 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out, align 8, !dbg !4530
  %call33 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call28) #7, !dbg !4531
  %call34 = call fastcc %struct.pre_expr_d* @bitmap_find_leader(%struct.bitmap_set* %27, i32 %call33, %union.gimple_statement_d* null) #7, !dbg !4532
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call34, metadata !4440, metadata !DIExpression()), !dbg !4491
  %tobool35 = icmp eq %struct.pre_expr_d* %call34, null, !dbg !4533
  br i1 %tobool35, label %if.end48, label %if.then36, !dbg !4535

if.then36:                                        ; preds = %if.end
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call34, i64 0, i32 0, !dbg !4536
  %28 = load i32, i32* %kind, align 8, !dbg !4536
  %cmp37 = icmp eq i32 %28, 3, !dbg !4539
  br i1 %cmp37, label %if.then39, label %if.else, !dbg !4540

if.then39:                                        ; preds = %if.then36
  %constant = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call34, i64 0, i32 2, i32 0, !dbg !4541
  %29 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !4541
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !4438, metadata !DIExpression()), !dbg !4491
  br label %if.end48, !dbg !4542

if.else:                                          ; preds = %if.then36
  %cmp41 = icmp eq i32 %28, 0, !dbg !4543
  br i1 %cmp41, label %if.then43, label %if.else45, !dbg !4545

if.then43:                                        ; preds = %if.else
  %name = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call34, i64 0, i32 2, i32 0, !dbg !4546
  %30 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !4546
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !4438, metadata !DIExpression()), !dbg !4491
  br label %if.end48, !dbg !4547

if.else45:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4163, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4548
  br label %if.end48

if.end48:                                         ; preds = %if.end, %if.then39, %if.else45, %if.then43
  %sprime.2 = phi %union.tree_node* [ null, %if.end ], [ %29, %if.then39 ], [ %30, %if.then43 ], [ null, %if.else45 ], !dbg !4491
  call void @llvm.dbg.value(metadata %union.tree_node* %sprime.2, metadata !4438, metadata !DIExpression()), !dbg !4491
  %cond = icmp eq %union.tree_node* %sprime.2, null, !dbg !4549
  br i1 %cond, label %land.lhs.true50, label %lor.lhs.false78, !dbg !4549

land.lhs.true50:                                  ; preds = %if.end48
  %call51 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call27) #6, !dbg !4551
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call51, i64 0, i32 0, !dbg !4552
  %31 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !4552
  %call52 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %31) #6, !dbg !4553
  %tobool54 = icmp eq i8 %call52, 0, !dbg !4553
  br i1 %tobool54, label %if.end76, label %if.then55, !dbg !4554

if.then55:                                        ; preds = %land.lhs.true50
  %call56 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call27) #6, !dbg !4555
  %valnum57 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call56, i64 0, i32 0, !dbg !4557
  %32 = load %union.tree_node*, %union.tree_node** %valnum57, align 8, !dbg !4557
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !4438, metadata !DIExpression()), !dbg !4491
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4558
  %33 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4558
  %type59 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4560
  %34 = load %union.tree_node*, %union.tree_node** %type59, align 8, !dbg !4560
  %call60 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %33, %union.tree_node* %34) #6, !dbg !4561
  %tobool61 = icmp eq i8 %call60, 0, !dbg !4561
  br i1 %tobool61, label %if.then62, label %if.end66, !dbg !4562

if.then62:                                        ; preds = %if.then55
  %35 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4563
  %call65 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %35, %union.tree_node* %32) #6, !dbg !4563
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !4438, metadata !DIExpression()), !dbg !4491
  br label %if.end66, !dbg !4564

if.end66:                                         ; preds = %if.then55, %if.then62
  %sprime.3 = phi %union.tree_node* [ %32, %if.then55 ], [ %call65, %if.then62 ], !dbg !4565
  call void @llvm.dbg.value(metadata %union.tree_node* %sprime.3, metadata !4438, metadata !DIExpression()), !dbg !4491
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4566
  %tobool67 = icmp eq %struct._IO_FILE* %36, null, !dbg !4566
  br i1 %tobool67, label %if.end74, label %land.lhs.true68, !dbg !4568

land.lhs.true68:                                  ; preds = %if.end66
  %37 = load i32, i32* @dump_flags, align 4, !dbg !4569
  %and = and i32 %37, 8, !dbg !4570
  %tobool69 = icmp eq i32 %and, 0, !dbg !4570
  br i1 %tobool69, label %if.end74, label %if.then70, !dbg !4571

if.then70:                                        ; preds = %land.lhs.true68
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %36, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i64 0, i64 0)) #6, !dbg !4572
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4574
  %39 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4575
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %39, metadata !4426, metadata !DIExpression()), !dbg !4474
  call void @print_gimple_expr(%struct._IO_FILE* %38, %union.gimple_statement_d* %39, i32 0, i32 0) #6, !dbg !4576
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4577
  %call72 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0)) #6, !dbg !4578
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4579
  call void @print_generic_expr(%struct._IO_FILE* %41, %union.tree_node* %sprime.3, i32 0) #6, !dbg !4580
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4581
  %call73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0)) #6, !dbg !4582
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4583
  %44 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4584
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %44, metadata !4426, metadata !DIExpression()), !dbg !4474
  call void @print_gimple_stmt(%struct._IO_FILE* %43, %union.gimple_statement_d* %44, i32 0, i32 0) #6, !dbg !4585
  br label %if.end74, !dbg !4586

if.end74:                                         ; preds = %land.lhs.true68, %if.end66, %if.then70
  %45 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 0), align 4, !dbg !4587
  %inc = add nsw i32 %45, 1, !dbg !4587
  store i32 %inc, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 0), align 4, !dbg !4587
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  call void @propagate_tree_value_into_stmt(%struct.gimple_stmt_iterator* nonnull %gsi, %union.tree_node* %sprime.3) #6, !dbg !4588
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call75 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4589
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call75, metadata !4426, metadata !DIExpression()), !dbg !4474
  store %union.gimple_statement_d* %call75, %union.gimple_statement_d** %stmt, align 8, !dbg !4590
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call75, metadata !4426, metadata !DIExpression()), !dbg !4474
  call fastcc void @update_stmt(%union.gimple_statement_d* %call75) #7, !dbg !4591
  br label %cleanup, !dbg !4592

if.end76:                                         ; preds = %land.lhs.true50
  br i1 true, label %if.then81, label %if.end76.if.end107_crit_edge, !dbg !4593

if.end76.if.end107_crit_edge:                     ; preds = %if.end76
  br label %if.end107, !dbg !4593

lor.lhs.false78:                                  ; preds = %if.end48
  %cmp79.old = icmp eq %union.tree_node* %sprime.2, %call27, !dbg !4594
  br i1 %cmp79.old, label %if.then81, label %if.end107, !dbg !4595

if.then81:                                        ; preds = %if.end76, %lor.lhs.false78
  %call82 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call27) #6, !dbg !4596
  %valnum83 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call82, i64 0, i32 0, !dbg !4597
  %46 = load %union.tree_node*, %union.tree_node** %valnum83, align 8, !dbg !4597
  call void @llvm.dbg.value(metadata %union.tree_node* %46, metadata !4441, metadata !DIExpression()), !dbg !4598
  %47 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !4599
  %cmp84 = icmp eq %union.tree_node* %46, %47, !dbg !4601
  br i1 %cmp84, label %if.end107, label %land.lhs.true86, !dbg !4602

land.lhs.true86:                                  ; preds = %if.then81
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4603
  %bf.load88 = load i64, i64* %48, align 8, !dbg !4603
  %bf.cast9020 = and i64 %bf.load88, 65535, !dbg !4604
  %cmp91 = icmp eq i64 %bf.cast9020, 141, !dbg !4604
  br i1 %cmp91, label %land.lhs.true93, label %if.end107, !dbg !4605

land.lhs.true93:                                  ; preds = %land.lhs.true86
  %call94 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %46) #6, !dbg !4606
  %needs_insertion = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call94, i64 0, i32 5, !dbg !4607
  %bf.load95 = load i8, i8* %needs_insertion, align 4, !dbg !4607
  %bf.clear96 = and i8 %bf.load95, 16, !dbg !4607
  %tobool98 = icmp eq i8 %bf.clear96, 0, !dbg !4606
  br i1 %tobool98, label %if.end107, label %land.lhs.true99, !dbg !4608

land.lhs.true99:                                  ; preds = %land.lhs.true93
  %call100 = call %union.tree_node* @vn_get_expr_for(%union.tree_node* %46) #6, !dbg !4609
  %call101 = call fastcc zeroext i8 @can_PRE_operation(%union.tree_node* %call100) #7, !dbg !4610
  %tobool103 = icmp eq i8 %call101, 0, !dbg !4610
  br i1 %tobool103, label %if.end107, label %if.then104, !dbg !4611

if.then104:                                       ; preds = %land.lhs.true99
  %49 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4612
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %49, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call105 = call fastcc %union.tree_node* @do_SCCVN_insertion(%union.gimple_statement_d* %49, %union.tree_node* %46) #7, !dbg !4613
  call void @llvm.dbg.value(metadata %union.tree_node* %call105, metadata !4438, metadata !DIExpression()), !dbg !4491
  br label %if.end107, !dbg !4614

if.end107:                                        ; preds = %if.end76.if.end107_crit_edge, %land.lhs.true99, %land.lhs.true93, %if.then81, %land.lhs.true86, %if.then104, %lor.lhs.false78
  %sprime.5 = phi %union.tree_node* [ %sprime.2, %lor.lhs.false78 ], [ undef, %if.end76.if.end107_crit_edge ], [ %call105, %if.then104 ], [ %sprime.2, %land.lhs.true99 ], [ %sprime.2, %land.lhs.true93 ], [ %sprime.2, %land.lhs.true86 ], [ %sprime.2, %if.then81 ], !dbg !4491
  call void @llvm.dbg.value(metadata %union.tree_node* %sprime.5, metadata !4438, metadata !DIExpression()), !dbg !4491
  %tobool108 = icmp ne %union.tree_node* %sprime.5, null, !dbg !4615
  %cmp110 = icmp ne %union.tree_node* %sprime.5, %call27, !dbg !4617
  %or.cond1 = and i1 %tobool108, %cmp110, !dbg !4618
  br i1 %or.cond1, label %land.lhs.true112, label %cleanup, !dbg !4618

land.lhs.true112:                                 ; preds = %if.end107
  %cmp113 = icmp eq %union.tree_node* %rhs.0, null, !dbg !4619
  br i1 %cmp113, label %if.then126, label %lor.lhs.false115, !dbg !4620

lor.lhs.false115:                                 ; preds = %land.lhs.true112
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4621
  %bf.load117 = load i64, i64* %50, align 8, !dbg !4621
  %bf.cast11917 = and i64 %bf.load117, 65535, !dbg !4622
  %cmp120 = icmp eq i64 %bf.cast11917, 141, !dbg !4622
  br i1 %cmp120, label %lor.lhs.false122, label %if.then126, !dbg !4623

lor.lhs.false122:                                 ; preds = %lor.lhs.false115
  %call123 = call zeroext i8 @may_propagate_copy(%union.tree_node* nonnull %rhs.0, %union.tree_node* nonnull %sprime.5) #6, !dbg !4624
  %tobool125 = icmp eq i8 %call123, 0, !dbg !4624
  br i1 %tobool125, label %cleanup, label %if.then126, !dbg !4625

if.then126:                                       ; preds = %lor.lhs.false122, %lor.lhs.false115, %land.lhs.true112
  %cmp127 = icmp eq %union.tree_node* %sprime.5, %rhs.0, !dbg !4626
  br i1 %cmp127, label %cond.true, label %cond.end, !dbg !4626

cond.true:                                        ; preds = %if.then126
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4209, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4626
  br label %cond.end, !dbg !4626

cond.end:                                         ; preds = %if.then126, %cond.true
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4628
  %tobool129 = icmp eq %struct._IO_FILE* %51, null, !dbg !4628
  br i1 %tobool129, label %if.end137, label %land.lhs.true130, !dbg !4630

land.lhs.true130:                                 ; preds = %cond.end
  %52 = load i32, i32* @dump_flags, align 4, !dbg !4631
  %and131 = and i32 %52, 8, !dbg !4632
  %tobool132 = icmp eq i32 %and131, 0, !dbg !4632
  br i1 %tobool132, label %if.end137, label %if.then133, !dbg !4633

if.then133:                                       ; preds = %land.lhs.true130
  %call134 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %51, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i64 0, i64 0)) #6, !dbg !4634
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4636
  %54 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4637
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %54, metadata !4426, metadata !DIExpression()), !dbg !4474
  call void @print_gimple_expr(%struct._IO_FILE* %53, %union.gimple_statement_d* %54, i32 0, i32 0) #6, !dbg !4638
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4639
  %call135 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0)) #6, !dbg !4640
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4641
  call void @print_generic_expr(%struct._IO_FILE* %56, %union.tree_node* nonnull %sprime.5, i32 0) #6, !dbg !4642
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4643
  %call136 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0)) #6, !dbg !4644
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4645
  %59 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4646
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %59, metadata !4426, metadata !DIExpression()), !dbg !4474
  call void @print_gimple_stmt(%struct._IO_FILE* %58, %union.gimple_statement_d* %59, i32 0, i32 0) #6, !dbg !4647
  br label %if.end137, !dbg !4648

if.end137:                                        ; preds = %land.lhs.true130, %cond.end, %if.then133
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %sprime.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4649
  %bf.load139 = load i64, i64* %60, align 8, !dbg !4649
  %bf.cast14118 = and i64 %bf.load139, 65535, !dbg !4651
  %cmp142 = icmp eq i64 %bf.cast14118, 141, !dbg !4651
  br i1 %cmp142, label %if.then144, label %if.end145, !dbg !4652

if.then144:                                       ; preds = %if.end137
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %sprime.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4653
  %61 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4653
  %62 = load %union.gimple_statement_d*, %union.gimple_statement_d** %61, align 8, !dbg !4653
  call fastcc void @gimple_set_plf(%union.gimple_statement_d* %62, i32 1, i8 zeroext 1) #7, !dbg !4654
  br label %if.end145, !dbg !4654

if.end145:                                        ; preds = %if.then144, %if.end137
  br i1 %cmp113, label %land.lhs.true154, label %lor.lhs.false147, !dbg !4655

lor.lhs.false147:                                 ; preds = %if.end145
  %63 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4657
  %bf.load149 = load i64, i64* %63, align 8, !dbg !4657
  %bf.cast15119 = and i64 %bf.load149, 65535, !dbg !4658
  %cmp152 = icmp eq i64 %bf.cast15119, 141, !dbg !4658
  br i1 %cmp152, label %if.end163, label %land.lhs.true154, !dbg !4659

land.lhs.true154:                                 ; preds = %lor.lhs.false147, %if.end145
  %64 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4660
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %64, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call155 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %64) #7, !dbg !4661
  %type157 = getelementptr inbounds %union.tree_node, %union.tree_node* %sprime.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4662
  %65 = load %union.tree_node*, %union.tree_node** %type157, align 8, !dbg !4662
  %call158 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %call155, %union.tree_node* %65) #6, !dbg !4663
  %tobool159 = icmp eq i8 %call158, 0, !dbg !4663
  br i1 %tobool159, label %if.then160, label %if.end163, !dbg !4664

if.then160:                                       ; preds = %land.lhs.true154
  %66 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4665
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %66, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call161 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %66) #7, !dbg !4665
  %call162 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call161, %union.tree_node* nonnull %sprime.5) #6, !dbg !4665
  call void @llvm.dbg.value(metadata %union.tree_node* %call162, metadata !4438, metadata !DIExpression()), !dbg !4491
  br label %if.end163, !dbg !4666

if.end163:                                        ; preds = %lor.lhs.false147, %land.lhs.true154, %if.then160
  %sprime.6 = phi %union.tree_node* [ %sprime.5, %land.lhs.true154 ], [ %call162, %if.then160 ], [ %sprime.5, %lor.lhs.false147 ], !dbg !4491
  call void @llvm.dbg.value(metadata %union.tree_node* %sprime.6, metadata !4438, metadata !DIExpression()), !dbg !4491
  %67 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 0), align 4, !dbg !4667
  %inc164 = add nsw i32 %67, 1, !dbg !4667
  store i32 %inc164, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 0), align 4, !dbg !4667
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  call void @propagate_tree_value_into_stmt(%struct.gimple_stmt_iterator* nonnull %gsi, %union.tree_node* %sprime.6) #6, !dbg !4668
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call165 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4669
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call165, metadata !4426, metadata !DIExpression()), !dbg !4474
  store %union.gimple_statement_d* %call165, %union.gimple_statement_d** %stmt, align 8, !dbg !4670
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call165, metadata !4426, metadata !DIExpression()), !dbg !4474
  call fastcc void @update_stmt(%union.gimple_statement_d* %call165) #7, !dbg !4671
  %68 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4672
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %68, metadata !4426, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %68, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call166 = call zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d* %68, %union.gimple_statement_d* %68) #6, !dbg !4674
  %tobool167 = icmp eq i8 %call166, 0, !dbg !4674
  br i1 %tobool167, label %cleanup, label %if.then168, !dbg !4675

if.then168:                                       ; preds = %if.end163
  %69 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !4676
  %70 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4678
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %70, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call169 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %70) #7, !dbg !4679
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call169, i64 0, i32 9, !dbg !4680
  %71 = load i32, i32* %index, align 8, !dbg !4680
  %call170 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %69, i32 %71) #6, !dbg !4681
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4682
  %tobool171 = icmp eq %struct._IO_FILE* %72, null, !dbg !4682
  br i1 %tobool171, label %cleanup, label %land.lhs.true172, !dbg !4684

land.lhs.true172:                                 ; preds = %if.then168
  %73 = load i32, i32* @dump_flags, align 4, !dbg !4685
  %and173 = and i32 %73, 8, !dbg !4686
  %tobool174 = icmp eq i32 %and173, 0, !dbg !4686
  br i1 %tobool174, label %cleanup, label %if.then175, !dbg !4687

if.then175:                                       ; preds = %land.lhs.true172
  %call176 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %72, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !4688
  br label %cleanup, !dbg !4688

cleanup:                                          ; preds = %land.lhs.true172, %if.then168, %if.end163, %lor.lhs.false122, %if.end107, %if.then175, %if.end74
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end74 ], [ true, %if.end163 ], [ true, %if.then175 ], [ true, %land.lhs.true172 ], [ true, %if.then168 ], [ true, %lor.lhs.false122 ], [ true, %if.end107 ]
  br i1 %cleanup.dest.slot.0, label %if.end282, label %for.inc

if.else184:                                       ; preds = %lor.lhs.false, %land.lhs.true23, %land.lhs.true20, %land.lhs.true11, %for.body4, %land.lhs.true
  %74 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4689
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %74, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call185 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %74) #6, !dbg !4690
  %tobool187 = icmp eq i8 %call185, 0, !dbg !4690
  br i1 %tobool187, label %if.else236, label %land.lhs.true188, !dbg !4691

land.lhs.true188:                                 ; preds = %if.else184
  %75 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4692
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %75, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call189 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %75) #7, !dbg !4693
  %call190 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call189) #6, !dbg !4694
  %tobool191 = icmp eq i8 %call190, 0, !dbg !4694
  br i1 %tobool191, label %land.lhs.true192, label %if.else236, !dbg !4695

land.lhs.true192:                                 ; preds = %land.lhs.true188
  %76 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4696
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %76, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call193 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %76) #7, !dbg !4696
  %77 = getelementptr inbounds %union.tree_node, %union.tree_node* %call193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4696
  %bf.load195 = load i64, i64* %77, align 8, !dbg !4696
  %bf.cast19714 = and i64 %bf.load195, 65535, !dbg !4697
  %cmp198 = icmp eq i64 %bf.cast19714, 141, !dbg !4697
  br i1 %cmp198, label %if.then205, label %lor.lhs.false200, !dbg !4698

lor.lhs.false200:                                 ; preds = %land.lhs.true192
  %78 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4699
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %78, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call201 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %78) #7, !dbg !4700
  %call202 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call201) #6, !dbg !4701
  %tobool204 = icmp eq i8 %call202, 0, !dbg !4701
  br i1 %tobool204, label %if.else236, label %if.then205, !dbg !4702

if.then205:                                       ; preds = %lor.lhs.false200, %land.lhs.true192
  %79 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4703
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %79, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call207 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %79) #7, !dbg !4704
  call void @llvm.dbg.value(metadata %union.tree_node* %call207, metadata !4444, metadata !DIExpression()), !dbg !4705
  %80 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4706
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %80, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call209 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %80) #7, !dbg !4707
  %81 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4708
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %81, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call210 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %81) #7, !dbg !4709
  %call211 = call %union.tree_node* @vn_reference_lookup(%union.tree_node* %call209, %union.tree_node* %call210, i8 zeroext 1, %struct.vn_reference_s** null) #6, !dbg !4710
  call void @llvm.dbg.value(metadata %union.tree_node* %call211, metadata !4447, metadata !DIExpression()), !dbg !4705
  %82 = getelementptr inbounds %union.tree_node, %union.tree_node* %call207, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4711
  %bf.load213 = load i64, i64* %82, align 8, !dbg !4711
  %bf.cast21515 = and i64 %bf.load213, 65535, !dbg !4713
  %cmp216 = icmp eq i64 %bf.cast21515, 141, !dbg !4713
  br i1 %cmp216, label %if.then218, label %if.end221, !dbg !4714

if.then218:                                       ; preds = %if.then205
  %call219 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call207) #6, !dbg !4715
  %valnum220 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call219, i64 0, i32 0, !dbg !4716
  %83 = load %union.tree_node*, %union.tree_node** %valnum220, align 8, !dbg !4716
  call void @llvm.dbg.value(metadata %union.tree_node* %83, metadata !4444, metadata !DIExpression()), !dbg !4705
  br label %if.end221, !dbg !4717

if.end221:                                        ; preds = %if.then218, %if.then205
  %rhs206.0 = phi %union.tree_node* [ %83, %if.then218 ], [ %call207, %if.then205 ], !dbg !4705
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs206.0, metadata !4444, metadata !DIExpression()), !dbg !4705
  %tobool222 = icmp eq %union.tree_node* %call211, null, !dbg !4718
  br i1 %tobool222, label %if.end282, label %land.lhs.true223, !dbg !4720

land.lhs.true223:                                 ; preds = %if.end221
  %call224 = call i32 @operand_equal_p(%union.tree_node* nonnull %call211, %union.tree_node* %rhs206.0, i32 0) #6, !dbg !4721
  %tobool225 = icmp eq i32 %call224, 0, !dbg !4721
  br i1 %tobool225, label %if.end282, label %if.then226, !dbg !4722

if.then226:                                       ; preds = %land.lhs.true223
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4723
  %tobool227 = icmp eq %struct._IO_FILE* %84, null, !dbg !4723
  br i1 %tobool227, label %if.end233, label %land.lhs.true228, !dbg !4726

land.lhs.true228:                                 ; preds = %if.then226
  %85 = load i32, i32* @dump_flags, align 4, !dbg !4727
  %and229 = and i32 %85, 8, !dbg !4728
  %tobool230 = icmp eq i32 %and229, 0, !dbg !4728
  br i1 %tobool230, label %if.end233, label %if.then231, !dbg !4729

if.then231:                                       ; preds = %land.lhs.true228
  %call232 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %84, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !4730
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4732
  %87 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4733
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %87, metadata !4426, metadata !DIExpression()), !dbg !4474
  call void @print_gimple_stmt(%struct._IO_FILE* %86, %union.gimple_statement_d* %87, i32 0, i32 0) #6, !dbg !4734
  br label %if.end233, !dbg !4735

if.end233:                                        ; preds = %land.lhs.true228, %if.then226, %if.then231
  %88 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4736
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %88, metadata !4426, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %to_remove, metadata !4422, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call234 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** nonnull %to_remove, %union.gimple_statement_d* %88) #7, !dbg !4736
  br label %if.end282, !dbg !4737

if.else236:                                       ; preds = %lor.lhs.false200, %land.lhs.true188, %if.else184
  %89 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4738
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %89, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call237 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %89) #7, !dbg !4739
  %cmp238 = icmp eq i32 %call237, 1, !dbg !4740
  br i1 %cmp238, label %if.then240, label %if.end282, !dbg !4741

if.then240:                                       ; preds = %if.else236
  %90 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4742
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %90, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call241 = call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %90) #7, !dbg !4743
  call void @llvm.dbg.value(metadata %union.tree_node* %call241, metadata !4448, metadata !DIExpression()), !dbg !4744
  %91 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4745
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %91, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call242 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %91) #7, !dbg !4746
  call void @llvm.dbg.value(metadata %union.tree_node* %call242, metadata !4451, metadata !DIExpression()), !dbg !4744
  %92 = getelementptr inbounds %union.tree_node, %union.tree_node* %call241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4747
  %bf.load244 = load i64, i64* %92, align 8, !dbg !4747
  %bf.cast24611 = and i64 %bf.load244, 65535, !dbg !4749
  %cmp247 = icmp eq i64 %bf.cast24611, 141, !dbg !4749
  br i1 %cmp247, label %if.then249, label %if.end252, !dbg !4750

if.then249:                                       ; preds = %if.then240
  %call250 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call241) #6, !dbg !4751
  %valnum251 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call250, i64 0, i32 0, !dbg !4752
  %93 = load %union.tree_node*, %union.tree_node** %valnum251, align 8, !dbg !4752
  call void @llvm.dbg.value(metadata %union.tree_node* %93, metadata !4448, metadata !DIExpression()), !dbg !4744
  br label %if.end252, !dbg !4753

if.end252:                                        ; preds = %if.then249, %if.then240
  %op0.0 = phi %union.tree_node* [ %93, %if.then249 ], [ %call241, %if.then240 ], !dbg !4744
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0, metadata !4448, metadata !DIExpression()), !dbg !4744
  %94 = getelementptr inbounds %union.tree_node, %union.tree_node* %call242, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4754
  %bf.load254 = load i64, i64* %94, align 8, !dbg !4754
  %bf.cast25612 = and i64 %bf.load254, 65535, !dbg !4756
  %cmp257 = icmp eq i64 %bf.cast25612, 141, !dbg !4756
  br i1 %cmp257, label %if.then259, label %if.end262, !dbg !4757

if.then259:                                       ; preds = %if.end252
  %call260 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call242) #6, !dbg !4758
  %valnum261 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call260, i64 0, i32 0, !dbg !4759
  %95 = load %union.tree_node*, %union.tree_node** %valnum261, align 8, !dbg !4759
  call void @llvm.dbg.value(metadata %union.tree_node* %95, metadata !4451, metadata !DIExpression()), !dbg !4744
  br label %if.end262, !dbg !4760

if.end262:                                        ; preds = %if.then259, %if.end252
  %op1.0 = phi %union.tree_node* [ %95, %if.then259 ], [ %call242, %if.end252 ], !dbg !4744
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0, metadata !4451, metadata !DIExpression()), !dbg !4744
  %96 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4761
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %96, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call263 = call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %96) #7, !dbg !4761
  %97 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4761
  %call264 = call %union.tree_node* @fold_binary_loc(i32 0, i32 %call263, %union.tree_node* %97, %union.tree_node* %op0.0, %union.tree_node* %op1.0) #6, !dbg !4761
  call void @llvm.dbg.value(metadata %union.tree_node* %call264, metadata !4452, metadata !DIExpression()), !dbg !4744
  %tobool265 = icmp eq %union.tree_node* %call264, null, !dbg !4762
  br i1 %tobool265, label %if.end282, label %land.lhs.true266, !dbg !4764

land.lhs.true266:                                 ; preds = %if.end262
  %98 = getelementptr inbounds %union.tree_node, %union.tree_node* %call264, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4765
  %bf.load268 = load i64, i64* %98, align 8, !dbg !4765
  %bf.cast27013 = and i64 %bf.load268, 65535, !dbg !4766
  %cmp271 = icmp eq i64 %bf.cast27013, 23, !dbg !4766
  br i1 %cmp271, label %if.then273, label %if.end282, !dbg !4767

if.then273:                                       ; preds = %land.lhs.true266
  %call274 = call i32 @integer_zerop(%union.tree_node* nonnull %call264) #6, !dbg !4768
  %tobool275 = icmp eq i32 %call274, 0, !dbg !4768
  %99 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4771
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %99, metadata !4426, metadata !DIExpression()), !dbg !4474
  br i1 %tobool275, label %if.else277, label %if.then276, !dbg !4772

if.then276:                                       ; preds = %if.then273
  call fastcc void @gimple_cond_make_false(%union.gimple_statement_d* %99) #7, !dbg !4773
  br label %if.end278, !dbg !4773

if.else277:                                       ; preds = %if.then273
  call fastcc void @gimple_cond_make_true(%union.gimple_statement_d* %99) #7, !dbg !4774
  br label %if.end278

if.end278:                                        ; preds = %if.else277, %if.then276
  %100 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4775
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %100, metadata !4426, metadata !DIExpression()), !dbg !4474
  call fastcc void @update_stmt(%union.gimple_statement_d* %100) #7, !dbg !4776
  call void @llvm.dbg.value(metadata i32 32, metadata !4424, metadata !DIExpression()), !dbg !4474
  br label %if.end282, !dbg !4777

if.end282:                                        ; preds = %land.lhs.true223, %if.end221, %if.end262, %if.end233, %land.lhs.true266, %if.end278, %if.else236, %cleanup
  %todo.5 = phi i32 [ %todo.1, %cleanup ], [ %todo.1, %if.end233 ], [ %todo.1, %land.lhs.true223 ], [ %todo.1, %if.end221 ], [ %todo.1, %if.else236 ], [ 32, %if.end278 ], [ %todo.1, %land.lhs.true266 ], [ %todo.1, %if.end262 ], !dbg !4474
  call void @llvm.dbg.value(metadata i32 %todo.5, metadata !4424, metadata !DIExpression()), !dbg !4474
  %101 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4778
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %101, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call283 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %101) #7, !dbg !4779
  %cmp284 = icmp eq i32 %call283, 8, !dbg !4780
  br i1 %cmp284, label %land.lhs.true286, label %for.inc, !dbg !4781

land.lhs.true286:                                 ; preds = %if.end282
  %102 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4782
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %102, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call287 = call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %102) #7, !dbg !4782
  %103 = getelementptr inbounds %union.tree_node, %union.tree_node* %call287, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4782
  %bf.load289 = load i64, i64* %103, align 8, !dbg !4782
  %bf.cast2918 = and i64 %bf.load289, 65535, !dbg !4783
  %cmp292 = icmp eq i64 %bf.cast2918, 141, !dbg !4783
  br i1 %cmp292, label %if.then294, label %for.inc, !dbg !4784

if.then294:                                       ; preds = %land.lhs.true286
  %104 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4785
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %104, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call295 = call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %104) #7, !dbg !4786
  %call296 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call295) #6, !dbg !4787
  %valnum297 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call296, i64 0, i32 0, !dbg !4788
  %105 = load %union.tree_node*, %union.tree_node** %valnum297, align 8, !dbg !4788
  call void @llvm.dbg.value(metadata %union.tree_node* %105, metadata !4453, metadata !DIExpression()), !dbg !4789
  %106 = getelementptr inbounds %union.tree_node, %union.tree_node* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4790
  %bf.load299 = load i64, i64* %106, align 8, !dbg !4790
  %bf.cast3019 = and i64 %bf.load299, 65535, !dbg !4792
  %cmp302 = icmp eq i64 %bf.cast3019, 121, !dbg !4792
  br i1 %cmp302, label %land.lhs.true304, label %for.inc, !dbg !4793

land.lhs.true304:                                 ; preds = %if.then294
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4794
  %107 = bitcast %union.tree_node** %operands to i64**, !dbg !4794
  %108 = load i64*, i64** %107, align 8, !dbg !4794
  %bf.load306 = load i64, i64* %108, align 8, !dbg !4794
  %bf.cast30810 = and i64 %bf.load306, 65535, !dbg !4795
  %cmp309 = icmp eq i64 %bf.cast30810, 29, !dbg !4795
  br i1 %cmp309, label %if.then311, label %for.inc, !dbg !4796

if.then311:                                       ; preds = %land.lhs.true304
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4797
  %tobool312 = icmp eq %struct._IO_FILE* %109, null, !dbg !4797
  br i1 %tobool312, label %if.end319, label %land.lhs.true313, !dbg !4800

land.lhs.true313:                                 ; preds = %if.then311
  %110 = load i32, i32* @dump_flags, align 4, !dbg !4801
  %and314 = and i32 %110, 8, !dbg !4802
  %tobool315 = icmp eq i32 %and314, 0, !dbg !4802
  br i1 %tobool315, label %if.end319, label %if.then316, !dbg !4803

if.then316:                                       ; preds = %land.lhs.true313
  %call317 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %109, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !4804
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4806
  call void @print_generic_expr(%struct._IO_FILE* %111, %union.tree_node* %105, i32 0) #6, !dbg !4807
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4808
  %call318 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0)) #6, !dbg !4809
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4810
  %114 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4811
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %114, metadata !4426, metadata !DIExpression()), !dbg !4474
  call void @print_gimple_stmt(%struct._IO_FILE* %113, %union.gimple_statement_d* %114, i32 0, i32 0) #6, !dbg !4812
  br label %if.end319, !dbg !4813

if.end319:                                        ; preds = %land.lhs.true313, %if.then311, %if.then316
  %115 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4814
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %115, metadata !4426, metadata !DIExpression()), !dbg !4474
  call fastcc void @gimple_call_set_fn(%union.gimple_statement_d* %115, %union.tree_node* %105) #7, !dbg !4815
  %116 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4816
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %116, metadata !4426, metadata !DIExpression()), !dbg !4474
  call fastcc void @update_stmt(%union.gimple_statement_d* %116) #7, !dbg !4817
  %117 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4818
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %117, metadata !4426, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %117, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call320 = call zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d* %117, %union.gimple_statement_d* %117) #6, !dbg !4820
  %tobool321 = icmp eq i8 %call320, 0, !dbg !4820
  br i1 %tobool321, label %if.end333, label %if.then322, !dbg !4821

if.then322:                                       ; preds = %if.end319
  %118 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !4822
  %119 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4824
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %119, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call323 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %119) #7, !dbg !4825
  %index324 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call323, i64 0, i32 9, !dbg !4826
  %120 = load i32, i32* %index324, align 8, !dbg !4826
  %call325 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %118, i32 %120) #6, !dbg !4827
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4828
  %tobool326 = icmp eq %struct._IO_FILE* %121, null, !dbg !4828
  br i1 %tobool326, label %if.end333, label %land.lhs.true327, !dbg !4830

land.lhs.true327:                                 ; preds = %if.then322
  %122 = load i32, i32* @dump_flags, align 4, !dbg !4831
  %and328 = and i32 %122, 8, !dbg !4832
  %tobool329 = icmp eq i32 %and328, 0, !dbg !4832
  br i1 %tobool329, label %if.end333, label %if.then330, !dbg !4833

if.then330:                                       ; preds = %land.lhs.true327
  %call331 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %121, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !4834
  br label %if.end333, !dbg !4834

if.end333:                                        ; preds = %land.lhs.true327, %if.then322, %if.end319, %if.then330
  %or = or i32 %todo.5, 16384, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %or, metadata !4424, metadata !DIExpression()), !dbg !4474
  br label %for.inc, !dbg !4836

for.inc:                                          ; preds = %if.end282, %land.lhs.true286, %if.end333, %land.lhs.true304, %if.then294, %cleanup
  %todo.8 = phi i32 [ %todo.1, %cleanup ], [ %todo.5, %land.lhs.true286 ], [ %todo.5, %if.end282 ], [ %or, %if.end333 ], [ %todo.5, %land.lhs.true304 ], [ %todo.5, %if.then294 ], !dbg !4474
  call void @llvm.dbg.value(metadata i32 %todo.8, metadata !4424, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !4837
  br label %for.cond3, !dbg !4838, !llvm.loop !4839

for.end:                                          ; preds = %for.cond3
  %todo.1.lcssa = phi i32 [ %todo.1, %for.cond3 ], !dbg !4474
  call void @llvm.dbg.value(metadata i32 %todo.1.lcssa, metadata !4424, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata i32 %todo.1.lcssa, metadata !4424, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata i32 %todo.1.lcssa, metadata !4424, metadata !DIExpression()), !dbg !4474
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !4841
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp336, %struct.basic_block_def* %b.0) #6, !dbg !4841
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !4841
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !4841
  br label %for.cond337, !dbg !4842

for.cond337:                                      ; preds = %cleanup426, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call338 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4843
  %tobool339 = icmp eq i8 %call338, 0, !dbg !4844
  br i1 %tobool339, label %for.body341, label %for.inc436, !dbg !4845

for.body341:                                      ; preds = %for.cond337
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call343 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4846
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call343, metadata !4460, metadata !DIExpression()), !dbg !4481
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4461, metadata !DIExpression()), !dbg !4481
  %call345 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call343) #7, !dbg !4847
  %call346 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call345) #7, !dbg !4847
  call void @llvm.dbg.value(metadata %union.tree_node* %call346, metadata !4462, metadata !DIExpression()), !dbg !4481
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !4848
  %call348 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %call343) #7, !dbg !4849
  %cmp349 = icmp eq i32 %call348, 1, !dbg !4851
  br i1 %cmp349, label %if.then358, label %lor.lhs.false351, !dbg !4852

lor.lhs.false351:                                 ; preds = %for.body341
  %call352 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call346) #6, !dbg !4853
  %tobool353 = icmp eq i8 %call352, 0, !dbg !4853
  br i1 %tobool353, label %if.then358, label %lor.lhs.false354, !dbg !4854

lor.lhs.false354:                                 ; preds = %lor.lhs.false351
  %123 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @inserted_phi_names, align 8, !dbg !4855
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call346, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4856
  %124 = bitcast %union.tree_node** %version to i32*, !dbg !4856
  %125 = load i32, i32* %124, align 8, !dbg !4856
  %call356 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %123, i32 %125) #6, !dbg !4857
  %tobool357 = icmp eq i32 %call356, 0, !dbg !4857
  br i1 %tobool357, label %if.end359, label %if.then358, !dbg !4858

if.then358:                                       ; preds = %lor.lhs.false354, %lor.lhs.false351, %for.body341
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !4859
  br label %cleanup426, !dbg !4861, !llvm.loop !4862

if.end359:                                        ; preds = %lor.lhs.false354
  %call360 = call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %call346) #7, !dbg !4864
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call360, metadata !4464, metadata !DIExpression()), !dbg !4481
  %126 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %15, align 8, !dbg !4865
  %avail_out362 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %126, i64 0, i32 3, !dbg !4865
  %127 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out362, align 8, !dbg !4865
  %call363 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call360) #7, !dbg !4866
  %call364 = call fastcc %struct.pre_expr_d* @bitmap_find_leader(%struct.bitmap_set* %127, i32 %call363, %union.gimple_statement_d* null) #7, !dbg !4867
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call364, metadata !4463, metadata !DIExpression()), !dbg !4481
  %tobool365 = icmp eq %struct.pre_expr_d* %call364, null, !dbg !4868
  br i1 %tobool365, label %if.end383, label %if.then366, !dbg !4870

if.then366:                                       ; preds = %if.end359
  %kind367 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call364, i64 0, i32 0, !dbg !4871
  %128 = load i32, i32* %kind367, align 8, !dbg !4871
  %cmp368 = icmp eq i32 %128, 3, !dbg !4874
  br i1 %cmp368, label %if.then370, label %if.else373, !dbg !4875

if.then370:                                       ; preds = %if.then366
  %constant372 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call364, i64 0, i32 2, i32 0, !dbg !4876
  %129 = load %union.tree_node*, %union.tree_node** %constant372, align 8, !dbg !4876
  call void @llvm.dbg.value(metadata %union.tree_node* %129, metadata !4461, metadata !DIExpression()), !dbg !4481
  br label %if.end383, !dbg !4877

if.else373:                                       ; preds = %if.then366
  %cmp375 = icmp eq i32 %128, 0, !dbg !4878
  br i1 %cmp375, label %if.then377, label %if.else380, !dbg !4880

if.then377:                                       ; preds = %if.else373
  %name379 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call364, i64 0, i32 2, i32 0, !dbg !4881
  %130 = load %union.tree_node*, %union.tree_node** %name379, align 8, !dbg !4881
  call void @llvm.dbg.value(metadata %union.tree_node* %130, metadata !4461, metadata !DIExpression()), !dbg !4481
  br label %if.end383, !dbg !4882

if.else380:                                       ; preds = %if.else373
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4362, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4883
  br label %if.end383

if.end383:                                        ; preds = %if.end359, %if.then370, %if.else380, %if.then377
  %sprime344.2 = phi %union.tree_node* [ null, %if.end359 ], [ %129, %if.then370 ], [ %130, %if.then377 ], [ null, %if.else380 ], !dbg !4481
  call void @llvm.dbg.value(metadata %union.tree_node* %sprime344.2, metadata !4461, metadata !DIExpression()), !dbg !4481
  %cmp386 = icmp eq %union.tree_node* %sprime344.2, %call346, !dbg !4884
  %or.cond2 = or i1 %tobool365, %cmp386, !dbg !4886
  br i1 %or.cond2, label %if.then388, label %if.end389, !dbg !4886

if.then388:                                       ; preds = %if.end383
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !4887
  br label %cleanup426, !dbg !4889, !llvm.loop !4862

if.end389:                                        ; preds = %if.end383
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4890
  %tobool390 = icmp eq %struct._IO_FILE* %131, null, !dbg !4890
  br i1 %tobool390, label %if.end398, label %land.lhs.true391, !dbg !4892

land.lhs.true391:                                 ; preds = %if.end389
  %132 = load i32, i32* @dump_flags, align 4, !dbg !4893
  %and392 = and i32 %132, 8, !dbg !4894
  %tobool393 = icmp eq i32 %and392, 0, !dbg !4894
  br i1 %tobool393, label %if.end398, label %if.then394, !dbg !4895

if.then394:                                       ; preds = %land.lhs.true391
  %call395 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %131, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !4896
  %133 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4898
  call void @print_generic_expr(%struct._IO_FILE* %133, %union.tree_node* %call346, i32 0) #6, !dbg !4899
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4900
  %call396 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %134, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0)) #6, !dbg !4901
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4902
  call void @print_generic_expr(%struct._IO_FILE* %135, %union.tree_node* %sprime344.2, i32 0) #6, !dbg !4903
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4904
  %call397 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %136, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4905
  br label %if.end398, !dbg !4906

if.end398:                                        ; preds = %land.lhs.true391, %if.end389, %if.then394
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 0) #6, !dbg !4907
  %type400 = getelementptr inbounds %union.tree_node, %union.tree_node* %call346, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4908
  %137 = load %union.tree_node*, %union.tree_node** %type400, align 8, !dbg !4908
  %type402 = getelementptr inbounds %union.tree_node, %union.tree_node* %sprime344.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4910
  %138 = load %union.tree_node*, %union.tree_node** %type402, align 8, !dbg !4910
  %call403 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %137, %union.tree_node* %138) #6, !dbg !4911
  %tobool404 = icmp eq i8 %call403, 0, !dbg !4911
  br i1 %tobool404, label %if.then405, label %if.end409, !dbg !4912

if.then405:                                       ; preds = %if.end398
  %139 = load %union.tree_node*, %union.tree_node** %type400, align 8, !dbg !4913
  %call408 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %139, %union.tree_node* %sprime344.2) #6, !dbg !4913
  call void @llvm.dbg.value(metadata %union.tree_node* %call408, metadata !4461, metadata !DIExpression()), !dbg !4481
  br label %if.end409, !dbg !4914

if.end409:                                        ; preds = %if.end398, %if.then405
  %sprime344.3 = phi %union.tree_node* [ %sprime344.2, %if.end398 ], [ %call408, %if.then405 ], !dbg !4481
  call void @llvm.dbg.value(metadata %union.tree_node* %sprime344.3, metadata !4461, metadata !DIExpression()), !dbg !4481
  %call410 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call346, %union.tree_node* %sprime344.3) #6, !dbg !4915
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call410, metadata !4456, metadata !DIExpression()), !dbg !4481
  %def_stmt412 = getelementptr inbounds %union.tree_node, %union.tree_node* %call346, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4916
  %140 = bitcast %union.tree_node** %def_stmt412 to %union.gimple_statement_d**, !dbg !4916
  store %union.gimple_statement_d* %call410, %union.gimple_statement_d** %140, align 8, !dbg !4917
  %141 = getelementptr inbounds %union.tree_node, %union.tree_node* %sprime344.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4918
  %bf.load414 = load i64, i64* %141, align 8, !dbg !4918
  %bf.cast4167 = and i64 %bf.load414, 65535, !dbg !4920
  %cmp417 = icmp eq i64 %bf.cast4167, 141, !dbg !4920
  br i1 %cmp417, label %if.then419, label %if.end422, !dbg !4921

if.then419:                                       ; preds = %if.end409
  %def_stmt421 = getelementptr inbounds %union.tree_node, %union.tree_node* %sprime344.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4922
  %142 = bitcast %union.tree_node** %def_stmt421 to %union.gimple_statement_d**, !dbg !4922
  %143 = load %union.gimple_statement_d*, %union.gimple_statement_d** %142, align 8, !dbg !4922
  call fastcc void @gimple_set_plf(%union.gimple_statement_d* %143, i32 1, i8 zeroext 1) #7, !dbg !4923
  br label %if.end422, !dbg !4923

if.end422:                                        ; preds = %if.then419, %if.end409
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !4924
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp423, %struct.basic_block_def* %b.0) #7, !dbg !4924
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !4924
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !4924
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi2, metadata !4465, metadata !DIExpression(DW_OP_deref)), !dbg !4481
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi2, %union.gimple_statement_d* %call410, i32 0) #6, !dbg !4925
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %to_remove, metadata !4422, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call424 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** nonnull %to_remove, %union.gimple_statement_d* %call410) #7, !dbg !4926
  %144 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 0), align 4, !dbg !4927
  %inc425 = add nsw i32 %144, 1, !dbg !4927
  store i32 %inc425, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 0), align 4, !dbg !4927
  br label %cleanup426, !dbg !4928

cleanup426:                                       ; preds = %if.end422, %if.then388, %if.then358
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !4928
  br label %for.cond337

for.inc436:                                       ; preds = %for.cond337
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4482
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4929
  %.pre21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !4482
  br label %for.cond, !dbg !4482, !llvm.loop !4930

for.cond439:                                      ; preds = %for.cond439.preheader, %if.end490
  %i.0 = phi i32 [ %inc492, %if.end490 ], [ 0, %for.cond439.preheader ], !dbg !4932
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4427, metadata !DIExpression()), !dbg !4474
  %145 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %to_remove, align 8, !dbg !4933
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %145, metadata !4422, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %145, metadata !4422, metadata !DIExpression()), !dbg !4474
  %base442 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %145, i64 0, i32 0, !dbg !4933
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmt, metadata !4426, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call446 = call fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %base442, i32 %i.0, %union.gimple_statement_d** nonnull %stmt) #7, !dbg !4933
  %tobool447 = icmp eq i32 %call446, 0, !dbg !4489
  br i1 %tobool447, label %for.end493, label %for.body448, !dbg !4489

for.body448:                                      ; preds = %for.cond439
  %146 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4934
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %146, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call450 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %146) #7, !dbg !4935
  call void @llvm.dbg.value(metadata %union.tree_node* %call450, metadata !4466, metadata !DIExpression()), !dbg !4485
  %147 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4936
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %147, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call452 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %147) #7, !dbg !4937
  call void @llvm.dbg.value(metadata %union.tree_node* %call452, metadata !4470, metadata !DIExpression()), !dbg !4485
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8, !dbg !4938
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8, !dbg !4939
  %148 = getelementptr inbounds %union.tree_node, %union.tree_node* %call450, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4940
  %bf.load454 = load i64, i64* %148, align 8, !dbg !4940
  %bf.cast4564 = and i64 %bf.load454, 65535, !dbg !4942
  %cmp457 = icmp eq i64 %bf.cast4564, 141, !dbg !4942
  br i1 %cmp457, label %land.lhs.true459, label %if.end477, !dbg !4943

land.lhs.true459:                                 ; preds = %for.body448
  %149 = getelementptr inbounds %union.tree_node, %union.tree_node* %call452, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4944
  %bf.load461 = load i64, i64* %149, align 8, !dbg !4944
  %bf.cast4636 = and i64 %bf.load461, 65535, !dbg !4945
  %cmp464 = icmp eq i64 %bf.cast4636, 141, !dbg !4945
  br i1 %cmp464, label %land.lhs.true466, label %if.end477, !dbg !4946

land.lhs.true466:                                 ; preds = %land.lhs.true459
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d** %use_p, metadata !4471, metadata !DIExpression(DW_OP_deref)), !dbg !4485
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %use_stmt, metadata !4472, metadata !DIExpression(DW_OP_deref)), !dbg !4485
  %call467 = call fastcc zeroext i8 @single_imm_use(%union.tree_node* %call450, %struct.ssa_use_operand_d** nonnull %use_p, %union.gimple_statement_d** nonnull %use_stmt) #7, !dbg !4947
  %tobool469 = icmp eq i8 %call467, 0, !dbg !4947
  br i1 %tobool469, label %if.end477, label %land.lhs.true470, !dbg !4948

land.lhs.true470:                                 ; preds = %land.lhs.true466
  %150 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %use_p, align 8, !dbg !4949
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %150, metadata !4471, metadata !DIExpression()), !dbg !4485
  %call471 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %150) #7, !dbg !4949
  %call472 = call zeroext i8 @may_propagate_copy(%union.tree_node* %call471, %union.tree_node* %call452) #6, !dbg !4950
  %tobool474 = icmp eq i8 %call472, 0, !dbg !4950
  br i1 %tobool474, label %if.end477, label %if.then475, !dbg !4951

if.then475:                                       ; preds = %land.lhs.true470
  %151 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %use_p, align 8, !dbg !4952
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %151, metadata !4471, metadata !DIExpression()), !dbg !4485
  %152 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4952
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %152, metadata !4426, metadata !DIExpression()), !dbg !4474
  %call476 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %152) #7, !dbg !4952
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %151, %union.tree_node* %call476) #7, !dbg !4952
  %153 = load %union.gimple_statement_d*, %union.gimple_statement_d** %use_stmt, align 8, !dbg !4954
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %153, metadata !4472, metadata !DIExpression()), !dbg !4485
  call fastcc void @update_stmt(%union.gimple_statement_d* %153) #7, !dbg !4955
  br label %if.end477, !dbg !4956

if.end477:                                        ; preds = %land.lhs.true470, %land.lhs.true466, %if.then475, %land.lhs.true459, %for.body448
  %bf.load479 = load i64, i64* %148, align 8, !dbg !4957
  %bf.cast4815 = and i64 %bf.load479, 65535, !dbg !4958
  %cmp482 = icmp eq i64 %bf.cast4815, 141, !dbg !4958
  br i1 %cmp482, label %lor.lhs.false484, label %if.then488, !dbg !4959

lor.lhs.false484:                                 ; preds = %if.end477
  %call485 = call fastcc zeroext i8 @has_zero_uses(%union.tree_node* %call450) #7, !dbg !4960
  %tobool487 = icmp eq i8 %call485, 0, !dbg !4960
  br i1 %tobool487, label %if.end490, label %if.then488, !dbg !4961

if.then488:                                       ; preds = %lor.lhs.false484, %if.end477
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8, !dbg !4962
  %154 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4963
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %154, metadata !4426, metadata !DIExpression()), !dbg !4474
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp489, %union.gimple_statement_d* %154) #6, !dbg !4962
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %14, i64 24, i1 false), !dbg !4962
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8, !dbg !4962
  %155 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4964
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %155, metadata !4426, metadata !DIExpression()), !dbg !4474
  call void @unlink_stmt_vdef(%union.gimple_statement_d* %155) #6, !dbg !4965
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !4966
  %156 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4967
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %156, metadata !4426, metadata !DIExpression()), !dbg !4474
  call void @release_defs(%union.gimple_statement_d* %156) #6, !dbg !4968
  br label %if.end490, !dbg !4969

if.end490:                                        ; preds = %lor.lhs.false484, %if.then488
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8, !dbg !4970
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8, !dbg !4970
  %inc492 = add i32 %i.0, 1, !dbg !4971
  call void @llvm.dbg.value(metadata i32 %inc492, metadata !4427, metadata !DIExpression()), !dbg !4474
  br label %for.cond439, !dbg !4972, !llvm.loop !4973

for.end493:                                       ; preds = %for.cond439
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %to_remove, metadata !4422, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull %to_remove) #7, !dbg !4975
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4976
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4976
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4976
  ret i32 %todo.0.lcssa, !dbg !4977
}

declare dso_local void @statistics_counter_event(%struct.function*, i8*, i32) local_unnamed_addr #2

declare dso_local void @remove_fake_exit_edges() local_unnamed_addr #2

declare dso_local void @gsi_commit_edge_inserts() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_expression_ids() unnamed_addr #5 !dbg !4978 {
entry:
  tail call fastcc void @VEC_pre_expr_heap_free(%struct.VEC_pre_expr_heap** nonnull @expressions) #7, !dbg !4979
  ret void, !dbg !4980
}

declare dso_local void @free_scc_vn() local_unnamed_addr #2

declare dso_local void @scev_finalize() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fini_pre(i8 zeroext %do_fre) unnamed_addr #5 !dbg !4981 {
entry:
  call void @llvm.dbg.value(metadata i8 %do_fre, metadata !4983, metadata !DIExpression()), !dbg !4985
  %0 = load i8*, i8** bitcast (i32** @postorder to i8**), align 8, !dbg !4986
  tail call void @free(i8* %0) #6, !dbg !4987
  tail call fastcc void @VEC_bitmap_set_t_heap_free(%struct.VEC_bitmap_set_t_heap** nonnull @value_expressions) #7, !dbg !4988
  tail call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull @inserted_exprs) #7, !dbg !4989
  tail call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull @need_creation) #7, !dbg !4990
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* nonnull @grand_bitmap_obstack) #6, !dbg !4991
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @bitmap_set_pool, align 8, !dbg !4992
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %1) #6, !dbg !4993
  %2 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @pre_expr_pool, align 8, !dbg !4994
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %2) #6, !dbg !4995
  %3 = load %struct.htab*, %struct.htab** @phi_translate_table, align 8, !dbg !4996
  tail call void @htab_delete(%struct.htab* %3) #6, !dbg !4997
  %4 = load %struct.htab*, %struct.htab** @expression_to_id, align 8, !dbg !4998
  tail call void @htab_delete(%struct.htab* %4) #6, !dbg !4999
  tail call fastcc void @VEC_unsigned_heap_free(%struct.VEC_unsigned_heap** nonnull @name_to_id) #7, !dbg !5000
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5001
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !5001
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5001
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !5001
  br label %for.cond, !dbg !5001

for.cond:                                         ; preds = %for.body, %entry
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %entry ], [ %next_bb, %for.body ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5003
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4984, metadata !DIExpression()), !dbg !4985
  %tobool = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !5001
  br i1 %tobool, label %for.end, label %for.body, !dbg !5001

for.body:                                         ; preds = %for.cond
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 2, !dbg !5004
  %7 = load i8*, i8** %aux, align 8, !dbg !5004
  tail call void @free(i8* %7) #6, !dbg !5007
  store i8* null, i8** %aux, align 8, !dbg !5008
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !5009
  br label %for.cond, !dbg !5009, !llvm.loop !5010

for.end:                                          ; preds = %for.cond
  tail call void @free_dominance_info(i32 2) #6, !dbg !5012
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !5013
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %8, i64 0, i32 0, !dbg !5013
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !5013
  %tobool2 = icmp eq %struct.bitmap_element_def* %9, null, !dbg !5013
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5015

if.then:                                          ; preds = %for.end
  %call = tail call zeroext i8 @gimple_purge_all_dead_eh_edges(%struct.bitmap_head_def* %8) #6, !dbg !5016
  %call3 = tail call zeroext i8 @cleanup_tree_cfg() #6, !dbg !5018
  %.pre = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !5019
  br label %if.end, !dbg !5020

if.end:                                           ; preds = %for.end, %if.then
  %10 = phi %struct.bitmap_head_def* [ %8, %for.end ], [ %.pre, %if.then ], !dbg !5019
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %10) #6, !dbg !5019
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !5019
  %tobool4 = icmp eq i8 %do_fre, 0, !dbg !5021
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !5023

if.then5:                                         ; preds = %if.end
  tail call void @loop_optimizer_finalize() #6, !dbg !5024
  br label %if.end6, !dbg !5024

if.end6:                                          ; preds = %if.end, %if.then5
  ret void, !dbg !5025
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_gimple_heap* @VEC_gimple_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5026 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5030, metadata !DIExpression()), !dbg !5031
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !5032
  %0 = bitcast i8* %call to %struct.VEC_gimple_heap*, !dbg !5032
  ret %struct.VEC_gimple_heap* %0, !dbg !5032
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %vec_) unnamed_addr #0 !dbg !5033 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !5039, metadata !DIExpression()), !dbg !5040
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !5041
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5041

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !5041
  %0 = load i32, i32* %num, align 8, !dbg !5041
  br label %cond.end, !dbg !5041

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5041
  ret i32 %cond, !dbg !5041
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %vec_, i32 %ix_, %union.gimple_statement_d** %ptr) unnamed_addr #0 !dbg !5042 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !5047, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5048, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %ptr, metadata !5049, metadata !DIExpression()), !dbg !5050
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !5051
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5051

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !5051
  %0 = load i32, i32* %num, align 8, !dbg !5051
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5051
  br i1 %cmp, label %if.then, label %if.else, !dbg !5053

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5054
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5054
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, align 8, !dbg !5054
  br label %return, !dbg !5054

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5056

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.gimple_statement_d* [ null, %if.else ], [ %1, %if.then ], !dbg !5058
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5058
  store %union.gimple_statement_d* %storemerge, %union.gimple_statement_d** %ptr, align 8, !dbg !5058
  ret i32 %retval.0, !dbg !5053
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_plf(%union.gimple_statement_d* %stmt, i32 %plf) unnamed_addr #0 !dbg !5059 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5063, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i32 1, metadata !5064, metadata !DIExpression()), !dbg !5065
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5066
  %bf.load = load i32, i32* %0, align 8, !dbg !5066
  %bf.lshr = lshr i32 %bf.load, 11, !dbg !5066
  %and = and i32 %bf.lshr, 1, !dbg !5067
  ret i32 %and, !dbg !5068
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !5069 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !5074, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !5075, metadata !DIExpression()), !dbg !5077
  %num1 = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !5078
  %0 = load i32, i32* %num1, align 8, !dbg !5078
  %inc = add i32 %0, 1, !dbg !5078
  store i32 %inc, i32* %num1, align 8, !dbg !5078
  %idxprom = zext i32 %0 to i64, !dbg !5078
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5078
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %arrayidx, metadata !5076, metadata !DIExpression()), !dbg !5077
  store %union.gimple_statement_d* %obj_, %union.gimple_statement_d** %arrayidx, align 8, !dbg !5078
  ret %union.gimple_statement_d** %arrayidx, !dbg !5078
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @VEC_gimple_base_pop(%struct.VEC_gimple_base* %vec_) unnamed_addr #0 !dbg !5079 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !5083, metadata !DIExpression()), !dbg !5085
  %num1 = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !5086
  %0 = load i32, i32* %num1, align 8, !dbg !5086
  %dec = add i32 %0, -1, !dbg !5086
  store i32 %dec, i32* %num1, align 8, !dbg !5086
  %idxprom = zext i32 %dec to i64, !dbg !5086
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5086
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, align 8, !dbg !5086
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !5084, metadata !DIExpression()), !dbg !5085
  ret %union.gimple_statement_d* %1, !dbg !5086
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5087 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5092, metadata !DIExpression()), !dbg !5093
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !5094
  %bf.load = load i32, i32* %0, align 8, !dbg !5094
  %bf.clear = and i32 %bf.load, 255, !dbg !5094
  ret i32 %bf.clear, !dbg !5095
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5096 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !5101, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5102, metadata !DIExpression()), !dbg !5104
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !5105
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !5105
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5105

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !5105
  br label %cond.end, !dbg !5105

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5105
  %call = tail call fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %cond, i32 %alloc_) #7, !dbg !5105
  %tobool1 = icmp eq i32 %call, 0, !dbg !5105
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5105
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5103, metadata !DIExpression()), !dbg !5104
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5105

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_gimple_heap** %vec_ to i8**, !dbg !5106
  %2 = load i8*, i8** %1, align 8, !dbg !5106
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 %alloc_) #6, !dbg !5106
  store i8* %call3, i8** %1, align 8, !dbg !5106
  br label %if.end, !dbg !5106

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5105
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5108 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5112, metadata !DIExpression()), !dbg !5113
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !5114
  %0 = load i32, i32* %nargs, align 4, !dbg !5114
  ret i32 %0, !dbg !5115
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !5116 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !5121, metadata !DIExpression()), !dbg !5122
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !5123
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !5123
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5124
  ret %union.tree_node* %1, !dbg !5125
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5126 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5130, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.value(metadata i32 %i, metadata !5131, metadata !DIExpression()), !dbg !5132
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !5133
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !5134
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !5135
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @mark_operand_necessary(%union.tree_node* %op) unnamed_addr #0 !dbg !5136 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !5140, metadata !DIExpression()), !dbg !5142
  %tobool = icmp eq %union.tree_node* %op, null, !dbg !5143
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5143

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5143
  br label %cond.end, !dbg !5143

cond.end:                                         ; preds = %entry, %cond.true
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5144
  %bf.load = load i64, i64* %0, align 8, !dbg !5144
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5146
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5146
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5147

if.end:                                           ; preds = %cond.end
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5148
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5148
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !5148
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !5141, metadata !DIExpression()), !dbg !5142
  %tobool1 = icmp eq %union.gimple_statement_d* %2, null, !dbg !5149
  br i1 %tobool1, label %cond.true2, label %cond.end4, !dbg !5149

cond.true2:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4452, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5149
  br label %cond.end4, !dbg !5149

cond.end4:                                        ; preds = %if.end, %cond.true2
  %call = tail call fastcc i32 @gimple_plf(%union.gimple_statement_d* %2, i32 1) #7, !dbg !5150
  %tobool6 = icmp eq i32 %call, 0, !dbg !5150
  br i1 %tobool6, label %lor.lhs.false, label %cleanup, !dbg !5152

lor.lhs.false:                                    ; preds = %cond.end4
  %call7 = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %2) #7, !dbg !5153
  %tobool8 = icmp eq i8 %call7, 0, !dbg !5153
  br i1 %tobool8, label %if.end10, label %cleanup, !dbg !5154

if.end10:                                         ; preds = %lor.lhs.false
  tail call fastcc void @gimple_set_plf(%union.gimple_statement_d* %2, i32 1, i8 zeroext 1) #7, !dbg !5155
  br label %cleanup, !dbg !5156

cleanup:                                          ; preds = %lor.lhs.false, %cond.end4, %cond.end, %if.end10
  %retval.0 = phi %union.gimple_statement_d* [ %2, %if.end10 ], [ null, %cond.end ], [ null, %lor.lhs.false ], [ null, %cond.end4 ], !dbg !5142
  ret %union.gimple_statement_d* %retval.0, !dbg !5157
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5158 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5163, metadata !DIExpression()), !dbg !5166
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5164, metadata !DIExpression()), !dbg !5166
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5165, metadata !DIExpression()), !dbg !5166
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !5167
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5168
  store i32 1, i32* %iter_type, align 4, !dbg !5169
  %call = tail call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !5170
  ret %union.tree_node* %call, !dbg !5171
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5172 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5178, metadata !DIExpression()), !dbg !5179
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5180
  %0 = load i8, i8* %done, align 8, !dbg !5180
  ret i8 %0, !dbg !5181
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !5182 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !5186, metadata !DIExpression()), !dbg !5188
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !5187, metadata !DIExpression()), !dbg !5188
  %call = tail call fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 1) #7, !dbg !5189
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !5189
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !5189
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5189

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !5189
  br label %cond.end, !dbg !5189

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5189
  %call1 = tail call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond, %union.gimple_statement_d* %obj_) #7, !dbg !5189
  ret %union.gimple_statement_d** %call1, !dbg !5189
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5190 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5194, metadata !DIExpression()), !dbg !5196
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5197
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !5197
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !5199
  br i1 %tobool, label %if.end, label %if.then, !dbg !5200

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !5201
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %use_ptr) #7, !dbg !5201
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5195, metadata !DIExpression()), !dbg !5196
  %1 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5203
  %2 = load i64*, i64** %1, align 8, !dbg !5203
  %3 = load i64, i64* %2, align 8, !dbg !5204
  %4 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5205
  store i64 %3, i64* %4, align 8, !dbg !5205
  br label %cleanup, !dbg !5206

if.end:                                           ; preds = %entry
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5207
  %5 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !5207
  %tobool4 = icmp eq %struct.def_optype_d* %5, null, !dbg !5209
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !5210

if.then5:                                         ; preds = %if.end
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %5, i64 0, i32 1, !dbg !5211
  %6 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !5211
  %call7 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %6) #7, !dbg !5211
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5195, metadata !DIExpression()), !dbg !5196
  %7 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !5213
  %8 = load i64*, i64** %7, align 8, !dbg !5213
  %9 = load i64, i64* %8, align 8, !dbg !5214
  %10 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5215
  store i64 %9, i64* %10, align 8, !dbg !5215
  br label %cleanup, !dbg !5216

if.end11:                                         ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5217
  store i8 1, i8* %done, align 8, !dbg !5218
  br label %cleanup, !dbg !5219

cleanup:                                          ; preds = %if.end11, %if.then5, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call7, %if.then5 ], [ null, %if.end11 ], !dbg !5196
  ret %union.tree_node* %retval.0, !dbg !5220
}

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local void @remove_phi_node(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @release_defs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** %vec_) unnamed_addr #0 !dbg !5221 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !5225, metadata !DIExpression()), !dbg !5226
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !5227
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !5227
  br i1 %tobool, label %if.end, label %if.then, !dbg !5229

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_gimple_heap* %0 to i8*, !dbg !5229
  tail call void @free(i8* nonnull %1) #6, !dbg !5227
  br label %if.end, !dbg !5227

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_gimple_heap* null, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !5229
  ret void, !dbg !5229
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5230 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !5234, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5235, metadata !DIExpression()), !dbg !5236
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !5237
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5237

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 1, !dbg !5237
  %0 = load i32, i32* %alloc, align 4, !dbg !5237
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !5237
  %1 = load i32, i32* %num, align 8, !dbg !5237
  %sub = sub i32 %0, %1, !dbg !5237
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !5237
  br label %cond.end, !dbg !5237

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !5237
  br label %cond.end, !dbg !5237

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !5237
  ret i32 %cond, !dbg !5237
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !5238 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5243, metadata !DIExpression()), !dbg !5245
  call void @llvm.dbg.value(metadata i32 %index, metadata !5244, metadata !DIExpression()), !dbg !5245
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !5246
  %0 = load i32, i32* %capacity, align 8, !dbg !5246
  %cmp = icmp ult i32 %0, %index, !dbg !5246
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5246

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5246
  br label %cond.end, !dbg !5246

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !5247
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !5247
  ret %struct.phi_arg_d* %arrayidx, !dbg !5248
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5249 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5253, metadata !DIExpression()), !dbg !5254
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5255
  %cmp = icmp eq i32 %call, 18, !dbg !5256
  %conv1 = zext i1 %cmp to i8, !dbg !5255
  ret i8 %conv1, !dbg !5257
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_plf(%union.gimple_statement_d* %stmt, i32 %plf, i8 zeroext %val_p) unnamed_addr #0 !dbg !5258 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5262, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i32 1, metadata !5263, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i8 %val_p, metadata !5264, metadata !DIExpression()), !dbg !5265
  %tobool = icmp eq i8 %val_p, 0, !dbg !5266
  br i1 %tobool, label %if.else, label %if.then, !dbg !5268

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5269
  %bf.load = load i32, i32* %0, align 8, !dbg !5270
  %bf.set = or i32 %bf.load, 2048, !dbg !5270
  store i32 %bf.set, i32* %0, align 8, !dbg !5270
  br label %if.end, !dbg !5271

if.else:                                          ; preds = %entry
  %1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5272
  %bf.load4 = load i32, i32* %1, align 8, !dbg !5273
  %bf.set11 = and i32 %bf.load4, -2049, !dbg !5273
  store i32 %bf.set11, i32* %1, align 8, !dbg !5273
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5274
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5275 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5279, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5280, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5281, metadata !DIExpression()), !dbg !5282
  %0 = and i32 %flags, 10, !dbg !5283
  %1 = icmp eq i32 %0, 8, !dbg !5283
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !5283

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !5283
  %3 = icmp eq i32 %2, 4, !dbg !5283
  br i1 %3, label %cond.true, label %cond.end, !dbg !5283

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5283
  br label %cond.end, !dbg !5283

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !5284
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !5285

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5286
  br label %cond.end12, !dbg !5285

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !5285
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5287
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !5288
  %and14 = and i32 %flags, 8, !dbg !5289
  %tobool15 = icmp eq i32 %and14, 0, !dbg !5289
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !5291

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !5292
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !5293

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !5294
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !5295
  br i1 %cmp, label %if.end, label %if.then, !dbg !5296

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !5297
  %6 = load i64*, i64** %5, align 8, !dbg !5297
  %7 = load i64, i64* %6, align 8, !dbg !5298
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5299
  store i64 %7, i64* %8, align 8, !dbg !5299
  br label %if.end, !dbg !5300

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !5301
  %tobool24 = icmp eq i32 %and23, 0, !dbg !5301
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !5302

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5303
  br label %cond.end28, !dbg !5302

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !5302
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5304
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !5305
  %and30 = and i32 %flags, 4, !dbg !5306
  %tobool31 = icmp eq i32 %and30, 0, !dbg !5306
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !5308

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !5309
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !5310

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !5311
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !5312
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !5313

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5314
  %11 = load i64*, i64** %10, align 8, !dbg !5314
  %12 = load i64, i64* %11, align 8, !dbg !5315
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5316
  store i64 %12, i64* %13, align 8, !dbg !5316
  br label %if.end42, !dbg !5317

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5318
  store i8 0, i8* %done, align 8, !dbg !5319
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5320
  store i32 0, i32* %phi_i, align 8, !dbg !5321
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5322
  store i32 0, i32* %num_phi, align 4, !dbg !5323
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5324
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5325
  ret void, !dbg !5326
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5327 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5331, metadata !DIExpression()), !dbg !5332
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !5333
  %tobool = icmp eq i8 %call, 0, !dbg !5333
  br i1 %tobool, label %return, label %if.end, !dbg !5335

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !5336
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !5336
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !5336
  br label %return, !dbg !5337

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5332
  ret %struct.def_optype_d* %retval.0, !dbg !5338
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5339 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5343, metadata !DIExpression()), !dbg !5344
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !5345
  %tobool = icmp eq i8 %call, 0, !dbg !5345
  br i1 %tobool, label %return, label %if.end, !dbg !5347

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !5348
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !5348
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5348
  br label %return, !dbg !5349

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !5344
  ret %union.tree_node* %retval.0, !dbg !5350
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5351 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5355, metadata !DIExpression()), !dbg !5356
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !5357
  %tobool = icmp eq i8 %call, 0, !dbg !5357
  br i1 %tobool, label %return, label %if.end, !dbg !5359

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !5360
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !5360
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !5360
  br label %return, !dbg !5361

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5356
  ret %struct.use_optype_d* %retval.0, !dbg !5362
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5363 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5365, metadata !DIExpression()), !dbg !5366
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !5367
  %tobool = icmp eq i8 %call, 0, !dbg !5367
  br i1 %tobool, label %return, label %if.end, !dbg !5369

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !5370
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !5370
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5370
  br label %return, !dbg !5371

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !5366
  ret %union.tree_node* %retval.0, !dbg !5372
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5373 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5375, metadata !DIExpression()), !dbg !5376
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5377
  %cmp = icmp eq i32 %call, 0, !dbg !5378
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !5379

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5380
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5381
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5382
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5383 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5385, metadata !DIExpression()), !dbg !5386
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5387
  %cmp = icmp ugt i32 %call, 5, !dbg !5388
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5389

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5390
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5391
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5392
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !5393 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !5398, metadata !DIExpression()), !dbg !5399
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5400
  ret %union.tree_node* %0, !dbg !5401
}

declare dso_local void @free(i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_bitmap_set_t_heap* @VEC_bitmap_set_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5402 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5406, metadata !DIExpression()), !dbg !5407
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !5408
  %0 = bitcast i8* %call to %struct.VEC_bitmap_set_t_heap*, !dbg !5408
  ret %struct.VEC_bitmap_set_t_heap* %0, !dbg !5408
}

declare dso_local i32 @get_max_value_id() local_unnamed_addr #2

declare dso_local void @connect_infinite_loops_to_exit() local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @my_rev_post_order_compute(i32* %post_order, i8 zeroext %include_entry_exit) unnamed_addr #5 !dbg !5409 {
entry:
  %tmp = alloca %struct.edge_iterator, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp36 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32* %post_order, metadata !5413, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i8 0, metadata !5414, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 0, metadata !5417, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 0, metadata !5417, metadata !DIExpression()), !dbg !5424
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5425
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !5425
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5425
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !5425
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !5425
  %add = add nsw i32 %2, 1, !dbg !5425
  %conv = sext i32 %add to i64, !dbg !5425
  %mul = shl nsw i64 %conv, 4, !dbg !5425
  %call = tail call i8* @xmalloc(i64 %mul) #6, !dbg !5425
  %3 = bitcast i8* %call to %struct.edge_iterator*, !dbg !5425
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %3, metadata !5415, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 0, metadata !5416, metadata !DIExpression()), !dbg !5424
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5426
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !5426
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !5426
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 5, !dbg !5426
  %6 = load i32, i32* %x_last_basic_block, align 8, !dbg !5426
  %call3 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %6) #6, !dbg !5427
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call3, metadata !5418, metadata !DIExpression()), !dbg !5424
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call3) #6, !dbg !5428
  call void @llvm.dbg.value(metadata i32 1, metadata !5416, metadata !DIExpression()), !dbg !5424
  %7 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5429
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8, !dbg !5429
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5429
  %cfg8 = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 1, !dbg !5429
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8, align 8, !dbg !5429
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 1, !dbg !5429
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5429
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i64 0, i32 0, !dbg !5429
  %call9 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !5429
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5429
  %12 = extractvalue { i32, %struct.VEC_edge_gc** } %call9, 0, !dbg !5429
  store i32 %12, i32* %11, align 8, !dbg !5429
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5429
  %14 = extractvalue { i32, %struct.VEC_edge_gc** } %call9, 1, !dbg !5429
  store %struct.VEC_edge_gc** %14, %struct.VEC_edge_gc*** %13, align 8, !dbg !5429
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call, i8* nonnull align 8 %7, i64 16, i1 false), !dbg !5429
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8, !dbg !5429
  %15 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5430
  %16 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5430
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5430
  %18 = bitcast %struct.edge_iterator* %tmp36 to i8*, !dbg !5431
  %19 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp36, i64 0, i32 0, !dbg !5431
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp36, i64 0, i32 1, !dbg !5431
  br label %while.cond, !dbg !5435

while.cond:                                       ; preds = %if.end68, %entry
  %sp.0 = phi i32 [ 1, %entry ], [ %sp.3, %if.end68 ], !dbg !5424
  %post_order_num.1 = phi i32 [ 0, %entry ], [ %post_order_num.4, %if.end68 ], !dbg !5424
  call void @llvm.dbg.value(metadata i32 %post_order_num.1, metadata !5417, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %sp.0, metadata !5416, metadata !DIExpression()), !dbg !5424
  %tobool10 = icmp eq i32 %sp.0, 0, !dbg !5435
  br i1 %tobool10, label %while.end, label %while.body, !dbg !5435

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8, !dbg !5436
  %sub = add nsw i32 %sp.0, -1, !dbg !5437
  %idxprom11 = sext i32 %sub to i64, !dbg !5438
  %arrayidx12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %3, i64 %idxprom11, !dbg !5438
  %21 = bitcast %struct.edge_iterator* %arrayidx12 to i8*, !dbg !5438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %21, i64 16, i1 false), !dbg !5438
  %22 = load i32, i32* %16, align 8, !dbg !5439
  %23 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %17, align 8, !dbg !5439
  %call13 = tail call fastcc %struct.edge_def* @ei_edge(i32 %22, %struct.VEC_edge_gc** %23) #7, !dbg !5439
  %src14 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call13, i64 0, i32 0, !dbg !5440
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %src14, align 8, !dbg !5440
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %24, metadata !5422, metadata !DIExpression()), !dbg !5430
  %call15 = tail call fastcc %struct.edge_def* @ei_edge(i32 %22, %struct.VEC_edge_gc** %23) #7, !dbg !5441
  %dest16 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call15, i64 0, i32 1, !dbg !5442
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %dest16, align 8, !dbg !5442
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %25, metadata !5423, metadata !DIExpression()), !dbg !5430
  %26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5443
  %cfg18 = getelementptr inbounds %struct.function, %struct.function* %26, i64 0, i32 1, !dbg !5443
  %27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg18, align 8, !dbg !5443
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i64 0, i32 0, !dbg !5443
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5443
  %cmp = icmp eq %struct.basic_block_def* %24, %28, !dbg !5444
  br i1 %cmp, label %if.else44, label %land.lhs.true, !dbg !5445

land.lhs.true:                                    ; preds = %while.body
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i64 0, i32 9, !dbg !5446
  %29 = load i32, i32* %index, align 8, !dbg !5446
  %div = lshr i32 %29, 6, !dbg !5446
  %idxprom20 = zext i32 %div to i64, !dbg !5446
  %arrayidx21 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call3, i64 0, i32 3, i64 %idxprom20, !dbg !5446
  %30 = load i64, i64* %arrayidx21, align 8, !dbg !5446
  %rem = and i32 %29, 63, !dbg !5446
  %sh_prom = zext i32 %rem to i64, !dbg !5446
  %31 = shl i64 1, %sh_prom, !dbg !5446
  %32 = and i64 %30, %31, !dbg !5446
  %tobool23 = icmp eq i64 %32, 0, !dbg !5446
  br i1 %tobool23, label %if.then24, label %if.else44, !dbg !5447

if.then24:                                        ; preds = %land.lhs.true
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call3, i32 %29) #7, !dbg !5448
  %preds26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i64 0, i32 0, !dbg !5449
  %33 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds26, align 8, !dbg !5449
  %tobool27 = icmp eq %struct.VEC_edge_gc* %33, null, !dbg !5449
  br i1 %tobool27, label %cond.end, label %cond.true, !dbg !5449

cond.true:                                        ; preds = %if.then24
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %33, i64 0, i32 0, !dbg !5449
  br label %cond.end, !dbg !5449

cond.end:                                         ; preds = %if.then24, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.then24 ], !dbg !5449
  %call29 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5449
  %cmp30 = icmp eq i32 %call29, 0, !dbg !5450
  br i1 %cmp30, label %if.else, label %if.then32, !dbg !5451

if.then32:                                        ; preds = %cond.end
  %inc33 = add nsw i32 %sp.0, 1, !dbg !5452
  call void @llvm.dbg.value(metadata i32 %inc33, metadata !5416, metadata !DIExpression()), !dbg !5424
  %idxprom34 = sext i32 %sp.0 to i64, !dbg !5453
  %arrayidx35 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %3, i64 %idxprom34, !dbg !5453
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8, !dbg !5454
  %call38 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds26) #7, !dbg !5454
  %34 = extractvalue { i32, %struct.VEC_edge_gc** } %call38, 0, !dbg !5454
  store i32 %34, i32* %19, align 8, !dbg !5454
  %35 = extractvalue { i32, %struct.VEC_edge_gc** } %call38, 1, !dbg !5454
  store %struct.VEC_edge_gc** %35, %struct.VEC_edge_gc*** %20, align 8, !dbg !5454
  %36 = bitcast %struct.edge_iterator* %arrayidx35 to i8*, !dbg !5454
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %18, i64 16, i1 false), !dbg !5454
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8, !dbg !5454
  br label %if.end68, !dbg !5453

if.else:                                          ; preds = %cond.end
  %37 = load i32, i32* %index, align 8, !dbg !5455
  %inc40 = add nsw i32 %post_order_num.1, 1, !dbg !5456
  call void @llvm.dbg.value(metadata i32 %inc40, metadata !5417, metadata !DIExpression()), !dbg !5424
  %idxprom41 = sext i32 %post_order_num.1 to i64, !dbg !5457
  %arrayidx42 = getelementptr inbounds i32, i32* %post_order, i64 %idxprom41, !dbg !5457
  store i32 %37, i32* %arrayidx42, align 4, !dbg !5458
  br label %if.end68

if.else44:                                        ; preds = %land.lhs.true, %while.body
  %call45 = tail call fastcc zeroext i8 @ei_one_before_end_p(i32 %22, %struct.VEC_edge_gc** %23) #7, !dbg !5459
  %tobool47 = icmp eq i8 %call45, 0, !dbg !5459
  br i1 %tobool47, label %if.end59, label %land.lhs.true48, !dbg !5462

land.lhs.true48:                                  ; preds = %if.else44
  %38 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5463
  %cfg50 = getelementptr inbounds %struct.function, %struct.function* %38, i64 0, i32 1, !dbg !5463
  %39 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg50, align 8, !dbg !5463
  %x_exit_block_ptr51 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %39, i64 0, i32 1, !dbg !5463
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr51, align 8, !dbg !5463
  %cmp52 = icmp eq %struct.basic_block_def* %25, %40, !dbg !5464
  br i1 %cmp52, label %if.end59, label %if.then54, !dbg !5465

if.then54:                                        ; preds = %land.lhs.true48
  %index55 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i64 0, i32 9, !dbg !5466
  %41 = load i32, i32* %index55, align 8, !dbg !5466
  %inc56 = add nsw i32 %post_order_num.1, 1, !dbg !5467
  call void @llvm.dbg.value(metadata i32 %inc56, metadata !5417, metadata !DIExpression()), !dbg !5424
  %idxprom57 = sext i32 %post_order_num.1 to i64, !dbg !5468
  %arrayidx58 = getelementptr inbounds i32, i32* %post_order, i64 %idxprom57, !dbg !5468
  store i32 %41, i32* %arrayidx58, align 4, !dbg !5469
  br label %if.end59, !dbg !5468

if.end59:                                         ; preds = %land.lhs.true48, %if.else44, %if.then54
  %post_order_num.3 = phi i32 [ %inc56, %if.then54 ], [ %post_order_num.1, %land.lhs.true48 ], [ %post_order_num.1, %if.else44 ], !dbg !5424
  call void @llvm.dbg.value(metadata i32 %post_order_num.3, metadata !5417, metadata !DIExpression()), !dbg !5424
  %call60 = tail call fastcc zeroext i8 @ei_one_before_end_p(i32 %22, %struct.VEC_edge_gc** %23) #7, !dbg !5470
  %tobool61 = icmp eq i8 %call60, 0, !dbg !5470
  br i1 %tobool61, label %if.then62, label %if.else66, !dbg !5472

if.then62:                                        ; preds = %if.end59
  tail call fastcc void @ei_next(%struct.edge_iterator* %arrayidx12) #7, !dbg !5473
  br label %if.end68, !dbg !5473

if.else66:                                        ; preds = %if.end59
  call void @llvm.dbg.value(metadata i32 %sub, metadata !5416, metadata !DIExpression()), !dbg !5424
  br label %if.end68

if.end68:                                         ; preds = %if.then62, %if.else66, %if.then32, %if.else
  %sp.3 = phi i32 [ %inc33, %if.then32 ], [ %sp.0, %if.else ], [ %sub, %if.else66 ], [ %sp.0, %if.then62 ], !dbg !5474
  %post_order_num.4 = phi i32 [ %post_order_num.1, %if.then32 ], [ %inc40, %if.else ], [ %post_order_num.3, %if.else66 ], [ %post_order_num.3, %if.then62 ], !dbg !5424
  call void @llvm.dbg.value(metadata i32 %post_order_num.4, metadata !5417, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %sp.3, metadata !5416, metadata !DIExpression()), !dbg !5424
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8, !dbg !5475
  br label %while.cond, !dbg !5435, !llvm.loop !5476

while.end:                                        ; preds = %while.cond
  %post_order_num.1.lcssa = phi i32 [ %post_order_num.1, %while.cond ], !dbg !5424
  call void @llvm.dbg.value(metadata i32 %post_order_num.1.lcssa, metadata !5417, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %post_order_num.1.lcssa, metadata !5417, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %post_order_num.1.lcssa, metadata !5417, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %post_order_num.1.lcssa, metadata !5419, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %post_order_num.1.lcssa, metadata !5417, metadata !DIExpression()), !dbg !5424
  tail call void @free(i8* %call) #6, !dbg !5477
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call3, i64 0, i32 0, !dbg !5478
  %42 = load i8*, i8** %popcount, align 8, !dbg !5478
  tail call void @free(i8* %42) #6, !dbg !5478
  %43 = bitcast %struct.simple_bitmap_def* %call3 to i8*, !dbg !5478
  tail call void @free(i8* %43) #6, !dbg !5478
  ret i32 %post_order_num.1.lcssa, !dbg !5479
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local void @calculate_dominance_info(i32) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_initialize(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @expr_pred_trans_hash(i8* %p) #5 !dbg !5480 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !5482, metadata !DIExpression()), !dbg !5485
  call void @llvm.dbg.value(metadata i8* %p, metadata !5483, metadata !DIExpression()), !dbg !5485
  %hashcode = getelementptr inbounds i8, i8* %p, i64 24, !dbg !5486
  %0 = bitcast i8* %hashcode to i32*, !dbg !5486
  %1 = load i32, i32* %0, align 8, !dbg !5486
  ret i32 %1, !dbg !5487
}

; Function Attrs: nounwind uwtable
define internal i32 @expr_pred_trans_eq(i8* %p1, i8* %p2) #5 !dbg !5488 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5490, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5491, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5492, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5493, metadata !DIExpression()), !dbg !5496
  %pred = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !5497
  %0 = bitcast i8* %pred to %struct.basic_block_def**, !dbg !5497
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %0, align 8, !dbg !5497
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !5494, metadata !DIExpression()), !dbg !5496
  %pred1 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !5498
  %2 = bitcast i8* %pred1 to %struct.basic_block_def**, !dbg !5498
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %2, align 8, !dbg !5498
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !5495, metadata !DIExpression()), !dbg !5496
  %cmp = icmp eq %struct.basic_block_def* %1, %3, !dbg !5499
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5501

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5493, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5492, metadata !DIExpression()), !dbg !5496
  %4 = bitcast i8* %p1 to i8**, !dbg !5502
  %5 = load i8*, i8** %4, align 8, !dbg !5502
  %6 = bitcast i8* %p2 to i8**, !dbg !5503
  %7 = load i8*, i8** %6, align 8, !dbg !5503
  %call = tail call i32 @pre_expr_eq(i8* %5, i8* %7) #7, !dbg !5504
  br label %cleanup, !dbg !5505

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry ], !dbg !5496
  ret i32 %retval.0, !dbg !5506
}

; Function Attrs: nounwind uwtable
define internal i32 @pre_expr_hash(i8* %p1) #5 !dbg !5507 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5509, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5510, metadata !DIExpression()), !dbg !5511
  %kind = bitcast i8* %p1 to i32*, !dbg !5512
  %0 = load i32, i32* %kind, align 8, !dbg !5512
  switch i32 %0, label %sw.default [
    i32 3, label %sw.bb
    i32 0, label %sw.bb1
    i32 1, label %sw.bb3
    i32 2, label %sw.bb5
  ], !dbg !5513

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5510, metadata !DIExpression()), !dbg !5511
  %u = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !5514
  %constant = bitcast i8* %u to %union.tree_node**, !dbg !5514
  %1 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !5514
  %call = tail call fastcc i32 @vn_hash_constant_with_type(%union.tree_node* %1) #7, !dbg !5516
  br label %cleanup, !dbg !5517

sw.bb1:                                           ; preds = %entry
  %u2 = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !5518
  %2 = bitcast i8* %u2 to %struct.tree_ssa_name**, !dbg !5518
  %3 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %2, align 8, !dbg !5518
  %version = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %3, i64 0, i32 3, !dbg !5518
  %4 = load i32, i32* %version, align 8, !dbg !5518
  br label %cleanup, !dbg !5519

sw.bb3:                                           ; preds = %entry
  %u4 = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !5520
  %nary = bitcast i8* %u4 to %struct.vn_nary_op_s**, !dbg !5520
  %5 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %nary, align 8, !dbg !5520
  %hashcode = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %5, i64 0, i32 2, !dbg !5521
  %6 = load i32, i32* %hashcode, align 8, !dbg !5521
  br label %cleanup, !dbg !5522

sw.bb5:                                           ; preds = %entry
  %u6 = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !5523
  %reference = bitcast i8* %u6 to %struct.vn_reference_s**, !dbg !5523
  %7 = load %struct.vn_reference_s*, %struct.vn_reference_s** %reference, align 8, !dbg !5523
  %hashcode7 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %7, i64 0, i32 1, !dbg !5524
  %8 = load i32, i32* %hashcode7, align 4, !dbg !5524
  br label %cleanup, !dbg !5525

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 229, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5526
  br label %cleanup, !dbg !5527

cleanup:                                          ; preds = %sw.default, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ 0, %sw.default ], [ %8, %sw.bb5 ], [ %6, %sw.bb3 ], [ %4, %sw.bb1 ], [ %call, %sw.bb ], !dbg !5511
  ret i32 %retval.0, !dbg !5528
}

; Function Attrs: nounwind uwtable
define internal i32 @pre_expr_eq(i8* %p1, i8* %p2) #5 !dbg !5529 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5531, metadata !DIExpression()), !dbg !5535
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5532, metadata !DIExpression()), !dbg !5535
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5533, metadata !DIExpression()), !dbg !5535
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5534, metadata !DIExpression()), !dbg !5535
  %kind = bitcast i8* %p1 to i32*, !dbg !5536
  %0 = load i32, i32* %kind, align 8, !dbg !5536
  %kind1 = bitcast i8* %p2 to i32*, !dbg !5538
  %1 = load i32, i32* %kind1, align 8, !dbg !5538
  %cmp = icmp eq i32 %0, %1, !dbg !5539
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5540

if.end:                                           ; preds = %entry
  switch i32 %0, label %sw.default [
    i32 3, label %sw.bb
    i32 0, label %sw.bb5
    i32 1, label %sw.bb11
    i32 2, label %sw.bb16
  ], !dbg !5541

sw.bb:                                            ; preds = %if.end
  %u = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !5542
  %constant = bitcast i8* %u to %union.tree_node**, !dbg !5542
  %2 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !5542
  %u3 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !5544
  %constant4 = bitcast i8* %u3 to %union.tree_node**, !dbg !5544
  %3 = load %union.tree_node*, %union.tree_node** %constant4, align 8, !dbg !5544
  %call = tail call fastcc zeroext i8 @vn_constant_eq_with_type(%union.tree_node* %2, %union.tree_node* %3) #7, !dbg !5545
  %conv = zext i8 %call to i32, !dbg !5545
  br label %cleanup, !dbg !5546

sw.bb5:                                           ; preds = %if.end
  %u6 = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !5547
  %name = bitcast i8* %u6 to %union.tree_node**, !dbg !5547
  %4 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !5547
  %u7 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !5548
  %name8 = bitcast i8* %u7 to %union.tree_node**, !dbg !5548
  %5 = load %union.tree_node*, %union.tree_node** %name8, align 8, !dbg !5548
  %cmp9 = icmp eq %union.tree_node* %4, %5, !dbg !5549
  %conv10 = zext i1 %cmp9 to i32, !dbg !5549
  br label %cleanup, !dbg !5550

sw.bb11:                                          ; preds = %if.end
  %u12 = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !5551
  %6 = bitcast i8* %u12 to i8**, !dbg !5551
  %7 = load i8*, i8** %6, align 8, !dbg !5551
  %u13 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !5552
  %8 = bitcast i8* %u13 to i8**, !dbg !5552
  %9 = load i8*, i8** %8, align 8, !dbg !5552
  %call15 = tail call i32 @vn_nary_op_eq(i8* %7, i8* %9) #6, !dbg !5553
  br label %cleanup, !dbg !5554

sw.bb16:                                          ; preds = %if.end
  %u17 = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !5555
  %10 = bitcast i8* %u17 to i8**, !dbg !5555
  %11 = load i8*, i8** %10, align 8, !dbg !5555
  %u18 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !5556
  %12 = bitcast i8* %u18 to i8**, !dbg !5556
  %13 = load i8*, i8** %12, align 8, !dbg !5556
  %call20 = tail call i32 @vn_reference_eq(i8* %11, i8* %13) #6, !dbg !5557
  br label %cleanup, !dbg !5558

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 207, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5559
  br label %cleanup, !dbg !5560

cleanup:                                          ; preds = %entry, %sw.default, %sw.bb16, %sw.bb11, %sw.bb5, %sw.bb
  %retval.0 = phi i32 [ 0, %sw.default ], [ %call20, %sw.bb16 ], [ %call15, %sw.bb11 ], [ %conv10, %sw.bb5 ], [ %conv, %sw.bb ], [ 0, %entry ], !dbg !5535
  ret i32 %retval.0, !dbg !5561
}

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) local_unnamed_addr #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !5562 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !5566, metadata !DIExpression()), !dbg !5568
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !5569
  store i32 0, i32* %index, align 8, !dbg !5570
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !5571
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !5572
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !5573
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !5573
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !5573
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5574 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5579
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5579
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5579

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5579
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5579
  br label %cond.end, !dbg !5579

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5579
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !5579
  ret %struct.edge_def* %call2, !dbg !5580
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !5581 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !5585, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !5586, metadata !DIExpression()), !dbg !5590
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !5591
  %0 = load i8*, i8** %popcount, align 8, !dbg !5591
  %tobool = icmp eq i8* %0, null, !dbg !5592
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !5593

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !5594
  %.pre2 = zext i32 %.pre to i64, !dbg !5595
  %.pre3 = shl i64 1, %.pre2, !dbg !5595
  %.pre4 = lshr i32 %bitno, 6, !dbg !5596
  %.pre5 = zext i32 %.pre4 to i64, !dbg !5597
  br label %if.end7, !dbg !5593

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !5598
  %idxprom = zext i32 %div to i64, !dbg !5598
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !5598
  %1 = load i64, i64* %arrayidx, align 8, !dbg !5598
  %rem = and i32 %bitno, 63, !dbg !5598
  %sh_prom = zext i32 %rem to i64, !dbg !5598
  %2 = shl i64 1, %sh_prom, !dbg !5599
  %3 = and i64 %1, %2, !dbg !5599
  %tobool1 = icmp eq i64 %3, 0, !dbg !5599
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !5601

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !5602
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !5603
  %inc = add i8 %4, 1, !dbg !5603
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !5603
  br label %if.end7, !dbg !5602

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !5597
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !5595
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !5597
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !5604
  %or = or i64 %5, %shl.pre-phi, !dbg !5604
  store i64 %or, i64* %arrayidx13, align 8, !dbg !5604
  ret void, !dbg !5605
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !5606 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5612, metadata !DIExpression()), !dbg !5613
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !5614
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5614

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !5614
  %0 = load i32, i32* %num, align 8, !dbg !5614
  br label %cond.end, !dbg !5614

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5614
  ret i32 %cond, !dbg !5614
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_one_before_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5615 {
entry:
  %add = add i32 %i.coerce0, 1, !dbg !5620
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5621
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5621
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5621

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5621
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5621
  br label %cond.end, !dbg !5621

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5621
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5621
  %cmp = icmp eq i32 %add, %call2, !dbg !5622
  %conv3 = zext i1 %cmp to i8, !dbg !5623
  ret i8 %conv3, !dbg !5624
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !5625 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !5629, metadata !DIExpression()), !dbg !5630
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !5631
  %0 = load i32, i32* %index, align 8, !dbg !5631
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !5631
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !5631
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !5631
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5631
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5631

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !5631
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !5631
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !5631
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5631
  br label %cond.end, !dbg !5631

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5631
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5631
  %cmp = icmp ult i32 %0, %call2, !dbg !5631
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !5631

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5631
  br label %cond.end5, !dbg !5631

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !5632
  %inc = add i32 %5, 1, !dbg !5632
  store i32 %inc, i32* %index, align 8, !dbg !5632
  ret void, !dbg !5633
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5634 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5638, metadata !DIExpression()), !dbg !5640
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5639, metadata !DIExpression()), !dbg !5640
  br label %land.end, !dbg !5641

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5641
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5641
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !5641
  ret %struct.edge_def* %0, !dbg !5641
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5642 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !5647
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5647

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5647
  br label %cond.end, !dbg !5647

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !5648
  ret %struct.VEC_edge_gc* %0, !dbg !5649
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @vn_hash_constant_with_type(%union.tree_node* %constant) unnamed_addr #0 !dbg !5650 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %constant, metadata !5654, metadata !DIExpression()), !dbg !5656
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %constant, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5657
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !5657
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5655, metadata !DIExpression()), !dbg !5656
  %call = tail call i32 @iterative_hash_expr(%union.tree_node* %constant, i32 0) #6, !dbg !5658
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5659
  %bf.load = load i64, i64* %1, align 8, !dbg !5659
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5659
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !5659
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !5659

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast1, 7, !dbg !5659
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !5659

lor.rhs:                                          ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 8, !dbg !5659
  %phitmp = zext i1 %cmp11 to i32, !dbg !5659
  br label %lor.end, !dbg !5659

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i32 [ 1, %lor.lhs.false ], [ 1, %entry ], [ %phitmp, %lor.rhs ]
  %add = add i32 %call, %2, !dbg !5660
  br i1 %cmp, label %cond.true, label %lor.lhs.false17, !dbg !5661

lor.lhs.false17:                                  ; preds = %lor.end
  %cmp22 = icmp eq i64 %bf.cast1, 7, !dbg !5661
  br i1 %cmp22, label %cond.true, label %lor.lhs.false23, !dbg !5661

lor.lhs.false23:                                  ; preds = %lor.lhs.false17
  %cmp28 = icmp eq i64 %bf.cast1, 8, !dbg !5661
  br i1 %cmp28, label %cond.true, label %cond.end, !dbg !5661

cond.true:                                        ; preds = %lor.lhs.false23, %lor.lhs.false17, %lor.end
  %type29 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !5662
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type29, i64 0, i32 6, !dbg !5662
  %bf.load30 = load i32, i32* %precision, align 4, !dbg !5662
  %bf.clear31 = and i32 %bf.load30, 1023, !dbg !5662
  %bf.lshr = lshr i64 %bf.load, 21, !dbg !5663
  %3 = trunc i64 %bf.lshr to i32, !dbg !5663
  %bf.cast35 = and i32 %3, 1, !dbg !5663
  %add36 = add nuw nsw i32 %bf.clear31, %bf.cast35, !dbg !5664
  br label %cond.end, !dbg !5661

cond.end:                                         ; preds = %lor.lhs.false23, %cond.true
  %cond = phi i32 [ %add36, %cond.true ], [ 0, %lor.lhs.false23 ], !dbg !5661
  %add37 = add i32 %add, %cond, !dbg !5665
  ret i32 %add37, !dbg !5666
}

declare dso_local i32 @iterative_hash_expr(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @vn_constant_eq_with_type(%union.tree_node* %c1, %union.tree_node* %c2) unnamed_addr #0 !dbg !5667 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %c1, metadata !5671, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata %union.tree_node* %c2, metadata !5672, metadata !DIExpression()), !dbg !5673
  %call = tail call zeroext i8 @expressions_equal_p(%union.tree_node* %c1, %union.tree_node* %c2) #6, !dbg !5674
  %tobool = icmp eq i8 %call, 0, !dbg !5674
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5675

land.rhs:                                         ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %c1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5676
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5676
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %c2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5677
  %1 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !5677
  %call3 = tail call zeroext i8 @types_compatible_p(%union.tree_node* %0, %union.tree_node* %1) #6, !dbg !5678
  %tobool5 = icmp ne i8 %call3, 0, !dbg !5675
  %phitmp = zext i1 %tobool5 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !5679
}

declare dso_local i32 @vn_nary_op_eq(i8*, i8*) local_unnamed_addr #2

declare dso_local i32 @vn_reference_eq(i8*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @expressions_equal_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @types_compatible_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5680 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5684, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5685, metadata !DIExpression()), !dbg !5686
  br label %land.end, !dbg !5687

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5687
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5687
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5687
  ret %union.tree_node* %0, !dbg !5687
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @has_zero_uses(%union.tree_node* %var) unnamed_addr #0 !dbg !5688 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5695, metadata !DIExpression()), !dbg !5700
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5701
  %0 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !5701
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !5696, metadata !DIExpression()), !dbg !5700
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !5702
  %1 = bitcast i40* %next to %struct.ssa_use_operand_d**, !dbg !5702
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !5702
  %cmp = icmp eq %struct.ssa_use_operand_d* %2, %0, !dbg !5704
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5705

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5706
  %tobool = icmp eq i32 %3, 0, !dbg !5706
  br i1 %tobool, label %cleanup, label %if.end2, !dbg !5708

if.end2:                                          ; preds = %if.end
  %call = tail call zeroext i8 @has_zero_uses_1(%struct.ssa_use_operand_d* nonnull %0) #6, !dbg !5709
  br label %cleanup, !dbg !5710

cleanup:                                          ; preds = %if.end, %entry, %if.end2
  %retval.0 = phi i8 [ %call, %if.end2 ], [ 1, %entry ], [ 0, %if.end ], !dbg !5700
  ret i8 %retval.0, !dbg !5711
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %name) unnamed_addr #5 !dbg !5712 {
entry:
  %expr = alloca %struct.pre_expr_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5716, metadata !DIExpression()), !dbg !5720
  %0 = bitcast %struct.pre_expr_d* %expr to i8*, !dbg !5721
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5721
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 0, !dbg !5722
  store i32 0, i32* %kind, align 8, !dbg !5723
  %id = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 1, !dbg !5724
  store i32 0, i32* %id, align 4, !dbg !5725
  %name1 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, i32 0, !dbg !5726
  store %union.tree_node* %name, %union.tree_node** %name1, align 8, !dbg !5727
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !5717, metadata !DIExpression(DW_OP_deref)), !dbg !5720
  %call = call fastcc i32 @lookup_expression_id(%struct.pre_expr_d* nonnull %expr) #7, !dbg !5728
  call void @llvm.dbg.value(metadata i32 %call, metadata !5719, metadata !DIExpression()), !dbg !5720
  %cmp = icmp eq i32 %call, 0, !dbg !5729
  br i1 %cmp, label %if.end, label %if.then, !dbg !5731

if.then:                                          ; preds = %entry
  %call2 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %call) #7, !dbg !5732
  br label %cleanup, !dbg !5733

if.end:                                           ; preds = %entry
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @pre_expr_pool, align 8, !dbg !5734
  %call3 = call i8* @pool_alloc(%struct.alloc_pool_def* %1) #6, !dbg !5735
  %2 = bitcast i8* %call3 to %struct.pre_expr_d*, !dbg !5736
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %2, metadata !5718, metadata !DIExpression()), !dbg !5720
  %kind4 = bitcast i8* %call3 to i32*, !dbg !5737
  store i32 0, i32* %kind4, align 8, !dbg !5738
  %u5 = getelementptr inbounds i8, i8* %call3, i64 8, !dbg !5739
  %name6 = bitcast i8* %u5 to %union.tree_node**, !dbg !5739
  store %union.tree_node* %name, %union.tree_node** %name6, align 8, !dbg !5740
  %call7 = call fastcc i32 @alloc_expression_id(%struct.pre_expr_d* %2) #7, !dbg !5741
  br label %cleanup, !dbg !5742

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.pre_expr_d* [ %call2, %if.then ], [ %2, %if.end ], !dbg !5720
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5743
  ret %struct.pre_expr_d* %retval.0, !dbg !5743
}

; Function Attrs: nounwind uwtable
define internal fastcc void @bitmap_insert_into_set(%struct.bitmap_set* %set, %struct.pre_expr_d* %expr) unnamed_addr #5 !dbg !5744 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !5748, metadata !DIExpression()), !dbg !5750
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !5749, metadata !DIExpression()), !dbg !5750
  %call = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %expr) #7, !dbg !5751
  tail call fastcc void @bitmap_insert_into_set_1(%struct.bitmap_set* %set, %struct.pre_expr_d* %expr, i32 %call, i8 zeroext 0) #7, !dbg !5752
  ret void, !dbg !5753
}

; Function Attrs: nounwind uwtable
define internal fastcc void @bitmap_value_insert_into_set(%struct.bitmap_set* %set, %struct.pre_expr_d* %expr) unnamed_addr #5 !dbg !5754 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !5756, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !5757, metadata !DIExpression()), !dbg !5759
  %call = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %expr) #7, !dbg !5760
  call void @llvm.dbg.value(metadata i32 %call, metadata !5758, metadata !DIExpression()), !dbg !5759
  %call1 = tail call zeroext i8 @value_id_constant_p(i32 %call) #6, !dbg !5761
  %tobool = icmp eq i8 %call1, 0, !dbg !5761
  br i1 %tobool, label %if.end, label %cleanup.cont, !dbg !5763

if.end:                                           ; preds = %entry
  %values = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 1, !dbg !5764
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !5764
  %call2 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %call) #6, !dbg !5766
  %tobool3 = icmp eq i8 %call2, 0, !dbg !5766
  br i1 %tobool3, label %cleanup.cont, label %if.then4, !dbg !5767

if.then4:                                         ; preds = %if.end
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 0, !dbg !5768
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !5768
  %id = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 1, !dbg !5769
  %2 = load i32, i32* %id, align 4, !dbg !5769
  %call5 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %1, i32 %2) #6, !dbg !5770
  br label %cleanup.cont, !dbg !5770

cleanup.cont:                                     ; preds = %if.end, %entry, %if.then4
  ret void, !dbg !5771
}

declare dso_local %struct.basic_block_def* @first_dom_son(i32, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @next_dom_son(i32, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @get_immediate_dominator(i32, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @bitmap_set_copy(%struct.bitmap_set* %dest, %struct.bitmap_set* %orig) unnamed_addr #5 !dbg !5772 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %dest, metadata !5776, metadata !DIExpression()), !dbg !5778
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %orig, metadata !5777, metadata !DIExpression()), !dbg !5778
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %dest, i64 0, i32 0, !dbg !5779
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !5779
  %expressions1 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %orig, i64 0, i32 0, !dbg !5780
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions1, align 8, !dbg !5780
  tail call void @bitmap_copy(%struct.bitmap_head_def* %0, %struct.bitmap_head_def* %1) #6, !dbg !5781
  %values = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %dest, i64 0, i32 1, !dbg !5782
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !5782
  %values2 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %orig, i64 0, i32 1, !dbg !5783
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values2, align 8, !dbg !5783
  tail call void @bitmap_copy(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %3) #6, !dbg !5784
  ret void, !dbg !5785
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5786 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5790, metadata !DIExpression()), !dbg !5791
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5792
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5792
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !5793
  %conv1 = zext i1 %cmp to i8, !dbg !5794
  ret i8 %conv1, !dbg !5795
}

; Function Attrs: nounwind uwtable
define internal fastcc void @make_values_for_phi(%union.gimple_statement_d* %phi, %struct.basic_block_def* %block) unnamed_addr #5 !dbg !5796 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !5800, metadata !DIExpression()), !dbg !5813
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !5801, metadata !DIExpression()), !dbg !5813
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #7, !dbg !5814
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5802, metadata !DIExpression()), !dbg !5813
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !5815
  %tobool = icmp eq i8 %call1, 0, !dbg !5815
  br i1 %tobool, label %if.end15, label %if.then, !dbg !5816

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %call) #7, !dbg !5817
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call2, metadata !5803, metadata !DIExpression()), !dbg !5818
  %call3 = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call2) #7, !dbg !5819
  tail call void @add_to_value(i32 %call3, %struct.pre_expr_d* %call2) #7, !dbg !5820
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !5821
  %0 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !5821
  %1 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %0, align 8, !dbg !5821
  %phi_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %1, i64 0, i32 1, !dbg !5821
  %2 = load %struct.bitmap_set*, %struct.bitmap_set** %phi_gen, align 8, !dbg !5821
  tail call fastcc void @bitmap_insert_into_set(%struct.bitmap_set* %2, %struct.pre_expr_d* %call2) #7, !dbg !5822
  %3 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %0, align 8, !dbg !5823
  %avail_out = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %3, i64 0, i32 3, !dbg !5823
  %4 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out, align 8, !dbg !5823
  tail call fastcc void @bitmap_value_insert_into_set(%struct.bitmap_set* %4, %struct.pre_expr_d* %call2) #7, !dbg !5824
  %5 = load i8, i8* @in_fre, align 1, !dbg !5825
  %tobool5 = icmp eq i8 %5, 0, !dbg !5825
  br i1 %tobool5, label %for.cond.preheader, label %if.end15, !dbg !5826

for.cond.preheader:                               ; preds = %if.then
  br label %for.cond, !dbg !5827

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !5828
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5806, metadata !DIExpression()), !dbg !5829
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !5830
  %6 = zext i32 %call7 to i64, !dbg !5831
  %cmp = icmp ult i64 %indvars.iv, %6, !dbg !5831
  br i1 %cmp, label %for.body, label %if.end15.loopexit, !dbg !5827

for.body:                                         ; preds = %for.cond
  %call8 = tail call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %phi, i64 %indvars.iv) #7, !dbg !5832
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !5809, metadata !DIExpression()), !dbg !5833
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5834
  %bf.load = load i64, i64* %7, align 8, !dbg !5834
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5836
  %cmp9 = icmp eq i64 %bf.cast1, 141, !dbg !5836
  br i1 %cmp9, label %if.then11, label %for.inc, !dbg !5837

if.then11:                                        ; preds = %for.body
  %call12 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %call8) #7, !dbg !5838
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call12, metadata !5803, metadata !DIExpression()), !dbg !5818
  %call13 = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call12) #7, !dbg !5840
  tail call void @add_to_value(i32 %call13, %struct.pre_expr_d* %call12) #7, !dbg !5841
  br label %for.inc, !dbg !5842

for.inc:                                          ; preds = %for.body, %if.then11
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5843
  br label %for.cond, !dbg !5844, !llvm.loop !5845

if.end15.loopexit:                                ; preds = %for.cond
  br label %if.end15, !dbg !5847

if.end15:                                         ; preds = %if.end15.loopexit, %if.then, %entry
  ret void, !dbg !5847
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5848 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5852, metadata !DIExpression()), !dbg !5853
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5854
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5854
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !5855
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5855
  ret %union.gimple_statement_d* %1, !dbg !5856
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !5857 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5862, metadata !DIExpression()), !dbg !5863
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5864
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5864
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !5865
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !5865
  %2 = load i64, i64* %1, align 8, !dbg !5865
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !5866
  store i64 %2, i64* %3, align 8, !dbg !5866
  ret void, !dbg !5867
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5868 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5872, metadata !DIExpression()), !dbg !5875
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5873, metadata !DIExpression()), !dbg !5876
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !5877
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !5874, metadata !DIExpression()), !dbg !5875
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !5878
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !5879
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5880
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !5881
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !5882
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !5883
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !5884
  ret void, !dbg !5885
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_uid(%union.gimple_statement_d* %g, i32 %uid) unnamed_addr #0 !dbg !5886 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5890, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.value(metadata i32 %uid, metadata !5891, metadata !DIExpression()), !dbg !5892
  %uid1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 1, !dbg !5893
  store i32 %uid, i32* %uid1, align 4, !dbg !5894
  ret void, !dbg !5895
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5896 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5898, metadata !DIExpression()), !dbg !5899
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !5900
  %cmp = icmp eq i32 %call, 8, !dbg !5901
  %conv1 = zext i1 %cmp to i8, !dbg !5900
  ret i8 %conv1, !dbg !5902
}

declare dso_local zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5903 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5905, metadata !DIExpression()), !dbg !5906
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5907
  %tobool = icmp eq i8 %call, 0, !dbg !5907
  br i1 %tobool, label %return, label %if.then, !dbg !5909

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5910
  %bf.load = load i32, i32* %0, align 8, !dbg !5910
  %bf.lshr = lshr i32 %bf.load, 14, !dbg !5910
  %1 = trunc i32 %bf.lshr to i8, !dbg !5911
  %conv = and i8 %1, 1, !dbg !5911
  br label %return, !dbg !5912

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv, %if.then ], [ 0, %entry ], !dbg !5913
  ret i8 %retval.0, !dbg !5914
}

declare dso_local zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_to_exp_gen(%struct.basic_block_def* %block, %union.tree_node* %op) unnamed_addr #5 !dbg !5915 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !5919, metadata !DIExpression()), !dbg !5924
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !5920, metadata !DIExpression()), !dbg !5924
  %0 = load i8, i8* @in_fre, align 1, !dbg !5925
  %tobool = icmp eq i8 %0, 0, !dbg !5925
  br i1 %tobool, label %if.then, label %if.end4, !dbg !5926

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5927
  %bf.load = load i64, i64* %1, align 8, !dbg !5927
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5929
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5929
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5930

land.lhs.true:                                    ; preds = %if.then
  %call = tail call zeroext i8 @ssa_undefined_value_p(%union.tree_node* %op) #6, !dbg !5931
  %tobool1 = icmp eq i8 %call, 0, !dbg !5931
  br i1 %tobool1, label %if.end, label %cleanup, !dbg !5932

if.end:                                           ; preds = %land.lhs.true, %if.then
  %call3 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %op) #7, !dbg !5933
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call3, metadata !5921, metadata !DIExpression()), !dbg !5934
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !5935
  %2 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !5935
  %3 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %2, align 8, !dbg !5935
  %exp_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %3, i64 0, i32 0, !dbg !5935
  %4 = load %struct.bitmap_set*, %struct.bitmap_set** %exp_gen, align 8, !dbg !5935
  tail call fastcc void @bitmap_value_insert_into_set(%struct.bitmap_set* %4, %struct.pre_expr_d* %call3) #7, !dbg !5936
  br label %cleanup, !dbg !5937

cleanup:                                          ; preds = %land.lhs.true, %if.end
  ret void

if.end4:                                          ; preds = %entry
  ret void, !dbg !5938
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @can_value_number_call(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5939 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5943, metadata !DIExpression()), !dbg !5944
  %call = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %stmt) #6, !dbg !5945
  %and = and i32 %call, 3, !dbg !5947
  %tobool = icmp ne i32 %and, 0, !dbg !5947
  %. = zext i1 %tobool to i8, !dbg !5944
  ret i8 %., !dbg !5948
}

declare dso_local void @copy_reference_ops_from_call(%union.gimple_statement_d*, %struct.VEC_vn_reference_op_s_heap**) local_unnamed_addr #2

declare dso_local %union.tree_node* @vn_reference_lookup_pieces(%union.tree_node*, i32, %union.tree_node*, %struct.VEC_vn_reference_op_s_heap*, %struct.vn_reference_s**, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5949 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5951, metadata !DIExpression()), !dbg !5956
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5957
  call void @llvm.dbg.value(metadata i32 %call, metadata !5952, metadata !DIExpression()), !dbg !5956
  switch i32 %call, label %if.else14 [
    i32 8, label %if.then3
    i32 6, label %if.else
    i32 1, label %if.then13
  ], !dbg !5958

if.then3:                                         ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #7, !dbg !5959
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5953, metadata !DIExpression()), !dbg !5961
  br label %cleanup, !dbg !5962

if.else:                                          ; preds = %entry
  %call5 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5963
  %cond = icmp eq i32 %call5, 66, !dbg !5964
  br i1 %cond, label %sw.bb, label %sw.default, !dbg !5964

sw.bb:                                            ; preds = %if.else
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5965
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5965
  %0 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !5965
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5953, metadata !DIExpression()), !dbg !5961
  br label %cleanup, !dbg !5967

sw.default:                                       ; preds = %if.else
  %call8 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !5968
  %type10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5968
  %1 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !5968
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5953, metadata !DIExpression()), !dbg !5961
  br label %cleanup, !dbg !5969

if.then13:                                        ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !5970
  br label %cleanup, !dbg !5972

if.else14:                                        ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5973
  br label %cleanup, !dbg !5974

cleanup:                                          ; preds = %if.then3, %sw.default, %sw.bb, %if.else14, %if.then13
  %retval.0 = phi %union.tree_node* [ %2, %if.then13 ], [ %3, %if.else14 ], [ %call4, %if.then3 ], [ %1, %sw.default ], [ %0, %sw.bb ], !dbg !5975
  ret %union.tree_node* %retval.0, !dbg !5976
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** %vec_) unnamed_addr #0 !dbg !5977 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %vec_, metadata !5982, metadata !DIExpression()), !dbg !5983
  %0 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %vec_, align 8, !dbg !5984
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_heap* %0, null, !dbg !5984
  br i1 %tobool, label %if.end, label %if.then, !dbg !5986

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_vn_reference_op_s_heap* %0 to i8*, !dbg !5986
  tail call void @free(i8* nonnull %1) #6, !dbg !5984
  br label %if.end, !dbg !5984

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** %vec_, align 8, !dbg !5986
  ret void, !dbg !5986
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5987 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5991, metadata !DIExpression()), !dbg !5993
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !5994
  call void @llvm.dbg.value(metadata i32 %call, metadata !5992, metadata !DIExpression()), !dbg !5993
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !5995
  %cmp = icmp eq i32 %call1, 3, !dbg !5997
  br i1 %cmp, label %if.then, label %if.end, !dbg !5998

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !5999
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5999
  %bf.load = load i64, i64* %0, align 8, !dbg !5999
  %1 = trunc i64 %bf.load to i32, !dbg !5999
  %bf.cast = and i32 %1, 65535, !dbg !5999
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5992, metadata !DIExpression()), !dbg !5993
  br label %if.end, !dbg !6000

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !5993
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !5992, metadata !DIExpression()), !dbg !5993
  ret i32 %code.0, !dbg !6001
}

declare dso_local %union.tree_node* @vn_nary_op_lookup_pieces(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.vn_nary_op_s**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6002 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6004, metadata !DIExpression()), !dbg !6005
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !6006
  %0 = load i32, i32* %num_ops, align 4, !dbg !6006
  ret i32 %0, !dbg !6007
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6008 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6010, metadata !DIExpression()), !dbg !6011
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !6012
  ret %union.tree_node* %call, !dbg !6013
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6014 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6016, metadata !DIExpression()), !dbg !6017
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !6018
  %cmp = icmp ugt i32 %call, 2, !dbg !6020
  br i1 %cmp, label %if.then, label %return, !dbg !6021

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !6022
  br label %return, !dbg !6023

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !6024
  ret %union.tree_node* %retval.0, !dbg !6025
}

declare dso_local %union.tree_node* @vn_reference_lookup(%union.tree_node*, %union.tree_node*, i8 zeroext, %struct.vn_reference_s**) local_unnamed_addr #2

declare dso_local zeroext i8 @has_zero_uses_1(%struct.ssa_use_operand_d*) local_unnamed_addr #2

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6026 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6028, metadata !DIExpression()), !dbg !6029
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !6030
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !6030
  ret %union.tree_node* %0, !dbg !6031
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %gs, i64 %index) unnamed_addr #0 !dbg !6032 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6036, metadata !DIExpression()), !dbg !6039
  call void @llvm.dbg.value(metadata i64 %index, metadata !6037, metadata !DIExpression()), !dbg !6039
  %conv = trunc i64 %index to i32, !dbg !6040
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #7, !dbg !6041
  call void @llvm.dbg.value(metadata %struct.phi_arg_d* %call, metadata !6038, metadata !DIExpression()), !dbg !6039
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !6042
  %call1 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %imm_use) #7, !dbg !6043
  ret %union.tree_node* %call1, !dbg !6044
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6045 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6052, metadata !DIExpression()), !dbg !6053
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !6054
  %0 = load i32, i32* %flags, align 8, !dbg !6054
  %and = and i32 %0, 512, !dbg !6055
  %tobool = icmp eq i32 %and, 0, !dbg !6055
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !6056

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !6057
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !6057
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !6058
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !6059

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !6060
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !6060
  br label %cond.end, !dbg !6059

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !6059
  ret %struct.gimple_seq_d* %cond, !dbg !6061
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6062 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6069, metadata !DIExpression()), !dbg !6070
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !6071
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6071

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !6072
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !6072
  br label %cond.end, !dbg !6071

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !6071
  ret %struct.gimple_seq_node_d* %cond, !dbg !6073
}

declare dso_local zeroext i8 @ssa_undefined_value_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6074 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6076, metadata !DIExpression()), !dbg !6079
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !6080
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6077, metadata !DIExpression()), !dbg !6079
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6081
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !6081
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !6081
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !6082
  %2 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !6082
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !6082
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !6083
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !6083
  ret %union.tree_node* %4, !dbg !6084
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6085 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6087, metadata !DIExpression()), !dbg !6088
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !6089
  ret %union.tree_node* %call, !dbg !6090
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !6091 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6095, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 %i, metadata !6096, metadata !DIExpression()), !dbg !6097
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !6098
  %tobool = icmp eq i8 %call, 0, !dbg !6098
  br i1 %tobool, label %return, label %if.then, !dbg !6100

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !6101
  %idxprom = zext i32 %i to i64, !dbg !6101
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !6101
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6101
  br label %return, !dbg !6103

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !6104
  ret %union.tree_node* %retval.0, !dbg !6105
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6106 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6110, metadata !DIExpression()), !dbg !6112
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !6113
  %idxprom = zext i32 %call to i64, !dbg !6114
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !6114
  %0 = load i64, i64* %arrayidx, align 8, !dbg !6114
  call void @llvm.dbg.value(metadata i64 %0, metadata !6111, metadata !DIExpression()), !dbg !6112
  %cmp = icmp eq i64 %0, 0, !dbg !6115
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6115

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6115
  br label %cond.end, !dbg !6115

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !6116
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !6117
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !6118
  ret %union.tree_node** %2, !dbg !6119
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6120 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6124, metadata !DIExpression()), !dbg !6125
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !6126
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !6127
  ret i32 %call1, !dbg !6128
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !6129 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6133, metadata !DIExpression()), !dbg !6134
  %idxprom = zext i32 %code to i64, !dbg !6135
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !6135
  %0 = load i32, i32* %arrayidx, align 4, !dbg !6135
  ret i32 %0, !dbg !6136
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6137 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6139, metadata !DIExpression()), !dbg !6141
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !6142
  call void @llvm.dbg.value(metadata i32 %call, metadata !6140, metadata !DIExpression()), !dbg !6141
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !6143

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !6145
  %bf.load = load i32, i32* %0, align 8, !dbg !6145
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6145
  br label %cleanup, !dbg !6146

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6147
  br label %cleanup, !dbg !6149

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !6141
  ret i32 %retval.0, !dbg !6150
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !6151 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6155, metadata !DIExpression()), !dbg !6156
  %idxprom = sext i32 %code to i64, !dbg !6157
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !6157
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6157
  %conv = zext i8 %0 to i32, !dbg !6158
  ret i32 %conv, !dbg !6159
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !6160 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !6166, metadata !DIExpression()), !dbg !6167
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6168
  %tobool = icmp eq i8 %call, 0, !dbg !6168
  br i1 %tobool, label %if.then, label %if.else, !dbg !6170

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6171
  br label %return, !dbg !6173

if.else:                                          ; preds = %entry
  br label %return, !dbg !6174

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !6176
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !6176
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !6176
  ret i8 %retval.0, !dbg !6177
}

declare dso_local void @sbitmap_ones(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6178 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6184, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6185, metadata !DIExpression()), !dbg !6186
  br label %land.end, !dbg !6187

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6187
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6187
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !6187
  ret %struct.basic_block_def* %0, !dbg !6187
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @compute_antic_aux(%struct.basic_block_def* %block, i8 zeroext %block_has_abnormal_pred_edge) unnamed_addr #5 !dbg !6188 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %bii = alloca i32, align 4
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %worklist = alloca %struct.VEC_basic_block_heap*, align 8
  %bprime = alloca %struct.basic_block_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp138 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !6192, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i8 %block_has_abnormal_pred_edge, metadata !6193, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i8 0, metadata !6194, metadata !DIExpression()), !dbg !6218
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6219
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6219
  %1 = bitcast i32* %bii to i8*, !dbg !6220
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6220
  %2 = bitcast %struct.edge_def** %e to i8*, !dbg !6221
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6221
  %3 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6222
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !6222
  call void @llvm.dbg.value(metadata %struct.bitmap_set* null, metadata !6195, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata %struct.bitmap_set* null, metadata !6197, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata %struct.bitmap_set* null, metadata !6196, metadata !DIExpression()), !dbg !6218
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !6223
  %4 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !6223
  %5 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6223
  %visited = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %5, i64 0, i32 8, !dbg !6223
  %bf.load = load i8, i8* %visited, align 8, !dbg !6224
  %bf.set = or i8 %bf.load, 1, !dbg !6224
  store i8 %bf.set, i8* %visited, align 8, !dbg !6224
  %tobool = icmp eq i8 %block_has_abnormal_pred_edge, 0, !dbg !6225
  br i1 %tobool, label %if.end, label %maybe_dump_sets, !dbg !6227

if.end:                                           ; preds = %entry
  %6 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6228
  %antic_in = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %6, i64 0, i32 4, !dbg !6228
  %7 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in, align 8, !dbg !6228
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %7, metadata !6196, metadata !DIExpression()), !dbg !6218
  %call = tail call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !6229
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call, metadata !6197, metadata !DIExpression()), !dbg !6218
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 1, !dbg !6230
  %8 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6230
  %tobool2 = icmp eq %struct.VEC_edge_gc* %8, null, !dbg !6230
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !6230

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %8, i64 0, i32 0, !dbg !6230
  br label %cond.end, !dbg !6230

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !6230
  %call4 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6230
  %cmp = icmp eq i32 %call4, 0, !dbg !6231
  br i1 %cmp, label %if.end110, label %if.else, !dbg !6232

if.else:                                          ; preds = %cond.end
  %call6 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %block) #7, !dbg !6233
  %tobool7 = icmp eq i8 %call6, 0, !dbg !6233
  br i1 %tobool7, label %if.else16, label %if.then8, !dbg !6234

if.then8:                                         ; preds = %if.else
  %call9 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %block) #7, !dbg !6235
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call9, metadata !6202, metadata !DIExpression()), !dbg !6236
  %aux10 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call9, i64 0, i32 2, !dbg !6237
  %9 = bitcast i8** %aux10 to %struct.bb_bitmap_sets**, !dbg !6237
  %10 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %9, align 8, !dbg !6237
  %antic_in11 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %10, i64 0, i32 4, !dbg !6237
  %11 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in11, align 8, !dbg !6237
  %call12 = tail call fastcc zeroext i8 @defer_or_phi_translate_block(%struct.bitmap_set* %call, %struct.bitmap_set* %11, %struct.basic_block_def* %block, %struct.basic_block_def* %call9) #7, !dbg !6239
  %tobool13 = icmp ne i8 %call12, 0, !dbg !6239
  %not.tobool13 = xor i1 %tobool13, true, !dbg !6240
  %.1 = zext i1 %not.tobool13 to i8, !dbg !6240
  call void @llvm.dbg.value(metadata i8 %.1, metadata !6194, metadata !DIExpression()), !dbg !6218
  br i1 %tobool13, label %if.end110, label %maybe_dump_sets

if.else16:                                        ; preds = %if.else
  %12 = bitcast %struct.VEC_basic_block_heap** %worklist to i8*, !dbg !6241
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8, !dbg !6241
  %13 = bitcast %struct.basic_block_def** %bprime to i8*, !dbg !6242
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8, !dbg !6242
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !6210, metadata !DIExpression()), !dbg !6243
  %14 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6244
  %tobool18 = icmp eq %struct.VEC_edge_gc* %14, null, !dbg !6244
  br i1 %tobool18, label %cond.end23, label %cond.true19, !dbg !6244

cond.true19:                                      ; preds = %if.else16
  %base21 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %14, i64 0, i32 0, !dbg !6244
  br label %cond.end23, !dbg !6244

cond.end23:                                       ; preds = %if.else16, %cond.true19
  %cond24 = phi %struct.VEC_edge_base* [ %base21, %cond.true19 ], [ null, %if.else16 ], !dbg !6244
  %call25 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond24) #7, !dbg !6244
  %call26 = tail call fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %call25) #7, !dbg !6244
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call26, metadata !6206, metadata !DIExpression()), !dbg !6243
  store %struct.VEC_basic_block_heap* %call26, %struct.VEC_basic_block_heap** %worklist, align 8, !dbg !6245
  %15 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6246
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8, !dbg !6246
  %call28 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !6246
  %16 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6246
  %17 = extractvalue { i32, %struct.VEC_edge_gc** } %call28, 0, !dbg !6246
  store i32 %17, i32* %16, align 8, !dbg !6246
  %18 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6246
  %19 = extractvalue { i32, %struct.VEC_edge_gc** } %call28, 1, !dbg !6246
  store %struct.VEC_edge_gc** %19, %struct.VEC_edge_gc*** %18, align 8, !dbg !6246
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %15, i64 16, i1 false), !dbg !6246
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8, !dbg !6246
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6248
  %21 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6248
  br label %for.cond, !dbg !6246

for.cond:                                         ; preds = %for.inc, %cond.end23
  %first.0 = phi %struct.basic_block_def* [ null, %cond.end23 ], [ %first.1, %for.inc ], !dbg !6250
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first.0, metadata !6210, metadata !DIExpression()), !dbg !6243
  %22 = load i32, i32* %20, align 8, !dbg !6251
  %23 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %21, align 8, !dbg !6251
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6200, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  %call29 = call fastcc zeroext i8 @ei_cond(i32 %22, %struct.VEC_edge_gc** %23, %struct.edge_def** nonnull %e) #7, !dbg !6251
  %tobool30 = icmp eq i8 %call29, 0, !dbg !6246
  %tobool31 = icmp ne %struct.basic_block_def* %first.0, null, !dbg !6243
  br i1 %tobool30, label %for.end, label %for.body, !dbg !6246

for.body:                                         ; preds = %for.cond
  br i1 %tobool31, label %for.body.if.else39_crit_edge, label %land.lhs.true, !dbg !6252

for.body.if.else39_crit_edge:                     ; preds = %for.body
  %.pre = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6255
  %dest40.phi.trans.insert = getelementptr inbounds %struct.edge_def, %struct.edge_def* %.pre, i64 0, i32 1, !dbg !6257
  %.pre3 = load %struct.basic_block_def*, %struct.basic_block_def** %dest40.phi.trans.insert, align 8, !dbg !6255
  %aux41.phi.trans.insert = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pre3, i64 0, i32 2, !dbg !6257
  %.phi.trans.insert = bitcast i8** %aux41.phi.trans.insert to %struct.bb_bitmap_sets**, !dbg !6257
  %.pre4 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %.phi.trans.insert, align 8, !dbg !6255
  %visited42.phi.trans.insert = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %.pre4, i64 0, i32 8, !dbg !6257
  %bf.load43.pre = load i8, i8* %visited42.phi.trans.insert, align 8, !dbg !6255
  %.pre8 = and i8 %bf.load43.pre, 1, !dbg !6255
  br label %if.else39, !dbg !6252

land.lhs.true:                                    ; preds = %for.body
  %24 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6258
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !6200, metadata !DIExpression()), !dbg !6218
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %24, i64 0, i32 1, !dbg !6258
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6258
  %aux32 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i64 0, i32 2, !dbg !6258
  %26 = bitcast i8** %aux32 to %struct.bb_bitmap_sets**, !dbg !6258
  %27 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %26, align 8, !dbg !6258
  %visited33 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %27, i64 0, i32 8, !dbg !6258
  %bf.load34 = load i8, i8* %visited33, align 8, !dbg !6258
  %bf.clear35 = and i8 %bf.load34, 1, !dbg !6258
  %tobool36 = icmp eq i8 %bf.clear35, 0, !dbg !6258
  br i1 %tobool36, label %if.else39, label %if.then37, !dbg !6259

if.then37:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !6200, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %25, metadata !6210, metadata !DIExpression()), !dbg !6243
  br label %for.inc, !dbg !6260

if.else39:                                        ; preds = %for.body.if.else39_crit_edge, %land.lhs.true
  %bf.clear44.pre-phi = phi i8 [ %.pre8, %for.body.if.else39_crit_edge ], [ %bf.clear35, %land.lhs.true ], !dbg !6255
  %28 = phi %struct.basic_block_def* [ %.pre3, %for.body.if.else39_crit_edge ], [ %25, %land.lhs.true ], !dbg !6255
  %tobool46 = icmp eq i8 %bf.clear44.pre-phi, 0, !dbg !6255
  br i1 %tobool46, label %for.inc, label %if.then47, !dbg !6261

if.then47:                                        ; preds = %if.else39
  %29 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %worklist, align 8, !dbg !6262
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %29, metadata !6206, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %29, metadata !6206, metadata !DIExpression()), !dbg !6243
  %base50 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %29, i64 0, i32 0, !dbg !6262
  %call55 = call fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %base50, %struct.basic_block_def* %28) #7, !dbg !6262
  br label %for.inc, !dbg !6262

for.inc:                                          ; preds = %if.else39, %if.then37, %if.then47
  %first.1 = phi %struct.basic_block_def* [ %25, %if.then37 ], [ %first.0, %if.then47 ], [ %first.0, %if.else39 ], !dbg !6243
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first.1, metadata !6210, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6201, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6251
  br label %for.cond, !dbg !6251, !llvm.loop !6263

for.end:                                          ; preds = %for.cond
  %first.0.lcssa = phi %struct.basic_block_def* [ %first.0, %for.cond ], !dbg !6250
  %tobool31.lcssa = phi i1 [ %tobool31, %for.cond ], !dbg !6243
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first.0.lcssa, metadata !6210, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first.0.lcssa, metadata !6210, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first.0.lcssa, metadata !6210, metadata !DIExpression()), !dbg !6243
  br i1 %tobool31.lcssa, label %if.end68, label %if.then59, !dbg !6265

if.then59:                                        ; preds = %for.end
  %30 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed_blocks, align 8, !dbg !6266
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !6269
  %31 = load i32, i32* %index, align 8, !dbg !6269
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %30, i32 %31) #7, !dbg !6270
  %32 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6271
  %visited61 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %32, i64 0, i32 8, !dbg !6271
  %bf.load62 = load i8, i8* %visited61, align 8, !dbg !6272
  %bf.clear63 = and i8 %bf.load62, -2, !dbg !6272
  store i8 %bf.clear63, i8* %visited61, align 8, !dbg !6272
  %33 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6273
  %deferred = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %33, i64 0, i32 8, !dbg !6273
  %bf.load65 = load i8, i8* %deferred, align 8, !dbg !6274
  %bf.set67 = or i8 %bf.load65, 2, !dbg !6274
  store i8 %bf.set67, i8* %deferred, align 8, !dbg !6274
  call void @llvm.dbg.value(metadata i8 1, metadata !6194, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %worklist, metadata !6206, metadata !DIExpression(DW_OP_deref)), !dbg !6243
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %worklist) #7, !dbg !6275
  br label %cleanup103, !dbg !6276

if.end68:                                         ; preds = %for.end
  %call69 = call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* nonnull %first.0.lcssa) #7, !dbg !6277
  %call70 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %call69) #7, !dbg !6279
  %tobool71 = icmp eq i8 %call70, 0, !dbg !6279
  %aux76 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %first.0.lcssa, i64 0, i32 2, !dbg !6280
  %34 = bitcast i8** %aux76 to %struct.bb_bitmap_sets**, !dbg !6280
  %35 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %34, align 8, !dbg !6280
  %antic_in77 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %35, i64 0, i32 4, !dbg !6280
  %36 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in77, align 8, !dbg !6280
  br i1 %tobool71, label %if.then72, label %if.else75, !dbg !6281

if.then72:                                        ; preds = %if.end68
  call fastcc void @phi_translate_set(%struct.bitmap_set* %call, %struct.bitmap_set* %36, %struct.basic_block_def* %block, %struct.basic_block_def* nonnull %first.0.lcssa) #7, !dbg !6282
  br label %if.end78, !dbg !6282

if.else75:                                        ; preds = %if.end68
  call fastcc void @bitmap_set_copy(%struct.bitmap_set* %call, %struct.bitmap_set* %36) #7, !dbg !6283
  br label %if.end78

if.end78:                                         ; preds = %if.else75, %if.then72
  call void @llvm.dbg.value(metadata i64 0, metadata !6208, metadata !DIExpression()), !dbg !6243
  br label %for.cond79, !dbg !6284

for.cond79:                                       ; preds = %for.inc101, %if.end78
  %i.0 = phi i64 [ 0, %if.end78 ], [ %inc, %for.inc101 ], !dbg !6285
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6208, metadata !DIExpression()), !dbg !6243
  %37 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %worklist, align 8, !dbg !6286
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %37, metadata !6206, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %37, metadata !6206, metadata !DIExpression()), !dbg !6243
  %base82 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %37, i64 0, i32 0, !dbg !6286
  %conv = trunc i64 %i.0 to i32, !dbg !6286
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bprime, metadata !6209, metadata !DIExpression(DW_OP_deref)), !dbg !6243
  %call86 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base82, i32 %conv, %struct.basic_block_def** nonnull %bprime) #7, !dbg !6286
  %tobool87 = icmp eq i32 %call86, 0, !dbg !6287
  br i1 %tobool87, label %for.end102, label %for.body88, !dbg !6287

for.body88:                                       ; preds = %for.cond79
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %bprime, align 8, !dbg !6288
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %38, metadata !6209, metadata !DIExpression()), !dbg !6243
  %call89 = call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %38) #7, !dbg !6289
  %call90 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %call89) #7, !dbg !6290
  %tobool91 = icmp eq i8 %call90, 0, !dbg !6290
  br i1 %tobool91, label %if.then92, label %if.else97, !dbg !6291

if.then92:                                        ; preds = %for.body88
  %call94 = call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !6292
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call94, metadata !6211, metadata !DIExpression()), !dbg !6293
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %bprime, align 8, !dbg !6294
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %39, metadata !6209, metadata !DIExpression()), !dbg !6243
  %aux95 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i64 0, i32 2, !dbg !6294
  %40 = bitcast i8** %aux95 to %struct.bb_bitmap_sets**, !dbg !6294
  %41 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %40, align 8, !dbg !6294
  %antic_in96 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %41, i64 0, i32 4, !dbg !6294
  %42 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in96, align 8, !dbg !6294
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %39, metadata !6209, metadata !DIExpression()), !dbg !6243
  call fastcc void @phi_translate_set(%struct.bitmap_set* %call94, %struct.bitmap_set* %42, %struct.basic_block_def* %block, %struct.basic_block_def* %39) #7, !dbg !6295
  call fastcc void @bitmap_set_and(%struct.bitmap_set* %call, %struct.bitmap_set* %call94) #7, !dbg !6296
  call fastcc void @bitmap_set_free(%struct.bitmap_set* %call94) #7, !dbg !6297
  br label %for.inc101, !dbg !6298

if.else97:                                        ; preds = %for.body88
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %bprime, align 8, !dbg !6299
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %43, metadata !6209, metadata !DIExpression()), !dbg !6243
  %aux98 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %43, i64 0, i32 2, !dbg !6299
  %44 = bitcast i8** %aux98 to %struct.bb_bitmap_sets**, !dbg !6299
  %45 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %44, align 8, !dbg !6299
  %antic_in99 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %45, i64 0, i32 4, !dbg !6299
  %46 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in99, align 8, !dbg !6299
  call fastcc void @bitmap_set_and(%struct.bitmap_set* %call, %struct.bitmap_set* %46) #7, !dbg !6300
  br label %for.inc101

for.inc101:                                       ; preds = %if.then92, %if.else97
  %inc = add i64 %i.0, 1, !dbg !6301
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6208, metadata !DIExpression()), !dbg !6243
  br label %for.cond79, !dbg !6302, !llvm.loop !6303

for.end102:                                       ; preds = %for.cond79
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %worklist, metadata !6206, metadata !DIExpression(DW_OP_deref)), !dbg !6243
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %worklist) #7, !dbg !6305
  br label %cleanup103, !dbg !6306

cleanup103:                                       ; preds = %if.then59, %for.end102
  %cleanup.dest.slot.1 = phi i1 [ true, %for.end102 ], [ false, %if.then59 ]
  %changed.1 = phi i8 [ 0, %for.end102 ], [ 1, %if.then59 ], !dbg !6218
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !6194, metadata !DIExpression()), !dbg !6218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8, !dbg !6306
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8, !dbg !6306
  br i1 %cleanup.dest.slot.1, label %if.end110, label %maybe_dump_sets

if.end110:                                        ; preds = %if.then8, %cleanup103, %cond.end
  %changed.3 = phi i8 [ 0, %cond.end ], [ %.1, %if.then8 ], [ %changed.1, %cleanup103 ], !dbg !6307
  call void @llvm.dbg.value(metadata i8 %changed.3, metadata !6194, metadata !DIExpression()), !dbg !6218
  %47 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6308
  %tmp_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %47, i64 0, i32 2, !dbg !6308
  %48 = load %struct.bitmap_set*, %struct.bitmap_set** %tmp_gen, align 8, !dbg !6308
  %call112 = call fastcc %struct.bitmap_set* @bitmap_set_subtract(%struct.bitmap_set* %call, %struct.bitmap_set* %48) #7, !dbg !6309
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call112, metadata !6195, metadata !DIExpression()), !dbg !6218
  %49 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6310
  %exp_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %49, i64 0, i32 0, !dbg !6310
  %50 = load %struct.bitmap_set*, %struct.bitmap_set** %exp_gen, align 8, !dbg !6310
  %tmp_gen115 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %49, i64 0, i32 2, !dbg !6311
  %51 = load %struct.bitmap_set*, %struct.bitmap_set** %tmp_gen115, align 8, !dbg !6311
  %call116 = call fastcc %struct.bitmap_set* @bitmap_set_subtract(%struct.bitmap_set* %50, %struct.bitmap_set* %51) #7, !dbg !6312
  %52 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6313
  %antic_in118 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %52, i64 0, i32 4, !dbg !6313
  store %struct.bitmap_set* %call116, %struct.bitmap_set** %antic_in118, align 8, !dbg !6314
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %call112, i64 0, i32 0, !dbg !6315
  %53 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !6315
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6198, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  call void @llvm.dbg.value(metadata i32* %bii, metadata !6199, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %53, i32 0, i32* nonnull %bii) #7, !dbg !6315
  br label %for.cond119, !dbg !6315

for.cond119:                                      ; preds = %for.body122, %if.end110
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6198, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  call void @llvm.dbg.value(metadata i32* %bii, metadata !6199, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  %call120 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bii) #7, !dbg !6317
  %tobool121 = icmp eq i8 %call120, 0, !dbg !6315
  %54 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6218
  %antic_in124 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %54, i64 0, i32 4, !dbg !6218
  %55 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in124, align 8, !dbg !6218
  br i1 %tobool121, label %for.end127, label %for.body122, !dbg !6315

for.body122:                                      ; preds = %for.cond119
  %56 = load i32, i32* %bii, align 4, !dbg !6319
  call void @llvm.dbg.value(metadata i32 %56, metadata !6199, metadata !DIExpression()), !dbg !6218
  %call125 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %56) #7, !dbg !6320
  call fastcc void @bitmap_value_insert_into_set(%struct.bitmap_set* %55, %struct.pre_expr_d* %call125) #7, !dbg !6321
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6198, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  call void @llvm.dbg.value(metadata i32* %bii, metadata !6199, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bii) #7, !dbg !6317
  br label %for.cond119, !dbg !6317, !llvm.loop !6322

for.end127:                                       ; preds = %for.cond119
  %.lcssa = phi %struct.bitmap_set* [ %55, %for.cond119 ], !dbg !6218
  call fastcc void @clean(%struct.bitmap_set* %.lcssa, %struct.basic_block_def* %block) #7, !dbg !6324
  %expressions130 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %7, i64 0, i32 0, !dbg !6325
  %57 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions130, align 8, !dbg !6325
  %tobool131 = icmp eq %struct.bitmap_head_def* %57, null, !dbg !6327
  br i1 %tobool131, label %if.then136, label %lor.lhs.false, !dbg !6328

lor.lhs.false:                                    ; preds = %for.end127
  %58 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6329
  %antic_in133 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %58, i64 0, i32 4, !dbg !6329
  %59 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in133, align 8, !dbg !6329
  %call134 = call fastcc zeroext i8 @bitmap_set_equal(%struct.bitmap_set* %7, %struct.bitmap_set* %59) #7, !dbg !6330
  %tobool135 = icmp eq i8 %call134, 0, !dbg !6330
  br i1 %tobool135, label %if.then136, label %if.else147, !dbg !6331

if.then136:                                       ; preds = %lor.lhs.false, %for.end127
  call void @llvm.dbg.value(metadata i8 1, metadata !6194, metadata !DIExpression()), !dbg !6218
  %60 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed_blocks, align 8, !dbg !6332
  %index137 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !6334
  %61 = load i32, i32* %index137, align 8, !dbg !6334
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %60, i32 %61) #7, !dbg !6335
  %62 = bitcast %struct.edge_iterator* %tmp138 to i8*, !dbg !6336
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #8, !dbg !6336
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 0, !dbg !6336
  %call139 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !6336
  %63 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp138, i64 0, i32 0, !dbg !6336
  %64 = extractvalue { i32, %struct.VEC_edge_gc** } %call139, 0, !dbg !6336
  store i32 %64, i32* %63, align 8, !dbg !6336
  %65 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp138, i64 0, i32 1, !dbg !6336
  %66 = extractvalue { i32, %struct.VEC_edge_gc** } %call139, 1, !dbg !6336
  store %struct.VEC_edge_gc** %66, %struct.VEC_edge_gc*** %65, align 8, !dbg !6336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %62, i64 16, i1 false), !dbg !6336
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #8, !dbg !6336
  %67 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6338
  %68 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6338
  br label %for.cond140, !dbg !6336

for.cond140:                                      ; preds = %for.body143, %if.then136
  %69 = load i32, i32* %67, align 8, !dbg !6340
  %70 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %68, align 8, !dbg !6340
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6200, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  %call141 = call fastcc zeroext i8 @ei_cond(i32 %69, %struct.VEC_edge_gc** %70, %struct.edge_def** nonnull %e) #7, !dbg !6340
  %tobool142 = icmp eq i8 %call141, 0, !dbg !6336
  br i1 %tobool142, label %maybe_dump_sets.loopexit, label %for.body143, !dbg !6336

for.body143:                                      ; preds = %for.cond140
  %71 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed_blocks, align 8, !dbg !6341
  %72 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6342
  call void @llvm.dbg.value(metadata %struct.edge_def* %72, metadata !6200, metadata !DIExpression()), !dbg !6218
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %72, i64 0, i32 0, !dbg !6343
  %73 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6343
  %index144 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %73, i64 0, i32 9, !dbg !6344
  %74 = load i32, i32* %index144, align 8, !dbg !6344
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %71, i32 %74) #7, !dbg !6345
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6201, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6340
  br label %for.cond140, !dbg !6340, !llvm.loop !6346

if.else147:                                       ; preds = %lor.lhs.false
  %75 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed_blocks, align 8, !dbg !6348
  %index148 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !6349
  %76 = load i32, i32* %index148, align 8, !dbg !6349
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %75, i32 %76) #7, !dbg !6350
  br label %maybe_dump_sets

maybe_dump_sets.loopexit:                         ; preds = %for.cond140
  br label %maybe_dump_sets, !dbg !6351

maybe_dump_sets:                                  ; preds = %maybe_dump_sets.loopexit, %entry, %if.then8, %if.else147, %cleanup103
  %ANTIC_OUT.0 = phi %struct.bitmap_set* [ %call, %if.then8 ], [ %call, %cleanup103 ], [ null, %entry ], [ %call, %if.else147 ], [ %call, %maybe_dump_sets.loopexit ], !dbg !6218
  %old.0 = phi %struct.bitmap_set* [ %7, %if.then8 ], [ %7, %cleanup103 ], [ null, %entry ], [ %7, %if.else147 ], [ %7, %maybe_dump_sets.loopexit ], !dbg !6218
  %S.0 = phi %struct.bitmap_set* [ null, %if.then8 ], [ null, %cleanup103 ], [ null, %entry ], [ %call112, %if.else147 ], [ %call112, %maybe_dump_sets.loopexit ], !dbg !6218
  %changed.5 = phi i8 [ %.1, %if.then8 ], [ %changed.1, %cleanup103 ], [ 0, %entry ], [ %changed.3, %if.else147 ], [ 1, %maybe_dump_sets.loopexit ], !dbg !6307
  call void @llvm.dbg.value(metadata i8 %changed.5, metadata !6194, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %S.0, metadata !6195, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %old.0, metadata !6196, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %ANTIC_OUT.0, metadata !6197, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.label(metadata !6217), !dbg !6353
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6351
  %tobool150 = icmp eq %struct._IO_FILE* %77, null, !dbg !6351
  br i1 %tobool150, label %if.end183, label %land.lhs.true151, !dbg !6354

land.lhs.true151:                                 ; preds = %maybe_dump_sets
  %78 = load i32, i32* @dump_flags, align 4, !dbg !6355
  %and = and i32 %78, 8, !dbg !6356
  %tobool152 = icmp eq i32 %and, 0, !dbg !6356
  br i1 %tobool152, label %if.end183, label %if.then153, !dbg !6357

if.then153:                                       ; preds = %land.lhs.true151
  %79 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6358
  %deferred155 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %79, i64 0, i32 8, !dbg !6358
  %bf.load156 = load i8, i8* %deferred155, align 8, !dbg !6358
  %bf.clear157 = and i8 %bf.load156, 2, !dbg !6358
  %tobool159 = icmp eq i8 %bf.clear157, 0, !dbg !6358
  br i1 %tobool159, label %if.then167, label %lor.lhs.false160, !dbg !6361

lor.lhs.false160:                                 ; preds = %if.then153
  %bf.clear164 = and i8 %bf.load156, 1, !dbg !6362
  %tobool166 = icmp eq i8 %bf.clear164, 0, !dbg !6362
  br i1 %tobool166, label %if.else179, label %if.then167, !dbg !6363

if.then167:                                       ; preds = %lor.lhs.false160, %if.then153
  %tobool168 = icmp eq %struct.bitmap_set* %ANTIC_OUT.0, null, !dbg !6364
  br i1 %tobool168, label %if.end171, label %if.then169, !dbg !6367

if.then169:                                       ; preds = %if.then167
  %index170 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !6368
  %80 = load i32, i32* %index170, align 8, !dbg !6368
  call fastcc void @print_bitmap_set(%struct._IO_FILE* nonnull %77, %struct.bitmap_set* nonnull %ANTIC_OUT.0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0), i32 %80) #7, !dbg !6369
  %.pre6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6370
  %.pre7 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6371
  br label %if.end171, !dbg !6369

if.end171:                                        ; preds = %if.then167, %if.then169
  %81 = phi %struct.bb_bitmap_sets* [ %79, %if.then167 ], [ %.pre7, %if.then169 ], !dbg !6371
  %82 = phi %struct._IO_FILE* [ %77, %if.then167 ], [ %.pre6, %if.then169 ], !dbg !6370
  %antic_in173 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %81, i64 0, i32 4, !dbg !6371
  %83 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in173, align 8, !dbg !6371
  %index174 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !6372
  %84 = load i32, i32* %index174, align 8, !dbg !6372
  call fastcc void @print_bitmap_set(%struct._IO_FILE* %82, %struct.bitmap_set* %83, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), i32 %84) #7, !dbg !6373
  %tobool175 = icmp eq %struct.bitmap_set* %S.0, null, !dbg !6374
  br i1 %tobool175, label %if.end183, label %if.then176, !dbg !6376

if.then176:                                       ; preds = %if.end171
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6377
  %86 = load i32, i32* %index174, align 8, !dbg !6378
  call fastcc void @print_bitmap_set(%struct._IO_FILE* %85, %struct.bitmap_set* nonnull %S.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i64 0, i64 0), i32 %86) #7, !dbg !6379
  br label %if.end183, !dbg !6379

if.else179:                                       ; preds = %lor.lhs.false160
  %index180 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !6380
  %87 = load i32, i32* %index180, align 8, !dbg !6380
  %call181 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %77, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.40, i64 0, i64 0), i32 %87) #6, !dbg !6382
  br label %if.end183

if.end183:                                        ; preds = %if.end171, %land.lhs.true151, %maybe_dump_sets, %if.else179, %if.then176
  %tobool184 = icmp eq %struct.bitmap_set* %old.0, null, !dbg !6383
  br i1 %tobool184, label %if.end186, label %if.then185, !dbg !6385

if.then185:                                       ; preds = %if.end183
  call fastcc void @bitmap_set_free(%struct.bitmap_set* nonnull %old.0) #7, !dbg !6386
  br label %if.end186, !dbg !6386

if.end186:                                        ; preds = %if.end183, %if.then185
  %tobool187 = icmp eq %struct.bitmap_set* %S.0, null, !dbg !6387
  br i1 %tobool187, label %if.end189, label %if.then188, !dbg !6389

if.then188:                                       ; preds = %if.end186
  call fastcc void @bitmap_set_free(%struct.bitmap_set* nonnull %S.0) #7, !dbg !6390
  br label %if.end189, !dbg !6390

if.end189:                                        ; preds = %if.end186, %if.then188
  %tobool190 = icmp eq %struct.bitmap_set* %ANTIC_OUT.0, null, !dbg !6391
  br i1 %tobool190, label %cleanup193, label %if.then191, !dbg !6393

if.then191:                                       ; preds = %if.end189
  call fastcc void @bitmap_set_free(%struct.bitmap_set* nonnull %ANTIC_OUT.0) #7, !dbg !6394
  br label %cleanup193, !dbg !6394

cleanup193:                                       ; preds = %if.end189, %if.then191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !6395
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6395
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6395
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6395
  ret i8 %changed.5, !dbg !6395
}

declare dso_local void @statistics_histogram_event(%struct.function*, i8*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @mark_dfs_back_edges() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @compute_partial_antic_aux(%struct.basic_block_def* %block, i8 zeroext %block_has_abnormal_pred_edge) unnamed_addr #5 !dbg !6396 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %worklist = alloca %struct.VEC_basic_block_heap*, align 8
  %bprime = alloca %struct.basic_block_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %i77 = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %tmp149 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !6398, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.value(metadata i8 %block_has_abnormal_pred_edge, metadata !6399, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.value(metadata i8 0, metadata !6400, metadata !DIExpression()), !dbg !6425
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !6426
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6426
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6427
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6427
  %2 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !6428
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %2, i64 103, i32 1, !dbg !6428
  %3 = load i32, i32* %value, align 8, !dbg !6428
  %conv = sext i32 %3 to i64, !dbg !6428
  call void @llvm.dbg.value(metadata i64 %conv, metadata !6405, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.value(metadata %struct.bitmap_set* null, metadata !6402, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.value(metadata %struct.bitmap_set* null, metadata !6401, metadata !DIExpression()), !dbg !6425
  %tobool = icmp eq i8 %block_has_abnormal_pred_edge, 0, !dbg !6429
  br i1 %tobool, label %if.end, label %maybe_dump_sets, !dbg !6431

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq i32 %3, 0, !dbg !6432
  br i1 %tobool1, label %if.end9, label %land.lhs.true, !dbg !6434

land.lhs.true:                                    ; preds = %if.end
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %block) #7, !dbg !6435
  %tobool3 = icmp eq i8 %call, 0, !dbg !6435
  br i1 %tobool3, label %if.end9, label %land.lhs.true4, !dbg !6436

land.lhs.true4:                                   ; preds = %land.lhs.true
  %call5 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %block) #7, !dbg !6437
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call5, i64 0, i32 2, !dbg !6437
  %4 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !6437
  %5 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6437
  %pa_in = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %5, i64 0, i32 5, !dbg !6437
  %6 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in, align 8, !dbg !6437
  %values = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %6, i64 0, i32 1, !dbg !6438
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !6438
  %call6 = tail call i64 @bitmap_count_bits(%struct.bitmap_head_def* %7) #6, !dbg !6439
  %cmp = icmp ugt i64 %call6, %conv, !dbg !6440
  br i1 %cmp, label %maybe_dump_sets, label %if.end9, !dbg !6441

if.end9:                                          ; preds = %land.lhs.true, %if.end, %land.lhs.true4
  %aux10 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !6442
  %8 = bitcast i8** %aux10 to %struct.bb_bitmap_sets**, !dbg !6442
  %9 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %8, align 8, !dbg !6442
  %pa_in11 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %9, i64 0, i32 5, !dbg !6442
  %10 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in11, align 8, !dbg !6442
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %10, metadata !6401, metadata !DIExpression()), !dbg !6425
  %call12 = tail call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !6443
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call12, metadata !6402, metadata !DIExpression()), !dbg !6425
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 1, !dbg !6444
  %11 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6444
  %tobool13 = icmp eq %struct.VEC_edge_gc* %11, null, !dbg !6444
  br i1 %tobool13, label %cond.end, label %cond.true, !dbg !6444

cond.true:                                        ; preds = %if.end9
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %11, i64 0, i32 0, !dbg !6444
  br label %cond.end, !dbg !6444

cond.end:                                         ; preds = %if.end9, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end9 ], !dbg !6444
  %call15 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6444
  %cmp16 = icmp eq i32 %call15, 0, !dbg !6445
  br i1 %cmp16, label %if.end118, label %if.else, !dbg !6446

if.else:                                          ; preds = %cond.end
  %call19 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %block) #7, !dbg !6447
  %tobool20 = icmp eq i8 %call19, 0, !dbg !6447
  br i1 %tobool20, label %if.else29, label %if.then21, !dbg !6448

if.then21:                                        ; preds = %if.else
  %call22 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %block) #7, !dbg !6449
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call22, metadata !6406, metadata !DIExpression()), !dbg !6450
  %call23 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %block) #7, !dbg !6451
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call23, i64 0, i32 7, !dbg !6453
  %12 = load i32, i32* %flags, align 8, !dbg !6453
  %and = and i32 %12, 32, !dbg !6454
  %tobool24 = icmp eq i32 %and, 0, !dbg !6454
  br i1 %tobool24, label %if.then25, label %if.end118, !dbg !6455

if.then25:                                        ; preds = %if.then21
  %aux26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call22, i64 0, i32 2, !dbg !6456
  %13 = bitcast i8** %aux26 to %struct.bb_bitmap_sets**, !dbg !6456
  %14 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %13, align 8, !dbg !6456
  %pa_in27 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %14, i64 0, i32 5, !dbg !6456
  %15 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in27, align 8, !dbg !6456
  tail call fastcc void @phi_translate_set(%struct.bitmap_set* %call12, %struct.bitmap_set* %15, %struct.basic_block_def* %block, %struct.basic_block_def* %call22) #7, !dbg !6457
  br label %if.end118, !dbg !6457

if.else29:                                        ; preds = %if.else
  %16 = bitcast %struct.VEC_basic_block_heap** %worklist to i8*, !dbg !6458
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8, !dbg !6458
  %17 = bitcast %struct.basic_block_def** %bprime to i8*, !dbg !6459
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8, !dbg !6459
  %18 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6460
  %tobool31 = icmp eq %struct.VEC_edge_gc* %18, null, !dbg !6460
  br i1 %tobool31, label %cond.end36, label %cond.true32, !dbg !6460

cond.true32:                                      ; preds = %if.else29
  %base34 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %18, i64 0, i32 0, !dbg !6460
  br label %cond.end36, !dbg !6460

cond.end36:                                       ; preds = %if.else29, %cond.true32
  %cond37 = phi %struct.VEC_edge_base* [ %base34, %cond.true32 ], [ null, %if.else29 ], !dbg !6460
  %call38 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond37) #7, !dbg !6460
  %call39 = tail call fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %call38) #7, !dbg !6460
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call39, metadata !6410, metadata !DIExpression()), !dbg !6461
  store %struct.VEC_basic_block_heap* %call39, %struct.VEC_basic_block_heap** %worklist, align 8, !dbg !6462
  %19 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6463
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8, !dbg !6463
  %call41 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !6463
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6463
  %21 = extractvalue { i32, %struct.VEC_edge_gc** } %call41, 0, !dbg !6463
  store i32 %21, i32* %20, align 8, !dbg !6463
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6463
  %23 = extractvalue { i32, %struct.VEC_edge_gc** } %call41, 1, !dbg !6463
  store %struct.VEC_edge_gc** %23, %struct.VEC_edge_gc*** %22, align 8, !dbg !6463
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %19, i64 16, i1 false), !dbg !6463
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8, !dbg !6463
  %24 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6465
  %25 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6465
  br label %for.cond, !dbg !6463

for.cond:                                         ; preds = %for.inc, %cond.end36
  %26 = load i32, i32* %24, align 8, !dbg !6467
  %27 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %25, align 8, !dbg !6467
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6403, metadata !DIExpression(DW_OP_deref)), !dbg !6425
  %call42 = call fastcc zeroext i8 @ei_cond(i32 %26, %struct.VEC_edge_gc** %27, %struct.edge_def** nonnull %e) #7, !dbg !6467
  %tobool43 = icmp eq i8 %call42, 0, !dbg !6463
  br i1 %tobool43, label %for.end, label %for.body, !dbg !6463

for.body:                                         ; preds = %for.cond
  %28 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6468
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !6403, metadata !DIExpression()), !dbg !6425
  %flags44 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i64 0, i32 7, !dbg !6471
  %29 = load i32, i32* %flags44, align 8, !dbg !6471
  %and45 = and i32 %29, 32, !dbg !6472
  %tobool46 = icmp eq i32 %and45, 0, !dbg !6472
  br i1 %tobool46, label %if.end48, label %for.inc, !dbg !6473

if.end48:                                         ; preds = %for.body
  %30 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %worklist, align 8, !dbg !6474
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %30, metadata !6410, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %30, metadata !6410, metadata !DIExpression()), !dbg !6461
  %base51 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %30, i64 0, i32 0, !dbg !6474
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !6403, metadata !DIExpression()), !dbg !6425
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i64 0, i32 1, !dbg !6474
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6474
  %call55 = call fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %base51, %struct.basic_block_def* %31) #7, !dbg !6474
  br label %for.inc, !dbg !6475

for.inc:                                          ; preds = %for.body, %if.end48
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6404, metadata !DIExpression(DW_OP_deref)), !dbg !6425
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6467
  br label %for.cond, !dbg !6467, !llvm.loop !6476

for.end:                                          ; preds = %for.cond
  %32 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %worklist, align 8, !dbg !6478
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %32, metadata !6410, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %32, metadata !6410, metadata !DIExpression()), !dbg !6461
  %base58 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %32, i64 0, i32 0, !dbg !6478
  %call62 = call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %base58) #7, !dbg !6478
  %cmp63 = icmp eq i32 %call62, 0, !dbg !6479
  br i1 %cmp63, label %if.end116, label %for.cond66.preheader, !dbg !6480

for.cond66.preheader:                             ; preds = %for.end
  %33 = bitcast i32* %i77 to i8*, !dbg !6481
  %34 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6481
  br label %for.cond66, !dbg !6482

for.cond66:                                       ; preds = %for.cond66.preheader, %if.end113
  %35 = phi %struct.VEC_basic_block_heap* [ %.pre, %if.end113 ], [ %32, %for.cond66.preheader ], !dbg !6483
  %i.0 = phi i64 [ %inc, %if.end113 ], [ 0, %for.cond66.preheader ], !dbg !6484
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6412, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %35, metadata !6410, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %35, metadata !6410, metadata !DIExpression()), !dbg !6461
  %base69 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %35, i64 0, i32 0, !dbg !6483
  %conv73 = trunc i64 %i.0 to i32, !dbg !6483
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bprime, metadata !6413, metadata !DIExpression(DW_OP_deref)), !dbg !6461
  %call74 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base69, i32 %conv73, %struct.basic_block_def** nonnull %bprime) #7, !dbg !6483
  %tobool75 = icmp eq i32 %call74, 0, !dbg !6482
  br i1 %tobool75, label %if.end116.loopexit, label %for.body76, !dbg !6482

for.body76:                                       ; preds = %for.cond66
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #8, !dbg !6485
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #8, !dbg !6486
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %bprime, align 8, !dbg !6487
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %36, metadata !6413, metadata !DIExpression()), !dbg !6461
  %aux78 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i64 0, i32 2, !dbg !6487
  %37 = bitcast i8** %aux78 to %struct.bb_bitmap_sets**, !dbg !6487
  %38 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %37, align 8, !dbg !6487
  %antic_in = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %38, i64 0, i32 4, !dbg !6487
  %39 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in, align 8, !dbg !6487
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %39, i64 0, i32 0, !dbg !6487
  %40 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !6487
  call void @llvm.dbg.value(metadata i32* %i77, metadata !6414, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6420, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %40, i32 0, i32* nonnull %i77) #7, !dbg !6487
  br label %for.cond79, !dbg !6487

for.cond79:                                       ; preds = %for.body82, %for.body76
  call void @llvm.dbg.value(metadata i32* %i77, metadata !6414, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6420, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  %call80 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i77) #7, !dbg !6489
  %tobool81 = icmp eq i8 %call80, 0, !dbg !6487
  br i1 %tobool81, label %for.end85, label %for.body82, !dbg !6487

for.body82:                                       ; preds = %for.cond79
  %41 = load i32, i32* %i77, align 4, !dbg !6491
  call void @llvm.dbg.value(metadata i32 %41, metadata !6414, metadata !DIExpression()), !dbg !6481
  %call83 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %41) #7, !dbg !6492
  call fastcc void @bitmap_value_insert_into_set(%struct.bitmap_set* %call12, %struct.pre_expr_d* %call83) #7, !dbg !6493
  call void @llvm.dbg.value(metadata i32* %i77, metadata !6414, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6420, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i77) #7, !dbg !6489
  br label %for.cond79, !dbg !6489, !llvm.loop !6494

for.end85:                                        ; preds = %for.cond79
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %bprime, align 8, !dbg !6496
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %42, metadata !6413, metadata !DIExpression()), !dbg !6461
  %call86 = call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %42) #7, !dbg !6497
  %call87 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %call86) #7, !dbg !6498
  %tobool88 = icmp eq i8 %call87, 0, !dbg !6498
  br i1 %tobool88, label %if.then89, label %if.else102, !dbg !6499

if.then89:                                        ; preds = %for.end85
  %call91 = call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !6500
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call91, metadata !6421, metadata !DIExpression()), !dbg !6501
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %bprime, align 8, !dbg !6502
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %43, metadata !6413, metadata !DIExpression()), !dbg !6461
  %aux92 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %43, i64 0, i32 2, !dbg !6502
  %44 = bitcast i8** %aux92 to %struct.bb_bitmap_sets**, !dbg !6502
  %45 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %44, align 8, !dbg !6502
  %pa_in93 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %45, i64 0, i32 5, !dbg !6502
  %46 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in93, align 8, !dbg !6502
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %43, metadata !6413, metadata !DIExpression()), !dbg !6461
  call fastcc void @phi_translate_set(%struct.bitmap_set* %call91, %struct.bitmap_set* %46, %struct.basic_block_def* %block, %struct.basic_block_def* %43) #7, !dbg !6503
  %expressions94 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %call91, i64 0, i32 0, !dbg !6504
  %47 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions94, align 8, !dbg !6504
  call void @llvm.dbg.value(metadata i32* %i77, metadata !6414, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6420, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %47, i32 0, i32* nonnull %i77) #7, !dbg !6504
  br label %for.cond95, !dbg !6504

for.cond95:                                       ; preds = %for.body98, %if.then89
  call void @llvm.dbg.value(metadata i32* %i77, metadata !6414, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6420, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  %call96 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i77) #7, !dbg !6506
  %tobool97 = icmp eq i8 %call96, 0, !dbg !6504
  br i1 %tobool97, label %for.end101, label %for.body98, !dbg !6504

for.body98:                                       ; preds = %for.cond95
  %48 = load i32, i32* %i77, align 4, !dbg !6508
  call void @llvm.dbg.value(metadata i32 %48, metadata !6414, metadata !DIExpression()), !dbg !6481
  %call99 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %48) #7, !dbg !6509
  call fastcc void @bitmap_value_insert_into_set(%struct.bitmap_set* %call12, %struct.pre_expr_d* %call99) #7, !dbg !6510
  call void @llvm.dbg.value(metadata i32* %i77, metadata !6414, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6420, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i77) #7, !dbg !6506
  br label %for.cond95, !dbg !6506, !llvm.loop !6511

for.end101:                                       ; preds = %for.cond95
  call fastcc void @bitmap_set_free(%struct.bitmap_set* %call91) #7, !dbg !6513
  br label %if.end113, !dbg !6514

if.else102:                                       ; preds = %for.end85
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %bprime, align 8, !dbg !6515
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %49, metadata !6413, metadata !DIExpression()), !dbg !6461
  %aux103 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %49, i64 0, i32 2, !dbg !6515
  %50 = bitcast i8** %aux103 to %struct.bb_bitmap_sets**, !dbg !6515
  %51 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %50, align 8, !dbg !6515
  %pa_in104 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %51, i64 0, i32 5, !dbg !6515
  %52 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in104, align 8, !dbg !6515
  %expressions105 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %52, i64 0, i32 0, !dbg !6515
  %53 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions105, align 8, !dbg !6515
  call void @llvm.dbg.value(metadata i32* %i77, metadata !6414, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6420, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %53, i32 0, i32* nonnull %i77) #7, !dbg !6515
  br label %for.cond106, !dbg !6515

for.cond106:                                      ; preds = %for.body109, %if.else102
  call void @llvm.dbg.value(metadata i32* %i77, metadata !6414, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6420, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  %call107 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i77) #7, !dbg !6517
  %tobool108 = icmp eq i8 %call107, 0, !dbg !6515
  br i1 %tobool108, label %if.end113.loopexit, label %for.body109, !dbg !6515

for.body109:                                      ; preds = %for.cond106
  %54 = load i32, i32* %i77, align 4, !dbg !6519
  call void @llvm.dbg.value(metadata i32 %54, metadata !6414, metadata !DIExpression()), !dbg !6481
  %call110 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %54) #7, !dbg !6520
  call fastcc void @bitmap_value_insert_into_set(%struct.bitmap_set* %call12, %struct.pre_expr_d* %call110) #7, !dbg !6521
  call void @llvm.dbg.value(metadata i32* %i77, metadata !6414, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6420, metadata !DIExpression(DW_OP_deref)), !dbg !6481
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i77) #7, !dbg !6517
  br label %for.cond106, !dbg !6517, !llvm.loop !6522

if.end113.loopexit:                               ; preds = %for.cond106
  br label %if.end113, !dbg !6524

if.end113:                                        ; preds = %if.end113.loopexit, %for.end101
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #8, !dbg !6524
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #8, !dbg !6524
  %inc = add i64 %i.0, 1, !dbg !6525
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6412, metadata !DIExpression()), !dbg !6461
  %.pre = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %worklist, align 8, !dbg !6483
  br label %for.cond66, !dbg !6526, !llvm.loop !6527

if.end116.loopexit:                               ; preds = %for.cond66
  br label %if.end116, !dbg !6529

if.end116:                                        ; preds = %if.end116.loopexit, %for.end
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %worklist, metadata !6410, metadata !DIExpression(DW_OP_deref)), !dbg !6461
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %worklist) #7, !dbg !6529
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8, !dbg !6530
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8, !dbg !6530
  br label %if.end118

if.end118:                                        ; preds = %if.then21, %if.end116, %if.then25, %cond.end
  %55 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %8, align 8, !dbg !6531
  %tmp_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %55, i64 0, i32 2, !dbg !6531
  %56 = load %struct.bitmap_set*, %struct.bitmap_set** %tmp_gen, align 8, !dbg !6531
  %call120 = call fastcc %struct.bitmap_set* @bitmap_set_subtract(%struct.bitmap_set* %call12, %struct.bitmap_set* %56) #7, !dbg !6532
  %57 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %8, align 8, !dbg !6533
  %pa_in122 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %57, i64 0, i32 5, !dbg !6533
  store %struct.bitmap_set* %call120, %struct.bitmap_set** %pa_in122, align 8, !dbg !6534
  %58 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %8, align 8, !dbg !6535
  %pa_in124 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %58, i64 0, i32 5, !dbg !6535
  %59 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in124, align 8, !dbg !6535
  %values125 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %59, i64 0, i32 1, !dbg !6536
  %60 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values125, align 8, !dbg !6536
  %phi_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %58, i64 0, i32 1, !dbg !6537
  %61 = load %struct.bitmap_set*, %struct.bitmap_set** %phi_gen, align 8, !dbg !6537
  %values127 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %61, i64 0, i32 1, !dbg !6538
  %62 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values127, align 8, !dbg !6538
  %call128 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %60, %struct.bitmap_head_def* %62) #6, !dbg !6539
  %63 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %8, align 8, !dbg !6540
  %pa_in130 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %63, i64 0, i32 5, !dbg !6540
  %64 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in130, align 8, !dbg !6540
  %expressions131 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %64, i64 0, i32 0, !dbg !6541
  %65 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions131, align 8, !dbg !6541
  %phi_gen133 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %63, i64 0, i32 1, !dbg !6542
  %66 = load %struct.bitmap_set*, %struct.bitmap_set** %phi_gen133, align 8, !dbg !6542
  %expressions134 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %66, i64 0, i32 0, !dbg !6543
  %67 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions134, align 8, !dbg !6543
  %call135 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %65, %struct.bitmap_head_def* %67) #6, !dbg !6544
  %68 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %8, align 8, !dbg !6545
  %pa_in137 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %68, i64 0, i32 5, !dbg !6545
  %69 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in137, align 8, !dbg !6545
  %antic_in139 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %68, i64 0, i32 4, !dbg !6546
  %70 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in139, align 8, !dbg !6546
  call fastcc void @bitmap_set_subtract_values(%struct.bitmap_set* %69, %struct.bitmap_set* %70) #7, !dbg !6547
  %71 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %8, align 8, !dbg !6548
  %pa_in141 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %71, i64 0, i32 5, !dbg !6548
  %72 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in141, align 8, !dbg !6548
  %antic_in143 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %71, i64 0, i32 4, !dbg !6549
  %73 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in143, align 8, !dbg !6549
  call fastcc void @dependent_clean(%struct.bitmap_set* %72, %struct.bitmap_set* %73, %struct.basic_block_def* %block) #7, !dbg !6550
  %74 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %8, align 8, !dbg !6551
  %pa_in145 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %74, i64 0, i32 5, !dbg !6551
  %75 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in145, align 8, !dbg !6551
  %call146 = call fastcc zeroext i8 @bitmap_set_equal(%struct.bitmap_set* %10, %struct.bitmap_set* %75) #7, !dbg !6553
  %tobool147 = icmp eq i8 %call146, 0, !dbg !6553
  %76 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed_blocks, align 8, !dbg !6554
  %index159 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !6554
  %77 = load i32, i32* %index159, align 8, !dbg !6554
  br i1 %tobool147, label %if.then148, label %if.else158, !dbg !6555

if.then148:                                       ; preds = %if.end118
  call void @llvm.dbg.value(metadata i8 1, metadata !6400, metadata !DIExpression()), !dbg !6425
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %76, i32 %77) #7, !dbg !6556
  %78 = bitcast %struct.edge_iterator* %tmp149 to i8*, !dbg !6558
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #8, !dbg !6558
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 0, !dbg !6558
  %call150 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !6558
  %79 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp149, i64 0, i32 0, !dbg !6558
  %80 = extractvalue { i32, %struct.VEC_edge_gc** } %call150, 0, !dbg !6558
  store i32 %80, i32* %79, align 8, !dbg !6558
  %81 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp149, i64 0, i32 1, !dbg !6558
  %82 = extractvalue { i32, %struct.VEC_edge_gc** } %call150, 1, !dbg !6558
  store %struct.VEC_edge_gc** %82, %struct.VEC_edge_gc*** %81, align 8, !dbg !6558
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %78, i64 16, i1 false), !dbg !6558
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #8, !dbg !6558
  %83 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6560
  %84 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6560
  br label %for.cond151, !dbg !6558

for.cond151:                                      ; preds = %for.body154, %if.then148
  %85 = load i32, i32* %83, align 8, !dbg !6562
  %86 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %84, align 8, !dbg !6562
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6403, metadata !DIExpression(DW_OP_deref)), !dbg !6425
  %call152 = call fastcc zeroext i8 @ei_cond(i32 %85, %struct.VEC_edge_gc** %86, %struct.edge_def** nonnull %e) #7, !dbg !6562
  %tobool153 = icmp eq i8 %call152, 0, !dbg !6558
  br i1 %tobool153, label %maybe_dump_sets.loopexit, label %for.body154, !dbg !6558

for.body154:                                      ; preds = %for.cond151
  %87 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed_blocks, align 8, !dbg !6563
  %88 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6564
  call void @llvm.dbg.value(metadata %struct.edge_def* %88, metadata !6403, metadata !DIExpression()), !dbg !6425
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %88, i64 0, i32 0, !dbg !6565
  %89 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6565
  %index155 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %89, i64 0, i32 9, !dbg !6566
  %90 = load i32, i32* %index155, align 8, !dbg !6566
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %87, i32 %90) #7, !dbg !6567
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6404, metadata !DIExpression(DW_OP_deref)), !dbg !6425
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6562
  br label %for.cond151, !dbg !6562, !llvm.loop !6568

if.else158:                                       ; preds = %if.end118
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %76, i32 %77) #7, !dbg !6570
  br label %maybe_dump_sets

maybe_dump_sets.loopexit:                         ; preds = %for.cond151
  br label %maybe_dump_sets, !dbg !6571

maybe_dump_sets:                                  ; preds = %maybe_dump_sets.loopexit, %entry, %if.else158, %land.lhs.true4
  %old_PA_IN.0 = phi %struct.bitmap_set* [ null, %entry ], [ null, %land.lhs.true4 ], [ %10, %if.else158 ], [ %10, %maybe_dump_sets.loopexit ], !dbg !6425
  %changed.1 = phi i8 [ 0, %entry ], [ 0, %land.lhs.true4 ], [ 0, %if.else158 ], [ 1, %maybe_dump_sets.loopexit ], !dbg !6573
  %PA_OUT.0 = phi %struct.bitmap_set* [ null, %entry ], [ null, %land.lhs.true4 ], [ %call12, %if.else158 ], [ %call12, %maybe_dump_sets.loopexit ], !dbg !6425
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %PA_OUT.0, metadata !6402, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !6400, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %old_PA_IN.0, metadata !6401, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.label(metadata !6424), !dbg !6574
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6571
  %tobool161 = icmp eq %struct._IO_FILE* %91, null, !dbg !6571
  br i1 %tobool161, label %if.end173, label %land.lhs.true162, !dbg !6575

land.lhs.true162:                                 ; preds = %maybe_dump_sets
  %92 = load i32, i32* @dump_flags, align 4, !dbg !6576
  %and163 = and i32 %92, 8, !dbg !6577
  %tobool164 = icmp eq i32 %and163, 0, !dbg !6577
  br i1 %tobool164, label %if.end173, label %if.then165, !dbg !6578

if.then165:                                       ; preds = %land.lhs.true162
  %tobool166 = icmp eq %struct.bitmap_set* %PA_OUT.0, null, !dbg !6579
  br i1 %tobool166, label %if.end169, label %if.then167, !dbg !6582

if.then167:                                       ; preds = %if.then165
  %index168 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !6583
  %93 = load i32, i32* %index168, align 8, !dbg !6583
  call fastcc void @print_bitmap_set(%struct._IO_FILE* nonnull %91, %struct.bitmap_set* nonnull %PA_OUT.0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i32 %93) #7, !dbg !6584
  %.pre1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6585
  br label %if.end169, !dbg !6584

if.end169:                                        ; preds = %if.then165, %if.then167
  %94 = phi %struct._IO_FILE* [ %91, %if.then165 ], [ %.pre1, %if.then167 ], !dbg !6585
  %aux170 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !6586
  %95 = bitcast i8** %aux170 to %struct.bb_bitmap_sets**, !dbg !6586
  %96 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %95, align 8, !dbg !6586
  %pa_in171 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %96, i64 0, i32 5, !dbg !6586
  %97 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in171, align 8, !dbg !6586
  %index172 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !6587
  %98 = load i32, i32* %index172, align 8, !dbg !6587
  call fastcc void @print_bitmap_set(%struct._IO_FILE* %94, %struct.bitmap_set* %97, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0), i32 %98) #7, !dbg !6588
  br label %if.end173, !dbg !6589

if.end173:                                        ; preds = %land.lhs.true162, %maybe_dump_sets, %if.end169
  %tobool174 = icmp eq %struct.bitmap_set* %old_PA_IN.0, null, !dbg !6590
  br i1 %tobool174, label %if.end176, label %if.then175, !dbg !6592

if.then175:                                       ; preds = %if.end173
  call fastcc void @bitmap_set_free(%struct.bitmap_set* nonnull %old_PA_IN.0) #7, !dbg !6593
  br label %if.end176, !dbg !6593

if.end176:                                        ; preds = %if.end173, %if.then175
  %tobool177 = icmp eq %struct.bitmap_set* %PA_OUT.0, null, !dbg !6594
  br i1 %tobool177, label %if.end179, label %if.then178, !dbg !6596

if.then178:                                       ; preds = %if.end176
  call fastcc void @bitmap_set_free(%struct.bitmap_set* nonnull %PA_OUT.0) #7, !dbg !6597
  br label %if.end179, !dbg !6597

if.end179:                                        ; preds = %if.end176, %if.then178
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6598
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6598
  ret i8 %changed.1, !dbg !6599
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6600 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6603
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6603
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6603

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6603
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6603
  br label %cond.end, !dbg !6603

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6603
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6603
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !6604
  %conv3 = zext i1 %cmp to i8, !dbg !6605
  ret i8 %conv3, !dbg !6606
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6607 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6611, metadata !DIExpression()), !dbg !6612
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6613
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6613
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6613
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6613

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6613
  br label %cond.end, !dbg !6613

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6613
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6613
  %cmp = icmp eq i32 %call, 1, !dbg !6614
  %conv2 = zext i1 %cmp to i8, !dbg !6613
  ret i8 %conv2, !dbg !6615
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6616 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6620, metadata !DIExpression()), !dbg !6621
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !6622
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !6623
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6623
  ret %struct.basic_block_def* %0, !dbg !6624
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @defer_or_phi_translate_block(%struct.bitmap_set* %dest, %struct.bitmap_set* %source, %struct.basic_block_def* %block, %struct.basic_block_def* %phiblock) unnamed_addr #5 !dbg !6625 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %dest, metadata !6629, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %source, metadata !6630, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !6631, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %phiblock, metadata !6632, metadata !DIExpression()), !dbg !6633
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %phiblock, i64 0, i32 2, !dbg !6634
  %0 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !6634
  %1 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %0, align 8, !dbg !6634
  %visited = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %1, i64 0, i32 8, !dbg !6634
  %bf.load = load i8, i8* %visited, align 8, !dbg !6634
  %bf.clear = and i8 %bf.load, 1, !dbg !6634
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !6634
  br i1 %tobool, label %if.then, label %if.else, !dbg !6636

if.then:                                          ; preds = %entry
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed_blocks, align 8, !dbg !6637
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !6639
  %3 = load i32, i32* %index, align 8, !dbg !6639
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %2, i32 %3) #7, !dbg !6640
  %aux1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !6641
  %4 = bitcast i8** %aux1 to %struct.bb_bitmap_sets**, !dbg !6641
  %5 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6641
  %visited2 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %5, i64 0, i32 8, !dbg !6641
  %bf.load3 = load i8, i8* %visited2, align 8, !dbg !6642
  %bf.clear4 = and i8 %bf.load3, -2, !dbg !6642
  store i8 %bf.clear4, i8* %visited2, align 8, !dbg !6642
  %6 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !6643
  %deferred = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %6, i64 0, i32 8, !dbg !6643
  %bf.load6 = load i8, i8* %deferred, align 8, !dbg !6644
  %bf.set = or i8 %bf.load6, 2, !dbg !6644
  store i8 %bf.set, i8* %deferred, align 8, !dbg !6644
  br label %return, !dbg !6645

if.else:                                          ; preds = %entry
  tail call fastcc void @phi_translate_set(%struct.bitmap_set* %dest, %struct.bitmap_set* %source, %struct.basic_block_def* %block, %struct.basic_block_def* %phiblock) #7, !dbg !6646
  br label %return, !dbg !6647

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i8 [ 1, %if.else ], [ 0, %if.then ], !dbg !6633
  ret i8 %retval.0, !dbg !6648
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !6649 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6653, metadata !DIExpression()), !dbg !6654
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !6655
  %0 = bitcast i8* %call to %struct.VEC_basic_block_heap*, !dbg !6655
  ret %struct.VEC_basic_block_heap* %0, !dbg !6655
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %vec_, %struct.basic_block_def* %obj_) unnamed_addr #0 !dbg !6656 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6661, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %obj_, metadata !6662, metadata !DIExpression()), !dbg !6664
  %num1 = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !6665
  %0 = load i32, i32* %num1, align 8, !dbg !6665
  %inc = add i32 %0, 1, !dbg !6665
  store i32 %inc, i32* %num1, align 8, !dbg !6665
  %idxprom = zext i32 %0 to i64, !dbg !6665
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6665
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %arrayidx, metadata !6663, metadata !DIExpression()), !dbg !6664
  store %struct.basic_block_def* %obj_, %struct.basic_block_def** %arrayidx, align 8, !dbg !6665
  ret %struct.basic_block_def** %arrayidx, !dbg !6665
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** %vec_) unnamed_addr #0 !dbg !6666 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !6671, metadata !DIExpression()), !dbg !6672
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !6673
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !6673
  br i1 %tobool, label %if.end, label %if.then, !dbg !6675

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_basic_block_heap* %0 to i8*, !dbg !6675
  tail call void @free(i8* nonnull %1) #6, !dbg !6673
  br label %if.end, !dbg !6673

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !6675
  ret void, !dbg !6675
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6676 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6680, metadata !DIExpression()), !dbg !6681
  %cmp = icmp eq %struct.gimple_seq_d* %s, null, !dbg !6682
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6683

lor.rhs:                                          ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !6684
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !6684
  %cmp1 = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !6685
  %phitmp = zext i1 %cmp1 to i8, !dbg !6683
  br label %lor.end, !dbg !6683

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %1, !dbg !6686
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6687 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6689, metadata !DIExpression()), !dbg !6690
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !6691
  %0 = load i32, i32* %flags, align 8, !dbg !6691
  %and = and i32 %0, 512, !dbg !6691
  %tobool = icmp eq i32 %and, 0, !dbg !6691
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6691

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0), i32 510, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6691
  br label %cond.end, !dbg !6691

cond.end:                                         ; preds = %entry, %cond.true
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !6692
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !6692
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !6694
  br i1 %tobool1, label %return, label %if.end, !dbg !6695

if.end:                                           ; preds = %cond.end
  %phi_nodes = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 1, !dbg !6696
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %phi_nodes, align 8, !dbg !6696
  br label %return, !dbg !6697

return:                                           ; preds = %cond.end, %if.end
  %retval.0 = phi %struct.gimple_seq_d* [ %2, %if.end ], [ null, %cond.end ], !dbg !6690
  ret %struct.gimple_seq_d* %retval.0, !dbg !6698
}

; Function Attrs: nounwind uwtable
define internal fastcc void @phi_translate_set(%struct.bitmap_set* %dest, %struct.bitmap_set* %set, %struct.basic_block_def* %pred, %struct.basic_block_def* %phiblock) unnamed_addr #5 !dbg !6699 {
entry:
  %exprs = alloca %struct.VEC_pre_expr_heap*, align 8
  %expr = alloca %struct.pre_expr_d*, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %dest, metadata !6703, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !6704, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred, metadata !6705, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %phiblock, metadata !6706, metadata !DIExpression()), !dbg !6714
  %0 = bitcast %struct.VEC_pre_expr_heap** %exprs to i8*, !dbg !6715
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6715
  %1 = bitcast %struct.pre_expr_d** %expr to i8*, !dbg !6716
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6716
  %call = tail call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %phiblock) #7, !dbg !6717
  %call1 = tail call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %call) #7, !dbg !6719
  %tobool = icmp eq i8 %call1, 0, !dbg !6719
  br i1 %tobool, label %if.end, label %if.then, !dbg !6720

if.then:                                          ; preds = %entry
  tail call fastcc void @bitmap_set_copy(%struct.bitmap_set* %dest, %struct.bitmap_set* %set) #7, !dbg !6721
  br label %cleanup12, !dbg !6723

if.end:                                           ; preds = %entry
  %call2 = tail call fastcc %struct.VEC_pre_expr_heap* @sorted_array_from_bitmap_set(%struct.bitmap_set* %set) #7, !dbg !6724
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %call2, metadata !6707, metadata !DIExpression()), !dbg !6714
  store %struct.VEC_pre_expr_heap* %call2, %struct.VEC_pre_expr_heap** %exprs, align 8, !dbg !6725
  call void @llvm.dbg.value(metadata i32 0, metadata !6709, metadata !DIExpression()), !dbg !6714
  br label %for.cond, !dbg !6726

for.cond:                                         ; preds = %cleanup, %if.end
  %2 = phi %struct.VEC_pre_expr_heap* [ %call2, %if.end ], [ %.pre, %cleanup ], !dbg !6727
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %cleanup ], !dbg !6728
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6709, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %2, metadata !6707, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %2, metadata !6707, metadata !DIExpression()), !dbg !6714
  %base = getelementptr inbounds %struct.VEC_pre_expr_heap, %struct.VEC_pre_expr_heap* %2, i64 0, i32 0, !dbg !6727
  call void @llvm.dbg.value(metadata %struct.pre_expr_d** %expr, metadata !6708, metadata !DIExpression(DW_OP_deref)), !dbg !6714
  %call4 = call fastcc i32 @VEC_pre_expr_base_iterate(%struct.VEC_pre_expr_base* %base, i32 %i.0, %struct.pre_expr_d** nonnull %expr) #7, !dbg !6727
  %tobool5 = icmp eq i32 %call4, 0, !dbg !6729
  br i1 %tobool5, label %for.end, label %for.body, !dbg !6729

for.body:                                         ; preds = %for.cond
  %3 = load %struct.pre_expr_d*, %struct.pre_expr_d** %expr, align 8, !dbg !6730
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %3, metadata !6708, metadata !DIExpression()), !dbg !6714
  %call6 = call fastcc %struct.pre_expr_d* @phi_translate(%struct.pre_expr_d* %3, %struct.bitmap_set* %set, %struct.bitmap_set* null, %struct.basic_block_def* %pred, %struct.basic_block_def* %phiblock) #7, !dbg !6731
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call6, metadata !6710, metadata !DIExpression()), !dbg !6732
  %tobool7 = icmp eq %struct.pre_expr_d* %call6, null, !dbg !6733
  br i1 %tobool7, label %cleanup, label %if.end9, !dbg !6735

if.end9:                                          ; preds = %for.body
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call6, i64 0, i32 0, !dbg !6736
  %4 = load i32, i32* %kind, align 8, !dbg !6736
  %cmp = icmp eq i32 %4, 0, !dbg !6738
  br i1 %cmp, label %if.then10, label %if.else, !dbg !6739

if.then10:                                        ; preds = %if.end9
  call fastcc void @bitmap_value_replace_in_set(%struct.bitmap_set* %dest, %struct.pre_expr_d* nonnull %call6) #7, !dbg !6740
  br label %cleanup, !dbg !6740

if.else:                                          ; preds = %if.end9
  call fastcc void @bitmap_value_insert_into_set(%struct.bitmap_set* %dest, %struct.pre_expr_d* nonnull %call6) #7, !dbg !6741
  br label %cleanup

cleanup:                                          ; preds = %for.body, %if.then10, %if.else
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6742
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6709, metadata !DIExpression()), !dbg !6714
  %.pre = load %struct.VEC_pre_expr_heap*, %struct.VEC_pre_expr_heap** %exprs, align 8, !dbg !6727
  br label %for.cond, !dbg !6743, !llvm.loop !6744

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap** %exprs, metadata !6707, metadata !DIExpression(DW_OP_deref)), !dbg !6714
  call fastcc void @VEC_pre_expr_heap_free(%struct.VEC_pre_expr_heap** nonnull %exprs) #7, !dbg !6746
  br label %cleanup12, !dbg !6747

cleanup12:                                        ; preds = %for.end, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6747
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6747
  ret void, !dbg !6747
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %vec_, i32 %ix_, %struct.basic_block_def** %ptr) unnamed_addr #0 !dbg !6748 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6752, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6753, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %ptr, metadata !6754, metadata !DIExpression()), !dbg !6755
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !6756
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6756

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !6756
  %0 = load i32, i32* %num, align 8, !dbg !6756
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6756
  br i1 %cmp, label %if.then, label %if.else, !dbg !6758

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6759
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6759
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !6759
  br label %return, !dbg !6759

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6761

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.basic_block_def* [ null, %if.else ], [ %1, %if.then ], !dbg !6763
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6763
  store %struct.basic_block_def* %storemerge, %struct.basic_block_def** %ptr, align 8, !dbg !6763
  ret i32 %retval.0, !dbg !6758
}

; Function Attrs: nounwind uwtable
define internal fastcc void @bitmap_set_and(%struct.bitmap_set* %dest, %struct.bitmap_set* %orig) unnamed_addr #5 !dbg !6764 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %dest, metadata !6766, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %orig, metadata !6767, metadata !DIExpression()), !dbg !6778
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6779
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6779
  %1 = bitcast i32* %i to i8*, !dbg !6780
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6780
  %cmp = icmp eq %struct.bitmap_set* %dest, %orig, !dbg !6781
  br i1 %cmp, label %if.end11, label %if.then, !dbg !6782

if.then:                                          ; preds = %entry
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @grand_bitmap_obstack) #6, !dbg !6783
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !6770, metadata !DIExpression()), !dbg !6784
  %values = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %dest, i64 0, i32 1, !dbg !6785
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !6785
  %values1 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %orig, i64 0, i32 1, !dbg !6786
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values1, align 8, !dbg !6786
  tail call void @bitmap_and_into(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %3) #6, !dbg !6787
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %dest, i64 0, i32 0, !dbg !6788
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !6788
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %4) #6, !dbg !6789
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6768, metadata !DIExpression(DW_OP_deref)), !dbg !6778
  call void @llvm.dbg.value(metadata i32* %i, metadata !6769, metadata !DIExpression(DW_OP_deref)), !dbg !6778
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call, i32 0, i32* nonnull %i) #7, !dbg !6790
  br label %for.cond, !dbg !6790

for.cond:                                         ; preds = %for.inc, %if.then
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6768, metadata !DIExpression(DW_OP_deref)), !dbg !6778
  call void @llvm.dbg.value(metadata i32* %i, metadata !6769, metadata !DIExpression(DW_OP_deref)), !dbg !6778
  %call2 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6791
  %tobool = icmp eq i8 %call2, 0, !dbg !6790
  br i1 %tobool, label %for.end, label %for.body, !dbg !6790

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !6792
  call void @llvm.dbg.value(metadata i32 %5, metadata !6769, metadata !DIExpression()), !dbg !6778
  %call3 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %5) #7, !dbg !6793
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call3, metadata !6773, metadata !DIExpression()), !dbg !6794
  %call4 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call3) #7, !dbg !6795
  call void @llvm.dbg.value(metadata i32 %call4, metadata !6777, metadata !DIExpression()), !dbg !6794
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !6796
  %call6 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %call4) #6, !dbg !6798
  %tobool7 = icmp eq i32 %call6, 0, !dbg !6798
  br i1 %tobool7, label %if.then8, label %for.inc, !dbg !6799

if.then8:                                         ; preds = %for.body
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !6800
  %8 = load i32, i32* %i, align 4, !dbg !6801
  call void @llvm.dbg.value(metadata i32 %8, metadata !6769, metadata !DIExpression()), !dbg !6778
  %call10 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %7, i32 %8) #6, !dbg !6802
  br label %for.inc, !dbg !6802

for.inc:                                          ; preds = %for.body, %if.then8
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6768, metadata !DIExpression(DW_OP_deref)), !dbg !6778
  call void @llvm.dbg.value(metadata i32* %i, metadata !6769, metadata !DIExpression(DW_OP_deref)), !dbg !6778
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6791
  br label %for.cond, !dbg !6791, !llvm.loop !6803

for.end:                                          ; preds = %for.cond
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !6805
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !6770, metadata !DIExpression()), !dbg !6784
  br label %if.end11, !dbg !6806

if.end11:                                         ; preds = %entry, %for.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6807
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6807
  ret void, !dbg !6807
}

; Function Attrs: nounwind uwtable
define internal fastcc void @bitmap_set_free(%struct.bitmap_set* %set) unnamed_addr #5 !dbg !6808 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !6810, metadata !DIExpression()), !dbg !6811
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 0, !dbg !6812
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !6812
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %0) #6, !dbg !6812
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %expressions, align 8, !dbg !6812
  %values = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 1, !dbg !6813
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !6813
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !6813
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %values, align 8, !dbg !6813
  ret void, !dbg !6814
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.bitmap_set* @bitmap_set_subtract(%struct.bitmap_set* %dest, %struct.bitmap_set* %orig) unnamed_addr #5 !dbg !6815 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %dest, metadata !6819, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %orig, metadata !6820, metadata !DIExpression()), !dbg !6829
  %call = tail call fastcc %struct.bitmap_set* @bitmap_set_new() #7, !dbg !6830
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call, metadata !6821, metadata !DIExpression()), !dbg !6829
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6831
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6831
  %1 = bitcast i32* %i to i8*, !dbg !6832
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6832
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %call, i64 0, i32 0, !dbg !6833
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !6833
  %expressions1 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %dest, i64 0, i32 0, !dbg !6834
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions1, align 8, !dbg !6834
  %expressions2 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %orig, i64 0, i32 0, !dbg !6835
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions2, align 8, !dbg !6835
  %call3 = tail call zeroext i8 @bitmap_and_compl(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %3, %struct.bitmap_head_def* %4) #6, !dbg !6836
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !6837
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6822, metadata !DIExpression(DW_OP_deref)), !dbg !6829
  call void @llvm.dbg.value(metadata i32* %i, metadata !6823, metadata !DIExpression(DW_OP_deref)), !dbg !6829
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %5, i32 0, i32* nonnull %i) #7, !dbg !6837
  %values = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %call, i64 0, i32 1, !dbg !6838
  br label %for.cond, !dbg !6837

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6822, metadata !DIExpression(DW_OP_deref)), !dbg !6829
  call void @llvm.dbg.value(metadata i32* %i, metadata !6823, metadata !DIExpression(DW_OP_deref)), !dbg !6829
  %call5 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6839
  %tobool = icmp eq i8 %call5, 0, !dbg !6837
  br i1 %tobool, label %for.end, label %for.body, !dbg !6837

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !6840
  call void @llvm.dbg.value(metadata i32 %6, metadata !6823, metadata !DIExpression()), !dbg !6829
  %call6 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %6) #7, !dbg !6841
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call6, metadata !6824, metadata !DIExpression()), !dbg !6838
  %call7 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call6) #7, !dbg !6842
  call void @llvm.dbg.value(metadata i32 %call7, metadata !6828, metadata !DIExpression()), !dbg !6838
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !6843
  %call8 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %7, i32 %call7) #6, !dbg !6844
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6822, metadata !DIExpression(DW_OP_deref)), !dbg !6829
  call void @llvm.dbg.value(metadata i32* %i, metadata !6823, metadata !DIExpression(DW_OP_deref)), !dbg !6829
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6839
  br label %for.cond, !dbg !6839, !llvm.loop !6845

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6847
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6847
  ret %struct.bitmap_set* %call, !dbg !6848
}

; Function Attrs: nounwind uwtable
define internal fastcc void @clean(%struct.bitmap_set* %set, %struct.basic_block_def* %block) unnamed_addr #5 !dbg !6849 {
entry:
  %exprs = alloca %struct.VEC_pre_expr_heap*, align 8
  %expr = alloca %struct.pre_expr_d*, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !6853, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !6854, metadata !DIExpression()), !dbg !6858
  %0 = bitcast %struct.VEC_pre_expr_heap** %exprs to i8*, !dbg !6859
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6859
  %call = tail call fastcc %struct.VEC_pre_expr_heap* @sorted_array_from_bitmap_set(%struct.bitmap_set* %set) #7, !dbg !6860
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %call, metadata !6855, metadata !DIExpression()), !dbg !6858
  store %struct.VEC_pre_expr_heap* %call, %struct.VEC_pre_expr_heap** %exprs, align 8, !dbg !6861
  %1 = bitcast %struct.pre_expr_d** %expr to i8*, !dbg !6862
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6862
  call void @llvm.dbg.value(metadata i32 0, metadata !6857, metadata !DIExpression()), !dbg !6858
  br label %for.cond, !dbg !6863

for.cond:                                         ; preds = %for.inc, %entry
  %2 = phi %struct.VEC_pre_expr_heap* [ %call, %entry ], [ %.pre, %for.inc ], !dbg !6865
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6867
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6857, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %2, metadata !6855, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %2, metadata !6855, metadata !DIExpression()), !dbg !6858
  %base = getelementptr inbounds %struct.VEC_pre_expr_heap, %struct.VEC_pre_expr_heap* %2, i64 0, i32 0, !dbg !6865
  call void @llvm.dbg.value(metadata %struct.pre_expr_d** %expr, metadata !6856, metadata !DIExpression(DW_OP_deref)), !dbg !6858
  %call1 = call fastcc i32 @VEC_pre_expr_base_iterate(%struct.VEC_pre_expr_base* %base, i32 %i.0, %struct.pre_expr_d** nonnull %expr) #7, !dbg !6865
  %tobool2 = icmp eq i32 %call1, 0, !dbg !6868
  br i1 %tobool2, label %for.end, label %for.body, !dbg !6868

for.body:                                         ; preds = %for.cond
  %3 = load %struct.pre_expr_d*, %struct.pre_expr_d** %expr, align 8, !dbg !6869
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %3, metadata !6856, metadata !DIExpression()), !dbg !6858
  %call3 = call fastcc zeroext i8 @valid_in_sets(%struct.bitmap_set* %set, %struct.bitmap_set* null, %struct.pre_expr_d* %3, %struct.basic_block_def* %block) #7, !dbg !6872
  %tobool4 = icmp eq i8 %call3, 0, !dbg !6872
  br i1 %tobool4, label %if.then, label %for.inc, !dbg !6873

if.then:                                          ; preds = %for.body
  %4 = load %struct.pre_expr_d*, %struct.pre_expr_d** %expr, align 8, !dbg !6874
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %4, metadata !6856, metadata !DIExpression()), !dbg !6858
  call fastcc void @bitmap_remove_from_set(%struct.bitmap_set* %set, %struct.pre_expr_d* %4) #7, !dbg !6875
  br label %for.inc, !dbg !6875

for.inc:                                          ; preds = %for.body, %if.then
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6876
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6857, metadata !DIExpression()), !dbg !6858
  %.pre = load %struct.VEC_pre_expr_heap*, %struct.VEC_pre_expr_heap** %exprs, align 8, !dbg !6865
  br label %for.cond, !dbg !6877, !llvm.loop !6878

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap** %exprs, metadata !6855, metadata !DIExpression(DW_OP_deref)), !dbg !6858
  call fastcc void @VEC_pre_expr_heap_free(%struct.VEC_pre_expr_heap** nonnull %exprs) #7, !dbg !6880
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6881
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6881
  ret void, !dbg !6881
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @bitmap_set_equal(%struct.bitmap_set* %a, %struct.bitmap_set* %b) unnamed_addr #5 !dbg !6882 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %a, metadata !6886, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %b, metadata !6887, metadata !DIExpression()), !dbg !6888
  %values = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %a, i64 0, i32 1, !dbg !6889
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !6889
  %values1 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %b, i64 0, i32 1, !dbg !6890
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values1, align 8, !dbg !6890
  %call = tail call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %0, %struct.bitmap_head_def* %1) #6, !dbg !6891
  ret i8 %call, !dbg !6892
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !6893 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !6895, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !6896, metadata !DIExpression()), !dbg !6900
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !6901
  %0 = load i8*, i8** %popcount, align 8, !dbg !6901
  %tobool = icmp eq i8* %0, null, !dbg !6902
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !6903

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !6904
  %.pre2 = zext i32 %.pre to i64, !dbg !6905
  %.pre3 = shl i64 1, %.pre2, !dbg !6905
  %.pre4 = lshr i32 %bitno, 6, !dbg !6906
  %.pre5 = zext i32 %.pre4 to i64, !dbg !6907
  br label %if.end7, !dbg !6903

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !6908
  %idxprom = zext i32 %div to i64, !dbg !6908
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !6908
  %1 = load i64, i64* %arrayidx, align 8, !dbg !6908
  %rem = and i32 %bitno, 63, !dbg !6908
  %sh_prom = zext i32 %rem to i64, !dbg !6908
  %2 = shl i64 1, %sh_prom, !dbg !6909
  %3 = and i64 %1, %2, !dbg !6909
  %tobool1 = icmp eq i64 %3, 0, !dbg !6909
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !6911

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !6912
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !6913
  %dec = add i8 %4, -1, !dbg !6913
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !6913
  br label %if.end7, !dbg !6912

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !6907
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !6905
  %neg = xor i64 %shl.pre-phi, -1, !dbg !6914
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !6907
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !6915
  %and14 = and i64 %5, %neg, !dbg !6915
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !6915
  ret void, !dbg !6916
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6917 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6921, metadata !DIExpression()), !dbg !6922
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !6923
  %tobool = icmp eq i8 %call, 0, !dbg !6923
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6923

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6923
  br label %cond.end, !dbg !6923

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6924
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6924
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6924
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6924

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6924
  br label %cond.end5, !dbg !6924

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !6924
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !6924
  ret %struct.edge_def* %call7, !dbg !6925
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_pre_expr_heap* @sorted_array_from_bitmap_set(%struct.bitmap_set* %set) unnamed_addr #5 !dbg !6926 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bj = alloca %struct.bitmap_iterator, align 8
  %result = alloca %struct.VEC_pre_expr_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !6930, metadata !DIExpression()), !dbg !6940
  %0 = bitcast i32* %i to i8*, !dbg !6941
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6941
  %1 = bitcast i32* %j to i8*, !dbg !6941
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6941
  %2 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6942
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !6942
  %3 = bitcast %struct.bitmap_iterator* %bj to i8*, !dbg !6942
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8, !dbg !6942
  %4 = bitcast %struct.VEC_pre_expr_heap** %result to i8*, !dbg !6943
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6943
  %values = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 1, !dbg !6944
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !6944
  %call = tail call i64 @bitmap_count_bits(%struct.bitmap_head_def* %5) #6, !dbg !6944
  %conv = trunc i64 %call to i32, !dbg !6944
  %call1 = tail call fastcc %struct.VEC_pre_expr_heap* @VEC_pre_expr_heap_alloc(i32 %conv) #7, !dbg !6944
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %call1, metadata !6935, metadata !DIExpression()), !dbg !6940
  store %struct.VEC_pre_expr_heap* %call1, %struct.VEC_pre_expr_heap** %result, align 8, !dbg !6945
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !6946
  call void @llvm.dbg.value(metadata i32* %i, metadata !6931, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6933, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %6, i32 0, i32* nonnull %i) #7, !dbg !6946
  %expressions10 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 0, !dbg !6947
  br label %for.cond, !dbg !6946

for.cond:                                         ; preds = %for.inc15, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !6931, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6933, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  %call3 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6952
  %tobool = icmp eq i8 %call3, 0, !dbg !6946
  br i1 %tobool, label %for.end16, label %for.body, !dbg !6946

for.body:                                         ; preds = %for.cond
  %7 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !6953
  %base = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %7, i64 0, i32 0, !dbg !6953
  %8 = load i32, i32* %i, align 4, !dbg !6953
  call void @llvm.dbg.value(metadata i32 %8, metadata !6931, metadata !DIExpression()), !dbg !6940
  %call5 = call fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_index(%struct.VEC_bitmap_set_t_base* %base, i32 %8) #7, !dbg !6953
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call5, metadata !6936, metadata !DIExpression()), !dbg !6954
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %call5, i64 0, i32 0, !dbg !6955
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !6955
  call void @llvm.dbg.value(metadata i32* %j, metadata !6932, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bj, metadata !6934, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bj, %struct.bitmap_head_def* %9, i32 0, i32* nonnull %j) #7, !dbg !6955
  br label %for.cond6, !dbg !6955

for.cond6:                                        ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata i32* %j, metadata !6932, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bj, metadata !6934, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  %call7 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bj, i32* nonnull %j) #7, !dbg !6956
  %tobool8 = icmp eq i8 %call7, 0, !dbg !6955
  br i1 %tobool8, label %for.inc15, label %for.body9, !dbg !6955

for.body9:                                        ; preds = %for.cond6
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions10, align 8, !dbg !6957
  %11 = load i32, i32* %j, align 4, !dbg !6958
  call void @llvm.dbg.value(metadata i32 %11, metadata !6932, metadata !DIExpression()), !dbg !6940
  %call11 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %10, i32 %11) #6, !dbg !6959
  %tobool12 = icmp eq i32 %call11, 0, !dbg !6959
  br i1 %tobool12, label %for.inc, label %if.then, !dbg !6960

if.then:                                          ; preds = %for.body9
  %12 = load i32, i32* %j, align 4, !dbg !6961
  call void @llvm.dbg.value(metadata i32 %12, metadata !6932, metadata !DIExpression()), !dbg !6940
  %call13 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %12) #7, !dbg !6961
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap** %result, metadata !6935, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  %call14 = call fastcc %struct.pre_expr_d** @VEC_pre_expr_heap_safe_push(%struct.VEC_pre_expr_heap** nonnull %result, %struct.pre_expr_d* %call13) #7, !dbg !6961
  br label %for.inc, !dbg !6961

for.inc:                                          ; preds = %for.body9, %if.then
  call void @llvm.dbg.value(metadata i32* %j, metadata !6932, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bj, metadata !6934, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bj, i32* nonnull %j) #7, !dbg !6956
  br label %for.cond6, !dbg !6956, !llvm.loop !6962

for.inc15:                                        ; preds = %for.cond6
  call void @llvm.dbg.value(metadata i32* %i, metadata !6931, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6933, metadata !DIExpression(DW_OP_deref)), !dbg !6940
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6952
  br label %for.cond, !dbg !6952, !llvm.loop !6964

for.end16:                                        ; preds = %for.cond
  %13 = load %struct.VEC_pre_expr_heap*, %struct.VEC_pre_expr_heap** %result, align 8, !dbg !6966
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %13, metadata !6935, metadata !DIExpression()), !dbg !6940
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6967
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8, !dbg !6967
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !6967
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6967
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6967
  ret %struct.VEC_pre_expr_heap* %13, !dbg !6968
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_pre_expr_base_iterate(%struct.VEC_pre_expr_base* %vec_, i32 %ix_, %struct.pre_expr_d** %ptr) unnamed_addr #0 !dbg !6969 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_base* %vec_, metadata !6973, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6974, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.value(metadata %struct.pre_expr_d** %ptr, metadata !6975, metadata !DIExpression()), !dbg !6976
  %tobool = icmp eq %struct.VEC_pre_expr_base* %vec_, null, !dbg !6977
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6977

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_pre_expr_base, %struct.VEC_pre_expr_base* %vec_, i64 0, i32 0, !dbg !6977
  %0 = load i32, i32* %num, align 8, !dbg !6977
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6977
  br i1 %cmp, label %if.then, label %if.else, !dbg !6979

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6980
  %arrayidx = getelementptr inbounds %struct.VEC_pre_expr_base, %struct.VEC_pre_expr_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6980
  %1 = load %struct.pre_expr_d*, %struct.pre_expr_d** %arrayidx, align 8, !dbg !6980
  br label %return, !dbg !6980

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6982

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.pre_expr_d* [ null, %if.else ], [ %1, %if.then ], !dbg !6984
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6984
  store %struct.pre_expr_d* %storemerge, %struct.pre_expr_d** %ptr, align 8, !dbg !6984
  ret i32 %retval.0, !dbg !6979
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.pre_expr_d* @phi_translate(%struct.pre_expr_d* %expr, %struct.bitmap_set* %set1, %struct.bitmap_set* %set2, %struct.basic_block_def* %pred, %struct.basic_block_def* %phiblock) unnamed_addr #5 !dbg !6985 {
entry:
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !6989, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set1, metadata !6990, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set2, metadata !6991, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred, metadata !6992, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %phiblock, metadata !6993, metadata !DIExpression()), !dbg !6995
  %tobool = icmp eq %struct.pre_expr_d* %expr, null, !dbg !6996
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6998

if.end:                                           ; preds = %entry
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 0, !dbg !6999
  %0 = load i32, i32* %kind, align 8, !dbg !6999
  %cmp = icmp eq i32 %0, 3, !dbg !7001
  br i1 %cmp, label %cleanup, label %if.end2, !dbg !7002

if.end2:                                          ; preds = %if.end
  %call = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* nonnull %expr) #7, !dbg !7003
  %call3 = tail call zeroext i8 @value_id_constant_p(i32 %call) #6, !dbg !7005
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7005
  br i1 %tobool4, label %if.end6, label %cleanup, !dbg !7006

if.end6:                                          ; preds = %if.end2
  %1 = load i32, i32* %kind, align 8, !dbg !7007
  %cmp8 = icmp eq i32 %1, 0, !dbg !7009
  br i1 %cmp8, label %if.end14, label %if.then9, !dbg !7010

if.then9:                                         ; preds = %if.end6
  %call10 = tail call fastcc %struct.pre_expr_d* @phi_trans_lookup(%struct.pre_expr_d* nonnull %expr, %struct.basic_block_def* %pred) #7, !dbg !7011
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call10, metadata !6994, metadata !DIExpression()), !dbg !6995
  %tobool11 = icmp eq %struct.pre_expr_d* %call10, null, !dbg !7013
  br i1 %tobool11, label %if.end14, label %cleanup, !dbg !7015

if.end14:                                         ; preds = %if.then9, %if.end6
  %call15 = tail call fastcc %struct.pre_expr_d* @phi_translate_1(%struct.pre_expr_d* nonnull %expr, %struct.bitmap_set* %set1, %struct.bitmap_set* %set2, %struct.basic_block_def* %pred, %struct.basic_block_def* %phiblock) #7, !dbg !7016
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call15, metadata !6994, metadata !DIExpression()), !dbg !6995
  %tobool16 = icmp eq %struct.pre_expr_d* %call15, null, !dbg !7017
  br i1 %tobool16, label %cleanup, label %land.lhs.true, !dbg !7019

land.lhs.true:                                    ; preds = %if.end14
  %2 = load i32, i32* %kind, align 8, !dbg !7020
  %cmp18 = icmp eq i32 %2, 0, !dbg !7021
  br i1 %cmp18, label %cleanup, label %if.then19, !dbg !7022

if.then19:                                        ; preds = %land.lhs.true
  tail call fastcc void @phi_trans_add(%struct.pre_expr_d* nonnull %expr, %struct.pre_expr_d* nonnull %call15, %struct.basic_block_def* %pred) #7, !dbg !7023
  br label %cleanup, !dbg !7023

cleanup:                                          ; preds = %if.then9, %land.lhs.true, %if.end14, %if.end2, %entry, %if.then19, %if.end
  %retval.0 = phi %struct.pre_expr_d* [ null, %entry ], [ %expr, %if.end ], [ %expr, %if.end2 ], [ %call10, %if.then9 ], [ %call15, %if.then19 ], [ %call15, %land.lhs.true ], [ null, %if.end14 ], !dbg !6995
  ret %struct.pre_expr_d* %retval.0, !dbg !7024
}

; Function Attrs: nounwind uwtable
define internal fastcc void @bitmap_value_replace_in_set(%struct.bitmap_set* %set, %struct.pre_expr_d* %expr) unnamed_addr #5 !dbg !7025 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !7027, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !7028, metadata !DIExpression()), !dbg !7030
  %call = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %expr) #7, !dbg !7031
  call void @llvm.dbg.value(metadata i32 %call, metadata !7029, metadata !DIExpression()), !dbg !7030
  %call1 = tail call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %set, i32 %call) #7, !dbg !7032
  %tobool = icmp eq i8 %call1, 0, !dbg !7032
  br i1 %tobool, label %if.else, label %if.then, !dbg !7034

if.then:                                          ; preds = %entry
  tail call fastcc void @bitmap_set_replace_value(%struct.bitmap_set* %set, i32 %call, %struct.pre_expr_d* %expr) #7, !dbg !7035
  br label %if.end, !dbg !7035

if.else:                                          ; preds = %entry
  tail call fastcc void @bitmap_insert_into_set(%struct.bitmap_set* %set, %struct.pre_expr_d* %expr) #7, !dbg !7036
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7037
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_pre_expr_heap_free(%struct.VEC_pre_expr_heap** %vec_) unnamed_addr #0 !dbg !7038 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap** %vec_, metadata !7042, metadata !DIExpression()), !dbg !7043
  %0 = load %struct.VEC_pre_expr_heap*, %struct.VEC_pre_expr_heap** %vec_, align 8, !dbg !7044
  %tobool = icmp eq %struct.VEC_pre_expr_heap* %0, null, !dbg !7044
  br i1 %tobool, label %if.end, label %if.then, !dbg !7046

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_pre_expr_heap* %0 to i8*, !dbg !7046
  tail call void @free(i8* nonnull %1) #6, !dbg !7044
  br label %if.end, !dbg !7044

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_pre_expr_heap* null, %struct.VEC_pre_expr_heap** %vec_, align 8, !dbg !7046
  ret void, !dbg !7046
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_pre_expr_heap* @VEC_pre_expr_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !7047 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !7051, metadata !DIExpression()), !dbg !7052
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !7053
  %0 = bitcast i8* %call to %struct.VEC_pre_expr_heap*, !dbg !7053
  ret %struct.VEC_pre_expr_heap* %0, !dbg !7053
}

declare dso_local i64 @bitmap_count_bits(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.pre_expr_d* @phi_trans_lookup(%struct.pre_expr_d* %e, %struct.basic_block_def* %pred) unnamed_addr #0 !dbg !7054 {
entry:
  %ept = alloca %struct.expr_pred_trans_d, align 8
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %e, metadata !7058, metadata !DIExpression()), !dbg !7062
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred, metadata !7059, metadata !DIExpression()), !dbg !7062
  %0 = bitcast %struct.expr_pred_trans_d* %ept to i8*, !dbg !7063
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !7063
  %e1 = getelementptr inbounds %struct.expr_pred_trans_d, %struct.expr_pred_trans_d* %ept, i64 0, i32 0, !dbg !7064
  store %struct.pre_expr_d* %e, %struct.pre_expr_d** %e1, align 8, !dbg !7065
  %pred2 = getelementptr inbounds %struct.expr_pred_trans_d, %struct.expr_pred_trans_d* %ept, i64 0, i32 1, !dbg !7066
  store %struct.basic_block_def* %pred, %struct.basic_block_def** %pred2, align 8, !dbg !7067
  %1 = bitcast %struct.pre_expr_d* %e to i8*, !dbg !7068
  %call = tail call i32 @pre_expr_hash(i8* %1) #7, !dbg !7069
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %pred, i64 0, i32 9, !dbg !7070
  %2 = load i32, i32* %index, align 8, !dbg !7070
  %call3 = tail call i32 @iterative_hash_hashval_t(i32 %call, i32 %2) #6, !dbg !7071
  %hashcode = getelementptr inbounds %struct.expr_pred_trans_d, %struct.expr_pred_trans_d* %ept, i64 0, i32 3, !dbg !7072
  store i32 %call3, i32* %hashcode, align 8, !dbg !7073
  %3 = load %struct.htab*, %struct.htab** @phi_translate_table, align 8, !dbg !7074
  %call5 = call i8** @htab_find_slot_with_hash(%struct.htab* %3, i8* nonnull %0, i32 %call3, i32 0) #6, !dbg !7075
  call void @llvm.dbg.value(metadata i8** %call5, metadata !7060, metadata !DIExpression()), !dbg !7062
  %tobool = icmp eq i8** %call5, null, !dbg !7076
  br i1 %tobool, label %cleanup, label %if.else, !dbg !7078

if.else:                                          ; preds = %entry
  %4 = bitcast i8** %call5 to %struct.expr_pred_trans_d**, !dbg !7079
  %5 = load %struct.expr_pred_trans_d*, %struct.expr_pred_trans_d** %4, align 8, !dbg !7079
  %v = getelementptr inbounds %struct.expr_pred_trans_d, %struct.expr_pred_trans_d* %5, i64 0, i32 2, !dbg !7080
  %6 = load %struct.pre_expr_d*, %struct.pre_expr_d** %v, align 8, !dbg !7080
  br label %cleanup, !dbg !7081

cleanup:                                          ; preds = %entry, %if.else
  %retval.0 = phi %struct.pre_expr_d* [ %6, %if.else ], [ null, %entry ], !dbg !7082
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !7083
  ret %struct.pre_expr_d* %retval.0, !dbg !7083
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.pre_expr_d* @phi_translate_1(%struct.pre_expr_d* %expr, %struct.bitmap_set* %set1, %struct.bitmap_set* %set2, %struct.basic_block_def* %pred, %struct.basic_block_def* %phiblock) unnamed_addr #5 !dbg !7084 {
entry:
  %nary = alloca %struct.vn_nary_op_s*, align 8
  %newnary = alloca %struct.vn_nary_op_s, align 8
  %newoperands = alloca %struct.VEC_vn_reference_op_s_heap*, align 8
  %same_valid = alloca i8, align 1
  %j = alloca i32, align 4
  %operand = alloca %struct.vn_reference_op_struct*, align 8
  %newref = alloca %struct.vn_reference_s*, align 8
  %newop = alloca %struct.vn_reference_op_struct, align 8
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !7086, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set1, metadata !7087, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set2, metadata !7088, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred, metadata !7089, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %phiblock, metadata !7090, metadata !DIExpression()), !dbg !7170
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 0, !dbg !7171
  %0 = load i32, i32* %kind, align 8, !dbg !7171
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb122
    i32 0, label %sw.bb461
  ], !dbg !7172

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.value(metadata i8 0, metadata !7094, metadata !DIExpression()), !dbg !7173
  %1 = bitcast %struct.vn_nary_op_s** %nary to i8*, !dbg !7174
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7174
  %u = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, !dbg !7175
  %2 = bitcast %union.pre_expr_union_d* %u to i64*, !dbg !7175
  %3 = load i64, i64* %2, align 8, !dbg !7175
  %4 = bitcast %struct.vn_nary_op_s** %nary to i64*, !dbg !7176
  store i64 %3, i64* %4, align 8, !dbg !7176
  %5 = bitcast %struct.vn_nary_op_s* %newnary to i8*, !dbg !7177
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #8, !dbg !7177
  %.cast30 = inttoptr i64 %3 to i8*, !dbg !7178
  %.cast31 = inttoptr i64 %3 to %struct.vn_nary_op_s*, !dbg !7179
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %.cast31, metadata !7095, metadata !DIExpression()), !dbg !7173
  %length = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %.cast31, i64 0, i32 1, !dbg !7180
  %bf.load = load i32, i32* %length, align 4, !dbg !7180
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7180
  %sub = sub nsw i32 4, %bf.lshr, !dbg !7181
  %conv = sext i32 %sub to i64, !dbg !7182
  %mul = shl nsw i64 %conv, 3, !dbg !7183
  %sub2 = sub nsw i64 64, %mul, !dbg !7184
  %call = call i8* @memcpy(i8* nonnull %5, i8* %.cast30, i64 %sub2) #6, !dbg !7185
  call void @llvm.dbg.value(metadata i32 0, metadata !7091, metadata !DIExpression()), !dbg !7173
  %length3 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %newnary, i64 0, i32 1, !dbg !7186
  br label %for.cond, !dbg !7187

for.cond:                                         ; preds = %for.inc, %sw.bb
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %sw.bb ], !dbg !7188
  %changed.0 = phi i8 [ %changed.2, %for.inc ], [ 0, %sw.bb ], !dbg !7188
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7091, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !7094, metadata !DIExpression()), !dbg !7173
  %bf.load4 = load i32, i32* %length3, align 4, !dbg !7189
  %bf.lshr5 = lshr i32 %bf.load4, 16, !dbg !7189
  %6 = zext i32 %bf.lshr5 to i64, !dbg !7190
  %cmp = icmp ult i64 %indvars.iv, %6, !dbg !7190
  br i1 %cmp, label %for.body, label %for.end, !dbg !7191

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %newnary, i64 0, i32 5, i64 %indvars.iv, !dbg !7192
  %7 = bitcast %union.tree_node** %arrayidx to i64**, !dbg !7192
  %8 = load i64*, i64** %7, align 8, !dbg !7192
  %bf.load7 = load i64, i64* %8, align 8, !dbg !7192
  %bf.cast33 = and i64 %bf.load7, 65535, !dbg !7193
  %cmp8 = icmp eq i64 %bf.cast33, 141, !dbg !7193
  br i1 %cmp8, label %if.else, label %for.inc, !dbg !7194

if.else:                                          ; preds = %for.body
  %9 = bitcast i64* %8 to %union.tree_node*, !dbg !7194
  %call13 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %9) #6, !dbg !7195
  %value_id = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call13, i64 0, i32 2, !dbg !7196
  %10 = load i32, i32* %value_id, align 8, !dbg !7196
  call void @llvm.dbg.value(metadata i32 %10, metadata !7104, metadata !DIExpression()), !dbg !7197
  %call14 = call fastcc %struct.pre_expr_d* @find_leader_in_sets(i32 %10, %struct.bitmap_set* %set1, %struct.bitmap_set* %set2) #7, !dbg !7198
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call14, metadata !7097, metadata !DIExpression()), !dbg !7197
  %call15 = call fastcc %struct.pre_expr_d* @phi_translate(%struct.pre_expr_d* %call14, %struct.bitmap_set* %set1, %struct.bitmap_set* %set2, %struct.basic_block_def* %pred, %struct.basic_block_def* %phiblock) #7, !dbg !7199
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call15, metadata !7103, metadata !DIExpression()), !dbg !7197
  %tobool = icmp ne %struct.pre_expr_d* %call15, null, !dbg !7200
  %cmp16 = icmp ne %struct.pre_expr_d* %call15, %call14, !dbg !7201
  %or.cond = and i1 %tobool, %cmp16, !dbg !7202
  br i1 %or.cond, label %if.then18, label %if.else25, !dbg !7202

if.then18:                                        ; preds = %if.else
  %call19 = call fastcc %union.tree_node* @get_representative_for(%struct.pre_expr_d* nonnull %call15) #7, !dbg !7203
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !7105, metadata !DIExpression()), !dbg !7204
  %tobool20 = icmp eq %union.tree_node* %call19, null, !dbg !7205
  br i1 %tobool20, label %cleanup, label %if.end, !dbg !7207

if.end:                                           ; preds = %if.then18
  store %union.tree_node* %call19, %union.tree_node** %arrayidx, align 8, !dbg !7208
  br label %cleanup, !dbg !7209

cleanup:                                          ; preds = %if.then18, %if.end
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end ], [ 1, %if.then18 ]
  %cond10 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond10, label %if.end29, label %cleanup40

if.else25:                                        ; preds = %if.else
  %tobool26 = icmp eq %struct.pre_expr_d* %call15, null, !dbg !7210
  br i1 %tobool26, label %cleanup40, label %if.end29, !dbg !7212

if.end29:                                         ; preds = %if.else25, %cleanup
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7213
  %12 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %nary, align 8, !dbg !7214
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %12, metadata !7095, metadata !DIExpression()), !dbg !7173
  %arrayidx35 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %12, i64 0, i32 5, i64 %indvars.iv, !dbg !7214
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx35, align 8, !dbg !7214
  %cmp36 = icmp ne %union.tree_node* %11, %13, !dbg !7215
  %conv37 = zext i1 %cmp36 to i8, !dbg !7215
  %or = or i8 %changed.0, %conv37, !dbg !7216
  call void @llvm.dbg.value(metadata i8 %or, metadata !7094, metadata !DIExpression()), !dbg !7173
  br label %cleanup40, !dbg !7217

cleanup40:                                        ; preds = %if.else25, %cleanup, %if.end29
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end29 ], [ 1, %if.else25 ]
  %changed.1 = phi i8 [ %changed.0, %cleanup ], [ %or, %if.end29 ], [ %changed.0, %if.else25 ], !dbg !7173
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !7094, metadata !DIExpression()), !dbg !7173
  %cond9 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond9, label %for.inc, label %cleanup118.loopexit

for.inc:                                          ; preds = %for.body, %cleanup40
  %changed.2 = phi i8 [ %changed.0, %for.body ], [ %changed.1, %cleanup40 ], !dbg !7188
  call void @llvm.dbg.value(metadata i8 %changed.2, metadata !7094, metadata !DIExpression()), !dbg !7173
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7218
  call void @llvm.dbg.value(metadata i32 undef, metadata !7091, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7173
  br label %for.cond, !dbg !7219, !llvm.loop !7220

for.end:                                          ; preds = %for.cond
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !7188
  %bf.load4.lcssa = phi i32 [ %bf.load4, %for.cond ], !dbg !7189
  %bf.lshr5.lcssa = phi i32 [ %bf.lshr5, %for.cond ], !dbg !7189
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7094, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7094, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7094, metadata !DIExpression()), !dbg !7173
  %tobool46 = icmp eq i8 %changed.0.lcssa, 0, !dbg !7222
  br i1 %tobool46, label %if.end117, label %if.then47, !dbg !7223

if.then47:                                        ; preds = %for.end
  %bf.clear53 = and i32 %bf.load4.lcssa, 65535, !dbg !7224
  %type = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %newnary, i64 0, i32 4, !dbg !7225
  %14 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7225
  %arrayidx55 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %newnary, i64 0, i32 5, i64 0, !dbg !7226
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx55, align 8, !dbg !7226
  %arrayidx57 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %newnary, i64 0, i32 5, i64 1, !dbg !7227
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx57, align 8, !dbg !7227
  %arrayidx59 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %newnary, i64 0, i32 5, i64 2, !dbg !7228
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx59, align 8, !dbg !7228
  %arrayidx61 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %newnary, i64 0, i32 5, i64 3, !dbg !7229
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx61, align 8, !dbg !7229
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s** %nary, metadata !7095, metadata !DIExpression(DW_OP_deref)), !dbg !7173
  %call62 = call %union.tree_node* @vn_nary_op_lookup_pieces(i32 %bf.lshr5.lcssa, i32 %bf.clear53, %union.tree_node* %14, %union.tree_node* %15, %union.tree_node* %16, %union.tree_node* %17, %union.tree_node* %18, %struct.vn_nary_op_s** nonnull %nary) #6, !dbg !7230
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !7112, metadata !DIExpression()), !dbg !7231
  %tobool63 = icmp eq %union.tree_node* %call62, null, !dbg !7232
  br i1 %tobool63, label %if.end70, label %land.lhs.true64, !dbg !7234

land.lhs.true64:                                  ; preds = %if.then47
  %call65 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %call62) #6, !dbg !7235
  %tobool67 = icmp eq i8 %call65, 0, !dbg !7235
  br i1 %tobool67, label %if.end70, label %if.then68, !dbg !7236

if.then68:                                        ; preds = %land.lhs.true64
  %call69 = call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_constant(%union.tree_node* nonnull %call62) #7, !dbg !7237
  br label %cleanup112, !dbg !7238

if.end70:                                         ; preds = %land.lhs.true64, %if.then47
  %19 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @pre_expr_pool, align 8, !dbg !7239
  %call71 = call i8* @pool_alloc(%struct.alloc_pool_def* %19) #6, !dbg !7240
  %20 = bitcast i8* %call71 to %struct.pre_expr_d*, !dbg !7241
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %20, metadata !7086, metadata !DIExpression()), !dbg !7170
  %kind72 = bitcast i8* %call71 to i32*, !dbg !7242
  store i32 1, i32* %kind72, align 8, !dbg !7243
  %id = getelementptr inbounds i8, i8* %call71, i64 4, !dbg !7244
  %21 = bitcast i8* %id to i32*, !dbg !7244
  store i32 0, i32* %21, align 4, !dbg !7245
  %22 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %nary, align 8, !dbg !7246
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %22, metadata !7095, metadata !DIExpression()), !dbg !7173
  %tobool73 = icmp eq %struct.vn_nary_op_s* %22, null, !dbg !7246
  br i1 %tobool73, label %if.else84, label %if.then74, !dbg !7248

if.then74:                                        ; preds = %if.end70
  %23 = ptrtoint %struct.vn_nary_op_s* %22 to i64, !dbg !7248
  %u75 = getelementptr inbounds i8, i8* %call71, i64 8, !dbg !7249
  %24 = bitcast i8* %u75 to i64*, !dbg !7251
  store i64 %23, i64* %24, align 8, !dbg !7251
  %call77 = call fastcc %struct.pre_expr_d* @fully_constant_expression(%struct.pre_expr_d* %20) #7, !dbg !7252
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call77, metadata !7108, metadata !DIExpression()), !dbg !7231
  %cmp78 = icmp eq %struct.pre_expr_d* %call77, %20, !dbg !7253
  br i1 %cmp78, label %if.end81, label %cleanup112, !dbg !7255

if.end81:                                         ; preds = %if.then74
  %25 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %nary, align 8, !dbg !7256
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %25, metadata !7095, metadata !DIExpression()), !dbg !7173
  %value_id82 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %25, i64 0, i32 0, !dbg !7257
  %26 = load i32, i32* %value_id82, align 8, !dbg !7257
  call void @llvm.dbg.value(metadata i32 %26, metadata !7111, metadata !DIExpression()), !dbg !7231
  %call83 = call fastcc i32 @get_or_alloc_expression_id(%struct.pre_expr_d* %20) #7, !dbg !7258
  br label %if.end111, !dbg !7259

if.else84:                                        ; preds = %if.end70
  %call85 = call i32 @get_next_value_id() #6, !dbg !7260
  call void @llvm.dbg.value(metadata i32 %call85, metadata !7111, metadata !DIExpression()), !dbg !7231
  %call86 = call i32 @get_max_value_id() #6, !dbg !7262
  %add = add i32 %call86, 1, !dbg !7262
  call fastcc void @VEC_bitmap_set_t_heap_safe_grow_cleared(%struct.VEC_bitmap_set_t_heap** nonnull @value_expressions, i32 %add) #7, !dbg !7262
  %bf.load88 = load i32, i32* %length3, align 4, !dbg !7263
  %bf.lshr89 = lshr i32 %bf.load88, 16, !dbg !7263
  %bf.clear92 = and i32 %bf.load88, 65535, !dbg !7264
  %27 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7265
  %28 = load %union.tree_node*, %union.tree_node** %arrayidx55, align 8, !dbg !7266
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx57, align 8, !dbg !7267
  %30 = load %union.tree_node*, %union.tree_node** %arrayidx59, align 8, !dbg !7268
  %31 = load %union.tree_node*, %union.tree_node** %arrayidx61, align 8, !dbg !7269
  %call102 = call %struct.vn_nary_op_s* @vn_nary_op_insert_pieces(i32 %bf.lshr89, i32 %bf.clear92, %union.tree_node* %27, %union.tree_node* %28, %union.tree_node* %29, %union.tree_node* %30, %union.tree_node* %31, %union.tree_node* %call62, i32 %call85) #6, !dbg !7270
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %call102, metadata !7095, metadata !DIExpression()), !dbg !7173
  store %struct.vn_nary_op_s* %call102, %struct.vn_nary_op_s** %nary, align 8, !dbg !7271
  %.cast32 = ptrtoint %struct.vn_nary_op_s* %call102 to i64, !dbg !7272
  %u103 = getelementptr inbounds i8, i8* %call71, i64 8, !dbg !7273
  %32 = bitcast i8* %u103 to i64*, !dbg !7274
  store i64 %.cast32, i64* %32, align 8, !dbg !7274
  %call105 = call fastcc %struct.pre_expr_d* @fully_constant_expression(%struct.pre_expr_d* %20) #7, !dbg !7275
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call105, metadata !7108, metadata !DIExpression()), !dbg !7231
  %cmp106 = icmp eq %struct.pre_expr_d* %call105, %20, !dbg !7276
  br i1 %cmp106, label %if.end109, label %cleanup112, !dbg !7278

if.end109:                                        ; preds = %if.else84
  %call110 = call fastcc i32 @get_or_alloc_expression_id(%struct.pre_expr_d* %20) #7, !dbg !7279
  br label %if.end111

if.end111:                                        ; preds = %if.end109, %if.end81
  %new_val_id.0 = phi i32 [ %26, %if.end81 ], [ %call85, %if.end109 ], !dbg !7280
  call void @llvm.dbg.value(metadata i32 %new_val_id.0, metadata !7111, metadata !DIExpression()), !dbg !7231
  call void @add_to_value(i32 %new_val_id.0, %struct.pre_expr_d* %20) #7, !dbg !7281
  br label %cleanup112, !dbg !7282

cleanup112:                                       ; preds = %if.then74, %if.else84, %if.end111, %if.then68
  %cleanup.dest.slot.2 = phi i1 [ false, %if.then68 ], [ true, %if.end111 ], [ false, %if.then74 ], [ false, %if.else84 ]
  %expr.addr.0 = phi %struct.pre_expr_d* [ %expr, %if.then68 ], [ %20, %if.end111 ], [ %20, %if.then74 ], [ %20, %if.else84 ]
  %retval.5 = phi %struct.pre_expr_d* [ %call69, %if.then68 ], [ null, %if.end111 ], [ %call77, %if.then74 ], [ %call105, %if.else84 ]
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr.addr.0, metadata !7086, metadata !DIExpression()), !dbg !7170
  br i1 %cleanup.dest.slot.2, label %if.end117, label %cleanup118

if.end117:                                        ; preds = %for.end, %cleanup112
  %expr.addr.1 = phi %struct.pre_expr_d* [ %expr, %for.end ], [ %expr.addr.0, %cleanup112 ]
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr.addr.1, metadata !7086, metadata !DIExpression()), !dbg !7170
  br label %cleanup118, !dbg !7283

cleanup118.loopexit:                              ; preds = %cleanup40
  br label %cleanup118, !dbg !7284

cleanup118:                                       ; preds = %cleanup118.loopexit, %cleanup112, %if.end117
  %retval.6 = phi %struct.pre_expr_d* [ %retval.5, %cleanup112 ], [ %expr.addr.1, %if.end117 ], [ null, %cleanup118.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #8, !dbg !7284
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7284
  br label %return

sw.bb122:                                         ; preds = %entry
  %u123 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, !dbg !7285
  %reference = bitcast %union.pre_expr_union_d* %u123 to %struct.vn_reference_s**, !dbg !7285
  %33 = load %struct.vn_reference_s*, %struct.vn_reference_s** %reference, align 8, !dbg !7285
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %33, metadata !7113, metadata !DIExpression()), !dbg !7286
  %operands124 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %33, i64 0, i32 5, !dbg !7287
  %34 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands124, align 8, !dbg !7287
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %34, metadata !7115, metadata !DIExpression()), !dbg !7286
  %vuse125 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %33, i64 0, i32 2, !dbg !7288
  %35 = load %union.tree_node*, %union.tree_node** %vuse125, align 8, !dbg !7288
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !7116, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !7117, metadata !DIExpression()), !dbg !7286
  %36 = bitcast %struct.VEC_vn_reference_op_s_heap** %newoperands to i8*, !dbg !7289
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8, !dbg !7289
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* null, metadata !7118, metadata !DIExpression()), !dbg !7286
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** %newoperands, align 8, !dbg !7290
  call void @llvm.dbg.value(metadata i8 0, metadata !7119, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8* %same_valid, metadata !7120, metadata !DIExpression(DW_OP_deref)), !dbg !7286
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %same_valid) #8, !dbg !7291
  call void @llvm.dbg.value(metadata i8 1, metadata !7120, metadata !DIExpression()), !dbg !7286
  store i8 1, i8* %same_valid, align 1, !dbg !7292
  %37 = bitcast i32* %j to i8*, !dbg !7293
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #8, !dbg !7293
  %38 = bitcast %struct.vn_reference_op_struct** %operand to i8*, !dbg !7294
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #8, !dbg !7294
  %39 = bitcast %struct.vn_reference_s** %newref to i8*, !dbg !7295
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8, !dbg !7295
  call void @llvm.dbg.value(metadata i32 0, metadata !7121, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 0, metadata !7122, metadata !DIExpression()), !dbg !7286
  %base130 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %34, i64 0, i32 0, !dbg !7296
  %40 = bitcast %struct.vn_reference_op_struct* %newop to i8*, !dbg !7297
  %opcode287 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %newop, i64 0, i32 0, !dbg !7298
  %type304 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %newop, i64 0, i32 1, !dbg !7297
  %41 = bitcast %union.tree_node** %type304 to i64*, !dbg !7297
  %op0305 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %newop, i64 0, i32 2, !dbg !7297
  %op1306 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %newop, i64 0, i32 3, !dbg !7297
  %op2307 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %newop, i64 0, i32 4, !dbg !7297
  br label %for.cond128, !dbg !7300

for.cond128:                                      ; preds = %for.inc352, %sw.bb122
  %storemerge = phi i32 [ 0, %sw.bb122 ], [ %inc354, %for.inc352 ], !dbg !7301
  %changed126.0 = phi i8 [ 0, %sw.bb122 ], [ %changed126.1, %for.inc352 ], !dbg !7302
  %i127.0 = phi i32 [ 0, %sw.bb122 ], [ %inc353, %for.inc352 ], !dbg !7301
  store i32 %storemerge, i32* %j, align 4, !dbg !7301
  call void @llvm.dbg.value(metadata i32 %i127.0, metadata !7121, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8 %changed126.0, metadata !7119, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %operand, metadata !7123, metadata !DIExpression(DW_OP_deref)), !dbg !7286
  %call131 = call fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %base130, i32 %i127.0, %struct.vn_reference_op_struct** nonnull %operand) #7, !dbg !7303
  %tobool132 = icmp eq i32 %call131, 0, !dbg !7304
  br i1 %tobool132, label %for.end355, label %for.body133, !dbg !7304

for.body133:                                      ; preds = %for.cond128
  %42 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %operand, align 8, !dbg !7305
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %42, metadata !7123, metadata !DIExpression()), !dbg !7286
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %42, i64 0, i32 2, !dbg !7306
  %43 = load %union.tree_node*, %union.tree_node** %op0, align 8, !dbg !7306
  call void @llvm.dbg.value(metadata %union.tree_node* %43, metadata !7130, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %42, metadata !7123, metadata !DIExpression()), !dbg !7286
  %op1 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %42, i64 0, i32 3, !dbg !7307
  %44 = load %union.tree_node*, %union.tree_node** %op1, align 8, !dbg !7307
  call void @llvm.dbg.value(metadata %union.tree_node* %44, metadata !7131, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %42, metadata !7123, metadata !DIExpression()), !dbg !7286
  %op2 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %42, i64 0, i32 4, !dbg !7308
  %45 = load %union.tree_node*, %union.tree_node** %op2, align 8, !dbg !7308
  call void @llvm.dbg.value(metadata %union.tree_node* %45, metadata !7132, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %43, metadata !7133, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %44, metadata !7134, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %45, metadata !7135, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %42, metadata !7123, metadata !DIExpression()), !dbg !7286
  %type139 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %42, i64 0, i32 1, !dbg !7309
  %46 = bitcast %union.tree_node** %type139 to i64*, !dbg !7309
  %47 = load i64, i64* %46, align 8, !dbg !7309
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #8, !dbg !7310
  %.cast36 = bitcast %struct.vn_reference_op_struct* %42 to i8*, !dbg !7311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 %.cast36, i64 40, i1 false), !dbg !7312
  %tobool140 = icmp eq %union.tree_node* %43, null, !dbg !7313
  br i1 %tobool140, label %if.end175, label %land.lhs.true141, !dbg !7314

land.lhs.true141:                                 ; preds = %for.body133
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7315
  %bf.load143 = load i64, i64* %48, align 8, !dbg !7315
  %bf.cast14529 = and i64 %bf.load143, 65535, !dbg !7316
  %cmp146 = icmp eq i64 %bf.cast14529, 141, !dbg !7316
  br i1 %cmp146, label %if.then148, label %if.end175, !dbg !7317

if.then148:                                       ; preds = %land.lhs.true141
  %call150 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %43) #6, !dbg !7318
  %value_id151 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call150, i64 0, i32 2, !dbg !7319
  %49 = load i32, i32* %value_id151, align 8, !dbg !7319
  call void @llvm.dbg.value(metadata i32 %49, metadata !7138, metadata !DIExpression()), !dbg !7320
  %call152 = call fastcc %struct.pre_expr_d* @find_leader_in_sets(i32 %49, %struct.bitmap_set* %set1, %struct.bitmap_set* %set2) #7, !dbg !7321
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call152, metadata !7129, metadata !DIExpression()), !dbg !7297
  %call153 = call fastcc %struct.pre_expr_d* @phi_translate(%struct.pre_expr_d* %call152, %struct.bitmap_set* %set1, %struct.bitmap_set* %set2, %struct.basic_block_def* %pred, %struct.basic_block_def* %phiblock) #7, !dbg !7322
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call153, metadata !7125, metadata !DIExpression()), !dbg !7297
  %tobool154 = icmp ne %struct.pre_expr_d* %call153, null, !dbg !7323
  %cmp156 = icmp ne %struct.pre_expr_d* %call153, %call152, !dbg !7324
  %or.cond11 = and i1 %tobool154, %cmp156, !dbg !7325
  br i1 %or.cond11, label %if.then158, label %if.else167, !dbg !7325

if.then158:                                       ; preds = %if.then148
  %call160 = call fastcc %union.tree_node* @get_representative_for(%struct.pre_expr_d* nonnull %call153) #7, !dbg !7326
  call void @llvm.dbg.value(metadata %union.tree_node* %call160, metadata !7141, metadata !DIExpression()), !dbg !7327
  %tobool161 = icmp ne %union.tree_node* %call160, null, !dbg !7328
  %. = select i1 %tobool161, i32 0, i32 6, !dbg !7330
  %call160. = select i1 %tobool161, %union.tree_node* %call160, %union.tree_node* %43, !dbg !7330
  call void @llvm.dbg.value(metadata %union.tree_node* %call160., metadata !7133, metadata !DIExpression()), !dbg !7297
  br i1 %tobool161, label %if.end171, label %cleanup172

if.else167:                                       ; preds = %if.then148
  %tobool168 = icmp eq %struct.pre_expr_d* %call153, null, !dbg !7331
  br i1 %tobool168, label %cleanup172, label %if.end171, !dbg !7333

if.end171:                                        ; preds = %if.else167, %if.then158
  %op0135.1 = phi %union.tree_node* [ %call160., %if.then158 ], [ %43, %if.else167 ], !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %op0135.1, metadata !7133, metadata !DIExpression()), !dbg !7297
  br label %cleanup172, !dbg !7334

cleanup172:                                       ; preds = %if.else167, %if.then158, %if.end171
  %cleanup.dest.slot.4 = phi i32 [ %., %if.then158 ], [ 0, %if.end171 ], [ 6, %if.else167 ]
  %op0135.2 = phi %union.tree_node* [ %call160., %if.then158 ], [ %op0135.1, %if.end171 ], [ %43, %if.else167 ], !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %op0135.2, metadata !7133, metadata !DIExpression()), !dbg !7297
  %cond6 = icmp eq i32 %cleanup.dest.slot.4, 0
  br i1 %cond6, label %if.end175, label %cleanup340

if.end175:                                        ; preds = %for.body133, %cleanup172, %land.lhs.true141
  %op0135.3 = phi %union.tree_node* [ %43, %land.lhs.true141 ], [ null, %for.body133 ], [ %op0135.2, %cleanup172 ], !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %op0135.3, metadata !7133, metadata !DIExpression()), !dbg !7297
  %cmp176 = icmp ne %union.tree_node* %op0135.3, %43, !dbg !7335
  %conv177 = zext i1 %cmp176 to i8, !dbg !7335
  %or179 = or i8 %changed126.0, %conv177, !dbg !7336
  call void @llvm.dbg.value(metadata i8 %or179, metadata !7119, metadata !DIExpression()), !dbg !7286
  %cond21 = icmp eq %union.tree_node* %44, null, !dbg !7337
  br i1 %cond21, label %if.end223, label %land.lhs.true182, !dbg !7337

land.lhs.true182:                                 ; preds = %if.end175
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7338
  %bf.load184 = load i64, i64* %50, align 8, !dbg !7338
  %bf.cast18625 = and i64 %bf.load184, 65535, !dbg !7339
  %cmp187 = icmp eq i64 %bf.cast18625, 141, !dbg !7339
  br i1 %cmp187, label %if.then189, label %if.else216, !dbg !7340

if.then189:                                       ; preds = %land.lhs.true182
  %call191 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %44) #6, !dbg !7341
  %value_id192 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call191, i64 0, i32 2, !dbg !7342
  %51 = load i32, i32* %value_id192, align 8, !dbg !7342
  call void @llvm.dbg.value(metadata i32 %51, metadata !7144, metadata !DIExpression()), !dbg !7343
  %call193 = call fastcc %struct.pre_expr_d* @find_leader_in_sets(i32 %51, %struct.bitmap_set* %set1, %struct.bitmap_set* %set2) #7, !dbg !7344
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call193, metadata !7129, metadata !DIExpression()), !dbg !7297
  %call194 = call fastcc %struct.pre_expr_d* @phi_translate(%struct.pre_expr_d* %call193, %struct.bitmap_set* %set1, %struct.bitmap_set* %set2, %struct.basic_block_def* %pred, %struct.basic_block_def* %phiblock) #7, !dbg !7345
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call194, metadata !7125, metadata !DIExpression()), !dbg !7297
  %tobool195 = icmp ne %struct.pre_expr_d* %call194, null, !dbg !7346
  %cmp197 = icmp ne %struct.pre_expr_d* %call194, %call193, !dbg !7347
  %or.cond12 = and i1 %tobool195, %cmp197, !dbg !7348
  br i1 %or.cond12, label %if.then199, label %if.else208, !dbg !7348

if.then199:                                       ; preds = %if.then189
  %call201 = call fastcc %union.tree_node* @get_representative_for(%struct.pre_expr_d* nonnull %call194) #7, !dbg !7349
  call void @llvm.dbg.value(metadata %union.tree_node* %call201, metadata !7147, metadata !DIExpression()), !dbg !7350
  %tobool202 = icmp ne %union.tree_node* %call201, null, !dbg !7351
  %.13 = select i1 %tobool202, i32 0, i32 6, !dbg !7353
  %call201. = select i1 %tobool202, %union.tree_node* %call201, %union.tree_node* %44, !dbg !7353
  call void @llvm.dbg.value(metadata %union.tree_node* %call201., metadata !7134, metadata !DIExpression()), !dbg !7297
  br i1 %tobool202, label %if.end212, label %cleanup213

if.else208:                                       ; preds = %if.then189
  %tobool209 = icmp eq %struct.pre_expr_d* %call194, null, !dbg !7354
  br i1 %tobool209, label %cleanup213, label %if.end212, !dbg !7356

if.end212:                                        ; preds = %if.else208, %if.then199
  %op1136.1 = phi %union.tree_node* [ %call201., %if.then199 ], [ %44, %if.else208 ], !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %op1136.1, metadata !7134, metadata !DIExpression()), !dbg !7297
  br label %cleanup213, !dbg !7357

cleanup213:                                       ; preds = %if.else208, %if.then199, %if.end212
  %cleanup.dest.slot.6 = phi i32 [ %.13, %if.then199 ], [ 0, %if.end212 ], [ 6, %if.else208 ]
  %op1136.2 = phi %union.tree_node* [ %call201., %if.then199 ], [ %op1136.1, %if.end212 ], [ %44, %if.else208 ], !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %op1136.2, metadata !7134, metadata !DIExpression()), !dbg !7297
  %cond4 = icmp eq i32 %cleanup.dest.slot.6, 0
  br i1 %cond4, label %if.end223, label %cleanup340

if.else216:                                       ; preds = %land.lhs.true182
  %call219 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %44) #6, !dbg !7358
  %tobool220 = icmp eq i8 %call219, 0, !dbg !7358
  br i1 %tobool220, label %cleanup340, label %if.end223, !dbg !7360

if.end223:                                        ; preds = %if.else216, %if.end175, %cleanup213
  %op1136.3 = phi %union.tree_node* [ %op1136.2, %cleanup213 ], [ null, %if.end175 ], [ %44, %if.else216 ], !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %op1136.3, metadata !7134, metadata !DIExpression()), !dbg !7297
  %cmp224 = icmp ne %union.tree_node* %op1136.3, %44, !dbg !7361
  %conv225 = zext i1 %cmp224 to i8, !dbg !7361
  %or227 = or i8 %or179, %conv225, !dbg !7362
  call void @llvm.dbg.value(metadata i8 %or227, metadata !7119, metadata !DIExpression()), !dbg !7286
  %cond22 = icmp eq %union.tree_node* %45, null, !dbg !7363
  br i1 %cond22, label %if.end271, label %land.lhs.true230, !dbg !7363

land.lhs.true230:                                 ; preds = %if.end223
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7364
  %bf.load232 = load i64, i64* %52, align 8, !dbg !7364
  %bf.cast23426 = and i64 %bf.load232, 65535, !dbg !7365
  %cmp235 = icmp eq i64 %bf.cast23426, 141, !dbg !7365
  br i1 %cmp235, label %if.then237, label %if.else264, !dbg !7366

if.then237:                                       ; preds = %land.lhs.true230
  %call239 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %45) #6, !dbg !7367
  %value_id240 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call239, i64 0, i32 2, !dbg !7368
  %53 = load i32, i32* %value_id240, align 8, !dbg !7368
  call void @llvm.dbg.value(metadata i32 %53, metadata !7150, metadata !DIExpression()), !dbg !7369
  %call241 = call fastcc %struct.pre_expr_d* @find_leader_in_sets(i32 %53, %struct.bitmap_set* %set1, %struct.bitmap_set* %set2) #7, !dbg !7370
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call241, metadata !7129, metadata !DIExpression()), !dbg !7297
  %call242 = call fastcc %struct.pre_expr_d* @phi_translate(%struct.pre_expr_d* %call241, %struct.bitmap_set* %set1, %struct.bitmap_set* %set2, %struct.basic_block_def* %pred, %struct.basic_block_def* %phiblock) #7, !dbg !7371
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call242, metadata !7125, metadata !DIExpression()), !dbg !7297
  %tobool243 = icmp ne %struct.pre_expr_d* %call242, null, !dbg !7372
  %cmp245 = icmp ne %struct.pre_expr_d* %call242, %call241, !dbg !7373
  %or.cond14 = and i1 %tobool243, %cmp245, !dbg !7374
  br i1 %or.cond14, label %if.then247, label %if.else256, !dbg !7374

if.then247:                                       ; preds = %if.then237
  %call249 = call fastcc %union.tree_node* @get_representative_for(%struct.pre_expr_d* nonnull %call242) #7, !dbg !7375
  call void @llvm.dbg.value(metadata %union.tree_node* %call249, metadata !7153, metadata !DIExpression()), !dbg !7376
  %tobool250 = icmp ne %union.tree_node* %call249, null, !dbg !7377
  %.15 = select i1 %tobool250, i32 0, i32 6, !dbg !7379
  %call249. = select i1 %tobool250, %union.tree_node* %call249, %union.tree_node* %45, !dbg !7379
  call void @llvm.dbg.value(metadata %union.tree_node* %call249., metadata !7135, metadata !DIExpression()), !dbg !7297
  br i1 %tobool250, label %if.end260, label %cleanup261

if.else256:                                       ; preds = %if.then237
  %tobool257 = icmp eq %struct.pre_expr_d* %call242, null, !dbg !7380
  br i1 %tobool257, label %cleanup261, label %if.end260, !dbg !7382

if.end260:                                        ; preds = %if.else256, %if.then247
  %op2137.1 = phi %union.tree_node* [ %call249., %if.then247 ], [ %45, %if.else256 ], !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %op2137.1, metadata !7135, metadata !DIExpression()), !dbg !7297
  br label %cleanup261, !dbg !7383

cleanup261:                                       ; preds = %if.else256, %if.then247, %if.end260
  %cleanup.dest.slot.8 = phi i32 [ %.15, %if.then247 ], [ 0, %if.end260 ], [ 6, %if.else256 ]
  %op2137.2 = phi %union.tree_node* [ %call249., %if.then247 ], [ %op2137.1, %if.end260 ], [ %45, %if.else256 ], !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %op2137.2, metadata !7135, metadata !DIExpression()), !dbg !7297
  %cond2 = icmp eq i32 %cleanup.dest.slot.8, 0
  br i1 %cond2, label %if.end271, label %cleanup340

if.else264:                                       ; preds = %land.lhs.true230
  %call267 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %45) #6, !dbg !7384
  %tobool268 = icmp eq i8 %call267, 0, !dbg !7384
  br i1 %tobool268, label %cleanup340, label %if.end271, !dbg !7386

if.end271:                                        ; preds = %if.else264, %if.end223, %cleanup261
  %op2137.3 = phi %union.tree_node* [ %op2137.2, %cleanup261 ], [ null, %if.end223 ], [ %45, %if.else264 ], !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %op2137.3, metadata !7135, metadata !DIExpression()), !dbg !7297
  %cmp272 = icmp ne %union.tree_node* %op2137.3, %45, !dbg !7387
  %conv273 = zext i1 %cmp272 to i8, !dbg !7387
  %or275 = or i8 %or227, %conv273, !dbg !7388
  call void @llvm.dbg.value(metadata i8 %or275, metadata !7119, metadata !DIExpression()), !dbg !7286
  %54 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %newoperands, align 8, !dbg !7389
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %54, metadata !7118, metadata !DIExpression()), !dbg !7286
  %tobool277 = icmp eq %struct.VEC_vn_reference_op_s_heap* %54, null, !dbg !7389
  br i1 %tobool277, label %if.then278, label %if.end286, !dbg !7391

if.then278:                                       ; preds = %if.end271
  %call285 = call fastcc %struct.VEC_vn_reference_op_s_heap* @VEC_vn_reference_op_s_heap_copy(%struct.VEC_vn_reference_op_s_base* %base130) #7, !dbg !7392
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %call285, metadata !7118, metadata !DIExpression()), !dbg !7286
  store %struct.VEC_vn_reference_op_s_heap* %call285, %struct.VEC_vn_reference_op_s_heap** %newoperands, align 8, !dbg !7393
  br label %if.end286, !dbg !7394

if.end286:                                        ; preds = %if.end271, %if.then278
  %55 = phi %struct.VEC_vn_reference_op_s_heap* [ %54, %if.end271 ], [ %call285, %if.then278 ]
  %56 = load i32, i32* %opcode287, align 8, !dbg !7395
  %cmp288 = icmp eq i32 %56, 141, !dbg !7396
  br i1 %cmp288, label %land.lhs.true290, label %if.end303, !dbg !7397

land.lhs.true290:                                 ; preds = %if.end286
  %57 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0135.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7398
  %bf.load292 = load i64, i64* %57, align 8, !dbg !7398
  %bf.cast29428 = and i64 %bf.load292, 65535, !dbg !7399
  %cmp295 = icmp eq i64 %bf.cast29428, 141, !dbg !7399
  br i1 %cmp295, label %if.end303, label %if.then297, !dbg !7400

if.then297:                                       ; preds = %land.lhs.true290
  %58 = trunc i64 %bf.load292 to i32, !dbg !7401
  %bf.cast301 = and i32 %58, 65535, !dbg !7401
  store i32 %bf.cast301, i32* %opcode287, align 8, !dbg !7402
  br label %if.end303, !dbg !7403

if.end303:                                        ; preds = %land.lhs.true290, %if.then297, %if.end286
  store i64 %47, i64* %41, align 8, !dbg !7404
  store %union.tree_node* %op0135.3, %union.tree_node** %op0305, align 8, !dbg !7405
  store %union.tree_node* %op1136.3, %union.tree_node** %op1306, align 8, !dbg !7406
  store %union.tree_node* %op2137.3, %union.tree_node** %op2307, align 8, !dbg !7407
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %55, metadata !7118, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %55, metadata !7118, metadata !DIExpression()), !dbg !7286
  %base310 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %55, i64 0, i32 0, !dbg !7408
  %59 = load i32, i32* %j, align 4, !dbg !7408
  call void @llvm.dbg.value(metadata i32 %59, metadata !7122, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %newop, metadata !7137, metadata !DIExpression(DW_OP_deref)), !dbg !7297
  %call314 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_replace(%struct.VEC_vn_reference_op_s_base* %base310, i32 %59, %struct.vn_reference_op_struct* nonnull %newop) #7, !dbg !7408
  %60 = load i32, i32* %j, align 4, !dbg !7409
  call void @llvm.dbg.value(metadata i32 %60, metadata !7122, metadata !DIExpression()), !dbg !7286
  %cmp315 = icmp ne i32 %60, 0, !dbg !7411
  %tobool318 = icmp ne %union.tree_node* %op0135.3, null, !dbg !7412
  %or.cond17 = and i1 %cmp315, %tobool318, !dbg !7413
  br i1 %or.cond17, label %land.lhs.true319, label %cleanup340, !dbg !7413

land.lhs.true319:                                 ; preds = %if.end303
  %61 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0135.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7414
  %bf.load321 = load i64, i64* %61, align 8, !dbg !7414
  %bf.cast32327 = and i64 %bf.load321, 65535, !dbg !7415
  %cmp324 = icmp eq i64 %bf.cast32327, 121, !dbg !7415
  br i1 %cmp324, label %land.lhs.true326, label %cleanup340, !dbg !7416

land.lhs.true326:                                 ; preds = %land.lhs.true319
  %62 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %newoperands, align 8, !dbg !7417
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %62, metadata !7118, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %62, metadata !7118, metadata !DIExpression()), !dbg !7286
  %base329 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %62, i64 0, i32 0, !dbg !7417
  call void @llvm.dbg.value(metadata i32 %60, metadata !7122, metadata !DIExpression()), !dbg !7286
  %sub333 = add i32 %60, -1, !dbg !7417
  %call334 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %base329, i32 %sub333) #7, !dbg !7417
  %opcode335 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call334, i64 0, i32 0, !dbg !7418
  %63 = load i32, i32* %opcode335, align 8, !dbg !7418
  %cmp336 = icmp eq i32 %63, 47, !dbg !7419
  br i1 %cmp336, label %if.then338, label %cleanup340, !dbg !7420

if.then338:                                       ; preds = %land.lhs.true326
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %newoperands, metadata !7118, metadata !DIExpression(DW_OP_deref)), !dbg !7286
  call void @llvm.dbg.value(metadata i32* %j, metadata !7122, metadata !DIExpression(DW_OP_deref)), !dbg !7286
  call void @vn_reference_fold_indirect(%struct.VEC_vn_reference_op_s_heap** nonnull %newoperands, i32* nonnull %j) #6, !dbg !7421
  br label %cleanup340, !dbg !7421

cleanup340:                                       ; preds = %if.else216, %if.else264, %if.end303, %land.lhs.true319, %land.lhs.true326, %if.then338, %cleanup172, %cleanup213, %cleanup261
  %changed126.1 = phi i8 [ %changed126.0, %cleanup172 ], [ %or179, %cleanup213 ], [ %or227, %cleanup261 ], [ %or179, %if.else216 ], [ %or227, %if.else264 ], [ %or275, %if.then338 ], [ %or275, %land.lhs.true326 ], [ %or275, %land.lhs.true319 ], [ %or275, %if.end303 ], !dbg !7286
  %cleanup.dest.slot.9 = phi i32 [ %cleanup.dest.slot.4, %cleanup172 ], [ %cleanup.dest.slot.6, %cleanup213 ], [ %cleanup.dest.slot.8, %cleanup261 ], [ 6, %if.else216 ], [ 6, %if.else264 ], [ 0, %if.then338 ], [ 0, %land.lhs.true326 ], [ 0, %land.lhs.true319 ], [ 0, %if.end303 ]
  call void @llvm.dbg.value(metadata i8 %changed126.1, metadata !7119, metadata !DIExpression()), !dbg !7286
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #8, !dbg !7422
  %switch = icmp eq i32 %cleanup.dest.slot.9, 0
  br i1 %switch, label %for.inc352, label %for.end355

for.inc352:                                       ; preds = %cleanup340
  %inc353 = add i32 %i127.0, 1, !dbg !7423
  call void @llvm.dbg.value(metadata i32 %inc353, metadata !7121, metadata !DIExpression()), !dbg !7286
  %64 = load i32, i32* %j, align 4, !dbg !7424
  call void @llvm.dbg.value(metadata i32 %64, metadata !7122, metadata !DIExpression()), !dbg !7286
  %inc354 = add i32 %64, 1, !dbg !7424
  call void @llvm.dbg.value(metadata i32 %inc354, metadata !7122, metadata !DIExpression()), !dbg !7286
  br label %for.cond128, !dbg !7425, !llvm.loop !7426

for.end355:                                       ; preds = %for.cond128, %cleanup340
  %i127.0.lcssa = phi i32 [ %i127.0, %for.cond128 ], [ %i127.0, %cleanup340 ], !dbg !7301
  %changed126.2 = phi i8 [ %changed126.1, %cleanup340 ], [ %changed126.0, %for.cond128 ], !dbg !7302
  call void @llvm.dbg.value(metadata i32 %i127.0.lcssa, metadata !7121, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %i127.0.lcssa, metadata !7121, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %i127.0.lcssa, metadata !7121, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %i127.0.lcssa, metadata !7121, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %i127.0.lcssa, metadata !7121, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %i127.0.lcssa, metadata !7121, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8 %changed126.2, metadata !7119, metadata !DIExpression()), !dbg !7286
  %call362 = call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base130) #7, !dbg !7428
  %cmp363 = icmp eq i32 %i127.0.lcssa, %call362, !dbg !7430
  br i1 %cmp363, label %if.end369, label %if.then365, !dbg !7431

if.then365:                                       ; preds = %for.end355
  %65 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %newoperands, align 8, !dbg !7432
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %65, metadata !7118, metadata !DIExpression()), !dbg !7286
  %tobool366 = icmp eq %struct.VEC_vn_reference_op_s_heap* %65, null, !dbg !7432
  br i1 %tobool366, label %cleanup450, label %if.then367, !dbg !7435

if.then367:                                       ; preds = %if.then365
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %newoperands, metadata !7118, metadata !DIExpression(DW_OP_deref)), !dbg !7286
  call fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** nonnull %newoperands) #7, !dbg !7436
  br label %cleanup450, !dbg !7436

if.end369:                                        ; preds = %for.end355
  %tobool370 = icmp eq %union.tree_node* %35, null, !dbg !7437
  br i1 %tobool370, label %if.end378, label %if.then371, !dbg !7439

if.then371:                                       ; preds = %if.end369
  %66 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %newoperands, align 8, !dbg !7440
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %66, metadata !7118, metadata !DIExpression()), !dbg !7286
  %set = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %33, i64 0, i32 3, !dbg !7442
  %67 = load i32, i32* %set, align 8, !dbg !7442
  %type372 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %33, i64 0, i32 4, !dbg !7443
  %68 = load %union.tree_node*, %union.tree_node** %type372, align 8, !dbg !7443
  call void @llvm.dbg.value(metadata i8* %same_valid, metadata !7120, metadata !DIExpression(DW_OP_deref)), !dbg !7286
  %call373 = call fastcc %union.tree_node* @translate_vuse_through_block(%struct.VEC_vn_reference_op_s_heap* %66, i32 %67, %union.tree_node* %68, %union.tree_node* nonnull %35, %struct.basic_block_def* %phiblock, %struct.basic_block_def* %pred, i8* nonnull %same_valid) #7, !dbg !7444
  call void @llvm.dbg.value(metadata %union.tree_node* %call373, metadata !7117, metadata !DIExpression()), !dbg !7286
  %cmp374 = icmp eq %union.tree_node* %call373, null, !dbg !7445
  br i1 %cmp374, label %if.then376, label %if.end378, !dbg !7447

if.then376:                                       ; preds = %if.then371
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %newoperands, metadata !7118, metadata !DIExpression(DW_OP_deref)), !dbg !7286
  call fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** nonnull %newoperands) #7, !dbg !7448
  br label %cleanup450, !dbg !7450

if.end378:                                        ; preds = %if.end369, %if.then371
  %newvuse.0 = phi %union.tree_node* [ null, %if.end369 ], [ %call373, %if.then371 ], !dbg !7286
  call void @llvm.dbg.value(metadata %union.tree_node* %newvuse.0, metadata !7117, metadata !DIExpression()), !dbg !7286
  %tobool380 = icmp ne i8 %changed126.2, 0, !dbg !7451
  %cmp381 = icmp ne %union.tree_node* %newvuse.0, %35, !dbg !7452
  %or.cond18 = or i1 %tobool380, %cmp381, !dbg !7453
  br i1 %or.cond18, label %if.then383, label %if.end449, !dbg !7453

if.then383:                                       ; preds = %if.end378
  %set387 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %33, i64 0, i32 3, !dbg !7454
  %69 = load i32, i32* %set387, align 8, !dbg !7454
  %type388 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %33, i64 0, i32 4, !dbg !7455
  %70 = load %union.tree_node*, %union.tree_node** %type388, align 8, !dbg !7455
  %71 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %newoperands, align 8, !dbg !7456
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %71, metadata !7118, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata %struct.vn_reference_s** %newref, metadata !7124, metadata !DIExpression(DW_OP_deref)), !dbg !7286
  %call389 = call %union.tree_node* @vn_reference_lookup_pieces(%union.tree_node* %newvuse.0, i32 %69, %union.tree_node* %70, %struct.VEC_vn_reference_op_s_heap* %71, %struct.vn_reference_s** nonnull %newref, i8 zeroext 1) #6, !dbg !7457
  call void @llvm.dbg.value(metadata %union.tree_node* %call389, metadata !7160, metadata !DIExpression()), !dbg !7458
  %72 = load %struct.vn_reference_s*, %struct.vn_reference_s** %newref, align 8, !dbg !7459
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %72, metadata !7124, metadata !DIExpression()), !dbg !7286
  %tobool390 = icmp eq %struct.vn_reference_s* %72, null, !dbg !7459
  br i1 %tobool390, label %if.end392, label %if.then391, !dbg !7461

if.then391:                                       ; preds = %if.then383
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %newoperands, metadata !7118, metadata !DIExpression(DW_OP_deref)), !dbg !7286
  call fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** nonnull %newoperands) #7, !dbg !7462
  br label %if.end392, !dbg !7462

if.end392:                                        ; preds = %if.then383, %if.then391
  %tobool393 = icmp eq %union.tree_node* %call389, null, !dbg !7463
  br i1 %tobool393, label %if.end405, label %land.lhs.true394, !dbg !7465

land.lhs.true394:                                 ; preds = %if.end392
  %call395 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %call389) #6, !dbg !7466
  %tobool397 = icmp eq i8 %call395, 0, !dbg !7466
  br i1 %tobool397, label %if.end405, label %if.then398, !dbg !7467

if.then398:                                       ; preds = %land.lhs.true394
  %73 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %newoperands, align 8, !dbg !7468
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %73, metadata !7118, metadata !DIExpression()), !dbg !7286
  %tobool399 = icmp eq %struct.VEC_vn_reference_op_s_heap* %73, null, !dbg !7468
  br i1 %tobool399, label %cond.end402, label %cond.true400, !dbg !7468

cond.true400:                                     ; preds = %if.then398
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1722, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7468
  br label %cond.end402, !dbg !7468

cond.end402:                                      ; preds = %if.then398, %cond.true400
  %call404 = call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_constant(%union.tree_node* nonnull %call389) #7, !dbg !7470
  br label %cleanup444, !dbg !7471

if.end405:                                        ; preds = %land.lhs.true394, %if.end392
  %74 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @pre_expr_pool, align 8, !dbg !7472
  %call406 = call i8* @pool_alloc(%struct.alloc_pool_def* %74) #6, !dbg !7473
  %75 = bitcast i8* %call406 to %struct.pre_expr_d*, !dbg !7474
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %75, metadata !7086, metadata !DIExpression()), !dbg !7170
  %kind407 = bitcast i8* %call406 to i32*, !dbg !7475
  store i32 2, i32* %kind407, align 8, !dbg !7476
  %id408 = getelementptr inbounds i8, i8* %call406, i64 4, !dbg !7477
  %76 = bitcast i8* %id408 to i32*, !dbg !7477
  store i32 0, i32* %76, align 4, !dbg !7478
  %77 = load %struct.vn_reference_s*, %struct.vn_reference_s** %newref, align 8, !dbg !7479
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %77, metadata !7124, metadata !DIExpression()), !dbg !7286
  %tobool409 = icmp eq %struct.vn_reference_s* %77, null, !dbg !7479
  br i1 %tobool409, label %if.else420, label %if.then410, !dbg !7481

if.then410:                                       ; preds = %if.end405
  %78 = ptrtoint %struct.vn_reference_s* %77 to i64, !dbg !7481
  %u411 = getelementptr inbounds i8, i8* %call406, i64 8, !dbg !7482
  %79 = bitcast i8* %u411 to i64*, !dbg !7484
  store i64 %78, i64* %79, align 8, !dbg !7484
  %call413 = call fastcc %struct.pre_expr_d* @fully_constant_expression(%struct.pre_expr_d* %75) #7, !dbg !7485
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call413, metadata !7159, metadata !DIExpression()), !dbg !7458
  %cmp414 = icmp eq %struct.pre_expr_d* %call413, %75, !dbg !7486
  br i1 %cmp414, label %if.end417, label %cleanup444, !dbg !7488

if.end417:                                        ; preds = %if.then410
  %80 = load %struct.vn_reference_s*, %struct.vn_reference_s** %newref, align 8, !dbg !7489
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %80, metadata !7124, metadata !DIExpression()), !dbg !7286
  %value_id418 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %80, i64 0, i32 0, !dbg !7490
  %81 = load i32, i32* %value_id418, align 8, !dbg !7490
  call void @llvm.dbg.value(metadata i32 %81, metadata !7156, metadata !DIExpression()), !dbg !7458
  %call419 = call fastcc i32 @get_or_alloc_expression_id(%struct.pre_expr_d* %75) #7, !dbg !7491
  br label %if.end443, !dbg !7492

if.else420:                                       ; preds = %if.end405
  %tobool422 = icmp eq i8 %changed126.2, 0, !dbg !7493
  %82 = load i8, i8* %same_valid, align 1, !dbg !7496
  call void @llvm.dbg.value(metadata i8 %82, metadata !7120, metadata !DIExpression()), !dbg !7286
  %tobool424 = icmp ne i8 %82, 0, !dbg !7496
  %or.cond19 = and i1 %tobool422, %tobool424, !dbg !7497
  br i1 %or.cond19, label %if.else429, label %if.then425, !dbg !7497

if.then425:                                       ; preds = %if.else420
  %call426 = call i32 @get_next_value_id() #6, !dbg !7498
  call void @llvm.dbg.value(metadata i32 %call426, metadata !7156, metadata !DIExpression()), !dbg !7458
  %call427 = call i32 @get_max_value_id() #6, !dbg !7500
  %add428 = add i32 %call427, 1, !dbg !7500
  call fastcc void @VEC_bitmap_set_t_heap_safe_grow_cleared(%struct.VEC_bitmap_set_t_heap** nonnull @value_expressions, i32 %add428) #7, !dbg !7500
  br label %if.end431, !dbg !7501

if.else429:                                       ; preds = %if.else420
  %value_id430 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %33, i64 0, i32 0, !dbg !7502
  %83 = load i32, i32* %value_id430, align 8, !dbg !7502
  call void @llvm.dbg.value(metadata i32 %83, metadata !7156, metadata !DIExpression()), !dbg !7458
  br label %if.end431

if.end431:                                        ; preds = %if.else429, %if.then425
  %new_val_id384.0 = phi i32 [ %call426, %if.then425 ], [ %83, %if.else429 ], !dbg !7503
  call void @llvm.dbg.value(metadata i32 %new_val_id384.0, metadata !7156, metadata !DIExpression()), !dbg !7458
  %84 = load i32, i32* %set387, align 8, !dbg !7504
  %85 = load %union.tree_node*, %union.tree_node** %type388, align 8, !dbg !7505
  %86 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %newoperands, align 8, !dbg !7506
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %86, metadata !7118, metadata !DIExpression()), !dbg !7286
  %call434 = call %struct.vn_reference_s* @vn_reference_insert_pieces(%union.tree_node* %newvuse.0, i32 %84, %union.tree_node* %85, %struct.VEC_vn_reference_op_s_heap* %86, %union.tree_node* %call389, i32 %new_val_id384.0) #6, !dbg !7507
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %call434, metadata !7124, metadata !DIExpression()), !dbg !7286
  store %struct.vn_reference_s* %call434, %struct.vn_reference_s** %newref, align 8, !dbg !7508
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* null, metadata !7118, metadata !DIExpression()), !dbg !7286
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** %newoperands, align 8, !dbg !7509
  %.cast = ptrtoint %struct.vn_reference_s* %call434 to i64, !dbg !7510
  %u435 = getelementptr inbounds i8, i8* %call406, i64 8, !dbg !7511
  %87 = bitcast i8* %u435 to i64*, !dbg !7512
  store i64 %.cast, i64* %87, align 8, !dbg !7512
  %call437 = call fastcc %struct.pre_expr_d* @fully_constant_expression(%struct.pre_expr_d* %75) #7, !dbg !7513
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call437, metadata !7159, metadata !DIExpression()), !dbg !7458
  %cmp438 = icmp eq %struct.pre_expr_d* %call437, %75, !dbg !7514
  br i1 %cmp438, label %if.end441, label %cleanup444, !dbg !7516

if.end441:                                        ; preds = %if.end431
  %call442 = call fastcc i32 @get_or_alloc_expression_id(%struct.pre_expr_d* %75) #7, !dbg !7517
  br label %if.end443

if.end443:                                        ; preds = %if.end441, %if.end417
  %new_val_id384.1 = phi i32 [ %81, %if.end417 ], [ %new_val_id384.0, %if.end441 ], !dbg !7518
  call void @llvm.dbg.value(metadata i32 %new_val_id384.1, metadata !7156, metadata !DIExpression()), !dbg !7458
  call void @add_to_value(i32 %new_val_id384.1, %struct.pre_expr_d* %75) #7, !dbg !7519
  br label %cleanup444, !dbg !7520

cleanup444:                                       ; preds = %if.then410, %if.end431, %if.end443, %cond.end402
  %cleanup.dest.slot.10 = phi i1 [ false, %cond.end402 ], [ true, %if.end443 ], [ false, %if.then410 ], [ false, %if.end431 ]
  %expr.addr.2 = phi %struct.pre_expr_d* [ %expr, %cond.end402 ], [ %75, %if.end443 ], [ %75, %if.then410 ], [ %75, %if.end431 ]
  %retval.7 = phi %struct.pre_expr_d* [ %call404, %cond.end402 ], [ undef, %if.end443 ], [ %call413, %if.then410 ], [ %call437, %if.end431 ]
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr.addr.2, metadata !7086, metadata !DIExpression()), !dbg !7170
  br i1 %cleanup.dest.slot.10, label %if.end449, label %cleanup450

if.end449:                                        ; preds = %cleanup444, %if.end378
  %expr.addr.3 = phi %struct.pre_expr_d* [ %expr, %if.end378 ], [ %expr.addr.2, %cleanup444 ]
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr.addr.3, metadata !7086, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %newoperands, metadata !7118, metadata !DIExpression(DW_OP_deref)), !dbg !7286
  call fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** nonnull %newoperands) #7, !dbg !7521
  br label %cleanup450, !dbg !7522

cleanup450:                                       ; preds = %if.then365, %if.then367, %cleanup444, %if.end449, %if.then376
  %retval.8 = phi %struct.pre_expr_d* [ null, %if.then376 ], [ %retval.7, %cleanup444 ], [ %expr.addr.3, %if.end449 ], [ null, %if.then367 ], [ null, %if.then365 ], !dbg !7286
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8, !dbg !7523
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8, !dbg !7523
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #8, !dbg !7523
  call void @llvm.dbg.value(metadata i8* %same_valid, metadata !7120, metadata !DIExpression(DW_OP_deref)), !dbg !7286
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %same_valid) #8, !dbg !7523
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8, !dbg !7523
  br label %return

sw.bb461:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !7161, metadata !DIExpression()), !dbg !7524
  %name464 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, i32 0, !dbg !7525
  %88 = bitcast %union.tree_node** %name464 to %struct.tree_ssa_name**, !dbg !7525
  %89 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %88, align 8, !dbg !7525
  %def_stmt465 = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %89, i64 0, i32 2, !dbg !7526
  %90 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt465, align 8, !dbg !7526
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %90, metadata !7164, metadata !DIExpression()), !dbg !7524
  %call466 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %90) #7, !dbg !7527
  %cmp467 = icmp eq i32 %call466, 16, !dbg !7529
  br i1 %cmp467, label %land.lhs.true469, label %cleanup512, !dbg !7530

land.lhs.true469:                                 ; preds = %sw.bb461
  %call470 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %90) #7, !dbg !7531
  %cmp471 = icmp eq %struct.basic_block_def* %call470, %phiblock, !dbg !7532
  br i1 %cmp471, label %if.end475, label %cleanup512, !dbg !7533

if.end475:                                        ; preds = %land.lhs.true469
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %90, metadata !7161, metadata !DIExpression()), !dbg !7524
  %call476 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %90) #7, !dbg !7534
  %call477 = tail call %struct.edge_def* @find_edge(%struct.basic_block_def* %pred, %struct.basic_block_def* %call476) #6, !dbg !7535
  call void @llvm.dbg.value(metadata %struct.edge_def* %call477, metadata !7163, metadata !DIExpression()), !dbg !7524
  %tobool478 = icmp eq %struct.edge_def* %call477, null, !dbg !7536
  br i1 %tobool478, label %cleanup512, label %if.then479, !dbg !7537

if.then479:                                       ; preds = %if.end475
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call477, i64 0, i32 6, !dbg !7538
  %91 = load i32, i32* %dest_idx, align 4, !dbg !7538
  %call480 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %90, i32 %91) #7, !dbg !7538
  %call481 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call480) #7, !dbg !7538
  call void @llvm.dbg.value(metadata %union.tree_node* %call481, metadata !7166, metadata !DIExpression()), !dbg !7539
  %92 = getelementptr inbounds %union.tree_node, %union.tree_node* %call481, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7540
  %bf.load483 = load i64, i64* %92, align 8, !dbg !7540
  %bf.cast48523 = and i64 %bf.load483, 65535, !dbg !7542
  %cmp486 = icmp eq i64 %bf.cast48523, 141, !dbg !7542
  br i1 %cmp486, label %if.then488, label %if.end490, !dbg !7543

if.then488:                                       ; preds = %if.then479
  %call489 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call481) #6, !dbg !7544
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call489, i64 0, i32 0, !dbg !7545
  %93 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !7545
  call void @llvm.dbg.value(metadata %union.tree_node* %93, metadata !7166, metadata !DIExpression()), !dbg !7539
  br label %if.end490, !dbg !7546

if.end490:                                        ; preds = %if.then488, %if.then479
  %def.0 = phi %union.tree_node* [ %93, %if.then488 ], [ %call481, %if.then479 ], !dbg !7539
  call void @llvm.dbg.value(metadata %union.tree_node* %def.0, metadata !7166, metadata !DIExpression()), !dbg !7539
  %call491 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %def.0) #6, !dbg !7547
  %tobool492 = icmp eq i8 %call491, 0, !dbg !7547
  br i1 %tobool492, label %if.end495, label %if.then493, !dbg !7549

if.then493:                                       ; preds = %if.end490
  %call494 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_constant(%union.tree_node* %def.0) #7, !dbg !7550
  br label %cleanup512, !dbg !7551

if.end495:                                        ; preds = %if.end490
  %94 = getelementptr inbounds %union.tree_node, %union.tree_node* %def.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7552
  %bf.load497 = load i64, i64* %94, align 8, !dbg !7552
  %bf.cast49924 = and i64 %bf.load497, 65535, !dbg !7554
  %cmp500 = icmp eq i64 %bf.cast49924, 141, !dbg !7554
  br i1 %cmp500, label %land.lhs.true502, label %if.end507, !dbg !7555

land.lhs.true502:                                 ; preds = %if.end495
  %call503 = tail call zeroext i8 @ssa_undefined_value_p(%union.tree_node* %def.0) #6, !dbg !7556
  %tobool505 = icmp eq i8 %call503, 0, !dbg !7556
  br i1 %tobool505, label %if.end507, label %cleanup512, !dbg !7557

if.end507:                                        ; preds = %land.lhs.true502, %if.end495
  %call508 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %def.0) #7, !dbg !7558
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call508, metadata !7169, metadata !DIExpression()), !dbg !7539
  br label %cleanup512, !dbg !7559

cleanup512:                                       ; preds = %land.lhs.true502, %if.end475, %if.then493, %if.end507, %sw.bb461, %land.lhs.true469
  %cleanup.dest.slot.12 = phi %struct.pre_expr_d* [ %expr, %land.lhs.true469 ], [ %expr, %sw.bb461 ], [ null, %land.lhs.true502 ], [ %call508, %if.end507 ], [ %call494, %if.then493 ], [ %expr, %if.end475 ]
  ret %struct.pre_expr_d* %cleanup.dest.slot.12

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1806, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7560
  br label %return, !dbg !7561

return:                                           ; preds = %sw.default, %cleanup450, %cleanup118
  %retval.11 = phi %struct.pre_expr_d* [ null, %sw.default ], [ %retval.8, %cleanup450 ], [ %retval.6, %cleanup118 ]
  ret %struct.pre_expr_d* %retval.11, !dbg !7562
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @phi_trans_add(%struct.pre_expr_d* %e, %struct.pre_expr_d* %v, %struct.basic_block_def* %pred) unnamed_addr #0 !dbg !7563 {
entry:
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %e, metadata !7567, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %v, metadata !7568, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred, metadata !7569, metadata !DIExpression()), !dbg !7572
  %call = tail call i8* @xmalloc(i64 32) #6, !dbg !7573
  call void @llvm.dbg.value(metadata i8* %call, metadata !7571, metadata !DIExpression()), !dbg !7572
  %e1 = bitcast i8* %call to %struct.pre_expr_d**, !dbg !7574
  store %struct.pre_expr_d* %e, %struct.pre_expr_d** %e1, align 8, !dbg !7575
  %pred2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !7576
  %0 = bitcast i8* %pred2 to %struct.basic_block_def**, !dbg !7576
  store %struct.basic_block_def* %pred, %struct.basic_block_def** %0, align 8, !dbg !7577
  %v3 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !7578
  %1 = bitcast i8* %v3 to %struct.pre_expr_d**, !dbg !7578
  store %struct.pre_expr_d* %v, %struct.pre_expr_d** %1, align 8, !dbg !7579
  %2 = bitcast %struct.pre_expr_d* %e to i8*, !dbg !7580
  %call4 = tail call i32 @pre_expr_hash(i8* %2) #7, !dbg !7581
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %pred, i64 0, i32 9, !dbg !7582
  %3 = load i32, i32* %index, align 8, !dbg !7582
  %call5 = tail call i32 @iterative_hash_hashval_t(i32 %call4, i32 %3) #6, !dbg !7583
  %hashcode = getelementptr inbounds i8, i8* %call, i64 24, !dbg !7584
  %4 = bitcast i8* %hashcode to i32*, !dbg !7584
  store i32 %call5, i32* %4, align 8, !dbg !7585
  %5 = load %struct.htab*, %struct.htab** @phi_translate_table, align 8, !dbg !7586
  %call7 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %5, i8* %call, i32 %call5, i32 1) #6, !dbg !7587
  call void @llvm.dbg.value(metadata i8** %call7, metadata !7570, metadata !DIExpression()), !dbg !7572
  %6 = load i8*, i8** %call7, align 8, !dbg !7588
  %tobool = icmp eq i8* %6, null, !dbg !7588
  br i1 %tobool, label %if.end, label %if.then, !dbg !7590

if.then:                                          ; preds = %entry
  tail call void @free(i8* nonnull %6) #6, !dbg !7591
  br label %if.end, !dbg !7591

if.end:                                           ; preds = %entry, %if.then
  store i8* %call, i8** %call7, align 8, !dbg !7592
  ret void, !dbg !7593
}

declare dso_local i32 @iterative_hash_hashval_t(i32, i32) local_unnamed_addr #2

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.pre_expr_d* @find_leader_in_sets(i32 %val, %struct.bitmap_set* %set1, %struct.bitmap_set* %set2) unnamed_addr #0 !dbg !7594 {
entry:
  call void @llvm.dbg.value(metadata i32 %val, metadata !7598, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set1, metadata !7599, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set2, metadata !7600, metadata !DIExpression()), !dbg !7602
  %call = tail call fastcc %struct.pre_expr_d* @bitmap_find_leader(%struct.bitmap_set* %set1, i32 %val, %union.gimple_statement_d* null) #7, !dbg !7603
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call, metadata !7601, metadata !DIExpression()), !dbg !7602
  %tobool = icmp eq %struct.pre_expr_d* %call, null, !dbg !7604
  %tobool1 = icmp ne %struct.bitmap_set* %set2, null, !dbg !7606
  %or.cond = and i1 %tobool, %tobool1, !dbg !7607
  br i1 %or.cond, label %if.then, label %if.end, !dbg !7607

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %struct.pre_expr_d* @bitmap_find_leader(%struct.bitmap_set* nonnull %set2, i32 %val, %union.gimple_statement_d* null) #7, !dbg !7608
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call2, metadata !7601, metadata !DIExpression()), !dbg !7602
  br label %if.end, !dbg !7609

if.end:                                           ; preds = %entry, %if.then
  %result.0 = phi %struct.pre_expr_d* [ %call, %entry ], [ %call2, %if.then ], !dbg !7602
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %result.0, metadata !7601, metadata !DIExpression()), !dbg !7602
  ret %struct.pre_expr_d* %result.0, !dbg !7610
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_representative_for(%struct.pre_expr_d* %e) unnamed_addr #5 !dbg !7611 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %e, metadata !7615, metadata !DIExpression()), !dbg !7628
  %call = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %e) #7, !dbg !7629
  call void @llvm.dbg.value(metadata i32 %call, metadata !7618, metadata !DIExpression()), !dbg !7628
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %e, i64 0, i32 0, !dbg !7630
  %0 = load i32, i32* %kind, align 8, !dbg !7630
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 3, label %sw.bb2
    i32 1, label %sw.bb4
    i32 2, label %sw.bb4
  ], !dbg !7631

sw.bb:                                            ; preds = %entry
  %name1 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %e, i64 0, i32 2, i32 0, !dbg !7632
  %1 = load %union.tree_node*, %union.tree_node** %name1, align 8, !dbg !7632
  br label %cleanup49, !dbg !7633

sw.bb2:                                           ; preds = %entry
  %constant = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %e, i64 0, i32 2, i32 0, !dbg !7634
  %2 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !7634
  br label %cleanup49, !dbg !7635

sw.bb4:                                           ; preds = %entry, %entry
  %3 = bitcast i32* %i to i8*, !dbg !7636
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !7636
  %4 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !7637
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #8, !dbg !7637
  %5 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !7638
  %base = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %5, i64 0, i32 0, !dbg !7638
  %call5 = tail call fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_index(%struct.VEC_bitmap_set_t_base* %base, i32 %call) #7, !dbg !7638
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call5, metadata !7623, metadata !DIExpression()), !dbg !7639
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %call5, i64 0, i32 0, !dbg !7640
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !7640
  call void @llvm.dbg.value(metadata i32* %i, metadata !7619, metadata !DIExpression(DW_OP_deref)), !dbg !7639
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7622, metadata !DIExpression(DW_OP_deref)), !dbg !7639
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %6, i32 0, i32* nonnull %i) #7, !dbg !7640
  br label %for.cond, !dbg !7640

for.cond:                                         ; preds = %for.inc, %sw.bb4
  %retval.0 = phi %union.tree_node* [ undef, %sw.bb4 ], [ %retval.1, %for.inc ]
  call void @llvm.dbg.value(metadata i32* %i, metadata !7619, metadata !DIExpression(DW_OP_deref)), !dbg !7639
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7622, metadata !DIExpression(DW_OP_deref)), !dbg !7639
  %call6 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !7641
  %tobool7 = icmp eq i8 %call6, 0, !dbg !7640
  br i1 %tobool7, label %cleanup12, label %for.body, !dbg !7640

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !7642
  call void @llvm.dbg.value(metadata i32 %7, metadata !7619, metadata !DIExpression()), !dbg !7639
  %call8 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %7) #7, !dbg !7643
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call8, metadata !7624, metadata !DIExpression()), !dbg !7644
  %kind9 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call8, i64 0, i32 0, !dbg !7645
  %8 = load i32, i32* %kind9, align 8, !dbg !7645
  %cmp = icmp eq i32 %8, 0, !dbg !7647
  br i1 %cmp, label %if.then, label %cleanup, !dbg !7648

if.then:                                          ; preds = %for.body
  %name11 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call8, i64 0, i32 2, i32 0, !dbg !7649
  %9 = load %union.tree_node*, %union.tree_node** %name11, align 8, !dbg !7649
  br label %cleanup, !dbg !7650

cleanup:                                          ; preds = %for.body, %if.then
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then ], [ 0, %for.body ]
  %retval.1 = phi %union.tree_node* [ %9, %if.then ], [ %retval.0, %for.body ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %for.inc, label %cleanup12

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata i32* %i, metadata !7619, metadata !DIExpression(DW_OP_deref)), !dbg !7639
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7622, metadata !DIExpression(DW_OP_deref)), !dbg !7639
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !7641
  br label %for.cond, !dbg !7641, !llvm.loop !7651

cleanup12:                                        ; preds = %for.cond, %cleanup
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %for.cond ]
  %retval.2 = phi %union.tree_node* [ %retval.1, %cleanup ], [ %retval.0, %for.cond ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #8, !dbg !7653
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !7653
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %sw.epilog, label %cleanup49

sw.epilog:                                        ; preds = %cleanup12, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7654
  %tobool17 = icmp eq %struct._IO_FILE* %10, null, !dbg !7654
  br i1 %tobool17, label %if.end21, label %if.then18, !dbg !7656

if.then18:                                        ; preds = %sw.epilog
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !7657
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7659
  call fastcc void @print_pre_expr(%struct._IO_FILE* %11, %struct.pre_expr_d* %e) #7, !dbg !7660
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7661
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7662
  br label %if.end21, !dbg !7663

if.end21:                                         ; preds = %sw.epilog, %if.then18
  %call22 = call fastcc %union.tree_node* @get_expr_type(%struct.pre_expr_d* %e) #7, !dbg !7664
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !7616, metadata !DIExpression()), !dbg !7628
  %13 = load %union.tree_node*, %union.tree_node** @pretemp, align 8, !dbg !7665
  %tobool23 = icmp eq %union.tree_node* %13, null, !dbg !7665
  br i1 %tobool23, label %if.then25, label %lor.lhs.false, !dbg !7667

lor.lhs.false:                                    ; preds = %if.end21
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7668
  %14 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7668
  %cmp24 = icmp eq %union.tree_node* %call22, %14, !dbg !7669
  br i1 %cmp24, label %if.end28, label %if.then25, !dbg !7670

if.then25:                                        ; preds = %lor.lhs.false, %if.end21
  %call26 = call %union.tree_node* @create_tmp_var(%union.tree_node* %call22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !7671
  store %union.tree_node* %call26, %union.tree_node** @pretemp, align 8, !dbg !7673
  %call27 = call fastcc %struct.var_ann_d* @get_var_ann(%union.tree_node* %call26) #7, !dbg !7674
  %.pre = load %union.tree_node*, %union.tree_node** @pretemp, align 8, !dbg !7675
  br label %if.end28, !dbg !7676

if.end28:                                         ; preds = %lor.lhs.false, %if.then25
  %15 = phi %union.tree_node* [ %13, %lor.lhs.false ], [ %.pre, %if.then25 ], !dbg !7675
  %call29 = call %union.gimple_statement_d* @gimple_build_nop() #6, !dbg !7677
  %call30 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %15, %union.gimple_statement_d* %call29) #7, !dbg !7678
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !7617, metadata !DIExpression()), !dbg !7628
  %call31 = call %struct.vn_ssa_aux* @VN_INFO_GET(%union.tree_node* %call30) #6, !dbg !7679
  %value_id32 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call31, i64 0, i32 2, !dbg !7680
  store i32 %call, i32* %value_id32, align 8, !dbg !7681
  %16 = load i32, i32* %kind, align 8, !dbg !7682
  %cmp34 = icmp eq i32 %16, 3, !dbg !7684
  br i1 %cmp34, label %if.then35, label %if.else, !dbg !7685

if.then35:                                        ; preds = %if.end28
  %constant37 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %e, i64 0, i32 2, i32 0, !dbg !7686
  %17 = bitcast %union.tree_node** %constant37 to i64*, !dbg !7686
  %18 = load i64, i64* %17, align 8, !dbg !7686
  %call38 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call30) #6, !dbg !7687
  %19 = bitcast %struct.vn_ssa_aux* %call38 to i64*, !dbg !7688
  store i64 %18, i64* %19, align 8, !dbg !7688
  br label %if.end41, !dbg !7687

if.else:                                          ; preds = %if.end28
  %call39 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call30) #6, !dbg !7689
  %valnum40 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call39, i64 0, i32 0, !dbg !7690
  store %union.tree_node* %call30, %union.tree_node** %valnum40, align 8, !dbg !7691
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then35
  %call42 = call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %call30) #7, !dbg !7692
  call void @add_to_value(i32 %call, %struct.pre_expr_d* %call42) #7, !dbg !7693
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7694
  %tobool43 = icmp eq %struct._IO_FILE* %20, null, !dbg !7694
  br i1 %tobool43, label %cleanup49, label %if.then44, !dbg !7696

if.then44:                                        ; preds = %if.end41
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %20, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !7697
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7699
  call void @print_generic_expr(%struct._IO_FILE* %21, %union.tree_node* %call30, i32 0) #6, !dbg !7700
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7701
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !7702
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7703
  call fastcc void @print_pre_expr(%struct._IO_FILE* %23, %struct.pre_expr_d* %e) #7, !dbg !7704
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7705
  %call47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7706
  br label %cleanup49, !dbg !7707

cleanup49:                                        ; preds = %if.end41, %if.then44, %cleanup12, %sw.bb2, %sw.bb
  %retval.3 = phi %union.tree_node* [ %retval.2, %cleanup12 ], [ %2, %sw.bb2 ], [ %1, %sw.bb ], [ %call30, %if.then44 ], [ %call30, %if.end41 ], !dbg !7628
  ret %union.tree_node* %retval.3, !dbg !7708
}

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_constant(%union.tree_node* %constant) unnamed_addr #5 !dbg !7709 {
entry:
  %expr = alloca %struct.pre_expr_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %constant, metadata !7711, metadata !DIExpression()), !dbg !7716
  %0 = bitcast %struct.pre_expr_d* %expr to i8*, !dbg !7717
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7717
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 0, !dbg !7718
  store i32 3, i32* %kind, align 8, !dbg !7719
  %constant1 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, i32 0, !dbg !7720
  store %union.tree_node* %constant, %union.tree_node** %constant1, align 8, !dbg !7721
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !7714, metadata !DIExpression(DW_OP_deref)), !dbg !7716
  %call = call fastcc i32 @lookup_expression_id(%struct.pre_expr_d* nonnull %expr) #7, !dbg !7722
  call void @llvm.dbg.value(metadata i32 %call, metadata !7712, metadata !DIExpression()), !dbg !7716
  %cmp = icmp eq i32 %call, 0, !dbg !7723
  br i1 %cmp, label %if.end, label %if.then, !dbg !7725

if.then:                                          ; preds = %entry
  %call2 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %call) #7, !dbg !7726
  br label %cleanup, !dbg !7727

if.end:                                           ; preds = %entry
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @pre_expr_pool, align 8, !dbg !7728
  %call3 = call i8* @pool_alloc(%struct.alloc_pool_def* %1) #6, !dbg !7729
  %2 = bitcast i8* %call3 to %struct.pre_expr_d*, !dbg !7730
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %2, metadata !7715, metadata !DIExpression()), !dbg !7716
  %kind4 = bitcast i8* %call3 to i32*, !dbg !7731
  store i32 3, i32* %kind4, align 8, !dbg !7732
  %u5 = getelementptr inbounds i8, i8* %call3, i64 8, !dbg !7733
  %constant6 = bitcast i8* %u5 to %union.tree_node**, !dbg !7733
  store %union.tree_node* %constant, %union.tree_node** %constant6, align 8, !dbg !7734
  %call7 = call fastcc i32 @alloc_expression_id(%struct.pre_expr_d* %2) #7, !dbg !7735
  %call8 = call i32 @get_or_alloc_constant_value_id(%union.tree_node* %constant) #6, !dbg !7736
  call void @llvm.dbg.value(metadata i32 %call8, metadata !7713, metadata !DIExpression()), !dbg !7716
  call void @add_to_value(i32 %call8, %struct.pre_expr_d* %2) #7, !dbg !7737
  br label %cleanup, !dbg !7738

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.pre_expr_d* [ %call2, %if.then ], [ %2, %if.end ], !dbg !7716
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7739
  ret %struct.pre_expr_d* %retval.0, !dbg !7739
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.pre_expr_d* @fully_constant_expression(%struct.pre_expr_d* %e) unnamed_addr #5 !dbg !7740 {
entry:
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %e, metadata !7744, metadata !DIExpression()), !dbg !7787
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %e, i64 0, i32 0, !dbg !7788
  %0 = load i32, i32* %kind, align 8, !dbg !7788
  switch i32 %0, label %return [
    i32 2, label %sw.bb122
    i32 1, label %sw.bb1
  ], !dbg !7789

sw.bb1:                                           ; preds = %entry
  %u = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %e, i64 0, i32 2, !dbg !7790
  %nary2 = bitcast %union.pre_expr_union_d* %u to %struct.vn_nary_op_s**, !dbg !7790
  %1 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %nary2, align 8, !dbg !7790
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %1, metadata !7745, metadata !DIExpression()), !dbg !7791
  %opcode = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %1, i64 0, i32 1, !dbg !7792
  %bf.load = load i32, i32* %opcode, align 4, !dbg !7792
  %bf.clear = and i32 %bf.load, 65535, !dbg !7792
  %idxprom = zext i32 %bf.clear to i64, !dbg !7792
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !7792
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7792
  switch i32 %2, label %return [
    i32 10, label %sw.bb3
    i32 7, label %sw.bb22
    i32 5, label %sw.bb22
    i32 4, label %sw.bb62
    i32 6, label %do_unary
  ], !dbg !7793

sw.bb3:                                           ; preds = %sw.bb1
  %cmp = icmp eq i32 %bf.clear, 96, !dbg !7794
  br i1 %cmp, label %do_unary, label %if.end, !dbg !7796

if.end:                                           ; preds = %sw.bb3
  %cmp10 = icmp eq i32 %bf.clear, 93, !dbg !7797
  br i1 %cmp10, label %sw.bb22, label %land.lhs.true, !dbg !7799

land.lhs.true:                                    ; preds = %if.end
  %cmp14 = icmp eq i32 %bf.clear, 94, !dbg !7800
  br i1 %cmp14, label %sw.bb22, label %land.lhs.true15, !dbg !7801

land.lhs.true15:                                  ; preds = %land.lhs.true
  %cmp19 = icmp eq i32 %bf.clear, 95, !dbg !7802
  br i1 %cmp19, label %sw.bb22, label %return, !dbg !7803

sw.bb22:                                          ; preds = %land.lhs.true15, %land.lhs.true, %if.end, %sw.bb1, %sw.bb1
  %arrayidx23 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %1, i64 0, i32 5, i64 0, !dbg !7804
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx23, align 8, !dbg !7804
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7748, metadata !DIExpression()), !dbg !7805
  %arrayidx25 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %1, i64 0, i32 5, i64 1, !dbg !7806
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8, !dbg !7806
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !7751, metadata !DIExpression()), !dbg !7805
  %call = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %3) #6, !dbg !7807
  %tobool = icmp eq i8 %call, 0, !dbg !7807
  br i1 %tobool, label %if.then26, label %if.end34, !dbg !7808

if.then26:                                        ; preds = %sw.bb22
  %call27 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %3) #7, !dbg !7809
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call27, metadata !7753, metadata !DIExpression()), !dbg !7810
  %call28 = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call27) #7, !dbg !7811
  call void @llvm.dbg.value(metadata i32 %call28, metadata !7756, metadata !DIExpression()), !dbg !7810
  %call29 = tail call fastcc %union.tree_node* @get_constant_for_value_id(i32 %call28) #7, !dbg !7812
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !7757, metadata !DIExpression()), !dbg !7810
  %tobool30 = icmp eq %union.tree_node* %call29, null, !dbg !7813
  br i1 %tobool30, label %if.end34, label %if.then31, !dbg !7815

if.then31:                                        ; preds = %if.then26
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7816
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7816
  %call32 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %5, %union.tree_node* nonnull %call29) #6, !dbg !7816
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !7748, metadata !DIExpression()), !dbg !7805
  br label %if.end34, !dbg !7817

if.end34:                                         ; preds = %if.then26, %sw.bb22, %if.then31
  %naryop0.1 = phi %union.tree_node* [ %3, %sw.bb22 ], [ %call32, %if.then31 ], [ %3, %if.then26 ], !dbg !7805
  call void @llvm.dbg.value(metadata %union.tree_node* %naryop0.1, metadata !7748, metadata !DIExpression()), !dbg !7805
  %call35 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %4) #6, !dbg !7818
  %tobool36 = icmp eq i8 %call35, 0, !dbg !7818
  br i1 %tobool36, label %if.then37, label %if.end47, !dbg !7819

if.then37:                                        ; preds = %if.end34
  %call38 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %4) #7, !dbg !7820
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call38, metadata !7758, metadata !DIExpression()), !dbg !7821
  %call39 = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call38) #7, !dbg !7822
  call void @llvm.dbg.value(metadata i32 %call39, metadata !7761, metadata !DIExpression()), !dbg !7821
  %call40 = tail call fastcc %union.tree_node* @get_constant_for_value_id(i32 %call39) #7, !dbg !7823
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !7762, metadata !DIExpression()), !dbg !7821
  %tobool41 = icmp eq %union.tree_node* %call40, null, !dbg !7824
  br i1 %tobool41, label %if.end47, label %if.then42, !dbg !7826

if.then42:                                        ; preds = %if.then37
  %type44 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7827
  %6 = load %union.tree_node*, %union.tree_node** %type44, align 8, !dbg !7827
  %call45 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %6, %union.tree_node* nonnull %call40) #6, !dbg !7827
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !7751, metadata !DIExpression()), !dbg !7805
  br label %if.end47, !dbg !7828

if.end47:                                         ; preds = %if.then37, %if.end34, %if.then42
  %naryop1.1 = phi %union.tree_node* [ %4, %if.end34 ], [ %call45, %if.then42 ], [ %4, %if.then37 ], !dbg !7805
  call void @llvm.dbg.value(metadata %union.tree_node* %naryop1.1, metadata !7751, metadata !DIExpression()), !dbg !7805
  %bf.load49 = load i32, i32* %opcode, align 4, !dbg !7829
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !7829
  %type51 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %1, i64 0, i32 4, !dbg !7829
  %7 = load %union.tree_node*, %union.tree_node** %type51, align 8, !dbg !7829
  %call52 = tail call %union.tree_node* @fold_binary_loc(i32 0, i32 %bf.clear50, %union.tree_node* %7, %union.tree_node* %naryop0.1, %union.tree_node* %naryop1.1) #6, !dbg !7829
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !7752, metadata !DIExpression()), !dbg !7805
  %tobool53 = icmp eq %union.tree_node* %call52, null, !dbg !7830
  br i1 %tobool53, label %return, label %land.lhs.true54, !dbg !7832

land.lhs.true54:                                  ; preds = %if.end47
  %call55 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %call52) #6, !dbg !7833
  %tobool56 = icmp eq i8 %call55, 0, !dbg !7833
  br i1 %tobool56, label %return, label %if.then57, !dbg !7834

if.then57:                                        ; preds = %land.lhs.true54
  %call58 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_constant(%union.tree_node* nonnull %call52) #7, !dbg !7835
  br label %return, !dbg !7836

sw.bb62:                                          ; preds = %sw.bb1
  %cmp66 = icmp eq i32 %bf.clear, 43, !dbg !7837
  br i1 %cmp66, label %do_unary, label %land.lhs.true68, !dbg !7839

land.lhs.true68:                                  ; preds = %sw.bb62
  %cmp72 = icmp eq i32 %bf.clear, 44, !dbg !7840
  br i1 %cmp72, label %do_unary, label %land.lhs.true74, !dbg !7841

land.lhs.true74:                                  ; preds = %land.lhs.true68
  %cmp78 = icmp eq i32 %bf.clear, 118, !dbg !7842
  br i1 %cmp78, label %do_unary, label %return, !dbg !7843

do_unary:                                         ; preds = %land.lhs.true74, %land.lhs.true68, %sw.bb62, %sw.bb1, %sw.bb3
  call void @llvm.dbg.label(metadata !7786), !dbg !7844
  %arrayidx85 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %1, i64 0, i32 5, i64 0, !dbg !7845
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx85, align 8, !dbg !7845
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7763, metadata !DIExpression()), !dbg !7846
  %call88 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %8) #6, !dbg !7847
  %tobool89 = icmp eq i8 %call88, 0, !dbg !7847
  br i1 %tobool89, label %if.else, label %if.end96, !dbg !7848

if.else:                                          ; preds = %do_unary
  %call92 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %8) #7, !dbg !7849
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call92, metadata !7767, metadata !DIExpression()), !dbg !7850
  %call94 = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call92) #7, !dbg !7851
  call void @llvm.dbg.value(metadata i32 %call94, metadata !7770, metadata !DIExpression()), !dbg !7850
  %call95 = tail call fastcc %union.tree_node* @get_constant_for_value_id(i32 %call94) #7, !dbg !7852
  call void @llvm.dbg.value(metadata %union.tree_node* %call95, metadata !7765, metadata !DIExpression()), !dbg !7846
  br label %if.end96

if.end96:                                         ; preds = %do_unary, %if.else
  %const086.0 = phi %union.tree_node* [ %call95, %if.else ], [ %8, %do_unary ], !dbg !7853
  call void @llvm.dbg.value(metadata %union.tree_node* %const086.0, metadata !7765, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7766, metadata !DIExpression()), !dbg !7846
  %tobool97 = icmp eq %union.tree_node* %const086.0, null, !dbg !7854
  br i1 %tobool97, label %if.end109, label %if.then98, !dbg !7855

if.then98:                                        ; preds = %if.end96
  %9 = bitcast %union.tree_node** %arrayidx85 to %struct.tree_common**, !dbg !7856
  %10 = load %struct.tree_common*, %struct.tree_common** %9, align 8, !dbg !7856
  %type102 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i64 0, i32 2, !dbg !7856
  %11 = load %union.tree_node*, %union.tree_node** %type102, align 8, !dbg !7856
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !7771, metadata !DIExpression()), !dbg !7857
  %call103 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %11, %union.tree_node* nonnull %const086.0) #6, !dbg !7858
  call void @llvm.dbg.value(metadata %union.tree_node* %call103, metadata !7765, metadata !DIExpression()), !dbg !7846
  %bf.load105 = load i32, i32* %opcode, align 4, !dbg !7859
  %bf.clear106 = and i32 %bf.load105, 65535, !dbg !7859
  %type107 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %1, i64 0, i32 4, !dbg !7859
  %12 = load %union.tree_node*, %union.tree_node** %type107, align 8, !dbg !7859
  %call108 = tail call %union.tree_node* @fold_unary_loc(i32 0, i32 %bf.clear106, %union.tree_node* %12, %union.tree_node* %call103) #6, !dbg !7859
  call void @llvm.dbg.value(metadata %union.tree_node* %call108, metadata !7766, metadata !DIExpression()), !dbg !7846
  br label %if.end109, !dbg !7860

if.end109:                                        ; preds = %if.end96, %if.then98
  %result87.0 = phi %union.tree_node* [ %call108, %if.then98 ], [ null, %if.end96 ], !dbg !7846
  call void @llvm.dbg.value(metadata %union.tree_node* %result87.0, metadata !7766, metadata !DIExpression()), !dbg !7846
  %tobool110 = icmp eq %union.tree_node* %result87.0, null, !dbg !7861
  br i1 %tobool110, label %return, label %land.lhs.true111, !dbg !7863

land.lhs.true111:                                 ; preds = %if.end109
  %call112 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %result87.0) #6, !dbg !7864
  %tobool114 = icmp eq i8 %call112, 0, !dbg !7864
  br i1 %tobool114, label %return, label %if.then115, !dbg !7865

if.then115:                                       ; preds = %land.lhs.true111
  %call116 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_constant(%union.tree_node* nonnull %result87.0) #7, !dbg !7866
  br label %return, !dbg !7867

sw.bb122:                                         ; preds = %entry
  %u123 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %e, i64 0, i32 2, !dbg !7868
  %reference = bitcast %union.pre_expr_union_d* %u123 to %struct.vn_reference_s**, !dbg !7868
  %13 = load %struct.vn_reference_s*, %struct.vn_reference_s** %reference, align 8, !dbg !7868
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %13, metadata !7774, metadata !DIExpression()), !dbg !7869
  %operands124 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %13, i64 0, i32 5, !dbg !7870
  %14 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands124, align 8, !dbg !7870
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %14, metadata !7776, metadata !DIExpression()), !dbg !7869
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %14, i64 0, i32 0, !dbg !7871
  %call127 = tail call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %base, i32 0) #7, !dbg !7871
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call127, metadata !7777, metadata !DIExpression()), !dbg !7869
  %opcode128 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call127, i64 0, i32 0, !dbg !7872
  %15 = load i32, i32* %opcode128, align 8, !dbg !7872
  %cmp129 = icmp eq i32 %15, 59, !dbg !7873
  br i1 %cmp129, label %land.lhs.true131, label %if.end279, !dbg !7874

land.lhs.true131:                                 ; preds = %sw.bb122
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call127, i64 0, i32 2, !dbg !7875
  %16 = bitcast %union.tree_node** %op0 to i64**, !dbg !7875
  %17 = load i64*, i64** %16, align 8, !dbg !7875
  %bf.load133 = load i64, i64* %17, align 8, !dbg !7875
  %bf.cast3 = and i64 %bf.load133, 65535, !dbg !7876
  %cmp135 = icmp eq i64 %bf.cast3, 121, !dbg !7876
  br i1 %cmp135, label %land.lhs.true137, label %if.end279, !dbg !7877

land.lhs.true137:                                 ; preds = %land.lhs.true131
  %18 = bitcast %union.tree_node** %op0 to %struct.tree_exp**, !dbg !7878
  %arrayidx140 = getelementptr inbounds i64, i64* %17, i64 5, !dbg !7878
  %19 = bitcast i64* %arrayidx140 to i64**, !dbg !7878
  %20 = load i64*, i64** %19, align 8, !dbg !7878
  %bf.load142 = load i64, i64* %20, align 8, !dbg !7878
  %bf.cast1444 = and i64 %bf.load142, 65535, !dbg !7879
  %cmp145 = icmp eq i64 %bf.cast1444, 29, !dbg !7879
  br i1 %cmp145, label %land.lhs.true147, label %if.end279, !dbg !7880

land.lhs.true147:                                 ; preds = %land.lhs.true137
  %built_in_class = getelementptr inbounds i64, i64* %20, i64 27, !dbg !7881
  %21 = bitcast i64* %built_in_class to i32*, !dbg !7881
  %bf.load152 = load i32, i32* %21, align 8, !dbg !7881
  %bf.clear153 = and i32 %bf.load152, 6144, !dbg !7881
  %cmp154 = icmp eq i32 %bf.clear153, 0, !dbg !7881
  br i1 %cmp154, label %if.end279, label %land.lhs.true156, !dbg !7882

land.lhs.true156:                                 ; preds = %land.lhs.true147
  %call163 = tail call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base) #7, !dbg !7883
  %cmp164 = icmp ugt i32 %call163, 1, !dbg !7884
  br i1 %cmp164, label %land.lhs.true166, label %if.end279, !dbg !7885

land.lhs.true166:                                 ; preds = %land.lhs.true156
  %call173 = tail call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base) #7, !dbg !7886
  %cmp174 = icmp ult i32 %call173, 4, !dbg !7887
  br i1 %cmp174, label %if.then176, label %if.end279, !dbg !7888

if.then176:                                       ; preds = %land.lhs.true166
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* null, metadata !7781, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i8 0, metadata !7782, metadata !DIExpression()), !dbg !7889
  %call183 = tail call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %base, i32 1) #7, !dbg !7890
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call183, metadata !7778, metadata !DIExpression()), !dbg !7889
  %call190 = tail call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base) #7, !dbg !7891
  %cmp191 = icmp ugt i32 %call190, 2, !dbg !7893
  br i1 %cmp191, label %if.then193, label %if.end201, !dbg !7894

if.then193:                                       ; preds = %if.then176
  %call200 = tail call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %base, i32 2) #7, !dbg !7895
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call200, metadata !7781, metadata !DIExpression()), !dbg !7889
  br label %if.end201, !dbg !7896

if.end201:                                        ; preds = %if.then193, %if.then176
  %arg1.0 = phi %struct.vn_reference_op_struct* [ %call200, %if.then193 ], [ null, %if.then176 ], !dbg !7889
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %arg1.0, metadata !7781, metadata !DIExpression()), !dbg !7889
  %opcode202 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call183, i64 0, i32 0, !dbg !7897
  %22 = load i32, i32* %opcode202, align 8, !dbg !7897
  %idxprom203 = sext i32 %22 to i64, !dbg !7897
  %arrayidx204 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom203, !dbg !7897
  %23 = load i32, i32* %arrayidx204, align 4, !dbg !7897
  %cmp205 = icmp eq i32 %23, 1, !dbg !7899
  br i1 %cmp205, label %if.then215, label %lor.lhs.false, !dbg !7900

lor.lhs.false:                                    ; preds = %if.end201
  %cmp208 = icmp eq i32 %22, 121, !dbg !7901
  br i1 %cmp208, label %land.lhs.true210, label %if.end216, !dbg !7902

land.lhs.true210:                                 ; preds = %lor.lhs.false
  %op0211 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call183, i64 0, i32 2, !dbg !7903
  %24 = load %union.tree_node*, %union.tree_node** %op0211, align 8, !dbg !7903
  %call212 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %24) #6, !dbg !7904
  %tobool214 = icmp eq i8 %call212, 0, !dbg !7904
  br i1 %tobool214, label %if.end216, label %if.then215, !dbg !7905

if.then215:                                       ; preds = %land.lhs.true210, %if.end201
  call void @llvm.dbg.value(metadata i8 1, metadata !7782, metadata !DIExpression()), !dbg !7889
  br label %if.end216, !dbg !7906

if.end216:                                        ; preds = %land.lhs.true210, %if.then215, %lor.lhs.false
  %anyconst.0 = phi i8 [ 1, %if.then215 ], [ 0, %land.lhs.true210 ], [ 0, %lor.lhs.false ], !dbg !7889
  call void @llvm.dbg.value(metadata i8 %anyconst.0, metadata !7782, metadata !DIExpression()), !dbg !7889
  %tobool217 = icmp eq %struct.vn_reference_op_struct* %arg1.0, null, !dbg !7907
  br i1 %tobool217, label %if.end234, label %land.lhs.true218, !dbg !7909

land.lhs.true218:                                 ; preds = %if.end216
  %opcode219 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %arg1.0, i64 0, i32 0, !dbg !7910
  %25 = load i32, i32* %opcode219, align 8, !dbg !7910
  %idxprom220 = sext i32 %25 to i64, !dbg !7910
  %arrayidx221 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom220, !dbg !7910
  %26 = load i32, i32* %arrayidx221, align 4, !dbg !7910
  %cmp222 = icmp eq i32 %26, 1, !dbg !7911
  br i1 %cmp222, label %if.then233, label %lor.lhs.false224, !dbg !7912

lor.lhs.false224:                                 ; preds = %land.lhs.true218
  %cmp226 = icmp eq i32 %25, 121, !dbg !7913
  br i1 %cmp226, label %land.lhs.true228, label %if.end234, !dbg !7914

land.lhs.true228:                                 ; preds = %lor.lhs.false224
  %op0229 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %arg1.0, i64 0, i32 2, !dbg !7915
  %27 = load %union.tree_node*, %union.tree_node** %op0229, align 8, !dbg !7915
  %call230 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %27) #6, !dbg !7916
  %tobool232 = icmp eq i8 %call230, 0, !dbg !7916
  br i1 %tobool232, label %if.end234, label %if.then233, !dbg !7917

if.then233:                                       ; preds = %land.lhs.true228, %land.lhs.true218
  call void @llvm.dbg.value(metadata i8 1, metadata !7782, metadata !DIExpression()), !dbg !7889
  br label %if.end234, !dbg !7918

if.end234:                                        ; preds = %land.lhs.true228, %if.end216, %if.then233, %lor.lhs.false224
  %anyconst.1 = phi i8 [ 1, %if.then233 ], [ %anyconst.0, %land.lhs.true228 ], [ %anyconst.0, %lor.lhs.false224 ], [ %anyconst.0, %if.end216 ], !dbg !7889
  call void @llvm.dbg.value(metadata i8 %anyconst.1, metadata !7782, metadata !DIExpression()), !dbg !7889
  %tobool235 = icmp eq i8 %anyconst.1, 0, !dbg !7919
  br i1 %tobool235, label %if.end273, label %if.then236, !dbg !7920

if.then236:                                       ; preds = %if.end234
  %28 = load %struct.tree_exp*, %struct.tree_exp** %18, align 8, !dbg !7921
  %arrayidx240 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %28, i64 0, i32 3, i64 0, !dbg !7921
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx240, align 8, !dbg !7921
  %cond242 = select i1 %tobool217, i32 1, i32 2, !dbg !7921
  %op0243 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call183, i64 0, i32 2, !dbg !7921
  %30 = load %union.tree_node*, %union.tree_node** %op0243, align 8, !dbg !7921
  br i1 %tobool217, label %cond.end248, label %cond.true245, !dbg !7921

cond.true245:                                     ; preds = %if.then236
  %op0246 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %arg1.0, i64 0, i32 2, !dbg !7921
  %31 = load %union.tree_node*, %union.tree_node** %op0246, align 8, !dbg !7921
  br label %cond.end248, !dbg !7921

cond.end248:                                      ; preds = %if.then236, %cond.true245
  %cond249 = phi %union.tree_node* [ %31, %cond.true245 ], [ null, %if.then236 ], !dbg !7921
  %call250 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 0, %union.tree_node* %29, i32 %cond242, %union.tree_node* %30, %union.tree_node* %cond249) #6, !dbg !7921
  call void @llvm.dbg.value(metadata %union.tree_node* %call250, metadata !7783, metadata !DIExpression()), !dbg !7922
  %tobool251 = icmp eq %union.tree_node* %call250, null, !dbg !7923
  br i1 %tobool251, label %if.end263, label %land.lhs.true252, !dbg !7925

land.lhs.true252:                                 ; preds = %cond.end248
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call250, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7926
  %bf.load254 = load i64, i64* %32, align 8, !dbg !7926
  %bf.cast2565 = and i64 %bf.load254, 65535, !dbg !7927
  %cmp257 = icmp eq i64 %bf.cast2565, 116, !dbg !7927
  br i1 %cmp257, label %if.then259, label %if.end263, !dbg !7928

if.then259:                                       ; preds = %land.lhs.true252
  %operands261 = getelementptr inbounds %union.tree_node, %union.tree_node* %call250, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7929
  %33 = load %union.tree_node*, %union.tree_node** %operands261, align 8, !dbg !7929
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !7783, metadata !DIExpression()), !dbg !7922
  br label %if.end263, !dbg !7930

if.end263:                                        ; preds = %cond.end248, %if.then259, %land.lhs.true252
  %folded.0 = phi %union.tree_node* [ %33, %if.then259 ], [ %call250, %land.lhs.true252 ], [ null, %cond.end248 ], !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %folded.0, metadata !7783, metadata !DIExpression()), !dbg !7922
  %tobool264 = icmp eq %union.tree_node* %folded.0, null, !dbg !7931
  br i1 %tobool264, label %cleanup272, label %land.lhs.true265, !dbg !7933

land.lhs.true265:                                 ; preds = %if.end263
  %call266 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %folded.0) #6, !dbg !7934
  %tobool268 = icmp eq i8 %call266, 0, !dbg !7934
  br i1 %tobool268, label %cleanup272, label %if.then269, !dbg !7935

if.then269:                                       ; preds = %land.lhs.true265
  %call270 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_constant(%union.tree_node* nonnull %folded.0) #7, !dbg !7936
  br label %cleanup272, !dbg !7937

cleanup272:                                       ; preds = %land.lhs.true265, %if.end263, %if.then269
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then269 ], [ 0, %land.lhs.true265 ], [ 0, %if.end263 ]
  %retval.3 = phi %struct.pre_expr_d* [ %call270, %if.then269 ], [ undef, %land.lhs.true265 ], [ undef, %if.end263 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %if.end273, label %cleanup274

if.end273:                                        ; preds = %if.end234, %cleanup272
  %retval.4 = phi %struct.pre_expr_d* [ undef, %if.end234 ], [ %retval.3, %cleanup272 ]
  br label %cleanup274, !dbg !7938

cleanup274:                                       ; preds = %cleanup272, %if.end273
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup272 ], [ 0, %if.end273 ]
  %retval.5 = phi %struct.pre_expr_d* [ %retval.3, %cleanup272 ], [ %retval.4, %if.end273 ], !dbg !7937
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %if.end279, label %return

if.end279:                                        ; preds = %land.lhs.true147, %cleanup274, %land.lhs.true166, %land.lhs.true156, %land.lhs.true137, %land.lhs.true131, %sw.bb122
  br label %return, !dbg !7939

return:                                           ; preds = %land.lhs.true15, %land.lhs.true54, %if.end47, %land.lhs.true74, %land.lhs.true111, %if.end109, %entry, %if.end279, %cleanup274, %if.then57, %if.then115, %sw.bb1
  %retval.7 = phi %struct.pre_expr_d* [ %e, %land.lhs.true15 ], [ %call58, %if.then57 ], [ %e, %land.lhs.true54 ], [ %e, %if.end47 ], [ %e, %land.lhs.true74 ], [ %call116, %if.then115 ], [ %e, %land.lhs.true111 ], [ %e, %if.end109 ], [ %e, %sw.bb1 ], [ %retval.5, %cleanup274 ], [ %e, %if.end279 ], [ %e, %entry ], !dbg !7940
  ret %struct.pre_expr_d* %retval.7, !dbg !7941
}

declare dso_local i32 @get_next_value_id() local_unnamed_addr #2

declare dso_local %struct.vn_nary_op_s* @vn_nary_op_insert_pieces(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_vn_reference_op_s_heap* @VEC_vn_reference_op_s_heap_copy(%struct.VEC_vn_reference_op_s_base* %vec_) unnamed_addr #0 !dbg !7942 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !7946, metadata !DIExpression()), !dbg !7949
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_base* %vec_, null, !dbg !7950
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7950

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 0, !dbg !7950
  %0 = load i32, i32* %num, align 8, !dbg !7950
  %phitmp = zext i32 %0 to i64, !dbg !7950
  br label %cond.end, !dbg !7950

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i64 %cond, metadata !7947, metadata !DIExpression()), !dbg !7949
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* null, metadata !7948, metadata !DIExpression()), !dbg !7949
  %tobool1 = icmp eq i64 %cond, 0, !dbg !7951
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7950

if.then:                                          ; preds = %cond.end
  %conv2 = trunc i64 %cond to i32, !dbg !7953
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %conv2, i64 8, i64 40) #6, !dbg !7953
  %1 = bitcast i8* %call to %struct.VEC_vn_reference_op_s_heap*, !dbg !7953
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %1, metadata !7948, metadata !DIExpression()), !dbg !7949
  %num4 = bitcast i8* %call to i32*, !dbg !7953
  store i32 %conv2, i32* %num4, align 8, !dbg !7953
  %vec = getelementptr inbounds i8, i8* %call, i64 8, !dbg !7953
  %arraydecay7 = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 2, i64 0, !dbg !7953
  %2 = bitcast %struct.vn_reference_op_struct* %arraydecay7 to i8*, !dbg !7953
  %mul = mul nuw nsw i64 %cond, 40, !dbg !7953
  %call8 = tail call i8* @memcpy(i8* nonnull %vec, i8* nonnull %2, i64 %mul) #6, !dbg !7953
  br label %if.end, !dbg !7953

if.end:                                           ; preds = %cond.end, %if.then
  %new_vec_.0 = phi %struct.VEC_vn_reference_op_s_heap* [ %1, %if.then ], [ null, %cond.end ], !dbg !7949
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %new_vec_.0, metadata !7948, metadata !DIExpression()), !dbg !7949
  ret %struct.VEC_vn_reference_op_s_heap* %new_vec_.0, !dbg !7950
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_replace(%struct.VEC_vn_reference_op_s_base* %vec_, i32 %ix_, %struct.vn_reference_op_struct* %obj_) unnamed_addr #0 !dbg !7955 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !7961, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7962, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %obj_, metadata !7963, metadata !DIExpression()), !dbg !7965
  %idxprom = zext i32 %ix_ to i64, !dbg !7966
  %arrayidx = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7966
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %arrayidx, metadata !7964, metadata !DIExpression()), !dbg !7965
  %tobool = icmp eq %struct.vn_reference_op_struct* %obj_, null, !dbg !7967
  br i1 %tobool, label %if.end, label %if.then, !dbg !7966

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.vn_reference_op_struct* %arrayidx to i8*, !dbg !7967
  %1 = bitcast %struct.vn_reference_op_struct* %obj_ to i8*, !dbg !7967
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 40, i1 false), !dbg !7967
  br label %if.end, !dbg !7967

if.end:                                           ; preds = %entry, %if.then
  ret %struct.vn_reference_op_struct* %arrayidx, !dbg !7966
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !7969 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !7973, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7974, metadata !DIExpression()), !dbg !7975
  br label %land.end, !dbg !7976

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !7976
  %arrayidx = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7976
  ret %struct.vn_reference_op_struct* %arrayidx, !dbg !7976
}

declare dso_local void @vn_reference_fold_indirect(%struct.VEC_vn_reference_op_s_heap**, i32*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @translate_vuse_through_block(%struct.VEC_vn_reference_op_s_heap* %operands, i32 %set, %union.tree_node* %type, %union.tree_node* %vuse, %struct.basic_block_def* %phiblock, %struct.basic_block_def* %block, i8* %same_valid) unnamed_addr #5 !dbg !7977 {
entry:
  %ref = alloca %struct.ao_ref_s, align 8
  %visited = alloca %struct.bitmap_head_def*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %operands, metadata !7981, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata i32 %set, metadata !7982, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7983, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %union.tree_node* %vuse, metadata !7984, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %phiblock, metadata !7985, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !7986, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata i8* %same_valid, metadata !7987, metadata !DIExpression()), !dbg !8007
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %vuse, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8008
  %0 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !8008
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !8008
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !7988, metadata !DIExpression()), !dbg !8007
  %2 = bitcast %struct.ao_ref_s* %ref to i8*, !dbg !8009
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %2) #8, !dbg !8009
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !8000, metadata !DIExpression()), !dbg !8007
  store i8 1, i8* %same_valid, align 1, !dbg !8010
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %1) #7, !dbg !8011
  %cmp = icmp eq %struct.basic_block_def* %call, %phiblock, !dbg !8013
  br i1 %cmp, label %if.end, label %cleanup, !dbg !8014

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ref, metadata !7989, metadata !DIExpression(DW_OP_deref)), !dbg !8007
  %call1 = call zeroext i8 @ao_ref_init_from_vn_reference(%struct.ao_ref_s* nonnull %ref, i32 %set, %union.tree_node* %type, %struct.VEC_vn_reference_op_s_heap* %operands) #6, !dbg !8015
  call void @llvm.dbg.value(metadata i8 %call1, metadata !8001, metadata !DIExpression()), !dbg !8007
  %call2 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %1) #7, !dbg !8016
  %cmp3 = icmp eq i32 %call2, 16, !dbg !8018
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !8019

if.then4:                                         ; preds = %if.end
  %call5 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %block, %struct.basic_block_def* %phiblock) #6, !dbg !8020
  call void @llvm.dbg.value(metadata %struct.edge_def* %call5, metadata !8000, metadata !DIExpression()), !dbg !8007
  br label %if.end23, !dbg !8021

if.else:                                          ; preds = %if.end
  %tobool = icmp eq i8 %call1, 0, !dbg !8022
  br i1 %tobool, label %cleanup, label %while.cond.preheader, !dbg !8024

while.cond.preheader:                             ; preds = %if.else
  br label %while.cond, !dbg !8025

while.cond:                                       ; preds = %while.cond.preheader, %if.end15
  %phi.0 = phi %union.gimple_statement_d* [ %4, %if.end15 ], [ %1, %while.cond.preheader ], !dbg !8007
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi.0, metadata !7988, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ref, metadata !7989, metadata !DIExpression(DW_OP_deref)), !dbg !8007
  %call7 = call zeroext i8 @stmt_may_clobber_ref_p_1(%union.gimple_statement_d* %phi.0, %struct.ao_ref_s* nonnull %ref) #6, !dbg !8026
  %tobool8 = icmp eq i8 %call7, 0, !dbg !8027
  br i1 %tobool8, label %while.body, label %if.end23.loopexit, !dbg !8025

while.body:                                       ; preds = %while.cond
  %call9 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %phi.0) #7, !dbg !8028
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !7984, metadata !DIExpression()), !dbg !8007
  %def_stmt11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8030
  %3 = bitcast %union.tree_node** %def_stmt11 to %union.gimple_statement_d**, !dbg !8030
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %3, align 8, !dbg !8030
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %4, metadata !7988, metadata !DIExpression()), !dbg !8007
  %call12 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %4) #7, !dbg !8031
  %cmp13 = icmp eq %struct.basic_block_def* %call12, %phiblock, !dbg !8033
  br i1 %cmp13, label %if.end15, label %cleanup.loopexit, !dbg !8034

if.end15:                                         ; preds = %while.body
  %call16 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %4) #7, !dbg !8035
  %cmp17 = icmp eq i32 %call16, 16, !dbg !8037
  br i1 %cmp17, label %if.then18, label %while.cond, !dbg !8038, !llvm.loop !8039

if.then18:                                        ; preds = %if.end15
  %.lcssa11 = phi %union.gimple_statement_d* [ %4, %if.end15 ], !dbg !8030
  %call19 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %block, %struct.basic_block_def* %phiblock) #6, !dbg !8041
  call void @llvm.dbg.value(metadata %struct.edge_def* %call19, metadata !8000, metadata !DIExpression()), !dbg !8007
  br label %if.end23, !dbg !8043

if.end23.loopexit:                                ; preds = %while.cond
  %phi.0.lcssa = phi %union.gimple_statement_d* [ %phi.0, %while.cond ], !dbg !8007
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi.0.lcssa, metadata !7988, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi.0.lcssa, metadata !7988, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi.0.lcssa, metadata !7988, metadata !DIExpression()), !dbg !8007
  br label %if.end23, !dbg !8044

if.end23:                                         ; preds = %if.end23.loopexit, %if.then18, %if.then4
  %phi.2 = phi %union.gimple_statement_d* [ %1, %if.then4 ], [ %.lcssa11, %if.then18 ], [ %phi.0.lcssa, %if.end23.loopexit ], !dbg !8007
  %e.1 = phi %struct.edge_def* [ %call5, %if.then4 ], [ %call19, %if.then18 ], [ null, %if.end23.loopexit ], !dbg !8045
  call void @llvm.dbg.value(metadata %struct.edge_def* %e.1, metadata !8000, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi.2, metadata !7988, metadata !DIExpression()), !dbg !8007
  %tobool24 = icmp eq %struct.edge_def* %e.1, null, !dbg !8044
  br i1 %tobool24, label %cleanup, label %if.then25, !dbg !8046

if.then25:                                        ; preds = %if.end23
  %tobool26 = icmp eq i8 %call1, 0, !dbg !8047
  br i1 %tobool26, label %if.end33, label %if.then27, !dbg !8048

if.then27:                                        ; preds = %if.then25
  %5 = bitcast %struct.bitmap_head_def** %visited to i8*, !dbg !8049
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !8049
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !8002, metadata !DIExpression()), !dbg !8050
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %visited, align 8, !dbg !8051
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ref, metadata !7989, metadata !DIExpression(DW_OP_deref)), !dbg !8007
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %visited, metadata !8002, metadata !DIExpression(DW_OP_deref)), !dbg !8050
  %call28 = call %union.tree_node* @get_continuation_for_phi(%union.gimple_statement_d* %phi.2, %struct.ao_ref_s* nonnull %ref, %struct.bitmap_head_def** nonnull %visited) #6, !dbg !8052
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !7984, metadata !DIExpression()), !dbg !8007
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %visited, align 8, !dbg !8053
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %6, metadata !8002, metadata !DIExpression()), !dbg !8050
  %tobool29 = icmp eq %struct.bitmap_head_def* %6, null, !dbg !8053
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !8055

if.then30:                                        ; preds = %if.then27
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %6, metadata !8002, metadata !DIExpression()), !dbg !8050
  call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %6) #6, !dbg !8056
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !8002, metadata !DIExpression()), !dbg !8050
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %visited, align 8, !dbg !8056
  br label %if.end31, !dbg !8056

if.end31:                                         ; preds = %if.then27, %if.then30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !8057
  %phitmp = icmp ne %union.tree_node* %call28, null, !dbg !8058
  br label %if.end33, !dbg !8058

if.end33:                                         ; preds = %if.then25, %if.end31
  %vuse.addr.0 = phi i1 [ %phitmp, %if.end31 ], [ false, %if.then25 ]
  br i1 %vuse.addr.0, label %if.end38, label %if.then35, !dbg !8059

if.then35:                                        ; preds = %if.end33
  store i8 0, i8* %same_valid, align 1, !dbg !8060
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e.1, i64 0, i32 6, !dbg !8063
  %7 = load i32, i32* %dest_idx, align 4, !dbg !8063
  %call36 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %phi.2, i32 %7) #7, !dbg !8063
  %call37 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call36) #7, !dbg !8063
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !7984, metadata !DIExpression()), !dbg !8007
  br label %if.end38, !dbg !8064

if.end38:                                         ; preds = %if.then35, %if.end33
  %dest_idx39 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e.1, i64 0, i32 6, !dbg !8065
  %8 = load i32, i32* %dest_idx39, align 4, !dbg !8065
  %call40 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %phi.2, i32 %8) #7, !dbg !8065
  %call41 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call40) #7, !dbg !8065
  br label %cleanup, !dbg !8066

cleanup.loopexit:                                 ; preds = %while.body
  %call9.lcssa = phi %union.tree_node* [ %call9, %while.body ], !dbg !8028
  br label %cleanup, !dbg !8067

cleanup:                                          ; preds = %cleanup.loopexit, %if.end23, %if.else, %entry, %if.end38
  %retval.0 = phi %union.tree_node* [ %call41, %if.end38 ], [ %vuse, %entry ], [ null, %if.else ], [ null, %if.end23 ], [ %call9.lcssa, %cleanup.loopexit ], !dbg !8007
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %2) #8, !dbg !8067
  ret %union.tree_node* %retval.0, !dbg !8067
}

declare dso_local %struct.vn_reference_s* @vn_reference_insert_pieces(%union.tree_node*, i32, %union.tree_node*, %struct.VEC_vn_reference_op_s_heap*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !8068 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !8072, metadata !DIExpression()), !dbg !8073
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !8074
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8074
  ret %struct.basic_block_def* %0, !dbg !8075
}

declare dso_local %struct.edge_def* @find_edge(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.pre_expr_d* @bitmap_find_leader(%struct.bitmap_set* %set, i32 %val, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !8076 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %i16 = alloca i32, align 4
  %bi17 = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !8080, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %val, metadata !8081, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8082, metadata !DIExpression()), !dbg !8104
  %call = tail call zeroext i8 @value_id_constant_p(i32 %val) #6, !dbg !8105
  %tobool = icmp eq i8 %call, 0, !dbg !8105
  br i1 %tobool, label %if.end12, label %if.then, !dbg !8106

if.then:                                          ; preds = %entry
  %0 = bitcast i32* %i to i8*, !dbg !8107
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8107
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !8108
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !8108
  %2 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !8109
  %base = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %2, i64 0, i32 0, !dbg !8109
  %call2 = tail call fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_index(%struct.VEC_bitmap_set_t_base* %base, i32 %val) #7, !dbg !8109
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call2, metadata !8087, metadata !DIExpression()), !dbg !8110
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %call2, i64 0, i32 0, !dbg !8111
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !8111
  call void @llvm.dbg.value(metadata i32* %i, metadata !8083, metadata !DIExpression(DW_OP_deref)), !dbg !8110
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8086, metadata !DIExpression(DW_OP_deref)), !dbg !8110
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %3, i32 0, i32* nonnull %i) #7, !dbg !8111
  br label %for.cond, !dbg !8111

for.cond:                                         ; preds = %for.inc, %if.then
  %retval.0 = phi %struct.pre_expr_d* [ undef, %if.then ], [ %call5.retval.0, %for.inc ]
  call void @llvm.dbg.value(metadata i32* %i, metadata !8083, metadata !DIExpression(DW_OP_deref)), !dbg !8110
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8086, metadata !DIExpression(DW_OP_deref)), !dbg !8110
  %call3 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !8112
  %tobool4 = icmp eq i8 %call3, 0, !dbg !8111
  br i1 %tobool4, label %cleanup7.split.loop.exit5, label %for.body, !dbg !8111

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !8113
  call void @llvm.dbg.value(metadata i32 %4, metadata !8083, metadata !DIExpression()), !dbg !8110
  %call5 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %4) #7, !dbg !8114
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call5, metadata !8088, metadata !DIExpression()), !dbg !8115
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call5, i64 0, i32 0, !dbg !8116
  %5 = load i32, i32* %kind, align 8, !dbg !8116
  %cmp = icmp eq i32 %5, 3, !dbg !8118
  %call5.retval.0 = select i1 %cmp, %struct.pre_expr_d* %call5, %struct.pre_expr_d* %retval.0, !dbg !8119
  br i1 %cmp, label %cleanup7.split.loop.exit, label %for.inc

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32* %i, metadata !8083, metadata !DIExpression(DW_OP_deref)), !dbg !8110
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8086, metadata !DIExpression(DW_OP_deref)), !dbg !8110
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !8112
  br label %for.cond, !dbg !8112, !llvm.loop !8120

cleanup7.split.loop.exit:                         ; preds = %for.body
  %call5.retval.0.lcssa = phi %struct.pre_expr_d* [ %call5.retval.0, %for.body ], !dbg !8119
  br label %cleanup7, !dbg !8122

cleanup7.split.loop.exit5:                        ; preds = %for.cond
  %retval.0.lcssa = phi %struct.pre_expr_d* [ %retval.0, %for.cond ]
  br label %cleanup7, !dbg !8122

cleanup7:                                         ; preds = %cleanup7.split.loop.exit5, %cleanup7.split.loop.exit
  %cleanup.dest.slot.1 = phi i1 [ true, %cleanup7.split.loop.exit ], [ false, %cleanup7.split.loop.exit5 ]
  %retval.2 = phi %struct.pre_expr_d* [ %call5.retval.0.lcssa, %cleanup7.split.loop.exit ], [ %retval.0.lcssa, %cleanup7.split.loop.exit5 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !8122
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8122
  br i1 %cleanup.dest.slot.1, label %return, label %if.end12

if.end12:                                         ; preds = %cleanup7, %entry
  %retval.3 = phi %struct.pre_expr_d* [ undef, %entry ], [ %retval.2, %cleanup7 ]
  %call13 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %set, i32 %val) #7, !dbg !8123
  %tobool14 = icmp eq i8 %call13, 0, !dbg !8123
  br i1 %tobool14, label %if.end61, label %if.then15, !dbg !8124

if.then15:                                        ; preds = %if.end12
  %6 = bitcast i32* %i16 to i8*, !dbg !8125
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8, !dbg !8125
  %7 = bitcast %struct.bitmap_iterator* %bi17 to i8*, !dbg !8126
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8, !dbg !8126
  %8 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !8127
  %base21 = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %8, i64 0, i32 0, !dbg !8127
  %call25 = call fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_index(%struct.VEC_bitmap_set_t_base* %base21, i32 %val) #7, !dbg !8127
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call25, metadata !8096, metadata !DIExpression()), !dbg !8128
  %expressions26 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %call25, i64 0, i32 0, !dbg !8129
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions26, align 8, !dbg !8129
  %expressions27 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 0, !dbg !8129
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions27, align 8, !dbg !8129
  call void @llvm.dbg.value(metadata i32* %i16, metadata !8092, metadata !DIExpression(DW_OP_deref)), !dbg !8128
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi17, metadata !8095, metadata !DIExpression(DW_OP_deref)), !dbg !8128
  call fastcc void @bmp_iter_and_init(%struct.bitmap_iterator* nonnull %bi17, %struct.bitmap_head_def* %9, %struct.bitmap_head_def* %10, i32 0, i32* nonnull %i16) #7, !dbg !8129
  %tobool34 = icmp eq %union.gimple_statement_d* %stmt, null, !dbg !8130
  br i1 %tobool34, label %if.then15.split.us, label %if.then15.if.then15.split_crit_edge, !dbg !8129

if.then15.if.then15.split_crit_edge:              ; preds = %if.then15
  br label %for.cond28, !dbg !8129

if.then15.split.us:                               ; preds = %if.then15
  call void @llvm.dbg.value(metadata i32* %i16, metadata !8092, metadata !DIExpression(DW_OP_deref)), !dbg !8128
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi17, metadata !8095, metadata !DIExpression(DW_OP_deref)), !dbg !8128
  %call29.us = call fastcc zeroext i8 @bmp_iter_and(%struct.bitmap_iterator* nonnull %bi17, i32* nonnull %i16) #7, !dbg !8131
  %tobool30.us = icmp eq i8 %call29.us, 0, !dbg !8129
  br i1 %tobool30.us, label %cleanup56.us-lcssa.us, label %for.body31.us, !dbg !8129

for.body31.us:                                    ; preds = %if.then15.split.us
  %11 = load i32, i32* %i16, align 4, !dbg !8132
  call void @llvm.dbg.value(metadata i32 %11, metadata !8092, metadata !DIExpression()), !dbg !8128
  %call33.us = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %11) #7, !dbg !8133
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call33.us, metadata !8097, metadata !DIExpression()), !dbg !8134
  br label %cleanup56.us-lcssa.us

cleanup56.us-lcssa.us:                            ; preds = %for.body31.us, %if.then15.split.us
  %cleanup.dest.slot.4.ph.us = phi i32 [ 0, %if.then15.split.us ], [ 1, %for.body31.us ]
  %retval.6.ph.us = phi %struct.pre_expr_d* [ %retval.3, %if.then15.split.us ], [ %call33.us, %for.body31.us ]
  br label %cleanup56, !dbg !8135

for.cond28:                                       ; preds = %for.inc54, %if.then15.if.then15.split_crit_edge
  %retval.4 = phi %struct.pre_expr_d* [ %retval.3, %if.then15.if.then15.split_crit_edge ], [ %retval.5, %for.inc54 ], !dbg !8136
  call void @llvm.dbg.value(metadata i32* %i16, metadata !8092, metadata !DIExpression(DW_OP_deref)), !dbg !8128
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi17, metadata !8095, metadata !DIExpression(DW_OP_deref)), !dbg !8128
  %call29 = call fastcc zeroext i8 @bmp_iter_and(%struct.bitmap_iterator* nonnull %bi17, i32* nonnull %i16) #7, !dbg !8131
  %tobool30 = icmp eq i8 %call29, 0, !dbg !8129
  br i1 %tobool30, label %cleanup56.us-lcssa, label %for.body31, !dbg !8129

for.body31:                                       ; preds = %for.cond28
  %12 = load i32, i32* %i16, align 4, !dbg !8132
  call void @llvm.dbg.value(metadata i32 %12, metadata !8092, metadata !DIExpression()), !dbg !8128
  %call33 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %12) #7, !dbg !8133
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call33, metadata !8097, metadata !DIExpression()), !dbg !8134
  %name = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call33, i64 0, i32 2, i32 0, !dbg !8137
  %13 = bitcast %union.tree_node** %name to %struct.tree_ssa_name**, !dbg !8137
  %14 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %13, align 8, !dbg !8137
  %def_stmt36 = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %14, i64 0, i32 2, !dbg !8137
  %15 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt36, align 8, !dbg !8137
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %15, metadata !8101, metadata !DIExpression()), !dbg !8138
  %call37 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %15) #7, !dbg !8139
  %cmp38 = icmp eq i32 %call37, 16, !dbg !8141
  br i1 %cmp38, label %if.end47, label %land.lhs.true, !dbg !8142

land.lhs.true:                                    ; preds = %for.body31
  %call39 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %15) #7, !dbg !8143
  %call40 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %stmt) #7, !dbg !8144
  %cmp41 = icmp eq %struct.basic_block_def* %call39, %call40, !dbg !8145
  br i1 %cmp41, label %land.lhs.true42, label %if.end47, !dbg !8146

land.lhs.true42:                                  ; preds = %land.lhs.true
  %call43 = call fastcc i32 @gimple_uid(%union.gimple_statement_d* %15) #7, !dbg !8147
  %call44 = call fastcc i32 @gimple_uid(%union.gimple_statement_d* nonnull %stmt) #7, !dbg !8148
  %cmp45 = icmp ult i32 %call43, %call44, !dbg !8149
  br i1 %cmp45, label %if.end47, label %cleanup48, !dbg !8150

if.end47:                                         ; preds = %land.lhs.true42, %for.body31, %land.lhs.true
  br label %cleanup48, !dbg !8151

cleanup48:                                        ; preds = %land.lhs.true42, %if.end47
  %cleanup.dest.slot.2 = phi i32 [ 0, %if.end47 ], [ 7, %land.lhs.true42 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond2, label %if.end51, label %cleanup52

if.end51:                                         ; preds = %cleanup48
  br label %cleanup52, !dbg !8152

cleanup52:                                        ; preds = %cleanup48, %if.end51
  %cleanup.dest.slot.3 = phi i32 [ %cleanup.dest.slot.2, %cleanup48 ], [ 1, %if.end51 ]
  %retval.5 = phi %struct.pre_expr_d* [ %retval.4, %cleanup48 ], [ %call33, %if.end51 ], !dbg !8104
  %cond1 = icmp eq i32 %cleanup.dest.slot.3, 7
  br i1 %cond1, label %for.inc54, label %cleanup56.us-lcssa

for.inc54:                                        ; preds = %cleanup52
  call void @llvm.dbg.value(metadata i32* %i16, metadata !8092, metadata !DIExpression(DW_OP_deref)), !dbg !8128
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi17, metadata !8095, metadata !DIExpression(DW_OP_deref)), !dbg !8128
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi17, i32* nonnull %i16) #7, !dbg !8131
  br label %for.cond28, !dbg !8131, !llvm.loop !8153

cleanup56.us-lcssa:                               ; preds = %cleanup52, %for.cond28
  %cleanup.dest.slot.4.ph = phi i32 [ 0, %for.cond28 ], [ %cleanup.dest.slot.3, %cleanup52 ]
  %retval.6.ph = phi %struct.pre_expr_d* [ %retval.4, %for.cond28 ], [ %retval.5, %cleanup52 ]
  br label %cleanup56, !dbg !8135

cleanup56:                                        ; preds = %cleanup56.us-lcssa.us, %cleanup56.us-lcssa
  %cleanup.dest.slot.4 = phi i32 [ %cleanup.dest.slot.4.ph, %cleanup56.us-lcssa ], [ %cleanup.dest.slot.4.ph.us, %cleanup56.us-lcssa.us ]
  %retval.6 = phi %struct.pre_expr_d* [ %retval.6.ph, %cleanup56.us-lcssa ], [ %retval.6.ph.us, %cleanup56.us-lcssa.us ], !dbg !8136
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8, !dbg !8135
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8, !dbg !8135
  %switch4 = icmp eq i32 %cleanup.dest.slot.4, 0
  br i1 %switch4, label %if.end61, label %return

if.end61:                                         ; preds = %if.end12, %cleanup56
  br label %return, !dbg !8155

return:                                           ; preds = %cleanup7, %cleanup56, %if.end61
  %retval.7 = phi %struct.pre_expr_d* [ %retval.2, %cleanup7 ], [ %retval.6, %cleanup56 ], [ null, %if.end61 ], !dbg !8104
  ret %struct.pre_expr_d* %retval.7, !dbg !8156
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %set, i32 %value_id) unnamed_addr #5 !dbg !8157 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !8161, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32 %value_id, metadata !8162, metadata !DIExpression()), !dbg !8163
  %call = tail call zeroext i8 @value_id_constant_p(i32 %value_id) #6, !dbg !8164
  %tobool = icmp eq i8 %call, 0, !dbg !8164
  br i1 %tobool, label %if.end, label %return, !dbg !8166

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq %struct.bitmap_set* %set, null, !dbg !8167
  br i1 %tobool1, label %return, label %lor.lhs.false, !dbg !8169

lor.lhs.false:                                    ; preds = %if.end
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 0, !dbg !8170
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !8170
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %0, i64 0, i32 0, !dbg !8170
  %1 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !8170
  %tobool2 = icmp eq %struct.bitmap_element_def* %1, null, !dbg !8170
  br i1 %tobool2, label %return, label %if.end4, !dbg !8171

if.end4:                                          ; preds = %lor.lhs.false
  %values = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 1, !dbg !8172
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !8172
  %call5 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %value_id) #6, !dbg !8173
  %conv = trunc i32 %call5 to i8, !dbg !8173
  br label %return, !dbg !8174

return:                                           ; preds = %lor.lhs.false, %if.end, %entry, %if.end4
  %retval.0 = phi i8 [ %conv, %if.end4 ], [ 1, %entry ], [ 0, %lor.lhs.false ], [ 0, %if.end ], !dbg !8163
  ret i8 %retval.0, !dbg !8175
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_and_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map1, %struct.bitmap_head_def* %map2, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !8176 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8180, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map1, metadata !8181, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map2, metadata !8182, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata i32 0, metadata !8183, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !8184, metadata !DIExpression()), !dbg !8185
  %0 = bitcast %struct.bitmap_head_def* %map1 to i64*, !dbg !8186
  %1 = load i64, i64* %0, align 8, !dbg !8186
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !8187
  store i64 %1, i64* %2, align 8, !dbg !8187
  %3 = bitcast %struct.bitmap_head_def* %map2 to i64*, !dbg !8188
  %4 = load i64, i64* %3, align 8, !dbg !8188
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !8189
  %5 = bitcast %struct.bitmap_element_def** %elt2 to i64*, !dbg !8190
  store i64 %4, i64* %5, align 8, !dbg !8190
  %elt12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !8191
  %6 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !8194
  %7 = inttoptr i64 %4 to %struct.bitmap_element_def*, !dbg !8194
  %8 = inttoptr i64 %4 to i64*, !dbg !8194
  br label %while.body, !dbg !8194

while.body:                                       ; preds = %entry, %if.end6
  %tobool = icmp eq i64 %1, 0, !dbg !8195
  br i1 %tobool, label %if.then, label %if.end, !dbg !8196

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !8197
  br label %while.end, !dbg !8199

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end6, label %while.end.loopexit, !dbg !8200

if.end6:                                          ; preds = %if.end
  br label %while.body, !dbg !8194, !llvm.loop !8201

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !8203

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %9 = phi %struct.bitmap_element_def* [ %7, %while.end.loopexit ], [ null, %if.then ]
  %10 = phi %struct.bitmap_element_def* [ %7, %while.end.loopexit ], [ null, %if.then ]
  %11 = phi i64* [ %8, %while.end.loopexit ], [ null, %if.then ]
  %12 = phi %struct.bitmap_element_def* [ %7, %while.end.loopexit ], [ null, %if.then ]
  %13 = phi %struct.bitmap_element_def* [ %7, %while.end.loopexit ], [ null, %if.then ]
  br label %while.body9, !dbg !8203

while.body9:                                      ; preds = %while.end, %if.end22
  %14 = phi %struct.bitmap_element_def* [ %9, %while.end ], [ %22, %if.end22 ]
  %15 = phi %struct.bitmap_element_def* [ %10, %while.end ], [ %22, %if.end22 ]
  %16 = phi i64* [ %11, %while.end ], [ %23, %if.end22 ]
  %17 = phi %struct.bitmap_element_def* [ %12, %while.end ], [ %22, %if.end22 ]
  %18 = phi %struct.bitmap_element_def* [ %13, %while.end ], [ %22, %if.end22 ], !dbg !8204
  %tobool11 = icmp eq %struct.bitmap_element_def* %18, null, !dbg !8207
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !8208

if.then12:                                        ; preds = %while.body9
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt2, align 8, !dbg !8209
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt12, align 8, !dbg !8211
  %.pre = load i32, i32* getelementptr inbounds (%struct.bitmap_element_def, %struct.bitmap_element_def* @bitmap_zero_bits, i64 0, i32 2), align 8, !dbg !8212
  br label %while.end26, !dbg !8214

if.end15:                                         ; preds = %while.body9
  %indx17 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %17, i64 0, i32 2, !dbg !8215
  %19 = load i32, i32* %indx17, align 8, !dbg !8215
  %indx19 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !8217
  %20 = load i32, i32* %indx19, align 8, !dbg !8217
  %cmp20 = icmp ult i32 %19, %20, !dbg !8218
  br i1 %cmp20, label %if.end22, label %while.end26.loopexit, !dbg !8219

if.end22:                                         ; preds = %if.end15
  %21 = load i64, i64* %16, align 8, !dbg !8220
  store i64 %21, i64* %5, align 8, !dbg !8221
  %22 = inttoptr i64 %21 to %struct.bitmap_element_def*, !dbg !8203
  %23 = inttoptr i64 %21 to i64*, !dbg !8203
  br label %while.body9, !dbg !8203, !llvm.loop !8222

while.end26.loopexit:                             ; preds = %if.end15
  %.lcssa11 = phi i32 [ %20, %if.end15 ], !dbg !8217
  %.lcssa10 = phi %struct.bitmap_element_def* [ %14, %if.end15 ]
  %.lcssa8 = phi %struct.bitmap_element_def* [ %15, %if.end15 ]
  %indx30.phi.trans.insert = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %.lcssa8, i64 0, i32 2, !dbg !8224
  %.pre2 = load i32, i32* %indx30.phi.trans.insert, align 8, !dbg !8225
  br label %while.end26, !dbg !8226

while.end26:                                      ; preds = %while.end26.loopexit, %if.then12
  %24 = phi i32 [ %.pre2, %while.end26.loopexit ], [ %.pre, %if.then12 ], !dbg !8225
  %25 = phi i32 [ %.lcssa11, %while.end26.loopexit ], [ %.pre, %if.then12 ], !dbg !8212
  %26 = phi %struct.bitmap_element_def* [ %.lcssa10, %while.end26.loopexit ], [ @bitmap_zero_bits, %if.then12 ]
  %27 = phi %struct.bitmap_element_def* [ %6, %while.end26.loopexit ], [ @bitmap_zero_bits, %if.then12 ]
  %cmp31 = icmp eq i32 %25, %24, !dbg !8227
  br i1 %cmp31, label %if.then32, label %if.else, !dbg !8228

if.then32:                                        ; preds = %while.end26
  %cmp36 = icmp eq i32 %24, 0, !dbg !8229
  br i1 %cmp36, label %if.end40, label %if.then37, !dbg !8232

if.then37:                                        ; preds = %if.then32
  %mul = shl i32 %24, 7, !dbg !8233
  call void @llvm.dbg.value(metadata i32 %mul, metadata !8183, metadata !DIExpression()), !dbg !8185
  br label %if.end40, !dbg !8234

if.end40:                                         ; preds = %if.then32, %if.then37
  %start_bit.addr.0 = phi i32 [ %mul, %if.then37 ], [ 0, %if.then32 ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !8183, metadata !DIExpression()), !dbg !8185
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !8235
  store i32 0, i32* %word_no, align 8, !dbg !8236
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %27, i64 0, i32 3, i64 0, !dbg !8237
  %28 = load i64, i64* %arrayidx, align 8, !dbg !8237
  %arrayidx48 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %26, i64 0, i32 3, i64 0, !dbg !8238
  %29 = load i64, i64* %arrayidx48, align 8, !dbg !8238
  %and = and i64 %28, %29, !dbg !8239
  %bits51 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !8240
  store i64 %and, i64* %bits51, align 8, !dbg !8241
  %phitmp = icmp eq i64 %and, 0, !dbg !8242
  %phitmp7 = zext i1 %phitmp to i32, !dbg !8242
  br label %if.end54, !dbg !8242

if.else:                                          ; preds = %while.end26
  %word_no52 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !8243
  store i32 1, i32* %word_no52, align 8, !dbg !8245
  %bits53 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !8246
  store i64 0, i64* %bits53, align 8, !dbg !8247
  br label %if.end54

if.end54:                                         ; preds = %if.else, %if.end40
  %30 = phi i32 [ %phitmp7, %if.end40 ], [ 1, %if.else ]
  %start_bit.addr.1 = phi i32 [ %start_bit.addr.0, %if.end40 ], [ 0, %if.else ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.1, metadata !8183, metadata !DIExpression()), !dbg !8185
  %add = add i32 %start_bit.addr.1, %30, !dbg !8248
  call void @llvm.dbg.value(metadata i32 %add, metadata !8183, metadata !DIExpression()), !dbg !8185
  store i32 %add, i32* %bit_no, align 4, !dbg !8249
  ret void, !dbg !8250
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_and(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !8251 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8253, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !8254, metadata !DIExpression()), !dbg !8258
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !8259
  %0 = load i64, i64* %bits, align 8, !dbg !8259
  %tobool = icmp eq i64 %0, 0, !dbg !8260
  br i1 %tobool, label %if.end, label %next_bit, !dbg !8261

next_bit.loopexit:                                ; preds = %while.body9
  %and16.lcssa = phi i64 [ %and16, %while.body9 ], !dbg !8262
  br label %next_bit, !dbg !8265

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %and16.lcssa, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !8255), !dbg !8266
  br label %while.cond, !dbg !8265

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !8267
  %and = and i64 %2, 1, !dbg !8268
  %tobool2 = icmp eq i64 %and, 0, !dbg !8269
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !8265

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !8270
  store i64 %shr, i64* %bits, align 8, !dbg !8270
  %3 = load i32, i32* %bit_no, align 4, !dbg !8272
  %add = add i32 %3, 1, !dbg !8272
  store i32 %add, i32* %bit_no, align 4, !dbg !8272
  %.pre = load i64, i64* %bits, align 8, !dbg !8267
  br label %while.cond, !dbg !8265, !llvm.loop !8273

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !8275
  %sub = add i32 %4, 63, !dbg !8276
  %div = and i32 %sub, -64, !dbg !8277
  store i32 %div, i32* %bit_no, align 4, !dbg !8278
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !8279
  %5 = load i32, i32* %word_no, align 8, !dbg !8280
  %inc = add i32 %5, 1, !dbg !8280
  store i32 %inc, i32* %word_no, align 8, !dbg !8280
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !8281
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !8281
  %6 = bitcast %struct.bitmap_iterator* %bi to i64**, !dbg !8282
  %7 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !8282
  %8 = bitcast %struct.bitmap_element_def** %elt2 to i64*, !dbg !8285
  br label %while.body6, !dbg !8287

while.body6:                                      ; preds = %if.end, %do.end58
  %9 = phi i32 [ %inc, %if.end ], [ 0, %do.end58 ]
  br label %while.cond7, !dbg !8288

while.cond7:                                      ; preds = %if.end21, %while.body6
  %10 = phi i32 [ %inc24, %if.end21 ], [ %9, %while.body6 ], !dbg !8289
  %cmp = icmp eq i32 %10, 2, !dbg !8290
  br i1 %cmp, label %do.body.preheader, label %while.body9, !dbg !8288

do.body.preheader:                                ; preds = %while.cond7
  %.pre3.pre = load i64*, i64** %6, align 8, !dbg !8291
  br label %do.body, !dbg !8292

while.body9:                                      ; preds = %while.cond7
  %11 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !8293
  %idxprom = zext i32 %10 to i64, !dbg !8294
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %11, i64 0, i32 3, i64 %idxprom, !dbg !8294
  %12 = load i64, i64* %arrayidx, align 8, !dbg !8294
  %13 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt2, align 8, !dbg !8295
  %arrayidx15 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %13, i64 0, i32 3, i64 %idxprom, !dbg !8296
  %14 = load i64, i64* %arrayidx15, align 8, !dbg !8296
  %and16 = and i64 %12, %14, !dbg !8262
  store i64 %and16, i64* %bits, align 8, !dbg !8297
  %tobool19 = icmp eq i64 %and16, 0, !dbg !8298
  br i1 %tobool19, label %if.end21, label %next_bit.loopexit, !dbg !8300

if.end21:                                         ; preds = %while.body9
  %15 = load i32, i32* %bit_no, align 4, !dbg !8301
  %add22 = add i32 %15, 64, !dbg !8301
  store i32 %add22, i32* %bit_no, align 4, !dbg !8301
  %16 = load i32, i32* %word_no, align 8, !dbg !8302
  %inc24 = add i32 %16, 1, !dbg !8302
  store i32 %inc24, i32* %word_no, align 8, !dbg !8302
  br label %while.cond7, !dbg !8288, !llvm.loop !8303

do.body:                                          ; preds = %do.body.preheader, %do.cond52
  %.pre3 = phi i64* [ %.pre3.pre, %do.body.preheader ], [ %.lcssa16, %do.cond52 ], !dbg !8291
  br label %do.body26, !dbg !8305

do.body26:                                        ; preds = %do.cond, %do.body
  %17 = phi i64* [ %24, %do.cond ], [ %.pre3, %do.body ], !dbg !8291
  %18 = load i64, i64* %17, align 8, !dbg !8306
  store i64 %18, i64* %7, align 8, !dbg !8307
  %tobool30 = icmp eq i64 %18, 0, !dbg !8308
  br i1 %tobool30, label %return.loopexit2, label %do.cond, !dbg !8310

do.cond:                                          ; preds = %do.body26
  %19 = inttoptr i64 %18 to %struct.bitmap_element_def*, !dbg !8310
  %20 = inttoptr i64 %18 to i64*, !dbg !8310
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %19, i64 0, i32 2, !dbg !8311
  %21 = load i32, i32* %indx, align 8, !dbg !8311
  %22 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt2, align 8, !dbg !8312
  %indx35 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %22, i64 0, i32 2, !dbg !8313
  %23 = load i32, i32* %indx35, align 8, !dbg !8313
  %cmp36 = icmp ult i32 %21, %23, !dbg !8314
  %24 = inttoptr i64 %18 to i64*, !dbg !8315
  br i1 %cmp36, label %do.body26, label %while.cond37.preheader, !dbg !8315, !llvm.loop !8316

while.cond37.preheader:                           ; preds = %do.cond
  %.lcssa16 = phi i64* [ %20, %do.cond ], !dbg !8310
  %indx.lcssa = phi i32* [ %indx, %do.cond ], !dbg !8311
  %.lcssa15 = phi i32 [ %21, %do.cond ], !dbg !8311
  %.lcssa14 = phi %struct.bitmap_element_def* [ %22, %do.cond ], !dbg !8312
  %.lcssa = phi i32 [ %23, %do.cond ], !dbg !8313
  %25 = bitcast %struct.bitmap_element_def* %.lcssa14 to i64*, !dbg !8315
  br label %while.cond37, !dbg !8318

while.cond37:                                     ; preds = %while.body43.while.cond37_crit_edge, %while.cond37.preheader
  %26 = phi i64* [ %25, %while.cond37.preheader ], [ %30, %while.body43.while.cond37_crit_edge ]
  %27 = phi i32 [ %.lcssa15, %while.cond37.preheader ], [ %.pre5, %while.body43.while.cond37_crit_edge ], !dbg !8319
  %28 = phi i32 [ %.lcssa, %while.cond37.preheader ], [ %.pre4, %while.body43.while.cond37_crit_edge ], !dbg !8320
  %cmp42 = icmp ult i32 %28, %27, !dbg !8321
  br i1 %cmp42, label %while.body43, label %do.cond52, !dbg !8318

while.body43:                                     ; preds = %while.cond37
  %29 = load i64, i64* %26, align 8, !dbg !8322
  store i64 %29, i64* %8, align 8, !dbg !8323
  %tobool48 = icmp eq i64 %29, 0, !dbg !8324
  br i1 %tobool48, label %return.loopexit1, label %while.body43.while.cond37_crit_edge, !dbg !8326, !llvm.loop !8327

while.body43.while.cond37_crit_edge:              ; preds = %while.body43
  %30 = inttoptr i64 %29 to i64*, !dbg !8326
  %31 = inttoptr i64 %29 to %struct.bitmap_element_def*, !dbg !8326
  %indx39.phi.trans.insert = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %31, i64 0, i32 2, !dbg !8329
  %.pre4 = load i32, i32* %indx39.phi.trans.insert, align 8, !dbg !8320
  %.pre5 = load i32, i32* %indx.lcssa, align 8, !dbg !8319
  br label %while.cond37, !dbg !8326

do.cond52:                                        ; preds = %while.cond37
  %.lcssa19 = phi i32 [ %27, %while.cond37 ], !dbg !8319
  %.lcssa17 = phi i32 [ %28, %while.cond37 ], !dbg !8320
  %cmp57 = icmp eq i32 %.lcssa19, %.lcssa17, !dbg !8330
  br i1 %cmp57, label %do.end58, label %do.body, !dbg !8331, !llvm.loop !8332

do.end58:                                         ; preds = %do.cond52
  %.lcssa19.lcssa = phi i32 [ %.lcssa19, %do.cond52 ], !dbg !8319
  %mul61 = shl i32 %.lcssa19.lcssa, 7, !dbg !8334
  store i32 %mul61, i32* %bit_no, align 4, !dbg !8335
  store i32 0, i32* %word_no, align 8, !dbg !8336
  br label %while.body6, !dbg !8287, !llvm.loop !8337

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !8339

return.loopexit1:                                 ; preds = %while.body43
  br label %return, !dbg !8339

return.loopexit2:                                 ; preds = %do.body26
  br label %return, !dbg !8339

return:                                           ; preds = %return.loopexit2, %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], [ 0, %return.loopexit2 ], !dbg !8258
  ret i8 %retval.0, !dbg !8339
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_uid(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !8340 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !8342, metadata !DIExpression()), !dbg !8343
  %uid = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 1, !dbg !8344
  %0 = load i32, i32* %uid, align 4, !dbg !8344
  ret i32 %0, !dbg !8345
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_expr_type(%struct.pre_expr_d* %e) unnamed_addr #5 !dbg !8346 {
entry:
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %e, metadata !8348, metadata !DIExpression()), !dbg !8349
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %e, i64 0, i32 0, !dbg !8350
  %0 = load i32, i32* %kind, align 8, !dbg !8350
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 3, label %sw.bb1
    i32 2, label %sw.bb5
    i32 1, label %sw.bb8
  ], !dbg !8351

sw.bb:                                            ; preds = %entry
  %name = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %e, i64 0, i32 2, i32 0, !dbg !8352
  %1 = bitcast %union.tree_node** %name to %struct.tree_common**, !dbg !8352
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !8352
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !8352
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8352
  br label %return, !dbg !8354

sw.bb1:                                           ; preds = %entry
  %constant = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %e, i64 0, i32 2, i32 0, !dbg !8355
  %4 = bitcast %union.tree_node** %constant to %struct.tree_common**, !dbg !8355
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !8355
  %type4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !8355
  %6 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !8355
  br label %return, !dbg !8356

sw.bb5:                                           ; preds = %entry
  %u6 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %e, i64 0, i32 2, !dbg !8357
  %reference = bitcast %union.pre_expr_union_d* %u6 to %struct.vn_reference_s**, !dbg !8357
  %7 = load %struct.vn_reference_s*, %struct.vn_reference_s** %reference, align 8, !dbg !8357
  %type7 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %7, i64 0, i32 4, !dbg !8358
  %8 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !8358
  br label %return, !dbg !8359

sw.bb8:                                           ; preds = %entry
  %u9 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %e, i64 0, i32 2, !dbg !8360
  %nary = bitcast %union.pre_expr_union_d* %u9 to %struct.vn_nary_op_s**, !dbg !8360
  %9 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %nary, align 8, !dbg !8360
  %type10 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %9, i64 0, i32 4, !dbg !8361
  %10 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !8361
  br label %return, !dbg !8362

sw.epilog:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1397, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8363
  br label %return, !dbg !8364

return:                                           ; preds = %sw.epilog, %sw.bb8, %sw.bb5, %sw.bb1, %sw.bb
  %retval.0 = phi %union.tree_node* [ null, %sw.epilog ], [ %10, %sw.bb8 ], [ %8, %sw.bb5 ], [ %6, %sw.bb1 ], [ %3, %sw.bb ], !dbg !8349
  ret %union.tree_node* %retval.0, !dbg !8365
}

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.var_ann_d* @get_var_ann(%union.tree_node* %var) unnamed_addr #0 !dbg !8366 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !8371, metadata !DIExpression()), !dbg !8374
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8375
  %bf.load = load i64, i64* %0, align 8, !dbg !8375
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8375
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !8375
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8375

cond.true:                                        ; preds = %entry
  %ann = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 1, !dbg !8375
  %1 = bitcast %union.tree_node** %ann to %struct.var_ann_d**, !dbg !8375
  br label %cond.end19, !dbg !8375

cond.false:                                       ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 34, !dbg !8375
  br i1 %cmp5, label %cond.true6, label %cond.false8, !dbg !8375

cond.true6:                                       ; preds = %cond.false
  %ann7 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8375
  %2 = bitcast %union.tree_node** %ann7 to %struct.var_ann_d**, !dbg !8375
  br label %cond.end19, !dbg !8375

cond.false8:                                      ; preds = %cond.false
  %cmp13 = icmp eq i64 %bf.cast1, 36, !dbg !8375
  %ann15 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8375
  %3 = bitcast %union.tree_node** %ann15 to %struct.var_ann_d**, !dbg !8375
  %cond = select i1 %cmp13, %struct.var_ann_d** %3, %struct.var_ann_d** null, !dbg !8375
  br label %cond.end19, !dbg !8375

cond.end19:                                       ; preds = %cond.true6, %cond.false8, %cond.true
  %cond20 = phi %struct.var_ann_d** [ %1, %cond.true ], [ %2, %cond.true6 ], [ %cond, %cond.false8 ], !dbg !8375
  call void @llvm.dbg.value(metadata %struct.var_ann_d** %cond20, metadata !8372, metadata !DIExpression()), !dbg !8374
  %tobool = icmp eq %struct.var_ann_d** %cond20, null, !dbg !8376
  br i1 %tobool, label %cond.true21, label %cond.end23, !dbg !8376

cond.true21:                                      ; preds = %cond.end19
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0), i32 144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8376
  br label %cond.end23, !dbg !8376

cond.end23:                                       ; preds = %cond.end19, %cond.true21
  %4 = load %struct.var_ann_d*, %struct.var_ann_d** %cond20, align 8, !dbg !8377
  %tobool25 = icmp eq %struct.var_ann_d* %4, null, !dbg !8377
  br i1 %tobool25, label %cond.false27, label %cond.true26, !dbg !8377

cond.true26:                                      ; preds = %cond.end23
  br label %cond.end28, !dbg !8377

cond.false27:                                     ; preds = %cond.end23
  %call = tail call %struct.var_ann_d* @create_var_ann(%union.tree_node* %var) #6, !dbg !8378
  br label %cond.end28, !dbg !8377

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond29 = phi %struct.var_ann_d* [ %4, %cond.true26 ], [ %call, %cond.false27 ], !dbg !8377
  ret %struct.var_ann_d* %cond29, !dbg !8379
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !8380 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !8384, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8385, metadata !DIExpression()), !dbg !8386
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8387
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* %stmt) #6, !dbg !8388
  ret %union.tree_node* %call, !dbg !8389
}

declare dso_local %union.gimple_statement_d* @gimple_build_nop() local_unnamed_addr #2

declare dso_local %struct.vn_ssa_aux* @VN_INFO_GET(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.var_ann_d* @create_var_ann(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %t) unnamed_addr #5 !dbg !8390 {
entry:
  %result = alloca %struct.vn_nary_op_s*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !8392, metadata !DIExpression()), !dbg !8401
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8402
  %bf.load = load i64, i64* %0, align 8, !dbg !8402
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8403
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !8403
  br i1 %cmp, label %if.then, label %if.else, !dbg !8404

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %t) #7, !dbg !8405
  br label %return, !dbg !8406

if.else:                                          ; preds = %entry
  %call1 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %t) #6, !dbg !8407
  %tobool = icmp eq i8 %call1, 0, !dbg !8407
  br i1 %tobool, label %if.else4, label %if.then2, !dbg !8408

if.then2:                                         ; preds = %if.else
  %call3 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_constant(%union.tree_node* %t) #7, !dbg !8409
  br label %return, !dbg !8410

if.else4:                                         ; preds = %if.else
  %1 = bitcast %struct.vn_nary_op_s** %result to i8*, !dbg !8411
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8411
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s** %result, metadata !8393, metadata !DIExpression(DW_OP_deref)), !dbg !8412
  %call5 = call %union.tree_node* @vn_nary_op_lookup(%union.tree_node* %t, %struct.vn_nary_op_s** nonnull %result) #6, !dbg !8413
  %2 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %result, align 8, !dbg !8414
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %2, metadata !8393, metadata !DIExpression()), !dbg !8412
  %cmp6 = icmp eq %struct.vn_nary_op_s* %2, null, !dbg !8415
  br i1 %cmp6, label %cleanup15, label %if.then7, !dbg !8416

if.then7:                                         ; preds = %if.else4
  %3 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @pre_expr_pool, align 8, !dbg !8417
  %call8 = call i8* @pool_alloc(%struct.alloc_pool_def* %3) #6, !dbg !8418
  %4 = bitcast i8* %call8 to %struct.pre_expr_d*, !dbg !8419
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %4, metadata !8398, metadata !DIExpression()), !dbg !8420
  %kind = bitcast i8* %call8 to i32*, !dbg !8421
  store i32 1, i32* %kind, align 8, !dbg !8422
  %5 = bitcast %struct.vn_nary_op_s** %result to i64*, !dbg !8423
  %6 = load i64, i64* %5, align 8, !dbg !8423
  %u = getelementptr inbounds i8, i8* %call8, i64 8, !dbg !8424
  %7 = bitcast i8* %u to i64*, !dbg !8425
  store i64 %6, i64* %7, align 8, !dbg !8425
  %call9 = call fastcc i32 @lookup_expression_id(%struct.pre_expr_d* %4) #7, !dbg !8426
  call void @llvm.dbg.value(metadata i32 %call9, metadata !8397, metadata !DIExpression()), !dbg !8412
  %cmp10 = icmp eq i32 %call9, 0, !dbg !8427
  br i1 %cmp10, label %if.end, label %if.then11, !dbg !8429

if.then11:                                        ; preds = %if.then7
  %8 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @pre_expr_pool, align 8, !dbg !8430
  call void @pool_free(%struct.alloc_pool_def* %8, i8* %call8) #6, !dbg !8432
  %call12 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %call9) #7, !dbg !8433
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call12, metadata !8398, metadata !DIExpression()), !dbg !8420
  br label %cleanup15, !dbg !8434

if.end:                                           ; preds = %if.then7
  %call13 = call fastcc i32 @alloc_expression_id(%struct.pre_expr_d* %4) #7, !dbg !8435
  br label %cleanup15, !dbg !8436

cleanup15:                                        ; preds = %if.else4, %if.then11, %if.end
  %cleanup.dest.slot.1 = phi %struct.pre_expr_d* [ %4, %if.end ], [ %call12, %if.then11 ], [ null, %if.else4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8437
  ret %struct.pre_expr_d* %cleanup.dest.slot.1

return:                                           ; preds = %if.then2, %if.then
  %retval.2 = phi %struct.pre_expr_d* [ %call, %if.then ], [ %call3, %if.then2 ], !dbg !8401
  ret %struct.pre_expr_d* %retval.2, !dbg !8438
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_constant_for_value_id(i32 %v) unnamed_addr #5 !dbg !8439 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %v, metadata !8443, metadata !DIExpression()), !dbg !8453
  %call = tail call zeroext i8 @value_id_constant_p(i32 %v) #6, !dbg !8454
  %tobool = icmp eq i8 %call, 0, !dbg !8454
  br i1 %tobool, label %if.end12, label %if.then, !dbg !8455

if.then:                                          ; preds = %entry
  %0 = bitcast i32* %i to i8*, !dbg !8456
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8456
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !8457
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !8457
  %2 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !8458
  %base = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %2, i64 0, i32 0, !dbg !8458
  %call2 = tail call fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_index(%struct.VEC_bitmap_set_t_base* %base, i32 %v) #7, !dbg !8458
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call2, metadata !8448, metadata !DIExpression()), !dbg !8459
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %call2, i64 0, i32 0, !dbg !8460
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !8460
  call void @llvm.dbg.value(metadata i32* %i, metadata !8444, metadata !DIExpression(DW_OP_deref)), !dbg !8459
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8447, metadata !DIExpression(DW_OP_deref)), !dbg !8459
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %3, i32 0, i32* nonnull %i) #7, !dbg !8460
  br label %for.cond, !dbg !8460

for.cond:                                         ; preds = %for.inc, %if.then
  %retval.0 = phi %union.tree_node* [ undef, %if.then ], [ %retval.1, %for.inc ]
  call void @llvm.dbg.value(metadata i32* %i, metadata !8444, metadata !DIExpression(DW_OP_deref)), !dbg !8459
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8447, metadata !DIExpression(DW_OP_deref)), !dbg !8459
  %call3 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !8461
  %tobool4 = icmp eq i8 %call3, 0, !dbg !8460
  br i1 %tobool4, label %cleanup7, label %for.body, !dbg !8460

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !8462
  call void @llvm.dbg.value(metadata i32 %4, metadata !8444, metadata !DIExpression()), !dbg !8459
  %call5 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %4) #7, !dbg !8463
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call5, metadata !8449, metadata !DIExpression()), !dbg !8464
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call5, i64 0, i32 0, !dbg !8465
  %5 = load i32, i32* %kind, align 8, !dbg !8465
  %cmp = icmp eq i32 %5, 3, !dbg !8467
  br i1 %cmp, label %if.then6, label %cleanup, !dbg !8468

if.then6:                                         ; preds = %for.body
  %constant = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call5, i64 0, i32 2, i32 0, !dbg !8469
  %6 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !8469
  br label %cleanup, !dbg !8470

cleanup:                                          ; preds = %for.body, %if.then6
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then6 ], [ 0, %for.body ]
  %retval.1 = phi %union.tree_node* [ %6, %if.then6 ], [ %retval.0, %for.body ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %for.inc, label %cleanup7

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata i32* %i, metadata !8444, metadata !DIExpression(DW_OP_deref)), !dbg !8459
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8447, metadata !DIExpression(DW_OP_deref)), !dbg !8459
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !8461
  br label %for.cond, !dbg !8461, !llvm.loop !8471

cleanup7:                                         ; preds = %for.cond, %cleanup
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %for.cond ]
  %retval.2 = phi %union.tree_node* [ %retval.1, %cleanup ], [ %retval.0, %for.cond ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !8473
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8473
  %switch = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %switch, label %if.end12, label %return

if.end12:                                         ; preds = %entry, %cleanup7
  br label %return, !dbg !8474

return:                                           ; preds = %cleanup7, %if.end12
  %retval.3 = phi %union.tree_node* [ %retval.2, %cleanup7 ], [ null, %if.end12 ], !dbg !8453
  ret %union.tree_node* %retval.3, !dbg !8475
}

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_binary_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_unary_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_call_expr_loc(i32, %union.tree_node*, i32, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @vn_nary_op_lookup(%union.tree_node*, %struct.vn_nary_op_s**) local_unnamed_addr #2

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @ao_ref_init_from_vn_reference(%struct.ao_ref_s*, i32, %union.tree_node*, %struct.VEC_vn_reference_op_s_heap*) local_unnamed_addr #2

declare dso_local zeroext i8 @stmt_may_clobber_ref_p_1(%union.gimple_statement_d*, %struct.ao_ref_s*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_continuation_for_phi(%union.gimple_statement_d*, %struct.ao_ref_s*, %struct.bitmap_head_def**) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @bitmap_set_replace_value(%struct.bitmap_set* %set, i32 %lookfor, %struct.pre_expr_d* %expr) unnamed_addr #5 !dbg !8476 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !8480, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.value(metadata i32 %lookfor, metadata !8481, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !8482, metadata !DIExpression()), !dbg !8486
  %0 = bitcast i32* %i to i8*, !dbg !8487
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8487
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !8488
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !8488
  %call = tail call zeroext i8 @value_id_constant_p(i32 %lookfor) #6, !dbg !8489
  %tobool = icmp eq i8 %call, 0, !dbg !8489
  br i1 %tobool, label %if.end, label %cleanup, !dbg !8491

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %set, i32 %lookfor) #7, !dbg !8492
  %tobool2 = icmp eq i8 %call1, 0, !dbg !8492
  br i1 %tobool2, label %cleanup, label %if.end4, !dbg !8494

if.end4:                                          ; preds = %if.end
  %2 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !8495
  %base = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %2, i64 0, i32 0, !dbg !8495
  %call6 = tail call fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_index(%struct.VEC_bitmap_set_t_base* %base, i32 %lookfor) #7, !dbg !8495
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call6, metadata !8483, metadata !DIExpression()), !dbg !8486
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %call6, i64 0, i32 0, !dbg !8496
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !8496
  call void @llvm.dbg.value(metadata i32* %i, metadata !8484, metadata !DIExpression(DW_OP_deref)), !dbg !8486
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8485, metadata !DIExpression(DW_OP_deref)), !dbg !8486
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %3, i32 0, i32* nonnull %i) #7, !dbg !8496
  %expressions9 = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 0, !dbg !8498
  br label %for.cond, !dbg !8496

for.cond:                                         ; preds = %for.inc, %if.end4
  call void @llvm.dbg.value(metadata i32* %i, metadata !8484, metadata !DIExpression(DW_OP_deref)), !dbg !8486
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8485, metadata !DIExpression(DW_OP_deref)), !dbg !8486
  %call7 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !8502
  %tobool8 = icmp eq i8 %call7, 0, !dbg !8496
  br i1 %tobool8, label %cleanup.loopexit, label %for.body, !dbg !8496

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions9, align 8, !dbg !8503
  %5 = load i32, i32* %i, align 4, !dbg !8504
  call void @llvm.dbg.value(metadata i32 %5, metadata !8484, metadata !DIExpression()), !dbg !8486
  %call10 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %4, i32 %5) #6, !dbg !8505
  %tobool11 = icmp eq i32 %call10, 0, !dbg !8505
  br i1 %tobool11, label %for.inc, label %if.then12, !dbg !8506

if.then12:                                        ; preds = %for.body
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions9, align 8, !dbg !8507
  %7 = load i32, i32* %i, align 4, !dbg !8509
  call void @llvm.dbg.value(metadata i32 %7, metadata !8484, metadata !DIExpression()), !dbg !8486
  %call14 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %6, i32 %7) #6, !dbg !8510
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions9, align 8, !dbg !8511
  %call16 = call fastcc i32 @get_expression_id(%struct.pre_expr_d* %expr) #7, !dbg !8512
  %call17 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %8, i32 %call16) #6, !dbg !8513
  br label %cleanup, !dbg !8514

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32* %i, metadata !8484, metadata !DIExpression(DW_OP_deref)), !dbg !8486
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8485, metadata !DIExpression(DW_OP_deref)), !dbg !8486
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !8502
  br label %for.cond, !dbg !8502, !llvm.loop !8515

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !8517

cleanup:                                          ; preds = %cleanup.loopexit, %if.end, %entry, %if.then12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !8517
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8517
  ret void, !dbg !8517
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_expression_id(%struct.pre_expr_d* %expr) unnamed_addr #0 !dbg !8518 {
entry:
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !8520, metadata !DIExpression()), !dbg !8521
  %id = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 1, !dbg !8522
  %0 = load i32, i32* %id, align 4, !dbg !8522
  ret i32 %0, !dbg !8523
}

declare dso_local void @bitmap_and_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_and_compl(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @valid_in_sets(%struct.bitmap_set* %set1, %struct.bitmap_set* %set2, %struct.pre_expr_d* %expr, %struct.basic_block_def* %block) unnamed_addr #5 !dbg !8524 {
entry:
  %temp = alloca %struct.pre_expr_d, align 8
  %vro = alloca %struct.vn_reference_op_struct*, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set1, metadata !8528, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set2, metadata !8529, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !8530, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !8531, metadata !DIExpression()), !dbg !8549
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 0, !dbg !8550
  %0 = load i32, i32* %kind, align 8, !dbg !8550
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb39
  ], !dbg !8551

sw.bb:                                            ; preds = %entry
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !8552
  %1 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !8552
  %2 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %1, align 8, !dbg !8552
  %avail_out = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %2, i64 0, i32 3, !dbg !8552
  %3 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out, align 8, !dbg !8552
  %call = tail call fastcc zeroext i8 @bitmap_set_contains_expr(%struct.bitmap_set* %3, %struct.pre_expr_d* %expr) #7, !dbg !8553
  br label %return, !dbg !8554

sw.bb1:                                           ; preds = %entry
  %u = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, !dbg !8555
  %nary2 = bitcast %union.pre_expr_union_d* %u to %struct.vn_nary_op_s**, !dbg !8555
  %4 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %nary2, align 8, !dbg !8555
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %4, metadata !8535, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.value(metadata i32 0, metadata !8532, metadata !DIExpression()), !dbg !8556
  %length = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %4, i64 0, i32 1, !dbg !8557
  %5 = bitcast %struct.pre_expr_d* %temp to i8*, !dbg !8558
  %kind5 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %temp, i64 0, i32 0, !dbg !8558
  %id = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %temp, i64 0, i32 1, !dbg !8558
  %u9 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %temp, i64 0, i32 2, !dbg !8558
  %6 = bitcast %union.pre_expr_union_d* %u9 to i64*, !dbg !8558
  %tobool17 = icmp eq %struct.bitmap_set* %set2, null, !dbg !8559
  br i1 %tobool17, label %sw.bb1.split.us, label %sw.bb1.sw.bb1.split_crit_edge, !dbg !8561

sw.bb1.sw.bb1.split_crit_edge:                    ; preds = %sw.bb1
  br label %for.cond, !dbg !8561

sw.bb1.split.us:                                  ; preds = %sw.bb1
  br label %for.cond.us, !dbg !8561

for.cond.us:                                      ; preds = %for.inc.us, %sw.bb1.split.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.us ], [ 0, %sw.bb1.split.us ], !dbg !8562
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8532, metadata !DIExpression()), !dbg !8556
  %bf.load.us = load i32, i32* %length, align 4, !dbg !8563
  %bf.lshr.us = lshr i32 %bf.load.us, 16, !dbg !8563
  %7 = zext i32 %bf.lshr.us to i64, !dbg !8564
  %cmp.us = icmp ult i64 %indvars.iv, %7, !dbg !8564
  br i1 %cmp.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !8565

for.body.us:                                      ; preds = %for.cond.us
  %arrayidx.us = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %4, i64 0, i32 5, i64 %indvars.iv, !dbg !8566
  %8 = bitcast %union.tree_node** %arrayidx.us to i64**, !dbg !8566
  %9 = load i64*, i64** %8, align 8, !dbg !8566
  %bf.load3.us = load i64, i64* %9, align 8, !dbg !8566
  %bf.cast3.us = and i64 %bf.load3.us, 65535, !dbg !8567
  %cmp4.us = icmp eq i64 %bf.cast3.us, 141, !dbg !8567
  br i1 %cmp4.us, label %if.then.us, label %for.inc.us, !dbg !8568

if.then.us:                                       ; preds = %for.body.us
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !8569
  store i32 0, i32* %kind5, align 8, !dbg !8570
  store i32 0, i32* %id, align 4, !dbg !8571
  %10 = bitcast %union.tree_node** %arrayidx.us to i64*, !dbg !8572
  %11 = load i64, i64* %10, align 8, !dbg !8572
  store i64 %11, i64* %6, align 8, !dbg !8573
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp, metadata !8536, metadata !DIExpression(DW_OP_deref)), !dbg !8558
  %call10.us = call fastcc i32 @lookup_expression_id(%struct.pre_expr_d* nonnull %temp) #7, !dbg !8574
  store i32 %call10.us, i32* %id, align 4, !dbg !8575
  %cmp13.us = icmp eq i32 %call10.us, 0, !dbg !8576
  br i1 %cmp13.us, label %cleanup.us, label %if.end.us, !dbg !8578

if.end.us:                                        ; preds = %if.then.us
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp, metadata !8536, metadata !DIExpression(DW_OP_deref)), !dbg !8558
  %call15.us = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* nonnull %temp) #7, !dbg !8579
  %call16.us = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %set1, i32 %call15.us) #7, !dbg !8579
  %tobool.us = icmp eq i8 %call16.us, 0, !dbg !8579
  br i1 %tobool.us, label %lor.lhs.false.us, label %if.end23.us, !dbg !8579

lor.lhs.false.us:                                 ; preds = %if.end.us
  br label %cleanup.us, !dbg !8579

if.end23.us:                                      ; preds = %if.end.us
  br label %cleanup.us, !dbg !8580

cleanup.us:                                       ; preds = %lor.lhs.false.us, %if.end23.us, %if.then.us
  %cleanup.dest.slot.0.us = phi i1 [ true, %if.end23.us ], [ false, %if.then.us ], [ false, %lor.lhs.false.us ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !8580
  br i1 %cleanup.dest.slot.0.us, label %for.inc.us, label %return.loopexit.us-lcssa.us

for.inc.us:                                       ; preds = %cleanup.us, %for.body.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8581
  call void @llvm.dbg.value(metadata i32 undef, metadata !8532, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8556
  br label %for.cond.us, !dbg !8582, !llvm.loop !8583

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !8585

return.loopexit.us-lcssa.us:                      ; preds = %cleanup.us
  br label %return.loopexit, !dbg !8587

for.cond:                                         ; preds = %for.inc, %sw.bb1.sw.bb1.split_crit_edge
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc ], [ 0, %sw.bb1.sw.bb1.split_crit_edge ], !dbg !8562
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !8532, metadata !DIExpression()), !dbg !8556
  %bf.load = load i32, i32* %length, align 4, !dbg !8563
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8563
  %12 = zext i32 %bf.lshr to i64, !dbg !8564
  %cmp = icmp ult i64 %indvars.iv4, %12, !dbg !8564
  br i1 %cmp, label %for.body, label %for.end.us-lcssa, !dbg !8565

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %4, i64 0, i32 5, i64 %indvars.iv4, !dbg !8566
  %13 = bitcast %union.tree_node** %arrayidx to i64**, !dbg !8566
  %14 = load i64*, i64** %13, align 8, !dbg !8566
  %bf.load3 = load i64, i64* %14, align 8, !dbg !8566
  %bf.cast3 = and i64 %bf.load3, 65535, !dbg !8567
  %cmp4 = icmp eq i64 %bf.cast3, 141, !dbg !8567
  br i1 %cmp4, label %if.then, label %for.inc, !dbg !8568

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !8569
  store i32 0, i32* %kind5, align 8, !dbg !8570
  store i32 0, i32* %id, align 4, !dbg !8571
  %15 = bitcast %union.tree_node** %arrayidx to i64*, !dbg !8572
  %16 = load i64, i64* %15, align 8, !dbg !8572
  store i64 %16, i64* %6, align 8, !dbg !8573
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp, metadata !8536, metadata !DIExpression(DW_OP_deref)), !dbg !8558
  %call10 = call fastcc i32 @lookup_expression_id(%struct.pre_expr_d* nonnull %temp) #7, !dbg !8574
  store i32 %call10, i32* %id, align 4, !dbg !8575
  %cmp13 = icmp eq i32 %call10, 0, !dbg !8576
  br i1 %cmp13, label %cleanup, label %if.end, !dbg !8578

if.end:                                           ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp, metadata !8536, metadata !DIExpression(DW_OP_deref)), !dbg !8558
  %call15 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* nonnull %temp) #7, !dbg !8579
  %call16 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %set1, i32 %call15) #7, !dbg !8579
  %tobool = icmp eq i8 %call16, 0, !dbg !8579
  br i1 %tobool, label %lor.lhs.false, label %if.end23, !dbg !8579

lor.lhs.false:                                    ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp, metadata !8536, metadata !DIExpression(DW_OP_deref)), !dbg !8558
  %call18 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* nonnull %temp) #7, !dbg !8579
  %call19 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* nonnull %set2, i32 %call18) #7, !dbg !8579
  %tobool21 = icmp eq i8 %call19, 0, !dbg !8579
  br i1 %tobool21, label %cleanup, label %if.end23, !dbg !8588

if.end23:                                         ; preds = %lor.lhs.false, %if.end
  br label %cleanup, !dbg !8580

cleanup:                                          ; preds = %lor.lhs.false, %if.then, %if.end23
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end23 ], [ false, %if.then ], [ false, %lor.lhs.false ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !8580
  br i1 %cleanup.dest.slot.0, label %for.inc, label %return.loopexit.us-lcssa

for.inc:                                          ; preds = %for.body, %cleanup
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !8581
  call void @llvm.dbg.value(metadata i32 undef, metadata !8532, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8556
  br label %for.cond, !dbg !8582, !llvm.loop !8583

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !8585

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %aux25 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !8585
  %17 = bitcast i8** %aux25 to %struct.bb_bitmap_sets**, !dbg !8585
  %18 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %17, align 8, !dbg !8585
  %contains_may_not_return_call = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %18, i64 0, i32 8, !dbg !8585
  %bf.load26 = load i8, i8* %contains_may_not_return_call, align 8, !dbg !8585
  %bf.clear28 = and i8 %bf.load26, 4, !dbg !8585
  %tobool30 = icmp eq i8 %bf.clear28, 0, !dbg !8585
  br i1 %tobool30, label %if.end36, label %land.lhs.true31, !dbg !8589

land.lhs.true31:                                  ; preds = %for.end
  %call32 = call zeroext i8 @vn_nary_may_trap(%struct.vn_nary_op_s* %4) #6, !dbg !8590
  %tobool34 = icmp eq i8 %call32, 0, !dbg !8590
  br i1 %tobool34, label %if.end36, label %return, !dbg !8591

if.end36:                                         ; preds = %land.lhs.true31, %for.end
  br label %return, !dbg !8592

sw.bb39:                                          ; preds = %entry
  %u40 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, !dbg !8593
  %reference = bitcast %union.pre_expr_union_d* %u40 to %struct.vn_reference_s**, !dbg !8593
  %19 = load %struct.vn_reference_s*, %struct.vn_reference_s** %reference, align 8, !dbg !8593
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %19, metadata !8542, metadata !DIExpression()), !dbg !8594
  %20 = bitcast %struct.vn_reference_op_struct** %vro to i8*, !dbg !8595
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8, !dbg !8595
  call void @llvm.dbg.value(metadata i32 0, metadata !8545, metadata !DIExpression()), !dbg !8594
  %operands = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %19, i64 0, i32 5, !dbg !8596
  br label %for.cond42, !dbg !8599

for.cond42:                                       ; preds = %for.inc53, %sw.bb39
  %i41.0 = phi i32 [ 0, %sw.bb39 ], [ %inc54, %for.inc53 ], !dbg !8600
  call void @llvm.dbg.value(metadata i32 %i41.0, metadata !8545, metadata !DIExpression()), !dbg !8594
  %21 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !8601
  %tobool43 = icmp eq %struct.VEC_vn_reference_op_s_heap* %21, null, !dbg !8601
  br i1 %tobool43, label %cond.end, label %cond.true, !dbg !8601

cond.true:                                        ; preds = %for.cond42
  %base45 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %21, i64 0, i32 0, !dbg !8601
  br label %cond.end, !dbg !8601

cond.end:                                         ; preds = %for.cond42, %cond.true
  %cond = phi %struct.VEC_vn_reference_op_s_base* [ %base45, %cond.true ], [ null, %for.cond42 ], !dbg !8601
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %vro, metadata !8544, metadata !DIExpression(DW_OP_deref)), !dbg !8594
  %call46 = call fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %cond, i32 %i41.0, %struct.vn_reference_op_struct** nonnull %vro) #7, !dbg !8601
  %tobool47 = icmp eq i32 %call46, 0, !dbg !8602
  br i1 %tobool47, label %for.end55, label %for.body48, !dbg !8602

for.body48:                                       ; preds = %cond.end
  %22 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !8603
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %22, metadata !8544, metadata !DIExpression()), !dbg !8594
  %call49 = call fastcc zeroext i8 @vro_valid_in_sets(%struct.bitmap_set* %set1, %struct.bitmap_set* %set2, %struct.vn_reference_op_struct* %22) #7, !dbg !8606
  %tobool50 = icmp eq i8 %call49, 0, !dbg !8606
  br i1 %tobool50, label %cleanup79.loopexit, label %for.inc53, !dbg !8607

for.inc53:                                        ; preds = %for.body48
  %inc54 = add i32 %i41.0, 1, !dbg !8608
  call void @llvm.dbg.value(metadata i32 %inc54, metadata !8545, metadata !DIExpression()), !dbg !8594
  br label %for.cond42, !dbg !8609, !llvm.loop !8610

for.end55:                                        ; preds = %cond.end
  %vuse = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %19, i64 0, i32 2, !dbg !8612
  %23 = load %union.tree_node*, %union.tree_node** %vuse, align 8, !dbg !8612
  %tobool56 = icmp eq %union.tree_node* %23, null, !dbg !8613
  br i1 %tobool56, label %if.end75, label %if.then57, !dbg !8614

if.then57:                                        ; preds = %for.end55
  %def_stmt59 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8615
  %24 = bitcast %union.tree_node** %def_stmt59 to %union.gimple_statement_d**, !dbg !8615
  %25 = load %union.gimple_statement_d*, %union.gimple_statement_d** %24, align 8, !dbg !8615
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %25, metadata !8546, metadata !DIExpression()), !dbg !8616
  %call60 = call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %25) #7, !dbg !8617
  %tobool61 = icmp eq i8 %call60, 0, !dbg !8617
  br i1 %tobool61, label %land.lhs.true62, label %if.end71, !dbg !8619

land.lhs.true62:                                  ; preds = %if.then57
  %call63 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %25) #7, !dbg !8620
  %cmp64 = icmp eq %struct.basic_block_def* %call63, %block, !dbg !8621
  br i1 %cmp64, label %if.end71, label %land.lhs.true66, !dbg !8622

land.lhs.true66:                                  ; preds = %land.lhs.true62
  %call67 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %25) #7, !dbg !8623
  %call68 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %block, %struct.basic_block_def* %call67) #6, !dbg !8624
  %tobool69 = icmp eq i8 %call68, 0, !dbg !8624
  br i1 %tobool69, label %cleanup72, label %if.end71, !dbg !8625

if.end71:                                         ; preds = %land.lhs.true66, %land.lhs.true62, %if.then57
  br label %cleanup72, !dbg !8626

cleanup72:                                        ; preds = %land.lhs.true66, %if.end71
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end71 ], [ false, %land.lhs.true66 ]
  br i1 %cleanup.dest.slot.1, label %if.end75, label %cleanup79

if.end75:                                         ; preds = %for.end55, %cleanup72
  %call76 = call fastcc zeroext i8 @value_dies_in_block_x(%struct.pre_expr_d* %expr, %struct.basic_block_def* %block) #7, !dbg !8627
  %tobool77 = icmp eq i8 %call76, 0, !dbg !8628
  %conv78 = zext i1 %tobool77 to i8, !dbg !8628
  br label %cleanup79, !dbg !8629

cleanup79.loopexit:                               ; preds = %for.body48
  br label %cleanup79, !dbg !8630

cleanup79:                                        ; preds = %cleanup79.loopexit, %cleanup72, %if.end75
  %retval.5 = phi i8 [ 0, %cleanup72 ], [ %conv78, %if.end75 ], [ 0, %cleanup79.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8, !dbg !8630
  br label %return

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2148, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8631
  br label %return, !dbg !8632

return.loopexit.us-lcssa:                         ; preds = %cleanup
  br label %return.loopexit, !dbg !8587

return.loopexit:                                  ; preds = %return.loopexit.us-lcssa.us, %return.loopexit.us-lcssa
  br label %return, !dbg !8587

return:                                           ; preds = %return.loopexit, %land.lhs.true31, %if.end36, %sw.default, %cleanup79, %sw.bb
  %retval.6 = phi i8 [ 0, %sw.default ], [ %retval.5, %cleanup79 ], [ %call, %sw.bb ], [ 1, %if.end36 ], [ 0, %land.lhs.true31 ], [ 0, %return.loopexit ], !dbg !8549
  ret i8 %retval.6, !dbg !8587
}

; Function Attrs: nounwind uwtable
define internal fastcc void @bitmap_remove_from_set(%struct.bitmap_set* %set, %struct.pre_expr_d* %expr) unnamed_addr #5 !dbg !8633 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !8635, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !8636, metadata !DIExpression()), !dbg !8638
  %call = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %expr) #7, !dbg !8639
  call void @llvm.dbg.value(metadata i32 %call, metadata !8637, metadata !DIExpression()), !dbg !8638
  %call1 = tail call zeroext i8 @value_id_constant_p(i32 %call) #6, !dbg !8640
  %tobool = icmp eq i8 %call1, 0, !dbg !8640
  br i1 %tobool, label %if.then, label %if.end, !dbg !8642

if.then:                                          ; preds = %entry
  %values = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 1, !dbg !8643
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %values, align 8, !dbg !8643
  %call2 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %0, i32 %call) #6, !dbg !8645
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 0, !dbg !8646
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !8646
  %call3 = tail call fastcc i32 @get_expression_id(%struct.pre_expr_d* %expr) #7, !dbg !8647
  %call4 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %1, i32 %call3) #6, !dbg !8648
  br label %if.end, !dbg !8649

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !8650
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bitmap_set_contains_expr(%struct.bitmap_set* %set, %struct.pre_expr_d* %expr) unnamed_addr #0 !dbg !8651 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set, metadata !8655, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !8656, metadata !DIExpression()), !dbg !8657
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %set, i64 0, i32 0, !dbg !8658
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !8658
  %call = tail call fastcc i32 @get_expression_id(%struct.pre_expr_d* %expr) #7, !dbg !8659
  %call1 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %call) #6, !dbg !8660
  %conv = trunc i32 %call1 to i8, !dbg !8660
  ret i8 %conv, !dbg !8661
}

declare dso_local zeroext i8 @vn_nary_may_trap(%struct.vn_nary_op_s*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vro_valid_in_sets(%struct.bitmap_set* %set1, %struct.bitmap_set* %set2, %struct.vn_reference_op_struct* %vro) unnamed_addr #5 !dbg !8662 {
entry:
  %temp = alloca %struct.pre_expr_d, align 8
  %temp29 = alloca %struct.pre_expr_d, align 8
  %temp69 = alloca %struct.pre_expr_d, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set1, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set2, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %vro, metadata !8668, metadata !DIExpression()), !dbg !8678
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %vro, i64 0, i32 2, !dbg !8679
  %0 = load %union.tree_node*, %union.tree_node** %op0, align 8, !dbg !8679
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !8680
  %1 = ptrtoint %union.tree_node* %0 to i64, !dbg !8681
  br i1 %tobool, label %if.end18, label %land.lhs.true, !dbg !8681

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8681
  %bf.load = load i64, i64* %2, align 8, !dbg !8682
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !8683
  %cmp = icmp eq i64 %bf.cast5, 141, !dbg !8683
  br i1 %cmp, label %if.then, label %if.end18, !dbg !8684

if.then:                                          ; preds = %land.lhs.true
  %3 = bitcast %struct.pre_expr_d* %temp to i8*, !dbg !8685
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !8685
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %temp, i64 0, i32 0, !dbg !8686
  store i32 0, i32* %kind, align 8, !dbg !8687
  %id = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %temp, i64 0, i32 1, !dbg !8688
  store i32 0, i32* %id, align 4, !dbg !8689
  %u = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %temp, i64 0, i32 2, !dbg !8690
  %4 = bitcast %union.pre_expr_union_d* %u to i64*, !dbg !8691
  store i64 %1, i64* %4, align 8, !dbg !8691
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp, metadata !8669, metadata !DIExpression(DW_OP_deref)), !dbg !8692
  %call = call fastcc i32 @lookup_expression_id(%struct.pre_expr_d* nonnull %temp) #7, !dbg !8693
  store i32 %call, i32* %id, align 4, !dbg !8694
  %cmp5 = icmp eq i32 %call, 0, !dbg !8695
  br i1 %cmp5, label %cleanup, label %if.end, !dbg !8697

if.end:                                           ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp, metadata !8669, metadata !DIExpression(DW_OP_deref)), !dbg !8692
  %call7 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* nonnull %temp) #7, !dbg !8698
  %call8 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %set1, i32 %call7) #7, !dbg !8698
  %tobool9 = icmp eq i8 %call8, 0, !dbg !8698
  br i1 %tobool9, label %lor.lhs.false, label %if.end17, !dbg !8698

lor.lhs.false:                                    ; preds = %if.end
  %tobool10 = icmp eq %struct.bitmap_set* %set2, null, !dbg !8698
  br i1 %tobool10, label %cleanup, label %land.lhs.true11, !dbg !8698

land.lhs.true11:                                  ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp, metadata !8669, metadata !DIExpression(DW_OP_deref)), !dbg !8692
  %call12 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* nonnull %temp) #7, !dbg !8698
  %call13 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* nonnull %set2, i32 %call12) #7, !dbg !8698
  %tobool15 = icmp eq i8 %call13, 0, !dbg !8698
  br i1 %tobool15, label %cleanup, label %if.end17, !dbg !8700

if.end17:                                         ; preds = %land.lhs.true11, %if.end
  br label %cleanup, !dbg !8701

cleanup:                                          ; preds = %land.lhs.true11, %lor.lhs.false, %if.then, %if.end17
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end17 ], [ false, %if.then ], [ false, %land.lhs.true11 ], [ false, %lor.lhs.false ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !8701
  br i1 %cleanup.dest.slot.0, label %if.end18, label %return

if.end18:                                         ; preds = %entry, %cleanup, %land.lhs.true
  %op1 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %vro, i64 0, i32 3, !dbg !8702
  %5 = load %union.tree_node*, %union.tree_node** %op1, align 8, !dbg !8702
  %tobool19 = icmp eq %union.tree_node* %5, null, !dbg !8703
  %6 = ptrtoint %union.tree_node* %5 to i64, !dbg !8704
  br i1 %tobool19, label %if.end58, label %land.lhs.true20, !dbg !8704

land.lhs.true20:                                  ; preds = %if.end18
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8704
  %bf.load23 = load i64, i64* %7, align 8, !dbg !8705
  %bf.cast254 = and i64 %bf.load23, 65535, !dbg !8706
  %cmp26 = icmp eq i64 %bf.cast254, 141, !dbg !8706
  br i1 %cmp26, label %if.then28, label %if.end58, !dbg !8707

if.then28:                                        ; preds = %land.lhs.true20
  %8 = bitcast %struct.pre_expr_d* %temp29 to i8*, !dbg !8708
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !8708
  %kind30 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %temp29, i64 0, i32 0, !dbg !8709
  store i32 0, i32* %kind30, align 8, !dbg !8710
  %id31 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %temp29, i64 0, i32 1, !dbg !8711
  store i32 0, i32* %id31, align 4, !dbg !8712
  %u33 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %temp29, i64 0, i32 2, !dbg !8713
  %9 = bitcast %union.pre_expr_union_d* %u33 to i64*, !dbg !8714
  store i64 %6, i64* %9, align 8, !dbg !8714
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp29, metadata !8672, metadata !DIExpression(DW_OP_deref)), !dbg !8715
  %call35 = call fastcc i32 @lookup_expression_id(%struct.pre_expr_d* nonnull %temp29) #7, !dbg !8716
  store i32 %call35, i32* %id31, align 4, !dbg !8717
  %cmp38 = icmp eq i32 %call35, 0, !dbg !8718
  br i1 %cmp38, label %cleanup55, label %if.end41, !dbg !8720

if.end41:                                         ; preds = %if.then28
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp29, metadata !8672, metadata !DIExpression(DW_OP_deref)), !dbg !8715
  %call42 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* nonnull %temp29) #7, !dbg !8721
  %call43 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %set1, i32 %call42) #7, !dbg !8721
  %tobool45 = icmp eq i8 %call43, 0, !dbg !8721
  br i1 %tobool45, label %lor.lhs.false46, label %if.end54, !dbg !8721

lor.lhs.false46:                                  ; preds = %if.end41
  %tobool47 = icmp eq %struct.bitmap_set* %set2, null, !dbg !8721
  br i1 %tobool47, label %cleanup55, label %land.lhs.true48, !dbg !8721

land.lhs.true48:                                  ; preds = %lor.lhs.false46
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp29, metadata !8672, metadata !DIExpression(DW_OP_deref)), !dbg !8715
  %call49 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* nonnull %temp29) #7, !dbg !8721
  %call50 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* nonnull %set2, i32 %call49) #7, !dbg !8721
  %tobool52 = icmp eq i8 %call50, 0, !dbg !8721
  br i1 %tobool52, label %cleanup55, label %if.end54, !dbg !8723

if.end54:                                         ; preds = %land.lhs.true48, %if.end41
  br label %cleanup55, !dbg !8724

cleanup55:                                        ; preds = %land.lhs.true48, %lor.lhs.false46, %if.then28, %if.end54
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end54 ], [ false, %if.then28 ], [ false, %land.lhs.true48 ], [ false, %lor.lhs.false46 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !8724
  br i1 %cleanup.dest.slot.1, label %if.end58, label %return

if.end58:                                         ; preds = %if.end18, %cleanup55, %land.lhs.true20
  %op2 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %vro, i64 0, i32 4, !dbg !8725
  %10 = load %union.tree_node*, %union.tree_node** %op2, align 8, !dbg !8725
  %tobool59 = icmp eq %union.tree_node* %10, null, !dbg !8726
  %11 = ptrtoint %union.tree_node* %10 to i64, !dbg !8727
  br i1 %tobool59, label %if.end98, label %land.lhs.true60, !dbg !8727

land.lhs.true60:                                  ; preds = %if.end58
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8727
  %bf.load63 = load i64, i64* %12, align 8, !dbg !8728
  %bf.cast653 = and i64 %bf.load63, 65535, !dbg !8729
  %cmp66 = icmp eq i64 %bf.cast653, 141, !dbg !8729
  br i1 %cmp66, label %if.then68, label %if.end98, !dbg !8730

if.then68:                                        ; preds = %land.lhs.true60
  %13 = bitcast %struct.pre_expr_d* %temp69 to i8*, !dbg !8731
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8, !dbg !8731
  %kind70 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %temp69, i64 0, i32 0, !dbg !8732
  store i32 0, i32* %kind70, align 8, !dbg !8733
  %id71 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %temp69, i64 0, i32 1, !dbg !8734
  store i32 0, i32* %id71, align 4, !dbg !8735
  %u73 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %temp69, i64 0, i32 2, !dbg !8736
  %14 = bitcast %union.pre_expr_union_d* %u73 to i64*, !dbg !8737
  store i64 %11, i64* %14, align 8, !dbg !8737
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp69, metadata !8675, metadata !DIExpression(DW_OP_deref)), !dbg !8738
  %call75 = call fastcc i32 @lookup_expression_id(%struct.pre_expr_d* nonnull %temp69) #7, !dbg !8739
  store i32 %call75, i32* %id71, align 4, !dbg !8740
  %cmp78 = icmp eq i32 %call75, 0, !dbg !8741
  br i1 %cmp78, label %cleanup95, label %if.end81, !dbg !8743

if.end81:                                         ; preds = %if.then68
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp69, metadata !8675, metadata !DIExpression(DW_OP_deref)), !dbg !8738
  %call82 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* nonnull %temp69) #7, !dbg !8744
  %call83 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %set1, i32 %call82) #7, !dbg !8744
  %tobool85 = icmp eq i8 %call83, 0, !dbg !8744
  br i1 %tobool85, label %lor.lhs.false86, label %if.end94, !dbg !8744

lor.lhs.false86:                                  ; preds = %if.end81
  %tobool87 = icmp eq %struct.bitmap_set* %set2, null, !dbg !8744
  br i1 %tobool87, label %cleanup95, label %land.lhs.true88, !dbg !8744

land.lhs.true88:                                  ; preds = %lor.lhs.false86
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %temp69, metadata !8675, metadata !DIExpression(DW_OP_deref)), !dbg !8738
  %call89 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* nonnull %temp69) #7, !dbg !8744
  %call90 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* nonnull %set2, i32 %call89) #7, !dbg !8744
  %tobool92 = icmp eq i8 %call90, 0, !dbg !8744
  br i1 %tobool92, label %cleanup95, label %if.end94, !dbg !8746

if.end94:                                         ; preds = %land.lhs.true88, %if.end81
  br label %cleanup95, !dbg !8747

cleanup95:                                        ; preds = %land.lhs.true88, %lor.lhs.false86, %if.then68, %if.end94
  %cleanup.dest.slot.2 = phi i1 [ true, %if.end94 ], [ false, %if.then68 ], [ false, %land.lhs.true88 ], [ false, %lor.lhs.false86 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8, !dbg !8747
  br i1 %cleanup.dest.slot.2, label %if.end98, label %return

if.end98:                                         ; preds = %if.end58, %cleanup95, %land.lhs.true60
  br label %return, !dbg !8748

return:                                           ; preds = %cleanup95, %cleanup55, %cleanup, %if.end98
  %retval.5 = phi i8 [ 0, %cleanup ], [ 0, %cleanup55 ], [ 0, %cleanup95 ], [ 1, %if.end98 ], !dbg !8678
  ret i8 %retval.5, !dbg !8749
}

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @value_dies_in_block_x(%struct.pre_expr_d* %expr, %struct.basic_block_def* %block) unnamed_addr #5 !dbg !8750 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %ref = alloca %struct.ao_ref_s, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !8754, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !8755, metadata !DIExpression()), !dbg !8768
  %u = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, !dbg !8769
  %reference = bitcast %union.pre_expr_union_d* %u to %struct.vn_reference_s**, !dbg !8769
  %0 = load %struct.vn_reference_s*, %struct.vn_reference_s** %reference, align 8, !dbg !8769
  %vuse1 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %0, i64 0, i32 2, !dbg !8770
  %1 = load %union.tree_node*, %union.tree_node** %vuse1, align 8, !dbg !8770
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !8756, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %0, metadata !8757, metadata !DIExpression()), !dbg !8768
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !8771
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8771
  %call = tail call fastcc i32 @get_expression_id(%struct.pre_expr_d* %expr) #7, !dbg !8772
  call void @llvm.dbg.value(metadata i32 %call, metadata !8760, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata i8 0, metadata !8761, metadata !DIExpression()), !dbg !8768
  %3 = bitcast %struct.ao_ref_s* %ref to i8*, !dbg !8773
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #8, !dbg !8773
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !8774
  br i1 %tobool, label %cleanup62, label %if.end, !dbg !8776

if.end:                                           ; preds = %entry
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !8777
  %4 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !8777
  %5 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !8777
  %expr_dies = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %5, i64 0, i32 7, !dbg !8777
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expr_dies, align 8, !dbg !8777
  %tobool4 = icmp eq %struct.bitmap_head_def* %6, null, !dbg !8777
  br i1 %tobool4, label %if.end14, label %land.lhs.true, !dbg !8779

land.lhs.true:                                    ; preds = %if.end
  %mul = shl i32 %call, 1, !dbg !8780
  %call7 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %6, i32 %mul) #6, !dbg !8781
  %tobool8 = icmp eq i32 %call7, 0, !dbg !8781
  br i1 %tobool8, label %if.end14, label %if.then9, !dbg !8782

if.then9:                                         ; preds = %land.lhs.true
  %7 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !8783
  %expr_dies11 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %7, i64 0, i32 7, !dbg !8783
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expr_dies11, align 8, !dbg !8783
  %add = or i32 %mul, 1, !dbg !8784
  %call13 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %add) #6, !dbg !8785
  %conv = trunc i32 %call13 to i8, !dbg !8785
  br label %cleanup62, !dbg !8786

if.end14:                                         ; preds = %land.lhs.true, %if.end
  %base = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 1, !dbg !8787
  store %union.tree_node* null, %union.tree_node** %base, align 8, !dbg !8788
  %9 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8789
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !8789
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %block) #7, !dbg !8789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !8789
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !8789
  %set = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %0, i64 0, i32 3, !dbg !8790
  %type = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %0, i64 0, i32 4, !dbg !8790
  %operands = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %0, i64 0, i32 5, !dbg !8790
  br label %for.cond, !dbg !8792

for.cond:                                         ; preds = %for.inc, %if.end14
  %res.0 = phi i8 [ 0, %if.end14 ], [ %res.1, %for.inc ], !dbg !8768
  call void @llvm.dbg.value(metadata i8 %res.0, metadata !8761, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8759, metadata !DIExpression(DW_OP_deref)), !dbg !8768
  %call15 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8793
  %tobool16 = icmp eq i8 %call15, 0, !dbg !8794
  br i1 %tobool16, label %for.body, label %for.end, !dbg !8795

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8759, metadata !DIExpression(DW_OP_deref)), !dbg !8768
  %call17 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8796
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call17, metadata !8758, metadata !DIExpression()), !dbg !8768
  %call18 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %call17) #7, !dbg !8797
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !8763, metadata !DIExpression()), !dbg !8798
  %call19 = call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %call17) #7, !dbg !8799
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !8767, metadata !DIExpression()), !dbg !8798
  %tobool20 = icmp eq %union.tree_node* %call18, null, !dbg !8800
  br i1 %tobool20, label %cleanup, label %if.end22, !dbg !8802

if.end22:                                         ; preds = %for.body
  %tobool23 = icmp eq %union.tree_node* %call19, null, !dbg !8803
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !8805

if.then24:                                        ; preds = %if.end22
  %cmp = icmp eq %union.tree_node* %call18, %1, !dbg !8806
  %. = select i1 %cmp, i32 2, i32 4, !dbg !8809
  br label %cleanup, !dbg !8809

if.end28:                                         ; preds = %if.end22
  %10 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !8810
  %cmp30 = icmp eq %union.tree_node* %10, null, !dbg !8811
  br i1 %cmp30, label %land.lhs.true32, label %if.end36, !dbg !8812

land.lhs.true32:                                  ; preds = %if.end28
  %11 = load i32, i32* %set, align 8, !dbg !8813
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8814
  %13 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !8815
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ref, metadata !8762, metadata !DIExpression(DW_OP_deref)), !dbg !8768
  %call33 = call zeroext i8 @ao_ref_init_from_vn_reference(%struct.ao_ref_s* nonnull %ref, i32 %11, %union.tree_node* %12, %struct.VEC_vn_reference_op_s_heap* %13) #6, !dbg !8816
  %tobool34 = icmp eq i8 %call33, 0, !dbg !8816
  br i1 %tobool34, label %cleanup, label %if.end36, !dbg !8817

if.end36:                                         ; preds = %land.lhs.true32, %if.end28
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ref, metadata !8762, metadata !DIExpression(DW_OP_deref)), !dbg !8768
  %call37 = call zeroext i8 @stmt_may_clobber_ref_p_1(%union.gimple_statement_d* %call17, %struct.ao_ref_s* nonnull %ref) #6, !dbg !8818
  %tobool38 = icmp ne i8 %call37, 0, !dbg !8818
  %.res.0 = select i1 %tobool38, i8 1, i8 %res.0, !dbg !8820
  %.1 = select i1 %tobool38, i32 2, i32 0, !dbg !8820
  br label %cleanup, !dbg !8820

cleanup:                                          ; preds = %land.lhs.true32, %for.body, %if.end36, %if.then24
  %res.1 = phi i8 [ %res.0, %for.body ], [ %res.0, %if.then24 ], [ 1, %land.lhs.true32 ], [ %.res.0, %if.end36 ], !dbg !8768
  %cleanup.dest.slot.0 = phi i32 [ 4, %for.body ], [ %., %if.then24 ], [ 2, %land.lhs.true32 ], [ %.1, %if.end36 ]
  call void @llvm.dbg.value(metadata i8 %res.1, metadata !8761, metadata !DIExpression()), !dbg !8768
  %switch = icmp eq i32 %cleanup.dest.slot.0, 2
  br i1 %switch, label %for.end, label %for.inc

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8759, metadata !DIExpression(DW_OP_deref)), !dbg !8768
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !8821
  br label %for.cond, !dbg !8822, !llvm.loop !8823

for.end:                                          ; preds = %cleanup, %for.cond
  %res.2 = phi i8 [ %res.1, %cleanup ], [ %res.0, %for.cond ], !dbg !8768
  call void @llvm.dbg.value(metadata i8 %res.2, metadata !8761, metadata !DIExpression()), !dbg !8768
  %14 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !8825
  %expr_dies43 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %14, i64 0, i32 7, !dbg !8825
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expr_dies43, align 8, !dbg !8825
  %tobool44 = icmp eq %struct.bitmap_head_def* %15, null, !dbg !8825
  br i1 %tobool44, label %if.then45, label %if.end49, !dbg !8827

if.then45:                                        ; preds = %for.end
  %call46 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @grand_bitmap_obstack) #6, !dbg !8828
  %16 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !8829
  %expr_dies48 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %16, i64 0, i32 7, !dbg !8829
  store %struct.bitmap_head_def* %call46, %struct.bitmap_head_def** %expr_dies48, align 8, !dbg !8830
  %.pre = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !8831
  %expr_dies51.phi.trans.insert = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %.pre, i64 0, i32 7, !dbg !8768
  %.pre2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expr_dies51.phi.trans.insert, align 8, !dbg !8831
  br label %if.end49, !dbg !8829

if.end49:                                         ; preds = %for.end, %if.then45
  %17 = phi %struct.bitmap_head_def* [ %15, %for.end ], [ %.pre2, %if.then45 ], !dbg !8831
  %mul52 = shl i32 %call, 1, !dbg !8832
  %call53 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %17, i32 %mul52) #6, !dbg !8833
  %tobool54 = icmp eq i8 %res.2, 0, !dbg !8834
  br i1 %tobool54, label %cleanup62, label %if.then55, !dbg !8836

if.then55:                                        ; preds = %if.end49
  %18 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %4, align 8, !dbg !8837
  %expr_dies57 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %18, i64 0, i32 7, !dbg !8837
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expr_dies57, align 8, !dbg !8837
  %add59 = or i32 %mul52, 1, !dbg !8838
  %call60 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %19, i32 %add59) #6, !dbg !8839
  br label %cleanup62, !dbg !8839

cleanup62:                                        ; preds = %if.end49, %entry, %if.then55, %if.then9
  %retval.0 = phi i8 [ %conv, %if.then9 ], [ 0, %entry ], [ %res.2, %if.then55 ], [ 0, %if.end49 ], !dbg !8768
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #8, !dbg !8840
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8840
  ret i8 %retval.0, !dbg !8840
}

declare dso_local zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %vec_) unnamed_addr #0 !dbg !8841 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !8845, metadata !DIExpression()), !dbg !8846
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !8847
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8847

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !8847
  %0 = load i32, i32* %num, align 8, !dbg !8847
  br label %cond.end, !dbg !8847

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !8847
  ret i32 %cond, !dbg !8847
}

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @bitmap_set_subtract_values(%struct.bitmap_set* %a, %struct.bitmap_set* %b) unnamed_addr #5 !dbg !8848 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %a, metadata !8850, metadata !DIExpression()), !dbg !8859
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %b, metadata !8851, metadata !DIExpression()), !dbg !8859
  %0 = bitcast i32* %i to i8*, !dbg !8860
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8860
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !8861
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !8861
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @grand_bitmap_obstack) #6, !dbg !8862
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !8854, metadata !DIExpression()), !dbg !8859
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %a, i64 0, i32 0, !dbg !8863
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !8863
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %2) #6, !dbg !8864
  call void @llvm.dbg.value(metadata i32* %i, metadata !8852, metadata !DIExpression(DW_OP_deref)), !dbg !8859
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8853, metadata !DIExpression(DW_OP_deref)), !dbg !8859
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call, i32 0, i32* nonnull %i) #7, !dbg !8865
  br label %for.cond, !dbg !8865

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !8852, metadata !DIExpression(DW_OP_deref)), !dbg !8859
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8853, metadata !DIExpression(DW_OP_deref)), !dbg !8859
  %call1 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !8866
  %tobool = icmp eq i8 %call1, 0, !dbg !8865
  br i1 %tobool, label %for.end, label %for.body, !dbg !8865

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !8867
  call void @llvm.dbg.value(metadata i32 %3, metadata !8852, metadata !DIExpression()), !dbg !8859
  %call2 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %3) #7, !dbg !8868
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call2, metadata !8855, metadata !DIExpression()), !dbg !8869
  %call3 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call2) #7, !dbg !8870
  %call4 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %b, i32 %call3) #7, !dbg !8872
  %tobool5 = icmp eq i8 %call4, 0, !dbg !8872
  br i1 %tobool5, label %for.inc, label %if.then, !dbg !8873

if.then:                                          ; preds = %for.body
  call fastcc void @bitmap_remove_from_set(%struct.bitmap_set* %a, %struct.pre_expr_d* %call2) #7, !dbg !8874
  br label %for.inc, !dbg !8874

for.inc:                                          ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata i32* %i, metadata !8852, metadata !DIExpression(DW_OP_deref)), !dbg !8859
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8853, metadata !DIExpression(DW_OP_deref)), !dbg !8859
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !8866
  br label %for.cond, !dbg !8866, !llvm.loop !8875

for.end:                                          ; preds = %for.cond
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !8877
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !8854, metadata !DIExpression()), !dbg !8859
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !8878
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8878
  ret void, !dbg !8878
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dependent_clean(%struct.bitmap_set* %set1, %struct.bitmap_set* %set2, %struct.basic_block_def* %block) unnamed_addr #5 !dbg !8879 {
entry:
  %exprs = alloca %struct.VEC_pre_expr_heap*, align 8
  %expr = alloca %struct.pre_expr_d*, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set1, metadata !8883, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %set2, metadata !8884, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !8885, metadata !DIExpression()), !dbg !8889
  %0 = bitcast %struct.VEC_pre_expr_heap** %exprs to i8*, !dbg !8890
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8890
  %call = tail call fastcc %struct.VEC_pre_expr_heap* @sorted_array_from_bitmap_set(%struct.bitmap_set* %set1) #7, !dbg !8891
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %call, metadata !8886, metadata !DIExpression()), !dbg !8889
  store %struct.VEC_pre_expr_heap* %call, %struct.VEC_pre_expr_heap** %exprs, align 8, !dbg !8892
  %1 = bitcast %struct.pre_expr_d** %expr to i8*, !dbg !8893
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8893
  call void @llvm.dbg.value(metadata i32 0, metadata !8888, metadata !DIExpression()), !dbg !8889
  br label %for.cond, !dbg !8894

for.cond:                                         ; preds = %for.inc, %entry
  %2 = phi %struct.VEC_pre_expr_heap* [ %call, %entry ], [ %.pre, %for.inc ], !dbg !8896
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !8898
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8888, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %2, metadata !8886, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %2, metadata !8886, metadata !DIExpression()), !dbg !8889
  %base = getelementptr inbounds %struct.VEC_pre_expr_heap, %struct.VEC_pre_expr_heap* %2, i64 0, i32 0, !dbg !8896
  call void @llvm.dbg.value(metadata %struct.pre_expr_d** %expr, metadata !8887, metadata !DIExpression(DW_OP_deref)), !dbg !8889
  %call1 = call fastcc i32 @VEC_pre_expr_base_iterate(%struct.VEC_pre_expr_base* %base, i32 %i.0, %struct.pre_expr_d** nonnull %expr) #7, !dbg !8896
  %tobool2 = icmp eq i32 %call1, 0, !dbg !8899
  br i1 %tobool2, label %for.end, label %for.body, !dbg !8899

for.body:                                         ; preds = %for.cond
  %3 = load %struct.pre_expr_d*, %struct.pre_expr_d** %expr, align 8, !dbg !8900
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %3, metadata !8887, metadata !DIExpression()), !dbg !8889
  %call3 = call fastcc zeroext i8 @valid_in_sets(%struct.bitmap_set* %set1, %struct.bitmap_set* %set2, %struct.pre_expr_d* %3, %struct.basic_block_def* %block) #7, !dbg !8903
  %tobool4 = icmp eq i8 %call3, 0, !dbg !8903
  br i1 %tobool4, label %if.then, label %for.inc, !dbg !8904

if.then:                                          ; preds = %for.body
  %4 = load %struct.pre_expr_d*, %struct.pre_expr_d** %expr, align 8, !dbg !8905
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %4, metadata !8887, metadata !DIExpression()), !dbg !8889
  call fastcc void @bitmap_remove_from_set(%struct.bitmap_set* %set1, %struct.pre_expr_d* %4) #7, !dbg !8906
  br label %for.inc, !dbg !8906

for.inc:                                          ; preds = %for.body, %if.then
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8907
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8888, metadata !DIExpression()), !dbg !8889
  %.pre = load %struct.VEC_pre_expr_heap*, %struct.VEC_pre_expr_heap** %exprs, align 8, !dbg !8896
  br label %for.cond, !dbg !8908, !llvm.loop !8909

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap** %exprs, metadata !8886, metadata !DIExpression(DW_OP_deref)), !dbg !8889
  call fastcc void @VEC_pre_expr_heap_free(%struct.VEC_pre_expr_heap** nonnull %exprs) #7, !dbg !8911
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8912
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8912
  ret void, !dbg !8912
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @insert_aux(%struct.basic_block_def* %block) unnamed_addr #5 !dbg !8913 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !8917, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i8 0, metadata !8919, metadata !DIExpression()), !dbg !8934
  %tobool = icmp eq %struct.basic_block_def* %block, null, !dbg !8935
  br i1 %tobool, label %if.end27, label %if.then, !dbg !8936

if.then:                                          ; preds = %entry
  %call = tail call %struct.basic_block_def* @get_immediate_dominator(i32 1, %struct.basic_block_def* nonnull %block) #6, !dbg !8937
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !8920, metadata !DIExpression()), !dbg !8938
  %tobool1 = icmp eq %struct.basic_block_def* %call, null, !dbg !8939
  br i1 %tobool1, label %if.end27, label %if.then2, !dbg !8940

if.then2:                                         ; preds = %if.then
  %0 = bitcast i32* %i to i8*, !dbg !8941
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8941
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !8942
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !8942
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 2, !dbg !8943
  %2 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !8943
  %3 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %2, align 8, !dbg !8943
  %new_sets = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %3, i64 0, i32 6, !dbg !8943
  %4 = load %struct.bitmap_set*, %struct.bitmap_set** %new_sets, align 8, !dbg !8943
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %4, metadata !8927, metadata !DIExpression()), !dbg !8944
  %tobool3 = icmp eq %struct.bitmap_set* %4, null, !dbg !8945
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !8946

if.then4:                                         ; preds = %if.then2
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %4, i64 0, i32 0, !dbg !8947
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !8947
  call void @llvm.dbg.value(metadata i32* %i, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8944
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8926, metadata !DIExpression(DW_OP_deref)), !dbg !8944
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %5, i32 0, i32* nonnull %i) #7, !dbg !8947
  %aux8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !8948
  %6 = bitcast i8** %aux8 to %struct.bb_bitmap_sets**, !dbg !8948
  br label %for.cond, !dbg !8947

for.cond:                                         ; preds = %for.body, %if.then4
  call void @llvm.dbg.value(metadata i32* %i, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8944
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8926, metadata !DIExpression(DW_OP_deref)), !dbg !8944
  %call5 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !8949
  %tobool6 = icmp eq i8 %call5, 0, !dbg !8947
  br i1 %tobool6, label %if.end.loopexit, label %for.body, !dbg !8947

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !8950
  call void @llvm.dbg.value(metadata i32 %7, metadata !8923, metadata !DIExpression()), !dbg !8944
  %call7 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %7) #7, !dbg !8951
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call7, metadata !8928, metadata !DIExpression()), !dbg !8948
  %8 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %6, align 8, !dbg !8952
  %new_sets9 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %8, i64 0, i32 6, !dbg !8952
  %9 = load %struct.bitmap_set*, %struct.bitmap_set** %new_sets9, align 8, !dbg !8952
  call fastcc void @bitmap_value_replace_in_set(%struct.bitmap_set* %9, %struct.pre_expr_d* %call7) #7, !dbg !8953
  %10 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %6, align 8, !dbg !8954
  %avail_out = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %10, i64 0, i32 3, !dbg !8954
  %11 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out, align 8, !dbg !8954
  call fastcc void @bitmap_value_replace_in_set(%struct.bitmap_set* %11, %struct.pre_expr_d* %call7) #7, !dbg !8955
  call void @llvm.dbg.value(metadata i32* %i, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8944
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8926, metadata !DIExpression(DW_OP_deref)), !dbg !8944
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !8949
  br label %for.cond, !dbg !8949, !llvm.loop !8956

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !8958

if.end:                                           ; preds = %if.end.loopexit, %if.then2
  %call11 = call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* nonnull %block) #7, !dbg !8958
  %tobool12 = icmp eq i8 %call11, 0, !dbg !8958
  br i1 %tobool12, label %if.then13, label %if.end25, !dbg !8960

if.then13:                                        ; preds = %if.end
  %call14 = call fastcc zeroext i8 @do_regular_insertion(%struct.basic_block_def* nonnull %block, %struct.basic_block_def* nonnull %call) #7, !dbg !8961
  call void @llvm.dbg.value(metadata i8 %call14, metadata !8919, metadata !DIExpression()), !dbg !8934
  %12 = load i8, i8* @do_partial_partial, align 1, !dbg !8963
  %tobool17 = icmp eq i8 %12, 0, !dbg !8963
  br i1 %tobool17, label %if.end25, label %if.then18, !dbg !8965

if.then18:                                        ; preds = %if.then13
  %call19 = call fastcc zeroext i8 @do_partial_partial_insertion(%struct.basic_block_def* nonnull %block, %struct.basic_block_def* nonnull %call) #7, !dbg !8966
  %or222 = or i8 %call14, %call19, !dbg !8967
  call void @llvm.dbg.value(metadata i8 %or222, metadata !8919, metadata !DIExpression()), !dbg !8934
  br label %if.end25, !dbg !8968

if.end25:                                         ; preds = %if.then13, %if.end, %if.then18
  %new_stuff.1 = phi i8 [ 0, %if.end ], [ %or222, %if.then18 ], [ %call14, %if.then13 ], !dbg !8934
  call void @llvm.dbg.value(metadata i8 %new_stuff.1, metadata !8919, metadata !DIExpression()), !dbg !8934
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !8969
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8969
  br label %if.end27, !dbg !8970

if.end27:                                         ; preds = %if.then, %entry, %if.end25
  %new_stuff.3 = phi i8 [ 0, %entry ], [ %new_stuff.1, %if.end25 ], [ 0, %if.then ], !dbg !8971
  call void @llvm.dbg.value(metadata i8 %new_stuff.3, metadata !8919, metadata !DIExpression()), !dbg !8934
  %call28 = call %struct.basic_block_def* @first_dom_son(i32 1, %struct.basic_block_def* %block) #6, !dbg !8972
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call28, metadata !8918, metadata !DIExpression()), !dbg !8934
  br label %for.cond29, !dbg !8974

for.cond29:                                       ; preds = %for.body31, %if.end27
  %son.0 = phi %struct.basic_block_def* [ %call28, %if.end27 ], [ %call38, %for.body31 ], !dbg !8975
  %new_stuff.4 = phi i8 [ %new_stuff.3, %if.end27 ], [ %or351, %for.body31 ], !dbg !8934
  call void @llvm.dbg.value(metadata i8 %new_stuff.4, metadata !8919, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %son.0, metadata !8918, metadata !DIExpression()), !dbg !8934
  %tobool30 = icmp eq %struct.basic_block_def* %son.0, null, !dbg !8976
  br i1 %tobool30, label %for.end39, label %for.body31, !dbg !8976

for.body31:                                       ; preds = %for.cond29
  %call32 = call fastcc zeroext i8 @insert_aux(%struct.basic_block_def* nonnull %son.0) #7, !dbg !8977
  %or351 = or i8 %new_stuff.4, %call32, !dbg !8980
  call void @llvm.dbg.value(metadata i8 %or351, metadata !8919, metadata !DIExpression()), !dbg !8934
  %call38 = call %struct.basic_block_def* @next_dom_son(i32 1, %struct.basic_block_def* nonnull %son.0) #6, !dbg !8981
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call38, metadata !8918, metadata !DIExpression()), !dbg !8934
  br label %for.cond29, !dbg !8982, !llvm.loop !8983

for.end39:                                        ; preds = %for.cond29
  %new_stuff.4.lcssa = phi i8 [ %new_stuff.4, %for.cond29 ], !dbg !8934
  call void @llvm.dbg.value(metadata i8 %new_stuff.4.lcssa, metadata !8919, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i8 %new_stuff.4.lcssa, metadata !8919, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i8 %new_stuff.4.lcssa, metadata !8919, metadata !DIExpression()), !dbg !8934
  ret i8 %new_stuff.4.lcssa, !dbg !8985
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !8986 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8988, metadata !DIExpression()), !dbg !8989
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !8990
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !8990
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !8990
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8990

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !8990
  br label %cond.end, !dbg !8990

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8990
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !8990
  %cmp = icmp eq i32 %call, 1, !dbg !8991
  %conv2 = zext i1 %cmp to i8, !dbg !8990
  ret i8 %conv2, !dbg !8992
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @do_regular_insertion(%struct.basic_block_def* %block, %struct.basic_block_def* %dom) unnamed_addr #5 !dbg !8993 {
entry:
  %exprs = alloca %struct.VEC_pre_expr_heap*, align 8
  %expr = alloca %struct.pre_expr_d*, align 8
  %pred = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !8997, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dom, metadata !8998, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata i8 0, metadata !8999, metadata !DIExpression()), !dbg !9052
  %0 = bitcast %struct.VEC_pre_expr_heap** %exprs to i8*, !dbg !9053
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9053
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !9054
  %1 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !9054
  %2 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %1, align 8, !dbg !9054
  %antic_in = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %2, i64 0, i32 4, !dbg !9054
  %3 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in, align 8, !dbg !9054
  %call = tail call fastcc %struct.VEC_pre_expr_heap* @sorted_array_from_bitmap_set(%struct.bitmap_set* %3) #7, !dbg !9055
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %call, metadata !9000, metadata !DIExpression()), !dbg !9052
  store %struct.VEC_pre_expr_heap* %call, %struct.VEC_pre_expr_heap** %exprs, align 8, !dbg !9056
  %4 = bitcast %struct.pre_expr_d** %expr to i8*, !dbg !9057
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !9057
  call void @llvm.dbg.value(metadata i32 0, metadata !9002, metadata !DIExpression()), !dbg !9052
  %5 = bitcast %struct.edge_def** %pred to i8*, !dbg !9058
  %6 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !9058
  %aux8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %dom, i64 0, i32 2, !dbg !9059
  %7 = bitcast i8** %aux8 to %struct.bb_bitmap_sets**, !dbg !9059
  %8 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !9061
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 0, !dbg !9061
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !9061
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !9061
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !9062
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !9062
  %13 = bitcast i32* %j to i8*, !dbg !9063
  %14 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !9063
  br label %for.cond, !dbg !9064

for.cond:                                         ; preds = %for.inc150, %entry
  %.pre9 = phi %struct.VEC_pre_expr_heap* [ %call, %entry ], [ %.pre, %for.inc150 ]
  %15 = phi %struct.VEC_pre_expr_heap* [ %call, %entry ], [ %.pre, %for.inc150 ], !dbg !9065
  %i.0 = phi i32 [ 0, %entry ], [ %inc151, %for.inc150 ], !dbg !9066
  %new_stuff.0 = phi i8 [ 0, %entry ], [ %new_stuff.5, %for.inc150 ], !dbg !9067
  call void @llvm.dbg.value(metadata i8 %new_stuff.0, metadata !8999, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9002, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %15, metadata !9000, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %15, metadata !9000, metadata !DIExpression()), !dbg !9052
  %base = getelementptr inbounds %struct.VEC_pre_expr_heap, %struct.VEC_pre_expr_heap* %15, i64 0, i32 0, !dbg !9065
  call void @llvm.dbg.value(metadata %struct.pre_expr_d** %expr, metadata !9001, metadata !DIExpression(DW_OP_deref)), !dbg !9052
  %call1 = call fastcc i32 @VEC_pre_expr_base_iterate(%struct.VEC_pre_expr_base* %base, i32 %i.0, %struct.pre_expr_d** nonnull %expr) #7, !dbg !9065
  %tobool2 = icmp eq i32 %call1, 0, !dbg !9068
  br i1 %tobool2, label %for.end152, label %for.body, !dbg !9068

for.body:                                         ; preds = %for.cond
  %16 = load %struct.pre_expr_d*, %struct.pre_expr_d** %expr, align 8, !dbg !9069
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %16, metadata !9001, metadata !DIExpression()), !dbg !9052
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %16, i64 0, i32 0, !dbg !9070
  %17 = load i32, i32* %kind, align 8, !dbg !9070
  %cmp = icmp eq i32 %17, 0, !dbg !9071
  br i1 %cmp, label %for.inc150, label %if.then, !dbg !9072

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i8 0, metadata !9010, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 0, metadata !9011, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 1, metadata !9012, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* null, metadata !9013, metadata !DIExpression()), !dbg !9058
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !9073
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* null, metadata !9016, metadata !DIExpression()), !dbg !9058
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !9074
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* null, metadata !9018, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 0, metadata !9019, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %16, metadata !9001, metadata !DIExpression()), !dbg !9052
  %call3 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %16) #7, !dbg !9075
  call void @llvm.dbg.value(metadata i32 %call3, metadata !9009, metadata !DIExpression()), !dbg !9058
  %18 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %1, align 8, !dbg !9076
  %phi_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %18, i64 0, i32 1, !dbg !9076
  %19 = load %struct.bitmap_set*, %struct.bitmap_set** %phi_gen, align 8, !dbg !9076
  %call5 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %19, i32 %call3) #7, !dbg !9078
  %tobool6 = icmp eq i8 %call5, 0, !dbg !9078
  br i1 %tobool6, label %if.end, label %cleanup135, !dbg !9079

if.end:                                           ; preds = %if.then
  %20 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %7, align 8, !dbg !9080
  %avail_out = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %20, i64 0, i32 3, !dbg !9080
  %21 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out, align 8, !dbg !9080
  %call9 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %21, i32 %call3) #7, !dbg !9081
  %tobool10 = icmp eq i8 %call9, 0, !dbg !9081
  br i1 %tobool10, label %if.end17, label %if.then11, !dbg !9082

if.then11:                                        ; preds = %if.end
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9083
  %tobool12 = icmp eq %struct._IO_FILE* %22, null, !dbg !9083
  br i1 %tobool12, label %cleanup135, label %land.lhs.true, !dbg !9086

land.lhs.true:                                    ; preds = %if.then11
  %23 = load i32, i32* @dump_flags, align 4, !dbg !9087
  %and = and i32 %23, 8, !dbg !9088
  %tobool13 = icmp eq i32 %and, 0, !dbg !9088
  br i1 %tobool13, label %cleanup135, label %if.then14, !dbg !9089

if.then14:                                        ; preds = %land.lhs.true
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %22, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !9090
  br label %cleanup135, !dbg !9090

if.end17:                                         ; preds = %if.end
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9091
  %cfg = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, i32 1, !dbg !9091
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9091
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i64 0, i32 5, !dbg !9091
  %26 = load i32, i32* %x_last_basic_block, align 8, !dbg !9091
  %conv = sext i32 %26 to i64, !dbg !9091
  %call18 = call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !9091
  %27 = bitcast i8* %call18 to %struct.pre_expr_d**, !dbg !9091
  call void @llvm.dbg.value(metadata %struct.pre_expr_d** %27, metadata !9003, metadata !DIExpression()), !dbg !9058
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !9092
  %call19 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !9092
  %28 = extractvalue { i32, %struct.VEC_edge_gc** } %call19, 0, !dbg !9092
  store i32 %28, i32* %9, align 8, !dbg !9092
  %29 = extractvalue { i32, %struct.VEC_edge_gc** } %call19, 1, !dbg !9092
  store %struct.VEC_edge_gc** %29, %struct.VEC_edge_gc*** %10, align 8, !dbg !9092
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !9092
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !9092
  br label %for.cond20, !dbg !9092

for.cond20:                                       ; preds = %for.inc, %if.end17
  %first_s.0 = phi %struct.pre_expr_d* [ null, %if.end17 ], [ %first_s.3, %for.inc ], !dbg !9093
  %all_same.0 = phi i8 [ 1, %if.end17 ], [ %all_same.4, %for.inc ], !dbg !9094
  %cant_insert.0 = phi i8 [ 0, %if.end17 ], [ %cant_insert.1, %for.inc ], !dbg !9058
  %by_some.0 = phi i8 [ 0, %if.end17 ], [ %by_some.2, %for.inc ], !dbg !9095
  %eprime.0 = phi %struct.pre_expr_d* [ null, %if.end17 ], [ %eprime.1, %for.inc ], !dbg !9058
  %edoubleprime.0 = phi %struct.pre_expr_d* [ null, %if.end17 ], [ %edoubleprime.1, %for.inc ], !dbg !9096
  %do_insertion.0 = phi i8 [ 0, %if.end17 ], [ %do_insertion.3, %for.inc ], !dbg !9097
  call void @llvm.dbg.value(metadata i8 %do_insertion.0, metadata !9019, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %edoubleprime.0, metadata !9018, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %eprime.0, metadata !9016, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 %by_some.0, metadata !9010, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 %cant_insert.0, metadata !9011, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 %all_same.0, metadata !9012, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %first_s.0, metadata !9013, metadata !DIExpression()), !dbg !9058
  %30 = load i32, i32* %11, align 8, !dbg !9098
  %31 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !9098
  call void @llvm.dbg.value(metadata %struct.edge_def** %pred, metadata !9014, metadata !DIExpression(DW_OP_deref)), !dbg !9058
  %call21 = call fastcc zeroext i8 @ei_cond(i32 %30, %struct.VEC_edge_gc** %31, %struct.edge_def** nonnull %pred) #7, !dbg !9098
  %tobool22 = icmp eq i8 %call21, 0, !dbg !9092
  br i1 %tobool22, label %for.end, label %for.body23, !dbg !9092

for.body23:                                       ; preds = %for.cond20
  %32 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9099
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !9014, metadata !DIExpression()), !dbg !9058
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 7, !dbg !9099
  %33 = load i32, i32* %flags, align 8, !dbg !9099
  %and24 = and i32 %33, 16, !dbg !9099
  %tobool25 = icmp eq i32 %and24, 0, !dbg !9099
  br i1 %tobool25, label %cond.end28, label %cond.true26, !dbg !9099

cond.true26:                                      ; preds = %for.body23
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3520, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9099
  %.pre8 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9100
  br label %cond.end28, !dbg !9099

cond.end28:                                       ; preds = %for.body23, %cond.true26
  %34 = phi %struct.edge_def* [ %32, %for.body23 ], [ %.pre8, %cond.true26 ], !dbg !9100
  call void @llvm.dbg.value(metadata %struct.edge_def* %34, metadata !9014, metadata !DIExpression()), !dbg !9058
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %34, i64 0, i32 0, !dbg !9101
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !9101
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %35, metadata !9015, metadata !DIExpression()), !dbg !9058
  %36 = load %struct.pre_expr_d*, %struct.pre_expr_d** %expr, align 8, !dbg !9102
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %36, metadata !9001, metadata !DIExpression()), !dbg !9052
  %37 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %1, align 8, !dbg !9103
  %antic_in31 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %37, i64 0, i32 4, !dbg !9103
  %38 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in31, align 8, !dbg !9103
  %call32 = call fastcc %struct.pre_expr_d* @phi_translate(%struct.pre_expr_d* %36, %struct.bitmap_set* %38, %struct.bitmap_set* null, %struct.basic_block_def* %35, %struct.basic_block_def* %block) #7, !dbg !9104
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call32, metadata !9016, metadata !DIExpression()), !dbg !9058
  %cmp33 = icmp eq %struct.pre_expr_d* %call32, null, !dbg !9105
  br i1 %cmp33, label %cleanup, label %if.end36, !dbg !9107

if.end36:                                         ; preds = %cond.end28
  %call37 = call fastcc %struct.pre_expr_d* @fully_constant_expression(%struct.pre_expr_d* nonnull %call32) #7, !dbg !9108
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call37, metadata !9016, metadata !DIExpression()), !dbg !9058
  %call38 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call37) #7, !dbg !9109
  call void @llvm.dbg.value(metadata i32 %call38, metadata !9020, metadata !DIExpression()), !dbg !9110
  %aux39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i64 0, i32 2, !dbg !9111
  %39 = bitcast i8** %aux39 to %struct.bb_bitmap_sets**, !dbg !9111
  %40 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %39, align 8, !dbg !9111
  %avail_out40 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %40, i64 0, i32 3, !dbg !9111
  %41 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out40, align 8, !dbg !9111
  %call41 = call fastcc %struct.pre_expr_d* @bitmap_find_leader(%struct.bitmap_set* %41, i32 %call38, %union.gimple_statement_d* null) #7, !dbg !9112
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call41, metadata !9018, metadata !DIExpression()), !dbg !9058
  %cmp42 = icmp eq %struct.pre_expr_d* %call41, null, !dbg !9113
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i64 0, i32 9, !dbg !9115
  %42 = load i32, i32* %index, align 8, !dbg !9115
  %idxprom = sext i32 %42 to i64, !dbg !9115
  %arrayidx = getelementptr inbounds %struct.pre_expr_d*, %struct.pre_expr_d** %27, i64 %idxprom, !dbg !9115
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !9116

if.then44:                                        ; preds = %if.end36
  store %struct.pre_expr_d* %call37, %struct.pre_expr_d** %arrayidx, align 8, !dbg !9117
  call void @llvm.dbg.value(metadata i8 0, metadata !9012, metadata !DIExpression()), !dbg !9058
  br label %cleanup, !dbg !9119

if.else:                                          ; preds = %if.end36
  store %struct.pre_expr_d* %call41, %struct.pre_expr_d** %arrayidx, align 8, !dbg !9120
  call void @llvm.dbg.value(metadata i8 1, metadata !9010, metadata !DIExpression()), !dbg !9058
  %43 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9122
  call void @llvm.dbg.value(metadata %struct.edge_def* %43, metadata !9014, metadata !DIExpression()), !dbg !9058
  %call48 = call zeroext i8 @optimize_edge_for_speed_p(%struct.edge_def* %43) #6, !dbg !9124
  %tobool49 = icmp eq i8 %call48, 0, !dbg !9124
  %spec.select = select i1 %tobool49, i8 %do_insertion.0, i8 1, !dbg !9125
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !9019, metadata !DIExpression()), !dbg !9058
  %cmp52 = icmp eq %struct.pre_expr_d* %first_s.0, null, !dbg !9126
  br i1 %cmp52, label %cleanup, label %if.else55, !dbg !9128

if.else55:                                        ; preds = %if.else
  %44 = bitcast %struct.pre_expr_d* %first_s.0 to i8*, !dbg !9129
  %45 = bitcast %struct.pre_expr_d* %call41 to i8*, !dbg !9131
  %call56 = call i32 @pre_expr_eq(i8* nonnull %44, i8* nonnull %45) #7, !dbg !9132
  %tobool57 = icmp eq i32 %call56, 0, !dbg !9132
  %spec.select1 = select i1 %tobool57, i8 0, i8 %all_same.0, !dbg !9133
  call void @llvm.dbg.value(metadata i8 %spec.select1, metadata !9012, metadata !DIExpression()), !dbg !9058
  br label %cleanup

cleanup:                                          ; preds = %if.then44, %if.else, %if.else55, %cond.end28
  %first_s.3 = phi %struct.pre_expr_d* [ %first_s.0, %cond.end28 ], [ %first_s.0, %if.then44 ], [ %first_s.0, %if.else55 ], [ %call41, %if.else ], !dbg !9093
  %all_same.4 = phi i8 [ %all_same.0, %cond.end28 ], [ 0, %if.then44 ], [ %spec.select1, %if.else55 ], [ %all_same.0, %if.else ], !dbg !9058
  %cant_insert.1 = phi i8 [ 1, %cond.end28 ], [ %cant_insert.0, %if.then44 ], [ %cant_insert.0, %if.else55 ], [ %cant_insert.0, %if.else ], !dbg !9058
  %by_some.2 = phi i8 [ %by_some.0, %cond.end28 ], [ %by_some.0, %if.then44 ], [ 1, %if.else55 ], [ 1, %if.else ], !dbg !9095
  %eprime.1 = phi %struct.pre_expr_d* [ null, %cond.end28 ], [ %call37, %if.then44 ], [ %call37, %if.else55 ], [ %call37, %if.else ], !dbg !9110
  %edoubleprime.1 = phi %struct.pre_expr_d* [ %edoubleprime.0, %cond.end28 ], [ null, %if.then44 ], [ %call41, %if.else55 ], [ %call41, %if.else ], !dbg !9058
  %do_insertion.3 = phi i8 [ %do_insertion.0, %cond.end28 ], [ %do_insertion.0, %if.then44 ], [ %spec.select, %if.else55 ], [ %spec.select, %if.else ], !dbg !9097
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.end28 ], [ true, %if.then44 ], [ true, %if.else55 ], [ true, %if.else ]
  call void @llvm.dbg.value(metadata i8 %do_insertion.3, metadata !9019, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %edoubleprime.1, metadata !9018, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %eprime.1, metadata !9016, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 %by_some.2, metadata !9010, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 %cant_insert.1, metadata !9011, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 %all_same.4, metadata !9012, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %first_s.3, metadata !9013, metadata !DIExpression()), !dbg !9058
  br i1 %cleanup.dest.slot.0, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !9017, metadata !DIExpression(DW_OP_deref)), !dbg !9058
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !9098
  br label %for.cond20, !dbg !9098, !llvm.loop !9134

for.end:                                          ; preds = %for.cond20, %cleanup
  %all_same.5 = phi i8 [ %all_same.4, %cleanup ], [ %all_same.0, %for.cond20 ], !dbg !9094
  %cant_insert.2 = phi i8 [ %cant_insert.1, %cleanup ], [ %cant_insert.0, %for.cond20 ], !dbg !9058
  %by_some.3 = phi i8 [ %by_some.2, %cleanup ], [ %by_some.0, %for.cond20 ], !dbg !9095
  %eprime.2 = phi %struct.pre_expr_d* [ %eprime.1, %cleanup ], [ %eprime.0, %for.cond20 ], !dbg !9058
  %edoubleprime.2 = phi %struct.pre_expr_d* [ %edoubleprime.1, %cleanup ], [ %edoubleprime.0, %for.cond20 ], !dbg !9096
  %do_insertion.4 = phi i8 [ %do_insertion.3, %cleanup ], [ %do_insertion.0, %for.cond20 ], !dbg !9097
  call void @llvm.dbg.value(metadata i8 %do_insertion.4, metadata !9019, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %edoubleprime.2, metadata !9018, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %eprime.2, metadata !9016, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 %by_some.3, metadata !9010, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 %cant_insert.2, metadata !9011, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 %all_same.5, metadata !9012, metadata !DIExpression()), !dbg !9058
  %46 = or i8 %cant_insert.2, %all_same.5, !dbg !9136
  %47 = icmp eq i8 %46, 0, !dbg !9136
  %tobool67 = icmp ne i8 %by_some.3, 0, !dbg !9137
  %or.cond2 = and i1 %47, %tobool67, !dbg !9136
  %tobool70 = icmp ne i8 %do_insertion.4, 0, !dbg !9138
  %or.cond3 = and i1 %or.cond2, %tobool70, !dbg !9136
  br i1 %or.cond3, label %land.lhs.true71, label %if.else81, !dbg !9136

land.lhs.true71:                                  ; preds = %for.end
  %call72 = call zeroext i8 @dbg_cnt(i32 25) #6, !dbg !9139
  %tobool74 = icmp eq i8 %call72, 0, !dbg !9139
  br i1 %tobool74, label %if.else81, label %if.then75, !dbg !9140

if.then75:                                        ; preds = %land.lhs.true71
  %48 = load %struct.pre_expr_d*, %struct.pre_expr_d** %expr, align 8, !dbg !9141
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %48, metadata !9001, metadata !DIExpression()), !dbg !9052
  %call76 = call fastcc i32 @get_expression_id(%struct.pre_expr_d* %48) #7, !dbg !9144
  %call77 = call fastcc zeroext i8 @insert_into_preds_of_block(%struct.basic_block_def* %block, i32 %call76, %struct.pre_expr_d** %27) #7, !dbg !9145
  %tobool78 = icmp eq i8 %call77, 0, !dbg !9145
  %spec.select4 = select i1 %tobool78, i8 %new_stuff.0, i8 1, !dbg !9146
  call void @llvm.dbg.value(metadata i8 %spec.select4, metadata !8999, metadata !DIExpression()), !dbg !9052
  br label %if.end134, !dbg !9147

if.else81:                                        ; preds = %land.lhs.true71, %for.end
  %tobool82 = icmp eq i8 %cant_insert.2, 0, !dbg !9148
  %tobool85 = icmp ne i8 %all_same.5, 0, !dbg !9149
  %or.cond5 = and i1 %tobool82, %tobool85, !dbg !9150
  %tobool87 = icmp ne %struct.pre_expr_d* %eprime.2, null, !dbg !9151
  %or.cond6 = and i1 %or.cond5, %tobool87, !dbg !9150
  br i1 %or.cond6, label %land.lhs.true88, label %if.end134, !dbg !9150

land.lhs.true88:                                  ; preds = %if.else81
  %kind89 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %edoubleprime.2, i64 0, i32 0, !dbg !9152
  %49 = load i32, i32* %kind89, align 8, !dbg !9152
  %cmp90 = icmp eq i32 %49, 3, !dbg !9153
  br i1 %cmp90, label %land.lhs.true95, label %lor.lhs.false, !dbg !9154

lor.lhs.false:                                    ; preds = %land.lhs.true88
  %cmp93 = icmp eq i32 %49, 0, !dbg !9155
  br i1 %cmp93, label %land.lhs.true95, label %if.end134, !dbg !9156

land.lhs.true95:                                  ; preds = %lor.lhs.false, %land.lhs.true88
  %call96 = call zeroext i8 @value_id_constant_p(i32 %call3) #6, !dbg !9157
  %tobool97 = icmp eq i8 %call96, 0, !dbg !9157
  br i1 %tobool97, label %if.then98, label %if.end134, !dbg !9158

if.then98:                                        ; preds = %land.lhs.true95
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8, !dbg !9159
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !dbg !9160
  %50 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !9161
  %base101 = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %50, i64 0, i32 0, !dbg !9161
  %call105 = call fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_index(%struct.VEC_bitmap_set_t_base* %base101, i32 %call3) #7, !dbg !9161
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call105, metadata !9029, metadata !DIExpression()), !dbg !9063
  %call106 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %edoubleprime.2) #7, !dbg !9162
  call void @llvm.dbg.value(metadata i32 %call106, metadata !9030, metadata !DIExpression()), !dbg !9063
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %call105, i64 0, i32 0, !dbg !9163
  %51 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !9163
  call void @llvm.dbg.value(metadata i32* %j, metadata !9024, metadata !DIExpression(DW_OP_deref)), !dbg !9063
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9028, metadata !DIExpression(DW_OP_deref)), !dbg !9063
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %51, i32 0, i32* nonnull %j) #7, !dbg !9163
  %constant = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %edoubleprime.2, i64 0, i32 2, i32 0, !dbg !9164
  br label %for.cond107, !dbg !9163

for.cond107:                                      ; preds = %for.inc131, %if.then98
  call void @llvm.dbg.value(metadata i32* %j, metadata !9024, metadata !DIExpression(DW_OP_deref)), !dbg !9063
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9028, metadata !DIExpression(DW_OP_deref)), !dbg !9063
  %call108 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !9166
  %tobool109 = icmp eq i8 %call108, 0, !dbg !9163
  br i1 %tobool109, label %for.end132, label %for.body110, !dbg !9163

for.body110:                                      ; preds = %for.cond107
  %52 = load i32, i32* %j, align 4, !dbg !9167
  call void @llvm.dbg.value(metadata i32 %52, metadata !9024, metadata !DIExpression()), !dbg !9063
  %call112 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %52) #7, !dbg !9168
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call112, metadata !9031, metadata !DIExpression()), !dbg !9169
  %kind113 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call112, i64 0, i32 0, !dbg !9170
  %53 = load i32, i32* %kind113, align 8, !dbg !9170
  %cmp114 = icmp eq i32 %53, 0, !dbg !9171
  br i1 %cmp114, label %if.then116, label %for.inc131, !dbg !9172

if.then116:                                       ; preds = %for.body110
  %name = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call112, i64 0, i32 2, i32 0, !dbg !9173
  %54 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !9173
  %call117 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %54) #6, !dbg !9174
  call void @llvm.dbg.value(metadata %struct.vn_ssa_aux* %call117, metadata !9035, metadata !DIExpression()), !dbg !9175
  %55 = load i32, i32* %kind89, align 8, !dbg !9176
  %cmp119 = icmp eq i32 %55, 3, !dbg !9177
  %56 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !9164
  br i1 %cmp119, label %if.then121, label %if.else123, !dbg !9178

if.then121:                                       ; preds = %if.then116
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call117, i64 0, i32 0, !dbg !9179
  store %union.tree_node* %56, %union.tree_node** %valnum, align 8, !dbg !9181
  %57 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 4), align 4, !dbg !9182
  %inc = add nsw i32 %57, 1, !dbg !9182
  store i32 %inc, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 4), align 4, !dbg !9182
  br label %if.end129, !dbg !9183

if.else123:                                       ; preds = %if.then116
  %call126 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %56) #6, !dbg !9184
  %58 = bitcast %struct.vn_ssa_aux* %call126 to i64*, !dbg !9185
  %59 = load i64, i64* %58, align 8, !dbg !9185
  %60 = bitcast %struct.vn_ssa_aux* %call117 to i64*, !dbg !9186
  store i64 %59, i64* %60, align 8, !dbg !9186
  br label %if.end129

if.end129:                                        ; preds = %if.else123, %if.then121
  %value_id = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call117, i64 0, i32 2, !dbg !9187
  store i32 %call106, i32* %value_id, align 8, !dbg !9188
  br label %for.inc131, !dbg !9189

for.inc131:                                       ; preds = %for.body110, %if.end129
  call void @llvm.dbg.value(metadata i32* %j, metadata !9024, metadata !DIExpression(DW_OP_deref)), !dbg !9063
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9028, metadata !DIExpression(DW_OP_deref)), !dbg !9063
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !9166
  br label %for.cond107, !dbg !9166, !llvm.loop !9190

for.end132:                                       ; preds = %for.cond107
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !dbg !9192
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8, !dbg !9192
  br label %if.end134, !dbg !9193

if.end134:                                        ; preds = %land.lhs.true95, %lor.lhs.false, %for.end132, %if.else81, %if.then75
  %new_stuff.2 = phi i8 [ %spec.select4, %if.then75 ], [ %new_stuff.0, %if.else81 ], [ %new_stuff.0, %for.end132 ], [ %new_stuff.0, %land.lhs.true95 ], [ %new_stuff.0, %lor.lhs.false ], !dbg !9052
  call void @llvm.dbg.value(metadata i8 %new_stuff.2, metadata !8999, metadata !DIExpression()), !dbg !9052
  call void @free(i8* %call18) #6, !dbg !9194
  br label %cleanup135, !dbg !9195

cleanup135:                                       ; preds = %land.lhs.true, %if.then11, %if.then, %if.then14, %if.end134
  %new_stuff.3 = phi i8 [ %new_stuff.2, %if.end134 ], [ %new_stuff.0, %if.then ], [ %new_stuff.0, %if.then14 ], [ %new_stuff.0, %land.lhs.true ], [ %new_stuff.0, %if.then11 ], !dbg !9067
  call void @llvm.dbg.value(metadata i8 %new_stuff.3, metadata !8999, metadata !DIExpression()), !dbg !9052
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !9195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !9195
  %.pre.pre = load %struct.VEC_pre_expr_heap*, %struct.VEC_pre_expr_heap** %exprs, align 8, !dbg !9065
  br label %for.inc150

for.inc150:                                       ; preds = %for.body, %cleanup135
  %.pre = phi %struct.VEC_pre_expr_heap* [ %.pre9, %for.body ], [ %.pre.pre, %cleanup135 ], !dbg !9065
  %new_stuff.5 = phi i8 [ %new_stuff.0, %for.body ], [ %new_stuff.3, %cleanup135 ], !dbg !9067
  call void @llvm.dbg.value(metadata i8 %new_stuff.5, metadata !8999, metadata !DIExpression()), !dbg !9052
  %inc151 = add nuw nsw i32 %i.0, 1, !dbg !9196
  call void @llvm.dbg.value(metadata i32 %inc151, metadata !9002, metadata !DIExpression()), !dbg !9052
  br label %for.cond, !dbg !9197, !llvm.loop !9198

for.end152:                                       ; preds = %for.cond
  %new_stuff.0.lcssa = phi i8 [ %new_stuff.0, %for.cond ], !dbg !9067
  call void @llvm.dbg.value(metadata i8 %new_stuff.0.lcssa, metadata !8999, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata i8 %new_stuff.0.lcssa, metadata !8999, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata i8 %new_stuff.0.lcssa, metadata !8999, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap** %exprs, metadata !9000, metadata !DIExpression(DW_OP_deref)), !dbg !9052
  call fastcc void @VEC_pre_expr_heap_free(%struct.VEC_pre_expr_heap** nonnull %exprs) #7, !dbg !9200
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !9201
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9201
  ret i8 %new_stuff.0.lcssa, !dbg !9202
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @do_partial_partial_insertion(%struct.basic_block_def* %block, %struct.basic_block_def* %dom) unnamed_addr #5 !dbg !9203 {
entry:
  %exprs = alloca %struct.VEC_pre_expr_heap*, align 8
  %expr = alloca %struct.pre_expr_d*, align 8
  %pred = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !9205, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dom, metadata !9206, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i8 0, metadata !9207, metadata !DIExpression()), !dbg !9229
  %0 = bitcast %struct.VEC_pre_expr_heap** %exprs to i8*, !dbg !9230
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9230
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !9231
  %1 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !9231
  %2 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %1, align 8, !dbg !9231
  %pa_in = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %2, i64 0, i32 5, !dbg !9231
  %3 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in, align 8, !dbg !9231
  %call = tail call fastcc %struct.VEC_pre_expr_heap* @sorted_array_from_bitmap_set(%struct.bitmap_set* %3) #7, !dbg !9232
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %call, metadata !9208, metadata !DIExpression()), !dbg !9229
  store %struct.VEC_pre_expr_heap* %call, %struct.VEC_pre_expr_heap** %exprs, align 8, !dbg !9233
  %4 = bitcast %struct.pre_expr_d** %expr to i8*, !dbg !9234
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !9234
  call void @llvm.dbg.value(metadata i32 0, metadata !9210, metadata !DIExpression()), !dbg !9229
  %5 = bitcast %struct.edge_def** %pred to i8*, !dbg !9235
  %6 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !9235
  %aux8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %dom, i64 0, i32 2, !dbg !9236
  %7 = bitcast i8** %aux8 to %struct.bb_bitmap_sets**, !dbg !9236
  %8 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !9238
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 0, !dbg !9238
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !9238
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !9238
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !9239
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !9239
  br label %for.cond, !dbg !9240

for.cond:                                         ; preds = %for.inc67, %entry
  %.pre3 = phi %struct.VEC_pre_expr_heap* [ %call, %entry ], [ %.pre, %for.inc67 ]
  %13 = phi %struct.VEC_pre_expr_heap* [ %call, %entry ], [ %.pre, %for.inc67 ], !dbg !9241
  %i.0 = phi i32 [ 0, %entry ], [ %inc68, %for.inc67 ], !dbg !9242
  %new_stuff.0 = phi i8 [ 0, %entry ], [ %new_stuff.5, %for.inc67 ], !dbg !9243
  call void @llvm.dbg.value(metadata i8 %new_stuff.0, metadata !9207, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9210, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %13, metadata !9208, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap* %13, metadata !9208, metadata !DIExpression()), !dbg !9229
  %base = getelementptr inbounds %struct.VEC_pre_expr_heap, %struct.VEC_pre_expr_heap* %13, i64 0, i32 0, !dbg !9241
  call void @llvm.dbg.value(metadata %struct.pre_expr_d** %expr, metadata !9209, metadata !DIExpression(DW_OP_deref)), !dbg !9229
  %call1 = call fastcc i32 @VEC_pre_expr_base_iterate(%struct.VEC_pre_expr_base* %base, i32 %i.0, %struct.pre_expr_d** nonnull %expr) #7, !dbg !9241
  %tobool2 = icmp eq i32 %call1, 0, !dbg !9244
  br i1 %tobool2, label %for.end69, label %for.body, !dbg !9244

for.body:                                         ; preds = %for.cond
  %14 = load %struct.pre_expr_d*, %struct.pre_expr_d** %expr, align 8, !dbg !9245
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %14, metadata !9209, metadata !DIExpression()), !dbg !9229
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %14, i64 0, i32 0, !dbg !9246
  %15 = load i32, i32* %kind, align 8, !dbg !9246
  %cmp = icmp eq i32 %15, 0, !dbg !9247
  br i1 %cmp, label %for.inc67, label %if.then, !dbg !9248

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i8 1, metadata !9218, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i8 0, metadata !9219, metadata !DIExpression()), !dbg !9235
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !9249
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* null, metadata !9222, metadata !DIExpression()), !dbg !9235
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !9250
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %14, metadata !9209, metadata !DIExpression()), !dbg !9229
  %call3 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %14) #7, !dbg !9251
  call void @llvm.dbg.value(metadata i32 %call3, metadata !9217, metadata !DIExpression()), !dbg !9235
  %16 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %1, align 8, !dbg !9252
  %phi_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %16, i64 0, i32 1, !dbg !9252
  %17 = load %struct.bitmap_set*, %struct.bitmap_set** %phi_gen, align 8, !dbg !9252
  %call5 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %17, i32 %call3) #7, !dbg !9254
  %tobool6 = icmp eq i8 %call5, 0, !dbg !9254
  br i1 %tobool6, label %if.end, label %cleanup56, !dbg !9255

if.end:                                           ; preds = %if.then
  %18 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %7, align 8, !dbg !9256
  %avail_out = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %18, i64 0, i32 3, !dbg !9256
  %19 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out, align 8, !dbg !9256
  %call9 = call fastcc zeroext i8 @bitmap_set_contains_value(%struct.bitmap_set* %19, i32 %call3) #7, !dbg !9257
  %tobool10 = icmp eq i8 %call9, 0, !dbg !9257
  br i1 %tobool10, label %if.end12, label %cleanup56, !dbg !9258

if.end12:                                         ; preds = %if.end
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9259
  %cfg = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, i32 1, !dbg !9259
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9259
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 5, !dbg !9259
  %22 = load i32, i32* %x_last_basic_block, align 8, !dbg !9259
  %conv = sext i32 %22 to i64, !dbg !9259
  %call13 = call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !9259
  %23 = bitcast i8* %call13 to %struct.pre_expr_d**, !dbg !9259
  call void @llvm.dbg.value(metadata %struct.pre_expr_d** %23, metadata !9211, metadata !DIExpression()), !dbg !9235
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !9260
  %call14 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !9260
  %24 = extractvalue { i32, %struct.VEC_edge_gc** } %call14, 0, !dbg !9260
  store i32 %24, i32* %9, align 8, !dbg !9260
  %25 = extractvalue { i32, %struct.VEC_edge_gc** } %call14, 1, !dbg !9260
  store %struct.VEC_edge_gc** %25, %struct.VEC_edge_gc*** %10, align 8, !dbg !9260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !9260
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !9260
  br label %for.cond15, !dbg !9260

for.cond15:                                       ; preds = %for.inc, %if.end12
  %by_all.0 = phi i8 [ 1, %if.end12 ], [ %by_all.1, %for.inc ], !dbg !9261
  %cant_insert.0 = phi i8 [ 0, %if.end12 ], [ %cant_insert.1, %for.inc ], !dbg !9235
  call void @llvm.dbg.value(metadata i8 %cant_insert.0, metadata !9219, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i8 %by_all.0, metadata !9218, metadata !DIExpression()), !dbg !9235
  %26 = load i32, i32* %11, align 8, !dbg !9262
  %27 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !9262
  call void @llvm.dbg.value(metadata %struct.edge_def** %pred, metadata !9220, metadata !DIExpression(DW_OP_deref)), !dbg !9235
  %call16 = call fastcc zeroext i8 @ei_cond(i32 %26, %struct.VEC_edge_gc** %27, %struct.edge_def** nonnull %pred) #7, !dbg !9262
  %tobool17 = icmp eq i8 %call16, 0, !dbg !9260
  br i1 %tobool17, label %for.end, label %for.body18, !dbg !9260

for.body18:                                       ; preds = %for.cond15
  %28 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9263
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !9220, metadata !DIExpression()), !dbg !9235
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i64 0, i32 7, !dbg !9263
  %29 = load i32, i32* %flags, align 8, !dbg !9263
  %and = and i32 %29, 16, !dbg !9263
  %tobool19 = icmp eq i32 %and, 0, !dbg !9263
  br i1 %tobool19, label %cond.end22, label %cond.true20, !dbg !9263

cond.true20:                                      ; preds = %for.body18
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3659, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9263
  %.pre2 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9264
  br label %cond.end22, !dbg !9263

cond.end22:                                       ; preds = %for.body18, %cond.true20
  %30 = phi %struct.edge_def* [ %28, %for.body18 ], [ %.pre2, %cond.true20 ], !dbg !9264
  call void @llvm.dbg.value(metadata %struct.edge_def* %30, metadata !9220, metadata !DIExpression()), !dbg !9235
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %30, i64 0, i32 0, !dbg !9265
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !9265
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %31, metadata !9221, metadata !DIExpression()), !dbg !9235
  %32 = load %struct.pre_expr_d*, %struct.pre_expr_d** %expr, align 8, !dbg !9266
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %32, metadata !9209, metadata !DIExpression()), !dbg !9229
  %33 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %1, align 8, !dbg !9267
  %antic_in = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %33, i64 0, i32 4, !dbg !9267
  %34 = load %struct.bitmap_set*, %struct.bitmap_set** %antic_in, align 8, !dbg !9267
  %pa_in26 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %33, i64 0, i32 5, !dbg !9268
  %35 = load %struct.bitmap_set*, %struct.bitmap_set** %pa_in26, align 8, !dbg !9268
  %call27 = call fastcc %struct.pre_expr_d* @phi_translate(%struct.pre_expr_d* %32, %struct.bitmap_set* %34, %struct.bitmap_set* %35, %struct.basic_block_def* %31, %struct.basic_block_def* %block) #7, !dbg !9269
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call27, metadata !9222, metadata !DIExpression()), !dbg !9235
  %cmp28 = icmp eq %struct.pre_expr_d* %call27, null, !dbg !9270
  br i1 %cmp28, label %cleanup, label %if.end31, !dbg !9272

if.end31:                                         ; preds = %cond.end22
  %call32 = call fastcc %struct.pre_expr_d* @fully_constant_expression(%struct.pre_expr_d* nonnull %call27) #7, !dbg !9273
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call32, metadata !9222, metadata !DIExpression()), !dbg !9235
  %call33 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call32) #7, !dbg !9274
  call void @llvm.dbg.value(metadata i32 %call33, metadata !9224, metadata !DIExpression()), !dbg !9275
  %aux34 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %31, i64 0, i32 2, !dbg !9276
  %36 = bitcast i8** %aux34 to %struct.bb_bitmap_sets**, !dbg !9276
  %37 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %36, align 8, !dbg !9276
  %avail_out35 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %37, i64 0, i32 3, !dbg !9276
  %38 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out35, align 8, !dbg !9276
  %call36 = call fastcc %struct.pre_expr_d* @bitmap_find_leader(%struct.bitmap_set* %38, i32 %call33, %union.gimple_statement_d* null) #7, !dbg !9277
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call36, metadata !9228, metadata !DIExpression()), !dbg !9275
  %cmp37 = icmp eq %struct.pre_expr_d* %call36, null, !dbg !9278
  br i1 %cmp37, label %cleanup, label %if.else, !dbg !9280

if.else:                                          ; preds = %if.end31
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %31, i64 0, i32 9, !dbg !9281
  %39 = load i32, i32* %index, align 8, !dbg !9281
  %idxprom = sext i32 %39 to i64, !dbg !9282
  %arrayidx = getelementptr inbounds %struct.pre_expr_d*, %struct.pre_expr_d** %23, i64 %idxprom, !dbg !9282
  store %struct.pre_expr_d* %call36, %struct.pre_expr_d** %arrayidx, align 8, !dbg !9283
  br label %cleanup, !dbg !9284

cleanup:                                          ; preds = %if.end31, %cond.end22, %if.else
  %by_all.1 = phi i8 [ %by_all.0, %if.else ], [ %by_all.0, %cond.end22 ], [ 0, %if.end31 ], !dbg !9235
  %cant_insert.1 = phi i8 [ %cant_insert.0, %if.else ], [ 1, %cond.end22 ], [ %cant_insert.0, %if.end31 ], !dbg !9235
  %cleanup.dest.slot.0 = phi i1 [ true, %if.else ], [ false, %cond.end22 ], [ false, %if.end31 ]
  call void @llvm.dbg.value(metadata i8 %cant_insert.1, metadata !9219, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i8 %by_all.1, metadata !9218, metadata !DIExpression()), !dbg !9235
  br i1 %cleanup.dest.slot.0, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !9223, metadata !DIExpression(DW_OP_deref)), !dbg !9235
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !9262
  br label %for.cond15, !dbg !9262, !llvm.loop !9285

for.end:                                          ; preds = %for.cond15, %cleanup
  %by_all.2 = phi i8 [ %by_all.1, %cleanup ], [ %by_all.0, %for.cond15 ], !dbg !9261
  %cant_insert.2 = phi i8 [ %cant_insert.1, %cleanup ], [ %cant_insert.0, %for.cond15 ], !dbg !9235
  call void @llvm.dbg.value(metadata i8 %cant_insert.2, metadata !9219, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i8 %by_all.2, metadata !9218, metadata !DIExpression()), !dbg !9235
  %tobool42 = icmp eq i8 %cant_insert.2, 0, !dbg !9287
  %tobool44 = icmp ne i8 %by_all.2, 0, !dbg !9289
  %or.cond = and i1 %tobool42, %tobool44, !dbg !9290
  br i1 %or.cond, label %land.lhs.true45, label %if.end55, !dbg !9290

land.lhs.true45:                                  ; preds = %for.end
  %call46 = call zeroext i8 @dbg_cnt(i32 25) #6, !dbg !9291
  %tobool48 = icmp eq i8 %call46, 0, !dbg !9291
  br i1 %tobool48, label %if.end55, label %if.then49, !dbg !9292

if.then49:                                        ; preds = %land.lhs.true45
  %40 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 2), align 4, !dbg !9293
  %inc = add nsw i32 %40, 1, !dbg !9293
  store i32 %inc, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 2), align 4, !dbg !9293
  %41 = load %struct.pre_expr_d*, %struct.pre_expr_d** %expr, align 8, !dbg !9295
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %41, metadata !9209, metadata !DIExpression()), !dbg !9229
  %call50 = call fastcc i32 @get_expression_id(%struct.pre_expr_d* %41) #7, !dbg !9297
  %call51 = call fastcc zeroext i8 @insert_into_preds_of_block(%struct.basic_block_def* %block, i32 %call50, %struct.pre_expr_d** %23) #7, !dbg !9298
  %tobool52 = icmp eq i8 %call51, 0, !dbg !9298
  %spec.select = select i1 %tobool52, i8 %new_stuff.0, i8 1, !dbg !9299
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !9207, metadata !DIExpression()), !dbg !9229
  br label %if.end55, !dbg !9300

if.end55:                                         ; preds = %land.lhs.true45, %for.end, %if.then49
  %new_stuff.2 = phi i8 [ %new_stuff.0, %for.end ], [ %spec.select, %if.then49 ], [ %new_stuff.0, %land.lhs.true45 ], !dbg !9229
  call void @llvm.dbg.value(metadata i8 %new_stuff.2, metadata !9207, metadata !DIExpression()), !dbg !9229
  call void @free(i8* %call13) #6, !dbg !9301
  br label %cleanup56, !dbg !9302

cleanup56:                                        ; preds = %if.end, %if.then, %if.end55
  %new_stuff.3 = phi i8 [ %new_stuff.2, %if.end55 ], [ %new_stuff.0, %if.then ], [ %new_stuff.0, %if.end ], !dbg !9243
  call void @llvm.dbg.value(metadata i8 %new_stuff.3, metadata !9207, metadata !DIExpression()), !dbg !9229
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !9302
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !9302
  %.pre.pre = load %struct.VEC_pre_expr_heap*, %struct.VEC_pre_expr_heap** %exprs, align 8, !dbg !9241
  br label %for.inc67

for.inc67:                                        ; preds = %for.body, %cleanup56
  %.pre = phi %struct.VEC_pre_expr_heap* [ %.pre3, %for.body ], [ %.pre.pre, %cleanup56 ], !dbg !9241
  %new_stuff.5 = phi i8 [ %new_stuff.0, %for.body ], [ %new_stuff.3, %cleanup56 ], !dbg !9243
  call void @llvm.dbg.value(metadata i8 %new_stuff.5, metadata !9207, metadata !DIExpression()), !dbg !9229
  %inc68 = add nuw nsw i32 %i.0, 1, !dbg !9303
  call void @llvm.dbg.value(metadata i32 %inc68, metadata !9210, metadata !DIExpression()), !dbg !9229
  br label %for.cond, !dbg !9304, !llvm.loop !9305

for.end69:                                        ; preds = %for.cond
  %new_stuff.0.lcssa = phi i8 [ %new_stuff.0, %for.cond ], !dbg !9243
  call void @llvm.dbg.value(metadata i8 %new_stuff.0.lcssa, metadata !9207, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i8 %new_stuff.0.lcssa, metadata !9207, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i8 %new_stuff.0.lcssa, metadata !9207, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata %struct.VEC_pre_expr_heap** %exprs, metadata !9208, metadata !DIExpression(DW_OP_deref)), !dbg !9229
  call fastcc void @VEC_pre_expr_heap_free(%struct.VEC_pre_expr_heap** nonnull %exprs) #7, !dbg !9307
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !9308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9308
  ret i8 %new_stuff.0.lcssa, !dbg !9309
}

declare dso_local zeroext i8 @optimize_edge_for_speed_p(%struct.edge_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @dbg_cnt(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @insert_into_preds_of_block(%struct.basic_block_def* %block, i32 %exprnum, %struct.pre_expr_d** %avail) unnamed_addr #5 !dbg !9310 {
entry:
  %pred = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp105 = alloca %struct.gimple_stmt_iterator, align 8
  %gsi150 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp151 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp223 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !9314, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.value(metadata i32 %exprnum, metadata !9315, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.value(metadata %struct.pre_expr_d** %avail, metadata !9316, metadata !DIExpression()), !dbg !9375
  %call = tail call fastcc %struct.pre_expr_d* @expression_for_id(i32 %exprnum) #7, !dbg !9376
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call, metadata !9317, metadata !DIExpression()), !dbg !9375
  %call1 = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %call) #7, !dbg !9377
  call void @llvm.dbg.value(metadata i32 %call1, metadata !9319, metadata !DIExpression()), !dbg !9375
  %0 = bitcast %struct.edge_def** %pred to i8*, !dbg !9378
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9378
  call void @llvm.dbg.value(metadata i8 0, metadata !9321, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.value(metadata i8 0, metadata !9322, metadata !DIExpression()), !dbg !9375
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !9379
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !9379
  %call2 = tail call fastcc %union.tree_node* @get_expr_type(%struct.pre_expr_d* %call) #7, !dbg !9380
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !9326, metadata !DIExpression()), !dbg !9375
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9381
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !9381
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !9383

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* @dump_flags, align 4, !dbg !9384
  %and = and i32 %3, 8, !dbg !9385
  %tobool3 = icmp eq i32 %and, 0, !dbg !9385
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9386

if.then:                                          ; preds = %land.lhs.true
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.49, i64 0, i64 0)) #6, !dbg !9387
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9389
  tail call fastcc void @print_pre_expr(%struct._IO_FILE* %4, %struct.pre_expr_d* %call) #7, !dbg !9390
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9391
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0), i32 %call1) #6, !dbg !9392
  br label %if.end, !dbg !9393

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %loop_depth = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 10, !dbg !9394
  %6 = load i32, i32* %loop_depth, align 4, !dbg !9394
  %cmp = icmp sgt i32 %6, 0, !dbg !9395
  br i1 %cmp, label %land.lhs.true6, label %if.end51, !dbg !9396

land.lhs.true6:                                   ; preds = %if.end
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 0, !dbg !9397
  %7 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !9397
  %tobool7 = icmp eq %struct.VEC_edge_gc* %7, null, !dbg !9397
  br i1 %tobool7, label %cond.end, label %cond.true, !dbg !9397

cond.true:                                        ; preds = %land.lhs.true6
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !9397
  br label %cond.end, !dbg !9397

cond.end:                                         ; preds = %land.lhs.true6, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %land.lhs.true6 ], !dbg !9397
  %call9 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !9397
  %cmp10 = icmp eq i32 %call9, 2, !dbg !9398
  br i1 %cmp10, label %if.then11, label %if.end51, !dbg !9399

if.then11:                                        ; preds = %cond.end
  call void @llvm.dbg.value(metadata i8 0, metadata !9329, metadata !DIExpression()), !dbg !9400
  call void @llvm.dbg.value(metadata i8 0, metadata !9332, metadata !DIExpression()), !dbg !9400
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 3, !dbg !9401
  %8 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !9401
  %9 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !9402
  %tobool13 = icmp eq %struct.VEC_edge_gc* %9, null, !dbg !9402
  br i1 %tobool13, label %cond.end18, label %cond.true14, !dbg !9402

cond.true14:                                      ; preds = %if.then11
  %base16 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %9, i64 0, i32 0, !dbg !9402
  br label %cond.end18, !dbg !9402

cond.end18:                                       ; preds = %if.then11, %cond.true14
  %cond19 = phi %struct.VEC_edge_base* [ %base16, %cond.true14 ], [ null, %if.then11 ], !dbg !9402
  %call20 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond19, i32 0) #7, !dbg !9402
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call20, i64 0, i32 0, !dbg !9403
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !9403
  %call21 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %8, %struct.basic_block_def* %10) #6, !dbg !9404
  call void @llvm.dbg.value(metadata i8 %call21, metadata !9329, metadata !DIExpression()), !dbg !9400
  %11 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !9405
  %12 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !9406
  %tobool24 = icmp eq %struct.VEC_edge_gc* %12, null, !dbg !9406
  br i1 %tobool24, label %cond.end29, label %cond.true25, !dbg !9406

cond.true25:                                      ; preds = %cond.end18
  %base27 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %12, i64 0, i32 0, !dbg !9406
  br label %cond.end29, !dbg !9406

cond.end29:                                       ; preds = %cond.end18, %cond.true25
  %cond30 = phi %struct.VEC_edge_base* [ %base27, %cond.true25 ], [ null, %cond.end18 ], !dbg !9406
  %call31 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond30, i32 1) #7, !dbg !9406
  %src32 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call31, i64 0, i32 0, !dbg !9407
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %src32, align 8, !dbg !9407
  %call33 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %11, %struct.basic_block_def* %13) #6, !dbg !9408
  call void @llvm.dbg.value(metadata i8 %call33, metadata !9332, metadata !DIExpression()), !dbg !9400
  %tobool35 = icmp eq i8 %call21, %call33, !dbg !9409
  br i1 %tobool35, label %if.end51, label %land.lhs.true36, !dbg !9411

land.lhs.true36:                                  ; preds = %cond.end29
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call, i64 0, i32 0, !dbg !9412
  %14 = load i32, i32* %kind, align 8, !dbg !9412
  %cmp37 = icmp eq i32 %14, 2, !dbg !9413
  br i1 %cmp37, label %lor.lhs.false, label %if.then42, !dbg !9414

lor.lhs.false:                                    ; preds = %land.lhs.true36
  %call39 = tail call fastcc zeroext i8 @inhibit_phi_insertion(%struct.basic_block_def* %block, %struct.pre_expr_d* %call) #7, !dbg !9415
  %tobool41 = icmp eq i8 %call39, 0, !dbg !9415
  br i1 %tobool41, label %if.end51, label %if.then42, !dbg !9416

if.then42:                                        ; preds = %lor.lhs.false, %land.lhs.true36
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9417
  %tobool43 = icmp eq %struct._IO_FILE* %15, null, !dbg !9417
  br i1 %tobool43, label %if.end51, label %land.lhs.true44, !dbg !9420

land.lhs.true44:                                  ; preds = %if.then42
  %16 = load i32, i32* @dump_flags, align 4, !dbg !9421
  %and45 = and i32 %16, 8, !dbg !9422
  %tobool46 = icmp eq i32 %and45, 0, !dbg !9422
  br i1 %tobool46, label %if.end51, label %if.then47, !dbg !9423

if.then47:                                        ; preds = %land.lhs.true44
  %call48 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %15, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.51, i64 0, i64 0)) #6, !dbg !9424
  br label %if.end51, !dbg !9424

if.end51:                                         ; preds = %land.lhs.true44, %if.then42, %lor.lhs.false, %cond.end29, %if.then47, %cond.end, %if.end
  %nophi.1 = phi i32 [ 0, %cond.end ], [ 0, %if.end ], [ 0, %lor.lhs.false ], [ 0, %cond.end29 ], [ 1, %if.then47 ], [ 1, %land.lhs.true44 ], [ 1, %if.then42 ]
  %17 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !9425
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #8, !dbg !9425
  %preds52 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 0, !dbg !9425
  %call53 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds52) #7, !dbg !9425
  %18 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !9425
  %19 = extractvalue { i32, %struct.VEC_edge_gc** } %call53, 0, !dbg !9425
  store i32 %19, i32* %18, align 8, !dbg !9425
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !9425
  %21 = extractvalue { i32, %struct.VEC_edge_gc** } %call53, 1, !dbg !9425
  store %struct.VEC_edge_gc** %21, %struct.VEC_edge_gc*** %20, align 8, !dbg !9425
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %17, i64 16, i1 false), !dbg !9425
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #8, !dbg !9425
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !9426
  %23 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !9426
  %24 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !9427
  %25 = bitcast %struct.gimple_stmt_iterator* %gsi150 to i8*, !dbg !9428
  %26 = bitcast %struct.gimple_stmt_iterator* %tmp151 to i8*, !dbg !9428
  %27 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !9429
  %28 = bitcast %struct.gimple_stmt_iterator* %tmp105 to i8*, !dbg !9429
  br label %for.cond, !dbg !9425

for.cond:                                         ; preds = %if.end170, %if.end51
  %insertions.0 = phi i8 [ 0, %if.end51 ], [ %insertions.1, %if.end170 ], !dbg !9375
  call void @llvm.dbg.value(metadata i8 %insertions.0, metadata !9321, metadata !DIExpression()), !dbg !9375
  %29 = load i32, i32* %22, align 8, !dbg !9430
  %30 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %23, align 8, !dbg !9430
  call void @llvm.dbg.value(metadata %struct.edge_def** %pred, metadata !9320, metadata !DIExpression(DW_OP_deref)), !dbg !9375
  %call54 = call fastcc zeroext i8 @ei_cond(i32 %29, %struct.VEC_edge_gc** %30, %struct.edge_def** nonnull %pred) #7, !dbg !9430
  %tobool55 = icmp eq i8 %call54, 0, !dbg !9425
  br i1 %tobool55, label %for.end172, label %for.body, !dbg !9425

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8, !dbg !9431
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !9333, metadata !DIExpression()), !dbg !9427
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmts, align 8, !dbg !9432
  %31 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9433
  call void @llvm.dbg.value(metadata %struct.edge_def* %31, metadata !9320, metadata !DIExpression()), !dbg !9375
  %src56 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %31, i64 0, i32 0, !dbg !9434
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %src56, align 8, !dbg !9434
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %32, metadata !9323, metadata !DIExpression()), !dbg !9375
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i64 0, i32 9, !dbg !9435
  %33 = load i32, i32* %index, align 8, !dbg !9435
  %idxprom = sext i32 %33 to i64, !dbg !9436
  %arrayidx = getelementptr inbounds %struct.pre_expr_d*, %struct.pre_expr_d** %avail, i64 %idxprom, !dbg !9436
  %34 = load %struct.pre_expr_d*, %struct.pre_expr_d** %arrayidx, align 8, !dbg !9436
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %34, metadata !9324, metadata !DIExpression()), !dbg !9375
  %kind57 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %34, i64 0, i32 0, !dbg !9437
  %35 = load i32, i32* %kind57, align 8, !dbg !9437
  %cmp58 = icmp eq i32 %35, 0, !dbg !9438
  br i1 %cmp58, label %if.else, label %land.lhs.true60, !dbg !9439

land.lhs.true60:                                  ; preds = %for.body
  %cmp62 = icmp eq i32 %35, 3, !dbg !9440
  br i1 %cmp62, label %if.else, label %if.then64, !dbg !9441

if.then64:                                        ; preds = %land.lhs.true60
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !9333, metadata !DIExpression(DW_OP_deref)), !dbg !9427
  %call65 = call fastcc %union.tree_node* @create_expression_by_pieces(%struct.basic_block_def* %32, %struct.pre_expr_d* %34, %struct.gimple_seq_d** nonnull %stmts, %union.gimple_statement_d* null, %union.tree_node* %call2) #7, !dbg !9442
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !9337, metadata !DIExpression()), !dbg !9427
  %36 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9444
  call void @llvm.dbg.value(metadata %struct.edge_def* %36, metadata !9320, metadata !DIExpression()), !dbg !9375
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %36, i64 0, i32 7, !dbg !9444
  %37 = load i32, i32* %flags, align 8, !dbg !9444
  %and66 = and i32 %37, 2, !dbg !9444
  %tobool67 = icmp eq i32 %and66, 0, !dbg !9444
  br i1 %tobool67, label %cond.end70, label %cond.true68, !dbg !9444

cond.true68:                                      ; preds = %if.then64
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3302, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9444
  %.pre = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9445
  br label %cond.end70, !dbg !9444

cond.end70:                                       ; preds = %if.then64, %cond.true68
  %38 = phi %struct.edge_def* [ %36, %if.then64 ], [ %.pre, %cond.true68 ], !dbg !9445
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !9320, metadata !DIExpression()), !dbg !9375
  %39 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !9446
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %39, metadata !9333, metadata !DIExpression()), !dbg !9427
  call void @gsi_insert_seq_on_edge(%struct.edge_def* %38, %struct.gimple_seq_d* %39) #6, !dbg !9447
  %call72 = call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %call65) #7, !dbg !9448
  %40 = load i32, i32* %index, align 8, !dbg !9449
  %idxprom74 = sext i32 %40 to i64, !dbg !9450
  %arrayidx75 = getelementptr inbounds %struct.pre_expr_d*, %struct.pre_expr_d** %avail, i64 %idxprom74, !dbg !9450
  store %struct.pre_expr_d* %call72, %struct.pre_expr_d** %arrayidx75, align 8, !dbg !9451
  call void @llvm.dbg.value(metadata i8 1, metadata !9321, metadata !DIExpression()), !dbg !9375
  br label %if.end170, !dbg !9452

if.else:                                          ; preds = %land.lhs.true60, %for.body
  %cmp77 = icmp eq i32 %35, 3, !dbg !9453
  br i1 %cmp77, label %if.then79, label %if.else120, !dbg !9454

if.then79:                                        ; preds = %if.else
  %constant80 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %34, i64 0, i32 2, i32 0, !dbg !9455
  %41 = load %union.tree_node*, %union.tree_node** %constant80, align 8, !dbg !9455
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !9338, metadata !DIExpression()), !dbg !9456
  %type81 = getelementptr inbounds %union.tree_node, %union.tree_node* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9457
  %42 = load %union.tree_node*, %union.tree_node** %type81, align 8, !dbg !9457
  %call82 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %call2, %union.tree_node* %42) #6, !dbg !9458
  %tobool83 = icmp eq i8 %call82, 0, !dbg !9458
  br i1 %tobool83, label %if.then84, label %if.end170, !dbg !9459

if.then84:                                        ; preds = %if.then79
  %call86 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call2, %union.tree_node* %41) #6, !dbg !9460
  call void @llvm.dbg.value(metadata %union.tree_node* %call86, metadata !9342, metadata !DIExpression()), !dbg !9461
  %call87 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call86) #6, !dbg !9462
  %tobool88 = icmp eq i8 %call87, 0, !dbg !9462
  br i1 %tobool88, label %if.then89, label %if.end170, !dbg !9463

if.then89:                                        ; preds = %if.then84
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !9333, metadata !DIExpression(DW_OP_deref)), !dbg !9427
  %call90 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call86, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* null) #6, !dbg !9464
  call void @llvm.dbg.value(metadata %union.tree_node* %call90, metadata !9345, metadata !DIExpression()), !dbg !9465
  %call91 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call90) #6, !dbg !9466
  %tobool92 = icmp eq i8 %call91, 0, !dbg !9466
  br i1 %tobool92, label %if.then93, label %if.end170, !dbg !9467

if.then93:                                        ; preds = %if.then89
  %cmp94 = icmp eq %union.tree_node* %call90, %call86, !dbg !9468
  br i1 %cmp94, label %if.end102, label %if.then96, !dbg !9470

if.then96:                                        ; preds = %if.then93
  %43 = bitcast %union.tree_node** %constant80 to i64*, !dbg !9471
  %44 = load i64, i64* %43, align 8, !dbg !9471
  %call99 = call %struct.vn_ssa_aux* @VN_INFO_GET(%union.tree_node* %call90) #6, !dbg !9473
  %45 = bitcast %struct.vn_ssa_aux* %call99 to i64*, !dbg !9474
  store i64 %44, i64* %45, align 8, !dbg !9474
  %call100 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %34) #7, !dbg !9475
  %call101 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call90) #6, !dbg !9476
  %value_id = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call101, i64 0, i32 2, !dbg !9477
  store i32 %call100, i32* %value_id, align 8, !dbg !9478
  br label %if.end102, !dbg !9479

if.end102:                                        ; preds = %if.then93, %if.then96
  %46 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !9480
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %46, metadata !9333, metadata !DIExpression()), !dbg !9427
  %tobool103 = icmp eq %struct.gimple_seq_d* %46, null, !dbg !9480
  br i1 %tobool103, label %if.end112, label %if.then104, !dbg !9481

if.then104:                                       ; preds = %if.end102
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8, !dbg !9482
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8, !dbg !9483
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %46, metadata !9333, metadata !DIExpression()), !dbg !9427
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp105, %struct.gimple_seq_d* nonnull %46) #7, !dbg !9483
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %28, i64 24, i1 false), !dbg !9483
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8, !dbg !9483
  br label %for.cond106, !dbg !9484

for.cond106:                                      ; preds = %for.body109, %if.then104
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9348, metadata !DIExpression(DW_OP_deref)), !dbg !9429
  %call107 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9485
  %tobool108 = icmp eq i8 %call107, 0, !dbg !9486
  br i1 %tobool108, label %for.body109, label %for.end, !dbg !9487

for.body109:                                      ; preds = %for.cond106
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9348, metadata !DIExpression(DW_OP_deref)), !dbg !9429
  %call110 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9488
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call110, metadata !9353, metadata !DIExpression()), !dbg !9489
  %call111 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** nonnull @inserted_exprs, %union.gimple_statement_d* %call110) #7, !dbg !9490
  call fastcc void @gimple_set_plf(%union.gimple_statement_d* %call110, i32 1, i8 zeroext 0) #7, !dbg !9491
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9348, metadata !DIExpression(DW_OP_deref)), !dbg !9429
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !9492
  br label %for.cond106, !dbg !9493, !llvm.loop !9494

for.end:                                          ; preds = %for.cond106
  %47 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9496
  call void @llvm.dbg.value(metadata %struct.edge_def* %47, metadata !9320, metadata !DIExpression()), !dbg !9375
  %48 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !9497
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %48, metadata !9333, metadata !DIExpression()), !dbg !9427
  call void @gsi_insert_seq_on_edge(%struct.edge_def* %47, %struct.gimple_seq_d* %48) #6, !dbg !9498
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8, !dbg !9499
  br label %if.end112, !dbg !9500

if.end112:                                        ; preds = %if.end102, %for.end
  %call113 = call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %call90) #7, !dbg !9501
  %49 = load i32, i32* %index, align 8, !dbg !9502
  %idxprom115 = sext i32 %49 to i64, !dbg !9503
  %arrayidx116 = getelementptr inbounds %struct.pre_expr_d*, %struct.pre_expr_d** %avail, i64 %idxprom115, !dbg !9503
  store %struct.pre_expr_d* %call113, %struct.pre_expr_d** %arrayidx116, align 8, !dbg !9504
  br label %if.end170, !dbg !9505

if.else120:                                       ; preds = %if.else
  br i1 %cmp58, label %if.then124, label %if.end170, !dbg !9506

if.then124:                                       ; preds = %if.else120
  %name126 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %34, i64 0, i32 2, i32 0, !dbg !9507
  %50 = load %union.tree_node*, %union.tree_node** %name126, align 8, !dbg !9507
  call void @llvm.dbg.value(metadata %union.tree_node* %50, metadata !9357, metadata !DIExpression()), !dbg !9508
  %type128 = getelementptr inbounds %union.tree_node, %union.tree_node* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9509
  %51 = load %union.tree_node*, %union.tree_node** %type128, align 8, !dbg !9509
  %call129 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %call2, %union.tree_node* %51) #6, !dbg !9510
  %tobool130 = icmp eq i8 %call129, 0, !dbg !9510
  br i1 %tobool130, label %if.then131, label %if.end170, !dbg !9511

if.then131:                                       ; preds = %if.then124
  %call134 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call2, %union.tree_node* %50) #6, !dbg !9512
  call void @llvm.dbg.value(metadata %union.tree_node* %call134, metadata !9360, metadata !DIExpression()), !dbg !9513
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !9333, metadata !DIExpression(DW_OP_deref)), !dbg !9427
  %call135 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call134, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* null) #6, !dbg !9514
  call void @llvm.dbg.value(metadata %union.tree_node* %call135, metadata !9363, metadata !DIExpression()), !dbg !9513
  %cmp136 = icmp eq %union.tree_node* %call135, %50, !dbg !9515
  br i1 %cmp136, label %if.end147, label %if.then138, !dbg !9517

if.then138:                                       ; preds = %if.then131
  %call139 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %50) #6, !dbg !9518
  %52 = bitcast %struct.vn_ssa_aux* %call139 to i64*, !dbg !9520
  %53 = load i64, i64* %52, align 8, !dbg !9520
  %call141 = call %struct.vn_ssa_aux* @VN_INFO_GET(%union.tree_node* %call135) #6, !dbg !9521
  %54 = bitcast %struct.vn_ssa_aux* %call141 to i64*, !dbg !9522
  store i64 %53, i64* %54, align 8, !dbg !9522
  %call143 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %50) #6, !dbg !9523
  %value_id144 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call143, i64 0, i32 2, !dbg !9524
  %55 = load i32, i32* %value_id144, align 8, !dbg !9524
  %call145 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call135) #6, !dbg !9525
  %value_id146 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call145, i64 0, i32 2, !dbg !9526
  store i32 %55, i32* %value_id146, align 8, !dbg !9527
  br label %if.end147, !dbg !9528

if.end147:                                        ; preds = %if.then131, %if.then138
  %56 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !9529
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %56, metadata !9333, metadata !DIExpression()), !dbg !9427
  %tobool148 = icmp eq %struct.gimple_seq_d* %56, null, !dbg !9529
  br i1 %tobool148, label %if.end162, label %if.then149, !dbg !9530

if.then149:                                       ; preds = %if.end147
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #8, !dbg !9531
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8, !dbg !9532
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %56, metadata !9333, metadata !DIExpression()), !dbg !9427
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp151, %struct.gimple_seq_d* nonnull %56) #7, !dbg !9532
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %26, i64 24, i1 false), !dbg !9532
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8, !dbg !9532
  br label %for.cond152, !dbg !9533

for.cond152:                                      ; preds = %for.body156, %if.then149
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi150, metadata !9364, metadata !DIExpression(DW_OP_deref)), !dbg !9428
  %call153 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi150) #7, !dbg !9534
  %tobool154 = icmp eq i8 %call153, 0, !dbg !9535
  br i1 %tobool154, label %for.body156, label %for.end161, !dbg !9536

for.body156:                                      ; preds = %for.cond152
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi150, metadata !9364, metadata !DIExpression(DW_OP_deref)), !dbg !9428
  %call158 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi150) #7, !dbg !9537
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call158, metadata !9367, metadata !DIExpression()), !dbg !9538
  %call159 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** nonnull @inserted_exprs, %union.gimple_statement_d* %call158) #7, !dbg !9539
  call fastcc void @gimple_set_plf(%union.gimple_statement_d* %call158, i32 1, i8 zeroext 0) #7, !dbg !9540
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi150, metadata !9364, metadata !DIExpression(DW_OP_deref)), !dbg !9428
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi150) #7, !dbg !9541
  br label %for.cond152, !dbg !9542, !llvm.loop !9543

for.end161:                                       ; preds = %for.cond152
  %57 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9545
  call void @llvm.dbg.value(metadata %struct.edge_def* %57, metadata !9320, metadata !DIExpression()), !dbg !9375
  %58 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !9546
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %58, metadata !9333, metadata !DIExpression()), !dbg !9427
  call void @gsi_insert_seq_on_edge(%struct.edge_def* %57, %struct.gimple_seq_d* %58) #6, !dbg !9547
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #8, !dbg !9548
  br label %if.end162, !dbg !9549

if.end162:                                        ; preds = %if.end147, %for.end161
  %call163 = call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %call135) #7, !dbg !9550
  %59 = load i32, i32* %index, align 8, !dbg !9551
  %idxprom165 = sext i32 %59 to i64, !dbg !9552
  %arrayidx166 = getelementptr inbounds %struct.pre_expr_d*, %struct.pre_expr_d** %avail, i64 %idxprom165, !dbg !9552
  store %struct.pre_expr_d* %call163, %struct.pre_expr_d** %arrayidx166, align 8, !dbg !9553
  br label %if.end170, !dbg !9554

if.end170:                                        ; preds = %if.then89, %if.then84, %if.then79, %if.then124, %if.end112, %if.end162, %if.else120, %cond.end70
  %insertions.1 = phi i8 [ 1, %cond.end70 ], [ %insertions.0, %if.else120 ], [ %insertions.0, %if.end162 ], [ %insertions.0, %if.then124 ], [ %insertions.0, %if.then79 ], [ %insertions.0, %if.then89 ], [ %insertions.0, %if.end112 ], [ %insertions.0, %if.then84 ], !dbg !9375
  call void @llvm.dbg.value(metadata i8 %insertions.1, metadata !9321, metadata !DIExpression()), !dbg !9375
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8, !dbg !9555
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !9325, metadata !DIExpression(DW_OP_deref)), !dbg !9375
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !9430
  br label %for.cond, !dbg !9430, !llvm.loop !9556

for.end172:                                       ; preds = %for.cond
  %insertions.0.lcssa = phi i8 [ %insertions.0, %for.cond ], !dbg !9375
  call void @llvm.dbg.value(metadata i8 %insertions.0.lcssa, metadata !9321, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.value(metadata i8 %insertions.0.lcssa, metadata !9321, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.value(metadata i8 %insertions.0.lcssa, metadata !9321, metadata !DIExpression()), !dbg !9375
  %tobool174 = icmp ne i32 %nophi.1, 0, !dbg !9558
  %tobool177 = icmp ne i8 %insertions.0.lcssa, 0, !dbg !9560
  %or.cond = and i1 %tobool174, %tobool177, !dbg !9561
  br i1 %or.cond, label %cleanup, label %if.else179, !dbg !9561

if.else179:                                       ; preds = %for.end172
  %tobool181 = icmp eq i32 %nophi.1, 0, !dbg !9562
  %or.cond1 = or i1 %tobool181, %tobool177, !dbg !9564
  br i1 %or.cond1, label %if.end186, label %cleanup, !dbg !9564

if.end186:                                        ; preds = %if.else179
  %60 = load %union.tree_node*, %union.tree_node** @prephitemp, align 8, !dbg !9565
  %tobool187 = icmp eq %union.tree_node* %60, null, !dbg !9565
  br i1 %tobool187, label %if.then193, label %lor.lhs.false188, !dbg !9567

lor.lhs.false188:                                 ; preds = %if.end186
  %type190 = getelementptr inbounds %union.tree_node, %union.tree_node* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9568
  %61 = load %union.tree_node*, %union.tree_node** %type190, align 8, !dbg !9568
  %cmp191 = icmp eq %union.tree_node* %61, %call2, !dbg !9569
  br i1 %cmp191, label %if.end196, label %if.then193, !dbg !9570

if.then193:                                       ; preds = %lor.lhs.false188, %if.end186
  %call194 = call %union.tree_node* @create_tmp_var(%union.tree_node* %call2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !9571
  store %union.tree_node* %call194, %union.tree_node** @prephitemp, align 8, !dbg !9573
  %call195 = call fastcc %struct.var_ann_d* @get_var_ann(%union.tree_node* %call194) #7, !dbg !9574
  %.pre5 = load %union.tree_node*, %union.tree_node** @prephitemp, align 8, !dbg !9575
  br label %if.end196, !dbg !9576

if.end196:                                        ; preds = %lor.lhs.false188, %if.then193
  %62 = phi %union.tree_node* [ %60, %lor.lhs.false188 ], [ %.pre5, %if.then193 ], !dbg !9575
  call void @llvm.dbg.value(metadata %union.tree_node* %62, metadata !9327, metadata !DIExpression()), !dbg !9375
  %call197 = call zeroext i8 @add_referenced_var(%union.tree_node* %62) #6, !dbg !9577
  %63 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9578
  %bf.load = load i64, i64* %63, align 8, !dbg !9578
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9580
  %cmp199 = icmp eq i64 %bf.cast2, 13, !dbg !9580
  br i1 %cmp199, label %if.then208, label %lor.lhs.false201, !dbg !9581

lor.lhs.false201:                                 ; preds = %if.end196
  %cmp206 = icmp eq i64 %bf.cast2, 14, !dbg !9582
  br i1 %cmp206, label %if.then208, label %if.end211, !dbg !9583

if.then208:                                       ; preds = %lor.lhs.false201, %if.end196
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9584
  %64 = bitcast i40* %gimple_reg_flag to i64*, !dbg !9584
  %bf.load209 = load i64, i64* %64, align 8, !dbg !9585
  %bf.set = or i64 %bf.load209, 134217728, !dbg !9585
  store i64 %bf.set, i64* %64, align 8, !dbg !9585
  br label %if.end211, !dbg !9584

if.end211:                                        ; preds = %if.then208, %lor.lhs.false201
  %call212 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %62, %struct.basic_block_def* %block) #6, !dbg !9586
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call212, metadata !9328, metadata !DIExpression()), !dbg !9375
  call fastcc void @gimple_set_plf(%union.gimple_statement_d* %call212, i32 1, i8 zeroext 0) #7, !dbg !9587
  %call213 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call212) #7, !dbg !9588
  %call214 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call212) #7, !dbg !9589
  %call215 = call %struct.vn_ssa_aux* @VN_INFO_GET(%union.tree_node* %call214) #6, !dbg !9590
  %valnum216 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call215, i64 0, i32 0, !dbg !9591
  store %union.tree_node* %call213, %union.tree_node** %valnum216, align 8, !dbg !9592
  %call217 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call212) #7, !dbg !9593
  %call218 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call217) #6, !dbg !9594
  %value_id219 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call218, i64 0, i32 2, !dbg !9595
  store i32 %call1, i32* %value_id219, align 8, !dbg !9596
  %call220 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** nonnull @inserted_exprs, %union.gimple_statement_d* %call212) #7, !dbg !9597
  %65 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @inserted_phi_names, align 8, !dbg !9598
  %call221 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call212) #7, !dbg !9599
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9599
  %66 = bitcast %union.tree_node** %version to i32*, !dbg !9599
  %67 = load i32, i32* %66, align 8, !dbg !9599
  %call222 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %65, i32 %67) #6, !dbg !9600
  %68 = bitcast %struct.edge_iterator* %tmp223 to i8*, !dbg !9601
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #8, !dbg !9601
  %call225 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds52) #7, !dbg !9601
  %69 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp223, i64 0, i32 0, !dbg !9601
  %70 = extractvalue { i32, %struct.VEC_edge_gc** } %call225, 0, !dbg !9601
  store i32 %70, i32* %69, align 8, !dbg !9601
  %71 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp223, i64 0, i32 1, !dbg !9601
  %72 = extractvalue { i32, %struct.VEC_edge_gc** } %call225, 1, !dbg !9601
  store %struct.VEC_edge_gc** %72, %struct.VEC_edge_gc*** %71, align 8, !dbg !9601
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %68, i64 16, i1 false), !dbg !9601
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #8, !dbg !9601
  br label %for.cond226, !dbg !9601

for.cond226:                                      ; preds = %for.inc260, %if.end211
  %73 = load i32, i32* %22, align 8, !dbg !9602
  %74 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %23, align 8, !dbg !9602
  call void @llvm.dbg.value(metadata %struct.edge_def** %pred, metadata !9320, metadata !DIExpression(DW_OP_deref)), !dbg !9375
  %call227 = call fastcc zeroext i8 @ei_cond(i32 %73, %struct.VEC_edge_gc** %74, %struct.edge_def** nonnull %pred) #7, !dbg !9602
  %tobool228 = icmp eq i8 %call227, 0, !dbg !9601
  br i1 %tobool228, label %for.end261, label %for.body229, !dbg !9601

for.body229:                                      ; preds = %for.cond226
  %75 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9603
  call void @llvm.dbg.value(metadata %struct.edge_def* %75, metadata !9320, metadata !DIExpression()), !dbg !9375
  %src230 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %75, i64 0, i32 0, !dbg !9604
  %76 = load %struct.basic_block_def*, %struct.basic_block_def** %src230, align 8, !dbg !9604
  %index231 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %76, i64 0, i32 9, !dbg !9605
  %77 = load i32, i32* %index231, align 8, !dbg !9605
  %idxprom232 = sext i32 %77 to i64, !dbg !9606
  %arrayidx233 = getelementptr inbounds %struct.pre_expr_d*, %struct.pre_expr_d** %avail, i64 %idxprom232, !dbg !9606
  %78 = load %struct.pre_expr_d*, %struct.pre_expr_d** %arrayidx233, align 8, !dbg !9606
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %78, metadata !9371, metadata !DIExpression()), !dbg !9607
  %call234 = call fastcc %union.tree_node* @get_expr_type(%struct.pre_expr_d* %78) #7, !dbg !9608
  %cmp235 = icmp eq %union.tree_node* %call234, %call2, !dbg !9608
  br i1 %cmp235, label %cond.end244, label %lor.lhs.false237, !dbg !9608

lor.lhs.false237:                                 ; preds = %for.body229
  %call238 = call fastcc %union.tree_node* @get_expr_type(%struct.pre_expr_d* %78) #7, !dbg !9608
  %call239 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %call2, %union.tree_node* %call238) #6, !dbg !9608
  %tobool241 = icmp eq i8 %call239, 0, !dbg !9608
  br i1 %tobool241, label %cond.true242, label %cond.end244, !dbg !9608

cond.true242:                                     ; preds = %lor.lhs.false237
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3417, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9608
  br label %cond.end244, !dbg !9608

cond.end244:                                      ; preds = %lor.lhs.false237, %for.body229, %cond.true242
  %kind246 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %78, i64 0, i32 0, !dbg !9609
  %79 = load i32, i32* %kind246, align 8, !dbg !9609
  %cmp247 = icmp eq i32 %79, 3, !dbg !9611
  br i1 %cmp247, label %if.then249, label %if.else252, !dbg !9612

if.then249:                                       ; preds = %cond.end244
  %constant251 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %78, i64 0, i32 2, i32 0, !dbg !9613
  %80 = load %union.tree_node*, %union.tree_node** %constant251, align 8, !dbg !9613
  %81 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9614
  call void @llvm.dbg.value(metadata %struct.edge_def* %81, metadata !9320, metadata !DIExpression()), !dbg !9375
  call void @add_phi_arg(%union.gimple_statement_d* %call212, %union.tree_node* %80, %struct.edge_def* %81, i32 0) #6, !dbg !9615
  br label %for.inc260, !dbg !9615

if.else252:                                       ; preds = %cond.end244
  %82 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !9616
  call void @llvm.dbg.value(metadata %struct.edge_def* %82, metadata !9320, metadata !DIExpression()), !dbg !9375
  %src253 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %82, i64 0, i32 0, !dbg !9616
  %83 = load %struct.basic_block_def*, %struct.basic_block_def** %src253, align 8, !dbg !9616
  %index254 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %83, i64 0, i32 9, !dbg !9616
  %84 = load i32, i32* %index254, align 8, !dbg !9616
  %idxprom255 = sext i32 %84 to i64, !dbg !9616
  %arrayidx256 = getelementptr inbounds %struct.pre_expr_d*, %struct.pre_expr_d** %avail, i64 %idxprom255, !dbg !9616
  %85 = load %struct.pre_expr_d*, %struct.pre_expr_d** %arrayidx256, align 8, !dbg !9616
  %name258 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %85, i64 0, i32 2, i32 0, !dbg !9616
  %86 = load %union.tree_node*, %union.tree_node** %name258, align 8, !dbg !9616
  call void @llvm.dbg.value(metadata %struct.edge_def* %82, metadata !9320, metadata !DIExpression()), !dbg !9375
  call void @add_phi_arg(%union.gimple_statement_d* %call212, %union.tree_node* %86, %struct.edge_def* %82, i32 0) #6, !dbg !9617
  br label %for.inc260

for.inc260:                                       ; preds = %if.then249, %if.else252
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !9325, metadata !DIExpression(DW_OP_deref)), !dbg !9375
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !9602
  br label %for.cond226, !dbg !9602, !llvm.loop !9618

for.end261:                                       ; preds = %for.cond226
  %call262 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call212) #7, !dbg !9620
  %call263 = call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %call262) #7, !dbg !9621
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call263, metadata !9318, metadata !DIExpression()), !dbg !9375
  call void @add_to_value(i32 %call1, %struct.pre_expr_d* %call263) #7, !dbg !9622
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !9623
  %87 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !9623
  %88 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %87, align 8, !dbg !9623
  %phi_gen = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %88, i64 0, i32 1, !dbg !9623
  %89 = load %struct.bitmap_set*, %struct.bitmap_set** %phi_gen, align 8, !dbg !9623
  call fastcc void @bitmap_insert_into_set(%struct.bitmap_set* %89, %struct.pre_expr_d* %call263) #7, !dbg !9624
  %90 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %87, align 8, !dbg !9625
  %avail_out = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %90, i64 0, i32 3, !dbg !9625
  %91 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out, align 8, !dbg !9625
  call fastcc void @bitmap_value_replace_in_set(%struct.bitmap_set* %91, %struct.pre_expr_d* %call263) #7, !dbg !9626
  %92 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %87, align 8, !dbg !9627
  %new_sets = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %92, i64 0, i32 6, !dbg !9627
  %93 = load %struct.bitmap_set*, %struct.bitmap_set** %new_sets, align 8, !dbg !9627
  call fastcc void @bitmap_insert_into_set(%struct.bitmap_set* %93, %struct.pre_expr_d* %call263) #7, !dbg !9628
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9629
  %tobool266 = icmp eq %struct._IO_FILE* %94, null, !dbg !9629
  br i1 %tobool266, label %if.end274, label %land.lhs.true267, !dbg !9631

land.lhs.true267:                                 ; preds = %for.end261
  %95 = load i32, i32* @dump_flags, align 4, !dbg !9632
  %and268 = and i32 %95, 8, !dbg !9633
  %tobool269 = icmp eq i32 %and268, 0, !dbg !9633
  br i1 %tobool269, label %if.end274, label %if.then270, !dbg !9634

if.then270:                                       ; preds = %land.lhs.true267
  %call271 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %94, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0)) #6, !dbg !9635
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9637
  call void @print_gimple_stmt(%struct._IO_FILE* %96, %union.gimple_statement_d* %call212, i32 0, i32 0) #6, !dbg !9638
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9639
  %index272 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !9640
  %98 = load i32, i32* %index272, align 8, !dbg !9640
  %call273 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %97, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i64 0, i64 0), i32 %98) #6, !dbg !9641
  br label %if.end274, !dbg !9642

if.end274:                                        ; preds = %land.lhs.true267, %for.end261, %if.then270
  %99 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 3), align 4, !dbg !9643
  %inc = add nsw i32 %99, 1, !dbg !9643
  store i32 %inc, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 3), align 4, !dbg !9643
  br label %cleanup, !dbg !9644

cleanup:                                          ; preds = %if.else179, %for.end172, %if.end274
  %retval.0 = phi i8 [ 1, %if.end274 ], [ 1, %for.end172 ], [ 0, %if.else179 ], !dbg !9375
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !9645
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9645
  ret i8 %retval.0, !dbg !9645
}

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @inhibit_phi_insertion(%struct.basic_block_def* %bb, %struct.pre_expr_d* %expr) unnamed_addr #5 !dbg !9646 {
entry:
  %op = alloca %struct.vn_reference_op_struct*, align 8
  %iv = alloca %struct.affine_iv, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !9650, metadata !DIExpression()), !dbg !9669
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !9651, metadata !DIExpression()), !dbg !9669
  %u = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, !dbg !9670
  %reference = bitcast %union.pre_expr_union_d* %u to %struct.vn_reference_s**, !dbg !9670
  %0 = load %struct.vn_reference_s*, %struct.vn_reference_s** %reference, align 8, !dbg !9670
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %0, metadata !9652, metadata !DIExpression()), !dbg !9669
  %operands = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %0, i64 0, i32 5, !dbg !9671
  %1 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !9671
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %1, metadata !9653, metadata !DIExpression()), !dbg !9669
  %2 = bitcast %struct.vn_reference_op_struct** %op to i8*, !dbg !9672
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !9672
  %3 = load i32, i32* @flag_tree_vectorize, align 4, !dbg !9673
  %tobool = icmp eq i32 %3, 0, !dbg !9673
  br i1 %tobool, label %cleanup24, label %for.cond.preheader, !dbg !9675

for.cond.preheader:                               ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %1, i64 0, i32 0, !dbg !9676
  %4 = bitcast %struct.affine_iv* %iv to i8*, !dbg !9677
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 3, !dbg !9678
  br label %for.cond, !dbg !9680

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !9681
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9655, metadata !DIExpression()), !dbg !9669
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %op, metadata !9654, metadata !DIExpression(DW_OP_deref)), !dbg !9669
  %call = call fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %base, i32 %i.0, %struct.vn_reference_op_struct** nonnull %op) #7, !dbg !9682
  %tobool2 = icmp eq i32 %call, 0, !dbg !9680
  br i1 %tobool2, label %cleanup24.loopexit, label %for.body, !dbg !9680

for.body:                                         ; preds = %for.cond
  %5 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %op, align 8, !dbg !9683
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %5, metadata !9654, metadata !DIExpression()), !dbg !9669
  %opcode = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %5, i64 0, i32 0, !dbg !9684
  %6 = load i32, i32* %opcode, align 8, !dbg !9684
  switch i32 %6, label %for.inc [
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 141, label %for.body.sw.bb6_crit_edge
  ], !dbg !9685

for.body.sw.bb6_crit_edge:                        ; preds = %for.body
  %op07.phi.trans.insert = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %5, i64 0, i32 2, !dbg !9677
  %.phi.trans.insert = bitcast %union.tree_node** %op07.phi.trans.insert to %struct.tree_ssa_name**, !dbg !9677
  %.pre = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %.phi.trans.insert, align 8, !dbg !9686
  br label %sw.bb6, !dbg !9685

sw.bb:                                            ; preds = %for.body, %for.body
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %5, metadata !9654, metadata !DIExpression()), !dbg !9669
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %5, i64 0, i32 2, !dbg !9687
  %7 = bitcast %union.tree_node** %op0 to i64**, !dbg !9687
  %8 = load i64*, i64** %7, align 8, !dbg !9687
  %bf.load = load i64, i64* %8, align 8, !dbg !9687
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9689
  %cmp = icmp eq i64 %bf.cast2, 141, !dbg !9689
  br i1 %cmp, label %sw.bb.sw.bb6_crit_edge, label %for.inc, !dbg !9690

sw.bb.sw.bb6_crit_edge:                           ; preds = %sw.bb
  %9 = bitcast i64* %8 to %struct.tree_ssa_name*, !dbg !9690
  br label %sw.bb6, !dbg !9690

sw.bb6:                                           ; preds = %sw.bb.sw.bb6_crit_edge, %for.body.sw.bb6_crit_edge
  %10 = phi %struct.tree_ssa_name* [ %.pre, %for.body.sw.bb6_crit_edge ], [ %9, %sw.bb.sw.bb6_crit_edge ], !dbg !9686
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %5, metadata !9654, metadata !DIExpression()), !dbg !9669
  %def_stmt = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %10, i64 0, i32 2, !dbg !9686
  %11 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !9686
  %call8 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %11) #7, !dbg !9691
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call8, metadata !9656, metadata !DIExpression()), !dbg !9677
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !9692
  %tobool9 = icmp eq %struct.basic_block_def* %call8, null, !dbg !9693
  br i1 %tobool9, label %cleanup, label %if.end11, !dbg !9695

if.end11:                                         ; preds = %sw.bb6
  %12 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !9696
  %call12 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %12, %struct.basic_block_def* nonnull %call8) #6, !dbg !9697
  %tobool13 = icmp eq i8 %call12, 0, !dbg !9697
  br i1 %tobool13, label %cleanup, label %if.end15, !dbg !9698

if.end15:                                         ; preds = %if.end11
  %13 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !9699
  %14 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %op, align 8, !dbg !9701
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %14, metadata !9654, metadata !DIExpression()), !dbg !9669
  %op018 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %14, i64 0, i32 2, !dbg !9702
  %15 = load %union.tree_node*, %union.tree_node** %op018, align 8, !dbg !9702
  call void @llvm.dbg.value(metadata %struct.affine_iv* %iv, metadata !9662, metadata !DIExpression(DW_OP_deref)), !dbg !9677
  %call19 = call zeroext i8 @simple_iv(%struct.loop* %13, %struct.loop* %13, %union.tree_node* %15, %struct.affine_iv* nonnull %iv, i8 zeroext 1) #6, !dbg !9703
  %tobool20 = icmp eq i8 %call19, 0, !dbg !9703
  %. = select i1 %tobool20, i32 5, i32 1, !dbg !9677
  br label %cleanup, !dbg !9677

cleanup:                                          ; preds = %if.end11, %sw.bb6, %if.end15
  %cleanup.dest.slot.0 = phi i32 [ 5, %sw.bb6 ], [ 5, %if.end11 ], [ %., %if.end15 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !9704
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 5
  br i1 %cond1, label %for.inc, label %cleanup24.loopexit

for.inc:                                          ; preds = %sw.bb, %cleanup, %for.body
  %inc = add i32 %i.0, 1, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9655, metadata !DIExpression()), !dbg !9669
  br label %for.cond, !dbg !9706, !llvm.loop !9707

cleanup24.loopexit:                               ; preds = %cleanup, %for.cond
  %retval.3.ph = phi i8 [ 0, %for.cond ], [ 1, %cleanup ]
  br label %cleanup24, !dbg !9709

cleanup24:                                        ; preds = %cleanup24.loopexit, %entry
  %retval.3 = phi i8 [ 0, %entry ], [ %retval.3.ph, %cleanup24.loopexit ], !dbg !9669
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !9709
  ret i8 %retval.3, !dbg !9709
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @create_expression_by_pieces(%struct.basic_block_def* %block, %struct.pre_expr_d* %expr, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt, %union.tree_node* %type) unnamed_addr #5 !dbg !9710 {
entry:
  %forced_stmts = alloca %struct.gimple_seq_d*, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !9715, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !9716, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !9717, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %domstmt, metadata !9718, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9719, metadata !DIExpression()), !dbg !9751
  %0 = bitcast %struct.gimple_seq_d** %forced_stmts to i8*, !dbg !9752
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9752
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !9723, metadata !DIExpression()), !dbg !9751
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %forced_stmts, align 8, !dbg !9753
  %1 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !9754
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !9754
  %tobool = icmp eq %union.tree_node* %type, null, !dbg !9755
  br i1 %tobool, label %cond.false, label %cond.end, !dbg !9755

cond.false:                                       ; preds = %entry
  %call = tail call fastcc %union.tree_node* @get_expr_type(%struct.pre_expr_d* %expr) #7, !dbg !9756
  br label %cond.end, !dbg !9755

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %call, %cond.false ], [ %type, %entry ], !dbg !9755
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !9726, metadata !DIExpression()), !dbg !9751
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 0, !dbg !9757
  %2 = load i32, i32* %kind, align 8, !dbg !9757
  switch i32 %2, label %cleanup152 [
    i32 0, label %sw.bb
    i32 3, label %sw.bb2
    i32 2, label %sw.bb4
    i32 1, label %sw.bb7
  ], !dbg !9758

sw.bb:                                            ; preds = %cond.end
  %name1 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, i32 0, !dbg !9759
  %3 = load %union.tree_node*, %union.tree_node** %name1, align 8, !dbg !9759
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !9722, metadata !DIExpression()), !dbg !9751
  br label %sw.epilog70, !dbg !9760

sw.bb2:                                           ; preds = %cond.end
  %constant = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, i32 0, !dbg !9761
  %4 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !9761
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !9722, metadata !DIExpression()), !dbg !9751
  br label %sw.epilog70, !dbg !9762

sw.bb4:                                           ; preds = %cond.end
  %u5 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, !dbg !9763
  %reference = bitcast %union.pre_expr_union_d* %u5 to %struct.vn_reference_s**, !dbg !9763
  %5 = load %struct.vn_reference_s*, %struct.vn_reference_s** %reference, align 8, !dbg !9763
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %5, metadata !9729, metadata !DIExpression()), !dbg !9764
  %call6 = tail call fastcc %union.tree_node* @create_component_ref_by_pieces(%struct.basic_block_def* %block, %struct.vn_reference_s* %5, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !9765
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !9722, metadata !DIExpression()), !dbg !9751
  br label %sw.epilog70, !dbg !9766

sw.bb7:                                           ; preds = %cond.end
  %u8 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %expr, i64 0, i32 2, !dbg !9767
  %nary9 = bitcast %union.pre_expr_union_d* %u8 to %struct.vn_nary_op_s**, !dbg !9767
  %6 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %nary9, align 8, !dbg !9767
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %6, metadata !9732, metadata !DIExpression()), !dbg !9768
  %length = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %6, i64 0, i32 1, !dbg !9769
  %bf.load = load i32, i32* %length, align 4, !dbg !9769
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !9769
  %trunc = trunc i32 %bf.lshr to i16, !dbg !9770
  switch i16 %trunc, label %cleanup66 [
    i16 2, label %sw.bb10
    i16 1, label %sw.bb42
  ], !dbg !9770

sw.bb10:                                          ; preds = %sw.bb7
  %arrayidx = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %6, i64 0, i32 5, i64 0, !dbg !9771
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !9771
  %call11 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %7) #7, !dbg !9772
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call11, metadata !9734, metadata !DIExpression()), !dbg !9773
  %arrayidx13 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %6, i64 0, i32 5, i64 1, !dbg !9774
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx13, align 8, !dbg !9774
  %call14 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %8) #7, !dbg !9775
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call14, metadata !9737, metadata !DIExpression()), !dbg !9773
  %call15 = tail call fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %call11, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !9776
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !9738, metadata !DIExpression()), !dbg !9773
  %call16 = tail call fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %call14, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !9777
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !9739, metadata !DIExpression()), !dbg !9773
  %tobool17 = icmp ne %union.tree_node* %call15, null, !dbg !9778
  %tobool18 = icmp ne %union.tree_node* %call16, null, !dbg !9780
  %or.cond = and i1 %tobool17, %tobool18, !dbg !9781
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !9781

if.end:                                           ; preds = %sw.bb10
  %bf.load19 = load i32, i32* %length, align 4, !dbg !9782
  %bf.clear = and i32 %bf.load19, 65535, !dbg !9782
  %cmp = icmp eq i32 %bf.clear, 66, !dbg !9784
  br i1 %cmp, label %if.then20, label %if.else, !dbg !9785

if.then20:                                        ; preds = %if.end
  %type21 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %6, i64 0, i32 4, !dbg !9786
  %9 = load %union.tree_node*, %union.tree_node** %type21, align 8, !dbg !9786
  %call22 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %9, %union.tree_node* nonnull %call15) #6, !dbg !9786
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !9738, metadata !DIExpression()), !dbg !9773
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !9788
  %call23 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %10, %union.tree_node* nonnull %call16) #6, !dbg !9788
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !9739, metadata !DIExpression()), !dbg !9773
  br label %if.end33, !dbg !9789

if.else:                                          ; preds = %if.end
  %11 = bitcast %union.tree_node** %arrayidx to %struct.tree_common**, !dbg !9790
  %12 = load %struct.tree_common*, %struct.tree_common** %11, align 8, !dbg !9790
  %type26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %12, i64 0, i32 2, !dbg !9790
  %13 = load %union.tree_node*, %union.tree_node** %type26, align 8, !dbg !9790
  %call27 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %13, %union.tree_node* nonnull %call15) #6, !dbg !9790
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !9738, metadata !DIExpression()), !dbg !9773
  %14 = bitcast %union.tree_node** %arrayidx13 to %struct.tree_common**, !dbg !9792
  %15 = load %struct.tree_common*, %struct.tree_common** %14, align 8, !dbg !9792
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %15, i64 0, i32 2, !dbg !9792
  %16 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !9792
  %call32 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %16, %union.tree_node* nonnull %call16) #6, !dbg !9792
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !9739, metadata !DIExpression()), !dbg !9773
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then20
  %genop1.0 = phi %union.tree_node* [ %call22, %if.then20 ], [ %call27, %if.else ], !dbg !9793
  %genop2.0 = phi %union.tree_node* [ %call23, %if.then20 ], [ %call32, %if.else ], !dbg !9793
  call void @llvm.dbg.value(metadata %union.tree_node* %genop2.0, metadata !9739, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.value(metadata %union.tree_node* %genop1.0, metadata !9738, metadata !DIExpression()), !dbg !9773
  %bf.load35 = load i32, i32* %length, align 4, !dbg !9794
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !9794
  %type37 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %6, i64 0, i32 4, !dbg !9794
  %17 = load %union.tree_node*, %union.tree_node** %type37, align 8, !dbg !9794
  %call38 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %bf.clear36, %union.tree_node* %17, %union.tree_node* %genop1.0, %union.tree_node* %genop2.0) #6, !dbg !9794
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !9722, metadata !DIExpression()), !dbg !9751
  br label %cleanup, !dbg !9795

cleanup:                                          ; preds = %sw.bb10, %if.end33
  %folded.0 = phi %union.tree_node* [ %call38, %if.end33 ], [ undef, %sw.bb10 ]
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end33 ], [ 1, %sw.bb10 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %folded.0, metadata !9722, metadata !DIExpression()), !dbg !9751
  %cond3 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond3, label %sw.epilog, label %cleanup66

sw.bb42:                                          ; preds = %sw.bb7
  %arrayidx45 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %6, i64 0, i32 5, i64 0, !dbg !9796
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx45, align 8, !dbg !9796
  %call46 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %18) #7, !dbg !9797
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call46, metadata !9740, metadata !DIExpression()), !dbg !9798
  %call48 = tail call fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %call46, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !9799
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !9742, metadata !DIExpression()), !dbg !9798
  %tobool49 = icmp eq %union.tree_node* %call48, null, !dbg !9800
  br i1 %tobool49, label %cleanup62, label %if.end51, !dbg !9802

if.end51:                                         ; preds = %sw.bb42
  %19 = bitcast %union.tree_node** %arrayidx45 to %struct.tree_common**, !dbg !9803
  %20 = load %struct.tree_common*, %struct.tree_common** %19, align 8, !dbg !9803
  %type55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %20, i64 0, i32 2, !dbg !9803
  %21 = load %union.tree_node*, %union.tree_node** %type55, align 8, !dbg !9803
  %call56 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %21, %union.tree_node* nonnull %call48) #6, !dbg !9803
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !9742, metadata !DIExpression()), !dbg !9798
  %bf.load58 = load i32, i32* %length, align 4, !dbg !9804
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !9804
  %type60 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %6, i64 0, i32 4, !dbg !9804
  %22 = load %union.tree_node*, %union.tree_node** %type60, align 8, !dbg !9804
  %call61 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 %bf.clear59, %union.tree_node* %22, %union.tree_node* %call56) #6, !dbg !9804
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !9722, metadata !DIExpression()), !dbg !9751
  br label %cleanup62, !dbg !9805

cleanup62:                                        ; preds = %sw.bb42, %if.end51
  %folded.1 = phi %union.tree_node* [ %call61, %if.end51 ], [ undef, %sw.bb42 ]
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end51 ], [ 1, %sw.bb42 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %folded.1, metadata !9722, metadata !DIExpression()), !dbg !9751
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %sw.epilog, label %cleanup66

sw.epilog:                                        ; preds = %cleanup62, %cleanup
  %folded.2 = phi %union.tree_node* [ %folded.0, %cleanup ], [ %folded.1, %cleanup62 ], !dbg !9806
  call void @llvm.dbg.value(metadata %union.tree_node* %folded.2, metadata !9722, metadata !DIExpression()), !dbg !9751
  br label %cleanup66, !dbg !9807

cleanup66:                                        ; preds = %sw.bb7, %cleanup, %cleanup62, %sw.epilog
  %folded.3 = phi %union.tree_node* [ %folded.1, %cleanup62 ], [ %folded.2, %sw.epilog ], [ %folded.0, %cleanup ], [ undef, %sw.bb7 ]
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.1, %cleanup62 ], [ 0, %sw.epilog ], [ %cleanup.dest.slot.0, %cleanup ], [ 1, %sw.bb7 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %folded.3, metadata !9722, metadata !DIExpression()), !dbg !9751
  %cond2 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond2, label %sw.epilog70, label %cleanup152

sw.epilog70:                                      ; preds = %cleanup66, %sw.bb4, %sw.bb2, %sw.bb
  %folded.4 = phi %union.tree_node* [ %call6, %sw.bb4 ], [ %4, %sw.bb2 ], [ %3, %sw.bb ], [ %folded.3, %cleanup66 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %folded.4, metadata !9722, metadata !DIExpression()), !dbg !9751
  %type72 = getelementptr inbounds %union.tree_node, %union.tree_node* %folded.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9808
  %23 = load %union.tree_node*, %union.tree_node** %type72, align 8, !dbg !9808
  %call73 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %cond, %union.tree_node* %23) #6, !dbg !9810
  %tobool74 = icmp eq i8 %call73, 0, !dbg !9810
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !9811

if.then75:                                        ; preds = %sw.epilog70
  %call76 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %cond, %union.tree_node* %folded.4) #6, !dbg !9812
  call void @llvm.dbg.value(metadata %union.tree_node* %call76, metadata !9722, metadata !DIExpression()), !dbg !9751
  br label %if.end77, !dbg !9813

if.end77:                                         ; preds = %sw.epilog70, %if.then75
  %folded.5 = phi %union.tree_node* [ %folded.4, %sw.epilog70 ], [ %call76, %if.then75 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %folded.5, metadata !9722, metadata !DIExpression()), !dbg !9751
  %call78 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %folded.5) #6, !dbg !9814
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %forced_stmts, metadata !9723, metadata !DIExpression(DW_OP_deref)), !dbg !9751
  %call79 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call78, %struct.gimple_seq_d** nonnull %forced_stmts, i8 zeroext 0, %union.tree_node* null) #6, !dbg !9815
  call void @llvm.dbg.value(metadata %union.tree_node* %call79, metadata !9722, metadata !DIExpression()), !dbg !9751
  %24 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %forced_stmts, align 8, !dbg !9816
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %24, metadata !9723, metadata !DIExpression()), !dbg !9751
  %tobool80 = icmp eq %struct.gimple_seq_d* %24, null, !dbg !9816
  br i1 %tobool80, label %if.end104, label %if.then81, !dbg !9817

if.then81:                                        ; preds = %if.end77
  %25 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !9818
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #8, !dbg !9818
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %24, metadata !9723, metadata !DIExpression()), !dbg !9751
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* nonnull %24) #7, !dbg !9818
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %25, i64 24, i1 false), !dbg !9818
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #8, !dbg !9818
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !9819
  %26 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !9819
  br label %for.cond, !dbg !9823

for.cond:                                         ; preds = %if.end103, %if.then81
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9725, metadata !DIExpression(DW_OP_deref)), !dbg !9751
  %call82 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9824
  %tobool83 = icmp eq i8 %call82, 0, !dbg !9825
  br i1 %tobool83, label %for.body, label %for.end, !dbg !9826

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9725, metadata !DIExpression(DW_OP_deref)), !dbg !9751
  %call84 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9827
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call84, metadata !9743, metadata !DIExpression()), !dbg !9828
  %call85 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call84) #6, !dbg !9829
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !9749, metadata !DIExpression()), !dbg !9828
  %call87 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** nonnull @inserted_exprs, %union.gimple_statement_d* %call84) #7, !dbg !9830
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %call85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9831
  %bf.load88 = load i64, i64* %27, align 8, !dbg !9831
  %bf.cast6 = and i64 %bf.load88, 65535, !dbg !9832
  %cmp90 = icmp eq i64 %bf.cast6, 141, !dbg !9832
  br i1 %cmp90, label %if.then91, label %if.end103, !dbg !9833

if.then91:                                        ; preds = %for.body
  %call92 = call %struct.vn_ssa_aux* @VN_INFO_GET(%union.tree_node* %call85) #6, !dbg !9834
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call92, i64 0, i32 0, !dbg !9835
  store %union.tree_node* %call85, %union.tree_node** %valnum, align 8, !dbg !9836
  %call93 = call i32 @get_next_value_id() #6, !dbg !9837
  %call94 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call85) #6, !dbg !9838
  %value_id95 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call94, i64 0, i32 2, !dbg !9839
  store i32 %call93, i32* %value_id95, align 8, !dbg !9840
  %call96 = call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %call85) #7, !dbg !9841
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call96, metadata !9750, metadata !DIExpression()), !dbg !9828
  %call97 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call85) #6, !dbg !9842
  %value_id98 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call97, i64 0, i32 2, !dbg !9843
  %28 = load i32, i32* %value_id98, align 8, !dbg !9843
  call void @add_to_value(i32 %28, %struct.pre_expr_d* %call96) #7, !dbg !9844
  %29 = load i8, i8* @in_fre, align 1, !dbg !9845
  %tobool99 = icmp eq i8 %29, 0, !dbg !9845
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !9846

if.then100:                                       ; preds = %if.then91
  %30 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %26, align 8, !dbg !9847
  %new_sets = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %30, i64 0, i32 6, !dbg !9847
  %31 = load %struct.bitmap_set*, %struct.bitmap_set** %new_sets, align 8, !dbg !9847
  call fastcc void @bitmap_value_replace_in_set(%struct.bitmap_set* %31, %struct.pre_expr_d* %call96) #7, !dbg !9848
  br label %if.end101, !dbg !9848

if.end101:                                        ; preds = %if.then91, %if.then100
  %32 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %26, align 8, !dbg !9849
  %avail_out = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %32, i64 0, i32 3, !dbg !9849
  %33 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out, align 8, !dbg !9849
  call fastcc void @bitmap_value_replace_in_set(%struct.bitmap_set* %33, %struct.pre_expr_d* %call96) #7, !dbg !9850
  br label %if.end103, !dbg !9851

if.end103:                                        ; preds = %if.end101, %for.body
  call void @mark_symbols_for_renaming(%union.gimple_statement_d* %call84) #6, !dbg !9852
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9725, metadata !DIExpression(DW_OP_deref)), !dbg !9751
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !9853
  br label %for.cond, !dbg !9854, !llvm.loop !9855

for.end:                                          ; preds = %for.cond
  %34 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %forced_stmts, align 8, !dbg !9857
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %34, metadata !9723, metadata !DIExpression()), !dbg !9751
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** %stmts, %struct.gimple_seq_d* %34) #6, !dbg !9858
  br label %if.end104, !dbg !9859

if.end104:                                        ; preds = %if.end77, %for.end
  %35 = load %union.tree_node*, %union.tree_node** @pretemp, align 8, !dbg !9860
  %tobool105 = icmp eq %union.tree_node* %35, null, !dbg !9860
  br i1 %tobool105, label %if.then110, label %lor.lhs.false106, !dbg !9862

lor.lhs.false106:                                 ; preds = %if.end104
  %type108 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9863
  %36 = load %union.tree_node*, %union.tree_node** %type108, align 8, !dbg !9863
  %cmp109 = icmp eq %union.tree_node* %cond, %36, !dbg !9864
  br i1 %cmp109, label %if.end113, label %if.then110, !dbg !9865

if.then110:                                       ; preds = %lor.lhs.false106, %if.end104
  %call111 = call %union.tree_node* @create_tmp_var(%union.tree_node* %cond, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !9866
  store %union.tree_node* %call111, %union.tree_node** @pretemp, align 8, !dbg !9868
  %call112 = call fastcc %struct.var_ann_d* @get_var_ann(%union.tree_node* %call111) #7, !dbg !9869
  %.pre = load %union.tree_node*, %union.tree_node** @pretemp, align 8, !dbg !9870
  br label %if.end113, !dbg !9871

if.end113:                                        ; preds = %lor.lhs.false106, %if.then110
  %37 = phi %union.tree_node* [ %35, %lor.lhs.false106 ], [ %.pre, %if.then110 ], !dbg !9870
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !9720, metadata !DIExpression()), !dbg !9751
  %call114 = call zeroext i8 @add_referenced_var(%union.tree_node* %37) #6, !dbg !9872
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9873
  %bf.load116 = load i64, i64* %38, align 8, !dbg !9873
  %bf.cast1184 = and i64 %bf.load116, 65535, !dbg !9875
  %cmp119 = icmp eq i64 %bf.cast1184, 13, !dbg !9875
  br i1 %cmp119, label %if.then126, label %lor.lhs.false120, !dbg !9876

lor.lhs.false120:                                 ; preds = %if.end113
  %cmp125 = icmp eq i64 %bf.cast1184, 14, !dbg !9877
  br i1 %cmp125, label %if.then126, label %if.end129, !dbg !9878

if.then126:                                       ; preds = %lor.lhs.false120, %if.end113
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9879
  %39 = bitcast i40* %gimple_reg_flag to i64*, !dbg !9879
  %bf.load127 = load i64, i64* %39, align 8, !dbg !9880
  %bf.set = or i64 %bf.load127, 134217728, !dbg !9880
  store i64 %bf.set, i64* %39, align 8, !dbg !9880
  br label %if.end129, !dbg !9879

if.end129:                                        ; preds = %if.then126, %lor.lhs.false120
  %call130 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %37, %union.tree_node* %call79) #6, !dbg !9881
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call130, metadata !9728, metadata !DIExpression()), !dbg !9751
  %call131 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %37, %union.gimple_statement_d* %call130) #7, !dbg !9882
  call void @llvm.dbg.value(metadata %union.tree_node* %call131, metadata !9721, metadata !DIExpression()), !dbg !9751
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call130, %union.tree_node* %call131) #7, !dbg !9883
  call fastcc void @gimple_set_plf(%union.gimple_statement_d* %call130, i32 1, i8 zeroext 0) #7, !dbg !9884
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %call130) #6, !dbg !9885
  %call132 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** nonnull @inserted_exprs, %union.gimple_statement_d* %call130) #7, !dbg !9886
  call void @mark_symbols_for_renaming(%union.gimple_statement_d* %call130) #6, !dbg !9887
  %call133 = call %struct.vn_ssa_aux* @VN_INFO_GET(%union.tree_node* %call131) #6, !dbg !9888
  %valnum134 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call133, i64 0, i32 0, !dbg !9889
  store %union.tree_node* %call131, %union.tree_node** %valnum134, align 8, !dbg !9890
  %call135 = call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %expr) #7, !dbg !9891
  call void @llvm.dbg.value(metadata i32 %call135, metadata !9724, metadata !DIExpression()), !dbg !9751
  %call136 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call131) #6, !dbg !9892
  %value_id137 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call136, i64 0, i32 2, !dbg !9893
  store i32 %call135, i32* %value_id137, align 8, !dbg !9894
  %call138 = call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for_name(%union.tree_node* %call131) #7, !dbg !9895
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call138, metadata !9727, metadata !DIExpression()), !dbg !9751
  call void @add_to_value(i32 %call135, %struct.pre_expr_d* %call138) #7, !dbg !9896
  %40 = load i8, i8* @in_fre, align 1, !dbg !9897
  %tobool139 = icmp eq i8 %40, 0, !dbg !9897
  br i1 %tobool139, label %if.then140, label %if.end129.if.end143_crit_edge, !dbg !9899

if.end129.if.end143_crit_edge:                    ; preds = %if.end129
  br label %if.end143, !dbg !9899

if.then140:                                       ; preds = %if.end129
  %aux141 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !9900
  %41 = bitcast i8** %aux141 to %struct.bb_bitmap_sets**, !dbg !9900
  %42 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %41, align 8, !dbg !9900
  %new_sets142 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %42, i64 0, i32 6, !dbg !9900
  %43 = load %struct.bitmap_set*, %struct.bitmap_set** %new_sets142, align 8, !dbg !9900
  call fastcc void @bitmap_value_replace_in_set(%struct.bitmap_set* %43, %struct.pre_expr_d* %call138) #7, !dbg !9901
  br label %if.end143, !dbg !9901

if.end143:                                        ; preds = %if.end129.if.end143_crit_edge, %if.then140
  %aux144 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !9902
  %44 = bitcast i8** %aux144 to %struct.bb_bitmap_sets**, !dbg !9902
  %45 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %44, align 8, !dbg !9902
  %avail_out145 = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %45, i64 0, i32 3, !dbg !9902
  %46 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out145, align 8, !dbg !9902
  call fastcc void @bitmap_value_replace_in_set(%struct.bitmap_set* %46, %struct.pre_expr_d* %call138) #7, !dbg !9903
  %47 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 1), align 4, !dbg !9904
  %inc = add nsw i32 %47, 1, !dbg !9904
  store i32 %inc, i32* getelementptr inbounds (%struct.anon, %struct.anon* @pre_stats, i64 0, i32 1), align 4, !dbg !9904
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9905
  %tobool146 = icmp eq %struct._IO_FILE* %48, null, !dbg !9905
  br i1 %tobool146, label %cleanup152, label %land.lhs.true, !dbg !9907

land.lhs.true:                                    ; preds = %if.end143
  %49 = load i32, i32* @dump_flags, align 4, !dbg !9908
  %and = and i32 %49, 8, !dbg !9909
  %tobool147 = icmp eq i32 %and, 0, !dbg !9909
  br i1 %tobool147, label %cleanup152, label %if.then148, !dbg !9910

if.then148:                                       ; preds = %land.lhs.true
  %call149 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.55, i64 0, i64 0)) #6, !dbg !9911
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9913
  call void @print_gimple_stmt(%struct._IO_FILE* %50, %union.gimple_statement_d* %call130, i32 0, i32 0) #6, !dbg !9914
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9915
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !9916
  %52 = load i32, i32* %index, align 8, !dbg !9916
  %call150 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i64 0, i64 0), i32 %52) #6, !dbg !9917
  br label %cleanup152, !dbg !9918

cleanup152:                                       ; preds = %land.lhs.true, %if.end143, %if.then148, %cond.end, %cleanup66
  %retval.4 = phi %union.tree_node* [ null, %cleanup66 ], [ null, %cond.end ], [ %call131, %if.then148 ], [ %call131, %land.lhs.true ], [ %call131, %if.end143 ], !dbg !9751
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !9919
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9919
  ret %union.tree_node* %retval.4, !dbg !9919
}

declare dso_local void @gsi_insert_seq_on_edge(%struct.edge_def*, %struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_gimple_operand(%union.tree_node*, %struct.gimple_seq_d**, i8 zeroext, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !9920 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !9924, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !9925, metadata !DIExpression()), !dbg !9927
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %seq) #7, !dbg !9928
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !9929
  store %struct.gimple_seq_node_d* %call, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !9930
  %seq1 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !9931
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq1, align 8, !dbg !9932
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !9933
  br i1 %tobool, label %cond.end, label %land.lhs.true, !dbg !9934

land.lhs.true:                                    ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !9935
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !9935
  %tobool4 = icmp eq %union.gimple_statement_d* %0, null, !dbg !9936
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !9937

cond.true:                                        ; preds = %land.lhs.true
  %call7 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %0) #7, !dbg !9938
  br label %cond.end, !dbg !9937

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.basic_block_def* [ %call7, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !9937
  %bb = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !9939
  store %struct.basic_block_def* %cond, %struct.basic_block_def** %bb, align 8, !dbg !9940
  ret void, !dbg !9941
}

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @create_phi_node(%union.tree_node*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @add_phi_arg(%union.gimple_statement_d*, %union.tree_node*, %struct.edge_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @simple_iv(%struct.loop*, %struct.loop*, %union.tree_node*, %struct.affine_iv*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @create_component_ref_by_pieces(%struct.basic_block_def* %block, %struct.vn_reference_s* %ref, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) unnamed_addr #5 !dbg !9942 {
entry:
  %op = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !9946, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %ref, metadata !9947, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !9948, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %domstmt, metadata !9949, metadata !DIExpression()), !dbg !9951
  %0 = bitcast i32* %op to i8*, !dbg !9952
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9952
  call void @llvm.dbg.value(metadata i32 0, metadata !9950, metadata !DIExpression()), !dbg !9951
  store i32 0, i32* %op, align 4, !dbg !9953
  call void @llvm.dbg.value(metadata i32* %op, metadata !9950, metadata !DIExpression(DW_OP_deref)), !dbg !9951
  %call = call fastcc %union.tree_node* @create_component_ref_by_pieces_1(%struct.basic_block_def* %block, %struct.vn_reference_s* %ref, i32* nonnull %op, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !9954
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9955
  ret %union.tree_node* %call, !dbg !9956
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %expr, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) unnamed_addr #5 !dbg !9957 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !9961, metadata !DIExpression()), !dbg !9978
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %expr, metadata !9962, metadata !DIExpression()), !dbg !9978
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !9963, metadata !DIExpression()), !dbg !9978
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %domstmt, metadata !9964, metadata !DIExpression()), !dbg !9978
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !9979
  %0 = bitcast i8** %aux to %struct.bb_bitmap_sets**, !dbg !9979
  %1 = load %struct.bb_bitmap_sets*, %struct.bb_bitmap_sets** %0, align 8, !dbg !9979
  %avail_out = getelementptr inbounds %struct.bb_bitmap_sets, %struct.bb_bitmap_sets* %1, i64 0, i32 3, !dbg !9979
  %2 = load %struct.bitmap_set*, %struct.bitmap_set** %avail_out, align 8, !dbg !9979
  %call = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %expr) #7, !dbg !9980
  %call1 = tail call fastcc %struct.pre_expr_d* @bitmap_find_leader(%struct.bitmap_set* %2, i32 %call, %union.gimple_statement_d* %domstmt) #7, !dbg !9981
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call1, metadata !9965, metadata !DIExpression()), !dbg !9978
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9966, metadata !DIExpression()), !dbg !9978
  %tobool = icmp eq %struct.pre_expr_d* %call1, null, !dbg !9982
  br i1 %tobool, label %if.end8, label %if.then, !dbg !9984

if.then:                                          ; preds = %entry
  %kind = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call1, i64 0, i32 0, !dbg !9985
  %3 = load i32, i32* %kind, align 8, !dbg !9985
  %cmp = icmp eq i32 %3, 0, !dbg !9988
  br i1 %cmp, label %if.then2, label %if.else, !dbg !9989

if.then2:                                         ; preds = %if.then
  %name = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call1, i64 0, i32 2, i32 0, !dbg !9990
  %4 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !9990
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !9966, metadata !DIExpression()), !dbg !9978
  br label %if.end8, !dbg !9991

if.else:                                          ; preds = %if.then
  %cmp4 = icmp eq i32 %3, 3, !dbg !9992
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !9994

if.then5:                                         ; preds = %if.else
  %constant = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call1, i64 0, i32 2, i32 0, !dbg !9995
  %5 = load %union.tree_node*, %union.tree_node** %constant, align 8, !dbg !9995
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !9966, metadata !DIExpression()), !dbg !9978
  br label %if.end8, !dbg !9996

if.end8:                                          ; preds = %entry, %if.then2, %if.then5, %if.else
  %genop.2 = phi %union.tree_node* [ null, %entry ], [ %4, %if.then2 ], [ %5, %if.then5 ], [ null, %if.else ], !dbg !9978
  call void @llvm.dbg.value(metadata %union.tree_node* %genop.2, metadata !9966, metadata !DIExpression()), !dbg !9978
  %cmp9 = icmp ne %union.tree_node* %genop.2, null, !dbg !9997
  %6 = load i8, i8* @in_fre, align 1, !dbg !9998
  %tobool10 = icmp ne i8 %6, 0, !dbg !9998
  %or.cond = or i1 %cmp9, %tobool10, !dbg !9999
  br i1 %or.cond, label %if.end41, label %if.then11, !dbg !9999

if.then11:                                        ; preds = %if.end8
  %call12 = tail call fastcc i32 @get_expr_value_id(%struct.pre_expr_d* %expr) #7, !dbg !10000
  call void @llvm.dbg.value(metadata i32 %call12, metadata !9970, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.value(metadata i8 0, metadata !9971, metadata !DIExpression()), !dbg !10001
  %7 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !10002
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8, !dbg !10002
  %8 = bitcast i32* %i to i8*, !dbg !10003
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8, !dbg !10003
  %9 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !10004
  %base = getelementptr inbounds %struct.VEC_bitmap_set_t_heap, %struct.VEC_bitmap_set_t_heap* %9, i64 0, i32 0, !dbg !10004
  %call14 = tail call fastcc %struct.bitmap_set* @VEC_bitmap_set_t_base_index(%struct.VEC_bitmap_set_t_base* %base, i32 %call12) #7, !dbg !10004
  call void @llvm.dbg.value(metadata %struct.bitmap_set* %call14, metadata !9967, metadata !DIExpression()), !dbg !10001
  %expressions = getelementptr inbounds %struct.bitmap_set, %struct.bitmap_set* %call14, i64 0, i32 0, !dbg !10005
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %expressions, align 8, !dbg !10005
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9972, metadata !DIExpression(DW_OP_deref)), !dbg !10001
  call void @llvm.dbg.value(metadata i32* %i, metadata !9973, metadata !DIExpression(DW_OP_deref)), !dbg !10001
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %10, i32 0, i32* nonnull %i) #7, !dbg !10005
  br label %for.cond, !dbg !10005

for.cond:                                         ; preds = %for.inc, %if.then11
  %genop.3 = phi %union.tree_node* [ null, %if.then11 ], [ %genop.4, %for.inc ], !dbg !9978
  %handled.0 = phi i8 [ 0, %if.then11 ], [ %handled.1, %for.inc ], !dbg !10001
  call void @llvm.dbg.value(metadata i8 %handled.0, metadata !9971, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.value(metadata %union.tree_node* %genop.3, metadata !9966, metadata !DIExpression()), !dbg !9978
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9972, metadata !DIExpression(DW_OP_deref)), !dbg !10001
  call void @llvm.dbg.value(metadata i32* %i, metadata !9973, metadata !DIExpression(DW_OP_deref)), !dbg !10001
  %call15 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !10006
  %tobool16 = icmp eq i8 %call15, 0, !dbg !10005
  br i1 %tobool16, label %for.end, label %for.body, !dbg !10005

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !10007
  call void @llvm.dbg.value(metadata i32 %11, metadata !9973, metadata !DIExpression()), !dbg !10001
  %call17 = call fastcc %struct.pre_expr_d* @expression_for_id(i32 %11) #7, !dbg !10008
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call17, metadata !9974, metadata !DIExpression()), !dbg !10009
  %kind18 = getelementptr inbounds %struct.pre_expr_d, %struct.pre_expr_d* %call17, i64 0, i32 0, !dbg !10010
  %12 = load i32, i32* %kind18, align 8, !dbg !10010
  %cmp19 = icmp eq i32 %12, 0, !dbg !10012
  br i1 %cmp19, label %cleanup, label %if.then20, !dbg !10013

if.then20:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata i8 1, metadata !9971, metadata !DIExpression()), !dbg !10001
  %call21 = call fastcc %union.tree_node* @get_expr_type(%struct.pre_expr_d* %expr) #7, !dbg !10014
  %call22 = call fastcc %union.tree_node* @create_expression_by_pieces(%struct.basic_block_def* %block, %struct.pre_expr_d* %call17, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt, %union.tree_node* %call21) #7, !dbg !10016
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !9966, metadata !DIExpression()), !dbg !9978
  br label %cleanup, !dbg !10017

cleanup:                                          ; preds = %for.body, %if.then20
  %genop.4 = phi %union.tree_node* [ %call22, %if.then20 ], [ %genop.3, %for.body ], !dbg !9978
  %handled.1 = phi i8 [ 1, %if.then20 ], [ %handled.0, %for.body ], !dbg !10001
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then20 ], [ true, %for.body ]
  call void @llvm.dbg.value(metadata i8 %handled.1, metadata !9971, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.value(metadata %union.tree_node* %genop.4, metadata !9966, metadata !DIExpression()), !dbg !9978
  br i1 %cleanup.dest.slot.0, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9972, metadata !DIExpression(DW_OP_deref)), !dbg !10001
  call void @llvm.dbg.value(metadata i32* %i, metadata !9973, metadata !DIExpression(DW_OP_deref)), !dbg !10001
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !10006
  br label %for.cond, !dbg !10006, !llvm.loop !10018

for.end:                                          ; preds = %for.cond, %cleanup
  %genop.5 = phi %union.tree_node* [ %genop.4, %cleanup ], [ %genop.3, %for.cond ], !dbg !9978
  %handled.2 = phi i8 [ %handled.1, %cleanup ], [ %handled.0, %for.cond ], !dbg !10001
  call void @llvm.dbg.value(metadata i8 %handled.2, metadata !9971, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.value(metadata %union.tree_node* %genop.5, metadata !9966, metadata !DIExpression()), !dbg !9978
  %tobool24 = icmp eq i8 %handled.2, 0, !dbg !10020
  %tobool26 = icmp ne %union.gimple_statement_d* %domstmt, null, !dbg !10022
  %or.cond2 = and i1 %tobool24, %tobool26, !dbg !10023
  br i1 %or.cond2, label %cleanup34, label %if.end28, !dbg !10023

if.end28:                                         ; preds = %for.end
  br i1 %tobool24, label %cond.true30, label %cleanup34, !dbg !10024

cond.true30:                                      ; preds = %if.end28
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2986, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10024
  br label %cleanup34, !dbg !10024

cleanup34:                                        ; preds = %if.end28, %cond.true30, %for.end
  %cleanup.dest.slot.1 = phi i1 [ false, %for.end ], [ true, %if.end28 ], [ true, %cond.true30 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8, !dbg !10025
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8, !dbg !10025
  br i1 %cleanup.dest.slot.1, label %if.end41, label %cleanup42

if.end41:                                         ; preds = %cleanup34, %if.end8
  %genop.6 = phi %union.tree_node* [ %genop.2, %if.end8 ], [ %genop.5, %cleanup34 ], !dbg !9978
  call void @llvm.dbg.value(metadata %union.tree_node* %genop.6, metadata !9966, metadata !DIExpression()), !dbg !9978
  br label %cleanup42, !dbg !10026

cleanup42:                                        ; preds = %cleanup34, %if.end41
  %retval.1 = phi %union.tree_node* [ %genop.6, %if.end41 ], [ null, %cleanup34 ]
  ret %union.tree_node* %retval.1, !dbg !10027
}

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @mark_symbols_for_renaming(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gimple_seq_add_seq(%struct.gimple_seq_d**, %struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !10028 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10032, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !10033, metadata !DIExpression()), !dbg !10034
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !10035
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !10036
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !10038

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10039
  %bf.load = load i64, i64* %0, align 8, !dbg !10039
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10040
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !10040
  br i1 %cmp, label %if.then, label %if.end, !dbg !10041

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10042
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !10042
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !10043
  br label %if.end, !dbg !10042

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !10044
}

declare dso_local void @gimple_seq_add_stmt(%struct.gimple_seq_d**, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @create_component_ref_by_pieces_1(%struct.basic_block_def* %block, %struct.vn_reference_s* %ref, i32* %operand, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) unnamed_addr #5 !dbg !10045 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !10049, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %ref, metadata !10050, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata i32* %operand, metadata !10051, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !10052, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %domstmt, metadata !10053, metadata !DIExpression()), !dbg !10101
  %operands = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %ref, i64 0, i32 5, !dbg !10102
  %0 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !10102
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_heap* %0, null, !dbg !10102
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10102

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %0, i64 0, i32 0, !dbg !10102
  br label %cond.end, !dbg !10102

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vn_reference_op_s_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10102
  %1 = load i32, i32* %operand, align 4, !dbg !10102
  %call = tail call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %cond, i32 %1) #7, !dbg !10102
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call, metadata !10054, metadata !DIExpression()), !dbg !10101
  %2 = load i32, i32* %operand, align 4, !dbg !10103
  %inc = add i32 %2, 1, !dbg !10103
  store i32 %inc, i32* %operand, align 4, !dbg !10103
  %opcode = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 0, !dbg !10104
  %3 = load i32, i32* %opcode, align 8, !dbg !10104
  switch i32 %3, label %sw.default [
    i32 59, label %sw.bb
    i32 152, label %sw.bb47
    i32 121, label %sw.bb95
    i32 43, label %sw.bb108
    i32 44, label %sw.bb108
    i32 118, label %sw.bb108
    i32 48, label %sw.bb120
    i32 49, label %sw.bb120
    i32 47, label %sw.bb120
    i32 42, label %sw.bb144
    i32 46, label %sw.bb172
    i32 45, label %sw.bb172
    i32 41, label %sw.bb226
    i32 141, label %sw.bb252
    i32 28, label %sw.bb258
    i32 23, label %sw.bb258
    i32 26, label %sw.bb258
    i32 27, label %sw.bb258
    i32 24, label %sw.bb258
    i32 51, label %sw.bb258
    i32 32, label %sw.bb258
    i32 34, label %sw.bb258
    i32 33, label %sw.bb258
    i32 36, label %sw.bb258
    i32 29, label %sw.bb258
  ], !dbg !10105

sw.bb:                                            ; preds = %cond.end
  %op1 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 3, !dbg !10106
  %4 = load %union.tree_node*, %union.tree_node** %op1, align 8, !dbg !10106
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !10059, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.value(metadata i32 0, metadata !10060, metadata !DIExpression()), !dbg !10107
  %5 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !10108
  %tobool3 = icmp eq %struct.VEC_vn_reference_op_s_heap* %5, null, !dbg !10108
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !10108

cond.true4:                                       ; preds = %sw.bb
  %base6 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %5, i64 0, i32 0, !dbg !10108
  br label %cond.end8, !dbg !10108

cond.end8:                                        ; preds = %sw.bb, %cond.true4
  %cond9 = phi %struct.VEC_vn_reference_op_s_base* [ %base6, %cond.true4 ], [ null, %sw.bb ], !dbg !10108
  %call10 = tail call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %cond9) #7, !dbg !10108
  %sub = add i32 %call10, -1, !dbg !10108
  %conv = zext i32 %sub to i64, !dbg !10108
  %mul = shl nuw nsw i64 %conv, 3, !dbg !10108
  %call11 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !10108
  %6 = bitcast i8* %call11 to %union.tree_node**, !dbg !10108
  call void @llvm.dbg.value(metadata %union.tree_node** %6, metadata !10061, metadata !DIExpression()), !dbg !10107
  br label %while.cond, !dbg !10109

while.cond:                                       ; preds = %while.body, %cond.end8
  %nargs.0 = phi i32 [ 0, %cond.end8 ], [ %inc23, %while.body ], !dbg !10107
  call void @llvm.dbg.value(metadata i32 %nargs.0, metadata !10060, metadata !DIExpression()), !dbg !10107
  %7 = load i32, i32* %operand, align 4, !dbg !10110
  %8 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !10111
  %tobool13 = icmp eq %struct.VEC_vn_reference_op_s_heap* %8, null, !dbg !10111
  br i1 %tobool13, label %cond.end18, label %cond.true14, !dbg !10111

cond.true14:                                      ; preds = %while.cond
  %base16 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %8, i64 0, i32 0, !dbg !10111
  br label %cond.end18, !dbg !10111

cond.end18:                                       ; preds = %while.cond, %cond.true14
  %cond19 = phi %struct.VEC_vn_reference_op_s_base* [ %base16, %cond.true14 ], [ null, %while.cond ], !dbg !10111
  %call20 = tail call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %cond19) #7, !dbg !10111
  %cmp = icmp ult i32 %7, %call20, !dbg !10112
  br i1 %cmp, label %while.body, label %while.end, !dbg !10109

while.body:                                       ; preds = %cond.end18
  %call22 = tail call fastcc %union.tree_node* @create_component_ref_by_pieces_1(%struct.basic_block_def* %block, %struct.vn_reference_s* %ref, i32* %operand, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10113
  %idxprom = zext i32 %nargs.0 to i64, !dbg !10115
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %6, i64 %idxprom, !dbg !10115
  store %union.tree_node* %call22, %union.tree_node** %arrayidx, align 8, !dbg !10116
  %inc23 = add i32 %nargs.0, 1, !dbg !10117
  call void @llvm.dbg.value(metadata i32 %inc23, metadata !10060, metadata !DIExpression()), !dbg !10107
  br label %while.cond, !dbg !10109, !llvm.loop !10118

while.end:                                        ; preds = %cond.end18
  %nargs.0.lcssa = phi i32 [ %nargs.0, %cond.end18 ], !dbg !10107
  call void @llvm.dbg.value(metadata i32 %nargs.0.lcssa, metadata !10060, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.value(metadata i32 %nargs.0.lcssa, metadata !10060, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.value(metadata i32 %nargs.0.lcssa, metadata !10060, metadata !DIExpression()), !dbg !10107
  %type = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 1, !dbg !10120
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !10120
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 2, !dbg !10120
  %10 = bitcast %union.tree_node** %op0 to i64**, !dbg !10120
  %11 = load i64*, i64** %10, align 8, !dbg !10120
  %bf.load = load i64, i64* %11, align 8, !dbg !10120
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !10120
  %cmp25 = icmp eq i64 %bf.cast3, 29, !dbg !10120
  %.cast = bitcast i64* %11 to %union.tree_node*, !dbg !10120
  br i1 %cmp25, label %cond.true27, label %cond.end32, !dbg !10120

cond.true27:                                      ; preds = %while.end
  %call29 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %.cast) #6, !dbg !10120
  br label %cond.end32, !dbg !10120

cond.end32:                                       ; preds = %while.end, %cond.true27
  %cond33 = phi %union.tree_node* [ %call29, %cond.true27 ], [ %.cast, %while.end ], !dbg !10120
  %call34 = tail call %union.tree_node* @build_call_array_loc(i32 0, %union.tree_node* %9, %union.tree_node* %cond33, i32 %nargs.0.lcssa, %union.tree_node** %6) #6, !dbg !10120
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !10056, metadata !DIExpression()), !dbg !10107
  tail call void @free(i8* %call11) #6, !dbg !10121
  %tobool35 = icmp eq %union.tree_node* %4, null, !dbg !10122
  br i1 %tobool35, label %if.end42, label %if.then, !dbg !10123

if.then:                                          ; preds = %cond.end32
  %call36 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* nonnull %4) #7, !dbg !10124
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call36, metadata !10062, metadata !DIExpression()), !dbg !10125
  %call37 = tail call fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %call36, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10126
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !10059, metadata !DIExpression()), !dbg !10107
  %tobool38 = icmp eq %union.tree_node* %call37, null, !dbg !10127
  br i1 %tobool38, label %cleanup, label %if.end, !dbg !10129

if.end:                                           ; preds = %if.then
  %operands40 = getelementptr inbounds %union.tree_node, %union.tree_node* %call34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10130
  %arrayidx41 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands40, i64 2, !dbg !10130
  store %union.tree_node* %call37, %union.tree_node** %arrayidx41, align 8, !dbg !10131
  br label %cleanup, !dbg !10132

cleanup:                                          ; preds = %if.then, %if.end
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %if.then ]
  br i1 %cleanup.dest.slot.0, label %if.end42, label %cleanup260

if.end42:                                         ; preds = %cond.end32, %cleanup
  br label %cleanup260, !dbg !10133

sw.bb47:                                          ; preds = %cond.end
  %12 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !10134
  %tobool49 = icmp eq %struct.VEC_vn_reference_op_s_heap* %12, null, !dbg !10134
  br i1 %tobool49, label %cond.end54, label %cond.true50, !dbg !10134

cond.true50:                                      ; preds = %sw.bb47
  %base52 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %12, i64 0, i32 0, !dbg !10134
  br label %cond.end54, !dbg !10134

cond.end54:                                       ; preds = %sw.bb47, %cond.true50
  %cond55 = phi %struct.VEC_vn_reference_op_s_base* [ %base52, %cond.true50 ], [ null, %sw.bb47 ], !dbg !10134
  %call56 = tail call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %cond55, i32 %inc) #7, !dbg !10134
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call56, metadata !10065, metadata !DIExpression()), !dbg !10135
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10068, metadata !DIExpression()), !dbg !10135
  %call57 = tail call fastcc %union.tree_node* @create_component_ref_by_pieces_1(%struct.basic_block_def* %block, %struct.vn_reference_s* %ref, i32* %operand, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10136
  call void @llvm.dbg.value(metadata %union.tree_node* %call57, metadata !10069, metadata !DIExpression()), !dbg !10135
  %tobool58 = icmp eq %union.tree_node* %call57, null, !dbg !10137
  br i1 %tobool58, label %cleanup260, label %if.end60, !dbg !10139

if.end60:                                         ; preds = %cond.end54
  %op061 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 2, !dbg !10140
  %13 = load %union.tree_node*, %union.tree_node** %op061, align 8, !dbg !10140
  %tobool62 = icmp eq %union.tree_node* %13, null, !dbg !10142
  br i1 %tobool62, label %if.end70, label %if.then63, !dbg !10143

if.then63:                                        ; preds = %if.end60
  %call65 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* nonnull %13) #7, !dbg !10144
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call65, metadata !10067, metadata !DIExpression()), !dbg !10135
  %call66 = tail call fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %call65, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10146
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !10068, metadata !DIExpression()), !dbg !10135
  %tobool67 = icmp eq %union.tree_node* %call66, null, !dbg !10147
  br i1 %tobool67, label %cleanup260, label %if.end70, !dbg !10149

if.end70:                                         ; preds = %if.then63, %if.end60
  %genop0.0 = phi %union.tree_node* [ null, %if.end60 ], [ %call66, %if.then63 ], !dbg !10135
  call void @llvm.dbg.value(metadata %union.tree_node* %genop0.0, metadata !10068, metadata !DIExpression()), !dbg !10135
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10150
  %bf.load72 = load i64, i64* %14, align 8, !dbg !10150
  %bf.cast74 = and i64 %bf.load72, 65535, !dbg !10150
  %arrayidx76 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast74, !dbg !10150
  %15 = load i32, i32* %arrayidx76, align 4, !dbg !10150
  %cmp77 = icmp eq i32 %15, 3, !dbg !10150
  %type80 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 1, !dbg !10152
  %16 = load %union.tree_node*, %union.tree_node** %type80, align 8, !dbg !10152
  %op181 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 3, !dbg !10152
  %17 = load %union.tree_node*, %union.tree_node** %op181, align 8, !dbg !10152
  %op2 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 4, !dbg !10152
  %18 = load %union.tree_node*, %union.tree_node** %op2, align 8, !dbg !10152
  %op182 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call56, i64 0, i32 3, !dbg !10152
  %19 = load %union.tree_node*, %union.tree_node** %op182, align 8, !dbg !10152
  %call83 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %19) #6, !dbg !10152
  br i1 %cmp77, label %if.then79, label %if.else, !dbg !10153

if.then79:                                        ; preds = %if.end70
  %call84 = tail call %union.tree_node* @build6_stat(i32 152, %union.tree_node* %16, %union.tree_node* nonnull %call57, %union.tree_node* null, %union.tree_node* %genop0.0, %union.tree_node* %17, %union.tree_node* %18, %union.tree_node* %call83) #6, !dbg !10154
  br label %cleanup260, !dbg !10155

if.else:                                          ; preds = %if.end70
  %call90 = tail call %union.tree_node* @build6_stat(i32 152, %union.tree_node* %16, %union.tree_node* null, %union.tree_node* nonnull %call57, %union.tree_node* %genop0.0, %union.tree_node* %17, %union.tree_node* %18, %union.tree_node* %call83) #6, !dbg !10156
  br label %cleanup260, !dbg !10157

sw.bb95:                                          ; preds = %cond.end
  %op096 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 2, !dbg !10158
  %20 = load %union.tree_node*, %union.tree_node** %op096, align 8, !dbg !10158
  %tobool97 = icmp eq %union.tree_node* %20, null, !dbg !10160
  br i1 %tobool97, label %sw.bb108, label %if.then98, !dbg !10161

if.then98:                                        ; preds = %sw.bb95
  %call100 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %20) #6, !dbg !10162
  %tobool101 = icmp eq i8 %call100, 0, !dbg !10162
  br i1 %tobool101, label %cond.true102, label %cond.end104, !dbg !10162

cond.true102:                                     ; preds = %if.then98
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2751, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10162
  br label %cond.end104, !dbg !10162

cond.end104:                                      ; preds = %if.then98, %cond.true102
  %21 = load %union.tree_node*, %union.tree_node** %op096, align 8, !dbg !10164
  br label %cleanup260, !dbg !10165

sw.bb108:                                         ; preds = %sw.bb95, %cond.end, %cond.end, %cond.end
  %call111 = tail call fastcc %union.tree_node* @create_component_ref_by_pieces_1(%struct.basic_block_def* %block, %struct.vn_reference_s* %ref, i32* %operand, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10166
  call void @llvm.dbg.value(metadata %union.tree_node* %call111, metadata !10072, metadata !DIExpression()), !dbg !10167
  %tobool112 = icmp eq %union.tree_node* %call111, null, !dbg !10168
  br i1 %tobool112, label %cleanup260, label %if.end114, !dbg !10170

if.end114:                                        ; preds = %sw.bb108
  %22 = load i32, i32* %opcode, align 8, !dbg !10171
  %type116 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 1, !dbg !10171
  %23 = load %union.tree_node*, %union.tree_node** %type116, align 8, !dbg !10171
  %call117 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 %22, %union.tree_node* %23, %union.tree_node* nonnull %call111) #6, !dbg !10171
  call void @llvm.dbg.value(metadata %union.tree_node* %call117, metadata !10070, metadata !DIExpression()), !dbg !10167
  br label %cleanup260, !dbg !10172

sw.bb120:                                         ; preds = %cond.end, %cond.end, %cond.end
  %call122 = tail call fastcc %union.tree_node* @create_component_ref_by_pieces_1(%struct.basic_block_def* %block, %struct.vn_reference_s* %ref, i32* %operand, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10173
  call void @llvm.dbg.value(metadata %union.tree_node* %call122, metadata !10075, metadata !DIExpression()), !dbg !10174
  %tobool123 = icmp eq %union.tree_node* %call122, null, !dbg !10175
  br i1 %tobool123, label %cleanup260, label %if.end125, !dbg !10177

if.end125:                                        ; preds = %sw.bb120
  %type126 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 1, !dbg !10178
  %24 = load %union.tree_node*, %union.tree_node** %type126, align 8, !dbg !10178
  %call127 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %24) #6, !dbg !10178
  %call128 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call127, %union.tree_node* nonnull %call122) #6, !dbg !10178
  call void @llvm.dbg.value(metadata %union.tree_node* %call128, metadata !10075, metadata !DIExpression()), !dbg !10174
  %25 = load i32, i32* %opcode, align 8, !dbg !10179
  %cmp130 = icmp eq i32 %25, 49, !dbg !10181
  %26 = load %union.tree_node*, %union.tree_node** %type126, align 8, !dbg !10182
  br i1 %cmp130, label %if.then132, label %if.else137, !dbg !10183

if.then132:                                       ; preds = %if.end125
  %op1135 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 3, !dbg !10184
  %27 = load %union.tree_node*, %union.tree_node** %op1135, align 8, !dbg !10184
  %call136 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 49, %union.tree_node* %26, %union.tree_node* %call128, %union.tree_node* %27) #6, !dbg !10184
  call void @llvm.dbg.value(metadata %union.tree_node* %call136, metadata !10073, metadata !DIExpression()), !dbg !10174
  br label %cleanup260, !dbg !10185

if.else137:                                       ; preds = %if.end125
  %call140 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 %25, %union.tree_node* %26, %union.tree_node* %call128) #6, !dbg !10186
  call void @llvm.dbg.value(metadata %union.tree_node* %call140, metadata !10073, metadata !DIExpression()), !dbg !10174
  br label %cleanup260

sw.bb144:                                         ; preds = %cond.end
  %call147 = tail call fastcc %union.tree_node* @create_component_ref_by_pieces_1(%struct.basic_block_def* %block, %struct.vn_reference_s* %ref, i32* %operand, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10187
  call void @llvm.dbg.value(metadata %union.tree_node* %call147, metadata !10078, metadata !DIExpression()), !dbg !10188
  %op0148 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 2, !dbg !10189
  %28 = load %union.tree_node*, %union.tree_node** %op0148, align 8, !dbg !10189
  %call149 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %28) #7, !dbg !10190
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call149, metadata !10079, metadata !DIExpression()), !dbg !10188
  %op1150 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 3, !dbg !10191
  %29 = load %union.tree_node*, %union.tree_node** %op1150, align 8, !dbg !10191
  %call151 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %29) #7, !dbg !10192
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call151, metadata !10080, metadata !DIExpression()), !dbg !10188
  %tobool153 = icmp eq %union.tree_node* %call147, null, !dbg !10193
  br i1 %tobool153, label %cleanup260, label %if.end155, !dbg !10195

if.end155:                                        ; preds = %sw.bb144
  %call156 = tail call fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %call149, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10196
  call void @llvm.dbg.value(metadata %union.tree_node* %call156, metadata !10081, metadata !DIExpression()), !dbg !10188
  %tobool157 = icmp eq %union.tree_node* %call156, null, !dbg !10197
  br i1 %tobool157, label %cleanup260, label %if.end159, !dbg !10199

if.end159:                                        ; preds = %if.end155
  %call160 = tail call fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %call151, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10200
  call void @llvm.dbg.value(metadata %union.tree_node* %call160, metadata !10082, metadata !DIExpression()), !dbg !10188
  %tobool161 = icmp eq %union.tree_node* %call160, null, !dbg !10201
  br i1 %tobool161, label %cleanup260, label %if.end163, !dbg !10203

if.end163:                                        ; preds = %if.end159
  %type164 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 1, !dbg !10204
  %30 = load %union.tree_node*, %union.tree_node** %type164, align 8, !dbg !10204
  %call165 = tail call %union.tree_node* @fold_build3_stat_loc(i32 0, i32 42, %union.tree_node* %30, %union.tree_node* nonnull %call147, %union.tree_node* nonnull %call156, %union.tree_node* nonnull %call160) #6, !dbg !10204
  call void @llvm.dbg.value(metadata %union.tree_node* %call165, metadata !10076, metadata !DIExpression()), !dbg !10188
  br label %cleanup260, !dbg !10205

sw.bb172:                                         ; preds = %cond.end, %cond.end
  %op0175 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 2, !dbg !10206
  %31 = load %union.tree_node*, %union.tree_node** %op0175, align 8, !dbg !10206
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !10085, metadata !DIExpression()), !dbg !10207
  %op1178 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 3, !dbg !10208
  %32 = load %union.tree_node*, %union.tree_node** %op1178, align 8, !dbg !10208
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !10087, metadata !DIExpression()), !dbg !10207
  %op2180 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 4, !dbg !10209
  %33 = load %union.tree_node*, %union.tree_node** %op2180, align 8, !dbg !10209
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !10089, metadata !DIExpression()), !dbg !10207
  %call181 = tail call fastcc %union.tree_node* @create_component_ref_by_pieces_1(%struct.basic_block_def* %block, %struct.vn_reference_s* %ref, i32* %operand, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10210
  call void @llvm.dbg.value(metadata %union.tree_node* %call181, metadata !10083, metadata !DIExpression()), !dbg !10207
  %tobool182 = icmp eq %union.tree_node* %call181, null, !dbg !10211
  br i1 %tobool182, label %cleanup260, label %if.end184, !dbg !10213

if.end184:                                        ; preds = %sw.bb172
  %call185 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %31) #7, !dbg !10214
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call185, metadata !10086, metadata !DIExpression()), !dbg !10207
  %call186 = tail call fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %call185, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10215
  call void @llvm.dbg.value(metadata %union.tree_node* %call186, metadata !10085, metadata !DIExpression()), !dbg !10207
  %tobool187 = icmp eq %union.tree_node* %call186, null, !dbg !10216
  br i1 %tobool187, label %cleanup260, label %if.end189, !dbg !10218

if.end189:                                        ; preds = %if.end184
  %tobool190 = icmp eq %union.tree_node* %32, null, !dbg !10219
  br i1 %tobool190, label %if.end197, label %if.then191, !dbg !10221

if.then191:                                       ; preds = %if.end189
  %call192 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* nonnull %32) #7, !dbg !10222
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call192, metadata !10088, metadata !DIExpression()), !dbg !10207
  %call193 = tail call fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %call192, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10224
  call void @llvm.dbg.value(metadata %union.tree_node* %call193, metadata !10087, metadata !DIExpression()), !dbg !10207
  %tobool194 = icmp eq %union.tree_node* %call193, null, !dbg !10225
  br i1 %tobool194, label %cleanup260, label %if.end197, !dbg !10227

if.end197:                                        ; preds = %if.then191, %if.end189
  %genop2177.0 = phi %union.tree_node* [ null, %if.end189 ], [ %call193, %if.then191 ], !dbg !10207
  call void @llvm.dbg.value(metadata %union.tree_node* %genop2177.0, metadata !10087, metadata !DIExpression()), !dbg !10207
  %tobool198 = icmp eq %union.tree_node* %33, null, !dbg !10228
  br i1 %tobool198, label %if.end215, label %if.then199, !dbg !10229

if.then199:                                       ; preds = %if.end197
  %type200 = getelementptr inbounds %union.tree_node, %union.tree_node* %call181, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10230
  %34 = bitcast %union.tree_node** %type200 to %struct.tree_common**, !dbg !10230
  %35 = load %struct.tree_common*, %struct.tree_common** %34, align 8, !dbg !10230
  %type202 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %35, i64 0, i32 2, !dbg !10230
  %36 = bitcast %union.tree_node** %type202 to %struct.tree_type**, !dbg !10230
  %37 = load %struct.tree_type*, %struct.tree_type** %36, align 8, !dbg !10230
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %37, i64 0, i32 7, !dbg !10231
  %38 = load i32, i32* %align, align 8, !dbg !10231
  %div = lshr i32 %38, 3, !dbg !10231
  %conv204 = zext i32 %div to i64, !dbg !10231
  %call205 = tail call %union.tree_node* @size_int_kind(i64 %conv204, i32 0) #6, !dbg !10231
  %call206 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 76, %union.tree_node* nonnull %33, %union.tree_node* %call205) #6, !dbg !10231
  call void @llvm.dbg.value(metadata %union.tree_node* %call206, metadata !10089, metadata !DIExpression()), !dbg !10207
  %call207 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %call206) #7, !dbg !10232
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call207, metadata !10090, metadata !DIExpression()), !dbg !10207
  %call208 = tail call fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %call207, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10233
  call void @llvm.dbg.value(metadata %union.tree_node* %call208, metadata !10089, metadata !DIExpression()), !dbg !10207
  %tobool209 = icmp eq %union.tree_node* %call208, null, !dbg !10234
  br i1 %tobool209, label %cleanup260, label %if.end215

if.end215:                                        ; preds = %if.then199, %if.end197
  %genop3.0 = phi %union.tree_node* [ null, %if.end197 ], [ %call208, %if.then199 ], !dbg !10207
  call void @llvm.dbg.value(metadata %union.tree_node* %genop3.0, metadata !10089, metadata !DIExpression()), !dbg !10207
  %39 = load i32, i32* %opcode, align 8, !dbg !10236
  %type217 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 1, !dbg !10236
  %40 = load %union.tree_node*, %union.tree_node** %type217, align 8, !dbg !10236
  %call218 = tail call %union.tree_node* @build4_stat(i32 %39, %union.tree_node* %40, %union.tree_node* nonnull %call181, %union.tree_node* nonnull %call186, %union.tree_node* %genop2177.0, %union.tree_node* %genop3.0) #6, !dbg !10236
  br label %cleanup260, !dbg !10237

sw.bb226:                                         ; preds = %cond.end
  %op1230 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 3, !dbg !10238
  %41 = load %union.tree_node*, %union.tree_node** %op1230, align 8, !dbg !10238
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !10097, metadata !DIExpression()), !dbg !10239
  %call232 = tail call fastcc %union.tree_node* @create_component_ref_by_pieces_1(%struct.basic_block_def* %block, %struct.vn_reference_s* %ref, i32* %operand, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10240
  call void @llvm.dbg.value(metadata %union.tree_node* %call232, metadata !10094, metadata !DIExpression()), !dbg !10239
  %tobool233 = icmp eq %union.tree_node* %call232, null, !dbg !10241
  br i1 %tobool233, label %cleanup260, label %if.end235, !dbg !10243

if.end235:                                        ; preds = %sw.bb226
  %op0236 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 2, !dbg !10244
  %42 = load %union.tree_node*, %union.tree_node** %op0236, align 8, !dbg !10244
  call void @llvm.dbg.value(metadata %union.tree_node* %42, metadata !10096, metadata !DIExpression()), !dbg !10239
  %tobool237 = icmp eq %union.tree_node* %41, null, !dbg !10245
  br i1 %tobool237, label %if.end244, label %if.then238, !dbg !10247

if.then238:                                       ; preds = %if.end235
  %call239 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* nonnull %41) #7, !dbg !10248
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call239, metadata !10098, metadata !DIExpression()), !dbg !10239
  %call240 = tail call fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %call239, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10250
  call void @llvm.dbg.value(metadata %union.tree_node* %call240, metadata !10097, metadata !DIExpression()), !dbg !10239
  %tobool241 = icmp eq %union.tree_node* %call240, null, !dbg !10251
  br i1 %tobool241, label %cleanup260, label %if.end244, !dbg !10253

if.end244:                                        ; preds = %if.then238, %if.end235
  %genop2229.0 = phi %union.tree_node* [ null, %if.end235 ], [ %call240, %if.then238 ], !dbg !10239
  call void @llvm.dbg.value(metadata %union.tree_node* %genop2229.0, metadata !10097, metadata !DIExpression()), !dbg !10239
  %type246 = getelementptr inbounds %union.tree_node, %union.tree_node* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10254
  %43 = load %union.tree_node*, %union.tree_node** %type246, align 8, !dbg !10254
  %call247 = tail call %union.tree_node* @fold_build3_stat_loc(i32 0, i32 41, %union.tree_node* %43, %union.tree_node* nonnull %call232, %union.tree_node* %42, %union.tree_node* %genop2229.0) #6, !dbg !10254
  br label %cleanup260, !dbg !10255

sw.bb252:                                         ; preds = %cond.end
  %op0254 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 2, !dbg !10256
  %44 = load %union.tree_node*, %union.tree_node** %op0254, align 8, !dbg !10256
  %call255 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %44) #7, !dbg !10257
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call255, metadata !10099, metadata !DIExpression()), !dbg !10258
  %call256 = tail call fastcc %union.tree_node* @find_or_generate_expression(%struct.basic_block_def* %block, %struct.pre_expr_d* %call255, %struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %domstmt) #7, !dbg !10259
  call void @llvm.dbg.value(metadata %union.tree_node* %call256, metadata !10055, metadata !DIExpression()), !dbg !10101
  br label %cleanup260

sw.bb258:                                         ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %op0259 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 2, !dbg !10260
  %45 = load %union.tree_node*, %union.tree_node** %op0259, align 8, !dbg !10260
  br label %cleanup260, !dbg !10261

sw.default:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2904, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10262
  br label %cleanup260, !dbg !10263

cleanup260:                                       ; preds = %if.then63, %cond.end54, %sw.bb108, %sw.bb120, %if.end159, %if.end155, %sw.bb144, %if.then191, %if.then199, %if.end184, %sw.bb172, %if.then238, %sw.bb226, %if.end244, %if.end215, %if.end163, %if.else137, %if.then132, %if.end114, %if.then79, %if.else, %if.end42, %cleanup, %sw.default, %sw.bb258, %sw.bb252, %cond.end104
  %retval.9 = phi %union.tree_node* [ null, %sw.default ], [ %45, %sw.bb258 ], [ %call256, %sw.bb252 ], [ %21, %cond.end104 ], [ null, %cleanup ], [ %call34, %if.end42 ], [ %call84, %if.then79 ], [ %call90, %if.else ], [ null, %cond.end54 ], [ null, %if.then63 ], [ %call117, %if.end114 ], [ null, %sw.bb108 ], [ null, %sw.bb120 ], [ %call136, %if.then132 ], [ %call140, %if.else137 ], [ %call165, %if.end163 ], [ null, %sw.bb144 ], [ null, %if.end155 ], [ null, %if.end159 ], [ null, %if.then199 ], [ %call218, %if.end215 ], [ null, %sw.bb172 ], [ null, %if.end184 ], [ null, %if.then191 ], [ %call247, %if.end244 ], [ null, %sw.bb226 ], [ null, %if.then238 ]
  ret %union.tree_node* %retval.9, !dbg !10264
}

declare dso_local %union.tree_node* @build_call_array_loc(i32, %union.tree_node*, %union.tree_node*, i32, %union.tree_node**) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_fold_addr_expr_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build6_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build3_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build4_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !10265 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10269, metadata !DIExpression()), !dbg !10272
  call void @llvm.dbg.value(metadata i32 %i, metadata !10270, metadata !DIExpression()), !dbg !10272
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !10271, metadata !DIExpression()), !dbg !10272
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !10273
  %tobool = icmp eq i8 %call, 0, !dbg !10273
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !10273

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !10273
  %cmp = icmp ugt i32 %call1, %i, !dbg !10273
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10273

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10273
  br label %cond.end, !dbg !10273

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !10274
  %idxprom = zext i32 %i to i64, !dbg !10274
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !10274
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !10275
  ret void, !dbg !10276
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !10277 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10279, metadata !DIExpression()), !dbg !10280
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !10281
  %tobool = icmp eq i8 %call, 0, !dbg !10281
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !10282

lor.rhs:                                          ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !10283
  %tobool3 = icmp eq i8 %call1, 0, !dbg !10283
  br i1 %tobool3, label %lor.end, label %land.rhs, !dbg !10284

land.rhs:                                         ; preds = %lor.rhs
  %call4 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !10285
  %cmp = icmp ne %union.tree_node* %call4, null, !dbg !10286
  %phitmp = zext i1 %cmp to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry, %land.rhs
  %0 = phi i8 [ 1, %entry ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !10287
}

declare dso_local zeroext i8 @gimple_assign_ssa_name_copy_p(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @print_gimple_expr(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

declare dso_local void @propagate_tree_value_into_stmt(%struct.gimple_stmt_iterator*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !10288 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !10292, metadata !DIExpression()), !dbg !10293
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !10294
  %tobool = icmp eq i8 %call, 0, !dbg !10294
  br i1 %tobool, label %if.end, label %if.then, !dbg !10296

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !10297
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !10299
  br label %if.end, !dbg !10300

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !10301
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @can_PRE_operation(%union.tree_node* %op) unnamed_addr #5 !dbg !10302 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !10306, metadata !DIExpression()), !dbg !10307
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10308
  %bf.load = load i64, i64* %0, align 8, !dbg !10308
  %bf.cast = and i64 %bf.load, 65535, !dbg !10308
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !10308
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10308
  %cmp = icmp eq i32 %1, 6, !dbg !10308
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !10309

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i32 %1, 7, !dbg !10310
  br i1 %cmp7, label %lor.end, label %lor.lhs.false8, !dbg !10311

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp15 = icmp eq i32 %1, 5, !dbg !10312
  br i1 %cmp15, label %lor.end, label %lor.lhs.false16, !dbg !10313

lor.lhs.false16:                                  ; preds = %lor.lhs.false8
  %cmp21 = icmp eq i64 %bf.cast, 47, !dbg !10314
  br i1 %cmp21, label %lor.end, label %lor.lhs.false22, !dbg !10315

lor.lhs.false22:                                  ; preds = %lor.lhs.false16
  %cmp27 = icmp eq i64 %bf.cast, 41, !dbg !10316
  br i1 %cmp27, label %lor.end, label %lor.lhs.false28, !dbg !10317

lor.lhs.false28:                                  ; preds = %lor.lhs.false22
  %cmp33 = icmp eq i64 %bf.cast, 118, !dbg !10318
  br i1 %cmp33, label %lor.end, label %lor.lhs.false34, !dbg !10319

lor.lhs.false34:                                  ; preds = %lor.lhs.false28
  %cmp39 = icmp eq i64 %bf.cast, 59, !dbg !10320
  br i1 %cmp39, label %lor.end, label %lor.rhs, !dbg !10321

lor.rhs:                                          ; preds = %lor.lhs.false34
  %cmp44 = icmp eq i64 %bf.cast, 45, !dbg !10322
  %phitmp = zext i1 %cmp44 to i8, !dbg !10321
  br label %lor.end, !dbg !10321

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false34, %lor.lhs.false28, %lor.lhs.false22, %lor.lhs.false16, %lor.lhs.false8, %lor.lhs.false, %entry
  %2 = phi i8 [ 1, %lor.lhs.false34 ], [ 1, %lor.lhs.false28 ], [ 1, %lor.lhs.false22 ], [ 1, %lor.lhs.false16 ], [ 1, %lor.lhs.false8 ], [ 1, %lor.lhs.false ], [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %2, !dbg !10323
}

declare dso_local %union.tree_node* @vn_get_expr_for(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @do_SCCVN_insertion(%union.gimple_statement_d* %stmt, %union.tree_node* %ssa_vn) unnamed_addr #5 !dbg !10324 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10328, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata %union.tree_node* %ssa_vn, metadata !10329, metadata !DIExpression()), !dbg !10335
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !10336
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !10330, metadata !DIExpression()), !dbg !10335
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !10337
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !10337
  %1 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !10338
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10338
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !10332, metadata !DIExpression()), !dbg !10335
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmts, align 8, !dbg !10339
  %call1 = tail call %union.tree_node* @vn_get_expr_for(%union.tree_node* %ssa_vn) #6, !dbg !10340
  %call2 = tail call fastcc %struct.pre_expr_d* @get_or_alloc_expr_for(%union.tree_node* %call1) #7, !dbg !10341
  call void @llvm.dbg.value(metadata %struct.pre_expr_d* %call2, metadata !10334, metadata !DIExpression()), !dbg !10335
  %cmp = icmp eq %struct.pre_expr_d* %call2, null, !dbg !10342
  br i1 %cmp, label %cleanup, label %if.end, !dbg !10344

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !10332, metadata !DIExpression(DW_OP_deref)), !dbg !10335
  %call3 = call fastcc %union.tree_node* @create_expression_by_pieces(%struct.basic_block_def* %call, %struct.pre_expr_d* nonnull %call2, %struct.gimple_seq_d** nonnull %stmts, %union.gimple_statement_d* %stmt, %union.tree_node* null) #7, !dbg !10345
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !10333, metadata !DIExpression()), !dbg !10335
  %cmp4 = icmp eq %union.tree_node* %call3, null, !dbg !10346
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !10348

if.end6:                                          ; preds = %if.end
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !10349
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !10349
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* %stmt) #6, !dbg !10349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !10349
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !10349
  %3 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !10350
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %3, metadata !10332, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !10331, metadata !DIExpression(DW_OP_deref)), !dbg !10335
  call void @gsi_insert_seq_before(%struct.gimple_stmt_iterator* nonnull %gsi, %struct.gimple_seq_d* %3, i32 1) #6, !dbg !10351
  br label %cleanup, !dbg !10352

cleanup:                                          ; preds = %if.end, %entry, %if.end6
  %retval.0 = phi %union.tree_node* [ %call3, %if.end6 ], [ null, %entry ], [ null, %if.end ], !dbg !10335
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10353
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !10353
  ret %union.tree_node* %retval.0, !dbg !10353
}

declare dso_local zeroext i8 @may_propagate_copy(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10354 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10356, metadata !DIExpression()), !dbg !10357
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !10358
  ret %union.tree_node* %call, !dbg !10359
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10360 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10362, metadata !DIExpression()), !dbg !10363
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !10364
  ret %union.tree_node* %call, !dbg !10365
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10366 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10368, metadata !DIExpression()), !dbg !10369
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !10370
  ret %union.tree_node* %call, !dbg !10371
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10372 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10374, metadata !DIExpression()), !dbg !10375
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !10376
  %bf.load = load i32, i32* %0, align 8, !dbg !10376
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10376
  ret i32 %bf.lshr, !dbg !10377
}

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_make_false(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10378 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10380, metadata !DIExpression()), !dbg !10381
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !10382
  tail call fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %0) #7, !dbg !10383
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !dbg !10384
  tail call fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %1) #7, !dbg !10385
  %2 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !10386
  %bf.load = load i32, i32* %2, align 8, !dbg !10387
  %bf.clear = and i32 %bf.load, 65535, !dbg !10387
  %bf.set = or i32 %bf.clear, 6619136, !dbg !10387
  store i32 %bf.set, i32* %2, align 8, !dbg !10387
  ret void, !dbg !10388
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_make_true(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10389 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10391, metadata !DIExpression()), !dbg !10392
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !10393
  tail call fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %0) #7, !dbg !10394
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !10395
  tail call fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %1) #7, !dbg !10396
  %2 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !10397
  %bf.load = load i32, i32* %2, align 8, !dbg !10398
  %bf.clear = and i32 %bf.load, 65535, !dbg !10398
  %bf.set = or i32 %bf.clear, 6619136, !dbg !10398
  store i32 %bf.set, i32* %2, align 8, !dbg !10398
  ret void, !dbg !10399
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_fn(%union.gimple_statement_d* %gs, %union.tree_node* %fn) unnamed_addr #0 !dbg !10400 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10402, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !10403, metadata !DIExpression()), !dbg !10404
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %fn) #7, !dbg !10405
  ret void, !dbg !10406
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10407 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10409, metadata !DIExpression()), !dbg !10410
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !10411
  ret %union.tree_node** %result, !dbg !10412
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !10413 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10415, metadata !DIExpression()), !dbg !10417
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !10416, metadata !DIExpression()), !dbg !10418
  tail call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* sret %agg.result, %struct.basic_block_def* %bb) #7, !dbg !10419
  br label %while.cond, !dbg !10420

while.cond:                                       ; preds = %while.body, %entry
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !10421
  %tobool = icmp eq i8 %call, 0, !dbg !10421
  br i1 %tobool, label %land.rhs, label %while.end, !dbg !10422

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !10423
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !10424
  %cmp = icmp eq i32 %call2, 4, !dbg !10425
  br i1 %cmp, label %while.body, label %while.end, !dbg !10420

while.body:                                       ; preds = %land.rhs
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %agg.result) #7, !dbg !10426
  br label %while.cond, !dbg !10420, !llvm.loop !10427

while.end:                                        ; preds = %while.cond, %land.rhs
  ret void, !dbg !10429
}

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_imm_use(%union.tree_node* %var, %struct.ssa_use_operand_d** %use_p, %union.gimple_statement_d** %stmt) unnamed_addr #0 !dbg !10430 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !10435, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d** %use_p, metadata !10436, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmt, metadata !10437, metadata !DIExpression()), !dbg !10442
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10443
  %0 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !10443
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !10438, metadata !DIExpression()), !dbg !10442
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !10444
  %1 = bitcast i40* %next to %struct.ssa_use_operand_d**, !dbg !10444
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !10444
  %cmp = icmp eq %struct.ssa_use_operand_d* %2, %0, !dbg !10445
  br i1 %cmp, label %return_false, label %if.end, !dbg !10446

return_false:                                     ; preds = %if.then4, %if.end12, %entry
  call void @llvm.dbg.label(metadata !10439), !dbg !10447
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %use_p, align 8, !dbg !10448
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !10449
  br label %cleanup, !dbg !10450

if.end:                                           ; preds = %entry
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %2, i64 0, i32 1, !dbg !10451
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next2, align 8, !dbg !10451
  %cmp3 = icmp eq %struct.ssa_use_operand_d* %3, %0, !dbg !10453
  br i1 %cmp3, label %if.then4, label %if.end12, !dbg !10454

if.then4:                                         ; preds = %if.end
  %stmt6 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %2, i64 0, i32 2, i32 0, !dbg !10455
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt6, align 8, !dbg !10455
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %4) #7, !dbg !10458
  %tobool = icmp eq i8 %call, 0, !dbg !10458
  br i1 %tobool, label %if.then7, label %return_false, !dbg !10459

if.then7:                                         ; preds = %if.then4
  %5 = bitcast i40* %next to i64*, !dbg !10460
  %6 = load i64, i64* %5, align 8, !dbg !10460
  %7 = bitcast %struct.ssa_use_operand_d** %use_p to i64*, !dbg !10462
  store i64 %6, i64* %7, align 8, !dbg !10462
  %8 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !10463
  %stmt11 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %8, i64 0, i32 2, i32 0, !dbg !10464
  %9 = bitcast %union.gimple_statement_d** %stmt11 to i64*, !dbg !10464
  %10 = load i64, i64* %9, align 8, !dbg !10464
  %11 = bitcast %union.gimple_statement_d** %stmt to i64*, !dbg !10465
  store i64 %10, i64* %11, align 8, !dbg !10465
  br label %cleanup, !dbg !10466

if.end12:                                         ; preds = %if.end
  %12 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !10467
  %tobool13 = icmp eq i32 %12, 0, !dbg !10467
  br i1 %tobool13, label %return_false, label %if.end15, !dbg !10469

if.end15:                                         ; preds = %if.end12
  %call16 = tail call zeroext i8 @single_imm_use_1(%struct.ssa_use_operand_d* nonnull %0, %struct.ssa_use_operand_d** %use_p, %union.gimple_statement_d** %stmt) #6, !dbg !10470
  br label %cleanup, !dbg !10471

cleanup:                                          ; preds = %if.end15, %if.then7, %return_false
  %retval.0 = phi i8 [ 0, %return_false ], [ 1, %if.then7 ], [ %call16, %if.end15 ], !dbg !10442
  ret i8 %retval.0, !dbg !10472
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) unnamed_addr #0 !dbg !10473 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !10477, metadata !DIExpression()), !dbg !10479
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !10478, metadata !DIExpression()), !dbg !10479
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use) #7, !dbg !10480
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !10481
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !10481
  store %union.tree_node* %val, %union.tree_node** %0, align 8, !dbg !10482
  tail call fastcc void @link_imm_use(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) #7, !dbg !10483
  ret void, !dbg !10484
}

declare dso_local void @unlink_stmt_vdef(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10485 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10487, metadata !DIExpression()), !dbg !10488
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !10489
  %cmp = icmp eq i32 %call, 6, !dbg !10490
  %conv1 = zext i1 %cmp to i8, !dbg !10489
  ret i8 %conv1, !dbg !10491
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10492 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10494, metadata !DIExpression()), !dbg !10495
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !10496
  ret %union.tree_node* %call, !dbg !10497
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gsi_insert_seq_before(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !10498 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10500, metadata !DIExpression()), !dbg !10502
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !10501, metadata !DIExpression()), !dbg !10502
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !10503
  ret void, !dbg !10504
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !10505 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10507, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !10508, metadata !DIExpression()), !dbg !10509
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %rhs) #7, !dbg !10510
  ret void, !dbg !10511
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10512 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10514, metadata !DIExpression()), !dbg !10515
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !10516
  %cmp = icmp eq i32 %call, 2, !dbg !10517
  %conv1 = zext i1 %cmp to i8, !dbg !10516
  ret i8 %conv1, !dbg !10518
}

declare dso_local zeroext i8 @single_imm_use_1(%struct.ssa_use_operand_d*, %struct.ssa_use_operand_d**, %union.gimple_statement_d**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !10519 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !10523, metadata !DIExpression()), !dbg !10524
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !10525
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !10525
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !10527
  br i1 %cmp, label %return, label %if.end, !dbg !10528

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !10529
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !10529
  %2 = load i64, i64* %1, align 8, !dbg !10529
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !10530
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !10531
  store i64 %2, i64* %3, align 8, !dbg !10531
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !10532
  %5 = load i64, i64* %4, align 8, !dbg !10532
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !10533
  %7 = load i64*, i64** %6, align 8, !dbg !10533
  store i64 %5, i64* %7, align 8, !dbg !10534
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !10535
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !10536
  br label %return, !dbg !10537

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !10537
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use(%struct.ssa_use_operand_d* %linknode, %union.tree_node* %def) unnamed_addr #0 !dbg !10538 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !10542, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !10543, metadata !DIExpression()), !dbg !10545
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !10546
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10548

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10549
  %bf.load = load i64, i64* %0, align 8, !dbg !10549
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10550
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !10550
  br i1 %cmp, label %if.else, label %if.then, !dbg !10551

if.then:                                          ; preds = %lor.lhs.false, %entry
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !10552
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !10553
  br label %if.end, !dbg !10554

if.else:                                          ; preds = %lor.lhs.false
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10555
  %1 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !10555
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %1, metadata !10544, metadata !DIExpression()), !dbg !10545
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* nonnull %1) #7, !dbg !10557
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10558
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !10559 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !10563, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !10564, metadata !DIExpression()), !dbg !10565
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !10566
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !10567
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !10568
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !10568
  %1 = load i64, i64* %0, align 8, !dbg !10568
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !10569
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !10570
  store i64 %1, i64* %2, align 8, !dbg !10570
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !10571
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !10572
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !10573
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !10574
  ret void, !dbg !10575
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_bitmap_set_t_heap_free(%struct.VEC_bitmap_set_t_heap** %vec_) unnamed_addr #0 !dbg !10576 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_set_t_heap** @value_expressions, metadata !10580, metadata !DIExpression()), !dbg !10581
  %0 = load %struct.VEC_bitmap_set_t_heap*, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !10582
  %tobool = icmp eq %struct.VEC_bitmap_set_t_heap* %0, null, !dbg !10582
  br i1 %tobool, label %if.end, label %if.then, !dbg !10584

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_bitmap_set_t_heap* %0 to i8*, !dbg !10584
  tail call void @free(i8* nonnull %1) #6, !dbg !10582
  br label %if.end, !dbg !10582

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_bitmap_set_t_heap* null, %struct.VEC_bitmap_set_t_heap** @value_expressions, align 8, !dbg !10584
  ret void, !dbg !10584
}

declare dso_local void @bitmap_obstack_release(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_unsigned_heap_free(%struct.VEC_unsigned_heap** %vec_) unnamed_addr #0 !dbg !10585 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap** @name_to_id, metadata !10589, metadata !DIExpression()), !dbg !10590
  %0 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !10591
  %tobool = icmp eq %struct.VEC_unsigned_heap* %0, null, !dbg !10591
  br i1 %tobool, label %if.end, label %if.then, !dbg !10593

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_unsigned_heap* %0 to i8*, !dbg !10593
  tail call void @free(i8* nonnull %1) #6, !dbg !10591
  br label %if.end, !dbg !10591

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_unsigned_heap* null, %struct.VEC_unsigned_heap** @name_to_id, align 8, !dbg !10593
  ret void, !dbg !10593
}

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_purge_all_dead_eh_edges(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @cleanup_tree_cfg() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2288, !2289, !2290}
!llvm.ident = !{!2291}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "value_expressions", scope: !2, file: !3, line: 379, type: !671, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !661, globals: !2177, nameTableKind: None)
!3 = !DIFile(filename: "tree-ssa-pre.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !12, !140, !335, !344, !348, !354, !359, !364, !382, !389, !396, !403, !579, !586, !591, !629, !655}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pre_expr_kind", file: !3, line: 157, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9, !10, !11}
!8 = !DIEnumerator(name: "NAME", value: 0, isUnsigned: true)
!9 = !DIEnumerator(name: "NARY", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "REFERENCE", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "CONSTANT", value: 3, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !13, line: 7, baseType: !6, size: 32, elements: !14)
!13 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!14 = !{!15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139}
!15 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!16 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!17 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!18 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!19 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!20 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!21 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!22 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!23 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!24 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!25 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!26 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!27 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!28 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!29 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!30 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!31 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!32 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!33 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!34 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!35 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!36 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!37 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!38 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!39 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!40 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!41 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!42 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!43 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!44 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!45 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!46 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!47 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!48 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!49 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!50 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!51 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!52 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!53 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!54 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!55 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!56 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!57 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!58 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!59 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!60 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!61 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!62 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!63 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!64 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!65 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!66 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!67 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!68 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!69 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!70 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!71 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!72 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!73 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!74 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!75 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!76 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!77 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!78 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!79 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!80 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!81 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!82 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!83 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!84 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!85 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!86 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!87 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!88 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!89 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!90 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!91 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!92 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!93 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!94 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!95 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!96 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!97 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!98 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!99 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!100 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!101 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!134 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!137 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!138 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!139 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !141, line: 39, baseType: !6, size: 32, elements: !142)
!141 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!142 = !{!143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334}
!143 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!144 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!145 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!146 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!147 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!148 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!149 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!150 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!151 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!152 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!153 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!154 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!155 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!156 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!157 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!158 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!159 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!160 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!161 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!162 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!163 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!164 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!165 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!166 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!167 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!168 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!169 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!170 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!171 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!172 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!173 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!174 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!175 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!176 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!177 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!178 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!179 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!180 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!181 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!182 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!183 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!184 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!185 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!186 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!187 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!188 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!189 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!190 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!191 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!192 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!193 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!194 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!195 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!196 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!197 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!198 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!199 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!200 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!201 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!202 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!203 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!204 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!205 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!206 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!207 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!208 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!209 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!210 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!211 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!212 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!213 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!214 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!215 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!216 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!217 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!218 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!219 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!220 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!221 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!222 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!223 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!224 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!225 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!226 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!227 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!228 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!229 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!230 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!231 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!232 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!233 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!234 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!235 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!236 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!237 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!238 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!239 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!240 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!241 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!242 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!243 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!244 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!245 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!246 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!247 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!248 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!249 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!250 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!251 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!252 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!253 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!254 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!255 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!256 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!257 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!258 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!259 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!260 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!261 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!262 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!263 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!264 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!265 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!266 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!267 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!268 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!269 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!270 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!271 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!272 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!273 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!274 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!275 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!276 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!277 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!278 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!279 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!280 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!281 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!282 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!283 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!284 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!285 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!286 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!287 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!288 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!289 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!290 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!291 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!292 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!293 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!294 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!295 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!301 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!302 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!303 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!304 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!305 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!306 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!307 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!308 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!309 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!310 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!311 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!312 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!322 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!323 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!324 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!325 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!326 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!327 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!328 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!329 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!330 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!331 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!332 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!333 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!334 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!335 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !336, line: 31, baseType: !6, size: 32, elements: !337)
!336 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!337 = !{!338, !339, !340, !341, !342, !343}
!338 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!339 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!340 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!341 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!342 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!343 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!344 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !336, line: 91, baseType: !6, size: 32, elements: !345)
!345 = !{!346, !347}
!346 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!347 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !349, line: 363, baseType: !6, size: 32, elements: !350)
!349 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!350 = !{!351, !352, !353}
!351 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!352 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!353 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!354 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !349, line: 355, baseType: !6, size: 32, elements: !355)
!355 = !{!356, !357, !358}
!356 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!357 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!358 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!359 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !360, line: 474, baseType: !6, size: 32, elements: !361)
!360 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!361 = !{!362, !363}
!362 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!363 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!364 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !141, line: 280, baseType: !6, size: 32, elements: !365)
!365 = !{!366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381}
!366 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!377 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!378 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !141, line: 1817, baseType: !6, size: 32, elements: !383)
!383 = !{!384, !385, !386, !387, !388}
!384 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!385 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!386 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!387 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!388 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!389 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !141, line: 1805, baseType: !6, size: 32, elements: !390)
!390 = !{!391, !392, !393, !394, !395}
!391 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!392 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!393 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!394 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!395 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!396 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !397, line: 104, baseType: !6, size: 32, elements: !398)
!397 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!398 = !{!399, !400, !401, !402}
!399 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!400 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!401 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!402 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!403 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !404, line: 74, baseType: !6, size: 32, elements: !405)
!404 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!405 = !{!406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578}
!406 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!578 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!579 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !580, line: 119, baseType: !6, size: 32, elements: !581)
!580 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!581 = !{!582, !583, !584, !585}
!582 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!583 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!584 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!585 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!586 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "plf_mask", file: !587, line: 130, baseType: !6, size: 32, elements: !588)
!587 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!588 = !{!589, !590}
!589 = !DIEnumerator(name: "GF_PLF_1", value: 1, isUnsigned: true)
!590 = !DIEnumerator(name: "GF_PLF_2", value: 2, isUnsigned: true)
!591 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !587, line: 51, baseType: !6, size: 32, elements: !592)
!592 = !{!593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628}
!593 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!594 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!595 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!596 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!597 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!598 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!599 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!600 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!601 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!602 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!603 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!604 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!605 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!606 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!607 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!608 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!609 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!610 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!611 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!612 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!613 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!614 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!615 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!616 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!617 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!618 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!619 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!620 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!621 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!622 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!623 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!624 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!625 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!626 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!627 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!628 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!629 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !587, line: 727, baseType: !6, size: 32, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654}
!631 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!632 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!633 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!634 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!635 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!636 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!637 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!638 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!639 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!640 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!641 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!642 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!643 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!644 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!645 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!646 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!647 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!648 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!649 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!650 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!651 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!652 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!653 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!654 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!655 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !587, line: 80, baseType: !6, size: 32, elements: !656)
!656 = !{!657, !658, !659, !660}
!657 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!658 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!659 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!660 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!661 = !{!662, !663, !664, !665, !668, !669, !6, !671, !683, !754, !2099, !2111, !2124, !140, !2139, !1025, !765, !2144, !2125, !2145, !706, !2152, !2161, !2163, !1026, !2164, !1059, !666, !655, !2166, !2171, !887, !2078, !688, !2172, !1477, !2173, !2174}
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!664 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !667)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_bitmap_set_t_heap", file: !3, line: 378, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_bitmap_set_t_heap", file: !3, line: 378, size: 128, elements: !674)
!674 = !{!675}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !673, file: !3, line: 378, baseType: !676, size: 128)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_bitmap_set_t_base", file: !3, line: 377, baseType: !677)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_bitmap_set_t_base", file: !3, line: 377, size: 128, elements: !678)
!678 = !{!679, !680, !681}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !677, file: !3, line: 377, baseType: !6, size: 32)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !677, file: !3, line: 377, baseType: !6, size: 32, offset: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !677, file: !3, line: 377, baseType: !682, size: 64, offset: 64)
!682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 64, elements: !752)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_set_t", file: !3, line: 368, baseType: !684)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_set", file: !3, line: 364, size: 128, elements: !686)
!686 = !{!687, !751}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "expressions", scope: !685, file: !3, line: 366, baseType: !688, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !689, line: 47, baseType: !690)
!689 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !692, line: 75, size: 256, elements: !693)
!692 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!693 = !{!694, !709, !710, !711}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !691, file: !692, line: 76, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !692, line: 68, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !692, line: 63, size: 320, elements: !698)
!698 = !{!699, !701, !702, !703}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !697, file: !692, line: 64, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !697, file: !692, line: 65, baseType: !700, size: 64, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !697, file: !692, line: 66, baseType: !6, size: 32, offset: 128)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !697, file: !692, line: 67, baseType: !704, size: 128, offset: 192)
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !705, size: 128, elements: !707)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !692, line: 29, baseType: !706)
!706 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!707 = !{!708}
!708 = !DISubrange(count: 2)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !691, file: !692, line: 77, baseType: !695, size: 64, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !691, file: !692, line: 78, baseType: !6, size: 32, offset: 128)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !691, file: !692, line: 79, baseType: !712, size: 64, offset: 192)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !692, line: 49, baseType: !714)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !692, line: 45, size: 832, elements: !715)
!715 = !{!716, !717, !718}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !714, file: !692, line: 46, baseType: !700, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !714, file: !692, line: 47, baseType: !690, size: 64, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !714, file: !692, line: 48, baseType: !719, size: 704, offset: 128)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !720, line: 164, size: 704, elements: !721)
!720 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!721 = !{!722, !724, !734, !735, !736, !737, !738, !739, !743, !747, !748, !749, !750}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !719, file: !720, line: 166, baseType: !723, size: 64)
!723 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !719, file: !720, line: 167, baseType: !725, size: 64, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !720, line: 157, size: 192, elements: !727)
!727 = !{!728, !729, !730}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !726, file: !720, line: 159, baseType: !666, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !726, file: !720, line: 160, baseType: !725, size: 64, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !726, file: !720, line: 161, baseType: !731, size: 32, offset: 128)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 32, elements: !732)
!732 = !{!733}
!733 = !DISubrange(count: 4)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !719, file: !720, line: 168, baseType: !666, size: 64, offset: 128)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !719, file: !720, line: 169, baseType: !666, size: 64, offset: 192)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !719, file: !720, line: 170, baseType: !666, size: 64, offset: 256)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !719, file: !720, line: 171, baseType: !723, size: 64, offset: 320)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !719, file: !720, line: 172, baseType: !664, size: 32, offset: 384)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !719, file: !720, line: 176, baseType: !740, size: 64, offset: 448)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DISubroutineType(types: !742)
!742 = !{!725, !668, !723}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !719, file: !720, line: 177, baseType: !744, size: 64, offset: 512)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{null, !668, !725}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !719, file: !720, line: 178, baseType: !668, size: 64, offset: 576)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !719, file: !720, line: 179, baseType: !6, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !719, file: !720, line: 180, baseType: !6, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !719, file: !720, line: 184, baseType: !6, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !685, file: !3, line: 367, baseType: !688, size: 64, offset: 64)
!752 = !{!753}
!753 = !DISubrange(count: 1)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "pre_expr", file: !3, line: 178, baseType: !755)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pre_expr_d", file: !3, line: 173, size: 128, elements: !757)
!757 = !{!758, !759, !760}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !756, file: !3, line: 175, baseType: !5, size: 32)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !756, file: !3, line: 176, baseType: !6, size: 32, offset: 32)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !756, file: !3, line: 177, baseType: !761, size: 64, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "pre_expr_union", file: !3, line: 171, baseType: !762)
!762 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "pre_expr_union_d", file: !3, line: 165, size: 64, elements: !763)
!763 = !{!764, !2052, !2053, !2067}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !762, file: !3, line: 167, baseType: !765, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !689, line: 56, baseType: !766)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !141, line: 3371, size: 1792, elements: !768)
!768 = !{!769, !802, !808, !819, !838, !849, !854, !861, !867, !880, !892, !930, !1381, !1409, !1426, !1427, !1432, !1441, !1447, !1452, !1456, !1460, !1703, !1750, !1756, !1762, !1769, !1782, !1796, !1813, !1825, !1847, !1862, !2034}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !767, file: !141, line: 3372, baseType: !770, size: 64)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !141, line: 360, size: 64, elements: !771)
!771 = !{!772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !770, file: !141, line: 361, baseType: !6, size: 16, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !770, file: !141, line: 363, baseType: !6, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !770, file: !141, line: 364, baseType: !6, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !770, file: !141, line: 365, baseType: !6, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !770, file: !141, line: 366, baseType: !6, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !770, file: !141, line: 367, baseType: !6, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !770, file: !141, line: 368, baseType: !6, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !770, file: !141, line: 369, baseType: !6, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !770, file: !141, line: 370, baseType: !6, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !770, file: !141, line: 372, baseType: !6, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !770, file: !141, line: 373, baseType: !6, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !770, file: !141, line: 374, baseType: !6, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !770, file: !141, line: 375, baseType: !6, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !770, file: !141, line: 376, baseType: !6, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !770, file: !141, line: 377, baseType: !6, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !770, file: !141, line: 378, baseType: !6, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !770, file: !141, line: 379, baseType: !6, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !770, file: !141, line: 381, baseType: !6, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !770, file: !141, line: 382, baseType: !6, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !770, file: !141, line: 383, baseType: !6, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !770, file: !141, line: 384, baseType: !6, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !770, file: !141, line: 385, baseType: !6, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !770, file: !141, line: 386, baseType: !6, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !770, file: !141, line: 387, baseType: !6, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !770, file: !141, line: 388, baseType: !6, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !770, file: !141, line: 390, baseType: !6, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !770, file: !141, line: 391, baseType: !6, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !770, file: !141, line: 392, baseType: !6, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !770, file: !141, line: 394, baseType: !6, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !770, file: !141, line: 399, baseType: !6, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !767, file: !141, line: 3373, baseType: !803, size: 192)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !141, line: 402, size: 192, elements: !804)
!804 = !{!805, !806, !807}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !803, file: !141, line: 403, baseType: !770, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !803, file: !141, line: 404, baseType: !765, size: 64, offset: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !803, file: !141, line: 405, baseType: !765, size: 64, offset: 128)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !767, file: !141, line: 3374, baseType: !809, size: 320)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !141, line: 1384, size: 320, elements: !810)
!810 = !{!811, !812}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !809, file: !141, line: 1385, baseType: !803, size: 192)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !809, file: !141, line: 1386, baseType: !813, size: 128, offset: 192)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !814, line: 58, baseType: !815)
!814 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !814, line: 54, size: 128, elements: !816)
!816 = !{!817, !818}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !815, file: !814, line: 56, baseType: !706, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !815, file: !814, line: 57, baseType: !723, size: 64, offset: 64)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !767, file: !141, line: 3375, baseType: !820, size: 256)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !141, line: 1397, size: 256, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !820, file: !141, line: 1398, baseType: !803, size: 192)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !820, file: !141, line: 1399, baseType: !824, size: 64, offset: 192)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !826, line: 52, size: 256, elements: !827)
!826 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!827 = !{!828, !829, !830, !831, !832, !833, !834}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !825, file: !826, line: 56, baseType: !6, size: 2, flags: DIFlagBitField, extraData: i64 0)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !825, file: !826, line: 57, baseType: !6, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !825, file: !826, line: 58, baseType: !6, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !825, file: !826, line: 59, baseType: !6, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !825, file: !826, line: 60, baseType: !6, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !825, file: !826, line: 61, baseType: !6, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !825, file: !826, line: 62, baseType: !835, size: 192, offset: 64)
!835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 192, elements: !836)
!836 = !{!837}
!837 = !DISubrange(count: 3)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !767, file: !141, line: 3376, baseType: !839, size: 256)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !141, line: 1408, size: 256, elements: !840)
!840 = !{!841, !842}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !839, file: !141, line: 1409, baseType: !803, size: 192)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !839, file: !141, line: 1410, baseType: !843, size: 64, offset: 192)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !845, line: 27, size: 192, elements: !846)
!845 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!846 = !{!847, !848}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !844, file: !845, line: 29, baseType: !813, size: 128)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !844, file: !845, line: 30, baseType: !12, size: 32, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !767, file: !141, line: 3377, baseType: !850, size: 256)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !141, line: 1437, size: 256, elements: !851)
!851 = !{!852, !853}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !850, file: !141, line: 1438, baseType: !803, size: 192)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !850, file: !141, line: 1439, baseType: !765, size: 64, offset: 192)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !767, file: !141, line: 3378, baseType: !855, size: 256)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !141, line: 1418, size: 256, elements: !856)
!856 = !{!857, !858, !859}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !855, file: !141, line: 1419, baseType: !803, size: 192)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !855, file: !141, line: 1420, baseType: !664, size: 32, offset: 192)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !855, file: !141, line: 1421, baseType: !860, size: 8, offset: 224)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 8, elements: !752)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !767, file: !141, line: 3379, baseType: !862, size: 320)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !141, line: 1428, size: 320, elements: !863)
!863 = !{!864, !865, !866}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !862, file: !141, line: 1429, baseType: !803, size: 192)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !862, file: !141, line: 1430, baseType: !765, size: 64, offset: 192)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !862, file: !141, line: 1431, baseType: !765, size: 64, offset: 256)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !767, file: !141, line: 3380, baseType: !868, size: 320)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !141, line: 1460, size: 320, elements: !869)
!869 = !{!870, !871}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !868, file: !141, line: 1461, baseType: !803, size: 192)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !868, file: !141, line: 1462, baseType: !872, size: 128, offset: 192)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !873, line: 31, size: 128, elements: !874)
!873 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!874 = !{!875, !878, !879}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !872, file: !873, line: 32, baseType: !876, size: 64)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !663)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !872, file: !873, line: 33, baseType: !6, size: 32, offset: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !872, file: !873, line: 34, baseType: !6, size: 32, offset: 96)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !767, file: !141, line: 3381, baseType: !881, size: 384)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !141, line: 2507, size: 384, elements: !882)
!882 = !{!883, !884, !889, !890, !891}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !881, file: !141, line: 2508, baseType: !803, size: 192)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !881, file: !141, line: 2509, baseType: !885, size: 32, offset: 192)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !886, line: 58, baseType: !887)
!886 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !888, line: 44, baseType: !6)
!888 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!889 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !881, file: !141, line: 2510, baseType: !6, size: 32, offset: 224)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !881, file: !141, line: 2511, baseType: !765, size: 64, offset: 256)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !881, file: !141, line: 2512, baseType: !765, size: 64, offset: 320)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !767, file: !141, line: 3382, baseType: !893, size: 896)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !141, line: 2652, size: 896, elements: !894)
!894 = !{!895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !893, file: !141, line: 2653, baseType: !881, size: 384)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !893, file: !141, line: 2654, baseType: !765, size: 64, offset: 384)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !893, file: !141, line: 2656, baseType: !6, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !893, file: !141, line: 2658, baseType: !6, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !893, file: !141, line: 2659, baseType: !6, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !893, file: !141, line: 2660, baseType: !6, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !893, file: !141, line: 2661, baseType: !6, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !893, file: !141, line: 2662, baseType: !6, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !893, file: !141, line: 2663, baseType: !6, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !893, file: !141, line: 2664, baseType: !6, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !893, file: !141, line: 2666, baseType: !6, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !893, file: !141, line: 2667, baseType: !6, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !893, file: !141, line: 2668, baseType: !6, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !893, file: !141, line: 2669, baseType: !6, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !893, file: !141, line: 2670, baseType: !6, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !893, file: !141, line: 2671, baseType: !6, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !893, file: !141, line: 2672, baseType: !6, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !893, file: !141, line: 2673, baseType: !6, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !893, file: !141, line: 2674, baseType: !6, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !893, file: !141, line: 2678, baseType: !6, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !893, file: !141, line: 2682, baseType: !6, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !893, file: !141, line: 2685, baseType: !6, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !893, file: !141, line: 2688, baseType: !6, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !893, file: !141, line: 2690, baseType: !6, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !893, file: !141, line: 2692, baseType: !6, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !893, file: !141, line: 2695, baseType: !6, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !893, file: !141, line: 2698, baseType: !6, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !893, file: !141, line: 2703, baseType: !6, size: 32, offset: 512)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !893, file: !141, line: 2705, baseType: !765, size: 64, offset: 576)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !893, file: !141, line: 2706, baseType: !765, size: 64, offset: 640)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !893, file: !141, line: 2707, baseType: !765, size: 64, offset: 704)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !893, file: !141, line: 2708, baseType: !765, size: 64, offset: 768)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !893, file: !141, line: 2711, baseType: !928, size: 64, offset: 832)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !141, line: 2711, flags: DIFlagFwdDecl)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !767, file: !141, line: 3383, baseType: !931, size: 960)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !141, line: 2756, size: 960, elements: !932)
!932 = !{!933, !934}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !931, file: !141, line: 2757, baseType: !893, size: 896)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !931, file: !141, line: 2758, baseType: !935, size: 64, offset: 896)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !689, line: 50, baseType: !936)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !938, line: 240, size: 384, elements: !939)
!938 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!939 = !{!940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !937, file: !938, line: 242, baseType: !6, size: 16, flags: DIFlagBitField, extraData: i64 0)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !937, file: !938, line: 245, baseType: !6, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !937, file: !938, line: 252, baseType: !6, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !937, file: !938, line: 257, baseType: !6, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !937, file: !938, line: 265, baseType: !6, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !937, file: !938, line: 277, baseType: !6, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !937, file: !938, line: 291, baseType: !6, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !937, file: !938, line: 298, baseType: !6, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !937, file: !938, line: 305, baseType: !6, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !937, file: !938, line: 310, baseType: !6, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !937, file: !938, line: 321, baseType: !951, size: 320, offset: 64)
!951 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !938, line: 315, size: 320, elements: !952)
!952 = !{!953, !1348, !1350, !1379, !1380}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !951, file: !938, line: 316, baseType: !954, size: 64)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !955, size: 64, elements: !752)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !938, line: 183, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !938, line: 166, size: 64, elements: !957)
!957 = !{!958, !959, !960, !961, !962, !970, !971, !983, !986, !987, !988, !1325, !1338, !1345}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !956, file: !938, line: 168, baseType: !664, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !956, file: !938, line: 169, baseType: !6, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !956, file: !938, line: 170, baseType: !669, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !956, file: !938, line: 171, baseType: !935, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !956, file: !938, line: 172, baseType: !963, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !689, line: 53, baseType: !964)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !938, line: 359, size: 128, elements: !966)
!966 = !{!967, !968}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !965, file: !938, line: 360, baseType: !664, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !965, file: !938, line: 361, baseType: !969, size: 64, offset: 64)
!969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !935, size: 64, elements: !752)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !956, file: !938, line: 173, baseType: !12, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !956, file: !938, line: 174, baseType: !972, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !938, line: 133, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !938, line: 115, size: 32, elements: !974)
!974 = !{!975, !976, !977, !978, !979, !980, !981, !982}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !973, file: !938, line: 118, baseType: !6, size: 8, flags: DIFlagBitField, extraData: i64 0)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !973, file: !938, line: 120, baseType: !6, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !973, file: !938, line: 121, baseType: !6, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !973, file: !938, line: 123, baseType: !6, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !973, file: !938, line: 125, baseType: !6, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !973, file: !938, line: 127, baseType: !6, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !973, file: !938, line: 130, baseType: !6, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !973, file: !938, line: 132, baseType: !6, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !956, file: !938, line: 175, baseType: !984, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !938, line: 175, flags: DIFlagFwdDecl)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !956, file: !938, line: 176, baseType: !690, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !956, file: !938, line: 177, baseType: !765, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !956, file: !938, line: 178, baseType: !989, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !349, line: 217, size: 832, elements: !991)
!991 = !{!992, !1237, !1238, !1239, !1295, !1299, !1300, !1301, !1319, !1320, !1321, !1322, !1323, !1324}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !990, file: !349, line: 219, baseType: !993, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !349, line: 151, baseType: !995)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !349, line: 151, size: 128, elements: !996)
!996 = !{!997}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !995, file: !349, line: 151, baseType: !998, size: 128)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !349, line: 150, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !349, line: 150, size: 128, elements: !1000)
!1000 = !{!1001, !1002, !1003}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !999, file: !349, line: 150, baseType: !6, size: 32)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !999, file: !349, line: 150, baseType: !6, size: 32, offset: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !999, file: !349, line: 150, baseType: !1004, size: 64, offset: 64)
!1004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1005, size: 64, elements: !752)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !689, line: 108, baseType: !1006)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !349, line: 122, size: 512, elements: !1008)
!1008 = !{!1009, !1010, !1011, !1229, !1230, !1231, !1232, !1233, !1234, !1235}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1007, file: !349, line: 124, baseType: !989, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1007, file: !349, line: 125, baseType: !989, size: 64, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1007, file: !349, line: 131, baseType: !1012, size: 64, offset: 128)
!1012 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !349, line: 128, size: 64, elements: !1013)
!1013 = !{!1014, !1228}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1012, file: !349, line: 129, baseType: !1015, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !689, line: 66, baseType: !1016)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !587, line: 143, size: 192, elements: !1018)
!1018 = !{!1019, !1226, !1227}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1017, file: !587, line: 145, baseType: !1020, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !689, line: 69, baseType: !1021)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !587, line: 136, size: 192, elements: !1023)
!1023 = !{!1024, !1224, !1225}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1022, file: !587, line: 137, baseType: !1025, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !689, line: 58, baseType: !1026)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !587, line: 737, size: 768, elements: !1028)
!1028 = !{!1029, !1046, !1079, !1085, !1090, !1095, !1102, !1108, !1114, !1119, !1133, !1138, !1144, !1149, !1159, !1164, !1182, !1189, !1196, !1202, !1207, !1213, !1219}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1027, file: !587, line: 738, baseType: !1030, size: 256)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !587, line: 271, size: 256, elements: !1031)
!1031 = !{!1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1030, file: !587, line: 274, baseType: !6, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1030, file: !587, line: 277, baseType: !6, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1030, file: !587, line: 281, baseType: !6, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1030, file: !587, line: 284, baseType: !6, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1030, file: !587, line: 291, baseType: !6, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1030, file: !587, line: 295, baseType: !6, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1030, file: !587, line: 298, baseType: !6, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1030, file: !587, line: 301, baseType: !6, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1030, file: !587, line: 307, baseType: !6, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1030, file: !587, line: 312, baseType: !6, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1030, file: !587, line: 316, baseType: !885, size: 32, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1030, file: !587, line: 319, baseType: !6, size: 32, offset: 96)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1030, file: !587, line: 323, baseType: !989, size: 64, offset: 128)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1030, file: !587, line: 327, baseType: !765, size: 64, offset: 192)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1027, file: !587, line: 739, baseType: !1047, size: 448)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !587, line: 350, size: 448, elements: !1048)
!1048 = !{!1049, !1077}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1047, file: !587, line: 353, baseType: !1050, size: 384)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !587, line: 333, size: 384, elements: !1051)
!1051 = !{!1052, !1053, !1060}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1050, file: !587, line: 336, baseType: !1030, size: 256)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1050, file: !587, line: 343, baseType: !1054, size: 64, offset: 256)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !580, line: 37, size: 128, elements: !1056)
!1056 = !{!1057, !1058}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1055, file: !580, line: 39, baseType: !1054, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1055, file: !580, line: 40, baseType: !1059, size: 64, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1050, file: !587, line: 344, baseType: !1061, size: 64, offset: 320)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !580, line: 45, size: 320, elements: !1063)
!1063 = !{!1064, !1065}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1062, file: !580, line: 47, baseType: !1061, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1062, file: !580, line: 48, baseType: !1066, size: 256, offset: 64)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !141, line: 1883, size: 256, elements: !1067)
!1067 = !{!1068, !1070, !1071, !1076}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1066, file: !141, line: 1884, baseType: !1069, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1066, file: !141, line: 1885, baseType: !1069, size: 64, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1066, file: !141, line: 1891, baseType: !1072, size: 64, offset: 128)
!1072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1066, file: !141, line: 1891, size: 64, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1072, file: !141, line: 1891, baseType: !1025, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1072, file: !141, line: 1891, baseType: !765, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1066, file: !141, line: 1892, baseType: !1059, size: 64, offset: 192)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1047, file: !587, line: 359, baseType: !1078, size: 64, offset: 384)
!1078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !765, size: 64, elements: !752)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1027, file: !587, line: 740, baseType: !1080, size: 512)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !587, line: 365, size: 512, elements: !1081)
!1081 = !{!1082, !1083, !1084}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1080, file: !587, line: 368, baseType: !1050, size: 384)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1080, file: !587, line: 373, baseType: !765, size: 64, offset: 384)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1080, file: !587, line: 374, baseType: !765, size: 64, offset: 448)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1027, file: !587, line: 741, baseType: !1086, size: 576)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !587, line: 380, size: 576, elements: !1087)
!1087 = !{!1088, !1089}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1086, file: !587, line: 383, baseType: !1080, size: 512)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1086, file: !587, line: 389, baseType: !1078, size: 64, offset: 512)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1027, file: !587, line: 742, baseType: !1091, size: 320)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !587, line: 395, size: 320, elements: !1092)
!1092 = !{!1093, !1094}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1091, file: !587, line: 397, baseType: !1030, size: 256)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1091, file: !587, line: 400, baseType: !1015, size: 64, offset: 256)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1027, file: !587, line: 743, baseType: !1096, size: 448)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !587, line: 406, size: 448, elements: !1097)
!1097 = !{!1098, !1099, !1100, !1101}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1096, file: !587, line: 408, baseType: !1030, size: 256)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1096, file: !587, line: 412, baseType: !765, size: 64, offset: 256)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1096, file: !587, line: 420, baseType: !765, size: 64, offset: 320)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1096, file: !587, line: 423, baseType: !1015, size: 64, offset: 384)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1027, file: !587, line: 744, baseType: !1103, size: 384)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !587, line: 429, size: 384, elements: !1104)
!1104 = !{!1105, !1106, !1107}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1103, file: !587, line: 431, baseType: !1030, size: 256)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1103, file: !587, line: 434, baseType: !765, size: 64, offset: 256)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1103, file: !587, line: 437, baseType: !1015, size: 64, offset: 320)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1027, file: !587, line: 745, baseType: !1109, size: 384)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !587, line: 443, size: 384, elements: !1110)
!1110 = !{!1111, !1112, !1113}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1109, file: !587, line: 445, baseType: !1030, size: 256)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1109, file: !587, line: 449, baseType: !765, size: 64, offset: 256)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1109, file: !587, line: 453, baseType: !1015, size: 64, offset: 320)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1027, file: !587, line: 746, baseType: !1115, size: 320)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !587, line: 459, size: 320, elements: !1116)
!1116 = !{!1117, !1118}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1115, file: !587, line: 461, baseType: !1030, size: 256)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1115, file: !587, line: 464, baseType: !765, size: 64, offset: 256)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1027, file: !587, line: 747, baseType: !1120, size: 768)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !587, line: 469, size: 768, elements: !1121)
!1121 = !{!1122, !1123, !1124, !1125, !1126}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1120, file: !587, line: 471, baseType: !1030, size: 256)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1120, file: !587, line: 474, baseType: !6, size: 32, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1120, file: !587, line: 475, baseType: !6, size: 32, offset: 288)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1120, file: !587, line: 478, baseType: !765, size: 64, offset: 320)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1120, file: !587, line: 481, baseType: !1127, size: 384, offset: 384)
!1127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1128, size: 384, elements: !752)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !141, line: 1917, size: 384, elements: !1129)
!1129 = !{!1130, !1131, !1132}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1128, file: !141, line: 1920, baseType: !1066, size: 256)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1128, file: !141, line: 1921, baseType: !765, size: 64, offset: 256)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1128, file: !141, line: 1922, baseType: !885, size: 32, offset: 320)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1027, file: !587, line: 748, baseType: !1134, size: 320)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !587, line: 487, size: 320, elements: !1135)
!1135 = !{!1136, !1137}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1134, file: !587, line: 490, baseType: !1030, size: 256)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1134, file: !587, line: 494, baseType: !664, size: 32, offset: 256)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1027, file: !587, line: 749, baseType: !1139, size: 384)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !587, line: 500, size: 384, elements: !1140)
!1140 = !{!1141, !1142, !1143}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1139, file: !587, line: 502, baseType: !1030, size: 256)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1139, file: !587, line: 506, baseType: !1015, size: 64, offset: 256)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1139, file: !587, line: 510, baseType: !1015, size: 64, offset: 320)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1027, file: !587, line: 750, baseType: !1145, size: 320)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !587, line: 529, size: 320, elements: !1146)
!1146 = !{!1147, !1148}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1145, file: !587, line: 531, baseType: !1030, size: 256)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1145, file: !587, line: 540, baseType: !1015, size: 64, offset: 256)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1027, file: !587, line: 751, baseType: !1150, size: 704)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !587, line: 546, size: 704, elements: !1151)
!1151 = !{!1152, !1153, !1154, !1155, !1156, !1157, !1158}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1150, file: !587, line: 549, baseType: !1080, size: 512)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1150, file: !587, line: 553, baseType: !669, size: 64, offset: 512)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1150, file: !587, line: 557, baseType: !663, size: 8, offset: 576)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1150, file: !587, line: 558, baseType: !663, size: 8, offset: 584)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1150, file: !587, line: 559, baseType: !663, size: 8, offset: 592)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1150, file: !587, line: 560, baseType: !663, size: 8, offset: 600)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1150, file: !587, line: 566, baseType: !1078, size: 64, offset: 640)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1027, file: !587, line: 752, baseType: !1160, size: 384)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !587, line: 571, size: 384, elements: !1161)
!1161 = !{!1162, !1163}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1160, file: !587, line: 573, baseType: !1091, size: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1160, file: !587, line: 577, baseType: !765, size: 64, offset: 320)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1027, file: !587, line: 753, baseType: !1165, size: 576)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !587, line: 600, size: 576, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1172, !1181}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1165, file: !587, line: 602, baseType: !1091, size: 320)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1165, file: !587, line: 605, baseType: !765, size: 64, offset: 320)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1165, file: !587, line: 609, baseType: !1170, size: 64, offset: 384)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1171, line: 46, baseType: !706)
!1171 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1165, file: !587, line: 612, baseType: !1173, size: 64, offset: 448)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !587, line: 581, size: 320, elements: !1175)
!1175 = !{!1176, !1177, !1178, !1179, !1180}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1174, file: !587, line: 583, baseType: !140, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1174, file: !587, line: 586, baseType: !765, size: 64, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1174, file: !587, line: 589, baseType: !765, size: 64, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1174, file: !587, line: 592, baseType: !765, size: 64, offset: 192)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1174, file: !587, line: 595, baseType: !765, size: 64, offset: 256)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1165, file: !587, line: 616, baseType: !1015, size: 64, offset: 512)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1027, file: !587, line: 754, baseType: !1183, size: 512)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !587, line: 622, size: 512, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1183, file: !587, line: 624, baseType: !1091, size: 320)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1183, file: !587, line: 628, baseType: !765, size: 64, offset: 320)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1183, file: !587, line: 632, baseType: !765, size: 64, offset: 384)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1183, file: !587, line: 636, baseType: !765, size: 64, offset: 448)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1027, file: !587, line: 755, baseType: !1190, size: 704)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !587, line: 642, size: 704, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1190, file: !587, line: 644, baseType: !1183, size: 512)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1190, file: !587, line: 648, baseType: !765, size: 64, offset: 512)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1190, file: !587, line: 652, baseType: !765, size: 64, offset: 576)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1190, file: !587, line: 653, baseType: !765, size: 64, offset: 640)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1027, file: !587, line: 756, baseType: !1197, size: 448)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !587, line: 663, size: 448, elements: !1198)
!1198 = !{!1199, !1200, !1201}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1197, file: !587, line: 665, baseType: !1091, size: 320)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1197, file: !587, line: 668, baseType: !765, size: 64, offset: 320)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1197, file: !587, line: 673, baseType: !765, size: 64, offset: 384)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1027, file: !587, line: 757, baseType: !1203, size: 384)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !587, line: 694, size: 384, elements: !1204)
!1204 = !{!1205, !1206}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1203, file: !587, line: 696, baseType: !1091, size: 320)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1203, file: !587, line: 699, baseType: !765, size: 64, offset: 320)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1027, file: !587, line: 758, baseType: !1208, size: 384)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !587, line: 681, size: 384, elements: !1209)
!1209 = !{!1210, !1211, !1212}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1208, file: !587, line: 683, baseType: !1030, size: 256)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1208, file: !587, line: 686, baseType: !765, size: 64, offset: 256)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1208, file: !587, line: 689, baseType: !765, size: 64, offset: 320)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1027, file: !587, line: 759, baseType: !1214, size: 384)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !587, line: 707, size: 384, elements: !1215)
!1215 = !{!1216, !1217, !1218}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1214, file: !587, line: 709, baseType: !1030, size: 256)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1214, file: !587, line: 712, baseType: !765, size: 64, offset: 256)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1214, file: !587, line: 712, baseType: !765, size: 64, offset: 320)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1027, file: !587, line: 760, baseType: !1220, size: 320)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !587, line: 718, size: 320, elements: !1221)
!1221 = !{!1222, !1223}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1220, file: !587, line: 720, baseType: !1030, size: 256)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1220, file: !587, line: 723, baseType: !765, size: 64, offset: 256)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1022, file: !587, line: 138, baseType: !1021, size: 64, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1022, file: !587, line: 139, baseType: !1021, size: 64, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1017, file: !587, line: 146, baseType: !1020, size: 64, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1017, file: !587, line: 152, baseType: !1015, size: 64, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1012, file: !349, line: 130, baseType: !935, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1007, file: !349, line: 134, baseType: !668, size: 64, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1007, file: !349, line: 137, baseType: !765, size: 64, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1007, file: !349, line: 138, baseType: !885, size: 32, offset: 320)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1007, file: !349, line: 142, baseType: !6, size: 32, offset: 352)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1007, file: !349, line: 144, baseType: !664, size: 32, offset: 384)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1007, file: !349, line: 145, baseType: !664, size: 32, offset: 416)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1007, file: !349, line: 146, baseType: !1236, size: 64, offset: 448)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !349, line: 119, baseType: !723)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !990, file: !349, line: 220, baseType: !993, size: 64, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !990, file: !349, line: 223, baseType: !668, size: 64, offset: 128)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !990, file: !349, line: 226, baseType: !1240, size: 64, offset: 192)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !336, line: 100, size: 1216, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247, !1252, !1253, !1254, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1285, !1293, !1294}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1241, file: !336, line: 102, baseType: !664, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1241, file: !336, line: 105, baseType: !6, size: 32, offset: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1241, file: !336, line: 108, baseType: !989, size: 64, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1241, file: !336, line: 111, baseType: !989, size: 64, offset: 128)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1241, file: !336, line: 114, baseType: !1248, size: 64, offset: 192)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !336, line: 41, size: 64, elements: !1249)
!1249 = !{!1250, !1251}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1248, file: !336, line: 42, baseType: !335, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1248, file: !336, line: 43, baseType: !6, size: 32, offset: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1241, file: !336, line: 117, baseType: !6, size: 32, offset: 256)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1241, file: !336, line: 120, baseType: !6, size: 32, offset: 288)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1241, file: !336, line: 123, baseType: !1255, size: 64, offset: 320)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !336, line: 87, baseType: !1257)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !336, line: 87, size: 128, elements: !1258)
!1258 = !{!1259}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1257, file: !336, line: 87, baseType: !1260, size: 128)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !336, line: 85, baseType: !1261)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !336, line: 85, size: 128, elements: !1262)
!1262 = !{!1263, !1264, !1265}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1261, file: !336, line: 85, baseType: !6, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1261, file: !336, line: 85, baseType: !6, size: 32, offset: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1261, file: !336, line: 85, baseType: !1266, size: 64, offset: 64)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1267, size: 64, elements: !752)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !336, line: 84, baseType: !1240)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1241, file: !336, line: 126, baseType: !1240, size: 64, offset: 384)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1241, file: !336, line: 129, baseType: !1240, size: 64, offset: 448)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1241, file: !336, line: 132, baseType: !668, size: 64, offset: 512)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1241, file: !336, line: 139, baseType: !765, size: 64, offset: 576)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1241, file: !336, line: 143, baseType: !813, size: 128, offset: 640)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1241, file: !336, line: 146, baseType: !813, size: 128, offset: 768)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1241, file: !336, line: 148, baseType: !663, size: 8, offset: 896)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1241, file: !336, line: 149, baseType: !663, size: 8, offset: 904)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1241, file: !336, line: 153, baseType: !344, size: 32, offset: 928)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1241, file: !336, line: 156, baseType: !1278, size: 64, offset: 960)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !336, line: 48, size: 320, elements: !1280)
!1280 = !{!1281, !1282, !1283, !1284}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1279, file: !336, line: 50, baseType: !1025, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1279, file: !336, line: 59, baseType: !813, size: 128, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1279, file: !336, line: 64, baseType: !663, size: 8, offset: 192)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1279, file: !336, line: 67, baseType: !1278, size: 64, offset: 256)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1241, file: !336, line: 159, baseType: !1286, size: 64, offset: 1024)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !336, line: 72, size: 256, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1292}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1287, file: !336, line: 74, baseType: !1006, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1287, file: !336, line: 77, baseType: !1286, size: 64, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1287, file: !336, line: 78, baseType: !1286, size: 64, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1287, file: !336, line: 81, baseType: !1286, size: 64, offset: 192)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1241, file: !336, line: 162, baseType: !663, size: 8, offset: 1088)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1241, file: !336, line: 166, baseType: !765, size: 64, offset: 1152)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !990, file: !349, line: 229, baseType: !1296, size: 128, offset: 256)
!1296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1297, size: 128, elements: !707)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !349, line: 229, flags: DIFlagFwdDecl)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !990, file: !349, line: 232, baseType: !989, size: 64, offset: 384)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !990, file: !349, line: 233, baseType: !989, size: 64, offset: 448)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !990, file: !349, line: 238, baseType: !1302, size: 64, offset: 512)
!1302 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !349, line: 235, size: 64, elements: !1303)
!1303 = !{!1304, !1310}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1302, file: !349, line: 236, baseType: !1305, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !349, line: 273, size: 128, elements: !1307)
!1307 = !{!1308, !1309}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1306, file: !349, line: 275, baseType: !1015, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1306, file: !349, line: 278, baseType: !1015, size: 64, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1302, file: !349, line: 237, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !349, line: 259, size: 320, elements: !1313)
!1313 = !{!1314, !1315, !1316, !1317, !1318}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1312, file: !349, line: 261, baseType: !935, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1312, file: !349, line: 262, baseType: !935, size: 64, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1312, file: !349, line: 266, baseType: !935, size: 64, offset: 128)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1312, file: !349, line: 267, baseType: !935, size: 64, offset: 192)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1312, file: !349, line: 270, baseType: !664, size: 32, offset: 256)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !990, file: !349, line: 241, baseType: !1236, size: 64, offset: 576)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !990, file: !349, line: 244, baseType: !664, size: 32, offset: 640)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !990, file: !349, line: 247, baseType: !664, size: 32, offset: 672)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !990, file: !349, line: 250, baseType: !664, size: 32, offset: 704)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !990, file: !349, line: 253, baseType: !664, size: 32, offset: 736)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !990, file: !349, line: 256, baseType: !664, size: 32, offset: 768)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !956, file: !938, line: 179, baseType: !1326, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !938, line: 150, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !938, line: 142, size: 320, elements: !1329)
!1329 = !{!1330, !1331, !1332, !1333, !1336, !1337}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1328, file: !938, line: 144, baseType: !765, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1328, file: !938, line: 145, baseType: !935, size: 64, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1328, file: !938, line: 146, baseType: !935, size: 64, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1328, file: !938, line: 147, baseType: !1334, size: 32, offset: 192)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1335, line: 31, baseType: !664)
!1335 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1328, file: !938, line: 148, baseType: !6, size: 32, offset: 224)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1328, file: !938, line: 149, baseType: !663, size: 8, offset: 256)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !956, file: !938, line: 180, baseType: !1339, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !938, line: 162, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !938, line: 159, size: 128, elements: !1342)
!1342 = !{!1343, !1344}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1341, file: !938, line: 160, baseType: !765, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1341, file: !938, line: 161, baseType: !723, size: 64, offset: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !956, file: !938, line: 181, baseType: !1346, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !938, line: 181, flags: DIFlagFwdDecl)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !951, file: !938, line: 317, baseType: !1349, size: 64)
!1349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !723, size: 64, elements: !752)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !951, file: !938, line: 318, baseType: !1351, size: 320)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !938, line: 188, size: 320, elements: !1352)
!1352 = !{!1353, !1355, !1378}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1351, file: !938, line: 190, baseType: !1354, size: 192)
!1354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !955, size: 192, elements: !836)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1351, file: !938, line: 193, baseType: !1356, size: 64, offset: 192)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !938, line: 206, size: 320, elements: !1358)
!1358 = !{!1359, !1363, !1364, !1365, !1377}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1357, file: !938, line: 208, baseType: !1360, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !689, line: 62, baseType: !1362)
!1362 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !689, line: 61, flags: DIFlagFwdDecl)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1357, file: !938, line: 211, baseType: !6, size: 32, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1357, file: !938, line: 214, baseType: !723, size: 64, offset: 128)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1357, file: !938, line: 224, baseType: !1366, size: 64, offset: 192)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !938, line: 202, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !938, line: 202, size: 128, elements: !1369)
!1369 = !{!1370}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1368, file: !938, line: 202, baseType: !1371, size: 128)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !938, line: 200, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !938, line: 200, size: 128, elements: !1373)
!1373 = !{!1374, !1375, !1376}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1372, file: !938, line: 200, baseType: !6, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1372, file: !938, line: 200, baseType: !6, size: 32, offset: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1372, file: !938, line: 200, baseType: !969, size: 64, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1357, file: !938, line: 234, baseType: !1366, size: 64, offset: 256)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1351, file: !938, line: 197, baseType: !723, size: 64, offset: 256)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !951, file: !938, line: 319, baseType: !825, size: 256)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !951, file: !938, line: 320, baseType: !844, size: 192)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !767, file: !141, line: 3384, baseType: !1382, size: 1472)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !141, line: 3114, size: 1472, elements: !1383)
!1383 = !{!1384, !1405, !1406, !1407, !1408}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1382, file: !141, line: 3115, baseType: !1385, size: 1216)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !141, line: 2984, size: 1216, elements: !1386)
!1386 = !{!1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1385, file: !141, line: 2985, baseType: !931, size: 960)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1385, file: !141, line: 2986, baseType: !765, size: 64, offset: 960)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1385, file: !141, line: 2987, baseType: !765, size: 64, offset: 1024)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1385, file: !141, line: 2988, baseType: !765, size: 64, offset: 1088)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1385, file: !141, line: 2991, baseType: !6, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1385, file: !141, line: 2992, baseType: !6, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1385, file: !141, line: 2993, baseType: !6, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1385, file: !141, line: 2994, baseType: !6, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1385, file: !141, line: 2995, baseType: !6, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1385, file: !141, line: 2996, baseType: !6, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1385, file: !141, line: 2998, baseType: !6, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1385, file: !141, line: 3000, baseType: !6, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1385, file: !141, line: 3002, baseType: !6, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1385, file: !141, line: 3003, baseType: !6, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1385, file: !141, line: 3004, baseType: !6, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1385, file: !141, line: 3005, baseType: !6, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1385, file: !141, line: 3007, baseType: !6, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1385, file: !141, line: 3010, baseType: !6, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1382, file: !141, line: 3117, baseType: !765, size: 64, offset: 1216)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1382, file: !141, line: 3119, baseType: !765, size: 64, offset: 1280)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1382, file: !141, line: 3121, baseType: !765, size: 64, offset: 1344)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1382, file: !141, line: 3123, baseType: !765, size: 64, offset: 1408)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !767, file: !141, line: 3385, baseType: !1410, size: 1088)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !141, line: 2874, size: 1088, elements: !1411)
!1411 = !{!1412, !1413, !1414}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1410, file: !141, line: 2875, baseType: !931, size: 960)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1410, file: !141, line: 2876, baseType: !935, size: 64, offset: 960)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1410, file: !141, line: 2877, baseType: !1415, size: 64, offset: 1024)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1417, line: 172, size: 128, elements: !1418)
!1417 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1418 = !{!1419, !1420, !1421, !1422, !1423, !1424, !1425}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1416, file: !1417, line: 174, baseType: !6, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1416, file: !1417, line: 178, baseType: !6, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1416, file: !1417, line: 183, baseType: !6, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1416, file: !1417, line: 187, baseType: !6, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1416, file: !1417, line: 192, baseType: !6, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1416, file: !1417, line: 195, baseType: !6, size: 32, offset: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1416, file: !1417, line: 199, baseType: !765, size: 64, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !767, file: !141, line: 3386, baseType: !1385, size: 1216)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !767, file: !141, line: 3387, baseType: !1428, size: 1280)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !141, line: 3093, size: 1280, elements: !1429)
!1429 = !{!1430, !1431}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1428, file: !141, line: 3094, baseType: !1385, size: 1216)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1428, file: !141, line: 3095, baseType: !1415, size: 64, offset: 1216)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !767, file: !141, line: 3388, baseType: !1433, size: 1216)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !141, line: 2824, size: 1216, elements: !1434)
!1434 = !{!1435, !1436, !1437, !1438, !1439, !1440}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1433, file: !141, line: 2825, baseType: !893, size: 896)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1433, file: !141, line: 2827, baseType: !765, size: 64, offset: 896)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1433, file: !141, line: 2828, baseType: !765, size: 64, offset: 960)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1433, file: !141, line: 2829, baseType: !765, size: 64, offset: 1024)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1433, file: !141, line: 2830, baseType: !765, size: 64, offset: 1088)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1433, file: !141, line: 2831, baseType: !765, size: 64, offset: 1152)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !767, file: !141, line: 3389, baseType: !1442, size: 1024)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !141, line: 2850, size: 1024, elements: !1443)
!1443 = !{!1444, !1445, !1446}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1442, file: !141, line: 2851, baseType: !931, size: 960)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1442, file: !141, line: 2852, baseType: !664, size: 32, offset: 960)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1442, file: !141, line: 2853, baseType: !664, size: 32, offset: 992)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !767, file: !141, line: 3390, baseType: !1448, size: 1024)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !141, line: 2857, size: 1024, elements: !1449)
!1449 = !{!1450, !1451}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1448, file: !141, line: 2858, baseType: !931, size: 960)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1448, file: !141, line: 2859, baseType: !1415, size: 64, offset: 960)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !767, file: !141, line: 3391, baseType: !1453, size: 960)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !141, line: 2862, size: 960, elements: !1454)
!1454 = !{!1455}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1453, file: !141, line: 2863, baseType: !931, size: 960)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !767, file: !141, line: 3392, baseType: !1457, size: 1472)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !141, line: 3304, size: 1472, elements: !1458)
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1457, file: !141, line: 3305, baseType: !1382, size: 1472)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !767, file: !141, line: 3393, baseType: !1461, size: 1792)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !141, line: 3248, size: 1792, elements: !1462)
!1462 = !{!1463, !1464, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1461, file: !141, line: 3249, baseType: !1382, size: 1472)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1461, file: !141, line: 3251, baseType: !1465, size: 64, offset: 1472)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1467, line: 463, size: 1152, elements: !1468)
!1467 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1468 = !{!1469, !1472, !1503, !1504, !1618, !1626, !1627, !1628, !1629, !1630, !1631, !1655, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1466, file: !1467, line: 464, baseType: !1470, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1467, line: 464, flags: DIFlagFwdDecl)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1466, file: !1467, line: 467, baseType: !1473, size: 64, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !349, line: 374, size: 640, elements: !1475)
!1475 = !{!1476, !1478, !1479, !1492, !1493, !1494, !1495, !1496, !1497, !1499, !1501, !1502}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1474, file: !349, line: 377, baseType: !1477, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !689, line: 111, baseType: !989)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1474, file: !349, line: 378, baseType: !1477, size: 64, offset: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1474, file: !349, line: 381, baseType: !1480, size: 64, offset: 128)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !349, line: 282, baseType: !1482)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !349, line: 282, size: 128, elements: !1483)
!1483 = !{!1484}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1482, file: !349, line: 282, baseType: !1485, size: 128)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !349, line: 281, baseType: !1486)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !349, line: 281, size: 128, elements: !1487)
!1487 = !{!1488, !1489, !1490}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1486, file: !349, line: 281, baseType: !6, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1486, file: !349, line: 281, baseType: !6, size: 32, offset: 32)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1486, file: !349, line: 281, baseType: !1491, size: 64, offset: 64)
!1491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1477, size: 64, elements: !752)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1474, file: !349, line: 384, baseType: !664, size: 32, offset: 192)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1474, file: !349, line: 387, baseType: !664, size: 32, offset: 224)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1474, file: !349, line: 390, baseType: !664, size: 32, offset: 256)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1474, file: !349, line: 394, baseType: !1480, size: 64, offset: 320)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1474, file: !349, line: 396, baseType: !348, size: 32, offset: 384)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1474, file: !349, line: 399, baseType: !1498, size: 64, offset: 416)
!1498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !354, size: 64, elements: !707)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1474, file: !349, line: 402, baseType: !1500, size: 64, offset: 480)
!1500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 64, elements: !707)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1474, file: !349, line: 406, baseType: !664, size: 32, offset: 544)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1474, file: !349, line: 409, baseType: !664, size: 32, offset: 576)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1466, file: !1467, line: 470, baseType: !1016, size: 64, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1466, file: !1467, line: 473, baseType: !1505, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1417, line: 39, size: 1152, elements: !1507)
!1507 = !{!1508, !1558, !1571, !1583, !1584, !1595, !1596, !1600, !1601, !1602, !1603, !1604}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1506, file: !1417, line: 41, baseType: !1509, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1510, line: 144, baseType: !1511)
!1510 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1510, line: 100, size: 896, elements: !1513)
!1513 = !{!1514, !1522, !1527, !1532, !1534, !1535, !1536, !1537, !1538, !1539, !1544, !1546, !1547, !1552, !1557}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1512, file: !1510, line: 102, baseType: !1515, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1510, line: 52, baseType: !1516)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!1519, !1520}
!1519 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1510, line: 47, baseType: !6)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1512, file: !1510, line: 105, baseType: !1523, size: 64, offset: 64)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1510, line: 59, baseType: !1524)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!664, !1520, !1520}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1512, file: !1510, line: 108, baseType: !1528, size: 64, offset: 128)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1510, line: 63, baseType: !1529)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{null, !668}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1512, file: !1510, line: 111, baseType: !1533, size: 64, offset: 192)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1512, file: !1510, line: 114, baseType: !1170, size: 64, offset: 256)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1512, file: !1510, line: 117, baseType: !1170, size: 64, offset: 320)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1512, file: !1510, line: 120, baseType: !1170, size: 64, offset: 384)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1512, file: !1510, line: 124, baseType: !6, size: 32, offset: 448)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1512, file: !1510, line: 128, baseType: !6, size: 32, offset: 480)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1512, file: !1510, line: 131, baseType: !1540, size: 64, offset: 512)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1510, line: 75, baseType: !1541)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!668, !1170, !1170}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1512, file: !1510, line: 132, baseType: !1545, size: 64, offset: 576)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1510, line: 78, baseType: !1529)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1512, file: !1510, line: 135, baseType: !668, size: 64, offset: 640)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1512, file: !1510, line: 136, baseType: !1548, size: 64, offset: 704)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1510, line: 82, baseType: !1549)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{!668, !668, !1170, !1170}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1512, file: !1510, line: 137, baseType: !1553, size: 64, offset: 768)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1510, line: 83, baseType: !1554)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{null, !668, !668}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1512, file: !1510, line: 141, baseType: !6, size: 32, offset: 832)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1506, file: !1417, line: 48, baseType: !1559, size: 64, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !587, line: 35, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !587, line: 35, size: 128, elements: !1562)
!1562 = !{!1563}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1561, file: !587, line: 35, baseType: !1564, size: 128)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !587, line: 33, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !587, line: 33, size: 128, elements: !1566)
!1566 = !{!1567, !1568, !1569}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1565, file: !587, line: 33, baseType: !6, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1565, file: !587, line: 33, baseType: !6, size: 32, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1565, file: !587, line: 33, baseType: !1570, size: 64, offset: 64)
!1570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 64, elements: !752)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1506, file: !1417, line: 51, baseType: !1572, size: 64, offset: 128)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !141, line: 183, baseType: !1574)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !141, line: 183, size: 128, elements: !1575)
!1575 = !{!1576}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1574, file: !141, line: 183, baseType: !1577, size: 128)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !141, line: 182, baseType: !1578)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !141, line: 182, size: 128, elements: !1579)
!1579 = !{!1580, !1581, !1582}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1578, file: !141, line: 182, baseType: !6, size: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1578, file: !141, line: 182, baseType: !6, size: 32, offset: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1578, file: !141, line: 182, baseType: !1078, size: 64, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1506, file: !1417, line: 54, baseType: !765, size: 64, offset: 192)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1506, file: !1417, line: 57, baseType: !1585, size: 128, offset: 256)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1586, line: 31, size: 128, elements: !1587)
!1586 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1587 = !{!1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1585, file: !1586, line: 35, baseType: !6, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1585, file: !1586, line: 39, baseType: !6, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1585, file: !1586, line: 42, baseType: !6, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1585, file: !1586, line: 46, baseType: !6, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1585, file: !1586, line: 50, baseType: !6, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1585, file: !1586, line: 53, baseType: !6, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1585, file: !1586, line: 56, baseType: !688, size: 64, offset: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1506, file: !1417, line: 60, baseType: !1585, size: 128, offset: 384)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1506, file: !1417, line: 64, baseType: !1597, size: 64, offset: 512)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1599, line: 33, flags: DIFlagFwdDecl)
!1599 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1506, file: !1417, line: 67, baseType: !765, size: 64, offset: 576)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1506, file: !1417, line: 73, baseType: !1509, size: 64, offset: 640)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1506, file: !1417, line: 77, baseType: !688, size: 64, offset: 704)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1506, file: !1417, line: 80, baseType: !6, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1506, file: !1417, line: 82, baseType: !1605, size: 320, offset: 832)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !580, line: 62, size: 320, elements: !1606)
!1606 = !{!1607, !1613, !1614, !1615, !1616, !1617}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1605, file: !580, line: 63, baseType: !1608, size: 64)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !580, line: 56, size: 128, elements: !1610)
!1610 = !{!1611, !1612}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1609, file: !580, line: 57, baseType: !1608, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1609, file: !580, line: 58, baseType: !860, size: 8, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1605, file: !580, line: 64, baseType: !6, size: 32, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1605, file: !580, line: 66, baseType: !6, size: 32, offset: 96)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1605, file: !580, line: 68, baseType: !663, size: 8, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1605, file: !580, line: 70, baseType: !1054, size: 64, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1605, file: !580, line: 71, baseType: !1061, size: 64, offset: 256)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1466, file: !1467, line: 476, baseType: !1619, size: 64, offset: 256)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !336, line: 187, size: 256, elements: !1621)
!1621 = !{!1622, !1623, !1624, !1625}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1620, file: !336, line: 189, baseType: !664, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1620, file: !336, line: 192, baseType: !1255, size: 64, offset: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1620, file: !336, line: 197, baseType: !1509, size: 64, offset: 128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1620, file: !336, line: 200, baseType: !1240, size: 64, offset: 192)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1466, file: !1467, line: 479, baseType: !1509, size: 64, offset: 320)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1466, file: !1467, line: 484, baseType: !765, size: 64, offset: 384)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1466, file: !1467, line: 488, baseType: !765, size: 64, offset: 448)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1466, file: !1467, line: 493, baseType: !765, size: 64, offset: 512)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1466, file: !1467, line: 496, baseType: !765, size: 64, offset: 576)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1466, file: !1467, line: 501, baseType: !1632, size: 64, offset: 640)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !360, line: 2355, size: 576, elements: !1634)
!1634 = !{!1635, !1638, !1639, !1640, !1641, !1643, !1644, !1649, !1650, !1651, !1652, !1653, !1654}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1633, file: !360, line: 2356, baseType: !1636, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !360, line: 2356, flags: DIFlagFwdDecl)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1633, file: !360, line: 2357, baseType: !669, size: 64, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1633, file: !360, line: 2358, baseType: !664, size: 32, offset: 128)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1633, file: !360, line: 2359, baseType: !664, size: 32, offset: 160)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1633, file: !360, line: 2360, baseType: !1642, size: 128, offset: 192)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !664, size: 128, elements: !732)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1633, file: !360, line: 2364, baseType: !664, size: 32, offset: 320)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1633, file: !360, line: 2367, baseType: !1645, size: 128, offset: 384)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !360, line: 2349, size: 128, elements: !1646)
!1646 = !{!1647, !1648}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1645, file: !360, line: 2351, baseType: !935, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1645, file: !360, line: 2352, baseType: !723, size: 64, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1633, file: !360, line: 2371, baseType: !359, size: 32, offset: 512)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1633, file: !360, line: 2374, baseType: !6, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1633, file: !360, line: 2377, baseType: !6, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1633, file: !360, line: 2381, baseType: !6, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1633, file: !360, line: 2392, baseType: !6, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1633, file: !360, line: 2396, baseType: !6, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1466, file: !1467, line: 504, baseType: !1656, size: 64, offset: 704)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1467, line: 504, flags: DIFlagFwdDecl)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1466, file: !1467, line: 507, baseType: !1509, size: 64, offset: 768)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1466, file: !1467, line: 510, baseType: !664, size: 32, offset: 832)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1466, file: !1467, line: 513, baseType: !664, size: 32, offset: 864)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1466, file: !1467, line: 516, baseType: !885, size: 32, offset: 896)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1466, file: !1467, line: 519, baseType: !885, size: 32, offset: 928)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1466, file: !1467, line: 522, baseType: !6, size: 32, offset: 960)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1466, file: !1467, line: 523, baseType: !6, size: 32, offset: 992)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1466, file: !1467, line: 528, baseType: !669, size: 64, offset: 1024)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1466, file: !1467, line: 535, baseType: !6, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1466, file: !1467, line: 539, baseType: !6, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1466, file: !1467, line: 543, baseType: !6, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1466, file: !1467, line: 546, baseType: !6, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1466, file: !1467, line: 550, baseType: !6, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1466, file: !1467, line: 554, baseType: !6, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1466, file: !1467, line: 559, baseType: !6, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1466, file: !1467, line: 562, baseType: !6, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1466, file: !1467, line: 571, baseType: !6, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1466, file: !1467, line: 573, baseType: !6, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1466, file: !1467, line: 574, baseType: !6, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1466, file: !1467, line: 581, baseType: !6, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1466, file: !1467, line: 585, baseType: !6, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1466, file: !1467, line: 588, baseType: !6, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1466, file: !1467, line: 592, baseType: !6, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1466, file: !1467, line: 598, baseType: !6, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1461, file: !141, line: 3254, baseType: !765, size: 64, offset: 1536)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1461, file: !141, line: 3257, baseType: !765, size: 64, offset: 1600)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1461, file: !141, line: 3258, baseType: !765, size: 64, offset: 1664)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1461, file: !141, line: 3264, baseType: !6, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1461, file: !141, line: 3265, baseType: !6, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1461, file: !141, line: 3267, baseType: !6, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1461, file: !141, line: 3268, baseType: !6, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1461, file: !141, line: 3269, baseType: !6, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1461, file: !141, line: 3271, baseType: !6, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1461, file: !141, line: 3272, baseType: !6, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1461, file: !141, line: 3273, baseType: !6, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1461, file: !141, line: 3274, baseType: !6, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1461, file: !141, line: 3275, baseType: !6, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1461, file: !141, line: 3276, baseType: !6, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1461, file: !141, line: 3277, baseType: !6, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1461, file: !141, line: 3279, baseType: !6, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1461, file: !141, line: 3280, baseType: !6, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1461, file: !141, line: 3281, baseType: !6, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1461, file: !141, line: 3282, baseType: !6, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1461, file: !141, line: 3283, baseType: !6, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1461, file: !141, line: 3284, baseType: !6, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !767, file: !141, line: 3394, baseType: !1704, size: 1344)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !141, line: 2279, size: 1344, elements: !1705)
!1705 = !{!1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1704, file: !141, line: 2280, baseType: !803, size: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1704, file: !141, line: 2281, baseType: !765, size: 64, offset: 192)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1704, file: !141, line: 2282, baseType: !765, size: 64, offset: 256)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1704, file: !141, line: 2283, baseType: !765, size: 64, offset: 320)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1704, file: !141, line: 2284, baseType: !765, size: 64, offset: 384)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1704, file: !141, line: 2285, baseType: !6, size: 32, offset: 448)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1704, file: !141, line: 2287, baseType: !6, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1704, file: !141, line: 2288, baseType: !6, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1704, file: !141, line: 2289, baseType: !6, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1704, file: !141, line: 2290, baseType: !6, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1704, file: !141, line: 2291, baseType: !6, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1704, file: !141, line: 2292, baseType: !6, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1704, file: !141, line: 2294, baseType: !6, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1704, file: !141, line: 2296, baseType: !6, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1704, file: !141, line: 2297, baseType: !6, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1704, file: !141, line: 2298, baseType: !6, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1704, file: !141, line: 2299, baseType: !6, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1704, file: !141, line: 2300, baseType: !6, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1704, file: !141, line: 2301, baseType: !6, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1704, file: !141, line: 2302, baseType: !6, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1704, file: !141, line: 2303, baseType: !6, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1704, file: !141, line: 2305, baseType: !6, size: 32, offset: 512)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1704, file: !141, line: 2306, baseType: !1334, size: 32, offset: 544)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1704, file: !141, line: 2307, baseType: !765, size: 64, offset: 576)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1704, file: !141, line: 2308, baseType: !765, size: 64, offset: 640)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1704, file: !141, line: 2314, baseType: !1732, size: 64, offset: 704)
!1732 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !141, line: 2309, size: 64, elements: !1733)
!1733 = !{!1734, !1735, !1736}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1732, file: !141, line: 2310, baseType: !664, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1732, file: !141, line: 2311, baseType: !669, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1732, file: !141, line: 2312, baseType: !1737, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !141, line: 2277, flags: DIFlagFwdDecl)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1704, file: !141, line: 2315, baseType: !765, size: 64, offset: 768)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1704, file: !141, line: 2316, baseType: !765, size: 64, offset: 832)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1704, file: !141, line: 2317, baseType: !765, size: 64, offset: 896)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1704, file: !141, line: 2318, baseType: !765, size: 64, offset: 960)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1704, file: !141, line: 2319, baseType: !765, size: 64, offset: 1024)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1704, file: !141, line: 2320, baseType: !765, size: 64, offset: 1088)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1704, file: !141, line: 2321, baseType: !765, size: 64, offset: 1152)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1704, file: !141, line: 2322, baseType: !765, size: 64, offset: 1216)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1704, file: !141, line: 2324, baseType: !1748, size: 64, offset: 1280)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !141, line: 2324, flags: DIFlagFwdDecl)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !767, file: !141, line: 3395, baseType: !1751, size: 320)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !141, line: 1469, size: 320, elements: !1752)
!1752 = !{!1753, !1754, !1755}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1751, file: !141, line: 1470, baseType: !803, size: 192)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1751, file: !141, line: 1471, baseType: !765, size: 64, offset: 192)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1751, file: !141, line: 1472, baseType: !765, size: 64, offset: 256)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !767, file: !141, line: 3396, baseType: !1757, size: 320)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !141, line: 1482, size: 320, elements: !1758)
!1758 = !{!1759, !1760, !1761}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1757, file: !141, line: 1483, baseType: !803, size: 192)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1757, file: !141, line: 1484, baseType: !664, size: 32, offset: 192)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1757, file: !141, line: 1485, baseType: !1078, size: 64, offset: 256)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !767, file: !141, line: 3397, baseType: !1763, size: 384)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !141, line: 1829, size: 384, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1763, file: !141, line: 1830, baseType: !803, size: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1763, file: !141, line: 1831, baseType: !885, size: 32, offset: 192)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1763, file: !141, line: 1832, baseType: !765, size: 64, offset: 256)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1763, file: !141, line: 1835, baseType: !1078, size: 64, offset: 320)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !767, file: !141, line: 3398, baseType: !1770, size: 704)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !141, line: 1898, size: 704, elements: !1771)
!1771 = !{!1772, !1773, !1774, !1775, !1776, !1781}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1770, file: !141, line: 1899, baseType: !803, size: 192)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1770, file: !141, line: 1902, baseType: !765, size: 64, offset: 192)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1770, file: !141, line: 1905, baseType: !1025, size: 64, offset: 256)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1770, file: !141, line: 1908, baseType: !6, size: 32, offset: 320)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1770, file: !141, line: 1911, baseType: !1777, size: 64, offset: 384)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1417, line: 117, size: 128, elements: !1779)
!1779 = !{!1780}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1778, file: !1417, line: 120, baseType: !1585, size: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1770, file: !141, line: 1914, baseType: !1066, size: 256, offset: 448)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !767, file: !141, line: 3399, baseType: !1783, size: 704)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !141, line: 2008, size: 704, elements: !1784)
!1784 = !{!1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1783, file: !141, line: 2009, baseType: !803, size: 192)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1783, file: !141, line: 2011, baseType: !6, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1783, file: !141, line: 2012, baseType: !6, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1783, file: !141, line: 2014, baseType: !885, size: 32, offset: 224)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1783, file: !141, line: 2016, baseType: !765, size: 64, offset: 256)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1783, file: !141, line: 2017, baseType: !1572, size: 64, offset: 320)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1783, file: !141, line: 2019, baseType: !765, size: 64, offset: 384)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1783, file: !141, line: 2020, baseType: !765, size: 64, offset: 448)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1783, file: !141, line: 2021, baseType: !765, size: 64, offset: 512)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1783, file: !141, line: 2022, baseType: !765, size: 64, offset: 576)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1783, file: !141, line: 2023, baseType: !765, size: 64, offset: 640)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !767, file: !141, line: 3400, baseType: !1797, size: 832)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !141, line: 2430, size: 832, elements: !1798)
!1798 = !{!1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1797, file: !141, line: 2431, baseType: !803, size: 192)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1797, file: !141, line: 2433, baseType: !765, size: 64, offset: 192)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1797, file: !141, line: 2434, baseType: !765, size: 64, offset: 256)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1797, file: !141, line: 2435, baseType: !765, size: 64, offset: 320)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1797, file: !141, line: 2436, baseType: !765, size: 64, offset: 384)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1797, file: !141, line: 2437, baseType: !1572, size: 64, offset: 448)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1797, file: !141, line: 2438, baseType: !765, size: 64, offset: 512)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1797, file: !141, line: 2440, baseType: !765, size: 64, offset: 576)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1797, file: !141, line: 2441, baseType: !765, size: 64, offset: 640)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1797, file: !141, line: 2443, baseType: !1809, size: 128, offset: 704)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !141, line: 182, baseType: !1810)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !141, line: 182, size: 128, elements: !1811)
!1811 = !{!1812}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1810, file: !141, line: 182, baseType: !1577, size: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !767, file: !141, line: 3401, baseType: !1814, size: 320)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !141, line: 3327, size: 320, elements: !1815)
!1815 = !{!1816, !1817, !1824}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1814, file: !141, line: 3329, baseType: !803, size: 192)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1814, file: !141, line: 3330, baseType: !1818, size: 64, offset: 192)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !141, line: 3320, size: 192, elements: !1820)
!1820 = !{!1821, !1822, !1823}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1819, file: !141, line: 3322, baseType: !1818, size: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1819, file: !141, line: 3323, baseType: !1818, size: 64, offset: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1819, file: !141, line: 3324, baseType: !765, size: 64, offset: 128)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1814, file: !141, line: 3331, baseType: !1818, size: 64, offset: 256)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !767, file: !141, line: 3402, baseType: !1826, size: 256)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !141, line: 1540, size: 256, elements: !1827)
!1827 = !{!1828, !1829}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1826, file: !141, line: 1541, baseType: !803, size: 192)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1826, file: !141, line: 1542, baseType: !1830, size: 64, offset: 192)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !141, line: 1538, baseType: !1832)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !141, line: 1538, size: 192, elements: !1833)
!1833 = !{!1834}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1832, file: !141, line: 1538, baseType: !1835, size: 192)
!1835 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !141, line: 1537, baseType: !1836)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !141, line: 1537, size: 192, elements: !1837)
!1837 = !{!1838, !1839, !1840}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1836, file: !141, line: 1537, baseType: !6, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1836, file: !141, line: 1537, baseType: !6, size: 32, offset: 32)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1836, file: !141, line: 1537, baseType: !1841, size: 128, offset: 64)
!1841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1842, size: 128, elements: !752)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !141, line: 1535, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !141, line: 1532, size: 128, elements: !1844)
!1844 = !{!1845, !1846}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1843, file: !141, line: 1533, baseType: !765, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1843, file: !141, line: 1534, baseType: !765, size: 64, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !767, file: !141, line: 3403, baseType: !1848, size: 512)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !141, line: 1938, size: 512, elements: !1849)
!1849 = !{!1850, !1851, !1852, !1853, !1859, !1860, !1861}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1848, file: !141, line: 1939, baseType: !803, size: 192)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1848, file: !141, line: 1940, baseType: !885, size: 32, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1848, file: !141, line: 1941, baseType: !364, size: 32, offset: 224)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1848, file: !141, line: 1946, baseType: !1854, size: 32, offset: 256)
!1854 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !141, line: 1942, size: 32, elements: !1855)
!1855 = !{!1856, !1857, !1858}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1854, file: !141, line: 1943, baseType: !382, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1854, file: !141, line: 1944, baseType: !389, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1854, file: !141, line: 1945, baseType: !140, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1848, file: !141, line: 1950, baseType: !1015, size: 64, offset: 320)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1848, file: !141, line: 1951, baseType: !1015, size: 64, offset: 384)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1848, file: !141, line: 1953, baseType: !1078, size: 64, offset: 448)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !767, file: !141, line: 3404, baseType: !1863, size: 1664)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !141, line: 3337, size: 1664, elements: !1864)
!1864 = !{!1865, !1866}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1863, file: !141, line: 3338, baseType: !803, size: 192)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1863, file: !141, line: 3341, baseType: !1867, size: 1472, offset: 192)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1868, line: 410, size: 1472, elements: !1869)
!1868 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1869 = !{!1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1867, file: !1868, line: 412, baseType: !664, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1867, file: !1868, line: 413, baseType: !664, size: 32, offset: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1867, file: !1868, line: 414, baseType: !664, size: 32, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1867, file: !1868, line: 415, baseType: !664, size: 32, offset: 96)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1867, file: !1868, line: 416, baseType: !664, size: 32, offset: 128)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1867, file: !1868, line: 417, baseType: !664, size: 32, offset: 160)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1867, file: !1868, line: 418, baseType: !663, size: 8, offset: 192)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1867, file: !1868, line: 419, baseType: !663, size: 8, offset: 200)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1867, file: !1868, line: 420, baseType: !1879, size: 8, offset: 208)
!1879 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1867, file: !1868, line: 421, baseType: !1879, size: 8, offset: 216)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1867, file: !1868, line: 422, baseType: !1879, size: 8, offset: 224)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1867, file: !1868, line: 423, baseType: !1879, size: 8, offset: 232)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1867, file: !1868, line: 424, baseType: !1879, size: 8, offset: 240)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1867, file: !1868, line: 425, baseType: !1879, size: 8, offset: 248)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1867, file: !1868, line: 426, baseType: !1879, size: 8, offset: 256)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1867, file: !1868, line: 427, baseType: !1879, size: 8, offset: 264)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1867, file: !1868, line: 428, baseType: !1879, size: 8, offset: 272)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1867, file: !1868, line: 429, baseType: !1879, size: 8, offset: 280)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1867, file: !1868, line: 430, baseType: !1879, size: 8, offset: 288)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1867, file: !1868, line: 431, baseType: !1879, size: 8, offset: 296)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1867, file: !1868, line: 432, baseType: !1879, size: 8, offset: 304)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1867, file: !1868, line: 433, baseType: !1879, size: 8, offset: 312)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1867, file: !1868, line: 434, baseType: !1879, size: 8, offset: 320)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1867, file: !1868, line: 435, baseType: !1879, size: 8, offset: 328)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1867, file: !1868, line: 436, baseType: !1879, size: 8, offset: 336)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1867, file: !1868, line: 437, baseType: !1879, size: 8, offset: 344)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1867, file: !1868, line: 438, baseType: !1879, size: 8, offset: 352)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1867, file: !1868, line: 439, baseType: !1879, size: 8, offset: 360)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1867, file: !1868, line: 440, baseType: !1879, size: 8, offset: 368)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1867, file: !1868, line: 441, baseType: !1879, size: 8, offset: 376)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1867, file: !1868, line: 442, baseType: !1879, size: 8, offset: 384)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1867, file: !1868, line: 443, baseType: !1879, size: 8, offset: 392)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1867, file: !1868, line: 444, baseType: !1879, size: 8, offset: 400)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1867, file: !1868, line: 445, baseType: !1879, size: 8, offset: 408)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1867, file: !1868, line: 446, baseType: !1879, size: 8, offset: 416)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1867, file: !1868, line: 447, baseType: !1879, size: 8, offset: 424)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1867, file: !1868, line: 448, baseType: !1879, size: 8, offset: 432)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1867, file: !1868, line: 449, baseType: !1879, size: 8, offset: 440)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1867, file: !1868, line: 450, baseType: !1879, size: 8, offset: 448)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1867, file: !1868, line: 451, baseType: !1879, size: 8, offset: 456)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1867, file: !1868, line: 452, baseType: !1879, size: 8, offset: 464)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1867, file: !1868, line: 453, baseType: !1879, size: 8, offset: 472)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1867, file: !1868, line: 454, baseType: !1879, size: 8, offset: 480)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1867, file: !1868, line: 455, baseType: !1879, size: 8, offset: 488)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1867, file: !1868, line: 456, baseType: !1879, size: 8, offset: 496)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1867, file: !1868, line: 457, baseType: !1879, size: 8, offset: 504)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1867, file: !1868, line: 458, baseType: !1879, size: 8, offset: 512)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1867, file: !1868, line: 459, baseType: !1879, size: 8, offset: 520)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1867, file: !1868, line: 460, baseType: !1879, size: 8, offset: 528)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1867, file: !1868, line: 461, baseType: !1879, size: 8, offset: 536)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1867, file: !1868, line: 462, baseType: !1879, size: 8, offset: 544)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1867, file: !1868, line: 463, baseType: !1879, size: 8, offset: 552)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1867, file: !1868, line: 464, baseType: !1879, size: 8, offset: 560)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1867, file: !1868, line: 465, baseType: !1879, size: 8, offset: 568)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1867, file: !1868, line: 466, baseType: !1879, size: 8, offset: 576)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1867, file: !1868, line: 467, baseType: !1879, size: 8, offset: 584)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1867, file: !1868, line: 468, baseType: !1879, size: 8, offset: 592)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1867, file: !1868, line: 469, baseType: !1879, size: 8, offset: 600)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1867, file: !1868, line: 470, baseType: !1879, size: 8, offset: 608)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1867, file: !1868, line: 471, baseType: !1879, size: 8, offset: 616)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1867, file: !1868, line: 472, baseType: !1879, size: 8, offset: 624)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1867, file: !1868, line: 473, baseType: !1879, size: 8, offset: 632)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1867, file: !1868, line: 474, baseType: !1879, size: 8, offset: 640)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1867, file: !1868, line: 475, baseType: !1879, size: 8, offset: 648)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1867, file: !1868, line: 476, baseType: !1879, size: 8, offset: 656)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1867, file: !1868, line: 477, baseType: !1879, size: 8, offset: 664)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1867, file: !1868, line: 478, baseType: !1879, size: 8, offset: 672)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1867, file: !1868, line: 479, baseType: !1879, size: 8, offset: 680)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1867, file: !1868, line: 480, baseType: !1879, size: 8, offset: 688)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1867, file: !1868, line: 481, baseType: !1879, size: 8, offset: 696)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1867, file: !1868, line: 482, baseType: !1879, size: 8, offset: 704)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1867, file: !1868, line: 483, baseType: !1879, size: 8, offset: 712)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1867, file: !1868, line: 484, baseType: !1879, size: 8, offset: 720)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1867, file: !1868, line: 485, baseType: !1879, size: 8, offset: 728)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1867, file: !1868, line: 486, baseType: !1879, size: 8, offset: 736)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1867, file: !1868, line: 487, baseType: !1879, size: 8, offset: 744)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1867, file: !1868, line: 488, baseType: !1879, size: 8, offset: 752)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1867, file: !1868, line: 489, baseType: !1879, size: 8, offset: 760)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1867, file: !1868, line: 490, baseType: !1879, size: 8, offset: 768)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1867, file: !1868, line: 491, baseType: !1879, size: 8, offset: 776)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1867, file: !1868, line: 492, baseType: !1879, size: 8, offset: 784)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1867, file: !1868, line: 493, baseType: !1879, size: 8, offset: 792)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1867, file: !1868, line: 494, baseType: !1879, size: 8, offset: 800)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1867, file: !1868, line: 495, baseType: !1879, size: 8, offset: 808)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1867, file: !1868, line: 496, baseType: !1879, size: 8, offset: 816)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1867, file: !1868, line: 497, baseType: !1879, size: 8, offset: 824)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1867, file: !1868, line: 498, baseType: !1879, size: 8, offset: 832)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1867, file: !1868, line: 499, baseType: !1879, size: 8, offset: 840)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1867, file: !1868, line: 500, baseType: !1879, size: 8, offset: 848)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1867, file: !1868, line: 501, baseType: !1879, size: 8, offset: 856)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1867, file: !1868, line: 502, baseType: !1879, size: 8, offset: 864)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1867, file: !1868, line: 503, baseType: !1879, size: 8, offset: 872)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1867, file: !1868, line: 504, baseType: !1879, size: 8, offset: 880)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1867, file: !1868, line: 505, baseType: !1879, size: 8, offset: 888)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1867, file: !1868, line: 506, baseType: !1879, size: 8, offset: 896)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1867, file: !1868, line: 507, baseType: !1879, size: 8, offset: 904)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1867, file: !1868, line: 508, baseType: !1879, size: 8, offset: 912)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1867, file: !1868, line: 509, baseType: !1879, size: 8, offset: 920)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1867, file: !1868, line: 510, baseType: !1879, size: 8, offset: 928)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1867, file: !1868, line: 511, baseType: !1879, size: 8, offset: 936)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1867, file: !1868, line: 512, baseType: !1879, size: 8, offset: 944)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1867, file: !1868, line: 513, baseType: !1879, size: 8, offset: 952)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1867, file: !1868, line: 514, baseType: !1879, size: 8, offset: 960)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1867, file: !1868, line: 515, baseType: !1879, size: 8, offset: 968)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1867, file: !1868, line: 516, baseType: !1879, size: 8, offset: 976)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1867, file: !1868, line: 517, baseType: !1879, size: 8, offset: 984)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1867, file: !1868, line: 518, baseType: !1879, size: 8, offset: 992)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1867, file: !1868, line: 519, baseType: !1879, size: 8, offset: 1000)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1867, file: !1868, line: 520, baseType: !1879, size: 8, offset: 1008)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1867, file: !1868, line: 521, baseType: !1879, size: 8, offset: 1016)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1867, file: !1868, line: 522, baseType: !1879, size: 8, offset: 1024)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1867, file: !1868, line: 523, baseType: !1879, size: 8, offset: 1032)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1867, file: !1868, line: 524, baseType: !1879, size: 8, offset: 1040)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1867, file: !1868, line: 525, baseType: !1879, size: 8, offset: 1048)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1867, file: !1868, line: 526, baseType: !1879, size: 8, offset: 1056)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1867, file: !1868, line: 527, baseType: !1879, size: 8, offset: 1064)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1867, file: !1868, line: 528, baseType: !1879, size: 8, offset: 1072)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1867, file: !1868, line: 529, baseType: !1879, size: 8, offset: 1080)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1867, file: !1868, line: 530, baseType: !1879, size: 8, offset: 1088)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1867, file: !1868, line: 531, baseType: !1879, size: 8, offset: 1096)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1867, file: !1868, line: 532, baseType: !1879, size: 8, offset: 1104)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1867, file: !1868, line: 533, baseType: !1879, size: 8, offset: 1112)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1867, file: !1868, line: 534, baseType: !1879, size: 8, offset: 1120)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1867, file: !1868, line: 535, baseType: !1879, size: 8, offset: 1128)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1867, file: !1868, line: 536, baseType: !1879, size: 8, offset: 1136)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1867, file: !1868, line: 537, baseType: !1879, size: 8, offset: 1144)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1867, file: !1868, line: 538, baseType: !1879, size: 8, offset: 1152)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1867, file: !1868, line: 539, baseType: !1879, size: 8, offset: 1160)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1867, file: !1868, line: 540, baseType: !1879, size: 8, offset: 1168)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1867, file: !1868, line: 541, baseType: !1879, size: 8, offset: 1176)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1867, file: !1868, line: 542, baseType: !1879, size: 8, offset: 1184)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1867, file: !1868, line: 543, baseType: !1879, size: 8, offset: 1192)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1867, file: !1868, line: 544, baseType: !1879, size: 8, offset: 1200)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1867, file: !1868, line: 545, baseType: !1879, size: 8, offset: 1208)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1867, file: !1868, line: 546, baseType: !1879, size: 8, offset: 1216)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1867, file: !1868, line: 547, baseType: !1879, size: 8, offset: 1224)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1867, file: !1868, line: 548, baseType: !1879, size: 8, offset: 1232)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1867, file: !1868, line: 549, baseType: !1879, size: 8, offset: 1240)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1867, file: !1868, line: 550, baseType: !1879, size: 8, offset: 1248)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1867, file: !1868, line: 551, baseType: !1879, size: 8, offset: 1256)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1867, file: !1868, line: 552, baseType: !1879, size: 8, offset: 1264)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1867, file: !1868, line: 553, baseType: !1879, size: 8, offset: 1272)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1867, file: !1868, line: 554, baseType: !1879, size: 8, offset: 1280)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1867, file: !1868, line: 555, baseType: !1879, size: 8, offset: 1288)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1867, file: !1868, line: 556, baseType: !1879, size: 8, offset: 1296)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1867, file: !1868, line: 557, baseType: !1879, size: 8, offset: 1304)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1867, file: !1868, line: 558, baseType: !1879, size: 8, offset: 1312)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1867, file: !1868, line: 559, baseType: !1879, size: 8, offset: 1320)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1867, file: !1868, line: 560, baseType: !1879, size: 8, offset: 1328)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1867, file: !1868, line: 561, baseType: !1879, size: 8, offset: 1336)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1867, file: !1868, line: 562, baseType: !1879, size: 8, offset: 1344)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1867, file: !1868, line: 563, baseType: !1879, size: 8, offset: 1352)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1867, file: !1868, line: 564, baseType: !1879, size: 8, offset: 1360)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1867, file: !1868, line: 565, baseType: !1879, size: 8, offset: 1368)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1867, file: !1868, line: 566, baseType: !1879, size: 8, offset: 1376)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1867, file: !1868, line: 567, baseType: !1879, size: 8, offset: 1384)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1867, file: !1868, line: 568, baseType: !1879, size: 8, offset: 1392)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1867, file: !1868, line: 569, baseType: !1879, size: 8, offset: 1400)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1867, file: !1868, line: 570, baseType: !1879, size: 8, offset: 1408)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1867, file: !1868, line: 571, baseType: !1879, size: 8, offset: 1416)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1867, file: !1868, line: 572, baseType: !1879, size: 8, offset: 1424)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1867, file: !1868, line: 573, baseType: !1879, size: 8, offset: 1432)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1867, file: !1868, line: 574, baseType: !1879, size: 8, offset: 1440)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !767, file: !141, line: 3405, baseType: !2035, size: 384)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !141, line: 3352, size: 384, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2035, file: !141, line: 3353, baseType: !803, size: 192)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2035, file: !141, line: 3356, baseType: !2039, size: 192, offset: 192)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1868, line: 578, size: 192, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2039, file: !1868, line: 580, baseType: !664, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2039, file: !1868, line: 581, baseType: !664, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2039, file: !1868, line: 582, baseType: !664, size: 32, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2039, file: !1868, line: 583, baseType: !664, size: 32, offset: 96)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2039, file: !1868, line: 584, baseType: !663, size: 8, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2039, file: !1868, line: 585, baseType: !663, size: 8, offset: 136)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2039, file: !1868, line: 586, baseType: !663, size: 8, offset: 144)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2039, file: !1868, line: 587, baseType: !663, size: 8, offset: 152)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2039, file: !1868, line: 588, baseType: !663, size: 8, offset: 160)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2039, file: !1868, line: 589, baseType: !663, size: 8, offset: 168)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2039, file: !1868, line: 590, baseType: !663, size: 8, offset: 176)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !762, file: !3, line: 168, baseType: !765, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "nary", scope: !762, file: !3, line: 169, baseType: !2054, size: 64)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_nary_op_t", file: !2055, line: 46, baseType: !2056)
!2055 = !DIFile(filename: "./tree-ssa-sccvn.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vn_nary_op_s", file: !2055, line: 36, size: 512, elements: !2058)
!2058 = !{!2059, !2060, !2061, !2062, !2063, !2064, !2065}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "value_id", scope: !2057, file: !2055, line: 39, baseType: !6, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !2057, file: !2055, line: 40, baseType: !6, size: 16, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2057, file: !2055, line: 41, baseType: !6, size: 16, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !2057, file: !2055, line: 42, baseType: !1519, size: 32, offset: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2057, file: !2055, line: 43, baseType: !765, size: 64, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2057, file: !2055, line: 44, baseType: !765, size: 64, offset: 192)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2057, file: !2055, line: 45, baseType: !2066, size: 256, offset: 256)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !765, size: 256, elements: !732)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !762, file: !3, line: 170, baseType: !2068, size: 64)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_reference_t", file: !2055, line: 103, baseType: !2069)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vn_reference_s", file: !2055, line: 93, size: 384, elements: !2071)
!2071 = !{!2072, !2073, !2074, !2075, !2076, !2077, !2098}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "value_id", scope: !2070, file: !2055, line: 96, baseType: !6, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !2070, file: !2055, line: 97, baseType: !1519, size: 32, offset: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !2070, file: !2055, line: 98, baseType: !765, size: 64, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2070, file: !2055, line: 99, baseType: !1334, size: 32, offset: 128)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2070, file: !2055, line: 100, baseType: !765, size: 64, offset: 192)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !2070, file: !2055, line: 101, baseType: !2078, size: 64, offset: 256)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vn_reference_op_s_heap", file: !2055, line: 84, baseType: !2080)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vn_reference_op_s_heap", file: !2055, line: 84, size: 384, elements: !2081)
!2081 = !{!2082}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2080, file: !2055, line: 84, baseType: !2083, size: 384)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vn_reference_op_s_base", file: !2055, line: 83, baseType: !2084)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vn_reference_op_s_base", file: !2055, line: 83, size: 384, elements: !2085)
!2085 = !{!2086, !2087, !2088}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2084, file: !2055, line: 83, baseType: !6, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2084, file: !2055, line: 83, baseType: !6, size: 32, offset: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2084, file: !2055, line: 83, baseType: !2089, size: 320, offset: 64)
!2089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2090, size: 320, elements: !752)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_reference_op_s", file: !2055, line: 79, baseType: !2091)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vn_reference_op_struct", file: !2055, line: 72, size: 320, elements: !2092)
!2092 = !{!2093, !2094, !2095, !2096, !2097}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !2091, file: !2055, line: 74, baseType: !140, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2091, file: !2055, line: 75, baseType: !765, size: 64, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "op0", scope: !2091, file: !2055, line: 76, baseType: !765, size: 64, offset: 128)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "op1", scope: !2091, file: !2055, line: 77, baseType: !765, size: 64, offset: 192)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "op2", scope: !2091, file: !2055, line: 78, baseType: !765, size: 64, offset: 256)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2070, file: !2055, line: 102, baseType: !765, size: 64, offset: 320)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_pre_expr_heap", file: !3, line: 242, baseType: !2101)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_pre_expr_heap", file: !3, line: 242, size: 128, elements: !2102)
!2102 = !{!2103}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2101, file: !3, line: 242, baseType: !2104, size: 128)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_pre_expr_base", file: !3, line: 241, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_pre_expr_base", file: !3, line: 241, size: 128, elements: !2106)
!2106 = !{!2107, !2108, !2109}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2105, file: !3, line: 241, baseType: !6, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2105, file: !3, line: 241, baseType: !6, size: 32, offset: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2105, file: !3, line: 241, baseType: !2110, size: 64, offset: 64)
!2110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !754, size: 64, elements: !752)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_unsigned_heap", file: !2113, line: 35, baseType: !2114)
!2113 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_unsigned_heap", file: !2113, line: 35, size: 96, elements: !2115)
!2115 = !{!2116}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2114, file: !2113, line: 35, baseType: !2117, size: 96)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_unsigned_base", file: !2113, line: 34, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_unsigned_base", file: !2113, line: 34, size: 96, elements: !2119)
!2119 = !{!2120, !2121, !2122}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2118, file: !2113, line: 34, baseType: !6, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2118, file: !2113, line: 34, baseType: !6, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2118, file: !2113, line: 34, baseType: !2123, size: 32, offset: 64)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 32, elements: !752)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "bb_value_sets_t", file: !3, line: 425, baseType: !2125)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bb_bitmap_sets", file: !3, line: 382, size: 576, elements: !2127)
!2127 = !{!2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "exp_gen", scope: !2126, file: !3, line: 386, baseType: !683, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "phi_gen", scope: !2126, file: !3, line: 390, baseType: !683, size: 64, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_gen", scope: !2126, file: !3, line: 394, baseType: !683, size: 64, offset: 128)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "avail_out", scope: !2126, file: !3, line: 398, baseType: !683, size: 64, offset: 192)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "antic_in", scope: !2126, file: !3, line: 402, baseType: !683, size: 64, offset: 256)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "pa_in", scope: !2126, file: !3, line: 406, baseType: !683, size: 64, offset: 320)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "new_sets", scope: !2126, file: !3, line: 411, baseType: !683, size: 64, offset: 384)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "expr_dies", scope: !2126, file: !3, line: 414, baseType: !688, size: 64, offset: 448)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2126, file: !3, line: 417, baseType: !6, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "deferred", scope: !2126, file: !3, line: 421, baseType: !6, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "contains_may_not_return_call", scope: !2126, file: !3, line: 424, baseType: !6, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_heap", file: !587, line: 34, baseType: !2141)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_heap", file: !587, line: 34, size: 128, elements: !2142)
!2142 = !{!2143}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2141, file: !587, line: 34, baseType: !1564, size: 128)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !349, line: 682, baseType: !2147)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !349, line: 679, size: 128, elements: !2148)
!2148 = !{!2149, !2150}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2147, file: !349, line: 680, baseType: !6, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2147, file: !349, line: 681, baseType: !2151, size: 64, offset: 64)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_expr_pred_trans_t", file: !3, line: 521, baseType: !2153)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2155)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "expr_pred_trans_d", file: !3, line: 506, size: 256, elements: !2156)
!2156 = !{!2157, !2158, !2159, !2160}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2155, file: !3, line: 509, baseType: !754, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !2155, file: !3, line: 512, baseType: !1477, size: 64, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2155, file: !3, line: 515, baseType: !754, size: 64, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !2155, file: !3, line: 519, baseType: !1519, size: 32, offset: 192)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !756)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1027)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_heap", file: !349, line: 283, baseType: !2168)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_heap", file: !349, line: 283, size: 128, elements: !2169)
!2169 = !{!2170}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2168, file: !349, line: 283, baseType: !1485, size: 128)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "expr_pred_trans_t", file: !3, line: 520, baseType: !2172)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !580, line: 30, baseType: !2175)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !141, line: 1893, baseType: !1066)
!2177 = !{!2178, !2206, !0, !2208, !2231, !2233, !2235, !2237, !2239, !2241, !2243, !2245, !2247, !2249, !2251, !2253, !2255, !2257, !2259, !2261, !2263, !2265, !2277, !2279}
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(name: "pass_pre", scope: !2, file: !3, line: 4822, type: !2180, isLocal: false, isDefinition: true)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_opt_pass", file: !397, line: 156, size: 640, elements: !2181)
!2181 = !{!2182}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2180, file: !397, line: 158, baseType: !2183, size: 640)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !397, line: 114, size: 640, elements: !2184)
!2184 = !{!2185, !2186, !2187, !2191, !2195, !2197, !2198, !2199, !2201, !2202, !2203, !2204, !2205}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2183, file: !397, line: 117, baseType: !396, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2183, file: !397, line: 121, baseType: !669, size: 64, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2183, file: !397, line: 125, baseType: !2188, size: 64, offset: 128)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{!663}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2183, file: !397, line: 130, baseType: !2192, size: 64, offset: 192)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!6}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2183, file: !397, line: 133, baseType: !2196, size: 64, offset: 256)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2183, file: !397, line: 136, baseType: !2196, size: 64, offset: 320)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2183, file: !397, line: 139, baseType: !664, size: 32, offset: 384)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2183, file: !397, line: 143, baseType: !2200, size: 32, offset: 416)
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !404, line: 80, baseType: !403)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2183, file: !397, line: 146, baseType: !6, size: 32, offset: 448)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2183, file: !397, line: 147, baseType: !6, size: 32, offset: 480)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2183, file: !397, line: 148, baseType: !6, size: 32, offset: 512)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2183, file: !397, line: 151, baseType: !6, size: 32, offset: 544)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2183, file: !397, line: 152, baseType: !6, size: 32, offset: 576)
!2206 = !DIGlobalVariableExpression(var: !2207, expr: !DIExpression())
!2207 = distinct !DIGlobalVariable(name: "pass_fre", scope: !2, file: !3, line: 4858, type: !2180, isLocal: false, isDefinition: true)
!2208 = !DIGlobalVariableExpression(var: !2209, expr: !DIExpression())
!2209 = distinct !DIGlobalVariable(name: "bitmap_set_pool", scope: !2, file: !3, line: 483, type: !2210, isLocal: true, isDefinition: true)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !2211, line: 58, baseType: !2212)
!2211 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !2211, line: 32, size: 704, elements: !2214)
!2214 = !{!2215, !2216, !2217, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2213, file: !2211, line: 34, baseType: !669, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !2213, file: !2211, line: 38, baseType: !1170, size: 64, offset: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !2213, file: !2211, line: 41, baseType: !2218, size: 64, offset: 128)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !2211, line: 30, baseType: !2219)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !2211, line: 26, size: 64, elements: !2221)
!2221 = !{!2222}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2220, file: !2211, line: 28, baseType: !2219, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !2213, file: !2211, line: 45, baseType: !666, size: 64, offset: 192)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !2213, file: !2211, line: 49, baseType: !1170, size: 64, offset: 256)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !2213, file: !2211, line: 51, baseType: !1170, size: 64, offset: 320)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !2213, file: !2211, line: 52, baseType: !1170, size: 64, offset: 384)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !2213, file: !2211, line: 53, baseType: !1170, size: 64, offset: 448)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !2213, file: !2211, line: 54, baseType: !2218, size: 64, offset: 512)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2213, file: !2211, line: 55, baseType: !1170, size: 64, offset: 576)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !2213, file: !2211, line: 56, baseType: !1170, size: 64, offset: 640)
!2231 = !DIGlobalVariableExpression(var: !2232, expr: !DIExpression())
!2232 = distinct !DIGlobalVariable(name: "grand_bitmap_obstack", scope: !2, file: !3, line: 484, type: !713, isLocal: true, isDefinition: true)
!2233 = !DIGlobalVariableExpression(var: !2234, expr: !DIExpression())
!2234 = distinct !DIGlobalVariable(name: "name_to_id", scope: !2, file: !3, line: 245, type: !2111, isLocal: true, isDefinition: true)
!2235 = !DIGlobalVariableExpression(var: !2236, expr: !DIExpression())
!2236 = distinct !DIGlobalVariable(name: "expression_to_id", scope: !2, file: !3, line: 244, type: !1509, isLocal: true, isDefinition: true)
!2237 = !DIGlobalVariableExpression(var: !2238, expr: !DIExpression())
!2238 = distinct !DIGlobalVariable(name: "next_expression_id", scope: !2, file: !3, line: 238, type: !6, isLocal: true, isDefinition: true)
!2239 = !DIGlobalVariableExpression(var: !2240, expr: !DIExpression())
!2240 = distinct !DIGlobalVariable(name: "expressions", scope: !2, file: !3, line: 243, type: !2099, isLocal: true, isDefinition: true)
!2241 = !DIGlobalVariableExpression(var: !2242, expr: !DIExpression())
!2242 = distinct !DIGlobalVariable(name: "do_partial_partial", scope: !2, file: !3, line: 464, type: !663, isLocal: true, isDefinition: true)
!2243 = !DIGlobalVariableExpression(var: !2244, expr: !DIExpression())
!2244 = distinct !DIGlobalVariable(name: "inserted_exprs", scope: !2, file: !3, line: 2667, type: !2139, isLocal: true, isDefinition: true)
!2245 = !DIGlobalVariableExpression(var: !2246, expr: !DIExpression())
!2246 = distinct !DIGlobalVariable(name: "in_fre", scope: !2, file: !3, line: 360, type: !663, isLocal: true, isDefinition: true)
!2247 = !DIGlobalVariableExpression(var: !2248, expr: !DIExpression())
!2248 = distinct !DIGlobalVariable(name: "need_creation", scope: !2, file: !3, line: 2673, type: !2139, isLocal: true, isDefinition: true)
!2249 = !DIGlobalVariableExpression(var: !2250, expr: !DIExpression())
!2250 = distinct !DIGlobalVariable(name: "pretemp", scope: !2, file: !3, line: 490, type: !765, isLocal: true, isDefinition: true)
!2251 = !DIGlobalVariableExpression(var: !2252, expr: !DIExpression())
!2252 = distinct !DIGlobalVariable(name: "storetemp", scope: !2, file: !3, line: 491, type: !765, isLocal: true, isDefinition: true)
!2253 = !DIGlobalVariableExpression(var: !2254, expr: !DIExpression())
!2254 = distinct !DIGlobalVariable(name: "prephitemp", scope: !2, file: !3, line: 492, type: !765, isLocal: true, isDefinition: true)
!2255 = !DIGlobalVariableExpression(var: !2256, expr: !DIExpression())
!2256 = distinct !DIGlobalVariable(name: "postorder", scope: !2, file: !3, line: 441, type: !2144, isLocal: true, isDefinition: true)
!2257 = !DIGlobalVariableExpression(var: !2258, expr: !DIExpression())
!2258 = distinct !DIGlobalVariable(name: "inserted_phi_names", scope: !2, file: !3, line: 2668, type: !688, isLocal: true, isDefinition: true)
!2259 = !DIGlobalVariableExpression(var: !2260, expr: !DIExpression())
!2260 = distinct !DIGlobalVariable(name: "phi_translate_table", scope: !2, file: !3, line: 501, type: !1509, isLocal: true, isDefinition: true)
!2261 = !DIGlobalVariableExpression(var: !2262, expr: !DIExpression())
!2262 = distinct !DIGlobalVariable(name: "pre_expr_pool", scope: !2, file: !3, line: 335, type: !2210, isLocal: true, isDefinition: true)
!2263 = !DIGlobalVariableExpression(var: !2264, expr: !DIExpression())
!2264 = distinct !DIGlobalVariable(name: "need_eh_cleanup", scope: !2, file: !3, line: 496, type: !688, isLocal: true, isDefinition: true)
!2265 = !DIGlobalVariableExpression(var: !2266, expr: !DIExpression())
!2266 = distinct !DIGlobalVariable(name: "has_abnormal_preds", scope: !2, file: !3, line: 2195, type: !2267, isLocal: true, isDefinition: true)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2268, line: 45, baseType: !2269)
!2268 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2268, line: 39, size: 192, elements: !2271)
!2271 = !{!2272, !2273, !2274, !2275}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2270, file: !2268, line: 41, baseType: !662, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2270, file: !2268, line: 42, baseType: !6, size: 32, offset: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2270, file: !2268, line: 43, baseType: !6, size: 32, offset: 96)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2270, file: !2268, line: 44, baseType: !2276, size: 64, offset: 128)
!2276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 64, elements: !752)
!2277 = !DIGlobalVariableExpression(var: !2278, expr: !DIExpression())
!2278 = distinct !DIGlobalVariable(name: "changed_blocks", scope: !2, file: !3, line: 2200, type: !2267, isLocal: true, isDefinition: true)
!2279 = !DIGlobalVariableExpression(var: !2280, expr: !DIExpression())
!2280 = distinct !DIGlobalVariable(name: "pre_stats", scope: !2, file: !3, line: 462, type: !2281, isLocal: true, isDefinition: true)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 445, size: 160, elements: !2282)
!2282 = !{!2283, !2284, !2285, !2286, !2287}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "eliminations", scope: !2281, file: !3, line: 448, baseType: !664, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "insertions", scope: !2281, file: !3, line: 451, baseType: !664, size: 32, offset: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "pa_insert", scope: !2281, file: !3, line: 454, baseType: !664, size: 32, offset: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "phis", scope: !2281, file: !3, line: 457, baseType: !664, size: 32, offset: 96)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "constified", scope: !2281, file: !3, line: 460, baseType: !664, size: 32, offset: 128)
!2288 = !{i32 2, !"Dwarf Version", i32 4}
!2289 = !{i32 2, !"Debug Info Version", i32 3}
!2290 = !{i32 1, !"wchar_size", i32 4}
!2291 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2292 = distinct !DISubprogram(name: "vprintf", scope: !2293, file: !2293, line: 39, type: !2294, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2304)
!2293 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2294 = !DISubroutineType(types: !2295)
!2295 = !{!664, !2296, !2297}
!2296 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !669)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2299)
!2299 = !{!2300, !2301, !2302, !2303}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2298, file: !3, baseType: !6, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2298, file: !3, baseType: !6, size: 32, offset: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2298, file: !3, baseType: !668, size: 64, offset: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2298, file: !3, baseType: !668, size: 64, offset: 128)
!2304 = !{!2305, !2306}
!2305 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2292, file: !2293, line: 39, type: !2296)
!2306 = !DILocalVariable(name: "__arg", arg: 2, scope: !2292, file: !2293, line: 39, type: !2297)
!2307 = !DILocation(line: 0, scope: !2292)
!2308 = !DILocation(line: 41, column: 20, scope: !2292)
!2309 = !DILocation(line: 41, column: 10, scope: !2292)
!2310 = !DILocation(line: 41, column: 3, scope: !2292)
!2311 = distinct !DISubprogram(name: "getchar", scope: !2293, file: !2293, line: 47, type: !2312, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2314)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!664}
!2314 = !{}
!2315 = !DILocation(line: 49, column: 16, scope: !2311)
!2316 = !DILocation(line: 49, column: 10, scope: !2311)
!2317 = !DILocation(line: 49, column: 3, scope: !2311)
!2318 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2293, file: !2293, line: 56, type: !2319, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2372)
!2319 = !DISubroutineType(types: !2320)
!2320 = !{!664, !2321}
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2323, line: 7, baseType: !2324)
!2323 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2325, line: 49, size: 1728, elements: !2326)
!2325 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2326 = !{!2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2342, !2344, !2345, !2346, !2349, !2351, !2352, !2353, !2356, !2358, !2361, !2364, !2365, !2366, !2367, !2368}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2324, file: !2325, line: 51, baseType: !664, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2324, file: !2325, line: 54, baseType: !666, size: 64, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2324, file: !2325, line: 55, baseType: !666, size: 64, offset: 128)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2324, file: !2325, line: 56, baseType: !666, size: 64, offset: 192)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2324, file: !2325, line: 57, baseType: !666, size: 64, offset: 256)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2324, file: !2325, line: 58, baseType: !666, size: 64, offset: 320)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2324, file: !2325, line: 59, baseType: !666, size: 64, offset: 384)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2324, file: !2325, line: 60, baseType: !666, size: 64, offset: 448)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2324, file: !2325, line: 61, baseType: !666, size: 64, offset: 512)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2324, file: !2325, line: 64, baseType: !666, size: 64, offset: 576)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2324, file: !2325, line: 65, baseType: !666, size: 64, offset: 640)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2324, file: !2325, line: 66, baseType: !666, size: 64, offset: 704)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2324, file: !2325, line: 68, baseType: !2340, size: 64, offset: 768)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2341 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2325, line: 36, flags: DIFlagFwdDecl)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2324, file: !2325, line: 70, baseType: !2343, size: 64, offset: 832)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2324, file: !2325, line: 72, baseType: !664, size: 32, offset: 896)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2324, file: !2325, line: 73, baseType: !664, size: 32, offset: 928)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2324, file: !2325, line: 74, baseType: !2347, size: 64, offset: 960)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2348, line: 152, baseType: !723)
!2348 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2324, file: !2325, line: 77, baseType: !2350, size: 16, offset: 1024)
!2350 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2324, file: !2325, line: 78, baseType: !1879, size: 8, offset: 1040)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2324, file: !2325, line: 79, baseType: !860, size: 8, offset: 1048)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2324, file: !2325, line: 81, baseType: !2354, size: 64, offset: 1088)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2325, line: 43, baseType: null)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2324, file: !2325, line: 89, baseType: !2357, size: 64, offset: 1152)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2348, line: 153, baseType: !723)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2324, file: !2325, line: 91, baseType: !2359, size: 64, offset: 1216)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2325, line: 37, flags: DIFlagFwdDecl)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2324, file: !2325, line: 92, baseType: !2362, size: 64, offset: 1280)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2363 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2325, line: 38, flags: DIFlagFwdDecl)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2324, file: !2325, line: 93, baseType: !2343, size: 64, offset: 1344)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2324, file: !2325, line: 94, baseType: !668, size: 64, offset: 1408)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2324, file: !2325, line: 95, baseType: !1170, size: 64, offset: 1472)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2324, file: !2325, line: 96, baseType: !664, size: 32, offset: 1536)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2324, file: !2325, line: 98, baseType: !2369, size: 160, offset: 1568)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 160, elements: !2370)
!2370 = !{!2371}
!2371 = !DISubrange(count: 20)
!2372 = !{!2373}
!2373 = !DILocalVariable(name: "__fp", arg: 1, scope: !2318, file: !2293, line: 56, type: !2321)
!2374 = !DILocation(line: 0, scope: !2318)
!2375 = !DILocation(line: 58, column: 10, scope: !2318)
!2376 = !DILocation(line: 58, column: 3, scope: !2318)
!2377 = distinct !DISubprogram(name: "getc_unlocked", scope: !2293, file: !2293, line: 66, type: !2319, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2378)
!2378 = !{!2379}
!2379 = !DILocalVariable(name: "__fp", arg: 1, scope: !2377, file: !2293, line: 66, type: !2321)
!2380 = !DILocation(line: 0, scope: !2377)
!2381 = !DILocation(line: 68, column: 10, scope: !2377)
!2382 = !DILocation(line: 68, column: 3, scope: !2377)
!2383 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2293, file: !2293, line: 73, type: !2312, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2314)
!2384 = !DILocation(line: 75, column: 10, scope: !2383)
!2385 = !DILocation(line: 75, column: 3, scope: !2383)
!2386 = distinct !DISubprogram(name: "putchar", scope: !2293, file: !2293, line: 82, type: !2387, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2389)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{!664, !664}
!2389 = !{!2390}
!2390 = !DILocalVariable(name: "__c", arg: 1, scope: !2386, file: !2293, line: 82, type: !664)
!2391 = !DILocation(line: 0, scope: !2386)
!2392 = !DILocation(line: 84, column: 21, scope: !2386)
!2393 = !DILocation(line: 84, column: 10, scope: !2386)
!2394 = !DILocation(line: 84, column: 3, scope: !2386)
!2395 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2293, file: !2293, line: 91, type: !2396, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2398)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{!664, !664, !2321}
!2398 = !{!2399, !2400}
!2399 = !DILocalVariable(name: "__c", arg: 1, scope: !2395, file: !2293, line: 91, type: !664)
!2400 = !DILocalVariable(name: "__stream", arg: 2, scope: !2395, file: !2293, line: 91, type: !2321)
!2401 = !DILocation(line: 0, scope: !2395)
!2402 = !DILocation(line: 93, column: 10, scope: !2395)
!2403 = !DILocation(line: 93, column: 3, scope: !2395)
!2404 = distinct !DISubprogram(name: "putc_unlocked", scope: !2293, file: !2293, line: 101, type: !2396, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2405)
!2405 = !{!2406, !2407}
!2406 = !DILocalVariable(name: "__c", arg: 1, scope: !2404, file: !2293, line: 101, type: !664)
!2407 = !DILocalVariable(name: "__stream", arg: 2, scope: !2404, file: !2293, line: 101, type: !2321)
!2408 = !DILocation(line: 0, scope: !2404)
!2409 = !DILocation(line: 103, column: 10, scope: !2404)
!2410 = !DILocation(line: 103, column: 3, scope: !2404)
!2411 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2293, file: !2293, line: 108, type: !2387, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2412)
!2412 = !{!2413}
!2413 = !DILocalVariable(name: "__c", arg: 1, scope: !2411, file: !2293, line: 108, type: !664)
!2414 = !DILocation(line: 0, scope: !2411)
!2415 = !DILocation(line: 110, column: 10, scope: !2411)
!2416 = !DILocation(line: 110, column: 3, scope: !2411)
!2417 = distinct !DISubprogram(name: "getline", scope: !2293, file: !2293, line: 118, type: !2418, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2422)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{!2420, !665, !2421, !2321}
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2348, line: 193, baseType: !723)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!2422 = !{!2423, !2424, !2425}
!2423 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2417, file: !2293, line: 118, type: !665)
!2424 = !DILocalVariable(name: "__n", arg: 2, scope: !2417, file: !2293, line: 118, type: !2421)
!2425 = !DILocalVariable(name: "__stream", arg: 3, scope: !2417, file: !2293, line: 118, type: !2321)
!2426 = !DILocation(line: 0, scope: !2417)
!2427 = !DILocation(line: 120, column: 10, scope: !2417)
!2428 = !DILocation(line: 120, column: 3, scope: !2417)
!2429 = distinct !DISubprogram(name: "feof_unlocked", scope: !2293, file: !2293, line: 128, type: !2319, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2430)
!2430 = !{!2431}
!2431 = !DILocalVariable(name: "__stream", arg: 1, scope: !2429, file: !2293, line: 128, type: !2321)
!2432 = !DILocation(line: 0, scope: !2429)
!2433 = !DILocation(line: 130, column: 10, scope: !2429)
!2434 = !DILocation(line: 130, column: 3, scope: !2429)
!2435 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2293, file: !2293, line: 135, type: !2319, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2436)
!2436 = !{!2437}
!2437 = !DILocalVariable(name: "__stream", arg: 1, scope: !2435, file: !2293, line: 135, type: !2321)
!2438 = !DILocation(line: 0, scope: !2435)
!2439 = !DILocation(line: 137, column: 10, scope: !2435)
!2440 = !DILocation(line: 137, column: 3, scope: !2435)
!2441 = distinct !DISubprogram(name: "tolower", scope: !2442, file: !2442, line: 207, type: !2387, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2443)
!2442 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2443 = !{!2444}
!2444 = !DILocalVariable(name: "__c", arg: 1, scope: !2441, file: !2442, line: 207, type: !664)
!2445 = !DILocation(line: 0, scope: !2441)
!2446 = !DILocation(line: 209, column: 22, scope: !2441)
!2447 = !DILocation(line: 209, column: 39, scope: !2441)
!2448 = !DILocation(line: 209, column: 38, scope: !2441)
!2449 = !DILocation(line: 209, column: 37, scope: !2441)
!2450 = !DILocation(line: 209, column: 10, scope: !2441)
!2451 = !DILocation(line: 209, column: 3, scope: !2441)
!2452 = distinct !DISubprogram(name: "toupper", scope: !2442, file: !2442, line: 213, type: !2387, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2453)
!2453 = !{!2454}
!2454 = !DILocalVariable(name: "__c", arg: 1, scope: !2452, file: !2442, line: 213, type: !664)
!2455 = !DILocation(line: 0, scope: !2452)
!2456 = !DILocation(line: 215, column: 22, scope: !2452)
!2457 = !DILocation(line: 215, column: 39, scope: !2452)
!2458 = !DILocation(line: 215, column: 38, scope: !2452)
!2459 = !DILocation(line: 215, column: 37, scope: !2452)
!2460 = !DILocation(line: 215, column: 10, scope: !2452)
!2461 = !DILocation(line: 215, column: 3, scope: !2452)
!2462 = distinct !DISubprogram(name: "atoi", scope: !2463, file: !2463, line: 361, type: !2464, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2466)
!2463 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2464 = !DISubroutineType(types: !2465)
!2465 = !{!664, !669}
!2466 = !{!2467}
!2467 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2462, file: !2463, line: 361, type: !669)
!2468 = !DILocation(line: 0, scope: !2462)
!2469 = !DILocation(line: 363, column: 16, scope: !2462)
!2470 = !DILocation(line: 363, column: 10, scope: !2462)
!2471 = !DILocation(line: 363, column: 3, scope: !2462)
!2472 = distinct !DISubprogram(name: "atol", scope: !2463, file: !2463, line: 366, type: !2473, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2475)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{!723, !669}
!2475 = !{!2476}
!2476 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2472, file: !2463, line: 366, type: !669)
!2477 = !DILocation(line: 0, scope: !2472)
!2478 = !DILocation(line: 368, column: 10, scope: !2472)
!2479 = !DILocation(line: 368, column: 3, scope: !2472)
!2480 = distinct !DISubprogram(name: "atoll", scope: !2463, file: !2463, line: 373, type: !2481, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2484)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!2483, !669}
!2483 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2484 = !{!2485}
!2485 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2480, file: !2463, line: 373, type: !669)
!2486 = !DILocation(line: 0, scope: !2480)
!2487 = !DILocation(line: 375, column: 10, scope: !2480)
!2488 = !DILocation(line: 375, column: 3, scope: !2480)
!2489 = distinct !DISubprogram(name: "bsearch", scope: !2490, file: !2490, line: 20, type: !2491, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2494)
!2490 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!668, !1520, !1520, !1170, !1170, !2493}
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2463, line: 808, baseType: !1524)
!2494 = !{!2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504}
!2495 = !DILocalVariable(name: "__key", arg: 1, scope: !2489, file: !2490, line: 20, type: !1520)
!2496 = !DILocalVariable(name: "__base", arg: 2, scope: !2489, file: !2490, line: 20, type: !1520)
!2497 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2489, file: !2490, line: 20, type: !1170)
!2498 = !DILocalVariable(name: "__size", arg: 4, scope: !2489, file: !2490, line: 20, type: !1170)
!2499 = !DILocalVariable(name: "__compar", arg: 5, scope: !2489, file: !2490, line: 21, type: !2493)
!2500 = !DILocalVariable(name: "__l", scope: !2489, file: !2490, line: 23, type: !1170)
!2501 = !DILocalVariable(name: "__u", scope: !2489, file: !2490, line: 23, type: !1170)
!2502 = !DILocalVariable(name: "__idx", scope: !2489, file: !2490, line: 23, type: !1170)
!2503 = !DILocalVariable(name: "__p", scope: !2489, file: !2490, line: 24, type: !1520)
!2504 = !DILocalVariable(name: "__comparison", scope: !2489, file: !2490, line: 25, type: !664)
!2505 = !DILocation(line: 0, scope: !2489)
!2506 = !DILocation(line: 29, column: 3, scope: !2489)
!2507 = !DILocation(line: 27, column: 7, scope: !2489)
!2508 = !DILocation(line: 29, column: 14, scope: !2489)
!2509 = !DILocation(line: 31, column: 20, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2489, file: !2490, line: 30, column: 5)
!2511 = !DILocation(line: 31, column: 27, scope: !2510)
!2512 = !DILocation(line: 32, column: 56, scope: !2510)
!2513 = !DILocation(line: 32, column: 47, scope: !2510)
!2514 = !DILocation(line: 33, column: 22, scope: !2510)
!2515 = !DILocation(line: 34, column: 24, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2510, file: !2490, line: 34, column: 11)
!2517 = !DILocation(line: 34, column: 11, scope: !2510)
!2518 = !DILocation(line: 36, column: 29, scope: !2519)
!2519 = distinct !DILexicalBlock(scope: !2516, file: !2490, line: 36, column: 16)
!2520 = !DILocation(line: 36, column: 16, scope: !2516)
!2521 = !DILocation(line: 37, column: 14, scope: !2519)
!2522 = distinct !{!2522, !2506, !2523}
!2523 = !DILocation(line: 40, column: 5, scope: !2489)
!2524 = !DILocation(line: 43, column: 1, scope: !2489)
!2525 = distinct !DISubprogram(name: "atof", scope: !2526, file: !2526, line: 25, type: !2527, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2530)
!2526 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2527 = !DISubroutineType(types: !2528)
!2528 = !{!2529, !669}
!2529 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2530 = !{!2531}
!2531 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2525, file: !2526, line: 25, type: !669)
!2532 = !DILocation(line: 0, scope: !2525)
!2533 = !DILocation(line: 27, column: 10, scope: !2525)
!2534 = !DILocation(line: 27, column: 3, scope: !2525)
!2535 = distinct !DISubprogram(name: "strtoimax", scope: !2536, file: !2536, line: 324, type: !2537, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2543)
!2536 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2537 = !DISubroutineType(types: !2538)
!2538 = !{!2539, !2296, !2542, !664}
!2539 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2540, line: 101, baseType: !2541)
!2540 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2348, line: 72, baseType: !723)
!2542 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !665)
!2543 = !{!2544, !2545, !2546}
!2544 = !DILocalVariable(name: "nptr", arg: 1, scope: !2535, file: !2536, line: 324, type: !2296)
!2545 = !DILocalVariable(name: "endptr", arg: 2, scope: !2535, file: !2536, line: 324, type: !2542)
!2546 = !DILocalVariable(name: "base", arg: 3, scope: !2535, file: !2536, line: 324, type: !664)
!2547 = !DILocation(line: 0, scope: !2535)
!2548 = !DILocation(line: 327, column: 10, scope: !2535)
!2549 = !DILocation(line: 327, column: 3, scope: !2535)
!2550 = distinct !DISubprogram(name: "strtoumax", scope: !2536, file: !2536, line: 336, type: !2551, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2555)
!2551 = !DISubroutineType(types: !2552)
!2552 = !{!2553, !2296, !2542, !664}
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2540, line: 102, baseType: !2554)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2348, line: 73, baseType: !706)
!2555 = !{!2556, !2557, !2558}
!2556 = !DILocalVariable(name: "nptr", arg: 1, scope: !2550, file: !2536, line: 336, type: !2296)
!2557 = !DILocalVariable(name: "endptr", arg: 2, scope: !2550, file: !2536, line: 336, type: !2542)
!2558 = !DILocalVariable(name: "base", arg: 3, scope: !2550, file: !2536, line: 336, type: !664)
!2559 = !DILocation(line: 0, scope: !2550)
!2560 = !DILocation(line: 339, column: 10, scope: !2550)
!2561 = !DILocation(line: 339, column: 3, scope: !2550)
!2562 = distinct !DISubprogram(name: "wcstoimax", scope: !2536, file: !2536, line: 348, type: !2563, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2572)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{!2539, !2565, !2569, !664}
!2565 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2566)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2568)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2536, line: 34, baseType: !664)
!2569 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2570)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2572 = !{!2573, !2574, !2575}
!2573 = !DILocalVariable(name: "nptr", arg: 1, scope: !2562, file: !2536, line: 348, type: !2565)
!2574 = !DILocalVariable(name: "endptr", arg: 2, scope: !2562, file: !2536, line: 348, type: !2569)
!2575 = !DILocalVariable(name: "base", arg: 3, scope: !2562, file: !2536, line: 348, type: !664)
!2576 = !DILocation(line: 0, scope: !2562)
!2577 = !DILocation(line: 351, column: 10, scope: !2562)
!2578 = !DILocation(line: 351, column: 3, scope: !2562)
!2579 = distinct !DISubprogram(name: "wcstoumax", scope: !2536, file: !2536, line: 362, type: !2580, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2582)
!2580 = !DISubroutineType(types: !2581)
!2581 = !{!2553, !2565, !2569, !664}
!2582 = !{!2583, !2584, !2585}
!2583 = !DILocalVariable(name: "nptr", arg: 1, scope: !2579, file: !2536, line: 362, type: !2565)
!2584 = !DILocalVariable(name: "endptr", arg: 2, scope: !2579, file: !2536, line: 362, type: !2569)
!2585 = !DILocalVariable(name: "base", arg: 3, scope: !2579, file: !2536, line: 362, type: !664)
!2586 = !DILocation(line: 0, scope: !2579)
!2587 = !DILocation(line: 365, column: 10, scope: !2579)
!2588 = !DILocation(line: 365, column: 3, scope: !2579)
!2589 = distinct !DISubprogram(name: "stat", scope: !2590, file: !2590, line: 453, type: !2591, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2628)
!2590 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2591 = !DISubroutineType(types: !2592)
!2592 = !{!664, !669, !2593}
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2595, line: 46, size: 1152, elements: !2596)
!2595 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2596 = !{!2597, !2599, !2601, !2603, !2605, !2607, !2609, !2610, !2611, !2612, !2614, !2616, !2624, !2625, !2626}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2594, file: !2595, line: 48, baseType: !2598, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2348, line: 145, baseType: !706)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2594, file: !2595, line: 53, baseType: !2600, size: 64, offset: 64)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2348, line: 148, baseType: !706)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2594, file: !2595, line: 61, baseType: !2602, size: 64, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2348, line: 151, baseType: !706)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2594, file: !2595, line: 62, baseType: !2604, size: 32, offset: 192)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2348, line: 150, baseType: !6)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2594, file: !2595, line: 64, baseType: !2606, size: 32, offset: 224)
!2606 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2348, line: 146, baseType: !6)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2594, file: !2595, line: 65, baseType: !2608, size: 32, offset: 256)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2348, line: 147, baseType: !6)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2594, file: !2595, line: 67, baseType: !664, size: 32, offset: 288)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2594, file: !2595, line: 69, baseType: !2598, size: 64, offset: 320)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2594, file: !2595, line: 74, baseType: !2347, size: 64, offset: 384)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2594, file: !2595, line: 78, baseType: !2613, size: 64, offset: 448)
!2613 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2348, line: 174, baseType: !723)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2594, file: !2595, line: 80, baseType: !2615, size: 64, offset: 512)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2348, line: 179, baseType: !723)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2594, file: !2595, line: 91, baseType: !2617, size: 128, offset: 576)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2618, line: 10, size: 128, elements: !2619)
!2618 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2619 = !{!2620, !2622}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2617, file: !2618, line: 12, baseType: !2621, size: 64)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2348, line: 160, baseType: !723)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2617, file: !2618, line: 16, baseType: !2623, size: 64, offset: 64)
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2348, line: 196, baseType: !723)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2594, file: !2595, line: 92, baseType: !2617, size: 128, offset: 704)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2594, file: !2595, line: 93, baseType: !2617, size: 128, offset: 832)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2594, file: !2595, line: 106, baseType: !2627, size: 192, offset: 960)
!2627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2623, size: 192, elements: !836)
!2628 = !{!2629, !2630}
!2629 = !DILocalVariable(name: "__path", arg: 1, scope: !2589, file: !2590, line: 453, type: !669)
!2630 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2589, file: !2590, line: 453, type: !2593)
!2631 = !DILocation(line: 0, scope: !2589)
!2632 = !DILocation(line: 455, column: 10, scope: !2589)
!2633 = !DILocation(line: 455, column: 3, scope: !2589)
!2634 = distinct !DISubprogram(name: "lstat", scope: !2590, file: !2590, line: 460, type: !2591, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2635)
!2635 = !{!2636, !2637}
!2636 = !DILocalVariable(name: "__path", arg: 1, scope: !2634, file: !2590, line: 460, type: !669)
!2637 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2634, file: !2590, line: 460, type: !2593)
!2638 = !DILocation(line: 0, scope: !2634)
!2639 = !DILocation(line: 462, column: 10, scope: !2634)
!2640 = !DILocation(line: 462, column: 3, scope: !2634)
!2641 = distinct !DISubprogram(name: "fstat", scope: !2590, file: !2590, line: 467, type: !2642, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2644)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{!664, !664, !2593}
!2644 = !{!2645, !2646}
!2645 = !DILocalVariable(name: "__fd", arg: 1, scope: !2641, file: !2590, line: 467, type: !664)
!2646 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2641, file: !2590, line: 467, type: !2593)
!2647 = !DILocation(line: 0, scope: !2641)
!2648 = !DILocation(line: 469, column: 10, scope: !2641)
!2649 = !DILocation(line: 469, column: 3, scope: !2641)
!2650 = distinct !DISubprogram(name: "fstatat", scope: !2590, file: !2590, line: 474, type: !2651, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2653)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{!664, !664, !669, !2593, !664}
!2653 = !{!2654, !2655, !2656, !2657}
!2654 = !DILocalVariable(name: "__fd", arg: 1, scope: !2650, file: !2590, line: 474, type: !664)
!2655 = !DILocalVariable(name: "__filename", arg: 2, scope: !2650, file: !2590, line: 474, type: !669)
!2656 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2650, file: !2590, line: 474, type: !2593)
!2657 = !DILocalVariable(name: "__flag", arg: 4, scope: !2650, file: !2590, line: 474, type: !664)
!2658 = !DILocation(line: 0, scope: !2650)
!2659 = !DILocation(line: 477, column: 10, scope: !2650)
!2660 = !DILocation(line: 477, column: 3, scope: !2650)
!2661 = distinct !DISubprogram(name: "mknod", scope: !2590, file: !2590, line: 483, type: !2662, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2664)
!2662 = !DISubroutineType(types: !2663)
!2663 = !{!664, !669, !2604, !2598}
!2664 = !{!2665, !2666, !2667}
!2665 = !DILocalVariable(name: "__path", arg: 1, scope: !2661, file: !2590, line: 483, type: !669)
!2666 = !DILocalVariable(name: "__mode", arg: 2, scope: !2661, file: !2590, line: 483, type: !2604)
!2667 = !DILocalVariable(name: "__dev", arg: 3, scope: !2661, file: !2590, line: 483, type: !2598)
!2668 = !DILocation(line: 0, scope: !2661)
!2669 = !DILocation(line: 485, column: 10, scope: !2661)
!2670 = !DILocation(line: 485, column: 3, scope: !2661)
!2671 = distinct !DISubprogram(name: "mknodat", scope: !2590, file: !2590, line: 491, type: !2672, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2674)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{!664, !664, !669, !2604, !2598}
!2674 = !{!2675, !2676, !2677, !2678}
!2675 = !DILocalVariable(name: "__fd", arg: 1, scope: !2671, file: !2590, line: 491, type: !664)
!2676 = !DILocalVariable(name: "__path", arg: 2, scope: !2671, file: !2590, line: 491, type: !669)
!2677 = !DILocalVariable(name: "__mode", arg: 3, scope: !2671, file: !2590, line: 491, type: !2604)
!2678 = !DILocalVariable(name: "__dev", arg: 4, scope: !2671, file: !2590, line: 491, type: !2598)
!2679 = !DILocation(line: 0, scope: !2671)
!2680 = !DILocation(line: 494, column: 10, scope: !2671)
!2681 = !DILocation(line: 494, column: 3, scope: !2671)
!2682 = distinct !DISubprogram(name: "stat64", scope: !2590, file: !2590, line: 502, type: !2683, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2705)
!2683 = !DISubroutineType(types: !2684)
!2684 = !{!664, !669, !2685}
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2595, line: 119, size: 1152, elements: !2687)
!2687 = !{!2688, !2689, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2701, !2702, !2703, !2704}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2686, file: !2595, line: 121, baseType: !2598, size: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2686, file: !2595, line: 123, baseType: !2690, size: 64, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2348, line: 149, baseType: !706)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2686, file: !2595, line: 124, baseType: !2602, size: 64, offset: 128)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2686, file: !2595, line: 125, baseType: !2604, size: 32, offset: 192)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2686, file: !2595, line: 132, baseType: !2606, size: 32, offset: 224)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2686, file: !2595, line: 133, baseType: !2608, size: 32, offset: 256)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2686, file: !2595, line: 135, baseType: !664, size: 32, offset: 288)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2686, file: !2595, line: 136, baseType: !2598, size: 64, offset: 320)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2686, file: !2595, line: 137, baseType: !2347, size: 64, offset: 384)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2686, file: !2595, line: 143, baseType: !2613, size: 64, offset: 448)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2686, file: !2595, line: 144, baseType: !2700, size: 64, offset: 512)
!2700 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2348, line: 180, baseType: !723)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2686, file: !2595, line: 152, baseType: !2617, size: 128, offset: 576)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2686, file: !2595, line: 153, baseType: !2617, size: 128, offset: 704)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2686, file: !2595, line: 154, baseType: !2617, size: 128, offset: 832)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2686, file: !2595, line: 164, baseType: !2627, size: 192, offset: 960)
!2705 = !{!2706, !2707}
!2706 = !DILocalVariable(name: "__path", arg: 1, scope: !2682, file: !2590, line: 502, type: !669)
!2707 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2682, file: !2590, line: 502, type: !2685)
!2708 = !DILocation(line: 0, scope: !2682)
!2709 = !DILocation(line: 504, column: 10, scope: !2682)
!2710 = !DILocation(line: 504, column: 3, scope: !2682)
!2711 = distinct !DISubprogram(name: "lstat64", scope: !2590, file: !2590, line: 509, type: !2683, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2712)
!2712 = !{!2713, !2714}
!2713 = !DILocalVariable(name: "__path", arg: 1, scope: !2711, file: !2590, line: 509, type: !669)
!2714 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2711, file: !2590, line: 509, type: !2685)
!2715 = !DILocation(line: 0, scope: !2711)
!2716 = !DILocation(line: 511, column: 10, scope: !2711)
!2717 = !DILocation(line: 511, column: 3, scope: !2711)
!2718 = distinct !DISubprogram(name: "fstat64", scope: !2590, file: !2590, line: 516, type: !2719, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2721)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{!664, !664, !2685}
!2721 = !{!2722, !2723}
!2722 = !DILocalVariable(name: "__fd", arg: 1, scope: !2718, file: !2590, line: 516, type: !664)
!2723 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2718, file: !2590, line: 516, type: !2685)
!2724 = !DILocation(line: 0, scope: !2718)
!2725 = !DILocation(line: 518, column: 10, scope: !2718)
!2726 = !DILocation(line: 518, column: 3, scope: !2718)
!2727 = distinct !DISubprogram(name: "fstatat64", scope: !2590, file: !2590, line: 523, type: !2728, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2730)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!664, !664, !669, !2685, !664}
!2730 = !{!2731, !2732, !2733, !2734}
!2731 = !DILocalVariable(name: "__fd", arg: 1, scope: !2727, file: !2590, line: 523, type: !664)
!2732 = !DILocalVariable(name: "__filename", arg: 2, scope: !2727, file: !2590, line: 523, type: !669)
!2733 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2727, file: !2590, line: 523, type: !2685)
!2734 = !DILocalVariable(name: "__flag", arg: 4, scope: !2727, file: !2590, line: 523, type: !664)
!2735 = !DILocation(line: 0, scope: !2727)
!2736 = !DILocation(line: 526, column: 10, scope: !2727)
!2737 = !DILocation(line: 526, column: 3, scope: !2727)
!2738 = distinct !DISubprogram(name: "add_to_value", scope: !3, file: !3, line: 597, type: !2739, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2741)
!2739 = !DISubroutineType(types: !2740)
!2740 = !{null, !6, !754}
!2741 = !{!2742, !2743, !2744}
!2742 = !DILocalVariable(name: "v", arg: 1, scope: !2738, file: !3, line: 597, type: !6)
!2743 = !DILocalVariable(name: "e", arg: 2, scope: !2738, file: !3, line: 597, type: !754)
!2744 = !DILocalVariable(name: "set", scope: !2738, file: !3, line: 599, type: !683)
!2745 = !DILocation(line: 0, scope: !2738)
!2746 = !DILocation(line: 601, column: 3, scope: !2738)
!2747 = !DILocation(line: 603, column: 12, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 603, column: 7)
!2749 = !DILocation(line: 603, column: 9, scope: !2748)
!2750 = !DILocation(line: 603, column: 7, scope: !2738)
!2751 = !DILocation(line: 605, column: 7, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2748, file: !3, line: 604, column: 5)
!2753 = !DILocation(line: 607, column: 5, scope: !2752)
!2754 = !DILocation(line: 609, column: 9, scope: !2738)
!2755 = !DILocation(line: 610, column: 8, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 610, column: 7)
!2757 = !DILocation(line: 610, column: 7, scope: !2738)
!2758 = !DILocation(line: 612, column: 13, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2756, file: !3, line: 611, column: 5)
!2760 = !DILocation(line: 613, column: 7, scope: !2759)
!2761 = !DILocation(line: 614, column: 5, scope: !2759)
!2762 = !DILocation(line: 616, column: 3, scope: !2738)
!2763 = !DILocation(line: 617, column: 1, scope: !2738)
!2764 = distinct !DISubprogram(name: "get_expr_value_id", scope: !3, file: !3, line: 633, type: !2765, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2767)
!2765 = !DISubroutineType(types: !2766)
!2766 = !{!6, !754}
!2767 = !{!2768, !2769}
!2768 = !DILocalVariable(name: "expr", arg: 1, scope: !2764, file: !3, line: 633, type: !754)
!2769 = !DILocalVariable(name: "id", scope: !2770, file: !3, line: 639, type: !6)
!2770 = distinct !DILexicalBlock(scope: !2771, file: !3, line: 638, column: 7)
!2771 = distinct !DILexicalBlock(scope: !2764, file: !3, line: 636, column: 5)
!2772 = !DILocation(line: 0, scope: !2764)
!2773 = !DILocation(line: 635, column: 17, scope: !2764)
!2774 = !DILocation(line: 635, column: 3, scope: !2764)
!2775 = !DILocation(line: 640, column: 30, scope: !2770)
!2776 = !DILocation(line: 640, column: 7, scope: !2770)
!2777 = !DILocation(line: 0, scope: !2770)
!2778 = !DILocation(line: 641, column: 9, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 641, column: 6)
!2780 = !DILocation(line: 641, column: 6, scope: !2770)
!2781 = !DILocation(line: 643, column: 43, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2779, file: !3, line: 642, column: 4)
!2783 = !DILocation(line: 643, column: 11, scope: !2782)
!2784 = !DILocation(line: 644, column: 6, scope: !2782)
!2785 = !DILocation(line: 645, column: 4, scope: !2782)
!2786 = !DILocation(line: 649, column: 23, scope: !2771)
!2787 = !DILocation(line: 649, column: 14, scope: !2771)
!2788 = !DILocation(line: 649, column: 46, scope: !2771)
!2789 = !DILocation(line: 649, column: 7, scope: !2771)
!2790 = !DILocation(line: 651, column: 14, scope: !2771)
!2791 = !DILocation(line: 651, column: 36, scope: !2771)
!2792 = !DILocation(line: 651, column: 7, scope: !2771)
!2793 = !DILocation(line: 653, column: 14, scope: !2771)
!2794 = !DILocation(line: 653, column: 41, scope: !2771)
!2795 = !DILocation(line: 653, column: 7, scope: !2771)
!2796 = !DILocation(line: 655, column: 7, scope: !2771)
!2797 = !DILocation(line: 658, column: 5, scope: !2764)
!2798 = !DILocation(line: 660, column: 1, scope: !2764)
!2799 = distinct !DISubprogram(name: "VEC_bitmap_set_t_base_length", scope: !3, file: !3, line: 377, type: !2800, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2804)
!2800 = !DISubroutineType(types: !2801)
!2801 = !{!6, !2802}
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !676)
!2804 = !{!2805}
!2805 = !DILocalVariable(name: "vec_", arg: 1, scope: !2799, file: !3, line: 377, type: !2802)
!2806 = !DILocation(line: 0, scope: !2799)
!2807 = !DILocation(line: 377, column: 1, scope: !2799)
!2808 = distinct !DISubprogram(name: "VEC_bitmap_set_t_heap_safe_grow_cleared", scope: !3, file: !3, line: 378, type: !2809, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2812)
!2809 = !DISubroutineType(types: !2810)
!2810 = !{null, !2811, !664}
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!2812 = !{!2813, !2814, !2815}
!2813 = !DILocalVariable(name: "vec_", arg: 1, scope: !2808, file: !3, line: 378, type: !2811)
!2814 = !DILocalVariable(name: "size_", arg: 2, scope: !2808, file: !3, line: 378, type: !664)
!2815 = !DILocalVariable(name: "oldsize", scope: !2808, file: !3, line: 378, type: !664)
!2816 = !DILocation(line: 0, scope: !2808)
!2817 = !DILocation(line: 378, column: 1, scope: !2808)
!2818 = distinct !DISubprogram(name: "VEC_bitmap_set_t_base_index", scope: !3, file: !3, line: 377, type: !2819, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2821)
!2819 = !DISubroutineType(types: !2820)
!2820 = !{!683, !2802, !6}
!2821 = !{!2822, !2823}
!2822 = !DILocalVariable(name: "vec_", arg: 1, scope: !2818, file: !3, line: 377, type: !2802)
!2823 = !DILocalVariable(name: "ix_", arg: 2, scope: !2818, file: !3, line: 377, type: !6)
!2824 = !DILocation(line: 0, scope: !2818)
!2825 = !DILocation(line: 377, column: 1, scope: !2818)
!2826 = distinct !DISubprogram(name: "bitmap_set_new", scope: !3, file: !3, line: 622, type: !2827, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2829)
!2827 = !DISubroutineType(types: !2828)
!2828 = !{!683}
!2829 = !{!2830}
!2830 = !DILocalVariable(name: "ret", scope: !2826, file: !3, line: 624, type: !683)
!2831 = !DILocation(line: 624, column: 49, scope: !2826)
!2832 = !DILocation(line: 624, column: 37, scope: !2826)
!2833 = !DILocation(line: 624, column: 22, scope: !2826)
!2834 = !DILocation(line: 0, scope: !2826)
!2835 = !DILocation(line: 625, column: 22, scope: !2826)
!2836 = !DILocation(line: 625, column: 8, scope: !2826)
!2837 = !DILocation(line: 625, column: 20, scope: !2826)
!2838 = !DILocation(line: 626, column: 17, scope: !2826)
!2839 = !DILocation(line: 626, column: 8, scope: !2826)
!2840 = !DILocation(line: 626, column: 15, scope: !2826)
!2841 = !DILocation(line: 627, column: 3, scope: !2826)
!2842 = distinct !DISubprogram(name: "VEC_bitmap_set_t_base_replace", scope: !3, file: !3, line: 377, type: !2843, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2846)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{!683, !2845, !6, !683}
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!2846 = !{!2847, !2848, !2849, !2850}
!2847 = !DILocalVariable(name: "vec_", arg: 1, scope: !2842, file: !3, line: 377, type: !2845)
!2848 = !DILocalVariable(name: "ix_", arg: 2, scope: !2842, file: !3, line: 377, type: !6)
!2849 = !DILocalVariable(name: "obj_", arg: 3, scope: !2842, file: !3, line: 377, type: !683)
!2850 = !DILocalVariable(name: "old_obj_", scope: !2842, file: !3, line: 377, type: !683)
!2851 = !DILocation(line: 0, scope: !2842)
!2852 = !DILocation(line: 377, column: 1, scope: !2842)
!2853 = distinct !DISubprogram(name: "bitmap_insert_into_set_1", scope: !3, file: !3, line: 676, type: !2854, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2856)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{null, !683, !754, !6, !663}
!2856 = !{!2857, !2858, !2859, !2860}
!2857 = !DILocalVariable(name: "set", arg: 1, scope: !2853, file: !3, line: 676, type: !683)
!2858 = !DILocalVariable(name: "expr", arg: 2, scope: !2853, file: !3, line: 676, type: !754)
!2859 = !DILocalVariable(name: "val", arg: 3, scope: !2853, file: !3, line: 677, type: !6)
!2860 = !DILocalVariable(name: "allow_constants", arg: 4, scope: !2853, file: !3, line: 677, type: !663)
!2861 = !DILocation(line: 0, scope: !2853)
!2862 = !DILocation(line: 679, column: 7, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 679, column: 7)
!2864 = !DILocation(line: 679, column: 23, scope: !2863)
!2865 = !DILocation(line: 679, column: 27, scope: !2863)
!2866 = !DILocation(line: 679, column: 7, scope: !2853)
!2867 = !DILocation(line: 683, column: 28, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 680, column: 5)
!2869 = !DILocation(line: 683, column: 7, scope: !2868)
!2870 = !DILocation(line: 684, column: 28, scope: !2868)
!2871 = !DILocation(line: 684, column: 41, scope: !2868)
!2872 = !DILocation(line: 684, column: 7, scope: !2868)
!2873 = !DILocation(line: 685, column: 5, scope: !2868)
!2874 = !DILocation(line: 686, column: 1, scope: !2853)
!2875 = distinct !DISubprogram(name: "debug_pre_expr", scope: !3, file: !3, line: 999, type: !2876, scopeLine: 1000, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2878)
!2876 = !DISubroutineType(types: !2877)
!2877 = !{null, !754}
!2878 = !{!2879}
!2879 = !DILocalVariable(name: "e", arg: 1, scope: !2875, file: !3, line: 999, type: !754)
!2880 = !DILocation(line: 0, scope: !2875)
!2881 = !DILocation(line: 1001, column: 19, scope: !2875)
!2882 = !DILocation(line: 1001, column: 3, scope: !2875)
!2883 = !DILocation(line: 1002, column: 12, scope: !2875)
!2884 = !DILocation(line: 1002, column: 3, scope: !2875)
!2885 = !DILocation(line: 1003, column: 1, scope: !2875)
!2886 = distinct !DISubprogram(name: "print_pre_expr", scope: !3, file: !3, line: 920, type: !2887, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2890)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{null, !2321, !2889}
!2889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!2890 = !{!2891, !2892, !2893, !2896, !2897, !2901, !2902, !2903}
!2891 = !DILocalVariable(name: "outfile", arg: 1, scope: !2886, file: !3, line: 920, type: !2321)
!2892 = !DILocalVariable(name: "expr", arg: 2, scope: !2886, file: !3, line: 920, type: !2889)
!2893 = !DILocalVariable(name: "i", scope: !2894, file: !3, line: 932, type: !6)
!2894 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 931, column: 7)
!2895 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 923, column: 5)
!2896 = !DILocalVariable(name: "nary", scope: !2894, file: !3, line: 933, type: !2054)
!2897 = !DILocalVariable(name: "vro", scope: !2898, file: !3, line: 947, type: !2899)
!2898 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 946, column: 7)
!2899 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_reference_op_t", file: !2055, line: 80, baseType: !2900)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2901 = !DILocalVariable(name: "i", scope: !2898, file: !3, line: 948, type: !6)
!2902 = !DILocalVariable(name: "ref", scope: !2898, file: !3, line: 949, type: !2068)
!2903 = !DILocalVariable(name: "closebrace", scope: !2904, file: !3, line: 955, type: !663)
!2904 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 954, column: 4)
!2905 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 951, column: 2)
!2906 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 951, column: 2)
!2907 = !DILocation(line: 0, scope: !2886)
!2908 = !DILocation(line: 922, column: 17, scope: !2886)
!2909 = !DILocation(line: 922, column: 3, scope: !2886)
!2910 = !DILocation(line: 925, column: 36, scope: !2895)
!2911 = !DILocation(line: 925, column: 7, scope: !2895)
!2912 = !DILocation(line: 926, column: 7, scope: !2895)
!2913 = !DILocation(line: 928, column: 36, scope: !2895)
!2914 = !DILocation(line: 928, column: 7, scope: !2895)
!2915 = !DILocation(line: 929, column: 7, scope: !2895)
!2916 = !DILocation(line: 933, column: 22, scope: !2894)
!2917 = !DILocation(line: 0, scope: !2894)
!2918 = !DILocation(line: 934, column: 50, scope: !2894)
!2919 = !DILocation(line: 934, column: 28, scope: !2894)
!2920 = !DILocation(line: 934, column: 2, scope: !2894)
!2921 = !DILocation(line: 935, column: 7, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 935, column: 2)
!2923 = !DILocation(line: 0, scope: !2922)
!2924 = !DILocation(line: 935, column: 24, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 935, column: 2)
!2926 = !DILocation(line: 935, column: 16, scope: !2925)
!2927 = !DILocation(line: 935, column: 2, scope: !2922)
!2928 = !DILocation(line: 937, column: 35, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2925, file: !3, line: 936, column: 4)
!2930 = !DILocation(line: 937, column: 6, scope: !2929)
!2931 = !DILocation(line: 938, column: 32, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2929, file: !3, line: 938, column: 10)
!2933 = !DILocation(line: 938, column: 39, scope: !2932)
!2934 = !DILocation(line: 938, column: 12, scope: !2932)
!2935 = !DILocation(line: 938, column: 10, scope: !2929)
!2936 = !DILocation(line: 939, column: 8, scope: !2932)
!2937 = !DILocation(line: 935, column: 33, scope: !2925)
!2938 = !DILocation(line: 935, column: 2, scope: !2925)
!2939 = distinct !{!2939, !2927, !2940}
!2940 = !DILocation(line: 940, column: 4, scope: !2922)
!2941 = !DILocation(line: 941, column: 2, scope: !2894)
!2942 = !DILocation(line: 943, column: 7, scope: !2895)
!2943 = !DILocation(line: 947, column: 2, scope: !2898)
!2944 = !DILocation(line: 949, column: 23, scope: !2898)
!2945 = !DILocation(line: 0, scope: !2898)
!2946 = !DILocation(line: 950, column: 2, scope: !2898)
!2947 = !DILocation(line: 0, scope: !2905)
!2948 = !DILocation(line: 951, column: 7, scope: !2906)
!2949 = !DILocation(line: 0, scope: !2906)
!2950 = !DILocation(line: 952, column: 7, scope: !2905)
!2951 = !DILocation(line: 951, column: 2, scope: !2906)
!2952 = !DILocation(line: 0, scope: !2904)
!2953 = !DILocation(line: 956, column: 10, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 956, column: 10)
!2955 = !DILocation(line: 956, column: 15, scope: !2954)
!2956 = !DILocation(line: 956, column: 22, scope: !2954)
!2957 = !DILocation(line: 957, column: 3, scope: !2954)
!2958 = !DILocation(line: 957, column: 6, scope: !2954)
!2959 = !DILocation(line: 957, column: 36, scope: !2954)
!2960 = !DILocation(line: 956, column: 10, scope: !2904)
!2961 = !DILocation(line: 959, column: 27, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 958, column: 8)
!2963 = !DILocation(line: 959, column: 3, scope: !2962)
!2964 = !DILocation(line: 960, column: 7, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2962, file: !3, line: 960, column: 7)
!2966 = !DILocation(line: 960, column: 12, scope: !2965)
!2967 = !DILocation(line: 960, column: 7, scope: !2962)
!2968 = !DILocation(line: 962, column: 7, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 961, column: 5)
!2970 = !DILocation(line: 966, column: 10, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 966, column: 10)
!2972 = !DILocation(line: 964, column: 5, scope: !2969)
!2973 = !DILocation(line: 966, column: 15, scope: !2971)
!2974 = !DILocation(line: 966, column: 10, scope: !2904)
!2975 = !DILocation(line: 968, column: 3, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 967, column: 8)
!2977 = !DILocation(line: 969, column: 7, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 969, column: 7)
!2979 = !DILocation(line: 969, column: 12, scope: !2978)
!2980 = !DILocation(line: 969, column: 7, scope: !2976)
!2981 = !DILocation(line: 971, column: 7, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 970, column: 5)
!2983 = !DILocation(line: 972, column: 36, scope: !2982)
!2984 = !DILocation(line: 972, column: 41, scope: !2982)
!2985 = !DILocation(line: 972, column: 7, scope: !2982)
!2986 = !DILocation(line: 974, column: 7, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 974, column: 7)
!2988 = !DILocation(line: 973, column: 5, scope: !2982)
!2989 = !DILocation(line: 974, column: 12, scope: !2987)
!2990 = !DILocation(line: 974, column: 7, scope: !2976)
!2991 = !DILocation(line: 976, column: 7, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 975, column: 5)
!2993 = !DILocation(line: 977, column: 36, scope: !2992)
!2994 = !DILocation(line: 977, column: 41, scope: !2992)
!2995 = !DILocation(line: 977, column: 7, scope: !2992)
!2996 = !DILocation(line: 978, column: 5, scope: !2992)
!2997 = !DILocation(line: 980, column: 10, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 980, column: 10)
!2999 = !DILocation(line: 980, column: 10, scope: !2904)
!3000 = !DILocation(line: 981, column: 3, scope: !2998)
!3001 = !DILocation(line: 982, column: 15, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 982, column: 10)
!3003 = !DILocation(line: 982, column: 61, scope: !3002)
!3004 = !DILocation(line: 982, column: 12, scope: !3002)
!3005 = !DILocation(line: 982, column: 10, scope: !2904)
!3006 = !DILocation(line: 983, column: 8, scope: !3002)
!3007 = !DILocation(line: 953, column: 8, scope: !2905)
!3008 = !DILocation(line: 951, column: 2, scope: !2905)
!3009 = distinct !{!3009, !2951, !3010}
!3010 = !DILocation(line: 984, column: 4, scope: !2906)
!3011 = !DILocation(line: 985, column: 2, scope: !2898)
!3012 = !DILocation(line: 986, column: 11, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 986, column: 6)
!3014 = !DILocation(line: 986, column: 6, scope: !3013)
!3015 = !DILocation(line: 986, column: 6, scope: !2898)
!3016 = !DILocation(line: 988, column: 6, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 987, column: 4)
!3018 = !DILocation(line: 989, column: 40, scope: !3017)
!3019 = !DILocation(line: 989, column: 6, scope: !3017)
!3020 = !DILocation(line: 990, column: 4, scope: !3017)
!3021 = !DILocation(line: 991, column: 7, scope: !2895)
!3022 = !DILocation(line: 992, column: 7, scope: !2895)
!3023 = !DILocation(line: 994, column: 1, scope: !2886)
!3024 = distinct !DISubprogram(name: "debug_bitmap_set", scope: !3, file: !3, line: 1036, type: !3025, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3027)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{null, !683}
!3027 = !{!3028}
!3028 = !DILocalVariable(name: "set", arg: 1, scope: !3024, file: !3, line: 1036, type: !683)
!3029 = !DILocation(line: 0, scope: !3024)
!3030 = !DILocation(line: 1038, column: 21, scope: !3024)
!3031 = !DILocation(line: 1038, column: 3, scope: !3024)
!3032 = !DILocation(line: 1039, column: 1, scope: !3024)
!3033 = distinct !DISubprogram(name: "print_bitmap_set", scope: !3, file: !3, line: 1008, type: !3034, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3036)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{null, !2321, !683, !669, !664}
!3036 = !{!3037, !3038, !3039, !3040, !3041, !3044, !3045, !3053}
!3037 = !DILocalVariable(name: "outfile", arg: 1, scope: !3033, file: !3, line: 1008, type: !2321)
!3038 = !DILocalVariable(name: "set", arg: 2, scope: !3033, file: !3, line: 1008, type: !683)
!3039 = !DILocalVariable(name: "setname", arg: 3, scope: !3033, file: !3, line: 1009, type: !669)
!3040 = !DILocalVariable(name: "blockindex", arg: 4, scope: !3033, file: !3, line: 1009, type: !664)
!3041 = !DILocalVariable(name: "first", scope: !3042, file: !3, line: 1014, type: !663)
!3042 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 1013, column: 5)
!3043 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 1012, column: 7)
!3044 = !DILocalVariable(name: "i", scope: !3042, file: !3, line: 1015, type: !6)
!3045 = !DILocalVariable(name: "bi", scope: !3042, file: !3, line: 1016, type: !3046)
!3046 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !692, line: 218, baseType: !3047)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 203, size: 256, elements: !3048)
!3048 = !{!3049, !3050, !3051, !3052}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !3047, file: !692, line: 206, baseType: !695, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !3047, file: !692, line: 209, baseType: !695, size: 64, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !3047, file: !692, line: 212, baseType: !6, size: 32, offset: 128)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !3047, file: !692, line: 217, baseType: !705, size: 64, offset: 192)
!3053 = !DILocalVariable(name: "expr", scope: !3054, file: !3, line: 1020, type: !2889)
!3054 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 1019, column: 2)
!3055 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 1018, column: 7)
!3056 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 1018, column: 7)
!3057 = !DILocation(line: 0, scope: !3033)
!3058 = !DILocation(line: 1011, column: 3, scope: !3033)
!3059 = !DILocation(line: 1012, column: 7, scope: !3043)
!3060 = !DILocation(line: 1012, column: 7, scope: !3033)
!3061 = !DILocation(line: 0, scope: !3042)
!3062 = !DILocation(line: 1015, column: 7, scope: !3042)
!3063 = !DILocation(line: 1016, column: 7, scope: !3042)
!3064 = !DILocation(line: 1018, column: 7, scope: !3056)
!3065 = !DILocation(line: 1018, column: 7, scope: !3055)
!3066 = !DILocation(line: 1020, column: 45, scope: !3054)
!3067 = !DILocation(line: 1020, column: 26, scope: !3054)
!3068 = !DILocation(line: 0, scope: !3054)
!3069 = !DILocation(line: 1022, column: 9, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3054, file: !3, line: 1022, column: 8)
!3071 = !DILocation(line: 1022, column: 8, scope: !3054)
!3072 = !DILocation(line: 1023, column: 6, scope: !3070)
!3073 = !DILocation(line: 1025, column: 4, scope: !3054)
!3074 = !DILocation(line: 1027, column: 33, scope: !3054)
!3075 = !DILocation(line: 1027, column: 4, scope: !3054)
!3076 = distinct !{!3076, !3064, !3077}
!3077 = !DILocation(line: 1028, column: 2, scope: !3056)
!3078 = !DILocation(line: 1029, column: 5, scope: !3043)
!3079 = !DILocation(line: 1029, column: 5, scope: !3042)
!3080 = !DILocation(line: 1030, column: 3, scope: !3033)
!3081 = !DILocation(line: 1031, column: 1, scope: !3033)
!3082 = distinct !DISubprogram(name: "print_value_expressions", scope: !3, file: !3, line: 1044, type: !3083, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3085)
!3083 = !DISubroutineType(types: !3084)
!3084 = !{null, !2321, !6}
!3085 = !{!3086, !3087, !3088, !3089}
!3086 = !DILocalVariable(name: "outfile", arg: 1, scope: !3082, file: !3, line: 1044, type: !2321)
!3087 = !DILocalVariable(name: "val", arg: 2, scope: !3082, file: !3, line: 1044, type: !6)
!3088 = !DILocalVariable(name: "set", scope: !3082, file: !3, line: 1046, type: !683)
!3089 = !DILocalVariable(name: "s", scope: !3090, file: !3, line: 1049, type: !3092)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1048, column: 5)
!3091 = distinct !DILexicalBlock(scope: !3082, file: !3, line: 1047, column: 7)
!3092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 80, elements: !3093)
!3093 = !{!3094}
!3094 = !DISubrange(count: 10)
!3095 = !DILocation(line: 0, scope: !3082)
!3096 = !DILocation(line: 1046, column: 22, scope: !3082)
!3097 = !DILocation(line: 1047, column: 7, scope: !3091)
!3098 = !DILocation(line: 1047, column: 7, scope: !3082)
!3099 = !DILocation(line: 1049, column: 7, scope: !3090)
!3100 = !DILocation(line: 1049, column: 12, scope: !3090)
!3101 = !DILocation(line: 1050, column: 7, scope: !3090)
!3102 = !DILocation(line: 1051, column: 7, scope: !3090)
!3103 = !DILocation(line: 1052, column: 5, scope: !3091)
!3104 = !DILocation(line: 1052, column: 5, scope: !3090)
!3105 = !DILocation(line: 1053, column: 1, scope: !3082)
!3106 = distinct !DISubprogram(name: "debug_value_expressions", scope: !3, file: !3, line: 1057, type: !3107, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3109)
!3107 = !DISubroutineType(types: !3108)
!3108 = !{null, !6}
!3109 = !{!3110}
!3110 = !DILocalVariable(name: "val", arg: 1, scope: !3106, file: !3, line: 1057, type: !6)
!3111 = !DILocation(line: 0, scope: !3106)
!3112 = !DILocation(line: 1059, column: 28, scope: !3106)
!3113 = !DILocation(line: 1059, column: 3, scope: !3106)
!3114 = !DILocation(line: 1060, column: 1, scope: !3106)
!3115 = distinct !DISubprogram(name: "gate_pre", scope: !3, file: !3, line: 4817, type: !2189, scopeLine: 4818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2314)
!3116 = !DILocation(line: 4819, column: 10, scope: !3115)
!3117 = !DILocation(line: 4819, column: 24, scope: !3115)
!3118 = !DILocation(line: 4819, column: 3, scope: !3115)
!3119 = distinct !DISubprogram(name: "do_pre", scope: !3, file: !3, line: 4811, type: !2193, scopeLine: 4812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2314)
!3120 = !DILocation(line: 4813, column: 10, scope: !3119)
!3121 = !DILocation(line: 4813, column: 3, scope: !3119)
!3122 = distinct !DISubprogram(name: "gate_fre", scope: !3, file: !3, line: 4853, type: !2189, scopeLine: 4854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2314)
!3123 = !DILocation(line: 4855, column: 10, scope: !3122)
!3124 = !DILocation(line: 4855, column: 24, scope: !3122)
!3125 = !DILocation(line: 4855, column: 3, scope: !3122)
!3126 = distinct !DISubprogram(name: "execute_fre", scope: !3, file: !3, line: 4847, type: !2193, scopeLine: 4848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2314)
!3127 = !DILocation(line: 4849, column: 10, scope: !3126)
!3128 = !DILocation(line: 4849, column: 3, scope: !3126)
!3129 = distinct !DISubprogram(name: "VEC_bitmap_set_t_heap_safe_grow", scope: !3, file: !3, line: 378, type: !2809, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3130)
!3130 = !{!3131, !3132}
!3131 = !DILocalVariable(name: "vec_", arg: 1, scope: !3129, file: !3, line: 378, type: !2811)
!3132 = !DILocalVariable(name: "size_", arg: 2, scope: !3129, file: !3, line: 378, type: !664)
!3133 = !DILocation(line: 0, scope: !3129)
!3134 = !DILocation(line: 378, column: 1, scope: !3129)
!3135 = distinct !DISubprogram(name: "VEC_bitmap_set_t_base_address", scope: !3, file: !3, line: 377, type: !3136, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3139)
!3136 = !DISubroutineType(types: !3137)
!3137 = !{!3138, !2845}
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!3139 = !{!3140}
!3140 = !DILocalVariable(name: "vec_", arg: 1, scope: !3135, file: !3, line: 377, type: !2845)
!3141 = !DILocation(line: 0, scope: !3135)
!3142 = !DILocation(line: 377, column: 1, scope: !3135)
!3143 = distinct !DISubprogram(name: "VEC_bitmap_set_t_heap_reserve_exact", scope: !3, file: !3, line: 378, type: !3144, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3146)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{!664, !2811, !664}
!3146 = !{!3147, !3148, !3149}
!3147 = !DILocalVariable(name: "vec_", arg: 1, scope: !3143, file: !3, line: 378, type: !2811)
!3148 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3143, file: !3, line: 378, type: !664)
!3149 = !DILocalVariable(name: "extend", scope: !3143, file: !3, line: 378, type: !664)
!3150 = !DILocation(line: 0, scope: !3143)
!3151 = !DILocation(line: 378, column: 1, scope: !3143)
!3152 = !DILocation(line: 378, column: 1, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 378, column: 1)
!3154 = distinct !DISubprogram(name: "VEC_bitmap_set_t_base_space", scope: !3, file: !3, line: 377, type: !3155, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3157)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{!664, !2845, !664}
!3157 = !{!3158, !3159}
!3158 = !DILocalVariable(name: "vec_", arg: 1, scope: !3154, file: !3, line: 377, type: !2845)
!3159 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3154, file: !3, line: 377, type: !664)
!3160 = !DILocation(line: 0, scope: !3154)
!3161 = !DILocation(line: 377, column: 1, scope: !3154)
!3162 = distinct !DISubprogram(name: "get_or_alloc_expression_id", scope: !3, file: !3, line: 310, type: !2765, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3163)
!3163 = !{!3164, !3165}
!3164 = !DILocalVariable(name: "expr", arg: 1, scope: !3162, file: !3, line: 310, type: !754)
!3165 = !DILocalVariable(name: "id", scope: !3162, file: !3, line: 312, type: !6)
!3166 = !DILocation(line: 0, scope: !3162)
!3167 = !DILocation(line: 312, column: 21, scope: !3162)
!3168 = !DILocation(line: 313, column: 10, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 313, column: 7)
!3170 = !DILocation(line: 313, column: 7, scope: !3162)
!3171 = !DILocation(line: 314, column: 12, scope: !3169)
!3172 = !DILocation(line: 314, column: 5, scope: !3169)
!3173 = !DILocation(line: 315, column: 16, scope: !3162)
!3174 = !DILocation(line: 315, column: 19, scope: !3162)
!3175 = !DILocation(line: 315, column: 3, scope: !3162)
!3176 = !DILocation(line: 316, column: 1, scope: !3162)
!3177 = distinct !DISubprogram(name: "lookup_expression_id", scope: !3, file: !3, line: 286, type: !3178, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3180)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{!6, !2889}
!3180 = !{!3181, !3182, !3183}
!3181 = !DILocalVariable(name: "expr", arg: 1, scope: !3177, file: !3, line: 286, type: !2889)
!3182 = !DILocalVariable(name: "slot", scope: !3177, file: !3, line: 288, type: !1533)
!3183 = !DILocalVariable(name: "version", scope: !3184, file: !3, line: 292, type: !6)
!3184 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 291, column: 5)
!3185 = distinct !DILexicalBlock(scope: !3177, file: !3, line: 290, column: 7)
!3186 = !DILocation(line: 0, scope: !3177)
!3187 = !DILocation(line: 290, column: 13, scope: !3185)
!3188 = !DILocation(line: 290, column: 18, scope: !3185)
!3189 = !DILocation(line: 290, column: 7, scope: !3177)
!3190 = !DILocation(line: 292, column: 26, scope: !3184)
!3191 = !DILocation(line: 0, scope: !3184)
!3192 = !DILocation(line: 293, column: 11, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3184, file: !3, line: 293, column: 11)
!3194 = !DILocation(line: 293, column: 45, scope: !3193)
!3195 = !DILocation(line: 293, column: 11, scope: !3184)
!3196 = !DILocation(line: 295, column: 14, scope: !3184)
!3197 = !DILocation(line: 295, column: 7, scope: !3184)
!3198 = !DILocation(line: 299, column: 30, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 298, column: 5)
!3200 = !DILocation(line: 299, column: 48, scope: !3199)
!3201 = !DILocation(line: 299, column: 14, scope: !3199)
!3202 = !DILocation(line: 300, column: 12, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 300, column: 11)
!3204 = !DILocation(line: 300, column: 11, scope: !3199)
!3205 = !DILocation(line: 302, column: 25, scope: !3199)
!3206 = !DILocation(line: 302, column: 33, scope: !3199)
!3207 = !DILocation(line: 302, column: 7, scope: !3199)
!3208 = !DILocation(line: 0, scope: !3185)
!3209 = !DILocation(line: 304, column: 1, scope: !3177)
!3210 = distinct !DISubprogram(name: "alloc_expression_id", scope: !3, file: !3, line: 250, type: !2765, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3211)
!3211 = !{!3212, !3213, !3214}
!3212 = !DILocalVariable(name: "expr", arg: 1, scope: !3210, file: !3, line: 250, type: !754)
!3213 = !DILocalVariable(name: "slot", scope: !3210, file: !3, line: 252, type: !1533)
!3214 = !DILocalVariable(name: "version", scope: !3215, file: !3, line: 259, type: !6)
!3215 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 258, column: 5)
!3216 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 257, column: 7)
!3217 = !DILocation(line: 0, scope: !3210)
!3218 = !DILocation(line: 254, column: 3, scope: !3210)
!3219 = !DILocation(line: 255, column: 32, scope: !3210)
!3220 = !DILocation(line: 255, column: 9, scope: !3210)
!3221 = !DILocation(line: 255, column: 12, scope: !3210)
!3222 = !DILocation(line: 256, column: 3, scope: !3210)
!3223 = !DILocation(line: 257, column: 13, scope: !3216)
!3224 = !DILocation(line: 257, column: 18, scope: !3216)
!3225 = !DILocation(line: 257, column: 7, scope: !3210)
!3226 = !DILocation(line: 259, column: 26, scope: !3215)
!3227 = !DILocation(line: 0, scope: !3215)
!3228 = !DILocation(line: 263, column: 7, scope: !3215)
!3229 = !DILocation(line: 264, column: 7, scope: !3215)
!3230 = !DILocation(line: 265, column: 7, scope: !3215)
!3231 = !DILocation(line: 266, column: 7, scope: !3215)
!3232 = !DILocation(line: 267, column: 5, scope: !3215)
!3233 = !DILocation(line: 270, column: 30, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 269, column: 5)
!3235 = !DILocation(line: 270, column: 48, scope: !3234)
!3236 = !DILocation(line: 270, column: 14, scope: !3234)
!3237 = !DILocation(line: 271, column: 7, scope: !3234)
!3238 = !DILocation(line: 272, column: 13, scope: !3234)
!3239 = !DILocation(line: 274, column: 10, scope: !3210)
!3240 = !DILocation(line: 274, column: 29, scope: !3210)
!3241 = !DILocation(line: 274, column: 3, scope: !3210)
!3242 = distinct !DISubprogram(name: "VEC_unsigned_base_length", scope: !2113, file: !2113, line: 34, type: !3243, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3247)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{!6, !3245}
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2117)
!3247 = !{!3248}
!3248 = !DILocalVariable(name: "vec_", arg: 1, scope: !3242, file: !2113, line: 34, type: !3245)
!3249 = !DILocation(line: 0, scope: !3242)
!3250 = !DILocation(line: 34, column: 1, scope: !3242)
!3251 = distinct !DISubprogram(name: "VEC_unsigned_base_index", scope: !2113, file: !2113, line: 34, type: !3252, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3254)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!6, !3245, !6}
!3254 = !{!3255, !3256}
!3255 = !DILocalVariable(name: "vec_", arg: 1, scope: !3251, file: !2113, line: 34, type: !3245)
!3256 = !DILocalVariable(name: "ix_", arg: 2, scope: !3251, file: !2113, line: 34, type: !6)
!3257 = !DILocation(line: 0, scope: !3251)
!3258 = !DILocation(line: 34, column: 1, scope: !3251)
!3259 = distinct !DISubprogram(name: "VEC_pre_expr_heap_safe_push", scope: !3, file: !3, line: 242, type: !3260, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3263)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{!2173, !3262, !754}
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!3263 = !{!3264, !3265}
!3264 = !DILocalVariable(name: "vec_", arg: 1, scope: !3259, file: !3, line: 242, type: !3262)
!3265 = !DILocalVariable(name: "obj_", arg: 2, scope: !3259, file: !3, line: 242, type: !754)
!3266 = !DILocation(line: 0, scope: !3259)
!3267 = !DILocation(line: 242, column: 1, scope: !3259)
!3268 = distinct !DISubprogram(name: "VEC_unsigned_heap_reserve", scope: !2113, file: !2113, line: 35, type: !3269, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3272)
!3269 = !DISubroutineType(types: !3270)
!3270 = !{!664, !3271, !664}
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!3272 = !{!3273, !3274, !3275}
!3273 = !DILocalVariable(name: "vec_", arg: 1, scope: !3268, file: !2113, line: 35, type: !3271)
!3274 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3268, file: !2113, line: 35, type: !664)
!3275 = !DILocalVariable(name: "extend", scope: !3268, file: !2113, line: 35, type: !664)
!3276 = !DILocation(line: 0, scope: !3268)
!3277 = !DILocation(line: 35, column: 1, scope: !3268)
!3278 = !DILocation(line: 35, column: 1, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3268, file: !2113, line: 35, column: 1)
!3280 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !141, file: !141, line: 182, type: !3281, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3285)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!6, !3283}
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 64)
!3284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1577)
!3285 = !{!3286}
!3286 = !DILocalVariable(name: "vec_", arg: 1, scope: !3280, file: !141, line: 182, type: !3283)
!3287 = !DILocation(line: 0, scope: !3280)
!3288 = !DILocation(line: 182, column: 1, scope: !3280)
!3289 = distinct !DISubprogram(name: "VEC_unsigned_heap_safe_grow_cleared", scope: !2113, file: !2113, line: 35, type: !3290, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3292)
!3290 = !DISubroutineType(types: !3291)
!3291 = !{null, !3271, !664}
!3292 = !{!3293, !3294, !3295}
!3293 = !DILocalVariable(name: "vec_", arg: 1, scope: !3289, file: !2113, line: 35, type: !3271)
!3294 = !DILocalVariable(name: "size_", arg: 2, scope: !3289, file: !2113, line: 35, type: !664)
!3295 = !DILocalVariable(name: "oldsize", scope: !3289, file: !2113, line: 35, type: !664)
!3296 = !DILocation(line: 0, scope: !3289)
!3297 = !DILocation(line: 35, column: 1, scope: !3289)
!3298 = distinct !DISubprogram(name: "VEC_unsigned_base_replace", scope: !2113, file: !2113, line: 34, type: !3299, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3302)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{!6, !3301, !6, !6}
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!3302 = !{!3303, !3304, !3305, !3306}
!3303 = !DILocalVariable(name: "vec_", arg: 1, scope: !3298, file: !2113, line: 34, type: !3301)
!3304 = !DILocalVariable(name: "ix_", arg: 2, scope: !3298, file: !2113, line: 34, type: !6)
!3305 = !DILocalVariable(name: "obj_", arg: 3, scope: !3298, file: !2113, line: 34, type: !6)
!3306 = !DILocalVariable(name: "old_obj_", scope: !3298, file: !2113, line: 34, type: !6)
!3307 = !DILocation(line: 0, scope: !3298)
!3308 = !DILocation(line: 34, column: 1, scope: !3298)
!3309 = distinct !DISubprogram(name: "VEC_pre_expr_heap_reserve", scope: !3, file: !3, line: 242, type: !3310, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3312)
!3310 = !DISubroutineType(types: !3311)
!3311 = !{!664, !3262, !664}
!3312 = !{!3313, !3314, !3315}
!3313 = !DILocalVariable(name: "vec_", arg: 1, scope: !3309, file: !3, line: 242, type: !3262)
!3314 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3309, file: !3, line: 242, type: !664)
!3315 = !DILocalVariable(name: "extend", scope: !3309, file: !3, line: 242, type: !664)
!3316 = !DILocation(line: 0, scope: !3309)
!3317 = !DILocation(line: 242, column: 1, scope: !3309)
!3318 = !DILocation(line: 242, column: 1, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 242, column: 1)
!3320 = distinct !DISubprogram(name: "VEC_pre_expr_base_quick_push", scope: !3, file: !3, line: 241, type: !3321, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3324)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{!2173, !3323, !754}
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!3324 = !{!3325, !3326, !3327}
!3325 = !DILocalVariable(name: "vec_", arg: 1, scope: !3320, file: !3, line: 241, type: !3323)
!3326 = !DILocalVariable(name: "obj_", arg: 2, scope: !3320, file: !3, line: 241, type: !754)
!3327 = !DILocalVariable(name: "slot_", scope: !3320, file: !3, line: 241, type: !2173)
!3328 = !DILocation(line: 0, scope: !3320)
!3329 = !DILocation(line: 241, column: 1, scope: !3320)
!3330 = distinct !DISubprogram(name: "VEC_pre_expr_base_space", scope: !3, file: !3, line: 241, type: !3331, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3333)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{!664, !3323, !664}
!3333 = !{!3334, !3335}
!3334 = !DILocalVariable(name: "vec_", arg: 1, scope: !3330, file: !3, line: 241, type: !3323)
!3335 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3330, file: !3, line: 241, type: !664)
!3336 = !DILocation(line: 0, scope: !3330)
!3337 = !DILocation(line: 241, column: 1, scope: !3330)
!3338 = distinct !DISubprogram(name: "VEC_unsigned_base_space", scope: !2113, file: !2113, line: 34, type: !3339, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3341)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!664, !3301, !664}
!3341 = !{!3342, !3343}
!3342 = !DILocalVariable(name: "vec_", arg: 1, scope: !3338, file: !2113, line: 34, type: !3301)
!3343 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3338, file: !2113, line: 34, type: !664)
!3344 = !DILocation(line: 0, scope: !3338)
!3345 = !DILocation(line: 34, column: 1, scope: !3338)
!3346 = distinct !DISubprogram(name: "VEC_unsigned_heap_safe_grow", scope: !2113, file: !2113, line: 35, type: !3290, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3347)
!3347 = !{!3348, !3349}
!3348 = !DILocalVariable(name: "vec_", arg: 1, scope: !3346, file: !2113, line: 35, type: !3271)
!3349 = !DILocalVariable(name: "size_", arg: 2, scope: !3346, file: !2113, line: 35, type: !664)
!3350 = !DILocation(line: 0, scope: !3346)
!3351 = !DILocation(line: 35, column: 1, scope: !3346)
!3352 = distinct !DISubprogram(name: "VEC_unsigned_base_address", scope: !2113, file: !2113, line: 34, type: !3353, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3356)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!3355, !3301}
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!3356 = !{!3357}
!3357 = !DILocalVariable(name: "vec_", arg: 1, scope: !3352, file: !2113, line: 34, type: !3301)
!3358 = !DILocation(line: 0, scope: !3352)
!3359 = !DILocation(line: 34, column: 1, scope: !3352)
!3360 = distinct !DISubprogram(name: "VEC_unsigned_heap_reserve_exact", scope: !2113, file: !2113, line: 35, type: !3269, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3361)
!3361 = !{!3362, !3363, !3364}
!3362 = !DILocalVariable(name: "vec_", arg: 1, scope: !3360, file: !2113, line: 35, type: !3271)
!3363 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3360, file: !2113, line: 35, type: !664)
!3364 = !DILocalVariable(name: "extend", scope: !3360, file: !2113, line: 35, type: !664)
!3365 = !DILocation(line: 0, scope: !3360)
!3366 = !DILocation(line: 35, column: 1, scope: !3360)
!3367 = !DILocation(line: 35, column: 1, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3360, file: !2113, line: 35, column: 1)
!3369 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_iterate", scope: !2055, file: !2055, line: 83, type: !3370, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3374)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{!664, !3372, !6, !3373}
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!3374 = !{!3375, !3376, !3377}
!3375 = !DILocalVariable(name: "vec_", arg: 1, scope: !3369, file: !2055, line: 83, type: !3372)
!3376 = !DILocalVariable(name: "ix_", arg: 2, scope: !3369, file: !2055, line: 83, type: !6)
!3377 = !DILocalVariable(name: "ptr", arg: 3, scope: !3369, file: !2055, line: 83, type: !3373)
!3378 = !DILocation(line: 0, scope: !3369)
!3379 = !DILocation(line: 83, column: 1, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3369, file: !2055, line: 83, column: 1)
!3381 = !DILocation(line: 83, column: 1, scope: !3369)
!3382 = !DILocation(line: 83, column: 1, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3380, file: !2055, line: 83, column: 1)
!3384 = !DILocation(line: 83, column: 1, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3380, file: !2055, line: 83, column: 1)
!3386 = !DILocation(line: 0, scope: !3380)
!3387 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_length", scope: !2055, file: !2055, line: 83, type: !3388, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3392)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{!6, !3390}
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2083)
!3392 = !{!3393}
!3393 = !DILocalVariable(name: "vec_", arg: 1, scope: !3387, file: !2055, line: 83, type: !3390)
!3394 = !DILocation(line: 0, scope: !3387)
!3395 = !DILocation(line: 83, column: 1, scope: !3387)
!3396 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !692, file: !692, line: 224, type: !3397, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3403)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{null, !3399, !3400, !6, !3355}
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !689, line: 48, baseType: !3401)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !691)
!3403 = !{!3404, !3405, !3406, !3407}
!3404 = !DILocalVariable(name: "bi", arg: 1, scope: !3396, file: !692, line: 224, type: !3399)
!3405 = !DILocalVariable(name: "map", arg: 2, scope: !3396, file: !692, line: 224, type: !3400)
!3406 = !DILocalVariable(name: "start_bit", arg: 3, scope: !3396, file: !692, line: 225, type: !6)
!3407 = !DILocalVariable(name: "bit_no", arg: 4, scope: !3396, file: !692, line: 225, type: !3355)
!3408 = !DILocation(line: 0, scope: !3396)
!3409 = !DILocation(line: 227, column: 19, scope: !3396)
!3410 = !DILocation(line: 227, column: 12, scope: !3396)
!3411 = !DILocation(line: 228, column: 7, scope: !3396)
!3412 = !DILocation(line: 228, column: 12, scope: !3396)
!3413 = !DILocation(line: 0, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !692, line: 233, column: 11)
!3415 = distinct !DILexicalBlock(scope: !3396, file: !692, line: 232, column: 5)
!3416 = !DILocation(line: 231, column: 3, scope: !3396)
!3417 = !DILocation(line: 233, column: 12, scope: !3414)
!3418 = !DILocation(line: 233, column: 11, scope: !3415)
!3419 = !DILocation(line: 235, column: 13, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3414, file: !692, line: 234, column: 2)
!3421 = !DILocation(line: 236, column: 4, scope: !3420)
!3422 = !DILocation(line: 239, column: 11, scope: !3415)
!3423 = distinct !{!3423, !3416, !3424}
!3424 = !DILocation(line: 242, column: 5, scope: !3396)
!3425 = !DILocation(line: 245, column: 11, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3396, file: !692, line: 245, column: 7)
!3427 = !DILocation(line: 245, column: 17, scope: !3426)
!3428 = !DILocation(line: 245, column: 22, scope: !3426)
!3429 = !DILocation(line: 245, column: 7, scope: !3396)
!3430 = !DILocation(line: 246, column: 27, scope: !3426)
!3431 = !DILocation(line: 246, column: 32, scope: !3426)
!3432 = !DILocation(line: 246, column: 5, scope: !3426)
!3433 = !DILocation(line: 249, column: 7, scope: !3396)
!3434 = !DILocation(line: 249, column: 15, scope: !3396)
!3435 = !DILocation(line: 250, column: 14, scope: !3396)
!3436 = !DILocation(line: 251, column: 7, scope: !3396)
!3437 = !DILocation(line: 251, column: 12, scope: !3396)
!3438 = !DILocation(line: 257, column: 16, scope: !3396)
!3439 = !DILocation(line: 257, column: 13, scope: !3396)
!3440 = !DILocation(line: 259, column: 11, scope: !3396)
!3441 = !DILocation(line: 260, column: 1, scope: !3396)
!3442 = distinct !DISubprogram(name: "bmp_iter_set", scope: !692, file: !692, line: 393, type: !3443, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3445)
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!663, !3399, !3355}
!3445 = !{!3446, !3447, !3448}
!3446 = !DILocalVariable(name: "bi", arg: 1, scope: !3442, file: !692, line: 393, type: !3399)
!3447 = !DILocalVariable(name: "bit_no", arg: 2, scope: !3442, file: !692, line: 393, type: !3355)
!3448 = !DILabel(scope: !3449, name: "next_bit", file: !692, line: 398)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !692, line: 397, column: 5)
!3450 = distinct !DILexicalBlock(scope: !3442, file: !692, line: 396, column: 7)
!3451 = !DILocation(line: 0, scope: !3442)
!3452 = !DILocation(line: 396, column: 11, scope: !3450)
!3453 = !DILocation(line: 396, column: 7, scope: !3450)
!3454 = !DILocation(line: 396, column: 7, scope: !3442)
!3455 = !DILocation(line: 419, column: 15, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3457, file: !692, line: 418, column: 2)
!3457 = distinct !DILexicalBlock(scope: !3442, file: !692, line: 415, column: 5)
!3458 = !DILocation(line: 399, column: 7, scope: !3449)
!3459 = !DILocation(line: 398, column: 5, scope: !3449)
!3460 = !DILocation(line: 399, column: 20, scope: !3449)
!3461 = !DILocation(line: 399, column: 25, scope: !3449)
!3462 = !DILocation(line: 399, column: 14, scope: !3449)
!3463 = !DILocation(line: 401, column: 13, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3449, file: !692, line: 400, column: 2)
!3465 = !DILocation(line: 402, column: 12, scope: !3464)
!3466 = distinct !{!3466, !3458, !3467}
!3467 = !DILocation(line: 403, column: 2, scope: !3449)
!3468 = !DILocation(line: 410, column: 15, scope: !3442)
!3469 = !DILocation(line: 410, column: 42, scope: !3442)
!3470 = !DILocation(line: 411, column: 26, scope: !3442)
!3471 = !DILocation(line: 410, column: 11, scope: !3442)
!3472 = !DILocation(line: 412, column: 7, scope: !3442)
!3473 = !DILocation(line: 412, column: 14, scope: !3442)
!3474 = !DILocation(line: 0, scope: !3457)
!3475 = !DILocation(line: 414, column: 3, scope: !3442)
!3476 = !DILocation(line: 417, column: 7, scope: !3457)
!3477 = !DILocation(line: 417, column: 18, scope: !3457)
!3478 = !DILocation(line: 417, column: 26, scope: !3457)
!3479 = !DILocation(line: 419, column: 13, scope: !3456)
!3480 = !DILocation(line: 420, column: 8, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3456, file: !692, line: 420, column: 8)
!3482 = !DILocation(line: 420, column: 8, scope: !3456)
!3483 = !DILocation(line: 422, column: 12, scope: !3456)
!3484 = !DILocation(line: 423, column: 15, scope: !3456)
!3485 = distinct !{!3485, !3476, !3486}
!3486 = !DILocation(line: 424, column: 2, scope: !3457)
!3487 = !DILocation(line: 427, column: 28, scope: !3457)
!3488 = !DILocation(line: 427, column: 16, scope: !3457)
!3489 = !DILocation(line: 428, column: 12, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3457, file: !692, line: 428, column: 11)
!3491 = !DILocation(line: 428, column: 11, scope: !3457)
!3492 = !DILocation(line: 430, column: 27, scope: !3457)
!3493 = !DILocation(line: 430, column: 32, scope: !3457)
!3494 = !DILocation(line: 430, column: 15, scope: !3457)
!3495 = !DILocation(line: 431, column: 19, scope: !3457)
!3496 = distinct !{!3496, !3475, !3497}
!3497 = !DILocation(line: 432, column: 5, scope: !3442)
!3498 = !DILocation(line: 433, column: 1, scope: !3442)
!3499 = distinct !DISubprogram(name: "expression_for_id", scope: !3, file: !3, line: 321, type: !3500, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3502)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{!754, !6}
!3502 = !{!3503}
!3503 = !DILocalVariable(name: "id", arg: 1, scope: !3499, file: !3, line: 321, type: !6)
!3504 = !DILocation(line: 0, scope: !3499)
!3505 = !DILocation(line: 323, column: 10, scope: !3499)
!3506 = !DILocation(line: 323, column: 3, scope: !3499)
!3507 = distinct !DISubprogram(name: "bmp_iter_next", scope: !692, file: !692, line: 382, type: !3508, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3510)
!3508 = !DISubroutineType(types: !3509)
!3509 = !{null, !3399, !3355}
!3510 = !{!3511, !3512}
!3511 = !DILocalVariable(name: "bi", arg: 1, scope: !3507, file: !692, line: 382, type: !3399)
!3512 = !DILocalVariable(name: "bit_no", arg: 2, scope: !3507, file: !692, line: 382, type: !3355)
!3513 = !DILocation(line: 0, scope: !3507)
!3514 = !DILocation(line: 384, column: 7, scope: !3507)
!3515 = !DILocation(line: 384, column: 12, scope: !3507)
!3516 = !DILocation(line: 385, column: 11, scope: !3507)
!3517 = !DILocation(line: 386, column: 1, scope: !3507)
!3518 = distinct !DISubprogram(name: "VEC_pre_expr_base_index", scope: !3, file: !3, line: 241, type: !3519, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3523)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!754, !3521, !6}
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2104)
!3523 = !{!3524, !3525}
!3524 = !DILocalVariable(name: "vec_", arg: 1, scope: !3518, file: !3, line: 241, type: !3521)
!3525 = !DILocalVariable(name: "ix_", arg: 2, scope: !3518, file: !3, line: 241, type: !6)
!3526 = !DILocation(line: 0, scope: !3518)
!3527 = !DILocation(line: 241, column: 1, scope: !3518)
!3528 = distinct !DISubprogram(name: "execute_pre", scope: !3, file: !3, line: 4730, type: !3529, scopeLine: 4731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3531)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!6, !663}
!3531 = !{!3532, !3533, !3534}
!3532 = !DILocalVariable(name: "do_fre", arg: 1, scope: !3528, file: !3, line: 4730, type: !663)
!3533 = !DILocalVariable(name: "todo", scope: !3528, file: !3, line: 4732, type: !6)
!3534 = !DILocalVariable(name: "bb", scope: !3535, file: !3, line: 4760, type: !1477)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 4759, column: 5)
!3536 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 4758, column: 7)
!3537 = !DILocation(line: 0, scope: !3528)
!3538 = !DILocation(line: 4734, column: 24, scope: !3528)
!3539 = !DILocation(line: 4734, column: 33, scope: !3528)
!3540 = !DILocation(line: 4734, column: 37, scope: !3528)
!3541 = !DILocation(line: 4734, column: 71, scope: !3528)
!3542 = !DILocation(line: 4734, column: 40, scope: !3528)
!3543 = !DILocation(line: 4734, column: 22, scope: !3528)
!3544 = !DILocation(line: 4738, column: 8, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 4738, column: 7)
!3546 = !DILocation(line: 4738, column: 7, scope: !3528)
!3547 = !DILocation(line: 4739, column: 5, scope: !3545)
!3548 = !DILocation(line: 4741, column: 8, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 4741, column: 7)
!3550 = !DILocation(line: 4741, column: 7, scope: !3528)
!3551 = !DILocation(line: 4743, column: 11, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3549, file: !3, line: 4742, column: 5)
!3553 = !DILocation(line: 4745, column: 4, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !3, line: 4744, column: 2)
!3555 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 4743, column: 11)
!3556 = !DILocation(line: 4746, column: 4, scope: !3554)
!3557 = !DILocation(line: 4747, column: 2, scope: !3554)
!3558 = !DILocation(line: 4751, column: 3, scope: !3528)
!3559 = !DILocation(line: 4752, column: 3, scope: !3528)
!3560 = !DILocation(line: 4756, column: 3, scope: !3528)
!3561 = !DILocation(line: 4758, column: 7, scope: !3536)
!3562 = !DILocation(line: 4758, column: 17, scope: !3536)
!3563 = !DILocation(line: 4758, column: 21, scope: !3536)
!3564 = !DILocation(line: 4758, column: 32, scope: !3536)
!3565 = !DILocation(line: 4758, column: 7, scope: !3528)
!3566 = !DILocation(line: 4762, column: 7, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 4762, column: 7)
!3568 = !DILocation(line: 0, scope: !3567)
!3569 = !DILocation(line: 0, scope: !3535)
!3570 = !DILocation(line: 4764, column: 22, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 4763, column: 2)
!3572 = distinct !DILexicalBlock(scope: !3567, file: !3, line: 4762, column: 7)
!3573 = !DILocation(line: 4764, column: 33, scope: !3571)
!3574 = !DILocation(line: 4764, column: 62, scope: !3571)
!3575 = !DILocation(line: 4764, column: 4, scope: !3571)
!3576 = !DILocation(line: 4765, column: 22, scope: !3571)
!3577 = !DILocation(line: 4765, column: 33, scope: !3571)
!3578 = !DILocation(line: 4765, column: 62, scope: !3571)
!3579 = !DILocation(line: 4765, column: 4, scope: !3571)
!3580 = !DILocation(line: 4766, column: 22, scope: !3571)
!3581 = !DILocation(line: 4766, column: 33, scope: !3571)
!3582 = !DILocation(line: 4766, column: 62, scope: !3571)
!3583 = !DILocation(line: 4766, column: 4, scope: !3571)
!3584 = !DILocation(line: 4767, column: 22, scope: !3571)
!3585 = !DILocation(line: 4767, column: 33, scope: !3571)
!3586 = !DILocation(line: 4767, column: 66, scope: !3571)
!3587 = !DILocation(line: 4767, column: 4, scope: !3571)
!3588 = !DILocation(line: 4762, column: 7, scope: !3572)
!3589 = distinct !{!3589, !3566, !3590}
!3590 = !DILocation(line: 4768, column: 2, scope: !3567)
!3591 = !DILocation(line: 4776, column: 8, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 4776, column: 7)
!3593 = !DILocation(line: 4776, column: 15, scope: !3592)
!3594 = !DILocation(line: 4776, column: 18, scope: !3592)
!3595 = !DILocation(line: 4776, column: 33, scope: !3592)
!3596 = !DILocation(line: 4776, column: 7, scope: !3528)
!3597 = !DILocation(line: 4778, column: 7, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 4777, column: 5)
!3599 = !DILocation(line: 4779, column: 7, scope: !3598)
!3600 = !DILocation(line: 4780, column: 5, scope: !3598)
!3601 = !DILocation(line: 4783, column: 11, scope: !3528)
!3602 = !DILocation(line: 4785, column: 29, scope: !3528)
!3603 = !DILocation(line: 4785, column: 59, scope: !3528)
!3604 = !DILocation(line: 4785, column: 3, scope: !3528)
!3605 = !DILocation(line: 4786, column: 29, scope: !3528)
!3606 = !DILocation(line: 4786, column: 60, scope: !3528)
!3607 = !DILocation(line: 4786, column: 3, scope: !3528)
!3608 = !DILocation(line: 4787, column: 29, scope: !3528)
!3609 = !DILocation(line: 4787, column: 57, scope: !3528)
!3610 = !DILocation(line: 4787, column: 3, scope: !3528)
!3611 = !DILocation(line: 4788, column: 29, scope: !3528)
!3612 = !DILocation(line: 4788, column: 59, scope: !3528)
!3613 = !DILocation(line: 4788, column: 3, scope: !3528)
!3614 = !DILocation(line: 4789, column: 29, scope: !3528)
!3615 = !DILocation(line: 4789, column: 59, scope: !3528)
!3616 = !DILocation(line: 4789, column: 3, scope: !3528)
!3617 = !DILocation(line: 4794, column: 3, scope: !3528)
!3618 = !DILocation(line: 4795, column: 3, scope: !3528)
!3619 = !DILocation(line: 4797, column: 3, scope: !3528)
!3620 = !DILocation(line: 4798, column: 3, scope: !3528)
!3621 = !DILocation(line: 4799, column: 7, scope: !3528)
!3622 = !DILocation(line: 4800, column: 5, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 4799, column: 7)
!3624 = !DILocation(line: 4802, column: 3, scope: !3528)
!3625 = !DILocation(line: 4803, column: 3, scope: !3528)
!3626 = !DILocation(line: 4805, column: 3, scope: !3528)
!3627 = !DILocation(line: 4806, column: 1, scope: !3528)
!3628 = distinct !DISubprogram(name: "remove_dead_inserted_code", scope: !3, file: !3, line: 4468, type: !3629, scopeLine: 4469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3631)
!3629 = !DISubroutineType(types: !3630)
!3630 = !{null}
!3631 = !{!3632, !3633, !3634, !3635, !3639, !3643, !3646, !3660, !3661, !3665}
!3632 = !DILocalVariable(name: "worklist", scope: !3628, file: !3, line: 4470, type: !2139)
!3633 = !DILocalVariable(name: "i", scope: !3628, file: !3, line: 4471, type: !664)
!3634 = !DILocalVariable(name: "t", scope: !3628, file: !3, line: 4472, type: !1025)
!3635 = !DILocalVariable(name: "k", scope: !3636, file: !3, line: 4489, type: !6)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 4488, column: 2)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 4487, column: 11)
!3638 = distinct !DILexicalBlock(scope: !3628, file: !3, line: 4481, column: 5)
!3639 = !DILocalVariable(name: "arg", scope: !3640, file: !3, line: 4494, type: !765)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 4493, column: 6)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 4492, column: 4)
!3642 = distinct !DILexicalBlock(scope: !3636, file: !3, line: 4492, column: 4)
!3643 = !DILocalVariable(name: "n", scope: !3644, file: !3, line: 4497, type: !1025)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !3, line: 4496, column: 3)
!3645 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 4495, column: 12)
!3646 = !DILocalVariable(name: "iter", scope: !3647, file: !3, line: 4508, type: !3648)
!3647 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 4504, column: 2)
!3648 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !580, line: 140, baseType: !3649)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !580, line: 131, size: 320, elements: !3650)
!3650 = !{!3651, !3652, !3653, !3655, !3657, !3658, !3659}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3649, file: !580, line: 133, baseType: !663, size: 8)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !3649, file: !580, line: 134, baseType: !579, size: 32, offset: 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !3649, file: !580, line: 135, baseType: !3654, size: 64, offset: 64)
!3654 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !580, line: 42, baseType: !1054)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !3649, file: !580, line: 136, baseType: !3656, size: 64, offset: 128)
!3656 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !580, line: 50, baseType: !1061)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !3649, file: !580, line: 137, baseType: !664, size: 32, offset: 192)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !3649, file: !580, line: 138, baseType: !664, size: 32, offset: 224)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !3649, file: !580, line: 139, baseType: !1025, size: 64, offset: 256)
!3660 = !DILocalVariable(name: "use", scope: !3647, file: !3, line: 4509, type: !765)
!3661 = !DILocalVariable(name: "n", scope: !3662, file: !3, line: 4518, type: !1025)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !3, line: 4517, column: 6)
!3663 = distinct !DILexicalBlock(scope: !3664, file: !3, line: 4516, column: 4)
!3664 = distinct !DILexicalBlock(scope: !3647, file: !3, line: 4516, column: 4)
!3665 = !DILocalVariable(name: "gsi", scope: !3666, file: !3, line: 4529, type: !3671)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !3, line: 4528, column: 2)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 4527, column: 11)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 4526, column: 5)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !3, line: 4525, column: 3)
!3670 = distinct !DILexicalBlock(scope: !3628, file: !3, line: 4525, column: 3)
!3671 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !587, line: 265, baseType: !3672)
!3672 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !587, line: 254, size: 192, elements: !3673)
!3673 = !{!3674, !3675, !3676}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3672, file: !587, line: 257, baseType: !1020, size: 64)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3672, file: !587, line: 263, baseType: !1015, size: 64, offset: 64)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3672, file: !587, line: 264, baseType: !1477, size: 64, offset: 128)
!3677 = !DILocation(line: 4470, column: 3, scope: !3628)
!3678 = !DILocation(line: 0, scope: !3628)
!3679 = !DILocation(line: 4472, column: 3, scope: !3628)
!3680 = !DILocation(line: 4474, column: 14, scope: !3628)
!3681 = !DILocation(line: 4474, column: 12, scope: !3628)
!3682 = !DILocation(line: 4475, column: 8, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3628, file: !3, line: 4475, column: 3)
!3684 = !DILocation(line: 0, scope: !3683)
!3685 = !DILocation(line: 4475, column: 15, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 4475, column: 3)
!3687 = !DILocation(line: 4475, column: 3, scope: !3683)
!3688 = !DILocation(line: 0, scope: !3647)
!3689 = !DILocation(line: 4480, column: 3, scope: !3628)
!3690 = !DILocation(line: 4477, column: 23, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 4477, column: 11)
!3692 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 4476, column: 5)
!3693 = !DILocation(line: 4477, column: 11, scope: !3691)
!3694 = !DILocation(line: 4477, column: 11, scope: !3692)
!3695 = !DILocation(line: 4478, column: 2, scope: !3691)
!3696 = !DILocation(line: 4475, column: 60, scope: !3686)
!3697 = !DILocation(line: 4475, column: 3, scope: !3686)
!3698 = distinct !{!3698, !3687, !3699}
!3699 = !DILocation(line: 4479, column: 5, scope: !3683)
!3700 = !DILocation(line: 4480, column: 10, scope: !3628)
!3701 = !DILocation(line: 4480, column: 40, scope: !3628)
!3702 = !DILocation(line: 0, scope: !3666)
!3703 = !DILocation(line: 4525, column: 3, scope: !3670)
!3704 = !DILocation(line: 4482, column: 11, scope: !3638)
!3705 = !DILocation(line: 4482, column: 9, scope: !3638)
!3706 = !DILocation(line: 4487, column: 11, scope: !3637)
!3707 = !DILocation(line: 4487, column: 27, scope: !3637)
!3708 = !DILocation(line: 4487, column: 11, scope: !3638)
!3709 = !DILocation(line: 4491, column: 4, scope: !3636)
!3710 = !DILocation(line: 0, scope: !3636)
!3711 = !DILocation(line: 4492, column: 9, scope: !3642)
!3712 = !DILocation(line: 0, scope: !3642)
!3713 = !DILocation(line: 4492, column: 41, scope: !3641)
!3714 = !DILocation(line: 4492, column: 20, scope: !3641)
!3715 = !DILocation(line: 4492, column: 18, scope: !3641)
!3716 = !DILocation(line: 4492, column: 4, scope: !3642)
!3717 = !DILocation(line: 4494, column: 19, scope: !3640)
!3718 = !DILocation(line: 0, scope: !3640)
!3719 = !DILocation(line: 4495, column: 12, scope: !3645)
!3720 = !DILocation(line: 4495, column: 28, scope: !3645)
!3721 = !DILocation(line: 4495, column: 12, scope: !3640)
!3722 = !DILocation(line: 4497, column: 16, scope: !3644)
!3723 = !DILocation(line: 0, scope: !3644)
!3724 = !DILocation(line: 4498, column: 9, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3644, file: !3, line: 4498, column: 9)
!3726 = !DILocation(line: 4498, column: 9, scope: !3644)
!3727 = !DILocation(line: 4499, column: 7, scope: !3725)
!3728 = !DILocation(line: 4492, column: 46, scope: !3641)
!3729 = !DILocation(line: 4492, column: 4, scope: !3641)
!3730 = distinct !{!3730, !3716, !3731}
!3731 = !DILocation(line: 4501, column: 6, scope: !3642)
!3732 = !DILocation(line: 4508, column: 4, scope: !3647)
!3733 = !DILocation(line: 4516, column: 4, scope: !3664)
!3734 = !DILocation(line: 0, scope: !3664)
!3735 = !DILocation(line: 4516, column: 4, scope: !3663)
!3736 = !DILocation(line: 4518, column: 19, scope: !3662)
!3737 = !DILocation(line: 0, scope: !3662)
!3738 = !DILocation(line: 4519, column: 12, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3662, file: !3, line: 4519, column: 12)
!3740 = !DILocation(line: 4519, column: 12, scope: !3662)
!3741 = !DILocation(line: 4520, column: 3, scope: !3739)
!3742 = distinct !{!3742, !3733, !3743}
!3743 = !DILocation(line: 4521, column: 6, scope: !3664)
!3744 = !DILocation(line: 4522, column: 2, scope: !3637)
!3745 = distinct !{!3745, !3689, !3746}
!3746 = !DILocation(line: 4523, column: 5, scope: !3628)
!3747 = !DILocation(line: 0, scope: !3670)
!3748 = !DILocation(line: 4525, column: 15, scope: !3669)
!3749 = !DILocation(line: 4527, column: 24, scope: !3667)
!3750 = !DILocation(line: 4527, column: 12, scope: !3667)
!3751 = !DILocation(line: 4527, column: 11, scope: !3668)
!3752 = !DILocation(line: 4529, column: 4, scope: !3666)
!3753 = !DILocation(line: 4531, column: 8, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3666, file: !3, line: 4531, column: 8)
!3755 = !DILocation(line: 4531, column: 18, scope: !3754)
!3756 = !DILocation(line: 4531, column: 22, scope: !3754)
!3757 = !DILocation(line: 4531, column: 33, scope: !3754)
!3758 = !DILocation(line: 4531, column: 8, scope: !3666)
!3759 = !DILocation(line: 4533, column: 8, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 4532, column: 6)
!3761 = !DILocation(line: 4534, column: 27, scope: !3760)
!3762 = !DILocation(line: 4534, column: 38, scope: !3760)
!3763 = !DILocation(line: 4534, column: 8, scope: !3760)
!3764 = !DILocation(line: 4535, column: 6, scope: !3760)
!3765 = !DILocation(line: 4537, column: 10, scope: !3666)
!3766 = !DILocation(line: 4537, column: 24, scope: !3666)
!3767 = !DILocation(line: 4538, column: 21, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3666, file: !3, line: 4538, column: 8)
!3769 = !DILocation(line: 4538, column: 8, scope: !3768)
!3770 = !DILocation(line: 4538, column: 24, scope: !3768)
!3771 = !DILocation(line: 4538, column: 8, scope: !3666)
!3772 = !DILocation(line: 4539, column: 6, scope: !3768)
!3773 = !DILocation(line: 4542, column: 8, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 4541, column: 6)
!3775 = !DILocation(line: 4543, column: 22, scope: !3774)
!3776 = !DILocation(line: 4543, column: 8, scope: !3774)
!3777 = !DILocation(line: 4545, column: 2, scope: !3667)
!3778 = !DILocation(line: 4545, column: 2, scope: !3666)
!3779 = !DILocation(line: 4525, column: 60, scope: !3669)
!3780 = !DILocation(line: 4525, column: 3, scope: !3669)
!3781 = distinct !{!3781, !3703, !3782}
!3782 = !DILocation(line: 4546, column: 5, scope: !3670)
!3783 = !DILocation(line: 4547, column: 3, scope: !3628)
!3784 = !DILocation(line: 4548, column: 1, scope: !3628)
!3785 = distinct !DISubprogram(name: "init_pre", scope: !3, file: !3, line: 4632, type: !3786, scopeLine: 4633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3788)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{null, !663}
!3788 = !{!3789, !3790}
!3789 = !DILocalVariable(name: "do_fre", arg: 1, scope: !3785, file: !3, line: 4632, type: !663)
!3790 = !DILocalVariable(name: "bb", scope: !3785, file: !3, line: 4634, type: !1477)
!3791 = !DILocation(line: 0, scope: !3785)
!3792 = !DILocation(line: 4636, column: 22, scope: !3785)
!3793 = !DILocation(line: 4637, column: 15, scope: !3785)
!3794 = !DILocation(line: 4638, column: 3, scope: !3785)
!3795 = !DILocation(line: 4639, column: 23, scope: !3785)
!3796 = !DILocation(line: 4639, column: 21, scope: !3785)
!3797 = !DILocation(line: 4640, column: 3, scope: !3785)
!3798 = !DILocation(line: 4642, column: 14, scope: !3785)
!3799 = !DILocation(line: 4644, column: 10, scope: !3785)
!3800 = !DILocation(line: 4646, column: 18, scope: !3785)
!3801 = !DILocation(line: 4647, column: 17, scope: !3785)
!3802 = !DILocation(line: 4648, column: 11, scope: !3785)
!3803 = !DILocation(line: 4650, column: 14, scope: !3785)
!3804 = !DILocation(line: 4652, column: 3, scope: !3785)
!3805 = !DILocation(line: 4653, column: 3, scope: !3785)
!3806 = !DILocation(line: 4656, column: 15, scope: !3785)
!3807 = !DILocation(line: 4656, column: 13, scope: !3785)
!3808 = !DILocation(line: 4657, column: 30, scope: !3785)
!3809 = !DILocation(line: 4657, column: 3, scope: !3785)
!3810 = !DILocation(line: 4659, column: 3, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 4659, column: 3)
!3812 = !DILocation(line: 0, scope: !3811)
!3813 = !DILocation(line: 4660, column: 15, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 4659, column: 3)
!3815 = !DILocation(line: 4660, column: 9, scope: !3814)
!3816 = !DILocation(line: 4660, column: 13, scope: !3814)
!3817 = !DILocation(line: 4659, column: 3, scope: !3814)
!3818 = distinct !{!3818, !3810, !3819}
!3819 = !DILocation(line: 4660, column: 15, scope: !3811)
!3820 = !DILocation(line: 4662, column: 3, scope: !3785)
!3821 = !DILocation(line: 4663, column: 3, scope: !3785)
!3822 = !DILocation(line: 4665, column: 3, scope: !3785)
!3823 = !DILocation(line: 4666, column: 24, scope: !3785)
!3824 = !DILocation(line: 4666, column: 22, scope: !3785)
!3825 = !DILocation(line: 4667, column: 25, scope: !3785)
!3826 = !DILocation(line: 4667, column: 23, scope: !3785)
!3827 = !DILocation(line: 4669, column: 35, scope: !3785)
!3828 = !DILocation(line: 4669, column: 49, scope: !3785)
!3829 = !DILocation(line: 4669, column: 22, scope: !3785)
!3830 = !DILocation(line: 4669, column: 20, scope: !3785)
!3831 = !DILocation(line: 4672, column: 21, scope: !3785)
!3832 = !DILocation(line: 4672, column: 19, scope: !3785)
!3833 = !DILocation(line: 4674, column: 19, scope: !3785)
!3834 = !DILocation(line: 4674, column: 17, scope: !3785)
!3835 = !DILocation(line: 4676, column: 3, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 4676, column: 3)
!3837 = !DILocation(line: 0, scope: !3836)
!3838 = !DILocation(line: 4678, column: 22, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 4677, column: 5)
!3840 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 4676, column: 3)
!3841 = !DILocation(line: 4678, column: 7, scope: !3839)
!3842 = !DILocation(line: 4678, column: 20, scope: !3839)
!3843 = !DILocation(line: 4679, column: 22, scope: !3839)
!3844 = !DILocation(line: 4679, column: 7, scope: !3839)
!3845 = !DILocation(line: 4679, column: 20, scope: !3839)
!3846 = !DILocation(line: 4680, column: 22, scope: !3839)
!3847 = !DILocation(line: 4680, column: 7, scope: !3839)
!3848 = !DILocation(line: 4680, column: 20, scope: !3839)
!3849 = !DILocation(line: 4681, column: 24, scope: !3839)
!3850 = !DILocation(line: 4681, column: 7, scope: !3839)
!3851 = !DILocation(line: 4681, column: 22, scope: !3839)
!3852 = !DILocation(line: 4676, column: 3, scope: !3840)
!3853 = distinct !{!3853, !3835, !3854}
!3854 = !DILocation(line: 4682, column: 5, scope: !3836)
!3855 = !DILocation(line: 4684, column: 21, scope: !3785)
!3856 = !DILocation(line: 4684, column: 19, scope: !3785)
!3857 = !DILocation(line: 4685, column: 1, scope: !3785)
!3858 = distinct !DISubprogram(name: "compute_avail", scope: !3, file: !3, line: 3837, type: !3629, scopeLine: 3838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3859)
!3859 = !{!3860, !3861, !3862, !3863, !3864, !3865, !3869, !3870, !3872, !3873, !3874, !3875, !3879, !3880, !3883, !3887, !3890, !3891, !3892, !3893, !3894, !3896, !3899, !3900, !3902, !3903}
!3860 = !DILocalVariable(name: "block", scope: !3858, file: !3, line: 3840, type: !1477)
!3861 = !DILocalVariable(name: "son", scope: !3858, file: !3, line: 3840, type: !1477)
!3862 = !DILocalVariable(name: "worklist", scope: !3858, file: !3, line: 3841, type: !2163)
!3863 = !DILocalVariable(name: "sp", scope: !3858, file: !3, line: 3842, type: !1170)
!3864 = !DILocalVariable(name: "i", scope: !3858, file: !3, line: 3843, type: !6)
!3865 = !DILocalVariable(name: "name", scope: !3866, file: !3, line: 3849, type: !765)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !3, line: 3848, column: 5)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !3, line: 3847, column: 3)
!3868 = distinct !DILexicalBlock(scope: !3858, file: !3, line: 3847, column: 3)
!3869 = !DILocalVariable(name: "e", scope: !3866, file: !3, line: 3850, type: !754)
!3870 = !DILocalVariable(name: "gsi", scope: !3871, file: !3, line: 3877, type: !3671)
!3871 = distinct !DILexicalBlock(scope: !3858, file: !3, line: 3876, column: 5)
!3872 = !DILocalVariable(name: "stmt", scope: !3871, file: !3, line: 3878, type: !1025)
!3873 = !DILocalVariable(name: "dom", scope: !3871, file: !3, line: 3879, type: !1477)
!3874 = !DILocalVariable(name: "stmt_uid", scope: !3871, file: !3, line: 3880, type: !6)
!3875 = !DILocalVariable(name: "iter", scope: !3876, file: !3, line: 3901, type: !3648)
!3876 = distinct !DILexicalBlock(scope: !3877, file: !3, line: 3900, column: 2)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !3, line: 3899, column: 7)
!3878 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 3899, column: 7)
!3879 = !DILocalVariable(name: "op", scope: !3876, file: !3, line: 3902, type: !765)
!3880 = !DILocalVariable(name: "flags", scope: !3881, file: !3, line: 3918, type: !664)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !3, line: 3913, column: 6)
!3882 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 3911, column: 8)
!3883 = !DILocalVariable(name: "e", scope: !3884, file: !3, line: 3926, type: !754)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 3925, column: 6)
!3885 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 3924, column: 4)
!3886 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 3924, column: 4)
!3887 = !DILocalVariable(name: "ref", scope: !3888, file: !3, line: 3947, type: !2068)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 3946, column: 8)
!3889 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 3939, column: 6)
!3890 = !DILocalVariable(name: "i", scope: !3888, file: !3, line: 3948, type: !6)
!3891 = !DILocalVariable(name: "vro", scope: !3888, file: !3, line: 3949, type: !2899)
!3892 = !DILocalVariable(name: "result", scope: !3888, file: !3, line: 3950, type: !754)
!3893 = !DILocalVariable(name: "ops", scope: !3888, file: !3, line: 3951, type: !2078)
!3894 = !DILocalVariable(name: "result", scope: !3895, file: !3, line: 3989, type: !754)
!3895 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 3988, column: 8)
!3896 = !DILocalVariable(name: "nary", scope: !3897, file: !3, line: 3996, type: !2054)
!3897 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 3995, column: 7)
!3898 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 3991, column: 5)
!3899 = !DILocalVariable(name: "i", scope: !3897, file: !3, line: 3997, type: !6)
!3900 = !DILocalVariable(name: "ref", scope: !3901, file: !3, line: 4023, type: !2068)
!3901 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 4022, column: 7)
!3902 = !DILocalVariable(name: "i", scope: !3901, file: !3, line: 4024, type: !6)
!3903 = !DILocalVariable(name: "vro", scope: !3901, file: !3, line: 4025, type: !2899)
!3904 = !DILocation(line: 0, scope: !3858)
!3905 = !DILocation(line: 3847, column: 8, scope: !3868)
!3906 = !DILocation(line: 0, scope: !3868)
!3907 = !DILocation(line: 3847, column: 19, scope: !3867)
!3908 = !DILocation(line: 3847, column: 17, scope: !3867)
!3909 = !DILocation(line: 3847, column: 3, scope: !3868)
!3910 = !DILocation(line: 3849, column: 19, scope: !3866)
!3911 = !DILocation(line: 0, scope: !3866)
!3912 = !DILocation(line: 3851, column: 12, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 3851, column: 11)
!3914 = !DILocation(line: 3852, column: 4, scope: !3913)
!3915 = !DILocation(line: 3852, column: 8, scope: !3913)
!3916 = !DILocation(line: 3853, column: 4, scope: !3913)
!3917 = !DILocation(line: 3853, column: 7, scope: !3913)
!3918 = !DILocation(line: 3854, column: 4, scope: !3913)
!3919 = !DILocation(line: 3854, column: 8, scope: !3913)
!3920 = !DILocation(line: 3851, column: 11, scope: !3866)
!3921 = !DILocation(line: 3857, column: 11, scope: !3866)
!3922 = !DILocation(line: 3858, column: 21, scope: !3866)
!3923 = !DILocation(line: 3858, column: 7, scope: !3866)
!3924 = !DILocation(line: 3859, column: 12, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 3859, column: 11)
!3926 = !DILocation(line: 3859, column: 11, scope: !3866)
!3927 = !DILocation(line: 3860, column: 26, scope: !3925)
!3928 = !DILocation(line: 3860, column: 2, scope: !3925)
!3929 = !DILocation(line: 3861, column: 37, scope: !3866)
!3930 = !DILocation(line: 3861, column: 7, scope: !3866)
!3931 = !DILocation(line: 3862, column: 5, scope: !3867)
!3932 = !DILocation(line: 3847, column: 34, scope: !3867)
!3933 = !DILocation(line: 3847, column: 3, scope: !3867)
!3934 = distinct !{!3934, !3909, !3935}
!3935 = !DILocation(line: 3862, column: 5, scope: !3868)
!3936 = !DILocation(line: 3865, column: 14, scope: !3858)
!3937 = !DILocation(line: 3869, column: 45, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3858, file: !3, line: 3869, column: 3)
!3939 = !DILocation(line: 3869, column: 14, scope: !3938)
!3940 = !DILocation(line: 3869, column: 8, scope: !3938)
!3941 = !DILocation(line: 0, scope: !3938)
!3942 = !DILocation(line: 3869, column: 3, scope: !3938)
!3943 = !DILocation(line: 0, scope: !3871)
!3944 = !DILocation(line: 0, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 3892, column: 7)
!3946 = !DILocation(line: 0, scope: !3878)
!3947 = !DILocation(line: 0, scope: !3876)
!3948 = !DILocation(line: 0, scope: !3901)
!3949 = !DILocation(line: 0, scope: !3897)
!3950 = !DILocation(line: 0, scope: !3888)
!3951 = !DILocation(line: 3875, column: 3, scope: !3858)
!3952 = !DILocation(line: 3872, column: 16, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 3869, column: 3)
!3954 = !DILocation(line: 3872, column: 5, scope: !3953)
!3955 = !DILocation(line: 3872, column: 20, scope: !3953)
!3956 = !DILocation(line: 3871, column: 14, scope: !3953)
!3957 = !DILocation(line: 3869, column: 3, scope: !3953)
!3958 = distinct !{!3958, !3942, !3959}
!3959 = !DILocation(line: 3872, column: 22, scope: !3938)
!3960 = !DILocation(line: 3877, column: 7, scope: !3871)
!3961 = !DILocation(line: 3883, column: 24, scope: !3871)
!3962 = !DILocation(line: 3883, column: 15, scope: !3871)
!3963 = !DILocation(line: 3887, column: 13, scope: !3871)
!3964 = !DILocation(line: 3888, column: 11, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 3888, column: 11)
!3966 = !DILocation(line: 3888, column: 11, scope: !3871)
!3967 = !DILocation(line: 3889, column: 19, scope: !3965)
!3968 = !DILocation(line: 3889, column: 38, scope: !3965)
!3969 = !DILocation(line: 3889, column: 2, scope: !3965)
!3970 = !DILocation(line: 3892, column: 18, scope: !3945)
!3971 = !DILocation(line: 3892, column: 12, scope: !3945)
!3972 = !DILocation(line: 3892, column: 43, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 3892, column: 7)
!3974 = !DILocation(line: 3892, column: 42, scope: !3973)
!3975 = !DILocation(line: 3892, column: 7, scope: !3945)
!3976 = !DILocation(line: 3893, column: 23, scope: !3973)
!3977 = !DILocation(line: 3893, column: 2, scope: !3973)
!3978 = !DILocation(line: 3892, column: 60, scope: !3973)
!3979 = !DILocation(line: 3892, column: 7, scope: !3973)
!3980 = distinct !{!3980, !3975, !3981}
!3981 = !DILocation(line: 3893, column: 44, scope: !3945)
!3982 = !DILocation(line: 3895, column: 7, scope: !3871)
!3983 = !DILocation(line: 3895, column: 32, scope: !3871)
!3984 = !DILocation(line: 3899, column: 18, scope: !3878)
!3985 = !DILocation(line: 3899, column: 12, scope: !3878)
!3986 = !DILocation(line: 3899, column: 41, scope: !3877)
!3987 = !DILocation(line: 3899, column: 40, scope: !3877)
!3988 = !DILocation(line: 3899, column: 7, scope: !3878)
!3989 = !DILocation(line: 3901, column: 4, scope: !3876)
!3990 = !DILocation(line: 3904, column: 11, scope: !3876)
!3991 = !DILocation(line: 3905, column: 34, scope: !3876)
!3992 = !DILocation(line: 3905, column: 4, scope: !3876)
!3993 = !DILocation(line: 3911, column: 8, scope: !3882)
!3994 = !DILocation(line: 3912, column: 8, scope: !3882)
!3995 = !DILocation(line: 3912, column: 12, scope: !3882)
!3996 = !DILocation(line: 3911, column: 8, scope: !3876)
!3997 = !DILocation(line: 3918, column: 20, scope: !3881)
!3998 = !DILocation(line: 0, scope: !3881)
!3999 = !DILocation(line: 3920, column: 5, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 3919, column: 12)
!4001 = !DILocation(line: 3921, column: 3, scope: !4000)
!4002 = !DILocation(line: 3921, column: 28, scope: !4000)
!4003 = !DILocation(line: 3924, column: 4, scope: !3886)
!4004 = !DILocation(line: 0, scope: !3886)
!4005 = !DILocation(line: 3924, column: 4, scope: !3885)
!4006 = !DILocation(line: 3926, column: 21, scope: !3884)
!4007 = !DILocation(line: 0, scope: !3884)
!4008 = !DILocation(line: 3928, column: 22, scope: !3884)
!4009 = !DILocation(line: 3928, column: 8, scope: !3884)
!4010 = !DILocation(line: 3929, column: 13, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !3884, file: !3, line: 3929, column: 12)
!4012 = !DILocation(line: 3929, column: 12, scope: !3884)
!4013 = !DILocation(line: 3930, column: 27, scope: !4011)
!4014 = !DILocation(line: 3930, column: 3, scope: !4011)
!4015 = !DILocation(line: 3931, column: 38, scope: !3884)
!4016 = !DILocation(line: 3931, column: 8, scope: !3884)
!4017 = distinct !{!4017, !4003, !4018}
!4018 = !DILocation(line: 3932, column: 6, scope: !3886)
!4019 = !DILocation(line: 3934, column: 8, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 3934, column: 8)
!4021 = !DILocation(line: 3935, column: 8, scope: !4020)
!4022 = !DILocation(line: 3935, column: 11, scope: !4020)
!4023 = !DILocation(line: 3934, column: 8, scope: !3876)
!4024 = !DILocation(line: 3938, column: 12, scope: !3876)
!4025 = !DILocation(line: 3938, column: 4, scope: !3876)
!4026 = !DILocation(line: 3941, column: 8, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 3941, column: 8)
!4028 = !DILocation(line: 0, scope: !4027)
!4029 = !DILocation(line: 3941, column: 8, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 3941, column: 8)
!4031 = !DILocation(line: 3942, column: 3, scope: !4030)
!4032 = distinct !{!4032, !4026, !4033}
!4033 = !DILocation(line: 3942, column: 28, scope: !4027)
!4034 = !DILocation(line: 3947, column: 3, scope: !3888)
!4035 = !DILocation(line: 3949, column: 3, scope: !3888)
!4036 = !DILocation(line: 3951, column: 3, scope: !3888)
!4037 = !DILocation(line: 3951, column: 33, scope: !3888)
!4038 = !DILocation(line: 3953, column: 8, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 3953, column: 7)
!4040 = !DILocation(line: 3953, column: 7, scope: !3888)
!4041 = !DILocation(line: 3956, column: 3, scope: !3888)
!4042 = !DILocation(line: 3957, column: 31, scope: !3888)
!4043 = !DILocation(line: 3958, column: 10, scope: !3888)
!4044 = !DILocation(line: 3959, column: 10, scope: !3888)
!4045 = !DILocation(line: 3957, column: 3, scope: !3888)
!4046 = !DILocation(line: 3960, column: 3, scope: !3888)
!4047 = !DILocation(line: 3961, column: 8, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 3961, column: 7)
!4049 = !DILocation(line: 3961, column: 7, scope: !3888)
!4050 = !DILocation(line: 3964, column: 3, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 3964, column: 3)
!4052 = !DILocation(line: 3964, column: 15, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 3964, column: 3)
!4054 = !DILocation(line: 0, scope: !4051)
!4055 = !DILocation(line: 3968, column: 11, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 3968, column: 11)
!4057 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 3967, column: 5)
!4058 = !DILocation(line: 3968, column: 16, scope: !4056)
!4059 = !DILocation(line: 3968, column: 20, scope: !4056)
!4060 = !DILocation(line: 3968, column: 23, scope: !4056)
!4061 = !DILocation(line: 3968, column: 44, scope: !4056)
!4062 = !DILocation(line: 3968, column: 11, scope: !4057)
!4063 = !DILocation(line: 3969, column: 9, scope: !4056)
!4064 = !DILocation(line: 3970, column: 11, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 3970, column: 11)
!4066 = !DILocation(line: 3970, column: 16, scope: !4065)
!4067 = !DILocation(line: 3970, column: 20, scope: !4065)
!4068 = !DILocation(line: 3970, column: 23, scope: !4065)
!4069 = !DILocation(line: 3970, column: 44, scope: !4065)
!4070 = !DILocation(line: 3970, column: 11, scope: !4057)
!4071 = !DILocation(line: 3971, column: 9, scope: !4065)
!4072 = !DILocation(line: 3972, column: 11, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 3972, column: 11)
!4074 = !DILocation(line: 3972, column: 16, scope: !4073)
!4075 = !DILocation(line: 3972, column: 20, scope: !4073)
!4076 = !DILocation(line: 3972, column: 23, scope: !4073)
!4077 = !DILocation(line: 3972, column: 44, scope: !4073)
!4078 = !DILocation(line: 3972, column: 11, scope: !4057)
!4079 = !DILocation(line: 3973, column: 9, scope: !4073)
!4080 = !DILocation(line: 3966, column: 14, scope: !4053)
!4081 = !DILocation(line: 3964, column: 3, scope: !4053)
!4082 = distinct !{!4082, !4050, !4083}
!4083 = !DILocation(line: 3974, column: 5, scope: !4051)
!4084 = !DILocation(line: 3975, column: 35, scope: !3888)
!4085 = !DILocation(line: 3975, column: 23, scope: !3888)
!4086 = !DILocation(line: 3975, column: 12, scope: !3888)
!4087 = !DILocation(line: 3976, column: 11, scope: !3888)
!4088 = !DILocation(line: 3976, column: 16, scope: !3888)
!4089 = !DILocation(line: 3977, column: 11, scope: !3888)
!4090 = !DILocation(line: 3977, column: 14, scope: !3888)
!4091 = !DILocation(line: 3978, column: 33, scope: !3888)
!4092 = !DILocation(line: 3978, column: 3, scope: !3888)
!4093 = !DILocation(line: 3978, column: 31, scope: !3888)
!4094 = !DILocation(line: 3980, column: 3, scope: !3888)
!4095 = !DILocation(line: 3981, column: 17, scope: !3888)
!4096 = !DILocation(line: 3981, column: 3, scope: !3888)
!4097 = !DILocation(line: 3982, column: 8, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 3982, column: 7)
!4099 = !DILocation(line: 3982, column: 7, scope: !3888)
!4100 = !DILocation(line: 3983, column: 35, scope: !4098)
!4101 = !DILocation(line: 3983, column: 5, scope: !4098)
!4102 = !DILocation(line: 3985, column: 8, scope: !3889)
!4103 = !DILocation(line: 0, scope: !3895)
!4104 = !DILocation(line: 3990, column: 11, scope: !3895)
!4105 = !DILocation(line: 3990, column: 3, scope: !3895)
!4106 = !DILocation(line: 3996, column: 9, scope: !3897)
!4107 = !DILocation(line: 3999, column: 35, scope: !3897)
!4108 = !DILocation(line: 3999, column: 57, scope: !3897)
!4109 = !DILocation(line: 4000, column: 7, scope: !3897)
!4110 = !DILocation(line: 4001, column: 7, scope: !3897)
!4111 = !DILocation(line: 4002, column: 7, scope: !3897)
!4112 = !DILocation(line: 4003, column: 7, scope: !3897)
!4113 = !DILocation(line: 3999, column: 9, scope: !3897)
!4114 = !DILocation(line: 4006, column: 14, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 4006, column: 13)
!4116 = !DILocation(line: 4006, column: 13, scope: !3897)
!4117 = !DILocation(line: 4009, column: 9, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 4009, column: 9)
!4119 = !DILocation(line: 4009, column: 25, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 4009, column: 9)
!4121 = !DILocation(line: 4009, column: 31, scope: !4120)
!4122 = !DILocation(line: 4009, column: 23, scope: !4120)
!4123 = !DILocation(line: 4010, column: 8, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 4010, column: 8)
!4125 = !DILocation(line: 4010, column: 32, scope: !4124)
!4126 = !DILocation(line: 4010, column: 8, scope: !4120)
!4127 = !DILocation(line: 4011, column: 6, scope: !4124)
!4128 = !DILocation(line: 4009, column: 40, scope: !4120)
!4129 = !DILocation(line: 4009, column: 9, scope: !4120)
!4130 = distinct !{!4130, !4117, !4131}
!4131 = !DILocation(line: 4011, column: 40, scope: !4118)
!4132 = !DILocation(line: 4013, column: 41, scope: !3897)
!4133 = !DILocation(line: 4013, column: 29, scope: !3897)
!4134 = !DILocation(line: 4013, column: 18, scope: !3897)
!4135 = !DILocation(line: 4014, column: 17, scope: !3897)
!4136 = !DILocation(line: 4014, column: 22, scope: !3897)
!4137 = !DILocation(line: 4015, column: 17, scope: !3897)
!4138 = !DILocation(line: 4015, column: 20, scope: !3897)
!4139 = !DILocation(line: 4016, column: 34, scope: !3897)
!4140 = !DILocation(line: 4016, column: 9, scope: !3897)
!4141 = !DILocation(line: 4016, column: 32, scope: !3897)
!4142 = !DILocation(line: 4017, column: 9, scope: !3897)
!4143 = !DILocation(line: 4018, column: 7, scope: !3898)
!4144 = !DILocation(line: 4023, column: 9, scope: !3901)
!4145 = !DILocation(line: 4025, column: 9, scope: !3901)
!4146 = !DILocation(line: 4027, column: 30, scope: !3901)
!4147 = !DILocation(line: 4028, column: 9, scope: !3901)
!4148 = !DILocation(line: 4027, column: 9, scope: !3901)
!4149 = !DILocation(line: 4030, column: 14, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !3901, file: !3, line: 4030, column: 13)
!4151 = !DILocation(line: 4030, column: 13, scope: !3901)
!4152 = !DILocation(line: 4033, column: 9, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !3901, file: !3, line: 4033, column: 9)
!4154 = !DILocation(line: 4033, column: 21, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 4033, column: 9)
!4156 = !DILocation(line: 0, scope: !4153)
!4157 = !DILocation(line: 4037, column: 10, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 4037, column: 10)
!4159 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 4036, column: 4)
!4160 = !DILocation(line: 4037, column: 15, scope: !4158)
!4161 = !DILocation(line: 4037, column: 19, scope: !4158)
!4162 = !DILocation(line: 4037, column: 22, scope: !4158)
!4163 = !DILocation(line: 4037, column: 43, scope: !4158)
!4164 = !DILocation(line: 4037, column: 10, scope: !4159)
!4165 = !DILocation(line: 4038, column: 8, scope: !4158)
!4166 = !DILocation(line: 4039, column: 10, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 4039, column: 10)
!4168 = !DILocation(line: 4039, column: 15, scope: !4167)
!4169 = !DILocation(line: 4039, column: 19, scope: !4167)
!4170 = !DILocation(line: 4039, column: 22, scope: !4167)
!4171 = !DILocation(line: 4039, column: 43, scope: !4167)
!4172 = !DILocation(line: 4039, column: 10, scope: !4159)
!4173 = !DILocation(line: 4040, column: 8, scope: !4167)
!4174 = !DILocation(line: 4041, column: 10, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 4041, column: 10)
!4176 = !DILocation(line: 4041, column: 15, scope: !4175)
!4177 = !DILocation(line: 4041, column: 19, scope: !4175)
!4178 = !DILocation(line: 4041, column: 22, scope: !4175)
!4179 = !DILocation(line: 4041, column: 43, scope: !4175)
!4180 = !DILocation(line: 4041, column: 10, scope: !4159)
!4181 = !DILocation(line: 4042, column: 8, scope: !4175)
!4182 = !DILocation(line: 4035, column: 20, scope: !4155)
!4183 = !DILocation(line: 4033, column: 9, scope: !4155)
!4184 = distinct !{!4184, !4152, !4185}
!4185 = !DILocation(line: 4043, column: 4, scope: !4153)
!4186 = !DILocation(line: 4044, column: 41, scope: !3901)
!4187 = !DILocation(line: 4044, column: 29, scope: !3901)
!4188 = !DILocation(line: 4044, column: 18, scope: !3901)
!4189 = !DILocation(line: 4045, column: 17, scope: !3901)
!4190 = !DILocation(line: 4045, column: 22, scope: !3901)
!4191 = !DILocation(line: 4046, column: 17, scope: !3901)
!4192 = !DILocation(line: 4046, column: 20, scope: !3901)
!4193 = !DILocation(line: 4047, column: 39, scope: !3901)
!4194 = !DILocation(line: 4047, column: 9, scope: !3901)
!4195 = !DILocation(line: 4047, column: 37, scope: !3901)
!4196 = !DILocation(line: 4048, column: 9, scope: !3901)
!4197 = !DILocation(line: 4049, column: 7, scope: !3898)
!4198 = !DILocation(line: 4055, column: 7, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 4055, column: 7)
!4200 = !DILocation(line: 0, scope: !4199)
!4201 = !DILocation(line: 4055, column: 7, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 4055, column: 7)
!4203 = !DILocation(line: 4056, column: 9, scope: !4202)
!4204 = distinct !{!4204, !4198, !4205}
!4205 = !DILocation(line: 4056, column: 34, scope: !4199)
!4206 = !DILocation(line: 0, scope: !3898)
!4207 = !DILocation(line: 4060, column: 3, scope: !3895)
!4208 = !DILocation(line: 4061, column: 17, scope: !3895)
!4209 = !DILocation(line: 4061, column: 3, scope: !3895)
!4210 = !DILocation(line: 4062, column: 8, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 4062, column: 7)
!4212 = !DILocation(line: 4062, column: 7, scope: !3895)
!4213 = !DILocation(line: 4063, column: 35, scope: !4211)
!4214 = !DILocation(line: 4063, column: 5, scope: !4211)
!4215 = !DILocation(line: 4070, column: 2, scope: !3877)
!4216 = !DILocation(line: 3899, column: 58, scope: !3877)
!4217 = !DILocation(line: 3899, column: 7, scope: !3877)
!4218 = distinct !{!4218, !3988, !4219}
!4219 = !DILocation(line: 4070, column: 2, scope: !3878)
!4220 = !DILocation(line: 4074, column: 18, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 4074, column: 7)
!4222 = !DILocation(line: 4074, column: 12, scope: !4221)
!4223 = !DILocation(line: 0, scope: !4221)
!4224 = !DILocation(line: 4074, column: 7, scope: !4221)
!4225 = !DILocation(line: 4077, column: 13, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 4074, column: 7)
!4227 = !DILocation(line: 4077, column: 2, scope: !4226)
!4228 = !DILocation(line: 4077, column: 17, scope: !4226)
!4229 = !DILocation(line: 4076, column: 11, scope: !4226)
!4230 = !DILocation(line: 4074, column: 7, scope: !4226)
!4231 = distinct !{!4231, !4224, !4232}
!4232 = !DILocation(line: 4077, column: 19, scope: !4221)
!4233 = !DILocation(line: 4078, column: 5, scope: !3858)
!4234 = distinct !{!4234, !3951, !4233}
!4235 = !DILocation(line: 4080, column: 3, scope: !3858)
!4236 = !DILocation(line: 4081, column: 1, scope: !3858)
!4237 = distinct !DISubprogram(name: "compute_antic", scope: !3, file: !3, line: 2533, type: !3629, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4238)
!4238 = !{!4239, !4240, !4241, !4242, !4243, !4247, !4248, !4255}
!4239 = !DILocalVariable(name: "changed", scope: !4237, file: !3, line: 2535, type: !663)
!4240 = !DILocalVariable(name: "num_iterations", scope: !4237, file: !3, line: 2536, type: !664)
!4241 = !DILocalVariable(name: "block", scope: !4237, file: !3, line: 2537, type: !1477)
!4242 = !DILocalVariable(name: "i", scope: !4237, file: !3, line: 2538, type: !664)
!4243 = !DILocalVariable(name: "ei", scope: !4244, file: !3, line: 2547, type: !2146)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 2546, column: 5)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 2545, column: 3)
!4246 = distinct !DILexicalBlock(scope: !4237, file: !3, line: 2545, column: 3)
!4247 = !DILocalVariable(name: "e", scope: !4244, file: !3, line: 2548, type: !1005)
!4248 = !DILocalVariable(name: "block", scope: !4249, file: !3, line: 2585, type: !1477)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 2584, column: 6)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 2583, column: 8)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 2582, column: 2)
!4252 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 2581, column: 7)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 2581, column: 7)
!4254 = distinct !DILexicalBlock(scope: !4237, file: !3, line: 2576, column: 5)
!4255 = !DILocalVariable(name: "block", scope: !4256, file: !3, line: 2616, type: !1477)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 2615, column: 3)
!4257 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 2614, column: 12)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !3, line: 2613, column: 6)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 2612, column: 4)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 2612, column: 4)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 2607, column: 2)
!4262 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 2601, column: 5)
!4263 = distinct !DILexicalBlock(scope: !4237, file: !3, line: 2600, column: 7)
!4264 = !DILocation(line: 0, scope: !4237)
!4265 = !DILocation(line: 2542, column: 39, scope: !4237)
!4266 = !DILocation(line: 2542, column: 24, scope: !4237)
!4267 = !DILocation(line: 2542, column: 22, scope: !4237)
!4268 = !DILocation(line: 2543, column: 3, scope: !4237)
!4269 = !DILocation(line: 2545, column: 3, scope: !4246)
!4270 = !DILocation(line: 0, scope: !4244)
!4271 = !DILocation(line: 0, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 2550, column: 7)
!4273 = !DILocation(line: 0, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4272, file: !3, line: 2550, column: 7)
!4275 = !DILocation(line: 2545, column: 3, scope: !4245)
!4276 = !DILocation(line: 0, scope: !4246)
!4277 = !DILocation(line: 2547, column: 7, scope: !4244)
!4278 = !DILocation(line: 2548, column: 7, scope: !4244)
!4279 = !DILocation(line: 2550, column: 7, scope: !4272)
!4280 = !DILocation(line: 2550, column: 7, scope: !4274)
!4281 = !DILocation(line: 2552, column: 4, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4274, file: !3, line: 2551, column: 2)
!4283 = !DILocation(line: 2552, column: 7, scope: !4282)
!4284 = !DILocation(line: 2552, column: 13, scope: !4282)
!4285 = !DILocation(line: 2553, column: 17, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 2553, column: 8)
!4287 = !DILocation(line: 2553, column: 8, scope: !4282)
!4288 = !DILocation(line: 2555, column: 17, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 2554, column: 6)
!4290 = !DILocation(line: 2555, column: 44, scope: !4289)
!4291 = !DILocation(line: 2555, column: 8, scope: !4289)
!4292 = !DILocation(line: 2556, column: 8, scope: !4289)
!4293 = distinct !{!4293, !4279, !4294}
!4294 = !DILocation(line: 2558, column: 2, scope: !4272)
!4295 = !DILocation(line: 2560, column: 7, scope: !4244)
!4296 = !DILocation(line: 2560, column: 26, scope: !4244)
!4297 = !DILocation(line: 2561, column: 7, scope: !4244)
!4298 = !DILocation(line: 2561, column: 27, scope: !4244)
!4299 = !DILocation(line: 2564, column: 26, scope: !4244)
!4300 = !DILocation(line: 2564, column: 7, scope: !4244)
!4301 = !DILocation(line: 2564, column: 24, scope: !4244)
!4302 = !DILocation(line: 2565, column: 23, scope: !4244)
!4303 = !DILocation(line: 2565, column: 7, scope: !4244)
!4304 = !DILocation(line: 2565, column: 21, scope: !4244)
!4305 = !DILocation(line: 2566, column: 5, scope: !4245)
!4306 = !DILocation(line: 0, scope: !4245)
!4307 = distinct !{!4307, !4269, !4308}
!4308 = !DILocation(line: 2566, column: 5, scope: !4246)
!4309 = !DILocation(line: 2569, column: 31, scope: !4237)
!4310 = !DILocation(line: 2569, column: 3, scope: !4237)
!4311 = !DILocation(line: 2569, column: 29, scope: !4237)
!4312 = !DILocation(line: 2570, column: 3, scope: !4237)
!4313 = !DILocation(line: 2570, column: 31, scope: !4237)
!4314 = !DILocation(line: 2571, column: 28, scope: !4237)
!4315 = !DILocation(line: 2571, column: 3, scope: !4237)
!4316 = !DILocation(line: 2571, column: 26, scope: !4237)
!4317 = !DILocation(line: 2573, column: 35, scope: !4237)
!4318 = !DILocation(line: 2573, column: 52, scope: !4237)
!4319 = !DILocation(line: 2573, column: 20, scope: !4237)
!4320 = !DILocation(line: 2573, column: 18, scope: !4237)
!4321 = !DILocation(line: 2574, column: 3, scope: !4237)
!4322 = !DILocation(line: 2575, column: 3, scope: !4237)
!4323 = !DILocation(line: 0, scope: !4254)
!4324 = !DILocation(line: 2579, column: 21, scope: !4254)
!4325 = !DILocation(line: 2577, column: 11, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 2577, column: 11)
!4327 = !DILocation(line: 2577, column: 21, scope: !4326)
!4328 = !DILocation(line: 2577, column: 25, scope: !4326)
!4329 = !DILocation(line: 2577, column: 36, scope: !4326)
!4330 = !DILocation(line: 2577, column: 11, scope: !4254)
!4331 = !DILocation(line: 2578, column: 2, scope: !4326)
!4332 = !DILocation(line: 2581, column: 16, scope: !4253)
!4333 = !DILocation(line: 2581, column: 12, scope: !4253)
!4334 = !DILocation(line: 0, scope: !4253)
!4335 = !DILocation(line: 2581, column: 57, scope: !4252)
!4336 = !DILocation(line: 2581, column: 7, scope: !4253)
!4337 = distinct !{!4337, !4322, !4338}
!4338 = !DILocation(line: 2595, column: 5, scope: !4237)
!4339 = !DILocation(line: 2583, column: 8, scope: !4250)
!4340 = !DILocation(line: 2583, column: 8, scope: !4251)
!4341 = !DILocation(line: 2585, column: 28, scope: !4249)
!4342 = !DILocation(line: 0, scope: !4249)
!4343 = !DILocation(line: 2587, column: 10, scope: !4249)
!4344 = !DILocation(line: 2586, column: 19, scope: !4249)
!4345 = !DILocation(line: 2586, column: 16, scope: !4249)
!4346 = !DILocation(line: 2589, column: 6, scope: !4249)
!4347 = !DILocation(line: 2581, column: 64, scope: !4252)
!4348 = !DILocation(line: 2581, column: 7, scope: !4252)
!4349 = distinct !{!4349, !4336, !4350}
!4350 = !DILocation(line: 2590, column: 2, scope: !4253)
!4351 = !DILocation(line: 2597, column: 31, scope: !4237)
!4352 = !DILocation(line: 2597, column: 3, scope: !4237)
!4353 = !DILocation(line: 2600, column: 7, scope: !4263)
!4354 = !DILocation(line: 2600, column: 7, scope: !4237)
!4355 = !DILocation(line: 2602, column: 21, scope: !4262)
!4356 = !DILocation(line: 2602, column: 7, scope: !4262)
!4357 = !DILocation(line: 2603, column: 7, scope: !4262)
!4358 = !DILocation(line: 2606, column: 7, scope: !4262)
!4359 = !DILocation(line: 0, scope: !4261)
!4360 = !DILocation(line: 2610, column: 18, scope: !4261)
!4361 = !DILocation(line: 0, scope: !4262)
!4362 = !DILocation(line: 2608, column: 8, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 2608, column: 8)
!4364 = !DILocation(line: 2608, column: 18, scope: !4363)
!4365 = !DILocation(line: 2608, column: 22, scope: !4363)
!4366 = !DILocation(line: 2608, column: 33, scope: !4363)
!4367 = !DILocation(line: 2608, column: 8, scope: !4261)
!4368 = !DILocation(line: 2609, column: 6, scope: !4363)
!4369 = !DILocation(line: 2612, column: 13, scope: !4260)
!4370 = !DILocation(line: 2612, column: 9, scope: !4260)
!4371 = !DILocation(line: 0, scope: !4260)
!4372 = !DILocation(line: 2612, column: 55, scope: !4259)
!4373 = !DILocation(line: 2612, column: 4, scope: !4260)
!4374 = distinct !{!4374, !4358, !4375}
!4375 = !DILocation(line: 2627, column: 2, scope: !4262)
!4376 = !DILocation(line: 2614, column: 12, scope: !4257)
!4377 = !DILocation(line: 2614, column: 12, scope: !4258)
!4378 = !DILocation(line: 2616, column: 25, scope: !4256)
!4379 = !DILocation(line: 0, scope: !4256)
!4380 = !DILocation(line: 2619, column: 9, scope: !4256)
!4381 = !DILocation(line: 2618, column: 10, scope: !4256)
!4382 = !DILocation(line: 2618, column: 7, scope: !4256)
!4383 = !DILocation(line: 2621, column: 3, scope: !4256)
!4384 = !DILocation(line: 2612, column: 62, scope: !4259)
!4385 = !DILocation(line: 2612, column: 4, scope: !4259)
!4386 = distinct !{!4386, !4373, !4387}
!4387 = !DILocation(line: 2622, column: 6, scope: !4260)
!4388 = !DILocation(line: 2628, column: 35, scope: !4262)
!4389 = !DILocation(line: 2628, column: 7, scope: !4262)
!4390 = !DILocation(line: 2630, column: 5, scope: !4262)
!4391 = !DILocation(line: 2631, column: 3, scope: !4237)
!4392 = !DILocation(line: 2632, column: 3, scope: !4237)
!4393 = !DILocation(line: 2633, column: 1, scope: !4237)
!4394 = distinct !DISubprogram(name: "insert", scope: !3, file: !3, line: 3762, type: !3629, scopeLine: 3763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4395)
!4395 = !{!4396, !4397, !4398}
!4396 = !DILocalVariable(name: "new_stuff", scope: !4394, file: !3, line: 3764, type: !663)
!4397 = !DILocalVariable(name: "bb", scope: !4394, file: !3, line: 3765, type: !1477)
!4398 = !DILocalVariable(name: "num_iterations", scope: !4394, file: !3, line: 3766, type: !664)
!4399 = !DILocation(line: 0, scope: !4394)
!4400 = !DILocation(line: 3768, column: 3, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 3768, column: 3)
!4402 = !DILocation(line: 0, scope: !4401)
!4403 = !DILocation(line: 3771, column: 3, scope: !4394)
!4404 = !DILocation(line: 3769, column: 21, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 3768, column: 3)
!4406 = !DILocation(line: 3769, column: 5, scope: !4405)
!4407 = !DILocation(line: 3769, column: 19, scope: !4405)
!4408 = !DILocation(line: 3768, column: 3, scope: !4405)
!4409 = distinct !{!4409, !4400, !4410}
!4410 = !DILocation(line: 3769, column: 37, scope: !4401)
!4411 = !DILocation(line: 3773, column: 21, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 3772, column: 5)
!4413 = !DILocation(line: 3774, column: 31, scope: !4412)
!4414 = !DILocation(line: 3774, column: 19, scope: !4412)
!4415 = distinct !{!4415, !4403, !4416}
!4416 = !DILocation(line: 3775, column: 5, scope: !4394)
!4417 = !DILocation(line: 3776, column: 31, scope: !4394)
!4418 = !DILocation(line: 3776, column: 3, scope: !4394)
!4419 = !DILocation(line: 3777, column: 1, scope: !4394)
!4420 = distinct !DISubprogram(name: "eliminate", scope: !3, file: !3, line: 4117, type: !2193, scopeLine: 4118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4421)
!4421 = !{!4422, !4423, !4424, !4425, !4426, !4427, !4428, !4437, !4438, !4439, !4440, !4441, !4444, !4447, !4448, !4451, !4452, !4453, !4456, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4470, !4471, !4472}
!4422 = !DILocalVariable(name: "to_remove", scope: !4420, file: !3, line: 4119, type: !2139)
!4423 = !DILocalVariable(name: "b", scope: !4420, file: !3, line: 4120, type: !1477)
!4424 = !DILocalVariable(name: "todo", scope: !4420, file: !3, line: 4121, type: !6)
!4425 = !DILocalVariable(name: "gsi", scope: !4420, file: !3, line: 4122, type: !3671)
!4426 = !DILocalVariable(name: "stmt", scope: !4420, file: !3, line: 4123, type: !1025)
!4427 = !DILocalVariable(name: "i", scope: !4420, file: !3, line: 4124, type: !6)
!4428 = !DILocalVariable(name: "lhs", scope: !4429, file: !3, line: 4143, type: !765)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 4142, column: 6)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 4135, column: 8)
!4431 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 4129, column: 2)
!4432 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 4128, column: 7)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 4128, column: 7)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !3, line: 4127, column: 5)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !3, line: 4126, column: 3)
!4436 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 4126, column: 3)
!4437 = !DILocalVariable(name: "rhs", scope: !4429, file: !3, line: 4144, type: !765)
!4438 = !DILocalVariable(name: "sprime", scope: !4429, file: !3, line: 4145, type: !765)
!4439 = !DILocalVariable(name: "lhsexpr", scope: !4429, file: !3, line: 4146, type: !754)
!4440 = !DILocalVariable(name: "sprimeexpr", scope: !4429, file: !3, line: 4147, type: !754)
!4441 = !DILocalVariable(name: "val", scope: !4442, file: !3, line: 4196, type: !765)
!4442 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 4195, column: 3)
!4443 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 4194, column: 12)
!4444 = !DILocalVariable(name: "rhs", scope: !4445, file: !3, line: 4256, type: !765)
!4445 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 4255, column: 6)
!4446 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 4251, column: 13)
!4447 = !DILocalVariable(name: "val", scope: !4445, file: !3, line: 4257, type: !765)
!4448 = !DILocalVariable(name: "op0", scope: !4449, file: !3, line: 4279, type: !765)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 4278, column: 6)
!4450 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 4277, column: 13)
!4451 = !DILocalVariable(name: "op1", scope: !4449, file: !3, line: 4280, type: !765)
!4452 = !DILocalVariable(name: "result", scope: !4449, file: !3, line: 4281, type: !765)
!4453 = !DILocalVariable(name: "fn", scope: !4454, file: !3, line: 4304, type: !765)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 4303, column: 6)
!4455 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 4301, column: 8)
!4456 = !DILocalVariable(name: "stmt", scope: !4457, file: !3, line: 4336, type: !1025)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 4335, column: 2)
!4458 = distinct !DILexicalBlock(scope: !4459, file: !3, line: 4334, column: 7)
!4459 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 4334, column: 7)
!4460 = !DILocalVariable(name: "phi", scope: !4457, file: !3, line: 4336, type: !1025)
!4461 = !DILocalVariable(name: "sprime", scope: !4457, file: !3, line: 4337, type: !765)
!4462 = !DILocalVariable(name: "res", scope: !4457, file: !3, line: 4337, type: !765)
!4463 = !DILocalVariable(name: "sprimeexpr", scope: !4457, file: !3, line: 4338, type: !754)
!4464 = !DILocalVariable(name: "resexpr", scope: !4457, file: !3, line: 4338, type: !754)
!4465 = !DILocalVariable(name: "gsi2", scope: !4457, file: !3, line: 4339, type: !3671)
!4466 = !DILocalVariable(name: "lhs", scope: !4467, file: !3, line: 4402, type: !765)
!4467 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 4401, column: 5)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 4400, column: 3)
!4469 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 4400, column: 3)
!4470 = !DILocalVariable(name: "rhs", scope: !4467, file: !3, line: 4403, type: !765)
!4471 = !DILocalVariable(name: "use_p", scope: !4467, file: !3, line: 4404, type: !2174)
!4472 = !DILocalVariable(name: "use_stmt", scope: !4467, file: !3, line: 4405, type: !1025)
!4473 = !DILocation(line: 4119, column: 3, scope: !4420)
!4474 = !DILocation(line: 0, scope: !4420)
!4475 = !DILocation(line: 4119, column: 23, scope: !4420)
!4476 = !DILocation(line: 4122, column: 3, scope: !4420)
!4477 = !DILocation(line: 4123, column: 3, scope: !4420)
!4478 = !DILocation(line: 4126, column: 3, scope: !4436)
!4479 = !DILocation(line: 0, scope: !4433)
!4480 = !DILocation(line: 0, scope: !4459)
!4481 = !DILocation(line: 0, scope: !4457)
!4482 = !DILocation(line: 4126, column: 3, scope: !4435)
!4483 = !DILocation(line: 4121, column: 16, scope: !4420)
!4484 = !DILocation(line: 0, scope: !4436)
!4485 = !DILocation(line: 0, scope: !4467)
!4486 = !DILocation(line: 0, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 4421, column: 2)
!4488 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 4419, column: 11)
!4489 = !DILocation(line: 4400, column: 3, scope: !4469)
!4490 = !DILocation(line: 4128, column: 18, scope: !4433)
!4491 = !DILocation(line: 0, scope: !4429)
!4492 = !DILocation(line: 4128, column: 12, scope: !4433)
!4493 = !DILocation(line: 4128, column: 37, scope: !4432)
!4494 = !DILocation(line: 4128, column: 36, scope: !4432)
!4495 = !DILocation(line: 4128, column: 7, scope: !4433)
!4496 = !DILocation(line: 4130, column: 11, scope: !4431)
!4497 = !DILocation(line: 4130, column: 9, scope: !4431)
!4498 = !DILocation(line: 4135, column: 8, scope: !4430)
!4499 = !DILocation(line: 4136, column: 8, scope: !4430)
!4500 = !DILocation(line: 4136, column: 11, scope: !4430)
!4501 = !DILocation(line: 4136, column: 45, scope: !4430)
!4502 = !DILocation(line: 4137, column: 8, scope: !4430)
!4503 = !DILocation(line: 4137, column: 43, scope: !4430)
!4504 = !DILocation(line: 4137, column: 12, scope: !4430)
!4505 = !DILocation(line: 4138, column: 8, scope: !4430)
!4506 = !DILocation(line: 4138, column: 37, scope: !4430)
!4507 = !DILocation(line: 4138, column: 13, scope: !4430)
!4508 = !DILocation(line: 4139, column: 5, scope: !4430)
!4509 = !DILocation(line: 4139, column: 54, scope: !4430)
!4510 = !DILocation(line: 4139, column: 34, scope: !4430)
!4511 = !DILocation(line: 4139, column: 9, scope: !4430)
!4512 = !DILocation(line: 4140, column: 8, scope: !4430)
!4513 = !DILocation(line: 4140, column: 38, scope: !4430)
!4514 = !DILocation(line: 4140, column: 12, scope: !4430)
!4515 = !DILocation(line: 4141, column: 8, scope: !4430)
!4516 = !DILocation(line: 4141, column: 43, scope: !4430)
!4517 = !DILocation(line: 4141, column: 27, scope: !4430)
!4518 = !DILocation(line: 4141, column: 12, scope: !4430)
!4519 = !DILocation(line: 4135, column: 8, scope: !4431)
!4520 = !DILocation(line: 4143, column: 35, scope: !4429)
!4521 = !DILocation(line: 4143, column: 19, scope: !4429)
!4522 = !DILocation(line: 4146, column: 27, scope: !4429)
!4523 = !DILocation(line: 4149, column: 36, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 4149, column: 12)
!4525 = !DILocation(line: 4149, column: 12, scope: !4524)
!4526 = !DILocation(line: 4149, column: 12, scope: !4429)
!4527 = !DILocation(line: 4150, column: 29, scope: !4524)
!4528 = !DILocation(line: 4150, column: 9, scope: !4524)
!4529 = !DILocation(line: 4150, column: 3, scope: !4524)
!4530 = !DILocation(line: 4152, column: 41, scope: !4429)
!4531 = !DILocation(line: 4153, column: 13, scope: !4429)
!4532 = !DILocation(line: 4152, column: 21, scope: !4429)
!4533 = !DILocation(line: 4156, column: 12, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 4156, column: 12)
!4535 = !DILocation(line: 4156, column: 12, scope: !4429)
!4536 = !DILocation(line: 4158, column: 21, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 4158, column: 9)
!4538 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 4157, column: 3)
!4539 = !DILocation(line: 4158, column: 26, scope: !4537)
!4540 = !DILocation(line: 4158, column: 9, scope: !4538)
!4541 = !DILocation(line: 4159, column: 16, scope: !4537)
!4542 = !DILocation(line: 4159, column: 7, scope: !4537)
!4543 = !DILocation(line: 4160, column: 31, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4537, file: !3, line: 4160, column: 14)
!4545 = !DILocation(line: 4160, column: 14, scope: !4537)
!4546 = !DILocation(line: 4161, column: 16, scope: !4544)
!4547 = !DILocation(line: 4161, column: 7, scope: !4544)
!4548 = !DILocation(line: 4163, column: 7, scope: !4544)
!4549 = !DILocation(line: 4168, column: 20, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 4168, column: 12)
!4551 = !DILocation(line: 4168, column: 48, scope: !4550)
!4552 = !DILocation(line: 4168, column: 63, scope: !4550)
!4553 = !DILocation(line: 4168, column: 23, scope: !4550)
!4554 = !DILocation(line: 4168, column: 12, scope: !4429)
!4555 = !DILocation(line: 4170, column: 14, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 4169, column: 3)
!4557 = !DILocation(line: 4170, column: 29, scope: !4556)
!4558 = !DILocation(line: 4171, column: 37, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 4171, column: 9)
!4560 = !DILocation(line: 4172, column: 9, scope: !4559)
!4561 = !DILocation(line: 4171, column: 10, scope: !4559)
!4562 = !DILocation(line: 4171, column: 9, scope: !4556)
!4563 = !DILocation(line: 4173, column: 16, scope: !4559)
!4564 = !DILocation(line: 4173, column: 7, scope: !4559)
!4565 = !DILocation(line: 0, scope: !4556)
!4566 = !DILocation(line: 4175, column: 9, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 4175, column: 9)
!4568 = !DILocation(line: 4175, column: 19, scope: !4567)
!4569 = !DILocation(line: 4175, column: 23, scope: !4567)
!4570 = !DILocation(line: 4175, column: 34, scope: !4567)
!4571 = !DILocation(line: 4175, column: 9, scope: !4556)
!4572 = !DILocation(line: 4177, column: 9, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 4176, column: 7)
!4574 = !DILocation(line: 4178, column: 28, scope: !4573)
!4575 = !DILocation(line: 4178, column: 39, scope: !4573)
!4576 = !DILocation(line: 4178, column: 9, scope: !4573)
!4577 = !DILocation(line: 4179, column: 18, scope: !4573)
!4578 = !DILocation(line: 4179, column: 9, scope: !4573)
!4579 = !DILocation(line: 4180, column: 29, scope: !4573)
!4580 = !DILocation(line: 4180, column: 9, scope: !4573)
!4581 = !DILocation(line: 4181, column: 18, scope: !4573)
!4582 = !DILocation(line: 4181, column: 9, scope: !4573)
!4583 = !DILocation(line: 4182, column: 28, scope: !4573)
!4584 = !DILocation(line: 4182, column: 39, scope: !4573)
!4585 = !DILocation(line: 4182, column: 9, scope: !4573)
!4586 = !DILocation(line: 4183, column: 7, scope: !4573)
!4587 = !DILocation(line: 4184, column: 27, scope: !4556)
!4588 = !DILocation(line: 4185, column: 5, scope: !4556)
!4589 = !DILocation(line: 4186, column: 12, scope: !4556)
!4590 = !DILocation(line: 4186, column: 10, scope: !4556)
!4591 = !DILocation(line: 4187, column: 5, scope: !4556)
!4592 = !DILocation(line: 4188, column: 5, scope: !4556)
!4593 = !DILocation(line: 4194, column: 20, scope: !4443)
!4594 = !DILocation(line: 4194, column: 30, scope: !4443)
!4595 = !DILocation(line: 4194, column: 12, scope: !4429)
!4596 = !DILocation(line: 4196, column: 16, scope: !4442)
!4597 = !DILocation(line: 4196, column: 31, scope: !4442)
!4598 = !DILocation(line: 0, scope: !4442)
!4599 = !DILocation(line: 4197, column: 16, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 4197, column: 9)
!4601 = !DILocation(line: 4197, column: 13, scope: !4600)
!4602 = !DILocation(line: 4198, column: 9, scope: !4600)
!4603 = !DILocation(line: 4198, column: 12, scope: !4600)
!4604 = !DILocation(line: 4198, column: 28, scope: !4600)
!4605 = !DILocation(line: 4199, column: 9, scope: !4600)
!4606 = !DILocation(line: 4199, column: 12, scope: !4600)
!4607 = !DILocation(line: 4199, column: 27, scope: !4600)
!4608 = !DILocation(line: 4200, column: 9, scope: !4600)
!4609 = !DILocation(line: 4200, column: 31, scope: !4600)
!4610 = !DILocation(line: 4200, column: 12, scope: !4600)
!4611 = !DILocation(line: 4197, column: 9, scope: !4442)
!4612 = !DILocation(line: 4201, column: 36, scope: !4600)
!4613 = !DILocation(line: 4201, column: 16, scope: !4600)
!4614 = !DILocation(line: 4201, column: 7, scope: !4600)
!4615 = !DILocation(line: 4203, column: 12, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 4203, column: 12)
!4617 = !DILocation(line: 4204, column: 15, scope: !4616)
!4618 = !DILocation(line: 4204, column: 5, scope: !4616)
!4619 = !DILocation(line: 4205, column: 13, scope: !4616)
!4620 = !DILocation(line: 4206, column: 9, scope: !4616)
!4621 = !DILocation(line: 4206, column: 12, scope: !4616)
!4622 = !DILocation(line: 4206, column: 28, scope: !4616)
!4623 = !DILocation(line: 4207, column: 9, scope: !4616)
!4624 = !DILocation(line: 4207, column: 12, scope: !4616)
!4625 = !DILocation(line: 4203, column: 12, scope: !4429)
!4626 = !DILocation(line: 4209, column: 5, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 4208, column: 3)
!4628 = !DILocation(line: 4211, column: 9, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 4211, column: 9)
!4630 = !DILocation(line: 4211, column: 19, scope: !4629)
!4631 = !DILocation(line: 4211, column: 23, scope: !4629)
!4632 = !DILocation(line: 4211, column: 34, scope: !4629)
!4633 = !DILocation(line: 4211, column: 9, scope: !4627)
!4634 = !DILocation(line: 4213, column: 9, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4629, file: !3, line: 4212, column: 7)
!4636 = !DILocation(line: 4214, column: 28, scope: !4635)
!4637 = !DILocation(line: 4214, column: 39, scope: !4635)
!4638 = !DILocation(line: 4214, column: 9, scope: !4635)
!4639 = !DILocation(line: 4215, column: 18, scope: !4635)
!4640 = !DILocation(line: 4215, column: 9, scope: !4635)
!4641 = !DILocation(line: 4216, column: 29, scope: !4635)
!4642 = !DILocation(line: 4216, column: 9, scope: !4635)
!4643 = !DILocation(line: 4217, column: 18, scope: !4635)
!4644 = !DILocation(line: 4217, column: 9, scope: !4635)
!4645 = !DILocation(line: 4218, column: 28, scope: !4635)
!4646 = !DILocation(line: 4218, column: 39, scope: !4635)
!4647 = !DILocation(line: 4218, column: 9, scope: !4635)
!4648 = !DILocation(line: 4219, column: 7, scope: !4635)
!4649 = !DILocation(line: 4221, column: 9, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 4221, column: 9)
!4651 = !DILocation(line: 4221, column: 28, scope: !4650)
!4652 = !DILocation(line: 4221, column: 9, scope: !4627)
!4653 = !DILocation(line: 4222, column: 23, scope: !4650)
!4654 = !DILocation(line: 4222, column: 7, scope: !4650)
!4655 = !DILocation(line: 4227, column: 15, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 4227, column: 9)
!4657 = !DILocation(line: 4227, column: 18, scope: !4656)
!4658 = !DILocation(line: 4227, column: 34, scope: !4656)
!4659 = !DILocation(line: 4228, column: 9, scope: !4656)
!4660 = !DILocation(line: 4228, column: 58, scope: !4656)
!4661 = !DILocation(line: 4228, column: 40, scope: !4656)
!4662 = !DILocation(line: 4229, column: 12, scope: !4656)
!4663 = !DILocation(line: 4228, column: 13, scope: !4656)
!4664 = !DILocation(line: 4227, column: 9, scope: !4627)
!4665 = !DILocation(line: 4230, column: 16, scope: !4656)
!4666 = !DILocation(line: 4230, column: 7, scope: !4656)
!4667 = !DILocation(line: 4232, column: 27, scope: !4627)
!4668 = !DILocation(line: 4233, column: 5, scope: !4627)
!4669 = !DILocation(line: 4234, column: 12, scope: !4627)
!4670 = !DILocation(line: 4234, column: 10, scope: !4627)
!4671 = !DILocation(line: 4235, column: 5, scope: !4627)
!4672 = !DILocation(line: 4239, column: 41, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 4239, column: 9)
!4674 = !DILocation(line: 4239, column: 9, scope: !4673)
!4675 = !DILocation(line: 4239, column: 9, scope: !4627)
!4676 = !DILocation(line: 4241, column: 25, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 4240, column: 7)
!4678 = !DILocation(line: 4242, column: 22, scope: !4677)
!4679 = !DILocation(line: 4242, column: 11, scope: !4677)
!4680 = !DILocation(line: 4242, column: 29, scope: !4677)
!4681 = !DILocation(line: 4241, column: 9, scope: !4677)
!4682 = !DILocation(line: 4243, column: 13, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4677, file: !3, line: 4243, column: 13)
!4684 = !DILocation(line: 4243, column: 23, scope: !4683)
!4685 = !DILocation(line: 4243, column: 27, scope: !4683)
!4686 = !DILocation(line: 4243, column: 38, scope: !4683)
!4687 = !DILocation(line: 4243, column: 13, scope: !4677)
!4688 = !DILocation(line: 4244, column: 4, scope: !4683)
!4689 = !DILocation(line: 4251, column: 37, scope: !4446)
!4690 = !DILocation(line: 4251, column: 13, scope: !4446)
!4691 = !DILocation(line: 4252, column: 6, scope: !4446)
!4692 = !DILocation(line: 4252, column: 44, scope: !4446)
!4693 = !DILocation(line: 4252, column: 25, scope: !4446)
!4694 = !DILocation(line: 4252, column: 10, scope: !4446)
!4695 = !DILocation(line: 4253, column: 6, scope: !4446)
!4696 = !DILocation(line: 4253, column: 10, scope: !4446)
!4697 = !DILocation(line: 4253, column: 48, scope: !4446)
!4698 = !DILocation(line: 4254, column: 10, scope: !4446)
!4699 = !DILocation(line: 4254, column: 58, scope: !4446)
!4700 = !DILocation(line: 4254, column: 38, scope: !4446)
!4701 = !DILocation(line: 4254, column: 13, scope: !4446)
!4702 = !DILocation(line: 4251, column: 13, scope: !4430)
!4703 = !DILocation(line: 4256, column: 39, scope: !4445)
!4704 = !DILocation(line: 4256, column: 19, scope: !4445)
!4705 = !DILocation(line: 0, scope: !4445)
!4706 = !DILocation(line: 4258, column: 54, scope: !4445)
!4707 = !DILocation(line: 4258, column: 35, scope: !4445)
!4708 = !DILocation(line: 4259, column: 20, scope: !4445)
!4709 = !DILocation(line: 4259, column: 7, scope: !4445)
!4710 = !DILocation(line: 4258, column: 14, scope: !4445)
!4711 = !DILocation(line: 4260, column: 12, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 4260, column: 12)
!4713 = !DILocation(line: 4260, column: 28, scope: !4712)
!4714 = !DILocation(line: 4260, column: 12, scope: !4445)
!4715 = !DILocation(line: 4261, column: 9, scope: !4712)
!4716 = !DILocation(line: 4261, column: 24, scope: !4712)
!4717 = !DILocation(line: 4261, column: 3, scope: !4712)
!4718 = !DILocation(line: 4262, column: 12, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 4262, column: 12)
!4720 = !DILocation(line: 4263, column: 5, scope: !4719)
!4721 = !DILocation(line: 4263, column: 8, scope: !4719)
!4722 = !DILocation(line: 4262, column: 12, scope: !4445)
!4723 = !DILocation(line: 4265, column: 9, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 4265, column: 9)
!4725 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 4264, column: 3)
!4726 = !DILocation(line: 4265, column: 19, scope: !4724)
!4727 = !DILocation(line: 4265, column: 23, scope: !4724)
!4728 = !DILocation(line: 4265, column: 34, scope: !4724)
!4729 = !DILocation(line: 4265, column: 9, scope: !4725)
!4730 = !DILocation(line: 4267, column: 9, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4724, file: !3, line: 4266, column: 7)
!4732 = !DILocation(line: 4268, column: 28, scope: !4731)
!4733 = !DILocation(line: 4268, column: 39, scope: !4731)
!4734 = !DILocation(line: 4268, column: 9, scope: !4731)
!4735 = !DILocation(line: 4269, column: 7, scope: !4731)
!4736 = !DILocation(line: 4272, column: 5, scope: !4725)
!4737 = !DILocation(line: 4273, column: 3, scope: !4725)
!4738 = !DILocation(line: 4277, column: 26, scope: !4450)
!4739 = !DILocation(line: 4277, column: 13, scope: !4450)
!4740 = !DILocation(line: 4277, column: 32, scope: !4450)
!4741 = !DILocation(line: 4277, column: 13, scope: !4446)
!4742 = !DILocation(line: 4279, column: 36, scope: !4449)
!4743 = !DILocation(line: 4279, column: 19, scope: !4449)
!4744 = !DILocation(line: 0, scope: !4449)
!4745 = !DILocation(line: 4280, column: 36, scope: !4449)
!4746 = !DILocation(line: 4280, column: 19, scope: !4449)
!4747 = !DILocation(line: 4283, column: 12, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 4283, column: 12)
!4749 = !DILocation(line: 4283, column: 28, scope: !4748)
!4750 = !DILocation(line: 4283, column: 12, scope: !4449)
!4751 = !DILocation(line: 4284, column: 9, scope: !4748)
!4752 = !DILocation(line: 4284, column: 24, scope: !4748)
!4753 = !DILocation(line: 4284, column: 3, scope: !4748)
!4754 = !DILocation(line: 4285, column: 12, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 4285, column: 12)
!4756 = !DILocation(line: 4285, column: 28, scope: !4755)
!4757 = !DILocation(line: 4285, column: 12, scope: !4449)
!4758 = !DILocation(line: 4286, column: 9, scope: !4755)
!4759 = !DILocation(line: 4286, column: 24, scope: !4755)
!4760 = !DILocation(line: 4286, column: 3, scope: !4755)
!4761 = !DILocation(line: 4287, column: 17, scope: !4449)
!4762 = !DILocation(line: 4289, column: 12, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 4289, column: 12)
!4764 = !DILocation(line: 4289, column: 19, scope: !4763)
!4765 = !DILocation(line: 4289, column: 22, scope: !4763)
!4766 = !DILocation(line: 4289, column: 41, scope: !4763)
!4767 = !DILocation(line: 4289, column: 12, scope: !4449)
!4768 = !DILocation(line: 4291, column: 9, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 4291, column: 9)
!4770 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 4290, column: 3)
!4771 = !DILocation(line: 0, scope: !4769)
!4772 = !DILocation(line: 4291, column: 9, scope: !4770)
!4773 = !DILocation(line: 4292, column: 7, scope: !4769)
!4774 = !DILocation(line: 4294, column: 7, scope: !4769)
!4775 = !DILocation(line: 4295, column: 18, scope: !4770)
!4776 = !DILocation(line: 4295, column: 5, scope: !4770)
!4777 = !DILocation(line: 4297, column: 3, scope: !4770)
!4778 = !DILocation(line: 4301, column: 21, scope: !4455)
!4779 = !DILocation(line: 4301, column: 8, scope: !4455)
!4780 = !DILocation(line: 4301, column: 27, scope: !4455)
!4781 = !DILocation(line: 4302, column: 8, scope: !4455)
!4782 = !DILocation(line: 4302, column: 11, scope: !4455)
!4783 = !DILocation(line: 4302, column: 45, scope: !4455)
!4784 = !DILocation(line: 4301, column: 8, scope: !4431)
!4785 = !DILocation(line: 4304, column: 43, scope: !4454)
!4786 = !DILocation(line: 4304, column: 27, scope: !4454)
!4787 = !DILocation(line: 4304, column: 18, scope: !4454)
!4788 = !DILocation(line: 4304, column: 51, scope: !4454)
!4789 = !DILocation(line: 0, scope: !4454)
!4790 = !DILocation(line: 4305, column: 12, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 4305, column: 12)
!4792 = !DILocation(line: 4305, column: 27, scope: !4791)
!4793 = !DILocation(line: 4306, column: 5, scope: !4791)
!4794 = !DILocation(line: 4306, column: 8, scope: !4791)
!4795 = !DILocation(line: 4306, column: 41, scope: !4791)
!4796 = !DILocation(line: 4305, column: 12, scope: !4454)
!4797 = !DILocation(line: 4308, column: 9, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 4308, column: 9)
!4799 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 4307, column: 3)
!4800 = !DILocation(line: 4308, column: 19, scope: !4798)
!4801 = !DILocation(line: 4308, column: 23, scope: !4798)
!4802 = !DILocation(line: 4308, column: 34, scope: !4798)
!4803 = !DILocation(line: 4308, column: 9, scope: !4799)
!4804 = !DILocation(line: 4310, column: 9, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 4309, column: 7)
!4806 = !DILocation(line: 4311, column: 29, scope: !4805)
!4807 = !DILocation(line: 4311, column: 9, scope: !4805)
!4808 = !DILocation(line: 4312, column: 18, scope: !4805)
!4809 = !DILocation(line: 4312, column: 9, scope: !4805)
!4810 = !DILocation(line: 4313, column: 28, scope: !4805)
!4811 = !DILocation(line: 4313, column: 39, scope: !4805)
!4812 = !DILocation(line: 4313, column: 9, scope: !4805)
!4813 = !DILocation(line: 4314, column: 7, scope: !4805)
!4814 = !DILocation(line: 4316, column: 25, scope: !4799)
!4815 = !DILocation(line: 4316, column: 5, scope: !4799)
!4816 = !DILocation(line: 4317, column: 18, scope: !4799)
!4817 = !DILocation(line: 4317, column: 5, scope: !4799)
!4818 = !DILocation(line: 4318, column: 41, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 4318, column: 9)
!4820 = !DILocation(line: 4318, column: 9, scope: !4819)
!4821 = !DILocation(line: 4318, column: 9, scope: !4799)
!4822 = !DILocation(line: 4320, column: 25, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 4319, column: 7)
!4824 = !DILocation(line: 4321, column: 22, scope: !4823)
!4825 = !DILocation(line: 4321, column: 11, scope: !4823)
!4826 = !DILocation(line: 4321, column: 29, scope: !4823)
!4827 = !DILocation(line: 4320, column: 9, scope: !4823)
!4828 = !DILocation(line: 4322, column: 13, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 4322, column: 13)
!4830 = !DILocation(line: 4322, column: 23, scope: !4829)
!4831 = !DILocation(line: 4322, column: 27, scope: !4829)
!4832 = !DILocation(line: 4322, column: 38, scope: !4829)
!4833 = !DILocation(line: 4322, column: 13, scope: !4823)
!4834 = !DILocation(line: 4323, column: 4, scope: !4829)
!4835 = !DILocation(line: 4329, column: 10, scope: !4799)
!4836 = !DILocation(line: 4330, column: 3, scope: !4799)
!4837 = !DILocation(line: 4128, column: 54, scope: !4432)
!4838 = !DILocation(line: 4128, column: 7, scope: !4432)
!4839 = distinct !{!4839, !4495, !4840}
!4840 = !DILocation(line: 4332, column: 2, scope: !4433)
!4841 = !DILocation(line: 4334, column: 18, scope: !4459)
!4842 = !DILocation(line: 4334, column: 12, scope: !4459)
!4843 = !DILocation(line: 4334, column: 39, scope: !4458)
!4844 = !DILocation(line: 4334, column: 38, scope: !4458)
!4845 = !DILocation(line: 4334, column: 7, scope: !4459)
!4846 = !DILocation(line: 4336, column: 23, scope: !4457)
!4847 = !DILocation(line: 4337, column: 35, scope: !4457)
!4848 = !DILocation(line: 4339, column: 4, scope: !4457)
!4849 = !DILocation(line: 4344, column: 8, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 4344, column: 8)
!4851 = !DILocation(line: 4344, column: 34, scope: !4850)
!4852 = !DILocation(line: 4345, column: 8, scope: !4850)
!4853 = !DILocation(line: 4345, column: 12, scope: !4850)
!4854 = !DILocation(line: 4346, column: 8, scope: !4850)
!4855 = !DILocation(line: 4346, column: 25, scope: !4850)
!4856 = !DILocation(line: 4346, column: 45, scope: !4850)
!4857 = !DILocation(line: 4346, column: 11, scope: !4850)
!4858 = !DILocation(line: 4344, column: 8, scope: !4457)
!4859 = !DILocation(line: 4348, column: 8, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 4347, column: 6)
!4861 = !DILocation(line: 4349, column: 8, scope: !4860)
!4862 = distinct !{!4862, !4845, !4863}
!4863 = !DILocation(line: 4394, column: 2, scope: !4459)
!4864 = !DILocation(line: 4352, column: 14, scope: !4457)
!4865 = !DILocation(line: 4353, column: 37, scope: !4457)
!4866 = !DILocation(line: 4354, column: 9, scope: !4457)
!4867 = !DILocation(line: 4353, column: 17, scope: !4457)
!4868 = !DILocation(line: 4355, column: 8, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 4355, column: 8)
!4870 = !DILocation(line: 4355, column: 8, scope: !4457)
!4871 = !DILocation(line: 4357, column: 24, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 4357, column: 12)
!4873 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 4356, column: 6)
!4874 = !DILocation(line: 4357, column: 29, scope: !4872)
!4875 = !DILocation(line: 4357, column: 12, scope: !4873)
!4876 = !DILocation(line: 4358, column: 12, scope: !4872)
!4877 = !DILocation(line: 4358, column: 3, scope: !4872)
!4878 = !DILocation(line: 4359, column: 34, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 4359, column: 17)
!4880 = !DILocation(line: 4359, column: 17, scope: !4872)
!4881 = !DILocation(line: 4360, column: 12, scope: !4879)
!4882 = !DILocation(line: 4360, column: 3, scope: !4879)
!4883 = !DILocation(line: 4362, column: 3, scope: !4879)
!4884 = !DILocation(line: 4365, column: 18, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 4364, column: 8)
!4886 = !DILocation(line: 4365, column: 8, scope: !4885)
!4887 = !DILocation(line: 4367, column: 8, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 4366, column: 6)
!4889 = !DILocation(line: 4368, column: 8, scope: !4888)
!4890 = !DILocation(line: 4371, column: 8, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 4371, column: 8)
!4892 = !DILocation(line: 4371, column: 18, scope: !4891)
!4893 = !DILocation(line: 4371, column: 22, scope: !4891)
!4894 = !DILocation(line: 4371, column: 33, scope: !4891)
!4895 = !DILocation(line: 4371, column: 8, scope: !4457)
!4896 = !DILocation(line: 4373, column: 8, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 4372, column: 6)
!4898 = !DILocation(line: 4374, column: 28, scope: !4897)
!4899 = !DILocation(line: 4374, column: 8, scope: !4897)
!4900 = !DILocation(line: 4375, column: 17, scope: !4897)
!4901 = !DILocation(line: 4375, column: 8, scope: !4897)
!4902 = !DILocation(line: 4376, column: 28, scope: !4897)
!4903 = !DILocation(line: 4376, column: 8, scope: !4897)
!4904 = !DILocation(line: 4377, column: 17, scope: !4897)
!4905 = !DILocation(line: 4377, column: 8, scope: !4897)
!4906 = !DILocation(line: 4378, column: 6, scope: !4897)
!4907 = !DILocation(line: 4380, column: 4, scope: !4457)
!4908 = !DILocation(line: 4382, column: 36, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 4382, column: 8)
!4910 = !DILocation(line: 4382, column: 53, scope: !4909)
!4911 = !DILocation(line: 4382, column: 9, scope: !4909)
!4912 = !DILocation(line: 4382, column: 8, scope: !4457)
!4913 = !DILocation(line: 4383, column: 15, scope: !4909)
!4914 = !DILocation(line: 4383, column: 6, scope: !4909)
!4915 = !DILocation(line: 4384, column: 11, scope: !4457)
!4916 = !DILocation(line: 4385, column: 4, scope: !4457)
!4917 = !DILocation(line: 4385, column: 28, scope: !4457)
!4918 = !DILocation(line: 4386, column: 8, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 4386, column: 8)
!4920 = !DILocation(line: 4386, column: 27, scope: !4919)
!4921 = !DILocation(line: 4386, column: 8, scope: !4457)
!4922 = !DILocation(line: 4387, column: 22, scope: !4919)
!4923 = !DILocation(line: 4387, column: 6, scope: !4919)
!4924 = !DILocation(line: 4389, column: 11, scope: !4457)
!4925 = !DILocation(line: 4390, column: 4, scope: !4457)
!4926 = !DILocation(line: 4392, column: 4, scope: !4457)
!4927 = !DILocation(line: 4393, column: 26, scope: !4457)
!4928 = !DILocation(line: 4394, column: 2, scope: !4458)
!4929 = !DILocation(line: 0, scope: !4435)
!4930 = distinct !{!4930, !4478, !4931}
!4931 = !DILocation(line: 4395, column: 5, scope: !4436)
!4932 = !DILocation(line: 0, scope: !4469)
!4933 = !DILocation(line: 4400, column: 15, scope: !4468)
!4934 = !DILocation(line: 4402, column: 37, scope: !4467)
!4935 = !DILocation(line: 4402, column: 18, scope: !4467)
!4936 = !DILocation(line: 4403, column: 38, scope: !4467)
!4937 = !DILocation(line: 4403, column: 18, scope: !4467)
!4938 = !DILocation(line: 4404, column: 7, scope: !4467)
!4939 = !DILocation(line: 4405, column: 7, scope: !4467)
!4940 = !DILocation(line: 4409, column: 11, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 4409, column: 11)
!4942 = !DILocation(line: 4409, column: 27, scope: !4941)
!4943 = !DILocation(line: 4410, column: 4, scope: !4941)
!4944 = !DILocation(line: 4410, column: 7, scope: !4941)
!4945 = !DILocation(line: 4410, column: 23, scope: !4941)
!4946 = !DILocation(line: 4411, column: 4, scope: !4941)
!4947 = !DILocation(line: 4411, column: 7, scope: !4941)
!4948 = !DILocation(line: 4412, column: 4, scope: !4941)
!4949 = !DILocation(line: 4412, column: 27, scope: !4941)
!4950 = !DILocation(line: 4412, column: 7, scope: !4941)
!4951 = !DILocation(line: 4409, column: 11, scope: !4467)
!4952 = !DILocation(line: 4414, column: 4, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 4413, column: 2)
!4954 = !DILocation(line: 4415, column: 17, scope: !4953)
!4955 = !DILocation(line: 4415, column: 4, scope: !4953)
!4956 = !DILocation(line: 4416, column: 2, scope: !4953)
!4957 = !DILocation(line: 4419, column: 11, scope: !4488)
!4958 = !DILocation(line: 4419, column: 27, scope: !4488)
!4959 = !DILocation(line: 4420, column: 4, scope: !4488)
!4960 = !DILocation(line: 4420, column: 7, scope: !4488)
!4961 = !DILocation(line: 4419, column: 11, scope: !4467)
!4962 = !DILocation(line: 4422, column: 10, scope: !4487)
!4963 = !DILocation(line: 4422, column: 24, scope: !4487)
!4964 = !DILocation(line: 4423, column: 22, scope: !4487)
!4965 = !DILocation(line: 4423, column: 4, scope: !4487)
!4966 = !DILocation(line: 4424, column: 4, scope: !4487)
!4967 = !DILocation(line: 4425, column: 18, scope: !4487)
!4968 = !DILocation(line: 4425, column: 4, scope: !4487)
!4969 = !DILocation(line: 4426, column: 2, scope: !4487)
!4970 = !DILocation(line: 4427, column: 5, scope: !4468)
!4971 = !DILocation(line: 4400, column: 57, scope: !4468)
!4972 = !DILocation(line: 4400, column: 3, scope: !4468)
!4973 = distinct !{!4973, !4489, !4974}
!4974 = !DILocation(line: 4427, column: 5, scope: !4469)
!4975 = !DILocation(line: 4428, column: 3, scope: !4420)
!4976 = !DILocation(line: 4431, column: 1, scope: !4420)
!4977 = !DILocation(line: 4430, column: 3, scope: !4420)
!4978 = distinct !DISubprogram(name: "clear_expression_ids", scope: !3, file: !3, line: 330, type: !3629, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2314)
!4979 = !DILocation(line: 332, column: 3, scope: !4978)
!4980 = !DILocation(line: 333, column: 1, scope: !4978)
!4981 = distinct !DISubprogram(name: "fini_pre", scope: !3, file: !3, line: 4691, type: !3786, scopeLine: 4692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4982)
!4982 = !{!4983, !4984}
!4983 = !DILocalVariable(name: "do_fre", arg: 1, scope: !4981, file: !3, line: 4691, type: !663)
!4984 = !DILocalVariable(name: "bb", scope: !4981, file: !3, line: 4693, type: !1477)
!4985 = !DILocation(line: 0, scope: !4981)
!4986 = !DILocation(line: 4695, column: 9, scope: !4981)
!4987 = !DILocation(line: 4695, column: 3, scope: !4981)
!4988 = !DILocation(line: 4696, column: 3, scope: !4981)
!4989 = !DILocation(line: 4697, column: 3, scope: !4981)
!4990 = !DILocation(line: 4698, column: 3, scope: !4981)
!4991 = !DILocation(line: 4699, column: 3, scope: !4981)
!4992 = !DILocation(line: 4700, column: 20, scope: !4981)
!4993 = !DILocation(line: 4700, column: 3, scope: !4981)
!4994 = !DILocation(line: 4701, column: 20, scope: !4981)
!4995 = !DILocation(line: 4701, column: 3, scope: !4981)
!4996 = !DILocation(line: 4702, column: 16, scope: !4981)
!4997 = !DILocation(line: 4702, column: 3, scope: !4981)
!4998 = !DILocation(line: 4703, column: 16, scope: !4981)
!4999 = !DILocation(line: 4703, column: 3, scope: !4981)
!5000 = !DILocation(line: 4704, column: 3, scope: !4981)
!5001 = !DILocation(line: 4706, column: 3, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 4706, column: 3)
!5003 = !DILocation(line: 0, scope: !5002)
!5004 = !DILocation(line: 4708, column: 17, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 4707, column: 5)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 4706, column: 3)
!5007 = !DILocation(line: 4708, column: 7, scope: !5005)
!5008 = !DILocation(line: 4709, column: 15, scope: !5005)
!5009 = !DILocation(line: 4706, column: 3, scope: !5006)
!5010 = distinct !{!5010, !5001, !5011}
!5011 = !DILocation(line: 4710, column: 5, scope: !5002)
!5012 = !DILocation(line: 4712, column: 3, scope: !4981)
!5013 = !DILocation(line: 4714, column: 8, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 4714, column: 7)
!5015 = !DILocation(line: 4714, column: 7, scope: !4981)
!5016 = !DILocation(line: 4716, column: 7, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 4715, column: 5)
!5018 = !DILocation(line: 4717, column: 7, scope: !5017)
!5019 = !DILocation(line: 4720, column: 3, scope: !4981)
!5020 = !DILocation(line: 4718, column: 5, scope: !5017)
!5021 = !DILocation(line: 4722, column: 8, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 4722, column: 7)
!5023 = !DILocation(line: 4722, column: 7, scope: !4981)
!5024 = !DILocation(line: 4723, column: 5, scope: !5022)
!5025 = !DILocation(line: 4724, column: 1, scope: !4981)
!5026 = distinct !DISubprogram(name: "VEC_gimple_heap_alloc", scope: !587, file: !587, line: 34, type: !5027, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5029)
!5027 = !DISubroutineType(types: !5028)
!5028 = !{!2139, !664}
!5029 = !{!5030}
!5030 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5026, file: !587, line: 34, type: !664)
!5031 = !DILocation(line: 0, scope: !5026)
!5032 = !DILocation(line: 34, column: 1, scope: !5026)
!5033 = distinct !DISubprogram(name: "VEC_gimple_base_length", scope: !587, file: !587, line: 33, type: !5034, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5038)
!5034 = !DISubroutineType(types: !5035)
!5035 = !{!6, !5036}
!5036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5037, size: 64)
!5037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1564)
!5038 = !{!5039}
!5039 = !DILocalVariable(name: "vec_", arg: 1, scope: !5033, file: !587, line: 33, type: !5036)
!5040 = !DILocation(line: 0, scope: !5033)
!5041 = !DILocation(line: 33, column: 1, scope: !5033)
!5042 = distinct !DISubprogram(name: "VEC_gimple_base_iterate", scope: !587, file: !587, line: 33, type: !5043, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5046)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{!664, !5036, !6, !5045}
!5045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!5046 = !{!5047, !5048, !5049}
!5047 = !DILocalVariable(name: "vec_", arg: 1, scope: !5042, file: !587, line: 33, type: !5036)
!5048 = !DILocalVariable(name: "ix_", arg: 2, scope: !5042, file: !587, line: 33, type: !6)
!5049 = !DILocalVariable(name: "ptr", arg: 3, scope: !5042, file: !587, line: 33, type: !5045)
!5050 = !DILocation(line: 0, scope: !5042)
!5051 = !DILocation(line: 33, column: 1, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5042, file: !587, line: 33, column: 1)
!5053 = !DILocation(line: 33, column: 1, scope: !5042)
!5054 = !DILocation(line: 33, column: 1, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5052, file: !587, line: 33, column: 1)
!5056 = !DILocation(line: 33, column: 1, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5052, file: !587, line: 33, column: 1)
!5058 = !DILocation(line: 0, scope: !5052)
!5059 = distinct !DISubprogram(name: "gimple_plf", scope: !587, file: !587, line: 1247, type: !5060, scopeLine: 1248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5062)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{!6, !1025, !586}
!5062 = !{!5063, !5064}
!5063 = !DILocalVariable(name: "stmt", arg: 1, scope: !5059, file: !587, line: 1247, type: !1025)
!5064 = !DILocalVariable(name: "plf", arg: 2, scope: !5059, file: !587, line: 1247, type: !586)
!5065 = !DILocation(line: 0, scope: !5059)
!5066 = !DILocation(line: 1249, column: 23, scope: !5059)
!5067 = !DILocation(line: 1249, column: 27, scope: !5059)
!5068 = !DILocation(line: 1249, column: 3, scope: !5059)
!5069 = distinct !DISubprogram(name: "VEC_gimple_base_quick_push", scope: !587, file: !587, line: 33, type: !5070, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5073)
!5070 = !DISubroutineType(types: !5071)
!5071 = !{!5045, !5072, !1025}
!5072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!5073 = !{!5074, !5075, !5076}
!5074 = !DILocalVariable(name: "vec_", arg: 1, scope: !5069, file: !587, line: 33, type: !5072)
!5075 = !DILocalVariable(name: "obj_", arg: 2, scope: !5069, file: !587, line: 33, type: !1025)
!5076 = !DILocalVariable(name: "slot_", scope: !5069, file: !587, line: 33, type: !5045)
!5077 = !DILocation(line: 0, scope: !5069)
!5078 = !DILocation(line: 33, column: 1, scope: !5069)
!5079 = distinct !DISubprogram(name: "VEC_gimple_base_pop", scope: !587, file: !587, line: 33, type: !5080, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5082)
!5080 = !DISubroutineType(types: !5081)
!5081 = !{!1025, !5072}
!5082 = !{!5083, !5084}
!5083 = !DILocalVariable(name: "vec_", arg: 1, scope: !5079, file: !587, line: 33, type: !5072)
!5084 = !DILocalVariable(name: "obj_", scope: !5079, file: !587, line: 33, type: !1025)
!5085 = !DILocation(line: 0, scope: !5079)
!5086 = !DILocation(line: 33, column: 1, scope: !5079)
!5087 = distinct !DISubprogram(name: "gimple_code", scope: !587, file: !587, line: 1052, type: !5088, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5091)
!5088 = !DISubroutineType(types: !5089)
!5089 = !{!591, !5090}
!5090 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !689, line: 60, baseType: !2164)
!5091 = !{!5092}
!5092 = !DILocalVariable(name: "g", arg: 1, scope: !5087, file: !587, line: 1052, type: !5090)
!5093 = !DILocation(line: 0, scope: !5087)
!5094 = !DILocation(line: 1054, column: 20, scope: !5087)
!5095 = !DILocation(line: 1054, column: 3, scope: !5087)
!5096 = distinct !DISubprogram(name: "VEC_gimple_heap_reserve", scope: !587, file: !587, line: 34, type: !5097, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5100)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{!664, !5099, !664}
!5099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!5100 = !{!5101, !5102, !5103}
!5101 = !DILocalVariable(name: "vec_", arg: 1, scope: !5096, file: !587, line: 34, type: !5099)
!5102 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5096, file: !587, line: 34, type: !664)
!5103 = !DILocalVariable(name: "extend", scope: !5096, file: !587, line: 34, type: !664)
!5104 = !DILocation(line: 0, scope: !5096)
!5105 = !DILocation(line: 34, column: 1, scope: !5096)
!5106 = !DILocation(line: 34, column: 1, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5096, file: !587, line: 34, column: 1)
!5108 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !587, file: !587, line: 3061, type: !5109, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5111)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!6, !5090}
!5111 = !{!5112}
!5112 = !DILocalVariable(name: "gs", arg: 1, scope: !5108, file: !587, line: 3061, type: !5090)
!5113 = !DILocation(line: 0, scope: !5108)
!5114 = !DILocation(line: 3064, column: 25, scope: !5108)
!5115 = !DILocation(line: 3064, column: 3, scope: !5108)
!5116 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !5117, file: !5117, line: 427, type: !5118, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5120)
!5117 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5118 = !DISubroutineType(types: !5119)
!5119 = !{!765, !2174}
!5120 = !{!5121}
!5121 = !DILocalVariable(name: "use", arg: 1, scope: !5116, file: !5117, line: 427, type: !2174)
!5122 = !DILocation(line: 0, scope: !5116)
!5123 = !DILocation(line: 429, column: 17, scope: !5116)
!5124 = !DILocation(line: 429, column: 10, scope: !5116)
!5125 = !DILocation(line: 429, column: 3, scope: !5116)
!5126 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !5117, file: !5117, line: 442, type: !5127, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5129)
!5127 = !DISubroutineType(types: !5128)
!5128 = !{!2174, !1025, !664}
!5129 = !{!5130, !5131}
!5130 = !DILocalVariable(name: "gs", arg: 1, scope: !5126, file: !5117, line: 442, type: !1025)
!5131 = !DILocalVariable(name: "i", arg: 2, scope: !5126, file: !5117, line: 442, type: !664)
!5132 = !DILocation(line: 0, scope: !5126)
!5133 = !DILocation(line: 444, column: 11, scope: !5126)
!5134 = !DILocation(line: 444, column: 35, scope: !5126)
!5135 = !DILocation(line: 444, column: 3, scope: !5126)
!5136 = distinct !DISubprogram(name: "mark_operand_necessary", scope: !3, file: !3, line: 4442, type: !5137, scopeLine: 4443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5139)
!5137 = !DISubroutineType(types: !5138)
!5138 = !{!1025, !765}
!5139 = !{!5140, !5141}
!5140 = !DILocalVariable(name: "op", arg: 1, scope: !5136, file: !3, line: 4442, type: !765)
!5141 = !DILocalVariable(name: "stmt", scope: !5136, file: !3, line: 4444, type: !1025)
!5142 = !DILocation(line: 0, scope: !5136)
!5143 = !DILocation(line: 4446, column: 3, scope: !5136)
!5144 = !DILocation(line: 4448, column: 7, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 4448, column: 7)
!5146 = !DILocation(line: 4448, column: 22, scope: !5145)
!5147 = !DILocation(line: 4448, column: 7, scope: !5136)
!5148 = !DILocation(line: 4451, column: 10, scope: !5136)
!5149 = !DILocation(line: 4452, column: 3, scope: !5136)
!5150 = !DILocation(line: 4454, column: 7, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 4454, column: 7)
!5152 = !DILocation(line: 4455, column: 7, scope: !5151)
!5153 = !DILocation(line: 4455, column: 10, scope: !5151)
!5154 = !DILocation(line: 4454, column: 7, scope: !5136)
!5155 = !DILocation(line: 4458, column: 3, scope: !5136)
!5156 = !DILocation(line: 4459, column: 3, scope: !5136)
!5157 = !DILocation(line: 4460, column: 1, scope: !5136)
!5158 = distinct !DISubprogram(name: "op_iter_init_tree", scope: !5117, file: !5117, line: 792, type: !5159, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5162)
!5159 = !DISubroutineType(types: !5160)
!5160 = !{!765, !5161, !1025, !664}
!5161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!5162 = !{!5163, !5164, !5165}
!5163 = !DILocalVariable(name: "ptr", arg: 1, scope: !5158, file: !5117, line: 792, type: !5161)
!5164 = !DILocalVariable(name: "stmt", arg: 2, scope: !5158, file: !5117, line: 792, type: !1025)
!5165 = !DILocalVariable(name: "flags", arg: 3, scope: !5158, file: !5117, line: 792, type: !664)
!5166 = !DILocation(line: 0, scope: !5158)
!5167 = !DILocation(line: 794, column: 3, scope: !5158)
!5168 = !DILocation(line: 795, column: 8, scope: !5158)
!5169 = !DILocation(line: 795, column: 18, scope: !5158)
!5170 = !DILocation(line: 796, column: 10, scope: !5158)
!5171 = !DILocation(line: 796, column: 3, scope: !5158)
!5172 = distinct !DISubprogram(name: "op_iter_done", scope: !5117, file: !5117, line: 652, type: !5173, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5177)
!5173 = !DISubroutineType(types: !5174)
!5174 = !{!663, !5175}
!5175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5176, size: 64)
!5176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3648)
!5177 = !{!5178}
!5178 = !DILocalVariable(name: "ptr", arg: 1, scope: !5172, file: !5117, line: 652, type: !5175)
!5179 = !DILocation(line: 0, scope: !5172)
!5180 = !DILocation(line: 654, column: 15, scope: !5172)
!5181 = !DILocation(line: 654, column: 3, scope: !5172)
!5182 = distinct !DISubprogram(name: "VEC_gimple_heap_safe_push", scope: !587, file: !587, line: 34, type: !5183, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5185)
!5183 = !DISubroutineType(types: !5184)
!5184 = !{!5045, !5099, !1025}
!5185 = !{!5186, !5187}
!5186 = !DILocalVariable(name: "vec_", arg: 1, scope: !5182, file: !587, line: 34, type: !5099)
!5187 = !DILocalVariable(name: "obj_", arg: 2, scope: !5182, file: !587, line: 34, type: !1025)
!5188 = !DILocation(line: 0, scope: !5182)
!5189 = !DILocation(line: 34, column: 1, scope: !5182)
!5190 = distinct !DISubprogram(name: "op_iter_next_tree", scope: !5117, file: !5117, line: 699, type: !5191, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5193)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!765, !5161}
!5193 = !{!5194, !5195}
!5194 = !DILocalVariable(name: "ptr", arg: 1, scope: !5190, file: !5117, line: 699, type: !5161)
!5195 = !DILocalVariable(name: "val", scope: !5190, file: !5117, line: 701, type: !765)
!5196 = !DILocation(line: 0, scope: !5190)
!5197 = !DILocation(line: 705, column: 12, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5190, file: !5117, line: 705, column: 7)
!5199 = !DILocation(line: 705, column: 7, scope: !5198)
!5200 = !DILocation(line: 705, column: 7, scope: !5190)
!5201 = !DILocation(line: 707, column: 13, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5198, file: !5117, line: 706, column: 5)
!5203 = !DILocation(line: 708, column: 24, scope: !5202)
!5204 = !DILocation(line: 708, column: 30, scope: !5202)
!5205 = !DILocation(line: 708, column: 17, scope: !5202)
!5206 = !DILocation(line: 709, column: 7, scope: !5202)
!5207 = !DILocation(line: 711, column: 12, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5190, file: !5117, line: 711, column: 7)
!5209 = !DILocation(line: 711, column: 7, scope: !5208)
!5210 = !DILocation(line: 711, column: 7, scope: !5190)
!5211 = !DILocation(line: 713, column: 13, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5208, file: !5117, line: 712, column: 5)
!5213 = !DILocation(line: 714, column: 24, scope: !5212)
!5214 = !DILocation(line: 714, column: 30, scope: !5212)
!5215 = !DILocation(line: 714, column: 17, scope: !5212)
!5216 = !DILocation(line: 715, column: 7, scope: !5212)
!5217 = !DILocation(line: 718, column: 8, scope: !5190)
!5218 = !DILocation(line: 718, column: 13, scope: !5190)
!5219 = !DILocation(line: 719, column: 3, scope: !5190)
!5220 = !DILocation(line: 721, column: 1, scope: !5190)
!5221 = distinct !DISubprogram(name: "VEC_gimple_heap_free", scope: !587, file: !587, line: 34, type: !5222, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5224)
!5222 = !DISubroutineType(types: !5223)
!5223 = !{null, !5099}
!5224 = !{!5225}
!5225 = !DILocalVariable(name: "vec_", arg: 1, scope: !5221, file: !587, line: 34, type: !5099)
!5226 = !DILocation(line: 0, scope: !5221)
!5227 = !DILocation(line: 34, column: 1, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5221, file: !587, line: 34, column: 1)
!5229 = !DILocation(line: 34, column: 1, scope: !5221)
!5230 = distinct !DISubprogram(name: "VEC_gimple_base_space", scope: !587, file: !587, line: 33, type: !5231, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5233)
!5231 = !DISubroutineType(types: !5232)
!5232 = !{!664, !5072, !664}
!5233 = !{!5234, !5235}
!5234 = !DILocalVariable(name: "vec_", arg: 1, scope: !5230, file: !587, line: 33, type: !5072)
!5235 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5230, file: !587, line: 33, type: !664)
!5236 = !DILocation(line: 0, scope: !5230)
!5237 = !DILocation(line: 33, column: 1, scope: !5230)
!5238 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !587, file: !587, line: 3100, type: !5239, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5242)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{!5241, !1025, !6}
!5241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!5242 = !{!5243, !5244}
!5243 = !DILocalVariable(name: "gs", arg: 1, scope: !5238, file: !587, line: 3100, type: !1025)
!5244 = !DILocalVariable(name: "index", arg: 2, scope: !5238, file: !587, line: 3100, type: !6)
!5245 = !DILocation(line: 0, scope: !5238)
!5246 = !DILocation(line: 3103, column: 3, scope: !5238)
!5247 = !DILocation(line: 3104, column: 12, scope: !5238)
!5248 = !DILocation(line: 3104, column: 3, scope: !5238)
!5249 = distinct !DISubprogram(name: "gimple_nop_p", scope: !587, file: !587, line: 4304, type: !5250, scopeLine: 4305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5252)
!5250 = !DISubroutineType(types: !5251)
!5251 = !{!663, !5090}
!5252 = !{!5253}
!5253 = !DILocalVariable(name: "g", arg: 1, scope: !5249, file: !587, line: 4304, type: !5090)
!5254 = !DILocation(line: 0, scope: !5249)
!5255 = !DILocation(line: 4306, column: 10, scope: !5249)
!5256 = !DILocation(line: 4306, column: 26, scope: !5249)
!5257 = !DILocation(line: 4306, column: 3, scope: !5249)
!5258 = distinct !DISubprogram(name: "gimple_set_plf", scope: !587, file: !587, line: 1235, type: !5259, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5261)
!5259 = !DISubroutineType(types: !5260)
!5260 = !{null, !1025, !586, !663}
!5261 = !{!5262, !5263, !5264}
!5262 = !DILocalVariable(name: "stmt", arg: 1, scope: !5258, file: !587, line: 1235, type: !1025)
!5263 = !DILocalVariable(name: "plf", arg: 2, scope: !5258, file: !587, line: 1235, type: !586)
!5264 = !DILocalVariable(name: "val_p", arg: 3, scope: !5258, file: !587, line: 1235, type: !663)
!5265 = !DILocation(line: 0, scope: !5258)
!5266 = !DILocation(line: 1237, column: 7, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5258, file: !587, line: 1237, column: 7)
!5268 = !DILocation(line: 1237, column: 7, scope: !5258)
!5269 = !DILocation(line: 1238, column: 18, scope: !5267)
!5270 = !DILocation(line: 1238, column: 22, scope: !5267)
!5271 = !DILocation(line: 1238, column: 5, scope: !5267)
!5272 = !DILocation(line: 1240, column: 18, scope: !5267)
!5273 = !DILocation(line: 1240, column: 22, scope: !5267)
!5274 = !DILocation(line: 1241, column: 1, scope: !5258)
!5275 = distinct !DISubprogram(name: "op_iter_init", scope: !5117, file: !5117, line: 742, type: !5276, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5278)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{null, !5161, !1025, !664}
!5278 = !{!5279, !5280, !5281}
!5279 = !DILocalVariable(name: "ptr", arg: 1, scope: !5275, file: !5117, line: 742, type: !5161)
!5280 = !DILocalVariable(name: "stmt", arg: 2, scope: !5275, file: !5117, line: 742, type: !1025)
!5281 = !DILocalVariable(name: "flags", arg: 3, scope: !5275, file: !5117, line: 742, type: !664)
!5282 = !DILocation(line: 0, scope: !5275)
!5283 = !DILocation(line: 746, column: 3, scope: !5275)
!5284 = !DILocation(line: 748, column: 22, scope: !5275)
!5285 = !DILocation(line: 748, column: 15, scope: !5275)
!5286 = !DILocation(line: 748, column: 52, scope: !5275)
!5287 = !DILocation(line: 748, column: 8, scope: !5275)
!5288 = !DILocation(line: 748, column: 13, scope: !5275)
!5289 = !DILocation(line: 749, column: 15, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5275, file: !5117, line: 749, column: 7)
!5291 = !DILocation(line: 750, column: 7, scope: !5290)
!5292 = !DILocation(line: 750, column: 10, scope: !5290)
!5293 = !DILocation(line: 751, column: 7, scope: !5290)
!5294 = !DILocation(line: 751, column: 10, scope: !5290)
!5295 = !DILocation(line: 751, column: 29, scope: !5290)
!5296 = !DILocation(line: 749, column: 7, scope: !5275)
!5297 = !DILocation(line: 752, column: 22, scope: !5290)
!5298 = !DILocation(line: 752, column: 28, scope: !5290)
!5299 = !DILocation(line: 752, column: 15, scope: !5290)
!5300 = !DILocation(line: 752, column: 5, scope: !5290)
!5301 = !DILocation(line: 753, column: 22, scope: !5275)
!5302 = !DILocation(line: 753, column: 15, scope: !5275)
!5303 = !DILocation(line: 753, column: 52, scope: !5275)
!5304 = !DILocation(line: 753, column: 8, scope: !5275)
!5305 = !DILocation(line: 753, column: 13, scope: !5275)
!5306 = !DILocation(line: 754, column: 15, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5275, file: !5117, line: 754, column: 7)
!5308 = !DILocation(line: 755, column: 7, scope: !5307)
!5309 = !DILocation(line: 755, column: 10, scope: !5307)
!5310 = !DILocation(line: 756, column: 7, scope: !5307)
!5311 = !DILocation(line: 756, column: 10, scope: !5307)
!5312 = !DILocation(line: 756, column: 29, scope: !5307)
!5313 = !DILocation(line: 754, column: 7, scope: !5275)
!5314 = !DILocation(line: 757, column: 22, scope: !5307)
!5315 = !DILocation(line: 757, column: 28, scope: !5307)
!5316 = !DILocation(line: 757, column: 15, scope: !5307)
!5317 = !DILocation(line: 757, column: 5, scope: !5307)
!5318 = !DILocation(line: 758, column: 8, scope: !5275)
!5319 = !DILocation(line: 758, column: 13, scope: !5275)
!5320 = !DILocation(line: 760, column: 8, scope: !5275)
!5321 = !DILocation(line: 760, column: 14, scope: !5275)
!5322 = !DILocation(line: 761, column: 8, scope: !5275)
!5323 = !DILocation(line: 761, column: 16, scope: !5275)
!5324 = !DILocation(line: 762, column: 8, scope: !5275)
!5325 = !DILocation(line: 762, column: 17, scope: !5275)
!5326 = !DILocation(line: 763, column: 1, scope: !5275)
!5327 = distinct !DISubprogram(name: "gimple_def_ops", scope: !587, file: !587, line: 1292, type: !5328, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5330)
!5328 = !DISubroutineType(types: !5329)
!5329 = !{!1054, !5090}
!5330 = !{!5331}
!5331 = !DILocalVariable(name: "g", arg: 1, scope: !5327, file: !587, line: 1292, type: !5090)
!5332 = !DILocation(line: 0, scope: !5327)
!5333 = !DILocation(line: 1294, column: 8, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5327, file: !587, line: 1294, column: 7)
!5335 = !DILocation(line: 1294, column: 7, scope: !5327)
!5336 = !DILocation(line: 1296, column: 26, scope: !5327)
!5337 = !DILocation(line: 1296, column: 3, scope: !5327)
!5338 = !DILocation(line: 1297, column: 1, scope: !5327)
!5339 = distinct !DISubprogram(name: "gimple_vdef", scope: !587, file: !587, line: 1375, type: !5340, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5342)
!5340 = !DISubroutineType(types: !5341)
!5341 = !{!765, !5090}
!5342 = !{!5343}
!5343 = !DILocalVariable(name: "g", arg: 1, scope: !5339, file: !587, line: 1375, type: !5090)
!5344 = !DILocation(line: 0, scope: !5339)
!5345 = !DILocation(line: 1377, column: 8, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5339, file: !587, line: 1377, column: 7)
!5347 = !DILocation(line: 1377, column: 7, scope: !5339)
!5348 = !DILocation(line: 1379, column: 23, scope: !5339)
!5349 = !DILocation(line: 1379, column: 3, scope: !5339)
!5350 = !DILocation(line: 1380, column: 1, scope: !5339)
!5351 = distinct !DISubprogram(name: "gimple_use_ops", scope: !587, file: !587, line: 1313, type: !5352, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5354)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{!1061, !5090}
!5354 = !{!5355}
!5355 = !DILocalVariable(name: "g", arg: 1, scope: !5351, file: !587, line: 1313, type: !5090)
!5356 = !DILocation(line: 0, scope: !5351)
!5357 = !DILocation(line: 1315, column: 8, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5351, file: !587, line: 1315, column: 7)
!5359 = !DILocation(line: 1315, column: 7, scope: !5351)
!5360 = !DILocation(line: 1317, column: 26, scope: !5351)
!5361 = !DILocation(line: 1317, column: 3, scope: !5351)
!5362 = !DILocation(line: 1318, column: 1, scope: !5351)
!5363 = distinct !DISubprogram(name: "gimple_vuse", scope: !587, file: !587, line: 1365, type: !5340, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5364)
!5364 = !{!5365}
!5365 = !DILocalVariable(name: "g", arg: 1, scope: !5363, file: !587, line: 1365, type: !5090)
!5366 = !DILocation(line: 0, scope: !5363)
!5367 = !DILocation(line: 1367, column: 8, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5363, file: !587, line: 1367, column: 7)
!5369 = !DILocation(line: 1367, column: 7, scope: !5363)
!5370 = !DILocation(line: 1369, column: 23, scope: !5363)
!5371 = !DILocation(line: 1369, column: 3, scope: !5363)
!5372 = !DILocation(line: 1370, column: 1, scope: !5363)
!5373 = distinct !DISubprogram(name: "gimple_has_ops", scope: !587, file: !587, line: 1274, type: !5250, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5374)
!5374 = !{!5375}
!5375 = !DILocalVariable(name: "g", arg: 1, scope: !5373, file: !587, line: 1274, type: !5090)
!5376 = !DILocation(line: 0, scope: !5373)
!5377 = !DILocation(line: 1276, column: 10, scope: !5373)
!5378 = !DILocation(line: 1276, column: 26, scope: !5373)
!5379 = !DILocation(line: 1276, column: 41, scope: !5373)
!5380 = !DILocation(line: 1276, column: 44, scope: !5373)
!5381 = !DILocation(line: 1276, column: 60, scope: !5373)
!5382 = !DILocation(line: 1276, column: 3, scope: !5373)
!5383 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !587, file: !587, line: 1283, type: !5250, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5384)
!5384 = !{!5385}
!5385 = !DILocalVariable(name: "g", arg: 1, scope: !5383, file: !587, line: 1283, type: !5090)
!5386 = !DILocation(line: 0, scope: !5383)
!5387 = !DILocation(line: 1285, column: 10, scope: !5383)
!5388 = !DILocation(line: 1285, column: 26, scope: !5383)
!5389 = !DILocation(line: 1285, column: 43, scope: !5383)
!5390 = !DILocation(line: 1285, column: 46, scope: !5383)
!5391 = !DILocation(line: 1285, column: 62, scope: !5383)
!5392 = !DILocation(line: 1285, column: 3, scope: !5383)
!5393 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !5117, file: !5117, line: 434, type: !5394, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5397)
!5394 = !DISubroutineType(types: !5395)
!5395 = !{!765, !5396}
!5396 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !580, line: 27, baseType: !1059)
!5397 = !{!5398}
!5398 = !DILocalVariable(name: "def", arg: 1, scope: !5393, file: !5117, line: 434, type: !5396)
!5399 = !DILocation(line: 0, scope: !5393)
!5400 = !DILocation(line: 436, column: 10, scope: !5393)
!5401 = !DILocation(line: 436, column: 3, scope: !5393)
!5402 = distinct !DISubprogram(name: "VEC_bitmap_set_t_heap_alloc", scope: !3, file: !3, line: 378, type: !5403, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5405)
!5403 = !DISubroutineType(types: !5404)
!5404 = !{!671, !664}
!5405 = !{!5406}
!5406 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5402, file: !3, line: 378, type: !664)
!5407 = !DILocation(line: 0, scope: !5402)
!5408 = !DILocation(line: 378, column: 1, scope: !5402)
!5409 = distinct !DISubprogram(name: "my_rev_post_order_compute", scope: !3, file: !3, line: 4555, type: !5410, scopeLine: 4556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5412)
!5410 = !DISubroutineType(types: !5411)
!5411 = !{!664, !2144, !663}
!5412 = !{!5413, !5414, !5415, !5416, !5417, !5418, !5419, !5420, !5422, !5423}
!5413 = !DILocalVariable(name: "post_order", arg: 1, scope: !5409, file: !3, line: 4555, type: !2144)
!5414 = !DILocalVariable(name: "include_entry_exit", arg: 2, scope: !5409, file: !3, line: 4555, type: !663)
!5415 = !DILocalVariable(name: "stack", scope: !5409, file: !3, line: 4557, type: !2145)
!5416 = !DILocalVariable(name: "sp", scope: !5409, file: !3, line: 4558, type: !664)
!5417 = !DILocalVariable(name: "post_order_num", scope: !5409, file: !3, line: 4559, type: !664)
!5418 = !DILocalVariable(name: "visited", scope: !5409, file: !3, line: 4560, type: !2267)
!5419 = !DILocalVariable(name: "count", scope: !5409, file: !3, line: 4561, type: !664)
!5420 = !DILocalVariable(name: "ei", scope: !5421, file: !3, line: 4581, type: !2146)
!5421 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 4580, column: 5)
!5422 = !DILocalVariable(name: "src", scope: !5421, file: !3, line: 4582, type: !1477)
!5423 = !DILocalVariable(name: "dest", scope: !5421, file: !3, line: 4583, type: !1477)
!5424 = !DILocation(line: 0, scope: !5409)
!5425 = !DILocation(line: 4567, column: 11, scope: !5409)
!5426 = !DILocation(line: 4571, column: 28, scope: !5409)
!5427 = !DILocation(line: 4571, column: 13, scope: !5409)
!5428 = !DILocation(line: 4574, column: 3, scope: !5409)
!5429 = !DILocation(line: 4577, column: 17, scope: !5409)
!5430 = !DILocation(line: 0, scope: !5421)
!5431 = !DILocation(line: 0, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 4596, column: 15)
!5433 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 4592, column: 9)
!5434 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 4591, column: 11)
!5435 = !DILocation(line: 4579, column: 3, scope: !5409)
!5436 = !DILocation(line: 4581, column: 7, scope: !5421)
!5437 = !DILocation(line: 4586, column: 21, scope: !5421)
!5438 = !DILocation(line: 4586, column: 12, scope: !5421)
!5439 = !DILocation(line: 4587, column: 13, scope: !5421)
!5440 = !DILocation(line: 4587, column: 27, scope: !5421)
!5441 = !DILocation(line: 4588, column: 14, scope: !5421)
!5442 = !DILocation(line: 4588, column: 28, scope: !5421)
!5443 = !DILocation(line: 4591, column: 18, scope: !5434)
!5444 = !DILocation(line: 4591, column: 15, scope: !5434)
!5445 = !DILocation(line: 4591, column: 34, scope: !5434)
!5446 = !DILocation(line: 4591, column: 39, scope: !5434)
!5447 = !DILocation(line: 4591, column: 11, scope: !5421)
!5448 = !DILocation(line: 4594, column: 11, scope: !5433)
!5449 = !DILocation(line: 4596, column: 15, scope: !5432)
!5450 = !DILocation(line: 4596, column: 39, scope: !5432)
!5451 = !DILocation(line: 4596, column: 15, scope: !5433)
!5452 = !DILocation(line: 4599, column: 21, scope: !5432)
!5453 = !DILocation(line: 4599, column: 13, scope: !5432)
!5454 = !DILocation(line: 4599, column: 27, scope: !5432)
!5455 = !DILocation(line: 4601, column: 49, scope: !5432)
!5456 = !DILocation(line: 4601, column: 38, scope: !5432)
!5457 = !DILocation(line: 4601, column: 13, scope: !5432)
!5458 = !DILocation(line: 4601, column: 42, scope: !5432)
!5459 = !DILocation(line: 4605, column: 15, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 4605, column: 15)
!5461 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 4604, column: 9)
!5462 = !DILocation(line: 4605, column: 40, scope: !5460)
!5463 = !DILocation(line: 4605, column: 51, scope: !5460)
!5464 = !DILocation(line: 4605, column: 48, scope: !5460)
!5465 = !DILocation(line: 4605, column: 15, scope: !5461)
!5466 = !DILocation(line: 4606, column: 50, scope: !5460)
!5467 = !DILocation(line: 4606, column: 38, scope: !5460)
!5468 = !DILocation(line: 4606, column: 13, scope: !5460)
!5469 = !DILocation(line: 4606, column: 42, scope: !5460)
!5470 = !DILocation(line: 4608, column: 16, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 4608, column: 15)
!5472 = !DILocation(line: 4608, column: 15, scope: !5461)
!5473 = !DILocation(line: 4609, column: 13, scope: !5471)
!5474 = !DILocation(line: 0, scope: !5434)
!5475 = !DILocation(line: 4613, column: 5, scope: !5409)
!5476 = distinct !{!5476, !5435, !5475}
!5477 = !DILocation(line: 4623, column: 3, scope: !5409)
!5478 = !DILocation(line: 4624, column: 3, scope: !5409)
!5479 = !DILocation(line: 4625, column: 3, scope: !5409)
!5480 = distinct !DISubprogram(name: "expr_pred_trans_hash", scope: !3, file: !3, line: 526, type: !1517, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5481)
!5481 = !{!5482, !5483}
!5482 = !DILocalVariable(name: "p", arg: 1, scope: !5480, file: !3, line: 526, type: !1520)
!5483 = !DILocalVariable(name: "ve", scope: !5480, file: !3, line: 528, type: !5484)
!5484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2152)
!5485 = !DILocation(line: 0, scope: !5480)
!5486 = !DILocation(line: 529, column: 14, scope: !5480)
!5487 = !DILocation(line: 529, column: 3, scope: !5480)
!5488 = distinct !DISubprogram(name: "expr_pred_trans_eq", scope: !3, file: !3, line: 536, type: !1525, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5489)
!5489 = !{!5490, !5491, !5492, !5493, !5494, !5495}
!5490 = !DILocalVariable(name: "p1", arg: 1, scope: !5488, file: !3, line: 536, type: !1520)
!5491 = !DILocalVariable(name: "p2", arg: 2, scope: !5488, file: !3, line: 536, type: !1520)
!5492 = !DILocalVariable(name: "ve1", scope: !5488, file: !3, line: 538, type: !5484)
!5493 = !DILocalVariable(name: "ve2", scope: !5488, file: !3, line: 539, type: !5484)
!5494 = !DILocalVariable(name: "b1", scope: !5488, file: !3, line: 540, type: !1477)
!5495 = !DILocalVariable(name: "b2", scope: !5488, file: !3, line: 541, type: !1477)
!5496 = !DILocation(line: 0, scope: !5488)
!5497 = !DILocation(line: 540, column: 25, scope: !5488)
!5498 = !DILocation(line: 541, column: 25, scope: !5488)
!5499 = !DILocation(line: 545, column: 10, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 545, column: 7)
!5501 = !DILocation(line: 545, column: 7, scope: !5488)
!5502 = !DILocation(line: 547, column: 28, scope: !5488)
!5503 = !DILocation(line: 547, column: 36, scope: !5488)
!5504 = !DILocation(line: 547, column: 10, scope: !5488)
!5505 = !DILocation(line: 547, column: 3, scope: !5488)
!5506 = !DILocation(line: 548, column: 1, scope: !5488)
!5507 = distinct !DISubprogram(name: "pre_expr_hash", scope: !3, file: !3, line: 215, type: !1517, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5508)
!5508 = !{!5509, !5510}
!5509 = !DILocalVariable(name: "p1", arg: 1, scope: !5507, file: !3, line: 215, type: !1520)
!5510 = !DILocalVariable(name: "e", scope: !5507, file: !3, line: 217, type: !2161)
!5511 = !DILocation(line: 0, scope: !5507)
!5512 = !DILocation(line: 218, column: 14, scope: !5507)
!5513 = !DILocation(line: 218, column: 3, scope: !5507)
!5514 = !DILocation(line: 221, column: 42, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 219, column: 5)
!5516 = !DILocation(line: 221, column: 14, scope: !5515)
!5517 = !DILocation(line: 221, column: 7, scope: !5515)
!5518 = !DILocation(line: 223, column: 14, scope: !5515)
!5519 = !DILocation(line: 223, column: 7, scope: !5515)
!5520 = !DILocation(line: 225, column: 14, scope: !5515)
!5521 = !DILocation(line: 225, column: 33, scope: !5515)
!5522 = !DILocation(line: 225, column: 7, scope: !5515)
!5523 = !DILocation(line: 227, column: 14, scope: !5515)
!5524 = !DILocation(line: 227, column: 38, scope: !5515)
!5525 = !DILocation(line: 227, column: 7, scope: !5515)
!5526 = !DILocation(line: 229, column: 7, scope: !5515)
!5527 = !DILocation(line: 232, column: 5, scope: !5507)
!5528 = !DILocation(line: 234, column: 1, scope: !5507)
!5529 = distinct !DISubprogram(name: "pre_expr_eq", scope: !3, file: !3, line: 186, type: !1525, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5530)
!5530 = !{!5531, !5532, !5533, !5534}
!5531 = !DILocalVariable(name: "p1", arg: 1, scope: !5529, file: !3, line: 186, type: !1520)
!5532 = !DILocalVariable(name: "p2", arg: 2, scope: !5529, file: !3, line: 186, type: !1520)
!5533 = !DILocalVariable(name: "e1", scope: !5529, file: !3, line: 188, type: !2161)
!5534 = !DILocalVariable(name: "e2", scope: !5529, file: !3, line: 189, type: !2161)
!5535 = !DILocation(line: 0, scope: !5529)
!5536 = !DILocation(line: 191, column: 11, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 191, column: 7)
!5538 = !DILocation(line: 191, column: 23, scope: !5537)
!5539 = !DILocation(line: 191, column: 16, scope: !5537)
!5540 = !DILocation(line: 191, column: 7, scope: !5529)
!5541 = !DILocation(line: 194, column: 3, scope: !5529)
!5542 = !DILocation(line: 197, column: 40, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 195, column: 5)
!5544 = !DILocation(line: 198, column: 12, scope: !5543)
!5545 = !DILocation(line: 197, column: 14, scope: !5543)
!5546 = !DILocation(line: 197, column: 7, scope: !5543)
!5547 = !DILocation(line: 200, column: 14, scope: !5543)
!5548 = !DILocation(line: 200, column: 36, scope: !5543)
!5549 = !DILocation(line: 200, column: 33, scope: !5543)
!5550 = !DILocation(line: 200, column: 7, scope: !5543)
!5551 = !DILocation(line: 202, column: 29, scope: !5543)
!5552 = !DILocation(line: 202, column: 49, scope: !5543)
!5553 = !DILocation(line: 202, column: 14, scope: !5543)
!5554 = !DILocation(line: 202, column: 7, scope: !5543)
!5555 = !DILocation(line: 204, column: 31, scope: !5543)
!5556 = !DILocation(line: 205, column: 10, scope: !5543)
!5557 = !DILocation(line: 204, column: 14, scope: !5543)
!5558 = !DILocation(line: 204, column: 7, scope: !5543)
!5559 = !DILocation(line: 207, column: 7, scope: !5543)
!5560 = !DILocation(line: 210, column: 5, scope: !5529)
!5561 = !DILocation(line: 212, column: 1, scope: !5529)
!5562 = distinct !DISubprogram(name: "ei_start_1", scope: !349, file: !349, line: 696, type: !5563, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5565)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{!2146, !2151}
!5565 = !{!5566, !5567}
!5566 = !DILocalVariable(name: "ev", arg: 1, scope: !5562, file: !349, line: 696, type: !2151)
!5567 = !DILocalVariable(name: "i", scope: !5562, file: !349, line: 698, type: !2146)
!5568 = !DILocation(line: 0, scope: !5562)
!5569 = !DILocation(line: 700, column: 5, scope: !5562)
!5570 = !DILocation(line: 700, column: 11, scope: !5562)
!5571 = !DILocation(line: 701, column: 5, scope: !5562)
!5572 = !DILocation(line: 701, column: 15, scope: !5562)
!5573 = !DILocation(line: 703, column: 3, scope: !5562)
!5574 = distinct !DISubprogram(name: "ei_edge", scope: !349, file: !349, line: 752, type: !5575, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5577)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{!1005, !2146}
!5577 = !{!5578}
!5578 = !DILocalVariable(name: "i", arg: 1, scope: !5574, file: !349, line: 752, type: !2146)
!5579 = !DILocation(line: 754, column: 10, scope: !5574)
!5580 = !DILocation(line: 754, column: 3, scope: !5574)
!5581 = distinct !DISubprogram(name: "SET_BIT", scope: !2268, file: !2268, line: 63, type: !5582, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5584)
!5582 = !DISubroutineType(types: !5583)
!5583 = !{null, !2267, !6}
!5584 = !{!5585, !5586, !5587}
!5585 = !DILocalVariable(name: "map", arg: 1, scope: !5581, file: !2268, line: 63, type: !2267)
!5586 = !DILocalVariable(name: "bitno", arg: 2, scope: !5581, file: !2268, line: 63, type: !6)
!5587 = !DILocalVariable(name: "oldbit", scope: !5588, file: !2268, line: 67, type: !663)
!5588 = distinct !DILexicalBlock(scope: !5589, file: !2268, line: 66, column: 5)
!5589 = distinct !DILexicalBlock(scope: !5581, file: !2268, line: 65, column: 7)
!5590 = !DILocation(line: 0, scope: !5581)
!5591 = !DILocation(line: 65, column: 12, scope: !5589)
!5592 = !DILocation(line: 65, column: 7, scope: !5589)
!5593 = !DILocation(line: 65, column: 7, scope: !5581)
!5594 = !DILocation(line: 73, column: 40, scope: !5581)
!5595 = !DILocation(line: 73, column: 29, scope: !5581)
!5596 = !DILocation(line: 72, column: 19, scope: !5581)
!5597 = !DILocation(line: 72, column: 3, scope: !5581)
!5598 = !DILocation(line: 68, column: 16, scope: !5588)
!5599 = !DILocation(line: 69, column: 12, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5588, file: !2268, line: 69, column: 11)
!5601 = !DILocation(line: 69, column: 11, scope: !5588)
!5602 = !DILocation(line: 70, column: 2, scope: !5600)
!5603 = !DILocation(line: 70, column: 41, scope: !5600)
!5604 = !DILocation(line: 73, column: 5, scope: !5581)
!5605 = !DILocation(line: 74, column: 1, scope: !5581)
!5606 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !349, file: !349, line: 150, type: !5607, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5611)
!5607 = !DISubroutineType(types: !5608)
!5608 = !{!6, !5609}
!5609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5610, size: 64)
!5610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !998)
!5611 = !{!5612}
!5612 = !DILocalVariable(name: "vec_", arg: 1, scope: !5606, file: !349, line: 150, type: !5609)
!5613 = !DILocation(line: 0, scope: !5606)
!5614 = !DILocation(line: 150, column: 1, scope: !5606)
!5615 = distinct !DISubprogram(name: "ei_one_before_end_p", scope: !349, file: !349, line: 729, type: !5616, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5618)
!5616 = !DISubroutineType(types: !5617)
!5617 = !{!663, !2146}
!5618 = !{!5619}
!5619 = !DILocalVariable(name: "i", arg: 1, scope: !5615, file: !349, line: 729, type: !2146)
!5620 = !DILocation(line: 731, column: 19, scope: !5615)
!5621 = !DILocation(line: 731, column: 26, scope: !5615)
!5622 = !DILocation(line: 731, column: 23, scope: !5615)
!5623 = !DILocation(line: 731, column: 10, scope: !5615)
!5624 = !DILocation(line: 731, column: 3, scope: !5615)
!5625 = distinct !DISubprogram(name: "ei_next", scope: !349, file: !349, line: 736, type: !5626, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5628)
!5626 = !DISubroutineType(types: !5627)
!5627 = !{null, !2145}
!5628 = !{!5629}
!5629 = !DILocalVariable(name: "i", arg: 1, scope: !5625, file: !349, line: 736, type: !2145)
!5630 = !DILocation(line: 0, scope: !5625)
!5631 = !DILocation(line: 738, column: 3, scope: !5625)
!5632 = !DILocation(line: 739, column: 11, scope: !5625)
!5633 = !DILocation(line: 740, column: 1, scope: !5625)
!5634 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !349, file: !349, line: 150, type: !5635, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5637)
!5635 = !DISubroutineType(types: !5636)
!5636 = !{!1005, !5609, !6}
!5637 = !{!5638, !5639}
!5638 = !DILocalVariable(name: "vec_", arg: 1, scope: !5634, file: !349, line: 150, type: !5609)
!5639 = !DILocalVariable(name: "ix_", arg: 2, scope: !5634, file: !349, line: 150, type: !6)
!5640 = !DILocation(line: 0, scope: !5634)
!5641 = !DILocation(line: 150, column: 1, scope: !5634)
!5642 = distinct !DISubprogram(name: "ei_container", scope: !349, file: !349, line: 685, type: !5643, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5645)
!5643 = !DISubroutineType(types: !5644)
!5644 = !{!993, !2146}
!5645 = !{!5646}
!5646 = !DILocalVariable(name: "i", arg: 1, scope: !5642, file: !349, line: 685, type: !2146)
!5647 = !DILocation(line: 687, column: 3, scope: !5642)
!5648 = !DILocation(line: 688, column: 10, scope: !5642)
!5649 = !DILocation(line: 688, column: 3, scope: !5642)
!5650 = distinct !DISubprogram(name: "vn_hash_constant_with_type", scope: !2055, file: !2055, line: 117, type: !5651, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5653)
!5651 = !DISubroutineType(types: !5652)
!5652 = !{!1519, !765}
!5653 = !{!5654, !5655}
!5654 = !DILocalVariable(name: "constant", arg: 1, scope: !5650, file: !2055, line: 117, type: !765)
!5655 = !DILocalVariable(name: "type", scope: !5650, file: !2055, line: 119, type: !765)
!5656 = !DILocation(line: 0, scope: !5650)
!5657 = !DILocation(line: 119, column: 15, scope: !5650)
!5658 = !DILocation(line: 120, column: 11, scope: !5650)
!5659 = !DILocation(line: 121, column: 6, scope: !5650)
!5660 = !DILocation(line: 121, column: 4, scope: !5650)
!5661 = !DILocation(line: 122, column: 7, scope: !5650)
!5662 = !DILocation(line: 123, column: 9, scope: !5650)
!5663 = !DILocation(line: 123, column: 33, scope: !5650)
!5664 = !DILocation(line: 123, column: 31, scope: !5650)
!5665 = !DILocation(line: 122, column: 4, scope: !5650)
!5666 = !DILocation(line: 120, column: 3, scope: !5650)
!5667 = distinct !DISubprogram(name: "vn_constant_eq_with_type", scope: !2055, file: !2055, line: 130, type: !5668, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5670)
!5668 = !DISubroutineType(types: !5669)
!5669 = !{!663, !765, !765}
!5670 = !{!5671, !5672}
!5671 = !DILocalVariable(name: "c1", arg: 1, scope: !5667, file: !2055, line: 130, type: !765)
!5672 = !DILocalVariable(name: "c2", arg: 2, scope: !5667, file: !2055, line: 130, type: !765)
!5673 = !DILocation(line: 0, scope: !5667)
!5674 = !DILocation(line: 132, column: 11, scope: !5667)
!5675 = !DILocation(line: 133, column: 4, scope: !5667)
!5676 = !DILocation(line: 133, column: 27, scope: !5667)
!5677 = !DILocation(line: 133, column: 43, scope: !5667)
!5678 = !DILocation(line: 133, column: 7, scope: !5667)
!5679 = !DILocation(line: 132, column: 3, scope: !5667)
!5680 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !141, file: !141, line: 182, type: !5681, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5683)
!5681 = !DISubroutineType(types: !5682)
!5682 = !{!765, !3283, !6}
!5683 = !{!5684, !5685}
!5684 = !DILocalVariable(name: "vec_", arg: 1, scope: !5680, file: !141, line: 182, type: !3283)
!5685 = !DILocalVariable(name: "ix_", arg: 2, scope: !5680, file: !141, line: 182, type: !6)
!5686 = !DILocation(line: 0, scope: !5680)
!5687 = !DILocation(line: 182, column: 1, scope: !5680)
!5688 = distinct !DISubprogram(name: "has_zero_uses", scope: !5117, file: !5117, line: 332, type: !5689, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5694)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{!663, !5691}
!5691 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !689, line: 59, baseType: !5692)
!5692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5693, size: 64)
!5693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !767)
!5694 = !{!5695, !5696}
!5695 = !DILocalVariable(name: "var", arg: 1, scope: !5688, file: !5117, line: 332, type: !5691)
!5696 = !DILocalVariable(name: "ptr", scope: !5688, file: !5117, line: 334, type: !5697)
!5697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5698)
!5698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5699, size: 64)
!5699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2176)
!5700 = !DILocation(line: 0, scope: !5688)
!5701 = !DILocation(line: 334, column: 42, scope: !5688)
!5702 = !DILocation(line: 337, column: 19, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5688, file: !5117, line: 337, column: 7)
!5704 = !DILocation(line: 337, column: 11, scope: !5703)
!5705 = !DILocation(line: 337, column: 7, scope: !5688)
!5706 = !DILocation(line: 342, column: 8, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5688, file: !5117, line: 342, column: 7)
!5708 = !DILocation(line: 342, column: 7, scope: !5688)
!5709 = !DILocation(line: 345, column: 10, scope: !5688)
!5710 = !DILocation(line: 345, column: 3, scope: !5688)
!5711 = !DILocation(line: 346, column: 1, scope: !5688)
!5712 = distinct !DISubprogram(name: "get_or_alloc_expr_for_name", scope: !3, file: !3, line: 340, type: !5713, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5715)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{!754, !765}
!5715 = !{!5716, !5717, !5718, !5719}
!5716 = !DILocalVariable(name: "name", arg: 1, scope: !5712, file: !3, line: 340, type: !765)
!5717 = !DILocalVariable(name: "expr", scope: !5712, file: !3, line: 342, type: !756)
!5718 = !DILocalVariable(name: "result", scope: !5712, file: !3, line: 343, type: !754)
!5719 = !DILocalVariable(name: "result_id", scope: !5712, file: !3, line: 344, type: !6)
!5720 = !DILocation(line: 0, scope: !5712)
!5721 = !DILocation(line: 342, column: 3, scope: !5712)
!5722 = !DILocation(line: 346, column: 8, scope: !5712)
!5723 = !DILocation(line: 346, column: 13, scope: !5712)
!5724 = !DILocation(line: 347, column: 8, scope: !5712)
!5725 = !DILocation(line: 347, column: 11, scope: !5712)
!5726 = !DILocation(line: 348, column: 3, scope: !5712)
!5727 = !DILocation(line: 348, column: 25, scope: !5712)
!5728 = !DILocation(line: 349, column: 15, scope: !5712)
!5729 = !DILocation(line: 350, column: 17, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 350, column: 7)
!5731 = !DILocation(line: 350, column: 7, scope: !5712)
!5732 = !DILocation(line: 351, column: 12, scope: !5730)
!5733 = !DILocation(line: 351, column: 5, scope: !5730)
!5734 = !DILocation(line: 353, column: 35, scope: !5712)
!5735 = !DILocation(line: 353, column: 23, scope: !5712)
!5736 = !DILocation(line: 353, column: 12, scope: !5712)
!5737 = !DILocation(line: 354, column: 11, scope: !5712)
!5738 = !DILocation(line: 354, column: 16, scope: !5712)
!5739 = !DILocation(line: 355, column: 3, scope: !5712)
!5740 = !DILocation(line: 355, column: 26, scope: !5712)
!5741 = !DILocation(line: 356, column: 3, scope: !5712)
!5742 = !DILocation(line: 357, column: 3, scope: !5712)
!5743 = !DILocation(line: 358, column: 1, scope: !5712)
!5744 = distinct !DISubprogram(name: "bitmap_insert_into_set", scope: !3, file: !3, line: 691, type: !5745, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5747)
!5745 = !DISubroutineType(types: !5746)
!5746 = !{null, !683, !754}
!5747 = !{!5748, !5749}
!5748 = !DILocalVariable(name: "set", arg: 1, scope: !5744, file: !3, line: 691, type: !683)
!5749 = !DILocalVariable(name: "expr", arg: 2, scope: !5744, file: !3, line: 691, type: !754)
!5750 = !DILocation(line: 0, scope: !5744)
!5751 = !DILocation(line: 693, column: 40, scope: !5744)
!5752 = !DILocation(line: 693, column: 3, scope: !5744)
!5753 = !DILocation(line: 694, column: 1, scope: !5744)
!5754 = distinct !DISubprogram(name: "bitmap_value_insert_into_set", scope: !3, file: !3, line: 900, type: !5745, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5755)
!5755 = !{!5756, !5757, !5758}
!5756 = !DILocalVariable(name: "set", arg: 1, scope: !5754, file: !3, line: 900, type: !683)
!5757 = !DILocalVariable(name: "expr", arg: 2, scope: !5754, file: !3, line: 900, type: !754)
!5758 = !DILocalVariable(name: "val", scope: !5754, file: !3, line: 902, type: !6)
!5759 = !DILocation(line: 0, scope: !5754)
!5760 = !DILocation(line: 902, column: 22, scope: !5754)
!5761 = !DILocation(line: 909, column: 7, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 909, column: 7)
!5763 = !DILocation(line: 909, column: 7, scope: !5754)
!5764 = !DILocation(line: 913, column: 28, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 913, column: 7)
!5766 = !DILocation(line: 913, column: 7, scope: !5765)
!5767 = !DILocation(line: 913, column: 7, scope: !5754)
!5768 = !DILocation(line: 914, column: 26, scope: !5765)
!5769 = !DILocation(line: 914, column: 45, scope: !5765)
!5770 = !DILocation(line: 914, column: 5, scope: !5765)
!5771 = !DILocation(line: 915, column: 1, scope: !5754)
!5772 = distinct !DISubprogram(name: "bitmap_set_copy", scope: !3, file: !3, line: 699, type: !5773, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5775)
!5773 = !DISubroutineType(types: !5774)
!5774 = !{null, !683, !683}
!5775 = !{!5776, !5777}
!5776 = !DILocalVariable(name: "dest", arg: 1, scope: !5772, file: !3, line: 699, type: !683)
!5777 = !DILocalVariable(name: "orig", arg: 2, scope: !5772, file: !3, line: 699, type: !683)
!5778 = !DILocation(line: 0, scope: !5772)
!5779 = !DILocation(line: 701, column: 22, scope: !5772)
!5780 = !DILocation(line: 701, column: 41, scope: !5772)
!5781 = !DILocation(line: 701, column: 3, scope: !5772)
!5782 = !DILocation(line: 702, column: 22, scope: !5772)
!5783 = !DILocation(line: 702, column: 36, scope: !5772)
!5784 = !DILocation(line: 702, column: 3, scope: !5772)
!5785 = !DILocation(line: 703, column: 1, scope: !5772)
!5786 = distinct !DISubprogram(name: "gsi_end_p", scope: !587, file: !587, line: 4467, type: !5787, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5789)
!5787 = !DISubroutineType(types: !5788)
!5788 = !{!663, !3671}
!5789 = !{!5790}
!5790 = !DILocalVariable(name: "i", arg: 1, scope: !5786, file: !587, line: 4467, type: !3671)
!5791 = !DILocation(line: 4467, column: 33, scope: !5786)
!5792 = !DILocation(line: 4469, column: 12, scope: !5786)
!5793 = !DILocation(line: 4469, column: 16, scope: !5786)
!5794 = !DILocation(line: 4469, column: 10, scope: !5786)
!5795 = !DILocation(line: 4469, column: 3, scope: !5786)
!5796 = distinct !DISubprogram(name: "make_values_for_phi", scope: !3, file: !3, line: 3798, type: !5797, scopeLine: 3799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5799)
!5797 = !DISubroutineType(types: !5798)
!5798 = !{null, !1025, !1477}
!5799 = !{!5800, !5801, !5802, !5803, !5806, !5809}
!5800 = !DILocalVariable(name: "phi", arg: 1, scope: !5796, file: !3, line: 3798, type: !1025)
!5801 = !DILocalVariable(name: "block", arg: 2, scope: !5796, file: !3, line: 3798, type: !1477)
!5802 = !DILocalVariable(name: "result", scope: !5796, file: !3, line: 3800, type: !765)
!5803 = !DILocalVariable(name: "e", scope: !5804, file: !3, line: 3806, type: !754)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 3805, column: 5)
!5805 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 3804, column: 7)
!5806 = !DILocalVariable(name: "i", scope: !5807, file: !3, line: 3812, type: !6)
!5807 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 3811, column: 2)
!5808 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 3810, column: 11)
!5809 = !DILocalVariable(name: "arg", scope: !5810, file: !3, line: 3815, type: !765)
!5810 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 3814, column: 6)
!5811 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 3813, column: 4)
!5812 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 3813, column: 4)
!5813 = !DILocation(line: 0, scope: !5796)
!5814 = !DILocation(line: 3800, column: 17, scope: !5796)
!5815 = !DILocation(line: 3804, column: 7, scope: !5805)
!5816 = !DILocation(line: 3804, column: 7, scope: !5796)
!5817 = !DILocation(line: 3806, column: 20, scope: !5804)
!5818 = !DILocation(line: 0, scope: !5804)
!5819 = !DILocation(line: 3807, column: 21, scope: !5804)
!5820 = !DILocation(line: 3807, column: 7, scope: !5804)
!5821 = !DILocation(line: 3808, column: 31, scope: !5804)
!5822 = !DILocation(line: 3808, column: 7, scope: !5804)
!5823 = !DILocation(line: 3809, column: 37, scope: !5804)
!5824 = !DILocation(line: 3809, column: 7, scope: !5804)
!5825 = !DILocation(line: 3810, column: 12, scope: !5808)
!5826 = !DILocation(line: 3810, column: 11, scope: !5804)
!5827 = !DILocation(line: 3813, column: 4, scope: !5812)
!5828 = !DILocation(line: 0, scope: !5812)
!5829 = !DILocation(line: 0, scope: !5807)
!5830 = !DILocation(line: 3813, column: 20, scope: !5811)
!5831 = !DILocation(line: 3813, column: 18, scope: !5811)
!5832 = !DILocation(line: 3815, column: 19, scope: !5810)
!5833 = !DILocation(line: 0, scope: !5810)
!5834 = !DILocation(line: 3816, column: 12, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 3816, column: 12)
!5836 = !DILocation(line: 3816, column: 28, scope: !5835)
!5837 = !DILocation(line: 3816, column: 12, scope: !5810)
!5838 = !DILocation(line: 3818, column: 9, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 3817, column: 3)
!5840 = !DILocation(line: 3819, column: 19, scope: !5839)
!5841 = !DILocation(line: 3819, column: 5, scope: !5839)
!5842 = !DILocation(line: 3820, column: 3, scope: !5839)
!5843 = !DILocation(line: 3813, column: 47, scope: !5811)
!5844 = !DILocation(line: 3813, column: 4, scope: !5811)
!5845 = distinct !{!5845, !5827, !5846}
!5846 = !DILocation(line: 3821, column: 6, scope: !5812)
!5847 = !DILocation(line: 3824, column: 1, scope: !5796)
!5848 = distinct !DISubprogram(name: "gsi_stmt", scope: !587, file: !587, line: 4501, type: !5849, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5851)
!5849 = !DISubroutineType(types: !5850)
!5850 = !{!1025, !3671}
!5851 = !{!5852}
!5852 = !DILocalVariable(name: "i", arg: 1, scope: !5848, file: !587, line: 4501, type: !3671)
!5853 = !DILocation(line: 4501, column: 32, scope: !5848)
!5854 = !DILocation(line: 4503, column: 12, scope: !5848)
!5855 = !DILocation(line: 4503, column: 17, scope: !5848)
!5856 = !DILocation(line: 4503, column: 3, scope: !5848)
!5857 = distinct !DISubprogram(name: "gsi_next", scope: !587, file: !587, line: 4485, type: !5858, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5861)
!5858 = !DISubroutineType(types: !5859)
!5859 = !{null, !5860}
!5860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!5861 = !{!5862}
!5862 = !DILocalVariable(name: "i", arg: 1, scope: !5857, file: !587, line: 4485, type: !5860)
!5863 = !DILocation(line: 0, scope: !5857)
!5864 = !DILocation(line: 4487, column: 15, scope: !5857)
!5865 = !DILocation(line: 4487, column: 20, scope: !5857)
!5866 = !DILocation(line: 4487, column: 10, scope: !5857)
!5867 = !DILocation(line: 4488, column: 1, scope: !5857)
!5868 = distinct !DISubprogram(name: "gsi_start_bb", scope: !587, file: !587, line: 4418, type: !5869, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5871)
!5869 = !DISubroutineType(types: !5870)
!5870 = !{!3671, !1477}
!5871 = !{!5872, !5873, !5874}
!5872 = !DILocalVariable(name: "bb", arg: 1, scope: !5868, file: !587, line: 4418, type: !1477)
!5873 = !DILocalVariable(name: "i", scope: !5868, file: !587, line: 4420, type: !3671)
!5874 = !DILocalVariable(name: "seq", scope: !5868, file: !587, line: 4421, type: !1015)
!5875 = !DILocation(line: 0, scope: !5868)
!5876 = !DILocation(line: 4420, column: 24, scope: !5868)
!5877 = !DILocation(line: 4423, column: 9, scope: !5868)
!5878 = !DILocation(line: 4424, column: 11, scope: !5868)
!5879 = !DILocation(line: 4424, column: 5, scope: !5868)
!5880 = !DILocation(line: 4424, column: 9, scope: !5868)
!5881 = !DILocation(line: 4425, column: 5, scope: !5868)
!5882 = !DILocation(line: 4425, column: 9, scope: !5868)
!5883 = !DILocation(line: 4426, column: 5, scope: !5868)
!5884 = !DILocation(line: 4426, column: 8, scope: !5868)
!5885 = !DILocation(line: 4429, column: 1, scope: !5868)
!5886 = distinct !DISubprogram(name: "gimple_set_uid", scope: !587, file: !587, line: 1256, type: !5887, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5889)
!5887 = !DISubroutineType(types: !5888)
!5888 = !{null, !1025, !6}
!5889 = !{!5890, !5891}
!5890 = !DILocalVariable(name: "g", arg: 1, scope: !5886, file: !587, line: 1256, type: !1025)
!5891 = !DILocalVariable(name: "uid", arg: 2, scope: !5886, file: !587, line: 1256, type: !6)
!5892 = !DILocation(line: 0, scope: !5886)
!5893 = !DILocation(line: 1258, column: 13, scope: !5886)
!5894 = !DILocation(line: 1258, column: 17, scope: !5886)
!5895 = !DILocation(line: 1259, column: 1, scope: !5886)
!5896 = distinct !DISubprogram(name: "is_gimple_call", scope: !587, file: !587, line: 1870, type: !5250, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5897)
!5897 = !{!5898}
!5898 = !DILocalVariable(name: "gs", arg: 1, scope: !5896, file: !587, line: 1870, type: !5090)
!5899 = !DILocation(line: 0, scope: !5896)
!5900 = !DILocation(line: 1872, column: 10, scope: !5896)
!5901 = !DILocation(line: 1872, column: 27, scope: !5896)
!5902 = !DILocation(line: 1872, column: 3, scope: !5896)
!5903 = distinct !DISubprogram(name: "gimple_has_volatile_ops", scope: !587, file: !587, line: 1477, type: !5250, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5904)
!5904 = !{!5905}
!5905 = !DILocalVariable(name: "stmt", arg: 1, scope: !5903, file: !587, line: 1477, type: !5090)
!5906 = !DILocation(line: 0, scope: !5903)
!5907 = !DILocation(line: 1479, column: 7, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5903, file: !587, line: 1479, column: 7)
!5909 = !DILocation(line: 1479, column: 7, scope: !5903)
!5910 = !DILocation(line: 1480, column: 25, scope: !5908)
!5911 = !DILocation(line: 1480, column: 12, scope: !5908)
!5912 = !DILocation(line: 1480, column: 5, scope: !5908)
!5913 = !DILocation(line: 0, scope: !5908)
!5914 = !DILocation(line: 1483, column: 1, scope: !5903)
!5915 = distinct !DISubprogram(name: "add_to_exp_gen", scope: !3, file: !3, line: 3783, type: !5916, scopeLine: 3784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5918)
!5916 = !DISubroutineType(types: !5917)
!5917 = !{null, !1477, !765}
!5918 = !{!5919, !5920, !5921}
!5919 = !DILocalVariable(name: "block", arg: 1, scope: !5915, file: !3, line: 3783, type: !1477)
!5920 = !DILocalVariable(name: "op", arg: 2, scope: !5915, file: !3, line: 3783, type: !765)
!5921 = !DILocalVariable(name: "result", scope: !5922, file: !3, line: 3787, type: !754)
!5922 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 3786, column: 5)
!5923 = distinct !DILexicalBlock(scope: !5915, file: !3, line: 3785, column: 7)
!5924 = !DILocation(line: 0, scope: !5915)
!5925 = !DILocation(line: 3785, column: 8, scope: !5923)
!5926 = !DILocation(line: 3785, column: 7, scope: !5915)
!5927 = !DILocation(line: 3788, column: 11, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 3788, column: 11)
!5929 = !DILocation(line: 3788, column: 26, scope: !5928)
!5930 = !DILocation(line: 3788, column: 38, scope: !5928)
!5931 = !DILocation(line: 3788, column: 41, scope: !5928)
!5932 = !DILocation(line: 3788, column: 11, scope: !5922)
!5933 = !DILocation(line: 3790, column: 16, scope: !5922)
!5934 = !DILocation(line: 0, scope: !5922)
!5935 = !DILocation(line: 3791, column: 37, scope: !5922)
!5936 = !DILocation(line: 3791, column: 7, scope: !5922)
!5937 = !DILocation(line: 3792, column: 5, scope: !5923)
!5938 = !DILocation(line: 3793, column: 1, scope: !5915)
!5939 = distinct !DISubprogram(name: "can_value_number_call", scope: !3, file: !3, line: 2639, type: !5940, scopeLine: 2640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5942)
!5940 = !DISubroutineType(types: !5941)
!5941 = !{!663, !1025}
!5942 = !{!5943}
!5943 = !DILocalVariable(name: "stmt", arg: 1, scope: !5939, file: !3, line: 2639, type: !1025)
!5944 = !DILocation(line: 0, scope: !5939)
!5945 = !DILocation(line: 2641, column: 7, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 2641, column: 7)
!5947 = !DILocation(line: 2641, column: 32, scope: !5946)
!5948 = !DILocation(line: 2644, column: 1, scope: !5939)
!5949 = distinct !DISubprogram(name: "gimple_expr_type", scope: !587, file: !587, line: 4366, type: !5340, scopeLine: 4367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5950)
!5950 = !{!5951, !5952, !5953}
!5951 = !DILocalVariable(name: "stmt", arg: 1, scope: !5949, file: !587, line: 4366, type: !5090)
!5952 = !DILocalVariable(name: "code", scope: !5949, file: !587, line: 4368, type: !591)
!5953 = !DILocalVariable(name: "type", scope: !5954, file: !587, line: 4372, type: !765)
!5954 = distinct !DILexicalBlock(scope: !5955, file: !587, line: 4371, column: 5)
!5955 = distinct !DILexicalBlock(scope: !5949, file: !587, line: 4370, column: 7)
!5956 = !DILocation(line: 0, scope: !5949)
!5957 = !DILocation(line: 4368, column: 27, scope: !5949)
!5958 = !DILocation(line: 4370, column: 29, scope: !5955)
!5959 = !DILocation(line: 4378, column: 9, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5954, file: !587, line: 4377, column: 11)
!5961 = !DILocation(line: 0, scope: !5954)
!5962 = !DILocation(line: 4378, column: 2, scope: !5960)
!5963 = !DILocation(line: 4380, column: 10, scope: !5960)
!5964 = !DILocation(line: 4380, column: 2, scope: !5960)
!5965 = !DILocation(line: 4383, column: 13, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5960, file: !587, line: 4381, column: 4)
!5967 = !DILocation(line: 4384, column: 6, scope: !5966)
!5968 = !DILocation(line: 4388, column: 13, scope: !5966)
!5969 = !DILocation(line: 4389, column: 6, scope: !5966)
!5970 = !DILocation(line: 4394, column: 12, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5955, file: !587, line: 4393, column: 12)
!5972 = !DILocation(line: 4394, column: 5, scope: !5971)
!5973 = !DILocation(line: 4396, column: 12, scope: !5971)
!5974 = !DILocation(line: 4396, column: 5, scope: !5971)
!5975 = !DILocation(line: 0, scope: !5955)
!5976 = !DILocation(line: 4397, column: 1, scope: !5949)
!5977 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_heap_free", scope: !2055, file: !2055, line: 84, type: !5978, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5981)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{null, !5980}
!5980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!5981 = !{!5982}
!5982 = !DILocalVariable(name: "vec_", arg: 1, scope: !5977, file: !2055, line: 84, type: !5980)
!5983 = !DILocation(line: 0, scope: !5977)
!5984 = !DILocation(line: 84, column: 1, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5977, file: !2055, line: 84, column: 1)
!5986 = !DILocation(line: 84, column: 1, scope: !5977)
!5987 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !587, file: !587, line: 1815, type: !5988, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5990)
!5988 = !DISubroutineType(types: !5989)
!5989 = !{!140, !5090}
!5990 = !{!5991, !5992}
!5991 = !DILocalVariable(name: "gs", arg: 1, scope: !5987, file: !587, line: 1815, type: !5090)
!5992 = !DILocalVariable(name: "code", scope: !5987, file: !587, line: 1817, type: !140)
!5993 = !DILocation(line: 0, scope: !5987)
!5994 = !DILocation(line: 1820, column: 10, scope: !5987)
!5995 = !DILocation(line: 1821, column: 7, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5987, file: !587, line: 1821, column: 7)
!5997 = !DILocation(line: 1821, column: 35, scope: !5996)
!5998 = !DILocation(line: 1821, column: 7, scope: !5987)
!5999 = !DILocation(line: 1822, column: 12, scope: !5996)
!6000 = !DILocation(line: 1822, column: 5, scope: !5996)
!6001 = !DILocation(line: 1824, column: 3, scope: !5987)
!6002 = distinct !DISubprogram(name: "gimple_num_ops", scope: !587, file: !587, line: 1596, type: !5109, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6003)
!6003 = !{!6004}
!6004 = !DILocalVariable(name: "gs", arg: 1, scope: !6002, file: !587, line: 1596, type: !5090)
!6005 = !DILocation(line: 0, scope: !6002)
!6006 = !DILocation(line: 1598, column: 21, scope: !6002)
!6007 = !DILocation(line: 1598, column: 3, scope: !6002)
!6008 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !587, file: !587, line: 1727, type: !5340, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6009)
!6009 = !{!6010}
!6010 = !DILocalVariable(name: "gs", arg: 1, scope: !6008, file: !587, line: 1727, type: !5090)
!6011 = !DILocation(line: 0, scope: !6008)
!6012 = !DILocation(line: 1730, column: 10, scope: !6008)
!6013 = !DILocation(line: 1730, column: 3, scope: !6008)
!6014 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !587, file: !587, line: 1759, type: !5340, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6015)
!6015 = !{!6016}
!6016 = !DILocalVariable(name: "gs", arg: 1, scope: !6014, file: !587, line: 1759, type: !5090)
!6017 = !DILocation(line: 0, scope: !6014)
!6018 = !DILocation(line: 1763, column: 7, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6014, file: !587, line: 1763, column: 7)
!6020 = !DILocation(line: 1763, column: 27, scope: !6019)
!6021 = !DILocation(line: 1763, column: 7, scope: !6014)
!6022 = !DILocation(line: 1764, column: 12, scope: !6019)
!6023 = !DILocation(line: 1764, column: 5, scope: !6019)
!6024 = !DILocation(line: 0, scope: !6019)
!6025 = !DILocation(line: 1767, column: 1, scope: !6014)
!6026 = distinct !DISubprogram(name: "gimple_phi_result", scope: !587, file: !587, line: 3071, type: !5340, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6027)
!6027 = !{!6028}
!6028 = !DILocalVariable(name: "gs", arg: 1, scope: !6026, file: !587, line: 3071, type: !5090)
!6029 = !DILocation(line: 0, scope: !6026)
!6030 = !DILocation(line: 3074, column: 25, scope: !6026)
!6031 = !DILocation(line: 3074, column: 3, scope: !6026)
!6032 = distinct !DISubprogram(name: "gimple_phi_arg_def", scope: !5117, file: !5117, line: 450, type: !6033, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6035)
!6033 = !DISubroutineType(types: !6034)
!6034 = !{!765, !1025, !1170}
!6035 = !{!6036, !6037, !6038}
!6036 = !DILocalVariable(name: "gs", arg: 1, scope: !6032, file: !5117, line: 450, type: !1025)
!6037 = !DILocalVariable(name: "index", arg: 2, scope: !6032, file: !5117, line: 450, type: !1170)
!6038 = !DILocalVariable(name: "pd", scope: !6032, file: !5117, line: 452, type: !5241)
!6039 = !DILocation(line: 0, scope: !6032)
!6040 = !DILocation(line: 452, column: 46, scope: !6032)
!6041 = !DILocation(line: 452, column: 26, scope: !6032)
!6042 = !DILocation(line: 453, column: 33, scope: !6032)
!6043 = !DILocation(line: 453, column: 10, scope: !6032)
!6044 = !DILocation(line: 453, column: 3, scope: !6032)
!6045 = distinct !DISubprogram(name: "bb_seq", scope: !587, file: !587, line: 237, type: !6046, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6051)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{!1015, !6048}
!6048 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !689, line: 112, baseType: !6049)
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6050, size: 64)
!6050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!6051 = !{!6052}
!6052 = !DILocalVariable(name: "bb", arg: 1, scope: !6045, file: !587, line: 237, type: !6048)
!6053 = !DILocation(line: 0, scope: !6045)
!6054 = !DILocation(line: 239, column: 17, scope: !6045)
!6055 = !DILocation(line: 239, column: 23, scope: !6045)
!6056 = !DILocation(line: 239, column: 33, scope: !6045)
!6057 = !DILocation(line: 239, column: 43, scope: !6045)
!6058 = !DILocation(line: 239, column: 36, scope: !6045)
!6059 = !DILocation(line: 239, column: 10, scope: !6045)
!6060 = !DILocation(line: 239, column: 68, scope: !6045)
!6061 = !DILocation(line: 239, column: 3, scope: !6045)
!6062 = distinct !DISubprogram(name: "gimple_seq_first", scope: !587, file: !587, line: 159, type: !6063, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6068)
!6063 = !DISubroutineType(types: !6064)
!6064 = !{!1020, !6065}
!6065 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !689, line: 67, baseType: !6066)
!6066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6067, size: 64)
!6067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!6068 = !{!6069}
!6069 = !DILocalVariable(name: "s", arg: 1, scope: !6062, file: !587, line: 159, type: !6065)
!6070 = !DILocation(line: 0, scope: !6062)
!6071 = !DILocation(line: 161, column: 10, scope: !6062)
!6072 = !DILocation(line: 161, column: 17, scope: !6062)
!6073 = !DILocation(line: 161, column: 3, scope: !6062)
!6074 = distinct !DISubprogram(name: "gimple_call_return_type", scope: !587, file: !587, line: 1966, type: !5340, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6075)
!6075 = !{!6076, !6077, !6078}
!6076 = !DILocalVariable(name: "gs", arg: 1, scope: !6074, file: !587, line: 1966, type: !5090)
!6077 = !DILocalVariable(name: "fn", scope: !6074, file: !587, line: 1968, type: !765)
!6078 = !DILocalVariable(name: "type", scope: !6074, file: !587, line: 1969, type: !765)
!6079 = !DILocation(line: 0, scope: !6074)
!6080 = !DILocation(line: 1968, column: 13, scope: !6074)
!6081 = !DILocation(line: 1969, column: 15, scope: !6074)
!6082 = !DILocation(line: 1972, column: 10, scope: !6074)
!6083 = !DILocation(line: 1976, column: 10, scope: !6074)
!6084 = !DILocation(line: 1976, column: 3, scope: !6074)
!6085 = distinct !DISubprogram(name: "gimple_call_fn", scope: !587, file: !587, line: 1911, type: !5340, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6086)
!6086 = !{!6087}
!6087 = !DILocalVariable(name: "gs", arg: 1, scope: !6085, file: !587, line: 1911, type: !5090)
!6088 = !DILocation(line: 0, scope: !6085)
!6089 = !DILocation(line: 1914, column: 10, scope: !6085)
!6090 = !DILocation(line: 1914, column: 3, scope: !6085)
!6091 = distinct !DISubprogram(name: "gimple_op", scope: !587, file: !587, line: 1631, type: !6092, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6094)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{!765, !5090, !6}
!6094 = !{!6095, !6096}
!6095 = !DILocalVariable(name: "gs", arg: 1, scope: !6091, file: !587, line: 1631, type: !5090)
!6096 = !DILocalVariable(name: "i", arg: 2, scope: !6091, file: !587, line: 1631, type: !6)
!6097 = !DILocation(line: 0, scope: !6091)
!6098 = !DILocation(line: 1633, column: 7, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6091, file: !587, line: 1633, column: 7)
!6100 = !DILocation(line: 1633, column: 7, scope: !6091)
!6101 = !DILocation(line: 1638, column: 14, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6099, file: !587, line: 1634, column: 5)
!6103 = !DILocation(line: 1638, column: 7, scope: !6102)
!6104 = !DILocation(line: 0, scope: !6099)
!6105 = !DILocation(line: 1642, column: 1, scope: !6091)
!6106 = distinct !DISubprogram(name: "gimple_ops", scope: !587, file: !587, line: 1614, type: !6107, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6109)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{!1059, !1025}
!6109 = !{!6110, !6111}
!6110 = !DILocalVariable(name: "gs", arg: 1, scope: !6106, file: !587, line: 1614, type: !1025)
!6111 = !DILocalVariable(name: "off", scope: !6106, file: !587, line: 1616, type: !1170)
!6112 = !DILocation(line: 0, scope: !6106)
!6113 = !DILocation(line: 1621, column: 28, scope: !6106)
!6114 = !DILocation(line: 1621, column: 9, scope: !6106)
!6115 = !DILocation(line: 1622, column: 3, scope: !6106)
!6116 = !DILocation(line: 1624, column: 20, scope: !6106)
!6117 = !DILocation(line: 1624, column: 32, scope: !6106)
!6118 = !DILocation(line: 1624, column: 10, scope: !6106)
!6119 = !DILocation(line: 1624, column: 3, scope: !6106)
!6120 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !587, file: !587, line: 1073, type: !6121, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6123)
!6121 = !DISubroutineType(types: !6122)
!6122 = !{!629, !1025}
!6123 = !{!6124}
!6124 = !DILocalVariable(name: "gs", arg: 1, scope: !6120, file: !587, line: 1073, type: !1025)
!6125 = !DILocation(line: 0, scope: !6120)
!6126 = !DILocation(line: 1075, column: 24, scope: !6120)
!6127 = !DILocation(line: 1075, column: 10, scope: !6120)
!6128 = !DILocation(line: 1075, column: 3, scope: !6120)
!6129 = distinct !DISubprogram(name: "gss_for_code", scope: !587, file: !587, line: 1061, type: !6130, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6132)
!6130 = !DISubroutineType(types: !6131)
!6131 = !{!629, !591}
!6132 = !{!6133}
!6133 = !DILocalVariable(name: "code", arg: 1, scope: !6129, file: !587, line: 1061, type: !591)
!6134 = !DILocation(line: 0, scope: !6129)
!6135 = !DILocation(line: 1066, column: 10, scope: !6129)
!6136 = !DILocation(line: 1066, column: 3, scope: !6129)
!6137 = distinct !DISubprogram(name: "gimple_expr_code", scope: !587, file: !587, line: 1438, type: !5988, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6138)
!6138 = !{!6139, !6140}
!6139 = !DILocalVariable(name: "stmt", arg: 1, scope: !6137, file: !587, line: 1438, type: !5090)
!6140 = !DILocalVariable(name: "code", scope: !6137, file: !587, line: 1440, type: !591)
!6141 = !DILocation(line: 0, scope: !6137)
!6142 = !DILocation(line: 1440, column: 27, scope: !6137)
!6143 = !DILocation(line: 1441, column: 29, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6137, file: !587, line: 1441, column: 7)
!6145 = !DILocation(line: 1442, column: 42, scope: !6144)
!6146 = !DILocation(line: 1442, column: 5, scope: !6144)
!6147 = !DILocation(line: 1446, column: 5, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6144, file: !587, line: 1443, column: 12)
!6149 = !DILocation(line: 1448, column: 5, scope: !6137)
!6150 = !DILocation(line: 1450, column: 1, scope: !6137)
!6151 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !587, file: !587, line: 1686, type: !6152, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6154)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{!655, !140}
!6154 = !{!6155}
!6155 = !DILocalVariable(name: "code", arg: 1, scope: !6151, file: !587, line: 1686, type: !140)
!6156 = !DILocation(line: 0, scope: !6151)
!6157 = !DILocation(line: 1688, column: 34, scope: !6151)
!6158 = !DILocation(line: 1688, column: 10, scope: !6151)
!6159 = !DILocation(line: 1688, column: 3, scope: !6151)
!6160 = distinct !DISubprogram(name: "ei_cond", scope: !349, file: !349, line: 771, type: !6161, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6164)
!6161 = !DISubroutineType(types: !6162)
!6162 = !{!663, !2146, !6163}
!6163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!6164 = !{!6165, !6166}
!6165 = !DILocalVariable(name: "ei", arg: 1, scope: !6160, file: !349, line: 771, type: !2146)
!6166 = !DILocalVariable(name: "p", arg: 2, scope: !6160, file: !349, line: 771, type: !6163)
!6167 = !DILocation(line: 0, scope: !6160)
!6168 = !DILocation(line: 773, column: 8, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6160, file: !349, line: 773, column: 7)
!6170 = !DILocation(line: 773, column: 7, scope: !6160)
!6171 = !DILocation(line: 775, column: 12, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6169, file: !349, line: 774, column: 5)
!6173 = !DILocation(line: 776, column: 7, scope: !6172)
!6174 = !DILocation(line: 781, column: 7, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6169, file: !349, line: 779, column: 5)
!6176 = !DILocation(line: 0, scope: !6169)
!6177 = !DILocation(line: 783, column: 1, scope: !6160)
!6178 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !349, file: !349, line: 281, type: !6179, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6183)
!6179 = !DISubroutineType(types: !6180)
!6180 = !{!1477, !6181, !6}
!6181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6182, size: 64)
!6182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1485)
!6183 = !{!6184, !6185}
!6184 = !DILocalVariable(name: "vec_", arg: 1, scope: !6178, file: !349, line: 281, type: !6181)
!6185 = !DILocalVariable(name: "ix_", arg: 2, scope: !6178, file: !349, line: 281, type: !6)
!6186 = !DILocation(line: 0, scope: !6178)
!6187 = !DILocation(line: 281, column: 1, scope: !6178)
!6188 = distinct !DISubprogram(name: "compute_antic_aux", scope: !3, file: !3, line: 2233, type: !6189, scopeLine: 2234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6191)
!6189 = !DISubroutineType(types: !6190)
!6190 = !{!663, !1477, !663}
!6191 = !{!6192, !6193, !6194, !6195, !6196, !6197, !6198, !6199, !6200, !6201, !6202, !6206, !6208, !6209, !6210, !6211, !6217}
!6192 = !DILocalVariable(name: "block", arg: 1, scope: !6188, file: !3, line: 2233, type: !1477)
!6193 = !DILocalVariable(name: "block_has_abnormal_pred_edge", arg: 2, scope: !6188, file: !3, line: 2233, type: !663)
!6194 = !DILocalVariable(name: "changed", scope: !6188, file: !3, line: 2235, type: !663)
!6195 = !DILocalVariable(name: "S", scope: !6188, file: !3, line: 2236, type: !683)
!6196 = !DILocalVariable(name: "old", scope: !6188, file: !3, line: 2236, type: !683)
!6197 = !DILocalVariable(name: "ANTIC_OUT", scope: !6188, file: !3, line: 2236, type: !683)
!6198 = !DILocalVariable(name: "bi", scope: !6188, file: !3, line: 2237, type: !3046)
!6199 = !DILocalVariable(name: "bii", scope: !6188, file: !3, line: 2238, type: !6)
!6200 = !DILocalVariable(name: "e", scope: !6188, file: !3, line: 2239, type: !1005)
!6201 = !DILocalVariable(name: "ei", scope: !6188, file: !3, line: 2240, type: !2146)
!6202 = !DILocalVariable(name: "succ_bb", scope: !6203, file: !3, line: 2260, type: !1477)
!6203 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 2259, column: 5)
!6204 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 2258, column: 12)
!6205 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 2254, column: 7)
!6206 = !DILocalVariable(name: "worklist", scope: !6207, file: !3, line: 2291, type: !2166)
!6207 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 2290, column: 5)
!6208 = !DILocalVariable(name: "i", scope: !6207, file: !3, line: 2292, type: !1170)
!6209 = !DILocalVariable(name: "bprime", scope: !6207, file: !3, line: 2293, type: !1477)
!6210 = !DILocalVariable(name: "first", scope: !6207, file: !3, line: 2293, type: !1477)
!6211 = !DILocalVariable(name: "tmp", scope: !6212, file: !3, line: 2325, type: !683)
!6212 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 2324, column: 6)
!6213 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 2323, column: 8)
!6214 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 2322, column: 2)
!6215 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 2321, column: 7)
!6216 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 2321, column: 7)
!6217 = !DILabel(scope: !6188, name: "maybe_dump_sets", file: !3, line: 2362)
!6218 = !DILocation(line: 0, scope: !6188)
!6219 = !DILocation(line: 2237, column: 3, scope: !6188)
!6220 = !DILocation(line: 2238, column: 3, scope: !6188)
!6221 = !DILocation(line: 2239, column: 3, scope: !6188)
!6222 = !DILocation(line: 2240, column: 3, scope: !6188)
!6223 = !DILocation(line: 2243, column: 3, scope: !6188)
!6224 = !DILocation(line: 2243, column: 22, scope: !6188)
!6225 = !DILocation(line: 2247, column: 7, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 2247, column: 7)
!6227 = !DILocation(line: 2247, column: 7, scope: !6188)
!6228 = !DILocation(line: 2250, column: 9, scope: !6188)
!6229 = !DILocation(line: 2251, column: 15, scope: !6188)
!6230 = !DILocation(line: 2254, column: 7, scope: !6205)
!6231 = !DILocation(line: 2254, column: 33, scope: !6205)
!6232 = !DILocation(line: 2254, column: 7, scope: !6188)
!6233 = !DILocation(line: 2258, column: 12, scope: !6204)
!6234 = !DILocation(line: 2258, column: 12, scope: !6205)
!6235 = !DILocation(line: 2260, column: 29, scope: !6203)
!6236 = !DILocation(line: 0, scope: !6203)
!6237 = !DILocation(line: 2279, column: 53, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 2279, column: 11)
!6239 = !DILocation(line: 2279, column: 12, scope: !6238)
!6240 = !DILocation(line: 0, scope: !6204)
!6241 = !DILocation(line: 2291, column: 7, scope: !6207)
!6242 = !DILocation(line: 2293, column: 7, scope: !6207)
!6243 = !DILocation(line: 0, scope: !6207)
!6244 = !DILocation(line: 2295, column: 18, scope: !6207)
!6245 = !DILocation(line: 2295, column: 16, scope: !6207)
!6246 = !DILocation(line: 2296, column: 7, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 2296, column: 7)
!6248 = !DILocation(line: 0, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 2296, column: 7)
!6250 = !DILocation(line: 2293, column: 27, scope: !6207)
!6251 = !DILocation(line: 2296, column: 7, scope: !6249)
!6252 = !DILocation(line: 2299, column: 8, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 2298, column: 8)
!6254 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 2297, column: 2)
!6255 = !DILocation(line: 2301, column: 13, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 2301, column: 13)
!6257 = !DILocation(line: 0, scope: !6256)
!6258 = !DILocation(line: 2299, column: 11, scope: !6253)
!6259 = !DILocation(line: 2298, column: 8, scope: !6254)
!6260 = !DILocation(line: 2300, column: 6, scope: !6253)
!6261 = !DILocation(line: 2301, column: 13, scope: !6253)
!6262 = !DILocation(line: 2302, column: 6, scope: !6256)
!6263 = distinct !{!6263, !6246, !6264}
!6264 = !DILocation(line: 2303, column: 2, scope: !6247)
!6265 = !DILocation(line: 2306, column: 11, scope: !6207)
!6266 = !DILocation(line: 2308, column: 13, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6268, file: !3, line: 2307, column: 2)
!6268 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 2306, column: 11)
!6269 = !DILocation(line: 2308, column: 36, scope: !6267)
!6270 = !DILocation(line: 2308, column: 4, scope: !6267)
!6271 = !DILocation(line: 2309, column: 4, scope: !6267)
!6272 = !DILocation(line: 2309, column: 23, scope: !6267)
!6273 = !DILocation(line: 2310, column: 4, scope: !6267)
!6274 = !DILocation(line: 2310, column: 24, scope: !6267)
!6275 = !DILocation(line: 2312, column: 4, scope: !6267)
!6276 = !DILocation(line: 2313, column: 4, scope: !6267)
!6277 = !DILocation(line: 2316, column: 32, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 2316, column: 11)
!6279 = !DILocation(line: 2316, column: 12, scope: !6278)
!6280 = !DILocation(line: 0, scope: !6278)
!6281 = !DILocation(line: 2316, column: 11, scope: !6207)
!6282 = !DILocation(line: 2317, column: 2, scope: !6278)
!6283 = !DILocation(line: 2319, column: 2, scope: !6278)
!6284 = !DILocation(line: 2321, column: 12, scope: !6216)
!6285 = !DILocation(line: 0, scope: !6216)
!6286 = !DILocation(line: 2321, column: 19, scope: !6215)
!6287 = !DILocation(line: 2321, column: 7, scope: !6216)
!6288 = !DILocation(line: 2323, column: 40, scope: !6213)
!6289 = !DILocation(line: 2323, column: 29, scope: !6213)
!6290 = !DILocation(line: 2323, column: 9, scope: !6213)
!6291 = !DILocation(line: 2323, column: 8, scope: !6214)
!6292 = !DILocation(line: 2325, column: 27, scope: !6212)
!6293 = !DILocation(line: 0, scope: !6212)
!6294 = !DILocation(line: 2326, column: 32, scope: !6212)
!6295 = !DILocation(line: 2326, column: 8, scope: !6212)
!6296 = !DILocation(line: 2327, column: 8, scope: !6212)
!6297 = !DILocation(line: 2328, column: 8, scope: !6212)
!6298 = !DILocation(line: 2329, column: 6, scope: !6212)
!6299 = !DILocation(line: 2331, column: 33, scope: !6213)
!6300 = !DILocation(line: 2331, column: 6, scope: !6213)
!6301 = !DILocation(line: 2321, column: 68, scope: !6215)
!6302 = !DILocation(line: 2321, column: 7, scope: !6215)
!6303 = distinct !{!6303, !6287, !6304}
!6304 = !DILocation(line: 2332, column: 2, scope: !6216)
!6305 = !DILocation(line: 2333, column: 7, scope: !6207)
!6306 = !DILocation(line: 2334, column: 5, scope: !6204)
!6307 = !DILocation(line: 2235, column: 8, scope: !6188)
!6308 = !DILocation(line: 2337, column: 39, scope: !6188)
!6309 = !DILocation(line: 2337, column: 7, scope: !6188)
!6310 = !DILocation(line: 2340, column: 43, scope: !6188)
!6311 = !DILocation(line: 2341, column: 8, scope: !6188)
!6312 = !DILocation(line: 2340, column: 22, scope: !6188)
!6313 = !DILocation(line: 2340, column: 3, scope: !6188)
!6314 = !DILocation(line: 2340, column: 20, scope: !6188)
!6315 = !DILocation(line: 2345, column: 3, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 2345, column: 3)
!6317 = !DILocation(line: 2345, column: 3, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 2345, column: 3)
!6319 = !DILocation(line: 2347, column: 26, scope: !6318)
!6320 = !DILocation(line: 2347, column: 7, scope: !6318)
!6321 = !DILocation(line: 2346, column: 5, scope: !6318)
!6322 = distinct !{!6322, !6315, !6323}
!6323 = !DILocation(line: 2347, column: 30, scope: !6316)
!6324 = !DILocation(line: 2349, column: 3, scope: !6188)
!6325 = !DILocation(line: 2352, column: 13, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 2352, column: 7)
!6327 = !DILocation(line: 2352, column: 8, scope: !6326)
!6328 = !DILocation(line: 2352, column: 25, scope: !6326)
!6329 = !DILocation(line: 2352, column: 52, scope: !6326)
!6330 = !DILocation(line: 2352, column: 29, scope: !6326)
!6331 = !DILocation(line: 2352, column: 7, scope: !6188)
!6332 = !DILocation(line: 2355, column: 16, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 2353, column: 5)
!6334 = !DILocation(line: 2355, column: 39, scope: !6333)
!6335 = !DILocation(line: 2355, column: 7, scope: !6333)
!6336 = !DILocation(line: 2356, column: 7, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 2356, column: 7)
!6338 = !DILocation(line: 0, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 2356, column: 7)
!6340 = !DILocation(line: 2356, column: 7, scope: !6339)
!6341 = !DILocation(line: 2357, column: 11, scope: !6339)
!6342 = !DILocation(line: 2357, column: 27, scope: !6339)
!6343 = !DILocation(line: 2357, column: 30, scope: !6339)
!6344 = !DILocation(line: 2357, column: 35, scope: !6339)
!6345 = !DILocation(line: 2357, column: 2, scope: !6339)
!6346 = distinct !{!6346, !6336, !6347}
!6347 = !DILocation(line: 2357, column: 40, scope: !6337)
!6348 = !DILocation(line: 2360, column: 16, scope: !6326)
!6349 = !DILocation(line: 2360, column: 39, scope: !6326)
!6350 = !DILocation(line: 2360, column: 5, scope: !6326)
!6351 = !DILocation(line: 2363, column: 7, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 2363, column: 7)
!6353 = !DILocation(line: 2362, column: 2, scope: !6188)
!6354 = !DILocation(line: 2363, column: 17, scope: !6352)
!6355 = !DILocation(line: 2363, column: 21, scope: !6352)
!6356 = !DILocation(line: 2363, column: 32, scope: !6352)
!6357 = !DILocation(line: 2363, column: 7, scope: !6188)
!6358 = !DILocation(line: 2365, column: 12, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 2365, column: 11)
!6360 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 2364, column: 5)
!6361 = !DILocation(line: 2365, column: 32, scope: !6359)
!6362 = !DILocation(line: 2365, column: 35, scope: !6359)
!6363 = !DILocation(line: 2365, column: 11, scope: !6360)
!6364 = !DILocation(line: 2367, column: 8, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 2367, column: 8)
!6366 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 2366, column: 2)
!6367 = !DILocation(line: 2367, column: 8, scope: !6366)
!6368 = !DILocation(line: 2368, column: 66, scope: !6365)
!6369 = !DILocation(line: 2368, column: 6, scope: !6365)
!6370 = !DILocation(line: 2370, column: 22, scope: !6366)
!6371 = !DILocation(line: 2370, column: 33, scope: !6366)
!6372 = !DILocation(line: 2371, column: 15, scope: !6366)
!6373 = !DILocation(line: 2370, column: 4, scope: !6366)
!6374 = !DILocation(line: 2373, column: 8, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 2373, column: 8)
!6376 = !DILocation(line: 2373, column: 8, scope: !6366)
!6377 = !DILocation(line: 2374, column: 24, scope: !6375)
!6378 = !DILocation(line: 2374, column: 50, scope: !6375)
!6379 = !DILocation(line: 2374, column: 6, scope: !6375)
!6380 = !DILocation(line: 2380, column: 13, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 2377, column: 2)
!6382 = !DILocation(line: 2378, column: 4, scope: !6381)
!6383 = !DILocation(line: 2383, column: 7, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 2383, column: 7)
!6385 = !DILocation(line: 2383, column: 7, scope: !6188)
!6386 = !DILocation(line: 2384, column: 5, scope: !6384)
!6387 = !DILocation(line: 2385, column: 7, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 2385, column: 7)
!6389 = !DILocation(line: 2385, column: 7, scope: !6188)
!6390 = !DILocation(line: 2386, column: 5, scope: !6388)
!6391 = !DILocation(line: 2387, column: 7, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 2387, column: 7)
!6393 = !DILocation(line: 2387, column: 7, scope: !6188)
!6394 = !DILocation(line: 2388, column: 5, scope: !6392)
!6395 = !DILocation(line: 2390, column: 1, scope: !6188)
!6396 = distinct !DISubprogram(name: "compute_partial_antic_aux", scope: !3, file: !3, line: 2405, type: !6189, scopeLine: 2407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6397)
!6397 = !{!6398, !6399, !6400, !6401, !6402, !6403, !6404, !6405, !6406, !6410, !6412, !6413, !6414, !6420, !6421, !6424}
!6398 = !DILocalVariable(name: "block", arg: 1, scope: !6396, file: !3, line: 2405, type: !1477)
!6399 = !DILocalVariable(name: "block_has_abnormal_pred_edge", arg: 2, scope: !6396, file: !3, line: 2406, type: !663)
!6400 = !DILocalVariable(name: "changed", scope: !6396, file: !3, line: 2408, type: !663)
!6401 = !DILocalVariable(name: "old_PA_IN", scope: !6396, file: !3, line: 2409, type: !683)
!6402 = !DILocalVariable(name: "PA_OUT", scope: !6396, file: !3, line: 2410, type: !683)
!6403 = !DILocalVariable(name: "e", scope: !6396, file: !3, line: 2411, type: !1005)
!6404 = !DILocalVariable(name: "ei", scope: !6396, file: !3, line: 2412, type: !2146)
!6405 = !DILocalVariable(name: "max_pa", scope: !6396, file: !3, line: 2413, type: !706)
!6406 = !DILocalVariable(name: "succ", scope: !6407, file: !3, line: 2444, type: !1477)
!6407 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 2443, column: 5)
!6408 = distinct !DILexicalBlock(scope: !6409, file: !3, line: 2442, column: 12)
!6409 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 2434, column: 7)
!6410 = !DILocalVariable(name: "worklist", scope: !6411, file: !3, line: 2452, type: !2166)
!6411 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 2451, column: 5)
!6412 = !DILocalVariable(name: "i", scope: !6411, file: !3, line: 2453, type: !1170)
!6413 = !DILocalVariable(name: "bprime", scope: !6411, file: !3, line: 2454, type: !1477)
!6414 = !DILocalVariable(name: "i", scope: !6415, file: !3, line: 2467, type: !6)
!6415 = distinct !DILexicalBlock(scope: !6416, file: !3, line: 2466, column: 6)
!6416 = distinct !DILexicalBlock(scope: !6417, file: !3, line: 2465, column: 4)
!6417 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 2465, column: 4)
!6418 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 2464, column: 2)
!6419 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2463, column: 11)
!6420 = !DILocalVariable(name: "bi", scope: !6415, file: !3, line: 2468, type: !3046)
!6421 = !DILocalVariable(name: "pa_in", scope: !6422, file: !3, line: 2475, type: !683)
!6422 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 2474, column: 3)
!6423 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 2473, column: 12)
!6424 = !DILabel(scope: !6396, name: "maybe_dump_sets", file: !3, line: 2515)
!6425 = !DILocation(line: 0, scope: !6396)
!6426 = !DILocation(line: 2411, column: 3, scope: !6396)
!6427 = !DILocation(line: 2412, column: 3, scope: !6396)
!6428 = !DILocation(line: 2413, column: 26, scope: !6396)
!6429 = !DILocation(line: 2419, column: 7, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 2419, column: 7)
!6431 = !DILocation(line: 2419, column: 7, scope: !6396)
!6432 = !DILocation(line: 2425, column: 7, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 2425, column: 7)
!6434 = !DILocation(line: 2426, column: 7, scope: !6433)
!6435 = !DILocation(line: 2426, column: 10, scope: !6433)
!6436 = !DILocation(line: 2427, column: 7, scope: !6433)
!6437 = !DILocation(line: 2427, column: 29, scope: !6433)
!6438 = !DILocation(line: 2427, column: 58, scope: !6433)
!6439 = !DILocation(line: 2427, column: 10, scope: !6433)
!6440 = !DILocation(line: 2427, column: 66, scope: !6433)
!6441 = !DILocation(line: 2425, column: 7, scope: !6396)
!6442 = !DILocation(line: 2430, column: 15, scope: !6396)
!6443 = !DILocation(line: 2431, column: 12, scope: !6396)
!6444 = !DILocation(line: 2434, column: 7, scope: !6409)
!6445 = !DILocation(line: 2434, column: 33, scope: !6409)
!6446 = !DILocation(line: 2434, column: 7, scope: !6396)
!6447 = !DILocation(line: 2442, column: 12, scope: !6408)
!6448 = !DILocation(line: 2442, column: 12, scope: !6409)
!6449 = !DILocation(line: 2444, column: 26, scope: !6407)
!6450 = !DILocation(line: 0, scope: !6407)
!6451 = !DILocation(line: 2445, column: 13, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6407, file: !3, line: 2445, column: 11)
!6453 = !DILocation(line: 2445, column: 39, scope: !6452)
!6454 = !DILocation(line: 2445, column: 45, scope: !6452)
!6455 = !DILocation(line: 2445, column: 11, scope: !6407)
!6456 = !DILocation(line: 2446, column: 29, scope: !6452)
!6457 = !DILocation(line: 2446, column: 2, scope: !6452)
!6458 = !DILocation(line: 2452, column: 7, scope: !6411)
!6459 = !DILocation(line: 2454, column: 7, scope: !6411)
!6460 = !DILocation(line: 2456, column: 18, scope: !6411)
!6461 = !DILocation(line: 0, scope: !6411)
!6462 = !DILocation(line: 2456, column: 16, scope: !6411)
!6463 = !DILocation(line: 2457, column: 7, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2457, column: 7)
!6465 = !DILocation(line: 0, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 2457, column: 7)
!6467 = !DILocation(line: 2457, column: 7, scope: !6466)
!6468 = !DILocation(line: 2459, column: 8, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 2459, column: 8)
!6470 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 2458, column: 2)
!6471 = !DILocation(line: 2459, column: 11, scope: !6469)
!6472 = !DILocation(line: 2459, column: 17, scope: !6469)
!6473 = !DILocation(line: 2459, column: 8, scope: !6470)
!6474 = !DILocation(line: 2461, column: 4, scope: !6470)
!6475 = !DILocation(line: 2462, column: 2, scope: !6470)
!6476 = distinct !{!6476, !6463, !6477}
!6477 = !DILocation(line: 2462, column: 2, scope: !6464)
!6478 = !DILocation(line: 2463, column: 11, scope: !6419)
!6479 = !DILocation(line: 2463, column: 46, scope: !6419)
!6480 = !DILocation(line: 2463, column: 11, scope: !6411)
!6481 = !DILocation(line: 0, scope: !6415)
!6482 = !DILocation(line: 2465, column: 4, scope: !6417)
!6483 = !DILocation(line: 2465, column: 16, scope: !6416)
!6484 = !DILocation(line: 0, scope: !6417)
!6485 = !DILocation(line: 2467, column: 8, scope: !6415)
!6486 = !DILocation(line: 2468, column: 8, scope: !6415)
!6487 = !DILocation(line: 2470, column: 8, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 2470, column: 8)
!6489 = !DILocation(line: 2470, column: 8, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 2470, column: 8)
!6491 = !DILocation(line: 2472, column: 31, scope: !6490)
!6492 = !DILocation(line: 2472, column: 12, scope: !6490)
!6493 = !DILocation(line: 2471, column: 3, scope: !6490)
!6494 = distinct !{!6494, !6487, !6495}
!6495 = !DILocation(line: 2472, column: 33, scope: !6488)
!6496 = !DILocation(line: 2473, column: 44, scope: !6423)
!6497 = !DILocation(line: 2473, column: 33, scope: !6423)
!6498 = !DILocation(line: 2473, column: 13, scope: !6423)
!6499 = !DILocation(line: 2473, column: 12, scope: !6415)
!6500 = !DILocation(line: 2475, column: 26, scope: !6422)
!6501 = !DILocation(line: 0, scope: !6422)
!6502 = !DILocation(line: 2476, column: 31, scope: !6422)
!6503 = !DILocation(line: 2476, column: 5, scope: !6422)
!6504 = !DILocation(line: 2477, column: 5, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 2477, column: 5)
!6506 = !DILocation(line: 2477, column: 5, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2477, column: 5)
!6508 = !DILocation(line: 2479, column: 28, scope: !6507)
!6509 = !DILocation(line: 2479, column: 9, scope: !6507)
!6510 = !DILocation(line: 2478, column: 7, scope: !6507)
!6511 = distinct !{!6511, !6504, !6512}
!6512 = !DILocation(line: 2479, column: 30, scope: !6505)
!6513 = !DILocation(line: 2480, column: 5, scope: !6422)
!6514 = !DILocation(line: 2481, column: 3, scope: !6422)
!6515 = !DILocation(line: 2483, column: 3, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 2483, column: 3)
!6517 = !DILocation(line: 2483, column: 3, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 2483, column: 3)
!6519 = !DILocation(line: 2485, column: 26, scope: !6518)
!6520 = !DILocation(line: 2485, column: 7, scope: !6518)
!6521 = !DILocation(line: 2484, column: 5, scope: !6518)
!6522 = distinct !{!6522, !6515, !6523}
!6523 = !DILocation(line: 2485, column: 28, scope: !6516)
!6524 = !DILocation(line: 2486, column: 6, scope: !6416)
!6525 = !DILocation(line: 2465, column: 65, scope: !6416)
!6526 = !DILocation(line: 2465, column: 4, scope: !6416)
!6527 = distinct !{!6527, !6482, !6528}
!6528 = !DILocation(line: 2486, column: 6, scope: !6417)
!6529 = !DILocation(line: 2488, column: 7, scope: !6411)
!6530 = !DILocation(line: 2489, column: 5, scope: !6408)
!6531 = !DILocation(line: 2493, column: 48, scope: !6396)
!6532 = !DILocation(line: 2493, column: 19, scope: !6396)
!6533 = !DILocation(line: 2493, column: 3, scope: !6396)
!6534 = !DILocation(line: 2493, column: 17, scope: !6396)
!6535 = !DILocation(line: 2497, column: 20, scope: !6396)
!6536 = !DILocation(line: 2497, column: 35, scope: !6396)
!6537 = !DILocation(line: 2497, column: 43, scope: !6396)
!6538 = !DILocation(line: 2497, column: 60, scope: !6396)
!6539 = !DILocation(line: 2497, column: 3, scope: !6396)
!6540 = !DILocation(line: 2498, column: 20, scope: !6396)
!6541 = !DILocation(line: 2498, column: 35, scope: !6396)
!6542 = !DILocation(line: 2498, column: 48, scope: !6396)
!6543 = !DILocation(line: 2498, column: 65, scope: !6396)
!6544 = !DILocation(line: 2498, column: 3, scope: !6396)
!6545 = !DILocation(line: 2501, column: 31, scope: !6396)
!6546 = !DILocation(line: 2501, column: 46, scope: !6396)
!6547 = !DILocation(line: 2501, column: 3, scope: !6396)
!6548 = !DILocation(line: 2503, column: 20, scope: !6396)
!6549 = !DILocation(line: 2503, column: 35, scope: !6396)
!6550 = !DILocation(line: 2503, column: 3, scope: !6396)
!6551 = !DILocation(line: 2505, column: 37, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 2505, column: 7)
!6553 = !DILocation(line: 2505, column: 8, scope: !6552)
!6554 = !DILocation(line: 0, scope: !6552)
!6555 = !DILocation(line: 2505, column: 7, scope: !6396)
!6556 = !DILocation(line: 2508, column: 7, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 2506, column: 5)
!6558 = !DILocation(line: 2509, column: 7, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 2509, column: 7)
!6560 = !DILocation(line: 0, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 2509, column: 7)
!6562 = !DILocation(line: 2509, column: 7, scope: !6561)
!6563 = !DILocation(line: 2510, column: 11, scope: !6561)
!6564 = !DILocation(line: 2510, column: 27, scope: !6561)
!6565 = !DILocation(line: 2510, column: 30, scope: !6561)
!6566 = !DILocation(line: 2510, column: 35, scope: !6561)
!6567 = !DILocation(line: 2510, column: 2, scope: !6561)
!6568 = distinct !{!6568, !6558, !6569}
!6569 = !DILocation(line: 2510, column: 40, scope: !6559)
!6570 = !DILocation(line: 2513, column: 5, scope: !6552)
!6571 = !DILocation(line: 2516, column: 7, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 2516, column: 7)
!6573 = !DILocation(line: 2408, column: 8, scope: !6396)
!6574 = !DILocation(line: 2515, column: 2, scope: !6396)
!6575 = !DILocation(line: 2516, column: 17, scope: !6572)
!6576 = !DILocation(line: 2516, column: 21, scope: !6572)
!6577 = !DILocation(line: 2516, column: 32, scope: !6572)
!6578 = !DILocation(line: 2516, column: 7, scope: !6396)
!6579 = !DILocation(line: 2518, column: 11, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 2518, column: 11)
!6581 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 2517, column: 5)
!6582 = !DILocation(line: 2518, column: 11, scope: !6581)
!6583 = !DILocation(line: 2519, column: 56, scope: !6580)
!6584 = !DILocation(line: 2519, column: 2, scope: !6580)
!6585 = !DILocation(line: 2521, column: 25, scope: !6581)
!6586 = !DILocation(line: 2521, column: 36, scope: !6581)
!6587 = !DILocation(line: 2521, column: 67, scope: !6581)
!6588 = !DILocation(line: 2521, column: 7, scope: !6581)
!6589 = !DILocation(line: 2522, column: 5, scope: !6581)
!6590 = !DILocation(line: 2523, column: 7, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 2523, column: 7)
!6592 = !DILocation(line: 2523, column: 7, scope: !6396)
!6593 = !DILocation(line: 2524, column: 5, scope: !6591)
!6594 = !DILocation(line: 2525, column: 7, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 2525, column: 7)
!6596 = !DILocation(line: 2525, column: 7, scope: !6396)
!6597 = !DILocation(line: 2526, column: 5, scope: !6595)
!6598 = !DILocation(line: 2528, column: 1, scope: !6396)
!6599 = !DILocation(line: 2527, column: 3, scope: !6396)
!6600 = distinct !DISubprogram(name: "ei_end_p", scope: !349, file: !349, line: 721, type: !5616, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6601)
!6601 = !{!6602}
!6602 = !DILocalVariable(name: "i", arg: 1, scope: !6600, file: !349, line: 721, type: !2146)
!6603 = !DILocation(line: 723, column: 22, scope: !6600)
!6604 = !DILocation(line: 723, column: 19, scope: !6600)
!6605 = !DILocation(line: 723, column: 10, scope: !6600)
!6606 = !DILocation(line: 723, column: 3, scope: !6600)
!6607 = distinct !DISubprogram(name: "single_succ_p", scope: !349, file: !349, line: 626, type: !6608, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6610)
!6608 = !DISubroutineType(types: !6609)
!6609 = !{!663, !6048}
!6610 = !{!6611}
!6611 = !DILocalVariable(name: "bb", arg: 1, scope: !6607, file: !349, line: 626, type: !6048)
!6612 = !DILocation(line: 0, scope: !6607)
!6613 = !DILocation(line: 628, column: 10, scope: !6607)
!6614 = !DILocation(line: 628, column: 33, scope: !6607)
!6615 = !DILocation(line: 628, column: 3, scope: !6607)
!6616 = distinct !DISubprogram(name: "single_succ", scope: !349, file: !349, line: 663, type: !6617, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6619)
!6617 = !DISubroutineType(types: !6618)
!6618 = !{!1477, !6048}
!6619 = !{!6620}
!6620 = !DILocalVariable(name: "bb", arg: 1, scope: !6616, file: !349, line: 663, type: !6048)
!6621 = !DILocation(line: 0, scope: !6616)
!6622 = !DILocation(line: 665, column: 10, scope: !6616)
!6623 = !DILocation(line: 665, column: 33, scope: !6616)
!6624 = !DILocation(line: 665, column: 3, scope: !6616)
!6625 = distinct !DISubprogram(name: "defer_or_phi_translate_block", scope: !3, file: !3, line: 2207, type: !6626, scopeLine: 2209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6628)
!6626 = !DISubroutineType(types: !6627)
!6627 = !{!663, !683, !683, !1477, !1477}
!6628 = !{!6629, !6630, !6631, !6632}
!6629 = !DILocalVariable(name: "dest", arg: 1, scope: !6625, file: !3, line: 2207, type: !683)
!6630 = !DILocalVariable(name: "source", arg: 2, scope: !6625, file: !3, line: 2207, type: !683)
!6631 = !DILocalVariable(name: "block", arg: 3, scope: !6625, file: !3, line: 2208, type: !1477)
!6632 = !DILocalVariable(name: "phiblock", arg: 4, scope: !6625, file: !3, line: 2208, type: !1477)
!6633 = !DILocation(line: 0, scope: !6625)
!6634 = !DILocation(line: 2210, column: 8, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 2210, column: 7)
!6636 = !DILocation(line: 2210, column: 7, scope: !6625)
!6637 = !DILocation(line: 2212, column: 16, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 2211, column: 5)
!6639 = !DILocation(line: 2212, column: 39, scope: !6638)
!6640 = !DILocation(line: 2212, column: 7, scope: !6638)
!6641 = !DILocation(line: 2213, column: 7, scope: !6638)
!6642 = !DILocation(line: 2213, column: 26, scope: !6638)
!6643 = !DILocation(line: 2214, column: 7, scope: !6638)
!6644 = !DILocation(line: 2214, column: 27, scope: !6638)
!6645 = !DILocation(line: 2215, column: 7, scope: !6638)
!6646 = !DILocation(line: 2218, column: 5, scope: !6635)
!6647 = !DILocation(line: 2219, column: 3, scope: !6625)
!6648 = !DILocation(line: 2220, column: 1, scope: !6625)
!6649 = distinct !DISubprogram(name: "VEC_basic_block_heap_alloc", scope: !349, file: !349, line: 283, type: !6650, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6652)
!6650 = !DISubroutineType(types: !6651)
!6651 = !{!2166, !664}
!6652 = !{!6653}
!6653 = !DILocalVariable(name: "alloc_", arg: 1, scope: !6649, file: !349, line: 283, type: !664)
!6654 = !DILocation(line: 0, scope: !6649)
!6655 = !DILocation(line: 283, column: 1, scope: !6649)
!6656 = distinct !DISubprogram(name: "VEC_basic_block_base_quick_push", scope: !349, file: !349, line: 281, type: !6657, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6660)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{!2163, !6659, !1477}
!6659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!6660 = !{!6661, !6662, !6663}
!6661 = !DILocalVariable(name: "vec_", arg: 1, scope: !6656, file: !349, line: 281, type: !6659)
!6662 = !DILocalVariable(name: "obj_", arg: 2, scope: !6656, file: !349, line: 281, type: !1477)
!6663 = !DILocalVariable(name: "slot_", scope: !6656, file: !349, line: 281, type: !2163)
!6664 = !DILocation(line: 0, scope: !6656)
!6665 = !DILocation(line: 281, column: 1, scope: !6656)
!6666 = distinct !DISubprogram(name: "VEC_basic_block_heap_free", scope: !349, file: !349, line: 283, type: !6667, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6670)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{null, !6669}
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!6670 = !{!6671}
!6671 = !DILocalVariable(name: "vec_", arg: 1, scope: !6666, file: !349, line: 283, type: !6669)
!6672 = !DILocation(line: 0, scope: !6666)
!6673 = !DILocation(line: 283, column: 1, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6666, file: !349, line: 283, column: 1)
!6675 = !DILocation(line: 283, column: 1, scope: !6666)
!6676 = distinct !DISubprogram(name: "gimple_seq_empty_p", scope: !587, file: !587, line: 215, type: !6677, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6679)
!6677 = !DISubroutineType(types: !6678)
!6678 = !{!663, !6065}
!6679 = !{!6680}
!6680 = !DILocalVariable(name: "s", arg: 1, scope: !6676, file: !587, line: 215, type: !6065)
!6681 = !DILocation(line: 0, scope: !6676)
!6682 = !DILocation(line: 217, column: 12, scope: !6676)
!6683 = !DILocation(line: 217, column: 20, scope: !6676)
!6684 = !DILocation(line: 217, column: 26, scope: !6676)
!6685 = !DILocation(line: 217, column: 32, scope: !6676)
!6686 = !DILocation(line: 217, column: 3, scope: !6676)
!6687 = distinct !DISubprogram(name: "phi_nodes", scope: !5117, file: !5117, line: 508, type: !6046, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6688)
!6688 = !{!6689}
!6689 = !DILocalVariable(name: "bb", arg: 1, scope: !6687, file: !5117, line: 508, type: !6048)
!6690 = !DILocation(line: 0, scope: !6687)
!6691 = !DILocation(line: 510, column: 3, scope: !6687)
!6692 = !DILocation(line: 511, column: 15, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6687, file: !5117, line: 511, column: 7)
!6694 = !DILocation(line: 511, column: 8, scope: !6693)
!6695 = !DILocation(line: 511, column: 7, scope: !6687)
!6696 = !DILocation(line: 513, column: 25, scope: !6687)
!6697 = !DILocation(line: 513, column: 3, scope: !6687)
!6698 = !DILocation(line: 514, column: 1, scope: !6687)
!6699 = distinct !DISubprogram(name: "phi_translate_set", scope: !3, file: !3, line: 1856, type: !6700, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6702)
!6700 = !DISubroutineType(types: !6701)
!6701 = !{null, !683, !683, !1477, !1477}
!6702 = !{!6703, !6704, !6705, !6706, !6707, !6708, !6709, !6710}
!6703 = !DILocalVariable(name: "dest", arg: 1, scope: !6699, file: !3, line: 1856, type: !683)
!6704 = !DILocalVariable(name: "set", arg: 2, scope: !6699, file: !3, line: 1856, type: !683)
!6705 = !DILocalVariable(name: "pred", arg: 3, scope: !6699, file: !3, line: 1856, type: !1477)
!6706 = !DILocalVariable(name: "phiblock", arg: 4, scope: !6699, file: !3, line: 1857, type: !1477)
!6707 = !DILocalVariable(name: "exprs", scope: !6699, file: !3, line: 1859, type: !2099)
!6708 = !DILocalVariable(name: "expr", scope: !6699, file: !3, line: 1860, type: !754)
!6709 = !DILocalVariable(name: "i", scope: !6699, file: !3, line: 1861, type: !664)
!6710 = !DILocalVariable(name: "translated", scope: !6711, file: !3, line: 1872, type: !754)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 1871, column: 5)
!6712 = distinct !DILexicalBlock(scope: !6713, file: !3, line: 1870, column: 3)
!6713 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 1870, column: 3)
!6714 = !DILocation(line: 0, scope: !6699)
!6715 = !DILocation(line: 1859, column: 3, scope: !6699)
!6716 = !DILocation(line: 1860, column: 3, scope: !6699)
!6717 = !DILocation(line: 1863, column: 27, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 1863, column: 7)
!6719 = !DILocation(line: 1863, column: 7, scope: !6718)
!6720 = !DILocation(line: 1863, column: 7, scope: !6699)
!6721 = !DILocation(line: 1865, column: 7, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 1864, column: 5)
!6723 = !DILocation(line: 1866, column: 7, scope: !6722)
!6724 = !DILocation(line: 1869, column: 11, scope: !6699)
!6725 = !DILocation(line: 1869, column: 9, scope: !6699)
!6726 = !DILocation(line: 1870, column: 8, scope: !6713)
!6727 = !DILocation(line: 1870, column: 15, scope: !6712)
!6728 = !DILocation(line: 0, scope: !6713)
!6729 = !DILocation(line: 1870, column: 3, scope: !6713)
!6730 = !DILocation(line: 1873, column: 35, scope: !6711)
!6731 = !DILocation(line: 1873, column: 20, scope: !6711)
!6732 = !DILocation(line: 0, scope: !6711)
!6733 = !DILocation(line: 1874, column: 12, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 1874, column: 11)
!6735 = !DILocation(line: 1874, column: 11, scope: !6711)
!6736 = !DILocation(line: 1881, column: 23, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 1881, column: 11)
!6738 = !DILocation(line: 1881, column: 28, scope: !6737)
!6739 = !DILocation(line: 1881, column: 11, scope: !6711)
!6740 = !DILocation(line: 1882, column: 2, scope: !6737)
!6741 = !DILocation(line: 1884, column: 2, scope: !6737)
!6742 = !DILocation(line: 1870, column: 56, scope: !6712)
!6743 = !DILocation(line: 1870, column: 3, scope: !6712)
!6744 = distinct !{!6744, !6729, !6745}
!6745 = !DILocation(line: 1885, column: 5, scope: !6713)
!6746 = !DILocation(line: 1886, column: 3, scope: !6699)
!6747 = !DILocation(line: 1887, column: 1, scope: !6699)
!6748 = distinct !DISubprogram(name: "VEC_basic_block_base_iterate", scope: !349, file: !349, line: 281, type: !6749, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6751)
!6749 = !DISubroutineType(types: !6750)
!6750 = !{!664, !6181, !6, !2163}
!6751 = !{!6752, !6753, !6754}
!6752 = !DILocalVariable(name: "vec_", arg: 1, scope: !6748, file: !349, line: 281, type: !6181)
!6753 = !DILocalVariable(name: "ix_", arg: 2, scope: !6748, file: !349, line: 281, type: !6)
!6754 = !DILocalVariable(name: "ptr", arg: 3, scope: !6748, file: !349, line: 281, type: !2163)
!6755 = !DILocation(line: 0, scope: !6748)
!6756 = !DILocation(line: 281, column: 1, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6748, file: !349, line: 281, column: 1)
!6758 = !DILocation(line: 281, column: 1, scope: !6748)
!6759 = !DILocation(line: 281, column: 1, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6757, file: !349, line: 281, column: 1)
!6761 = !DILocation(line: 281, column: 1, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6757, file: !349, line: 281, column: 1)
!6763 = !DILocation(line: 0, scope: !6757)
!6764 = distinct !DISubprogram(name: "bitmap_set_and", scope: !3, file: !3, line: 753, type: !5773, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6765)
!6765 = !{!6766, !6767, !6768, !6769, !6770, !6773, !6777}
!6766 = !DILocalVariable(name: "dest", arg: 1, scope: !6764, file: !3, line: 753, type: !683)
!6767 = !DILocalVariable(name: "orig", arg: 2, scope: !6764, file: !3, line: 753, type: !683)
!6768 = !DILocalVariable(name: "bi", scope: !6764, file: !3, line: 755, type: !3046)
!6769 = !DILocalVariable(name: "i", scope: !6764, file: !3, line: 756, type: !6)
!6770 = !DILocalVariable(name: "temp", scope: !6771, file: !3, line: 760, type: !688)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 759, column: 5)
!6772 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 758, column: 7)
!6773 = !DILocalVariable(name: "expr", scope: !6774, file: !3, line: 766, type: !754)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 765, column: 2)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 764, column: 7)
!6776 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 764, column: 7)
!6777 = !DILocalVariable(name: "value_id", scope: !6774, file: !3, line: 767, type: !6)
!6778 = !DILocation(line: 0, scope: !6764)
!6779 = !DILocation(line: 755, column: 3, scope: !6764)
!6780 = !DILocation(line: 756, column: 3, scope: !6764)
!6781 = !DILocation(line: 758, column: 12, scope: !6772)
!6782 = !DILocation(line: 758, column: 7, scope: !6764)
!6783 = !DILocation(line: 760, column: 21, scope: !6771)
!6784 = !DILocation(line: 0, scope: !6771)
!6785 = !DILocation(line: 762, column: 30, scope: !6771)
!6786 = !DILocation(line: 762, column: 44, scope: !6771)
!6787 = !DILocation(line: 762, column: 7, scope: !6771)
!6788 = !DILocation(line: 763, column: 32, scope: !6771)
!6789 = !DILocation(line: 763, column: 7, scope: !6771)
!6790 = !DILocation(line: 764, column: 7, scope: !6776)
!6791 = !DILocation(line: 764, column: 7, scope: !6775)
!6792 = !DILocation(line: 766, column: 39, scope: !6774)
!6793 = !DILocation(line: 766, column: 20, scope: !6774)
!6794 = !DILocation(line: 0, scope: !6774)
!6795 = !DILocation(line: 767, column: 28, scope: !6774)
!6796 = !DILocation(line: 768, column: 29, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 768, column: 8)
!6798 = !DILocation(line: 768, column: 9, scope: !6797)
!6799 = !DILocation(line: 768, column: 8, scope: !6774)
!6800 = !DILocation(line: 769, column: 30, scope: !6797)
!6801 = !DILocation(line: 769, column: 43, scope: !6797)
!6802 = !DILocation(line: 769, column: 6, scope: !6797)
!6803 = distinct !{!6803, !6790, !6804}
!6804 = !DILocation(line: 770, column: 2, scope: !6776)
!6805 = !DILocation(line: 771, column: 7, scope: !6771)
!6806 = !DILocation(line: 772, column: 5, scope: !6771)
!6807 = !DILocation(line: 773, column: 1, scope: !6764)
!6808 = distinct !DISubprogram(name: "bitmap_set_free", scope: !3, file: !3, line: 708, type: !3025, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6809)
!6809 = !{!6810}
!6810 = !DILocalVariable(name: "set", arg: 1, scope: !6808, file: !3, line: 708, type: !683)
!6811 = !DILocation(line: 0, scope: !6808)
!6812 = !DILocation(line: 710, column: 3, scope: !6808)
!6813 = !DILocation(line: 711, column: 3, scope: !6808)
!6814 = !DILocation(line: 712, column: 1, scope: !6808)
!6815 = distinct !DISubprogram(name: "bitmap_set_subtract", scope: !3, file: !3, line: 778, type: !6816, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6818)
!6816 = !DISubroutineType(types: !6817)
!6817 = !{!683, !683, !683}
!6818 = !{!6819, !6820, !6821, !6822, !6823, !6824, !6828}
!6819 = !DILocalVariable(name: "dest", arg: 1, scope: !6815, file: !3, line: 778, type: !683)
!6820 = !DILocalVariable(name: "orig", arg: 2, scope: !6815, file: !3, line: 778, type: !683)
!6821 = !DILocalVariable(name: "result", scope: !6815, file: !3, line: 780, type: !683)
!6822 = !DILocalVariable(name: "bi", scope: !6815, file: !3, line: 781, type: !3046)
!6823 = !DILocalVariable(name: "i", scope: !6815, file: !3, line: 782, type: !6)
!6824 = !DILocalVariable(name: "expr", scope: !6825, file: !3, line: 789, type: !754)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 788, column: 5)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 787, column: 3)
!6827 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 787, column: 3)
!6828 = !DILocalVariable(name: "value_id", scope: !6825, file: !3, line: 790, type: !6)
!6829 = !DILocation(line: 0, scope: !6815)
!6830 = !DILocation(line: 780, column: 25, scope: !6815)
!6831 = !DILocation(line: 781, column: 3, scope: !6815)
!6832 = !DILocation(line: 782, column: 3, scope: !6815)
!6833 = !DILocation(line: 784, column: 29, scope: !6815)
!6834 = !DILocation(line: 784, column: 48, scope: !6815)
!6835 = !DILocation(line: 785, column: 13, scope: !6815)
!6836 = !DILocation(line: 784, column: 3, scope: !6815)
!6837 = !DILocation(line: 787, column: 3, scope: !6827)
!6838 = !DILocation(line: 0, scope: !6825)
!6839 = !DILocation(line: 787, column: 3, scope: !6826)
!6840 = !DILocation(line: 789, column: 42, scope: !6825)
!6841 = !DILocation(line: 789, column: 23, scope: !6825)
!6842 = !DILocation(line: 790, column: 31, scope: !6825)
!6843 = !DILocation(line: 791, column: 31, scope: !6825)
!6844 = !DILocation(line: 791, column: 7, scope: !6825)
!6845 = distinct !{!6845, !6837, !6846}
!6846 = !DILocation(line: 792, column: 5, scope: !6827)
!6847 = !DILocation(line: 795, column: 1, scope: !6815)
!6848 = !DILocation(line: 794, column: 3, scope: !6815)
!6849 = distinct !DISubprogram(name: "clean", scope: !3, file: !3, line: 2181, type: !6850, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6852)
!6850 = !DISubroutineType(types: !6851)
!6851 = !{null, !683, !1477}
!6852 = !{!6853, !6854, !6855, !6856, !6857}
!6853 = !DILocalVariable(name: "set", arg: 1, scope: !6849, file: !3, line: 2181, type: !683)
!6854 = !DILocalVariable(name: "block", arg: 2, scope: !6849, file: !3, line: 2181, type: !1477)
!6855 = !DILocalVariable(name: "exprs", scope: !6849, file: !3, line: 2183, type: !2099)
!6856 = !DILocalVariable(name: "expr", scope: !6849, file: !3, line: 2184, type: !754)
!6857 = !DILocalVariable(name: "i", scope: !6849, file: !3, line: 2185, type: !664)
!6858 = !DILocation(line: 0, scope: !6849)
!6859 = !DILocation(line: 2183, column: 3, scope: !6849)
!6860 = !DILocation(line: 2183, column: 33, scope: !6849)
!6861 = !DILocation(line: 2183, column: 25, scope: !6849)
!6862 = !DILocation(line: 2184, column: 3, scope: !6849)
!6863 = !DILocation(line: 2187, column: 8, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 2187, column: 3)
!6865 = !DILocation(line: 2187, column: 15, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 2187, column: 3)
!6867 = !DILocation(line: 0, scope: !6864)
!6868 = !DILocation(line: 2187, column: 3, scope: !6864)
!6869 = !DILocation(line: 2189, column: 38, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 2189, column: 11)
!6871 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 2188, column: 5)
!6872 = !DILocation(line: 2189, column: 12, scope: !6870)
!6873 = !DILocation(line: 2189, column: 11, scope: !6871)
!6874 = !DILocation(line: 2190, column: 31, scope: !6870)
!6875 = !DILocation(line: 2190, column: 2, scope: !6870)
!6876 = !DILocation(line: 2187, column: 56, scope: !6866)
!6877 = !DILocation(line: 2187, column: 3, scope: !6866)
!6878 = distinct !{!6878, !6868, !6879}
!6879 = !DILocation(line: 2191, column: 5, scope: !6864)
!6880 = !DILocation(line: 2192, column: 3, scope: !6849)
!6881 = !DILocation(line: 2193, column: 1, scope: !6849)
!6882 = distinct !DISubprogram(name: "bitmap_set_equal", scope: !3, file: !3, line: 877, type: !6883, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6885)
!6883 = !DISubroutineType(types: !6884)
!6884 = !{!663, !683, !683}
!6885 = !{!6886, !6887}
!6886 = !DILocalVariable(name: "a", arg: 1, scope: !6882, file: !3, line: 877, type: !683)
!6887 = !DILocalVariable(name: "b", arg: 2, scope: !6882, file: !3, line: 877, type: !683)
!6888 = !DILocation(line: 0, scope: !6882)
!6889 = !DILocation(line: 879, column: 29, scope: !6882)
!6890 = !DILocation(line: 879, column: 40, scope: !6882)
!6891 = !DILocation(line: 879, column: 10, scope: !6882)
!6892 = !DILocation(line: 879, column: 3, scope: !6882)
!6893 = distinct !DISubprogram(name: "RESET_BIT", scope: !2268, file: !2268, line: 82, type: !5582, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6894)
!6894 = !{!6895, !6896, !6897}
!6895 = !DILocalVariable(name: "map", arg: 1, scope: !6893, file: !2268, line: 82, type: !2267)
!6896 = !DILocalVariable(name: "bitno", arg: 2, scope: !6893, file: !2268, line: 82, type: !6)
!6897 = !DILocalVariable(name: "oldbit", scope: !6898, file: !2268, line: 86, type: !663)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !2268, line: 85, column: 5)
!6899 = distinct !DILexicalBlock(scope: !6893, file: !2268, line: 84, column: 7)
!6900 = !DILocation(line: 0, scope: !6893)
!6901 = !DILocation(line: 84, column: 12, scope: !6899)
!6902 = !DILocation(line: 84, column: 7, scope: !6899)
!6903 = !DILocation(line: 84, column: 7, scope: !6893)
!6904 = !DILocation(line: 92, column: 42, scope: !6893)
!6905 = !DILocation(line: 92, column: 31, scope: !6893)
!6906 = !DILocation(line: 91, column: 19, scope: !6893)
!6907 = !DILocation(line: 91, column: 3, scope: !6893)
!6908 = !DILocation(line: 87, column: 16, scope: !6898)
!6909 = !DILocation(line: 88, column: 11, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6898, file: !2268, line: 88, column: 11)
!6911 = !DILocation(line: 88, column: 11, scope: !6898)
!6912 = !DILocation(line: 89, column: 2, scope: !6910)
!6913 = !DILocation(line: 89, column: 41, scope: !6910)
!6914 = !DILocation(line: 92, column: 8, scope: !6893)
!6915 = !DILocation(line: 92, column: 5, scope: !6893)
!6916 = !DILocation(line: 93, column: 1, scope: !6893)
!6917 = distinct !DISubprogram(name: "single_succ_edge", scope: !349, file: !349, line: 643, type: !6918, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6920)
!6918 = !DISubroutineType(types: !6919)
!6919 = !{!1005, !6048}
!6920 = !{!6921}
!6921 = !DILocalVariable(name: "bb", arg: 1, scope: !6917, file: !349, line: 643, type: !6048)
!6922 = !DILocation(line: 0, scope: !6917)
!6923 = !DILocation(line: 645, column: 3, scope: !6917)
!6924 = !DILocation(line: 646, column: 10, scope: !6917)
!6925 = !DILocation(line: 646, column: 3, scope: !6917)
!6926 = distinct !DISubprogram(name: "sorted_array_from_bitmap_set", scope: !3, file: !3, line: 718, type: !6927, scopeLine: 719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6929)
!6927 = !DISubroutineType(types: !6928)
!6928 = !{!2099, !683}
!6929 = !{!6930, !6931, !6932, !6933, !6934, !6935, !6936}
!6930 = !DILocalVariable(name: "set", arg: 1, scope: !6926, file: !3, line: 718, type: !683)
!6931 = !DILocalVariable(name: "i", scope: !6926, file: !3, line: 720, type: !6)
!6932 = !DILocalVariable(name: "j", scope: !6926, file: !3, line: 720, type: !6)
!6933 = !DILocalVariable(name: "bi", scope: !6926, file: !3, line: 721, type: !3046)
!6934 = !DILocalVariable(name: "bj", scope: !6926, file: !3, line: 721, type: !3046)
!6935 = !DILocalVariable(name: "result", scope: !6926, file: !3, line: 722, type: !2099)
!6936 = !DILocalVariable(name: "exprset", scope: !6937, file: !3, line: 739, type: !683)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !3, line: 728, column: 5)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 727, column: 3)
!6939 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 727, column: 3)
!6940 = !DILocation(line: 0, scope: !6926)
!6941 = !DILocation(line: 720, column: 3, scope: !6926)
!6942 = !DILocation(line: 721, column: 3, scope: !6926)
!6943 = !DILocation(line: 722, column: 3, scope: !6926)
!6944 = !DILocation(line: 725, column: 12, scope: !6926)
!6945 = !DILocation(line: 725, column: 10, scope: !6926)
!6946 = !DILocation(line: 727, column: 3, scope: !6939)
!6947 = !DILocation(line: 0, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 742, column: 8)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 741, column: 2)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 740, column: 7)
!6951 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 740, column: 7)
!6952 = !DILocation(line: 727, column: 3, scope: !6938)
!6953 = !DILocation(line: 739, column: 30, scope: !6937)
!6954 = !DILocation(line: 0, scope: !6937)
!6955 = !DILocation(line: 740, column: 7, scope: !6951)
!6956 = !DILocation(line: 740, column: 7, scope: !6950)
!6957 = !DILocation(line: 742, column: 27, scope: !6948)
!6958 = !DILocation(line: 742, column: 40, scope: !6948)
!6959 = !DILocation(line: 742, column: 8, scope: !6948)
!6960 = !DILocation(line: 742, column: 8, scope: !6949)
!6961 = !DILocation(line: 743, column: 6, scope: !6948)
!6962 = distinct !{!6962, !6955, !6963}
!6963 = !DILocation(line: 744, column: 9, scope: !6951)
!6964 = distinct !{!6964, !6946, !6965}
!6965 = !DILocation(line: 745, column: 5, scope: !6939)
!6966 = !DILocation(line: 747, column: 10, scope: !6926)
!6967 = !DILocation(line: 748, column: 1, scope: !6926)
!6968 = !DILocation(line: 747, column: 3, scope: !6926)
!6969 = distinct !DISubprogram(name: "VEC_pre_expr_base_iterate", scope: !3, file: !3, line: 241, type: !6970, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6972)
!6970 = !DISubroutineType(types: !6971)
!6971 = !{!664, !3521, !6, !2173}
!6972 = !{!6973, !6974, !6975}
!6973 = !DILocalVariable(name: "vec_", arg: 1, scope: !6969, file: !3, line: 241, type: !3521)
!6974 = !DILocalVariable(name: "ix_", arg: 2, scope: !6969, file: !3, line: 241, type: !6)
!6975 = !DILocalVariable(name: "ptr", arg: 3, scope: !6969, file: !3, line: 241, type: !2173)
!6976 = !DILocation(line: 0, scope: !6969)
!6977 = !DILocation(line: 241, column: 1, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 241, column: 1)
!6979 = !DILocation(line: 241, column: 1, scope: !6969)
!6980 = !DILocation(line: 241, column: 1, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 241, column: 1)
!6982 = !DILocation(line: 241, column: 1, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 241, column: 1)
!6984 = !DILocation(line: 0, scope: !6978)
!6985 = distinct !DISubprogram(name: "phi_translate", scope: !3, file: !3, line: 1816, type: !6986, scopeLine: 1818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6988)
!6986 = !DISubroutineType(types: !6987)
!6987 = !{!754, !754, !683, !683, !1477, !1477}
!6988 = !{!6989, !6990, !6991, !6992, !6993, !6994}
!6989 = !DILocalVariable(name: "expr", arg: 1, scope: !6985, file: !3, line: 1816, type: !754)
!6990 = !DILocalVariable(name: "set1", arg: 2, scope: !6985, file: !3, line: 1816, type: !683)
!6991 = !DILocalVariable(name: "set2", arg: 3, scope: !6985, file: !3, line: 1816, type: !683)
!6992 = !DILocalVariable(name: "pred", arg: 4, scope: !6985, file: !3, line: 1817, type: !1477)
!6993 = !DILocalVariable(name: "phiblock", arg: 5, scope: !6985, file: !3, line: 1817, type: !1477)
!6994 = !DILocalVariable(name: "phitrans", scope: !6985, file: !3, line: 1819, type: !754)
!6995 = !DILocation(line: 0, scope: !6985)
!6996 = !DILocation(line: 1821, column: 8, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 1821, column: 7)
!6998 = !DILocation(line: 1821, column: 7, scope: !6985)
!6999 = !DILocation(line: 1825, column: 13, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 1825, column: 7)
!7001 = !DILocation(line: 1825, column: 18, scope: !7000)
!7002 = !DILocation(line: 1825, column: 7, scope: !6985)
!7003 = !DILocation(line: 1828, column: 28, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 1828, column: 7)
!7005 = !DILocation(line: 1828, column: 7, scope: !7004)
!7006 = !DILocation(line: 1828, column: 7, scope: !6985)
!7007 = !DILocation(line: 1831, column: 13, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 1831, column: 7)
!7009 = !DILocation(line: 1831, column: 18, scope: !7008)
!7010 = !DILocation(line: 1831, column: 7, scope: !6985)
!7011 = !DILocation(line: 1833, column: 18, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 1832, column: 5)
!7013 = !DILocation(line: 1834, column: 11, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 1834, column: 11)
!7015 = !DILocation(line: 1834, column: 11, scope: !7012)
!7016 = !DILocation(line: 1839, column: 14, scope: !6985)
!7017 = !DILocation(line: 1843, column: 7, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 1843, column: 7)
!7019 = !DILocation(line: 1844, column: 7, scope: !7018)
!7020 = !DILocation(line: 1844, column: 16, scope: !7018)
!7021 = !DILocation(line: 1844, column: 21, scope: !7018)
!7022 = !DILocation(line: 1843, column: 7, scope: !6985)
!7023 = !DILocation(line: 1845, column: 5, scope: !7018)
!7024 = !DILocation(line: 1848, column: 1, scope: !6985)
!7025 = distinct !DISubprogram(name: "bitmap_value_replace_in_set", scope: !3, file: !3, line: 886, type: !5745, scopeLine: 887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7026)
!7026 = !{!7027, !7028, !7029}
!7027 = !DILocalVariable(name: "set", arg: 1, scope: !7025, file: !3, line: 886, type: !683)
!7028 = !DILocalVariable(name: "expr", arg: 2, scope: !7025, file: !3, line: 886, type: !754)
!7029 = !DILocalVariable(name: "val", scope: !7025, file: !3, line: 888, type: !6)
!7030 = !DILocation(line: 0, scope: !7025)
!7031 = !DILocation(line: 888, column: 22, scope: !7025)
!7032 = !DILocation(line: 890, column: 7, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 890, column: 7)
!7034 = !DILocation(line: 890, column: 7, scope: !7025)
!7035 = !DILocation(line: 891, column: 5, scope: !7033)
!7036 = !DILocation(line: 893, column: 5, scope: !7033)
!7037 = !DILocation(line: 894, column: 1, scope: !7025)
!7038 = distinct !DISubprogram(name: "VEC_pre_expr_heap_free", scope: !3, file: !3, line: 242, type: !7039, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7041)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{null, !3262}
!7041 = !{!7042}
!7042 = !DILocalVariable(name: "vec_", arg: 1, scope: !7038, file: !3, line: 242, type: !3262)
!7043 = !DILocation(line: 0, scope: !7038)
!7044 = !DILocation(line: 242, column: 1, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 242, column: 1)
!7046 = !DILocation(line: 242, column: 1, scope: !7038)
!7047 = distinct !DISubprogram(name: "VEC_pre_expr_heap_alloc", scope: !3, file: !3, line: 242, type: !7048, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7050)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{!2099, !664}
!7050 = !{!7051}
!7051 = !DILocalVariable(name: "alloc_", arg: 1, scope: !7047, file: !3, line: 242, type: !664)
!7052 = !DILocation(line: 0, scope: !7047)
!7053 = !DILocation(line: 242, column: 1, scope: !7047)
!7054 = distinct !DISubprogram(name: "phi_trans_lookup", scope: !3, file: !3, line: 555, type: !7055, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7057)
!7055 = !DISubroutineType(types: !7056)
!7056 = !{!754, !754, !1477}
!7057 = !{!7058, !7059, !7060, !7061}
!7058 = !DILocalVariable(name: "e", arg: 1, scope: !7054, file: !3, line: 555, type: !754)
!7059 = !DILocalVariable(name: "pred", arg: 2, scope: !7054, file: !3, line: 555, type: !1477)
!7060 = !DILocalVariable(name: "slot", scope: !7054, file: !3, line: 557, type: !1533)
!7061 = !DILocalVariable(name: "ept", scope: !7054, file: !3, line: 558, type: !2155)
!7062 = !DILocation(line: 0, scope: !7054)
!7063 = !DILocation(line: 558, column: 3, scope: !7054)
!7064 = !DILocation(line: 560, column: 7, scope: !7054)
!7065 = !DILocation(line: 560, column: 9, scope: !7054)
!7066 = !DILocation(line: 561, column: 7, scope: !7054)
!7067 = !DILocation(line: 561, column: 12, scope: !7054)
!7068 = !DILocation(line: 562, column: 59, scope: !7054)
!7069 = !DILocation(line: 562, column: 44, scope: !7054)
!7070 = !DILocation(line: 562, column: 69, scope: !7054)
!7071 = !DILocation(line: 562, column: 18, scope: !7054)
!7072 = !DILocation(line: 562, column: 7, scope: !7054)
!7073 = !DILocation(line: 562, column: 16, scope: !7054)
!7074 = !DILocation(line: 563, column: 36, scope: !7054)
!7075 = !DILocation(line: 563, column: 10, scope: !7054)
!7076 = !DILocation(line: 565, column: 8, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 565, column: 7)
!7078 = !DILocation(line: 565, column: 7, scope: !7054)
!7079 = !DILocation(line: 568, column: 33, scope: !7077)
!7080 = !DILocation(line: 568, column: 41, scope: !7077)
!7081 = !DILocation(line: 568, column: 5, scope: !7077)
!7082 = !DILocation(line: 0, scope: !7077)
!7083 = !DILocation(line: 569, column: 1, scope: !7054)
!7084 = distinct !DISubprogram(name: "phi_translate_1", scope: !3, file: !3, line: 1495, type: !6986, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7085)
!7085 = !{!7086, !7087, !7088, !7089, !7090, !7091, !7094, !7095, !7096, !7097, !7103, !7104, !7105, !7108, !7111, !7112, !7113, !7115, !7116, !7117, !7118, !7119, !7120, !7121, !7122, !7123, !7124, !7125, !7129, !7130, !7131, !7132, !7133, !7134, !7135, !7136, !7137, !7138, !7141, !7144, !7147, !7150, !7153, !7156, !7159, !7160, !7161, !7163, !7164, !7165, !7166, !7169}
!7086 = !DILocalVariable(name: "expr", arg: 1, scope: !7084, file: !3, line: 1495, type: !754)
!7087 = !DILocalVariable(name: "set1", arg: 2, scope: !7084, file: !3, line: 1495, type: !683)
!7088 = !DILocalVariable(name: "set2", arg: 3, scope: !7084, file: !3, line: 1495, type: !683)
!7089 = !DILocalVariable(name: "pred", arg: 4, scope: !7084, file: !3, line: 1496, type: !1477)
!7090 = !DILocalVariable(name: "phiblock", arg: 5, scope: !7084, file: !3, line: 1496, type: !1477)
!7091 = !DILocalVariable(name: "i", scope: !7092, file: !3, line: 1502, type: !6)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 1501, column: 7)
!7093 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 1499, column: 5)
!7094 = !DILocalVariable(name: "changed", scope: !7092, file: !3, line: 1503, type: !663)
!7095 = !DILocalVariable(name: "nary", scope: !7092, file: !3, line: 1504, type: !2054)
!7096 = !DILocalVariable(name: "newnary", scope: !7092, file: !3, line: 1505, type: !2057)
!7097 = !DILocalVariable(name: "leader", scope: !7098, file: !3, line: 1517, type: !754)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 1516, column: 8)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 1513, column: 10)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 1512, column: 4)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 1511, column: 2)
!7102 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 1511, column: 2)
!7103 = !DILocalVariable(name: "result", scope: !7098, file: !3, line: 1517, type: !754)
!7104 = !DILocalVariable(name: "op_val_id", scope: !7098, file: !3, line: 1518, type: !6)
!7105 = !DILocalVariable(name: "name", scope: !7106, file: !3, line: 1523, type: !765)
!7106 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 1522, column: 5)
!7107 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 1521, column: 7)
!7108 = !DILocalVariable(name: "constant", scope: !7109, file: !3, line: 1536, type: !754)
!7109 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 1535, column: 4)
!7110 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 1534, column: 6)
!7111 = !DILocalVariable(name: "new_val_id", scope: !7109, file: !3, line: 1537, type: !6)
!7112 = !DILocalVariable(name: "result", scope: !7109, file: !3, line: 1539, type: !765)
!7113 = !DILocalVariable(name: "ref", scope: !7114, file: !3, line: 1591, type: !2068)
!7114 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 1590, column: 7)
!7115 = !DILocalVariable(name: "operands", scope: !7114, file: !3, line: 1592, type: !2078)
!7116 = !DILocalVariable(name: "vuse", scope: !7114, file: !3, line: 1593, type: !765)
!7117 = !DILocalVariable(name: "newvuse", scope: !7114, file: !3, line: 1594, type: !765)
!7118 = !DILocalVariable(name: "newoperands", scope: !7114, file: !3, line: 1595, type: !2078)
!7119 = !DILocalVariable(name: "changed", scope: !7114, file: !3, line: 1596, type: !663)
!7120 = !DILocalVariable(name: "same_valid", scope: !7114, file: !3, line: 1596, type: !663)
!7121 = !DILocalVariable(name: "i", scope: !7114, file: !3, line: 1597, type: !6)
!7122 = !DILocalVariable(name: "j", scope: !7114, file: !3, line: 1597, type: !6)
!7123 = !DILocalVariable(name: "operand", scope: !7114, file: !3, line: 1598, type: !2899)
!7124 = !DILocalVariable(name: "newref", scope: !7114, file: !3, line: 1599, type: !2068)
!7125 = !DILocalVariable(name: "opresult", scope: !7126, file: !3, line: 1604, type: !754)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 1603, column: 4)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 1601, column: 2)
!7128 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 1601, column: 2)
!7129 = !DILocalVariable(name: "leader", scope: !7126, file: !3, line: 1605, type: !754)
!7130 = !DILocalVariable(name: "oldop0", scope: !7126, file: !3, line: 1606, type: !765)
!7131 = !DILocalVariable(name: "oldop1", scope: !7126, file: !3, line: 1607, type: !765)
!7132 = !DILocalVariable(name: "oldop2", scope: !7126, file: !3, line: 1608, type: !765)
!7133 = !DILocalVariable(name: "op0", scope: !7126, file: !3, line: 1609, type: !765)
!7134 = !DILocalVariable(name: "op1", scope: !7126, file: !3, line: 1610, type: !765)
!7135 = !DILocalVariable(name: "op2", scope: !7126, file: !3, line: 1611, type: !765)
!7136 = !DILocalVariable(name: "type", scope: !7126, file: !3, line: 1612, type: !765)
!7137 = !DILocalVariable(name: "newop", scope: !7126, file: !3, line: 1613, type: !2090)
!7138 = !DILocalVariable(name: "op_val_id", scope: !7139, file: !3, line: 1617, type: !6)
!7139 = distinct !DILexicalBlock(scope: !7140, file: !3, line: 1616, column: 8)
!7140 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1615, column: 10)
!7141 = !DILocalVariable(name: "name", scope: !7142, file: !3, line: 1622, type: !765)
!7142 = distinct !DILexicalBlock(scope: !7143, file: !3, line: 1621, column: 5)
!7143 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 1620, column: 7)
!7144 = !DILocalVariable(name: "op_val_id", scope: !7145, file: !3, line: 1634, type: !6)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 1633, column: 8)
!7146 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1632, column: 10)
!7147 = !DILocalVariable(name: "name", scope: !7148, file: !3, line: 1639, type: !765)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 1638, column: 5)
!7149 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 1637, column: 7)
!7150 = !DILocalVariable(name: "op_val_id", scope: !7151, file: !3, line: 1653, type: !6)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 1652, column: 8)
!7152 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1651, column: 10)
!7153 = !DILocalVariable(name: "name", scope: !7154, file: !3, line: 1658, type: !765)
!7154 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 1657, column: 5)
!7155 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 1656, column: 7)
!7156 = !DILocalVariable(name: "new_val_id", scope: !7157, file: !3, line: 1710, type: !6)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 1709, column: 4)
!7158 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 1708, column: 6)
!7159 = !DILocalVariable(name: "constant", scope: !7157, file: !3, line: 1711, type: !754)
!7160 = !DILocalVariable(name: "result", scope: !7157, file: !3, line: 1713, type: !765)
!7161 = !DILocalVariable(name: "phi", scope: !7162, file: !3, line: 1771, type: !1025)
!7162 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 1770, column: 7)
!7163 = !DILocalVariable(name: "e", scope: !7162, file: !3, line: 1772, type: !1005)
!7164 = !DILocalVariable(name: "def_stmt", scope: !7162, file: !3, line: 1773, type: !1025)
!7165 = !DILocalVariable(name: "name", scope: !7162, file: !3, line: 1774, type: !765)
!7166 = !DILocalVariable(name: "def", scope: !7167, file: !3, line: 1786, type: !765)
!7167 = distinct !DILexicalBlock(scope: !7168, file: !3, line: 1785, column: 4)
!7168 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 1784, column: 6)
!7169 = !DILocalVariable(name: "newexpr", scope: !7167, file: !3, line: 1787, type: !754)
!7170 = !DILocation(line: 0, scope: !7084)
!7171 = !DILocation(line: 1498, column: 17, scope: !7084)
!7172 = !DILocation(line: 1498, column: 3, scope: !7084)
!7173 = !DILocation(line: 0, scope: !7092)
!7174 = !DILocation(line: 1504, column: 2, scope: !7092)
!7175 = !DILocation(line: 1504, column: 22, scope: !7092)
!7176 = !DILocation(line: 1504, column: 15, scope: !7092)
!7177 = !DILocation(line: 1505, column: 2, scope: !7092)
!7178 = !DILocation(line: 1508, column: 20, scope: !7092)
!7179 = !DILocation(line: 1509, column: 29, scope: !7092)
!7180 = !DILocation(line: 1509, column: 35, scope: !7092)
!7181 = !DILocation(line: 1509, column: 27, scope: !7092)
!7182 = !DILocation(line: 1509, column: 24, scope: !7092)
!7183 = !DILocation(line: 1509, column: 22, scope: !7092)
!7184 = !DILocation(line: 1509, column: 6, scope: !7092)
!7185 = !DILocation(line: 1508, column: 2, scope: !7092)
!7186 = !DILocation(line: 0, scope: !7101)
!7187 = !DILocation(line: 1511, column: 7, scope: !7102)
!7188 = !DILocation(line: 1503, column: 7, scope: !7092)
!7189 = !DILocation(line: 1511, column: 26, scope: !7101)
!7190 = !DILocation(line: 1511, column: 16, scope: !7101)
!7191 = !DILocation(line: 1511, column: 2, scope: !7102)
!7192 = !DILocation(line: 1513, column: 10, scope: !7099)
!7193 = !DILocation(line: 1513, column: 36, scope: !7099)
!7194 = !DILocation(line: 1513, column: 10, scope: !7100)
!7195 = !DILocation(line: 1518, column: 28, scope: !7098)
!7196 = !DILocation(line: 1518, column: 53, scope: !7098)
!7197 = !DILocation(line: 0, scope: !7098)
!7198 = !DILocation(line: 1519, column: 12, scope: !7098)
!7199 = !DILocation(line: 1520, column: 26, scope: !7098)
!7200 = !DILocation(line: 1521, column: 7, scope: !7107)
!7201 = !DILocation(line: 1521, column: 24, scope: !7107)
!7202 = !DILocation(line: 1521, column: 14, scope: !7107)
!7203 = !DILocation(line: 1523, column: 19, scope: !7106)
!7204 = !DILocation(line: 0, scope: !7106)
!7205 = !DILocation(line: 1524, column: 12, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 1524, column: 11)
!7207 = !DILocation(line: 1524, column: 11, scope: !7106)
!7208 = !DILocation(line: 1526, column: 21, scope: !7106)
!7209 = !DILocation(line: 1527, column: 5, scope: !7107)
!7210 = !DILocation(line: 1528, column: 13, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 1528, column: 12)
!7212 = !DILocation(line: 1528, column: 12, scope: !7107)
!7213 = !DILocation(line: 1531, column: 14, scope: !7098)
!7214 = !DILocation(line: 1531, column: 31, scope: !7098)
!7215 = !DILocation(line: 1531, column: 28, scope: !7098)
!7216 = !DILocation(line: 1531, column: 11, scope: !7098)
!7217 = !DILocation(line: 1532, column: 8, scope: !7099)
!7218 = !DILocation(line: 1511, column: 35, scope: !7101)
!7219 = !DILocation(line: 1511, column: 2, scope: !7101)
!7220 = distinct !{!7220, !7191, !7221}
!7221 = !DILocation(line: 1533, column: 4, scope: !7102)
!7222 = !DILocation(line: 1534, column: 6, scope: !7110)
!7223 = !DILocation(line: 1534, column: 6, scope: !7092)
!7224 = !DILocation(line: 1540, column: 19, scope: !7109)
!7225 = !DILocation(line: 1541, column: 19, scope: !7109)
!7226 = !DILocation(line: 1542, column: 11, scope: !7109)
!7227 = !DILocation(line: 1543, column: 11, scope: !7109)
!7228 = !DILocation(line: 1544, column: 11, scope: !7109)
!7229 = !DILocation(line: 1545, column: 11, scope: !7109)
!7230 = !DILocation(line: 1539, column: 20, scope: !7109)
!7231 = !DILocation(line: 0, scope: !7109)
!7232 = !DILocation(line: 1547, column: 10, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 1547, column: 10)
!7234 = !DILocation(line: 1547, column: 17, scope: !7233)
!7235 = !DILocation(line: 1547, column: 20, scope: !7233)
!7236 = !DILocation(line: 1547, column: 10, scope: !7109)
!7237 = !DILocation(line: 1548, column: 15, scope: !7233)
!7238 = !DILocation(line: 1548, column: 8, scope: !7233)
!7239 = !DILocation(line: 1550, column: 36, scope: !7109)
!7240 = !DILocation(line: 1550, column: 24, scope: !7109)
!7241 = !DILocation(line: 1550, column: 13, scope: !7109)
!7242 = !DILocation(line: 1551, column: 12, scope: !7109)
!7243 = !DILocation(line: 1551, column: 17, scope: !7109)
!7244 = !DILocation(line: 1552, column: 12, scope: !7109)
!7245 = !DILocation(line: 1552, column: 15, scope: !7109)
!7246 = !DILocation(line: 1553, column: 10, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 1553, column: 10)
!7248 = !DILocation(line: 1553, column: 10, scope: !7109)
!7249 = !DILocation(line: 1555, column: 3, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 1554, column: 8)
!7251 = !DILocation(line: 1555, column: 24, scope: !7250)
!7252 = !DILocation(line: 1556, column: 14, scope: !7250)
!7253 = !DILocation(line: 1557, column: 16, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 1557, column: 7)
!7255 = !DILocation(line: 1557, column: 7, scope: !7250)
!7256 = !DILocation(line: 1560, column: 16, scope: !7250)
!7257 = !DILocation(line: 1560, column: 22, scope: !7250)
!7258 = !DILocation(line: 1561, column: 3, scope: !7250)
!7259 = !DILocation(line: 1562, column: 8, scope: !7250)
!7260 = !DILocation(line: 1565, column: 16, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 1564, column: 8)
!7262 = !DILocation(line: 1566, column: 3, scope: !7261)
!7263 = !DILocation(line: 1569, column: 44, scope: !7261)
!7264 = !DILocation(line: 1570, column: 16, scope: !7261)
!7265 = !DILocation(line: 1571, column: 16, scope: !7261)
!7266 = !DILocation(line: 1572, column: 8, scope: !7261)
!7267 = !DILocation(line: 1573, column: 8, scope: !7261)
!7268 = !DILocation(line: 1574, column: 8, scope: !7261)
!7269 = !DILocation(line: 1575, column: 8, scope: !7261)
!7270 = !DILocation(line: 1569, column: 10, scope: !7261)
!7271 = !DILocation(line: 1569, column: 8, scope: !7261)
!7272 = !DILocation(line: 1577, column: 26, scope: !7261)
!7273 = !DILocation(line: 1577, column: 3, scope: !7261)
!7274 = !DILocation(line: 1577, column: 24, scope: !7261)
!7275 = !DILocation(line: 1578, column: 14, scope: !7261)
!7276 = !DILocation(line: 1579, column: 16, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 1579, column: 7)
!7278 = !DILocation(line: 1579, column: 7, scope: !7261)
!7279 = !DILocation(line: 1581, column: 3, scope: !7261)
!7280 = !DILocation(line: 0, scope: !7247)
!7281 = !DILocation(line: 1583, column: 6, scope: !7109)
!7282 = !DILocation(line: 1584, column: 4, scope: !7110)
!7283 = !DILocation(line: 1585, column: 2, scope: !7092)
!7284 = !DILocation(line: 1586, column: 7, scope: !7093)
!7285 = !DILocation(line: 1591, column: 23, scope: !7114)
!7286 = !DILocation(line: 0, scope: !7114)
!7287 = !DILocation(line: 1592, column: 49, scope: !7114)
!7288 = !DILocation(line: 1593, column: 19, scope: !7114)
!7289 = !DILocation(line: 1595, column: 2, scope: !7114)
!7290 = !DILocation(line: 1595, column: 33, scope: !7114)
!7291 = !DILocation(line: 1596, column: 2, scope: !7114)
!7292 = !DILocation(line: 1596, column: 24, scope: !7114)
!7293 = !DILocation(line: 1597, column: 2, scope: !7114)
!7294 = !DILocation(line: 1598, column: 2, scope: !7114)
!7295 = !DILocation(line: 1599, column: 2, scope: !7114)
!7296 = !DILocation(line: 0, scope: !7127)
!7297 = !DILocation(line: 0, scope: !7126)
!7298 = !DILocation(line: 0, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1674, column: 10)
!7300 = !DILocation(line: 1601, column: 7, scope: !7128)
!7301 = !DILocation(line: 0, scope: !7128)
!7302 = !DILocation(line: 1596, column: 7, scope: !7114)
!7303 = !DILocation(line: 1602, column: 7, scope: !7127)
!7304 = !DILocation(line: 1601, column: 2, scope: !7128)
!7305 = !DILocation(line: 1606, column: 20, scope: !7126)
!7306 = !DILocation(line: 1606, column: 29, scope: !7126)
!7307 = !DILocation(line: 1607, column: 29, scope: !7126)
!7308 = !DILocation(line: 1608, column: 29, scope: !7126)
!7309 = !DILocation(line: 1612, column: 27, scope: !7126)
!7310 = !DILocation(line: 1613, column: 6, scope: !7126)
!7311 = !DILocation(line: 1613, column: 33, scope: !7126)
!7312 = !DILocation(line: 1613, column: 32, scope: !7126)
!7313 = !DILocation(line: 1615, column: 10, scope: !7140)
!7314 = !DILocation(line: 1615, column: 14, scope: !7140)
!7315 = !DILocation(line: 1615, column: 17, scope: !7140)
!7316 = !DILocation(line: 1615, column: 33, scope: !7140)
!7317 = !DILocation(line: 1615, column: 10, scope: !7126)
!7318 = !DILocation(line: 1617, column: 28, scope: !7139)
!7319 = !DILocation(line: 1617, column: 43, scope: !7139)
!7320 = !DILocation(line: 0, scope: !7139)
!7321 = !DILocation(line: 1618, column: 12, scope: !7139)
!7322 = !DILocation(line: 1619, column: 14, scope: !7139)
!7323 = !DILocation(line: 1620, column: 7, scope: !7143)
!7324 = !DILocation(line: 1620, column: 28, scope: !7143)
!7325 = !DILocation(line: 1620, column: 16, scope: !7143)
!7326 = !DILocation(line: 1622, column: 19, scope: !7142)
!7327 = !DILocation(line: 0, scope: !7142)
!7328 = !DILocation(line: 1623, column: 12, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 1623, column: 11)
!7330 = !DILocation(line: 0, scope: !7143)
!7331 = !DILocation(line: 1627, column: 13, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7143, file: !3, line: 1627, column: 12)
!7333 = !DILocation(line: 1627, column: 12, scope: !7143)
!7334 = !DILocation(line: 1629, column: 8, scope: !7140)
!7335 = !DILocation(line: 1630, column: 21, scope: !7126)
!7336 = !DILocation(line: 1630, column: 14, scope: !7126)
!7337 = !DILocation(line: 1632, column: 14, scope: !7146)
!7338 = !DILocation(line: 1632, column: 17, scope: !7146)
!7339 = !DILocation(line: 1632, column: 33, scope: !7146)
!7340 = !DILocation(line: 1632, column: 10, scope: !7126)
!7341 = !DILocation(line: 1634, column: 28, scope: !7145)
!7342 = !DILocation(line: 1634, column: 43, scope: !7145)
!7343 = !DILocation(line: 0, scope: !7145)
!7344 = !DILocation(line: 1635, column: 12, scope: !7145)
!7345 = !DILocation(line: 1636, column: 14, scope: !7145)
!7346 = !DILocation(line: 1637, column: 7, scope: !7149)
!7347 = !DILocation(line: 1637, column: 28, scope: !7149)
!7348 = !DILocation(line: 1637, column: 16, scope: !7149)
!7349 = !DILocation(line: 1639, column: 19, scope: !7148)
!7350 = !DILocation(line: 0, scope: !7148)
!7351 = !DILocation(line: 1640, column: 12, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 1640, column: 11)
!7353 = !DILocation(line: 0, scope: !7149)
!7354 = !DILocation(line: 1644, column: 13, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 1644, column: 12)
!7356 = !DILocation(line: 1644, column: 12, scope: !7149)
!7357 = !DILocation(line: 1646, column: 8, scope: !7146)
!7358 = !DILocation(line: 1648, column: 23, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 1648, column: 15)
!7360 = !DILocation(line: 1648, column: 15, scope: !7146)
!7361 = !DILocation(line: 1650, column: 21, scope: !7126)
!7362 = !DILocation(line: 1650, column: 14, scope: !7126)
!7363 = !DILocation(line: 1651, column: 14, scope: !7152)
!7364 = !DILocation(line: 1651, column: 17, scope: !7152)
!7365 = !DILocation(line: 1651, column: 33, scope: !7152)
!7366 = !DILocation(line: 1651, column: 10, scope: !7126)
!7367 = !DILocation(line: 1653, column: 28, scope: !7151)
!7368 = !DILocation(line: 1653, column: 43, scope: !7151)
!7369 = !DILocation(line: 0, scope: !7151)
!7370 = !DILocation(line: 1654, column: 12, scope: !7151)
!7371 = !DILocation(line: 1655, column: 14, scope: !7151)
!7372 = !DILocation(line: 1656, column: 7, scope: !7155)
!7373 = !DILocation(line: 1656, column: 28, scope: !7155)
!7374 = !DILocation(line: 1656, column: 16, scope: !7155)
!7375 = !DILocation(line: 1658, column: 19, scope: !7154)
!7376 = !DILocation(line: 0, scope: !7154)
!7377 = !DILocation(line: 1659, column: 12, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 1659, column: 11)
!7379 = !DILocation(line: 0, scope: !7155)
!7380 = !DILocation(line: 1663, column: 13, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 1663, column: 12)
!7382 = !DILocation(line: 1663, column: 12, scope: !7155)
!7383 = !DILocation(line: 1665, column: 8, scope: !7152)
!7384 = !DILocation(line: 1667, column: 23, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 1667, column: 15)
!7386 = !DILocation(line: 1667, column: 15, scope: !7152)
!7387 = !DILocation(line: 1669, column: 21, scope: !7126)
!7388 = !DILocation(line: 1669, column: 14, scope: !7126)
!7389 = !DILocation(line: 1671, column: 11, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1671, column: 10)
!7391 = !DILocation(line: 1671, column: 10, scope: !7126)
!7392 = !DILocation(line: 1672, column: 22, scope: !7390)
!7393 = !DILocation(line: 1672, column: 20, scope: !7390)
!7394 = !DILocation(line: 1672, column: 8, scope: !7390)
!7395 = !DILocation(line: 1674, column: 16, scope: !7299)
!7396 = !DILocation(line: 1674, column: 23, scope: !7299)
!7397 = !DILocation(line: 1674, column: 35, scope: !7299)
!7398 = !DILocation(line: 1674, column: 38, scope: !7299)
!7399 = !DILocation(line: 1674, column: 54, scope: !7299)
!7400 = !DILocation(line: 1674, column: 10, scope: !7126)
!7401 = !DILocation(line: 1675, column: 23, scope: !7299)
!7402 = !DILocation(line: 1675, column: 21, scope: !7299)
!7403 = !DILocation(line: 1675, column: 8, scope: !7299)
!7404 = !DILocation(line: 1676, column: 17, scope: !7126)
!7405 = !DILocation(line: 1677, column: 16, scope: !7126)
!7406 = !DILocation(line: 1678, column: 16, scope: !7126)
!7407 = !DILocation(line: 1679, column: 16, scope: !7126)
!7408 = !DILocation(line: 1680, column: 6, scope: !7126)
!7409 = !DILocation(line: 1683, column: 10, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1683, column: 10)
!7411 = !DILocation(line: 1683, column: 12, scope: !7410)
!7412 = !DILocation(line: 1683, column: 19, scope: !7410)
!7413 = !DILocation(line: 1683, column: 16, scope: !7410)
!7414 = !DILocation(line: 1683, column: 26, scope: !7410)
!7415 = !DILocation(line: 1683, column: 42, scope: !7410)
!7416 = !DILocation(line: 1684, column: 3, scope: !7410)
!7417 = !DILocation(line: 1684, column: 6, scope: !7410)
!7418 = !DILocation(line: 1685, column: 31, scope: !7410)
!7419 = !DILocation(line: 1685, column: 38, scope: !7410)
!7420 = !DILocation(line: 1683, column: 10, scope: !7126)
!7421 = !DILocation(line: 1686, column: 8, scope: !7410)
!7422 = !DILocation(line: 1687, column: 4, scope: !7127)
!7423 = !DILocation(line: 1602, column: 63, scope: !7127)
!7424 = !DILocation(line: 1602, column: 68, scope: !7127)
!7425 = !DILocation(line: 1601, column: 2, scope: !7127)
!7426 = distinct !{!7426, !7304, !7427}
!7427 = !DILocation(line: 1687, column: 4, scope: !7128)
!7428 = !DILocation(line: 1688, column: 11, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 1688, column: 6)
!7430 = !DILocation(line: 1688, column: 8, scope: !7429)
!7431 = !DILocation(line: 1688, column: 6, scope: !7114)
!7432 = !DILocation(line: 1690, column: 10, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 1690, column: 10)
!7434 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1689, column: 4)
!7435 = !DILocation(line: 1690, column: 10, scope: !7434)
!7436 = !DILocation(line: 1691, column: 8, scope: !7433)
!7437 = !DILocation(line: 1695, column: 6, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 1695, column: 6)
!7439 = !DILocation(line: 1695, column: 6, scope: !7114)
!7440 = !DILocation(line: 1697, column: 46, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 1696, column: 4)
!7442 = !DILocation(line: 1698, column: 16, scope: !7441)
!7443 = !DILocation(line: 1698, column: 26, scope: !7441)
!7444 = !DILocation(line: 1697, column: 16, scope: !7441)
!7445 = !DILocation(line: 1701, column: 18, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7441, file: !3, line: 1701, column: 10)
!7447 = !DILocation(line: 1701, column: 10, scope: !7441)
!7448 = !DILocation(line: 1703, column: 3, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 1702, column: 8)
!7450 = !DILocation(line: 1704, column: 3, scope: !7449)
!7451 = !DILocation(line: 1708, column: 6, scope: !7158)
!7452 = !DILocation(line: 1708, column: 25, scope: !7158)
!7453 = !DILocation(line: 1708, column: 14, scope: !7158)
!7454 = !DILocation(line: 1713, column: 62, scope: !7157)
!7455 = !DILocation(line: 1714, column: 18, scope: !7157)
!7456 = !DILocation(line: 1715, column: 13, scope: !7157)
!7457 = !DILocation(line: 1713, column: 20, scope: !7157)
!7458 = !DILocation(line: 0, scope: !7157)
!7459 = !DILocation(line: 1717, column: 10, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1717, column: 10)
!7461 = !DILocation(line: 1717, column: 10, scope: !7157)
!7462 = !DILocation(line: 1718, column: 8, scope: !7460)
!7463 = !DILocation(line: 1720, column: 10, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1720, column: 10)
!7465 = !DILocation(line: 1720, column: 17, scope: !7464)
!7466 = !DILocation(line: 1720, column: 20, scope: !7464)
!7467 = !DILocation(line: 1720, column: 10, scope: !7157)
!7468 = !DILocation(line: 1722, column: 10, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 1721, column: 8)
!7470 = !DILocation(line: 1723, column: 17, scope: !7469)
!7471 = !DILocation(line: 1723, column: 10, scope: !7469)
!7472 = !DILocation(line: 1726, column: 36, scope: !7157)
!7473 = !DILocation(line: 1726, column: 24, scope: !7157)
!7474 = !DILocation(line: 1726, column: 13, scope: !7157)
!7475 = !DILocation(line: 1727, column: 12, scope: !7157)
!7476 = !DILocation(line: 1727, column: 17, scope: !7157)
!7477 = !DILocation(line: 1728, column: 12, scope: !7157)
!7478 = !DILocation(line: 1728, column: 15, scope: !7157)
!7479 = !DILocation(line: 1730, column: 10, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1730, column: 10)
!7481 = !DILocation(line: 1730, column: 10, scope: !7157)
!7482 = !DILocation(line: 1732, column: 3, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 1731, column: 8)
!7484 = !DILocation(line: 1732, column: 29, scope: !7483)
!7485 = !DILocation(line: 1733, column: 14, scope: !7483)
!7486 = !DILocation(line: 1734, column: 16, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 1734, column: 7)
!7488 = !DILocation(line: 1734, column: 7, scope: !7483)
!7489 = !DILocation(line: 1737, column: 16, scope: !7483)
!7490 = !DILocation(line: 1737, column: 24, scope: !7483)
!7491 = !DILocation(line: 1738, column: 3, scope: !7483)
!7492 = !DILocation(line: 1739, column: 8, scope: !7483)
!7493 = !DILocation(line: 1742, column: 7, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 1742, column: 7)
!7495 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 1741, column: 8)
!7496 = !DILocation(line: 1742, column: 19, scope: !7494)
!7497 = !DILocation(line: 1742, column: 15, scope: !7494)
!7498 = !DILocation(line: 1744, column: 20, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 1743, column: 5)
!7500 = !DILocation(line: 1745, column: 7, scope: !7499)
!7501 = !DILocation(line: 1748, column: 5, scope: !7499)
!7502 = !DILocation(line: 1750, column: 23, scope: !7494)
!7503 = !DILocation(line: 0, scope: !7494)
!7504 = !DILocation(line: 1751, column: 54, scope: !7495)
!7505 = !DILocation(line: 1752, column: 17, scope: !7495)
!7506 = !DILocation(line: 1753, column: 12, scope: !7495)
!7507 = !DILocation(line: 1751, column: 12, scope: !7495)
!7508 = !DILocation(line: 1751, column: 10, scope: !7495)
!7509 = !DILocation(line: 1755, column: 15, scope: !7495)
!7510 = !DILocation(line: 1756, column: 31, scope: !7495)
!7511 = !DILocation(line: 1756, column: 3, scope: !7495)
!7512 = !DILocation(line: 1756, column: 29, scope: !7495)
!7513 = !DILocation(line: 1757, column: 14, scope: !7495)
!7514 = !DILocation(line: 1758, column: 16, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 1758, column: 7)
!7516 = !DILocation(line: 1758, column: 7, scope: !7495)
!7517 = !DILocation(line: 1760, column: 3, scope: !7495)
!7518 = !DILocation(line: 0, scope: !7480)
!7519 = !DILocation(line: 1762, column: 6, scope: !7157)
!7520 = !DILocation(line: 1763, column: 4, scope: !7158)
!7521 = !DILocation(line: 1764, column: 2, scope: !7114)
!7522 = !DILocation(line: 1765, column: 2, scope: !7114)
!7523 = !DILocation(line: 1766, column: 7, scope: !7093)
!7524 = !DILocation(line: 0, scope: !7162)
!7525 = !DILocation(line: 1774, column: 14, scope: !7162)
!7526 = !DILocation(line: 1776, column: 13, scope: !7162)
!7527 = !DILocation(line: 1777, column: 6, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 1777, column: 6)
!7529 = !DILocation(line: 1777, column: 29, scope: !7528)
!7530 = !DILocation(line: 1778, column: 6, scope: !7528)
!7531 = !DILocation(line: 1778, column: 9, scope: !7528)
!7532 = !DILocation(line: 1778, column: 30, scope: !7528)
!7533 = !DILocation(line: 1777, column: 6, scope: !7162)
!7534 = !DILocation(line: 1783, column: 23, scope: !7162)
!7535 = !DILocation(line: 1783, column: 6, scope: !7162)
!7536 = !DILocation(line: 1784, column: 6, scope: !7168)
!7537 = !DILocation(line: 1784, column: 6, scope: !7162)
!7538 = !DILocation(line: 1786, column: 17, scope: !7167)
!7539 = !DILocation(line: 0, scope: !7167)
!7540 = !DILocation(line: 1789, column: 10, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 1789, column: 10)
!7542 = !DILocation(line: 1789, column: 26, scope: !7541)
!7543 = !DILocation(line: 1789, column: 10, scope: !7167)
!7544 = !DILocation(line: 1790, column: 14, scope: !7541)
!7545 = !DILocation(line: 1790, column: 29, scope: !7541)
!7546 = !DILocation(line: 1790, column: 8, scope: !7541)
!7547 = !DILocation(line: 1793, column: 10, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 1793, column: 10)
!7549 = !DILocation(line: 1793, column: 10, scope: !7167)
!7550 = !DILocation(line: 1794, column: 15, scope: !7548)
!7551 = !DILocation(line: 1794, column: 8, scope: !7548)
!7552 = !DILocation(line: 1796, column: 10, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 1796, column: 10)
!7554 = !DILocation(line: 1796, column: 26, scope: !7553)
!7555 = !DILocation(line: 1796, column: 38, scope: !7553)
!7556 = !DILocation(line: 1796, column: 41, scope: !7553)
!7557 = !DILocation(line: 1796, column: 10, scope: !7167)
!7558 = !DILocation(line: 1799, column: 16, scope: !7167)
!7559 = !DILocation(line: 1800, column: 6, scope: !7167)
!7560 = !DILocation(line: 1806, column: 7, scope: !7093)
!7561 = !DILocation(line: 1809, column: 5, scope: !7084)
!7562 = !DILocation(line: 1811, column: 1, scope: !7084)
!7563 = distinct !DISubprogram(name: "phi_trans_add", scope: !3, file: !3, line: 576, type: !7564, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7566)
!7564 = !DISubroutineType(types: !7565)
!7565 = !{null, !754, !754, !1477}
!7566 = !{!7567, !7568, !7569, !7570, !7571}
!7567 = !DILocalVariable(name: "e", arg: 1, scope: !7563, file: !3, line: 576, type: !754)
!7568 = !DILocalVariable(name: "v", arg: 2, scope: !7563, file: !3, line: 576, type: !754)
!7569 = !DILocalVariable(name: "pred", arg: 3, scope: !7563, file: !3, line: 576, type: !1477)
!7570 = !DILocalVariable(name: "slot", scope: !7563, file: !3, line: 578, type: !1533)
!7571 = !DILocalVariable(name: "new_pair", scope: !7563, file: !3, line: 579, type: !2171)
!7572 = !DILocation(line: 0, scope: !7563)
!7573 = !DILocation(line: 579, column: 32, scope: !7563)
!7574 = !DILocation(line: 580, column: 13, scope: !7563)
!7575 = !DILocation(line: 580, column: 15, scope: !7563)
!7576 = !DILocation(line: 581, column: 13, scope: !7563)
!7577 = !DILocation(line: 581, column: 18, scope: !7563)
!7578 = !DILocation(line: 582, column: 13, scope: !7563)
!7579 = !DILocation(line: 582, column: 15, scope: !7563)
!7580 = !DILocation(line: 583, column: 65, scope: !7563)
!7581 = !DILocation(line: 583, column: 50, scope: !7563)
!7582 = !DILocation(line: 584, column: 14, scope: !7563)
!7583 = !DILocation(line: 583, column: 24, scope: !7563)
!7584 = !DILocation(line: 583, column: 13, scope: !7563)
!7585 = !DILocation(line: 583, column: 22, scope: !7563)
!7586 = !DILocation(line: 586, column: 36, scope: !7563)
!7587 = !DILocation(line: 586, column: 10, scope: !7563)
!7588 = !DILocation(line: 588, column: 7, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 588, column: 7)
!7590 = !DILocation(line: 588, column: 7, scope: !7563)
!7591 = !DILocation(line: 589, column: 5, scope: !7589)
!7592 = !DILocation(line: 590, column: 9, scope: !7563)
!7593 = !DILocation(line: 591, column: 1, scope: !7563)
!7594 = distinct !DISubprogram(name: "find_leader_in_sets", scope: !3, file: !3, line: 1371, type: !7595, scopeLine: 1372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7597)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{!754, !6, !683, !683}
!7597 = !{!7598, !7599, !7600, !7601}
!7598 = !DILocalVariable(name: "val", arg: 1, scope: !7594, file: !3, line: 1371, type: !6)
!7599 = !DILocalVariable(name: "set1", arg: 2, scope: !7594, file: !3, line: 1371, type: !683)
!7600 = !DILocalVariable(name: "set2", arg: 3, scope: !7594, file: !3, line: 1371, type: !683)
!7601 = !DILocalVariable(name: "result", scope: !7594, file: !3, line: 1373, type: !754)
!7602 = !DILocation(line: 0, scope: !7594)
!7603 = !DILocation(line: 1375, column: 12, scope: !7594)
!7604 = !DILocation(line: 1376, column: 8, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 1376, column: 7)
!7606 = !DILocation(line: 1376, column: 18, scope: !7605)
!7607 = !DILocation(line: 1376, column: 15, scope: !7605)
!7608 = !DILocation(line: 1377, column: 14, scope: !7605)
!7609 = !DILocation(line: 1377, column: 5, scope: !7605)
!7610 = !DILocation(line: 1378, column: 3, scope: !7594)
!7611 = distinct !DISubprogram(name: "get_representative_for", scope: !3, file: !3, line: 1412, type: !7612, scopeLine: 1413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7614)
!7612 = !DISubroutineType(types: !7613)
!7613 = !{!765, !2889}
!7614 = !{!7615, !7616, !7617, !7618, !7619, !7622, !7623, !7624}
!7615 = !DILocalVariable(name: "e", arg: 1, scope: !7611, file: !3, line: 1412, type: !2889)
!7616 = !DILocalVariable(name: "exprtype", scope: !7611, file: !3, line: 1414, type: !765)
!7617 = !DILocalVariable(name: "name", scope: !7611, file: !3, line: 1415, type: !765)
!7618 = !DILocalVariable(name: "value_id", scope: !7611, file: !3, line: 1416, type: !6)
!7619 = !DILocalVariable(name: "i", scope: !7620, file: !3, line: 1429, type: !6)
!7620 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 1426, column: 7)
!7621 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 1419, column: 5)
!7622 = !DILocalVariable(name: "bi", scope: !7620, file: !3, line: 1430, type: !3046)
!7623 = !DILocalVariable(name: "exprs", scope: !7620, file: !3, line: 1431, type: !683)
!7624 = !DILocalVariable(name: "rep", scope: !7625, file: !3, line: 1435, type: !754)
!7625 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 1434, column: 4)
!7626 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 1433, column: 2)
!7627 = distinct !DILexicalBlock(scope: !7620, file: !3, line: 1433, column: 2)
!7628 = !DILocation(line: 0, scope: !7611)
!7629 = !DILocation(line: 1416, column: 27, scope: !7611)
!7630 = !DILocation(line: 1418, column: 14, scope: !7611)
!7631 = !DILocation(line: 1418, column: 3, scope: !7611)
!7632 = !DILocation(line: 1421, column: 14, scope: !7621)
!7633 = !DILocation(line: 1421, column: 7, scope: !7621)
!7634 = !DILocation(line: 1423, column: 14, scope: !7621)
!7635 = !DILocation(line: 1423, column: 7, scope: !7621)
!7636 = !DILocation(line: 1429, column: 2, scope: !7620)
!7637 = !DILocation(line: 1430, column: 2, scope: !7620)
!7638 = !DILocation(line: 1431, column: 23, scope: !7620)
!7639 = !DILocation(line: 0, scope: !7620)
!7640 = !DILocation(line: 1433, column: 2, scope: !7627)
!7641 = !DILocation(line: 1433, column: 2, scope: !7626)
!7642 = !DILocation(line: 1435, column: 40, scope: !7625)
!7643 = !DILocation(line: 1435, column: 21, scope: !7625)
!7644 = !DILocation(line: 0, scope: !7625)
!7645 = !DILocation(line: 1436, column: 15, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7625, file: !3, line: 1436, column: 10)
!7647 = !DILocation(line: 1436, column: 20, scope: !7646)
!7648 = !DILocation(line: 1436, column: 10, scope: !7625)
!7649 = !DILocation(line: 1437, column: 15, scope: !7646)
!7650 = !DILocation(line: 1437, column: 8, scope: !7646)
!7651 = distinct !{!7651, !7640, !7652}
!7652 = !DILocation(line: 1438, column: 4, scope: !7627)
!7653 = !DILocation(line: 1439, column: 7, scope: !7621)
!7654 = !DILocation(line: 1446, column: 7, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 1446, column: 7)
!7656 = !DILocation(line: 1446, column: 7, scope: !7611)
!7657 = !DILocation(line: 1448, column: 7, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 1447, column: 5)
!7659 = !DILocation(line: 1450, column: 23, scope: !7658)
!7660 = !DILocation(line: 1450, column: 7, scope: !7658)
!7661 = !DILocation(line: 1451, column: 16, scope: !7658)
!7662 = !DILocation(line: 1451, column: 7, scope: !7658)
!7663 = !DILocation(line: 1452, column: 5, scope: !7658)
!7664 = !DILocation(line: 1454, column: 14, scope: !7611)
!7665 = !DILocation(line: 1458, column: 8, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 1458, column: 7)
!7667 = !DILocation(line: 1458, column: 16, scope: !7666)
!7668 = !DILocation(line: 1458, column: 31, scope: !7666)
!7669 = !DILocation(line: 1458, column: 28, scope: !7666)
!7670 = !DILocation(line: 1458, column: 7, scope: !7611)
!7671 = !DILocation(line: 1460, column: 17, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 1459, column: 5)
!7673 = !DILocation(line: 1460, column: 15, scope: !7672)
!7674 = !DILocation(line: 1461, column: 7, scope: !7672)
!7675 = !DILocation(line: 1464, column: 25, scope: !7611)
!7676 = !DILocation(line: 1462, column: 5, scope: !7672)
!7677 = !DILocation(line: 1464, column: 34, scope: !7611)
!7678 = !DILocation(line: 1464, column: 10, scope: !7611)
!7679 = !DILocation(line: 1465, column: 3, scope: !7611)
!7680 = !DILocation(line: 1465, column: 23, scope: !7611)
!7681 = !DILocation(line: 1465, column: 32, scope: !7611)
!7682 = !DILocation(line: 1466, column: 10, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 1466, column: 7)
!7684 = !DILocation(line: 1466, column: 15, scope: !7683)
!7685 = !DILocation(line: 1466, column: 7, scope: !7611)
!7686 = !DILocation(line: 1467, column: 30, scope: !7683)
!7687 = !DILocation(line: 1467, column: 5, scope: !7683)
!7688 = !DILocation(line: 1467, column: 28, scope: !7683)
!7689 = !DILocation(line: 1469, column: 5, scope: !7683)
!7690 = !DILocation(line: 1469, column: 21, scope: !7683)
!7691 = !DILocation(line: 1469, column: 28, scope: !7683)
!7692 = !DILocation(line: 1471, column: 27, scope: !7611)
!7693 = !DILocation(line: 1471, column: 3, scope: !7611)
!7694 = !DILocation(line: 1472, column: 7, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 1472, column: 7)
!7696 = !DILocation(line: 1472, column: 7, scope: !7611)
!7697 = !DILocation(line: 1474, column: 7, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 1473, column: 5)
!7699 = !DILocation(line: 1475, column: 27, scope: !7698)
!7700 = !DILocation(line: 1475, column: 7, scope: !7698)
!7701 = !DILocation(line: 1476, column: 16, scope: !7698)
!7702 = !DILocation(line: 1476, column: 7, scope: !7698)
!7703 = !DILocation(line: 1477, column: 23, scope: !7698)
!7704 = !DILocation(line: 1477, column: 7, scope: !7698)
!7705 = !DILocation(line: 1478, column: 16, scope: !7698)
!7706 = !DILocation(line: 1478, column: 7, scope: !7698)
!7707 = !DILocation(line: 1479, column: 5, scope: !7698)
!7708 = !DILocation(line: 1482, column: 1, scope: !7611)
!7709 = distinct !DISubprogram(name: "get_or_alloc_expr_for_constant", scope: !3, file: !3, line: 1066, type: !5713, scopeLine: 1067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7710)
!7710 = !{!7711, !7712, !7713, !7714, !7715}
!7711 = !DILocalVariable(name: "constant", arg: 1, scope: !7709, file: !3, line: 1066, type: !765)
!7712 = !DILocalVariable(name: "result_id", scope: !7709, file: !3, line: 1068, type: !6)
!7713 = !DILocalVariable(name: "value_id", scope: !7709, file: !3, line: 1069, type: !6)
!7714 = !DILocalVariable(name: "expr", scope: !7709, file: !3, line: 1070, type: !756)
!7715 = !DILocalVariable(name: "newexpr", scope: !7709, file: !3, line: 1071, type: !754)
!7716 = !DILocation(line: 0, scope: !7709)
!7717 = !DILocation(line: 1070, column: 3, scope: !7709)
!7718 = !DILocation(line: 1073, column: 8, scope: !7709)
!7719 = !DILocation(line: 1073, column: 13, scope: !7709)
!7720 = !DILocation(line: 1074, column: 3, scope: !7709)
!7721 = !DILocation(line: 1074, column: 29, scope: !7709)
!7722 = !DILocation(line: 1075, column: 15, scope: !7709)
!7723 = !DILocation(line: 1076, column: 17, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 1076, column: 7)
!7725 = !DILocation(line: 1076, column: 7, scope: !7709)
!7726 = !DILocation(line: 1077, column: 12, scope: !7724)
!7727 = !DILocation(line: 1077, column: 5, scope: !7724)
!7728 = !DILocation(line: 1079, column: 36, scope: !7709)
!7729 = !DILocation(line: 1079, column: 24, scope: !7709)
!7730 = !DILocation(line: 1079, column: 13, scope: !7709)
!7731 = !DILocation(line: 1080, column: 12, scope: !7709)
!7732 = !DILocation(line: 1080, column: 17, scope: !7709)
!7733 = !DILocation(line: 1081, column: 3, scope: !7709)
!7734 = !DILocation(line: 1081, column: 31, scope: !7709)
!7735 = !DILocation(line: 1082, column: 3, scope: !7709)
!7736 = !DILocation(line: 1083, column: 14, scope: !7709)
!7737 = !DILocation(line: 1084, column: 3, scope: !7709)
!7738 = !DILocation(line: 1085, column: 3, scope: !7709)
!7739 = !DILocation(line: 1086, column: 1, scope: !7709)
!7740 = distinct !DISubprogram(name: "fully_constant_expression", scope: !3, file: !3, line: 1151, type: !7741, scopeLine: 1152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7743)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!754, !754}
!7743 = !{!7744, !7745, !7748, !7751, !7752, !7753, !7756, !7757, !7758, !7761, !7762, !7763, !7765, !7766, !7767, !7770, !7771, !7774, !7776, !7777, !7778, !7781, !7782, !7783, !7786}
!7744 = !DILocalVariable(name: "e", arg: 1, scope: !7740, file: !3, line: 1151, type: !754)
!7745 = !DILocalVariable(name: "nary", scope: !7746, file: !3, line: 1159, type: !2054)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 1158, column: 7)
!7747 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 1154, column: 5)
!7748 = !DILocalVariable(name: "naryop0", scope: !7749, file: !3, line: 1175, type: !765)
!7749 = distinct !DILexicalBlock(scope: !7750, file: !3, line: 1172, column: 6)
!7750 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 1161, column: 4)
!7751 = !DILocalVariable(name: "naryop1", scope: !7749, file: !3, line: 1176, type: !765)
!7752 = !DILocalVariable(name: "result", scope: !7749, file: !3, line: 1177, type: !765)
!7753 = !DILocalVariable(name: "rep0", scope: !7754, file: !3, line: 1180, type: !754)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 1179, column: 3)
!7755 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 1178, column: 12)
!7756 = !DILocalVariable(name: "vrep0", scope: !7754, file: !3, line: 1181, type: !6)
!7757 = !DILocalVariable(name: "const0", scope: !7754, file: !3, line: 1182, type: !765)
!7758 = !DILocalVariable(name: "rep1", scope: !7759, file: !3, line: 1188, type: !754)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 1187, column: 3)
!7760 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 1186, column: 12)
!7761 = !DILocalVariable(name: "vrep1", scope: !7759, file: !3, line: 1189, type: !6)
!7762 = !DILocalVariable(name: "const1", scope: !7759, file: !3, line: 1190, type: !765)
!7763 = !DILocalVariable(name: "naryop0", scope: !7764, file: !3, line: 1215, type: !765)
!7764 = distinct !DILexicalBlock(scope: !7750, file: !3, line: 1212, column: 6)
!7765 = !DILocalVariable(name: "const0", scope: !7764, file: !3, line: 1216, type: !765)
!7766 = !DILocalVariable(name: "result", scope: !7764, file: !3, line: 1216, type: !765)
!7767 = !DILocalVariable(name: "rep0", scope: !7768, file: !3, line: 1221, type: !754)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 1220, column: 3)
!7769 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 1217, column: 12)
!7770 = !DILocalVariable(name: "vrep0", scope: !7768, file: !3, line: 1222, type: !6)
!7771 = !DILocalVariable(name: "type1", scope: !7772, file: !3, line: 1228, type: !765)
!7772 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 1227, column: 3)
!7773 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 1226, column: 12)
!7774 = !DILocalVariable(name: "ref", scope: !7775, file: !3, line: 1242, type: !2068)
!7775 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 1241, column: 7)
!7776 = !DILocalVariable(name: "operands", scope: !7775, file: !3, line: 1243, type: !2078)
!7777 = !DILocalVariable(name: "op", scope: !7775, file: !3, line: 1244, type: !2899)
!7778 = !DILocalVariable(name: "arg0", scope: !7779, file: !3, line: 1256, type: !2899)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !3, line: 1255, column: 4)
!7780 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 1249, column: 6)
!7781 = !DILocalVariable(name: "arg1", scope: !7779, file: !3, line: 1256, type: !2899)
!7782 = !DILocalVariable(name: "anyconst", scope: !7779, file: !3, line: 1257, type: !663)
!7783 = !DILocalVariable(name: "folded", scope: !7784, file: !3, line: 1272, type: !765)
!7784 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 1271, column: 8)
!7785 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 1270, column: 10)
!7786 = !DILabel(scope: !7750, name: "do_unary", file: !3, line: 1211)
!7787 = !DILocation(line: 0, scope: !7740)
!7788 = !DILocation(line: 1153, column: 14, scope: !7740)
!7789 = !DILocation(line: 1153, column: 3, scope: !7740)
!7790 = !DILocation(line: 1159, column: 22, scope: !7746)
!7791 = !DILocation(line: 0, scope: !7746)
!7792 = !DILocation(line: 1160, column: 10, scope: !7746)
!7793 = !DILocation(line: 1160, column: 2, scope: !7746)
!7794 = !DILocation(line: 1163, column: 23, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7750, file: !3, line: 1163, column: 10)
!7796 = !DILocation(line: 1163, column: 10, scope: !7750)
!7797 = !DILocation(line: 1165, column: 23, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7750, file: !3, line: 1165, column: 10)
!7799 = !DILocation(line: 1166, column: 3, scope: !7798)
!7800 = !DILocation(line: 1166, column: 19, scope: !7798)
!7801 = !DILocation(line: 1167, column: 3, scope: !7798)
!7802 = !DILocation(line: 1167, column: 19, scope: !7798)
!7803 = !DILocation(line: 1165, column: 10, scope: !7750)
!7804 = !DILocation(line: 1175, column: 23, scope: !7749)
!7805 = !DILocation(line: 0, scope: !7749)
!7806 = !DILocation(line: 1176, column: 23, scope: !7749)
!7807 = !DILocation(line: 1178, column: 13, scope: !7755)
!7808 = !DILocation(line: 1178, column: 12, scope: !7749)
!7809 = !DILocation(line: 1180, column: 21, scope: !7754)
!7810 = !DILocation(line: 0, scope: !7754)
!7811 = !DILocation(line: 1181, column: 26, scope: !7754)
!7812 = !DILocation(line: 1182, column: 19, scope: !7754)
!7813 = !DILocation(line: 1183, column: 9, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 1183, column: 9)
!7815 = !DILocation(line: 1183, column: 9, scope: !7754)
!7816 = !DILocation(line: 1184, column: 17, scope: !7814)
!7817 = !DILocation(line: 1184, column: 7, scope: !7814)
!7818 = !DILocation(line: 1186, column: 13, scope: !7760)
!7819 = !DILocation(line: 1186, column: 12, scope: !7749)
!7820 = !DILocation(line: 1188, column: 21, scope: !7759)
!7821 = !DILocation(line: 0, scope: !7759)
!7822 = !DILocation(line: 1189, column: 26, scope: !7759)
!7823 = !DILocation(line: 1190, column: 19, scope: !7759)
!7824 = !DILocation(line: 1191, column: 9, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 1191, column: 9)
!7826 = !DILocation(line: 1191, column: 9, scope: !7759)
!7827 = !DILocation(line: 1192, column: 17, scope: !7825)
!7828 = !DILocation(line: 1192, column: 7, scope: !7825)
!7829 = !DILocation(line: 1194, column: 17, scope: !7749)
!7830 = !DILocation(line: 1196, column: 12, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 1196, column: 12)
!7832 = !DILocation(line: 1196, column: 19, scope: !7831)
!7833 = !DILocation(line: 1196, column: 22, scope: !7831)
!7834 = !DILocation(line: 1196, column: 12, scope: !7749)
!7835 = !DILocation(line: 1197, column: 10, scope: !7831)
!7836 = !DILocation(line: 1197, column: 3, scope: !7831)
!7837 = !DILocation(line: 1205, column: 23, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7750, file: !3, line: 1205, column: 10)
!7839 = !DILocation(line: 1206, column: 3, scope: !7838)
!7840 = !DILocation(line: 1206, column: 19, scope: !7838)
!7841 = !DILocation(line: 1207, column: 3, scope: !7838)
!7842 = !DILocation(line: 1207, column: 19, scope: !7838)
!7843 = !DILocation(line: 1205, column: 10, scope: !7750)
!7844 = !DILocation(line: 1211, column: 1, scope: !7750)
!7845 = !DILocation(line: 1215, column: 23, scope: !7764)
!7846 = !DILocation(line: 0, scope: !7764)
!7847 = !DILocation(line: 1217, column: 12, scope: !7769)
!7848 = !DILocation(line: 1217, column: 12, scope: !7764)
!7849 = !DILocation(line: 1221, column: 21, scope: !7768)
!7850 = !DILocation(line: 0, scope: !7768)
!7851 = !DILocation(line: 1222, column: 26, scope: !7768)
!7852 = !DILocation(line: 1223, column: 14, scope: !7768)
!7853 = !DILocation(line: 0, scope: !7769)
!7854 = !DILocation(line: 1226, column: 12, scope: !7773)
!7855 = !DILocation(line: 1226, column: 12, scope: !7764)
!7856 = !DILocation(line: 1228, column: 18, scope: !7772)
!7857 = !DILocation(line: 0, scope: !7772)
!7858 = !DILocation(line: 1229, column: 14, scope: !7772)
!7859 = !DILocation(line: 1230, column: 14, scope: !7772)
!7860 = !DILocation(line: 1231, column: 3, scope: !7772)
!7861 = !DILocation(line: 1232, column: 12, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 1232, column: 12)
!7863 = !DILocation(line: 1232, column: 19, scope: !7862)
!7864 = !DILocation(line: 1232, column: 22, scope: !7862)
!7865 = !DILocation(line: 1232, column: 12, scope: !7764)
!7866 = !DILocation(line: 1233, column: 10, scope: !7862)
!7867 = !DILocation(line: 1233, column: 3, scope: !7862)
!7868 = !DILocation(line: 1242, column: 23, scope: !7775)
!7869 = !DILocation(line: 0, scope: !7775)
!7870 = !DILocation(line: 1243, column: 49, scope: !7775)
!7871 = !DILocation(line: 1248, column: 7, scope: !7775)
!7872 = !DILocation(line: 1249, column: 10, scope: !7780)
!7873 = !DILocation(line: 1249, column: 17, scope: !7780)
!7874 = !DILocation(line: 1250, column: 6, scope: !7780)
!7875 = !DILocation(line: 1250, column: 9, scope: !7780)
!7876 = !DILocation(line: 1250, column: 29, scope: !7780)
!7877 = !DILocation(line: 1251, column: 6, scope: !7780)
!7878 = !DILocation(line: 1251, column: 9, scope: !7780)
!7879 = !DILocation(line: 1251, column: 47, scope: !7780)
!7880 = !DILocation(line: 1252, column: 6, scope: !7780)
!7881 = !DILocation(line: 1252, column: 9, scope: !7780)
!7882 = !DILocation(line: 1253, column: 6, scope: !7780)
!7883 = !DILocation(line: 1253, column: 9, scope: !7780)
!7884 = !DILocation(line: 1253, column: 50, scope: !7780)
!7885 = !DILocation(line: 1254, column: 6, scope: !7780)
!7886 = !DILocation(line: 1254, column: 9, scope: !7780)
!7887 = !DILocation(line: 1254, column: 50, scope: !7780)
!7888 = !DILocation(line: 1249, column: 6, scope: !7775)
!7889 = !DILocation(line: 0, scope: !7779)
!7890 = !DILocation(line: 1258, column: 13, scope: !7779)
!7891 = !DILocation(line: 1259, column: 10, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 1259, column: 10)
!7893 = !DILocation(line: 1259, column: 51, scope: !7892)
!7894 = !DILocation(line: 1259, column: 10, scope: !7779)
!7895 = !DILocation(line: 1260, column: 15, scope: !7892)
!7896 = !DILocation(line: 1260, column: 8, scope: !7892)
!7897 = !DILocation(line: 1261, column: 10, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 1261, column: 10)
!7899 = !DILocation(line: 1261, column: 41, scope: !7898)
!7900 = !DILocation(line: 1262, column: 3, scope: !7898)
!7901 = !DILocation(line: 1262, column: 20, scope: !7898)
!7902 = !DILocation(line: 1263, column: 7, scope: !7898)
!7903 = !DILocation(line: 1263, column: 41, scope: !7898)
!7904 = !DILocation(line: 1263, column: 10, scope: !7898)
!7905 = !DILocation(line: 1261, column: 10, scope: !7779)
!7906 = !DILocation(line: 1264, column: 8, scope: !7898)
!7907 = !DILocation(line: 1265, column: 10, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 1265, column: 10)
!7909 = !DILocation(line: 1266, column: 3, scope: !7908)
!7910 = !DILocation(line: 1266, column: 7, scope: !7908)
!7911 = !DILocation(line: 1266, column: 38, scope: !7908)
!7912 = !DILocation(line: 1267, column: 7, scope: !7908)
!7913 = !DILocation(line: 1267, column: 24, scope: !7908)
!7914 = !DILocation(line: 1268, column: 4, scope: !7908)
!7915 = !DILocation(line: 1268, column: 38, scope: !7908)
!7916 = !DILocation(line: 1268, column: 7, scope: !7908)
!7917 = !DILocation(line: 1265, column: 10, scope: !7779)
!7918 = !DILocation(line: 1269, column: 8, scope: !7908)
!7919 = !DILocation(line: 1270, column: 10, scope: !7785)
!7920 = !DILocation(line: 1270, column: 10, scope: !7779)
!7921 = !DILocation(line: 1272, column: 17, scope: !7784)
!7922 = !DILocation(line: 0, scope: !7784)
!7923 = !DILocation(line: 1276, column: 7, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 1276, column: 7)
!7925 = !DILocation(line: 1277, column: 7, scope: !7924)
!7926 = !DILocation(line: 1277, column: 10, scope: !7924)
!7927 = !DILocation(line: 1277, column: 29, scope: !7924)
!7928 = !DILocation(line: 1276, column: 7, scope: !7784)
!7929 = !DILocation(line: 1278, column: 14, scope: !7924)
!7930 = !DILocation(line: 1278, column: 5, scope: !7924)
!7931 = !DILocation(line: 1279, column: 7, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 1279, column: 7)
!7933 = !DILocation(line: 1280, column: 7, scope: !7932)
!7934 = !DILocation(line: 1280, column: 10, scope: !7932)
!7935 = !DILocation(line: 1279, column: 7, scope: !7784)
!7936 = !DILocation(line: 1281, column: 12, scope: !7932)
!7937 = !DILocation(line: 1281, column: 5, scope: !7932)
!7938 = !DILocation(line: 1283, column: 4, scope: !7780)
!7939 = !DILocation(line: 1284, column: 4, scope: !7775)
!7940 = !DILocation(line: 0, scope: !7747)
!7941 = !DILocation(line: 1290, column: 1, scope: !7740)
!7942 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_heap_copy", scope: !2055, file: !2055, line: 84, type: !7943, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7945)
!7943 = !DISubroutineType(types: !7944)
!7944 = !{!2078, !3372}
!7945 = !{!7946, !7947, !7948}
!7946 = !DILocalVariable(name: "vec_", arg: 1, scope: !7942, file: !2055, line: 84, type: !3372)
!7947 = !DILocalVariable(name: "len_", scope: !7942, file: !2055, line: 84, type: !1170)
!7948 = !DILocalVariable(name: "new_vec_", scope: !7942, file: !2055, line: 84, type: !2078)
!7949 = !DILocation(line: 0, scope: !7942)
!7950 = !DILocation(line: 84, column: 1, scope: !7942)
!7951 = !DILocation(line: 84, column: 1, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7942, file: !2055, line: 84, column: 1)
!7953 = !DILocation(line: 84, column: 1, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7952, file: !2055, line: 84, column: 1)
!7955 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_replace", scope: !2055, file: !2055, line: 83, type: !7956, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7960)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{!2900, !3372, !6, !7958}
!7958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7959, size: 64)
!7959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2090)
!7960 = !{!7961, !7962, !7963, !7964}
!7961 = !DILocalVariable(name: "vec_", arg: 1, scope: !7955, file: !2055, line: 83, type: !3372)
!7962 = !DILocalVariable(name: "ix_", arg: 2, scope: !7955, file: !2055, line: 83, type: !6)
!7963 = !DILocalVariable(name: "obj_", arg: 3, scope: !7955, file: !2055, line: 83, type: !7958)
!7964 = !DILocalVariable(name: "slot_", scope: !7955, file: !2055, line: 83, type: !2900)
!7965 = !DILocation(line: 0, scope: !7955)
!7966 = !DILocation(line: 83, column: 1, scope: !7955)
!7967 = !DILocation(line: 83, column: 1, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7955, file: !2055, line: 83, column: 1)
!7969 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_index", scope: !2055, file: !2055, line: 83, type: !7970, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7972)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{!2900, !3372, !6}
!7972 = !{!7973, !7974}
!7973 = !DILocalVariable(name: "vec_", arg: 1, scope: !7969, file: !2055, line: 83, type: !3372)
!7974 = !DILocalVariable(name: "ix_", arg: 2, scope: !7969, file: !2055, line: 83, type: !6)
!7975 = !DILocation(line: 0, scope: !7969)
!7976 = !DILocation(line: 83, column: 1, scope: !7969)
!7977 = distinct !DISubprogram(name: "translate_vuse_through_block", scope: !3, file: !3, line: 1297, type: !7978, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7980)
!7978 = !DISubroutineType(types: !7979)
!7979 = !{!765, !2078, !1334, !765, !765, !1477, !1477, !662}
!7980 = !{!7981, !7982, !7983, !7984, !7985, !7986, !7987, !7988, !7989, !8000, !8001, !8002}
!7981 = !DILocalVariable(name: "operands", arg: 1, scope: !7977, file: !3, line: 1297, type: !2078)
!7982 = !DILocalVariable(name: "set", arg: 2, scope: !7977, file: !3, line: 1298, type: !1334)
!7983 = !DILocalVariable(name: "type", arg: 3, scope: !7977, file: !3, line: 1298, type: !765)
!7984 = !DILocalVariable(name: "vuse", arg: 4, scope: !7977, file: !3, line: 1298, type: !765)
!7985 = !DILocalVariable(name: "phiblock", arg: 5, scope: !7977, file: !3, line: 1299, type: !1477)
!7986 = !DILocalVariable(name: "block", arg: 6, scope: !7977, file: !3, line: 1300, type: !1477)
!7987 = !DILocalVariable(name: "same_valid", arg: 7, scope: !7977, file: !3, line: 1300, type: !662)
!7988 = !DILocalVariable(name: "phi", scope: !7977, file: !3, line: 1302, type: !1025)
!7989 = !DILocalVariable(name: "ref", scope: !7977, file: !3, line: 1303, type: !7990)
!7990 = !DIDerivedType(tag: DW_TAG_typedef, name: "ao_ref", file: !1586, line: 86, baseType: !7991)
!7991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ao_ref_s", file: !1586, line: 63, size: 384, elements: !7992)
!7992 = !{!7993, !7994, !7995, !7996, !7997, !7998, !7999}
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7991, file: !1586, line: 67, baseType: !765, size: 64)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7991, file: !1586, line: 73, baseType: !765, size: 64, offset: 64)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7991, file: !1586, line: 75, baseType: !723, size: 64, offset: 128)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7991, file: !1586, line: 77, baseType: !723, size: 64, offset: 192)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !7991, file: !1586, line: 79, baseType: !723, size: 64, offset: 256)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "ref_alias_set", scope: !7991, file: !1586, line: 82, baseType: !1334, size: 32, offset: 320)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "base_alias_set", scope: !7991, file: !1586, line: 85, baseType: !1334, size: 32, offset: 352)
!8000 = !DILocalVariable(name: "e", scope: !7977, file: !3, line: 1304, type: !1005)
!8001 = !DILocalVariable(name: "use_oracle", scope: !7977, file: !3, line: 1305, type: !663)
!8002 = !DILocalVariable(name: "visited", scope: !8003, file: !3, line: 1339, type: !688)
!8003 = distinct !DILexicalBlock(scope: !8004, file: !3, line: 1338, column: 2)
!8004 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 1337, column: 11)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 1336, column: 5)
!8006 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 1335, column: 7)
!8007 = !DILocation(line: 0, scope: !7977)
!8008 = !DILocation(line: 1302, column: 16, scope: !7977)
!8009 = !DILocation(line: 1303, column: 3, scope: !7977)
!8010 = !DILocation(line: 1307, column: 15, scope: !7977)
!8011 = !DILocation(line: 1309, column: 7, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 1309, column: 7)
!8013 = !DILocation(line: 1309, column: 23, scope: !8012)
!8014 = !DILocation(line: 1309, column: 7, scope: !7977)
!8015 = !DILocation(line: 1312, column: 16, scope: !7977)
!8016 = !DILocation(line: 1317, column: 7, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 1317, column: 7)
!8018 = !DILocation(line: 1317, column: 25, scope: !8017)
!8019 = !DILocation(line: 1317, column: 7, scope: !7977)
!8020 = !DILocation(line: 1318, column: 9, scope: !8017)
!8021 = !DILocation(line: 1318, column: 5, scope: !8017)
!8022 = !DILocation(line: 1319, column: 12, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 1319, column: 12)
!8024 = !DILocation(line: 1319, column: 12, scope: !8017)
!8025 = !DILocation(line: 1320, column: 5, scope: !8023)
!8026 = !DILocation(line: 1320, column: 13, scope: !8023)
!8027 = !DILocation(line: 1320, column: 12, scope: !8023)
!8028 = !DILocation(line: 1322, column: 9, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8023, file: !3, line: 1321, column: 7)
!8030 = !DILocation(line: 1323, column: 8, scope: !8029)
!8031 = !DILocation(line: 1324, column: 6, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 1324, column: 6)
!8033 = !DILocation(line: 1324, column: 22, scope: !8032)
!8034 = !DILocation(line: 1324, column: 6, scope: !8029)
!8035 = !DILocation(line: 1326, column: 6, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 1326, column: 6)
!8037 = !DILocation(line: 1326, column: 24, scope: !8036)
!8038 = !DILocation(line: 1326, column: 6, scope: !8029)
!8039 = distinct !{!8039, !8025, !8040}
!8040 = !DILocation(line: 1331, column: 7, scope: !8023)
!8041 = !DILocation(line: 1328, column: 10, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 1327, column: 4)
!8043 = !DILocation(line: 1329, column: 6, scope: !8042)
!8044 = !DILocation(line: 1335, column: 7, scope: !8006)
!8045 = !DILocation(line: 0, scope: !8017)
!8046 = !DILocation(line: 1335, column: 7, scope: !7977)
!8047 = !DILocation(line: 1337, column: 11, scope: !8004)
!8048 = !DILocation(line: 1337, column: 11, scope: !8005)
!8049 = !DILocation(line: 1339, column: 4, scope: !8003)
!8050 = !DILocation(line: 0, scope: !8003)
!8051 = !DILocation(line: 1339, column: 11, scope: !8003)
!8052 = !DILocation(line: 1342, column: 11, scope: !8003)
!8053 = !DILocation(line: 1343, column: 8, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 1343, column: 8)
!8055 = !DILocation(line: 1343, column: 8, scope: !8003)
!8056 = !DILocation(line: 1344, column: 6, scope: !8054)
!8057 = !DILocation(line: 1345, column: 2, scope: !8004)
!8058 = !DILocation(line: 1345, column: 2, scope: !8003)
!8059 = !DILocation(line: 1348, column: 11, scope: !8005)
!8060 = !DILocation(line: 1352, column: 16, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 1349, column: 2)
!8062 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 1348, column: 11)
!8063 = !DILocation(line: 1353, column: 11, scope: !8061)
!8064 = !DILocation(line: 1354, column: 2, scope: !8061)
!8065 = !DILocation(line: 1360, column: 14, scope: !8005)
!8066 = !DILocation(line: 1360, column: 7, scope: !8005)
!8067 = !DILocation(line: 1364, column: 1, scope: !7977)
!8068 = distinct !DISubprogram(name: "gimple_bb", scope: !587, file: !587, line: 1112, type: !8069, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8071)
!8069 = !DISubroutineType(types: !8070)
!8070 = !{!989, !5090}
!8071 = !{!8072}
!8072 = !DILocalVariable(name: "g", arg: 1, scope: !8068, file: !587, line: 1112, type: !5090)
!8073 = !DILocation(line: 0, scope: !8068)
!8074 = !DILocation(line: 1114, column: 20, scope: !8068)
!8075 = !DILocation(line: 1114, column: 3, scope: !8068)
!8076 = distinct !DISubprogram(name: "bitmap_find_leader", scope: !3, file: !3, line: 1895, type: !8077, scopeLine: 1896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8079)
!8077 = !DISubroutineType(types: !8078)
!8078 = !{!754, !683, !6, !1025}
!8079 = !{!8080, !8081, !8082, !8083, !8086, !8087, !8088, !8092, !8095, !8096, !8097, !8101}
!8080 = !DILocalVariable(name: "set", arg: 1, scope: !8076, file: !3, line: 1895, type: !683)
!8081 = !DILocalVariable(name: "val", arg: 2, scope: !8076, file: !3, line: 1895, type: !6)
!8082 = !DILocalVariable(name: "stmt", arg: 3, scope: !8076, file: !3, line: 1895, type: !1025)
!8083 = !DILocalVariable(name: "i", scope: !8084, file: !3, line: 1899, type: !6)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 1898, column: 5)
!8085 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 1897, column: 7)
!8086 = !DILocalVariable(name: "bi", scope: !8084, file: !3, line: 1900, type: !3046)
!8087 = !DILocalVariable(name: "exprset", scope: !8084, file: !3, line: 1901, type: !683)
!8088 = !DILocalVariable(name: "expr", scope: !8089, file: !3, line: 1905, type: !754)
!8089 = distinct !DILexicalBlock(scope: !8090, file: !3, line: 1904, column: 2)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 1903, column: 7)
!8091 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 1903, column: 7)
!8092 = !DILocalVariable(name: "i", scope: !8093, file: !3, line: 1923, type: !6)
!8093 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 1911, column: 5)
!8094 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 1910, column: 7)
!8095 = !DILocalVariable(name: "bi", scope: !8093, file: !3, line: 1924, type: !3046)
!8096 = !DILocalVariable(name: "exprset", scope: !8093, file: !3, line: 1925, type: !683)
!8097 = !DILocalVariable(name: "val", scope: !8098, file: !3, line: 1930, type: !754)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 1929, column: 2)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 1927, column: 7)
!8100 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 1927, column: 7)
!8101 = !DILocalVariable(name: "def_stmt", scope: !8102, file: !3, line: 1935, type: !1025)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 1934, column: 6)
!8103 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 1933, column: 8)
!8104 = !DILocation(line: 0, scope: !8076)
!8105 = !DILocation(line: 1897, column: 7, scope: !8085)
!8106 = !DILocation(line: 1897, column: 7, scope: !8076)
!8107 = !DILocation(line: 1899, column: 7, scope: !8084)
!8108 = !DILocation(line: 1900, column: 7, scope: !8084)
!8109 = !DILocation(line: 1901, column: 30, scope: !8084)
!8110 = !DILocation(line: 0, scope: !8084)
!8111 = !DILocation(line: 1903, column: 7, scope: !8091)
!8112 = !DILocation(line: 1903, column: 7, scope: !8090)
!8113 = !DILocation(line: 1905, column: 39, scope: !8089)
!8114 = !DILocation(line: 1905, column: 20, scope: !8089)
!8115 = !DILocation(line: 0, scope: !8089)
!8116 = !DILocation(line: 1906, column: 14, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 1906, column: 8)
!8118 = !DILocation(line: 1906, column: 19, scope: !8117)
!8119 = !DILocation(line: 0, scope: !8090)
!8120 = distinct !{!8120, !8111, !8121}
!8121 = !DILocation(line: 1908, column: 2, scope: !8091)
!8122 = !DILocation(line: 1909, column: 5, scope: !8085)
!8123 = !DILocation(line: 1910, column: 7, scope: !8094)
!8124 = !DILocation(line: 1910, column: 7, scope: !8076)
!8125 = !DILocation(line: 1923, column: 7, scope: !8093)
!8126 = !DILocation(line: 1924, column: 7, scope: !8093)
!8127 = !DILocation(line: 1925, column: 30, scope: !8093)
!8128 = !DILocation(line: 0, scope: !8093)
!8129 = !DILocation(line: 1927, column: 7, scope: !8100)
!8130 = !DILocation(line: 0, scope: !8103)
!8131 = !DILocation(line: 1927, column: 7, scope: !8099)
!8132 = !DILocation(line: 1930, column: 38, scope: !8098)
!8133 = !DILocation(line: 1930, column: 19, scope: !8098)
!8134 = !DILocation(line: 0, scope: !8098)
!8135 = !DILocation(line: 1943, column: 5, scope: !8094)
!8136 = !DILocation(line: 1907, column: 6, scope: !8117)
!8137 = !DILocation(line: 1935, column: 26, scope: !8102)
!8138 = !DILocation(line: 0, scope: !8102)
!8139 = !DILocation(line: 1936, column: 12, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 1936, column: 12)
!8141 = !DILocation(line: 1936, column: 35, scope: !8140)
!8142 = !DILocation(line: 1937, column: 5, scope: !8140)
!8143 = !DILocation(line: 1937, column: 8, scope: !8140)
!8144 = !DILocation(line: 1937, column: 32, scope: !8140)
!8145 = !DILocation(line: 1937, column: 29, scope: !8140)
!8146 = !DILocation(line: 1938, column: 5, scope: !8140)
!8147 = !DILocation(line: 1938, column: 8, scope: !8140)
!8148 = !DILocation(line: 1938, column: 33, scope: !8140)
!8149 = !DILocation(line: 1938, column: 30, scope: !8140)
!8150 = !DILocation(line: 1936, column: 12, scope: !8102)
!8151 = !DILocation(line: 1940, column: 6, scope: !8103)
!8152 = !DILocation(line: 1941, column: 4, scope: !8098)
!8153 = distinct !{!8153, !8129, !8154}
!8154 = !DILocation(line: 1942, column: 2, scope: !8100)
!8155 = !DILocation(line: 1944, column: 3, scope: !8076)
!8156 = !DILocation(line: 1945, column: 1, scope: !8076)
!8157 = distinct !DISubprogram(name: "bitmap_set_contains_value", scope: !3, file: !3, line: 820, type: !8158, scopeLine: 821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8160)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{!663, !683, !6}
!8160 = !{!8161, !8162}
!8161 = !DILocalVariable(name: "set", arg: 1, scope: !8157, file: !3, line: 820, type: !683)
!8162 = !DILocalVariable(name: "value_id", arg: 2, scope: !8157, file: !3, line: 820, type: !6)
!8163 = !DILocation(line: 0, scope: !8157)
!8164 = !DILocation(line: 822, column: 7, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 822, column: 7)
!8166 = !DILocation(line: 822, column: 7, scope: !8157)
!8167 = !DILocation(line: 825, column: 8, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 825, column: 7)
!8169 = !DILocation(line: 825, column: 12, scope: !8168)
!8170 = !DILocation(line: 825, column: 15, scope: !8168)
!8171 = !DILocation(line: 825, column: 7, scope: !8157)
!8172 = !DILocation(line: 828, column: 29, scope: !8157)
!8173 = !DILocation(line: 828, column: 10, scope: !8157)
!8174 = !DILocation(line: 828, column: 3, scope: !8157)
!8175 = !DILocation(line: 829, column: 1, scope: !8157)
!8176 = distinct !DISubprogram(name: "bmp_iter_and_init", scope: !692, file: !692, line: 266, type: !8177, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8179)
!8177 = !DISubroutineType(types: !8178)
!8178 = !{null, !3399, !3400, !3400, !6, !3355}
!8179 = !{!8180, !8181, !8182, !8183, !8184}
!8180 = !DILocalVariable(name: "bi", arg: 1, scope: !8176, file: !692, line: 266, type: !3399)
!8181 = !DILocalVariable(name: "map1", arg: 2, scope: !8176, file: !692, line: 266, type: !3400)
!8182 = !DILocalVariable(name: "map2", arg: 3, scope: !8176, file: !692, line: 266, type: !3400)
!8183 = !DILocalVariable(name: "start_bit", arg: 4, scope: !8176, file: !692, line: 267, type: !6)
!8184 = !DILocalVariable(name: "bit_no", arg: 5, scope: !8176, file: !692, line: 267, type: !3355)
!8185 = !DILocation(line: 0, scope: !8176)
!8186 = !DILocation(line: 269, column: 20, scope: !8176)
!8187 = !DILocation(line: 269, column: 12, scope: !8176)
!8188 = !DILocation(line: 270, column: 20, scope: !8176)
!8189 = !DILocation(line: 270, column: 7, scope: !8176)
!8190 = !DILocation(line: 270, column: 12, scope: !8176)
!8191 = !DILocation(line: 0, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8193, file: !692, line: 276, column: 11)
!8193 = distinct !DILexicalBlock(scope: !8176, file: !692, line: 275, column: 5)
!8194 = !DILocation(line: 274, column: 3, scope: !8176)
!8195 = !DILocation(line: 276, column: 12, scope: !8192)
!8196 = !DILocation(line: 276, column: 11, scope: !8193)
!8197 = !DILocation(line: 278, column: 13, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8192, file: !692, line: 277, column: 2)
!8199 = !DILocation(line: 279, column: 4, scope: !8198)
!8200 = !DILocation(line: 282, column: 11, scope: !8193)
!8201 = distinct !{!8201, !8194, !8202}
!8202 = !DILocation(line: 285, column: 5, scope: !8176)
!8203 = !DILocation(line: 288, column: 3, scope: !8176)
!8204 = !DILocation(line: 290, column: 16, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8206, file: !692, line: 290, column: 11)
!8206 = distinct !DILexicalBlock(scope: !8176, file: !692, line: 289, column: 5)
!8207 = !DILocation(line: 290, column: 12, scope: !8205)
!8208 = !DILocation(line: 290, column: 11, scope: !8206)
!8209 = !DILocation(line: 292, column: 24, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8205, file: !692, line: 291, column: 2)
!8211 = !DILocation(line: 292, column: 13, scope: !8210)
!8212 = !DILocation(line: 302, column: 17, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8176, file: !692, line: 302, column: 7)
!8214 = !DILocation(line: 293, column: 4, scope: !8210)
!8215 = !DILocation(line: 296, column: 21, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8206, file: !692, line: 296, column: 11)
!8217 = !DILocation(line: 296, column: 39, scope: !8216)
!8218 = !DILocation(line: 296, column: 26, scope: !8216)
!8219 = !DILocation(line: 296, column: 11, scope: !8206)
!8220 = !DILocation(line: 298, column: 28, scope: !8206)
!8221 = !DILocation(line: 298, column: 16, scope: !8206)
!8222 = distinct !{!8222, !8203, !8223}
!8223 = !DILocation(line: 299, column: 5, scope: !8176)
!8224 = !DILocation(line: 0, scope: !8213)
!8225 = !DILocation(line: 302, column: 35, scope: !8213)
!8226 = !DILocation(line: 302, column: 11, scope: !8213)
!8227 = !DILocation(line: 302, column: 22, scope: !8213)
!8228 = !DILocation(line: 302, column: 7, scope: !8176)
!8229 = !DILocation(line: 306, column: 26, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8231, file: !692, line: 306, column: 11)
!8231 = distinct !DILexicalBlock(scope: !8213, file: !692, line: 303, column: 5)
!8232 = !DILocation(line: 306, column: 11, scope: !8231)
!8233 = !DILocation(line: 307, column: 29, scope: !8230)
!8234 = !DILocation(line: 307, column: 2, scope: !8230)
!8235 = !DILocation(line: 309, column: 11, scope: !8231)
!8236 = !DILocation(line: 309, column: 19, scope: !8231)
!8237 = !DILocation(line: 310, column: 18, scope: !8231)
!8238 = !DILocation(line: 310, column: 48, scope: !8231)
!8239 = !DILocation(line: 310, column: 46, scope: !8231)
!8240 = !DILocation(line: 311, column: 11, scope: !8231)
!8241 = !DILocation(line: 311, column: 16, scope: !8231)
!8242 = !DILocation(line: 312, column: 5, scope: !8231)
!8243 = !DILocation(line: 317, column: 11, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8213, file: !692, line: 314, column: 5)
!8245 = !DILocation(line: 317, column: 19, scope: !8244)
!8246 = !DILocation(line: 318, column: 11, scope: !8244)
!8247 = !DILocation(line: 318, column: 16, scope: !8244)
!8248 = !DILocation(line: 325, column: 13, scope: !8176)
!8249 = !DILocation(line: 327, column: 11, scope: !8176)
!8250 = !DILocation(line: 328, column: 1, scope: !8176)
!8251 = distinct !DISubprogram(name: "bmp_iter_and", scope: !692, file: !692, line: 440, type: !3443, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8252)
!8252 = !{!8253, !8254, !8255}
!8253 = !DILocalVariable(name: "bi", arg: 1, scope: !8251, file: !692, line: 440, type: !3399)
!8254 = !DILocalVariable(name: "bit_no", arg: 2, scope: !8251, file: !692, line: 440, type: !3355)
!8255 = !DILabel(scope: !8256, name: "next_bit", file: !692, line: 445)
!8256 = distinct !DILexicalBlock(scope: !8257, file: !692, line: 444, column: 5)
!8257 = distinct !DILexicalBlock(scope: !8251, file: !692, line: 443, column: 7)
!8258 = !DILocation(line: 0, scope: !8251)
!8259 = !DILocation(line: 443, column: 11, scope: !8257)
!8260 = !DILocation(line: 443, column: 7, scope: !8257)
!8261 = !DILocation(line: 443, column: 7, scope: !8251)
!8262 = !DILocation(line: 466, column: 43, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8264, file: !692, line: 465, column: 2)
!8264 = distinct !DILexicalBlock(scope: !8251, file: !692, line: 462, column: 5)
!8265 = !DILocation(line: 446, column: 7, scope: !8256)
!8266 = !DILocation(line: 445, column: 5, scope: !8256)
!8267 = !DILocation(line: 446, column: 20, scope: !8256)
!8268 = !DILocation(line: 446, column: 25, scope: !8256)
!8269 = !DILocation(line: 446, column: 14, scope: !8256)
!8270 = !DILocation(line: 448, column: 13, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8256, file: !692, line: 447, column: 2)
!8272 = !DILocation(line: 449, column: 12, scope: !8271)
!8273 = distinct !{!8273, !8265, !8274}
!8274 = !DILocation(line: 450, column: 2, scope: !8256)
!8275 = !DILocation(line: 457, column: 15, scope: !8251)
!8276 = !DILocation(line: 457, column: 42, scope: !8251)
!8277 = !DILocation(line: 458, column: 26, scope: !8251)
!8278 = !DILocation(line: 457, column: 11, scope: !8251)
!8279 = !DILocation(line: 459, column: 7, scope: !8251)
!8280 = !DILocation(line: 459, column: 14, scope: !8251)
!8281 = !DILocation(line: 0, scope: !8263)
!8282 = !DILocation(line: 0, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8284, file: !692, line: 479, column: 6)
!8284 = distinct !DILexicalBlock(scope: !8264, file: !692, line: 475, column: 2)
!8285 = !DILocation(line: 0, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8284, file: !692, line: 489, column: 6)
!8287 = !DILocation(line: 461, column: 3, scope: !8251)
!8288 = !DILocation(line: 464, column: 7, scope: !8264)
!8289 = !DILocation(line: 464, column: 18, scope: !8264)
!8290 = !DILocation(line: 464, column: 26, scope: !8264)
!8291 = !DILocation(line: 480, column: 23, scope: !8283)
!8292 = !DILocation(line: 474, column: 7, scope: !8264)
!8293 = !DILocation(line: 466, column: 19, scope: !8263)
!8294 = !DILocation(line: 466, column: 15, scope: !8263)
!8295 = !DILocation(line: 466, column: 49, scope: !8263)
!8296 = !DILocation(line: 466, column: 45, scope: !8263)
!8297 = !DILocation(line: 466, column: 13, scope: !8263)
!8298 = !DILocation(line: 467, column: 8, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8263, file: !692, line: 467, column: 8)
!8300 = !DILocation(line: 467, column: 8, scope: !8263)
!8301 = !DILocation(line: 469, column: 12, scope: !8263)
!8302 = !DILocation(line: 470, column: 15, scope: !8263)
!8303 = distinct !{!8303, !8288, !8304}
!8304 = !DILocation(line: 471, column: 2, scope: !8264)
!8305 = !DILocation(line: 478, column: 4, scope: !8284)
!8306 = !DILocation(line: 480, column: 29, scope: !8283)
!8307 = !DILocation(line: 480, column: 17, scope: !8283)
!8308 = !DILocation(line: 481, column: 13, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8283, file: !692, line: 481, column: 12)
!8310 = !DILocation(line: 481, column: 12, scope: !8283)
!8311 = !DILocation(line: 484, column: 21, scope: !8284)
!8312 = !DILocation(line: 484, column: 32, scope: !8284)
!8313 = !DILocation(line: 484, column: 38, scope: !8284)
!8314 = !DILocation(line: 484, column: 26, scope: !8284)
!8315 = !DILocation(line: 483, column: 6, scope: !8283)
!8316 = distinct !{!8316, !8305, !8317}
!8317 = !DILocation(line: 484, column: 42, scope: !8284)
!8318 = !DILocation(line: 488, column: 4, scope: !8284)
!8319 = !DILocation(line: 488, column: 38, scope: !8284)
!8320 = !DILocation(line: 488, column: 21, scope: !8284)
!8321 = !DILocation(line: 488, column: 26, scope: !8284)
!8322 = !DILocation(line: 490, column: 29, scope: !8286)
!8323 = !DILocation(line: 490, column: 17, scope: !8286)
!8324 = !DILocation(line: 491, column: 13, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8286, file: !692, line: 491, column: 12)
!8326 = !DILocation(line: 491, column: 12, scope: !8286)
!8327 = distinct !{!8327, !8318, !8328}
!8328 = !DILocation(line: 493, column: 6, scope: !8284)
!8329 = !DILocation(line: 0, scope: !8284)
!8330 = !DILocation(line: 495, column: 29, scope: !8264)
!8331 = !DILocation(line: 494, column: 2, scope: !8284)
!8332 = distinct !{!8332, !8292, !8333}
!8333 = !DILocation(line: 495, column: 46, scope: !8264)
!8334 = !DILocation(line: 497, column: 32, scope: !8264)
!8335 = !DILocation(line: 497, column: 15, scope: !8264)
!8336 = !DILocation(line: 498, column: 19, scope: !8264)
!8337 = distinct !{!8337, !8287, !8338}
!8338 = !DILocation(line: 499, column: 5, scope: !8251)
!8339 = !DILocation(line: 500, column: 1, scope: !8251)
!8340 = distinct !DISubprogram(name: "gimple_uid", scope: !587, file: !587, line: 1265, type: !5109, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8341)
!8341 = !{!8342}
!8342 = !DILocalVariable(name: "g", arg: 1, scope: !8340, file: !587, line: 1265, type: !5090)
!8343 = !DILocation(line: 0, scope: !8340)
!8344 = !DILocation(line: 1267, column: 20, scope: !8340)
!8345 = !DILocation(line: 1267, column: 3, scope: !8340)
!8346 = distinct !DISubprogram(name: "get_expr_type", scope: !3, file: !3, line: 1384, type: !7612, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8347)
!8347 = !{!8348}
!8348 = !DILocalVariable(name: "e", arg: 1, scope: !8346, file: !3, line: 1384, type: !2889)
!8349 = !DILocation(line: 0, scope: !8346)
!8350 = !DILocation(line: 1386, column: 14, scope: !8346)
!8351 = !DILocation(line: 1386, column: 3, scope: !8346)
!8352 = !DILocation(line: 1389, column: 14, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 1387, column: 5)
!8354 = !DILocation(line: 1389, column: 7, scope: !8353)
!8355 = !DILocation(line: 1391, column: 14, scope: !8353)
!8356 = !DILocation(line: 1391, column: 7, scope: !8353)
!8357 = !DILocation(line: 1393, column: 14, scope: !8353)
!8358 = !DILocation(line: 1393, column: 38, scope: !8353)
!8359 = !DILocation(line: 1393, column: 7, scope: !8353)
!8360 = !DILocation(line: 1395, column: 14, scope: !8353)
!8361 = !DILocation(line: 1395, column: 33, scope: !8353)
!8362 = !DILocation(line: 1395, column: 7, scope: !8353)
!8363 = !DILocation(line: 1397, column: 3, scope: !8346)
!8364 = !DILocation(line: 1399, column: 5, scope: !8346)
!8365 = !DILocation(line: 1401, column: 1, scope: !8346)
!8366 = distinct !DISubprogram(name: "get_var_ann", scope: !5117, file: !5117, line: 141, type: !8367, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8370)
!8367 = !DISubroutineType(types: !8368)
!8368 = !{!8369, !765}
!8369 = !DIDerivedType(tag: DW_TAG_typedef, name: "var_ann_t", file: !1417, line: 297, baseType: !1415)
!8370 = !{!8371, !8372}
!8371 = !DILocalVariable(name: "var", arg: 1, scope: !8366, file: !5117, line: 141, type: !765)
!8372 = !DILocalVariable(name: "p", scope: !8366, file: !5117, line: 143, type: !8373)
!8373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8369, size: 64)
!8374 = !DILocation(line: 0, scope: !8366)
!8375 = !DILocation(line: 143, column: 18, scope: !8366)
!8376 = !DILocation(line: 144, column: 3, scope: !8366)
!8377 = !DILocation(line: 145, column: 10, scope: !8366)
!8378 = !DILocation(line: 145, column: 20, scope: !8366)
!8379 = !DILocation(line: 145, column: 3, scope: !8366)
!8380 = distinct !DISubprogram(name: "make_ssa_name", scope: !5117, file: !5117, line: 1245, type: !8381, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8383)
!8381 = !DISubroutineType(types: !8382)
!8382 = !{!765, !765, !1025}
!8383 = !{!8384, !8385}
!8384 = !DILocalVariable(name: "var", arg: 1, scope: !8380, file: !5117, line: 1245, type: !765)
!8385 = !DILocalVariable(name: "stmt", arg: 2, scope: !8380, file: !5117, line: 1245, type: !1025)
!8386 = !DILocation(line: 0, scope: !8380)
!8387 = !DILocation(line: 1247, column: 28, scope: !8380)
!8388 = !DILocation(line: 1247, column: 10, scope: !8380)
!8389 = !DILocation(line: 1247, column: 3, scope: !8380)
!8390 = distinct !DISubprogram(name: "get_or_alloc_expr_for", scope: !3, file: !3, line: 1114, type: !5713, scopeLine: 1115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8391)
!8391 = !{!8392, !8393, !8397, !8398}
!8392 = !DILocalVariable(name: "t", arg: 1, scope: !8390, file: !3, line: 1114, type: !765)
!8393 = !DILocalVariable(name: "result", scope: !8394, file: !3, line: 1125, type: !2054)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 1121, column: 5)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !3, line: 1118, column: 12)
!8396 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 1116, column: 7)
!8397 = !DILocalVariable(name: "result_id", scope: !8394, file: !3, line: 1126, type: !6)
!8398 = !DILocalVariable(name: "e", scope: !8399, file: !3, line: 1130, type: !754)
!8399 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 1129, column: 2)
!8400 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 1128, column: 11)
!8401 = !DILocation(line: 0, scope: !8390)
!8402 = !DILocation(line: 1116, column: 7, scope: !8396)
!8403 = !DILocation(line: 1116, column: 21, scope: !8396)
!8404 = !DILocation(line: 1116, column: 7, scope: !8390)
!8405 = !DILocation(line: 1117, column: 12, scope: !8396)
!8406 = !DILocation(line: 1117, column: 5, scope: !8396)
!8407 = !DILocation(line: 1118, column: 12, scope: !8395)
!8408 = !DILocation(line: 1118, column: 12, scope: !8396)
!8409 = !DILocation(line: 1119, column: 12, scope: !8395)
!8410 = !DILocation(line: 1119, column: 5, scope: !8395)
!8411 = !DILocation(line: 1125, column: 7, scope: !8394)
!8412 = !DILocation(line: 0, scope: !8394)
!8413 = !DILocation(line: 1127, column: 7, scope: !8394)
!8414 = !DILocation(line: 1128, column: 11, scope: !8400)
!8415 = !DILocation(line: 1128, column: 18, scope: !8400)
!8416 = !DILocation(line: 1128, column: 11, scope: !8394)
!8417 = !DILocation(line: 1130, column: 40, scope: !8399)
!8418 = !DILocation(line: 1130, column: 28, scope: !8399)
!8419 = !DILocation(line: 1130, column: 17, scope: !8399)
!8420 = !DILocation(line: 0, scope: !8399)
!8421 = !DILocation(line: 1131, column: 7, scope: !8399)
!8422 = !DILocation(line: 1131, column: 12, scope: !8399)
!8423 = !DILocation(line: 1132, column: 24, scope: !8399)
!8424 = !DILocation(line: 1132, column: 4, scope: !8399)
!8425 = !DILocation(line: 1132, column: 22, scope: !8399)
!8426 = !DILocation(line: 1133, column: 16, scope: !8399)
!8427 = !DILocation(line: 1134, column: 18, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 1134, column: 8)
!8429 = !DILocation(line: 1134, column: 8, scope: !8399)
!8430 = !DILocation(line: 1136, column: 19, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 1135, column: 6)
!8432 = !DILocation(line: 1136, column: 8, scope: !8431)
!8433 = !DILocation(line: 1137, column: 12, scope: !8431)
!8434 = !DILocation(line: 1138, column: 8, scope: !8431)
!8435 = !DILocation(line: 1140, column: 4, scope: !8399)
!8436 = !DILocation(line: 1141, column: 4, scope: !8399)
!8437 = !DILocation(line: 1143, column: 5, scope: !8395)
!8438 = !DILocation(line: 1145, column: 1, scope: !8390)
!8439 = distinct !DISubprogram(name: "get_constant_for_value_id", scope: !3, file: !3, line: 1093, type: !8440, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8442)
!8440 = !DISubroutineType(types: !8441)
!8441 = !{!765, !6}
!8442 = !{!8443, !8444, !8447, !8448, !8449}
!8443 = !DILocalVariable(name: "v", arg: 1, scope: !8439, file: !3, line: 1093, type: !6)
!8444 = !DILocalVariable(name: "i", scope: !8445, file: !3, line: 1097, type: !6)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 1096, column: 5)
!8446 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 1095, column: 7)
!8447 = !DILocalVariable(name: "bi", scope: !8445, file: !3, line: 1098, type: !3046)
!8448 = !DILocalVariable(name: "exprset", scope: !8445, file: !3, line: 1099, type: !683)
!8449 = !DILocalVariable(name: "expr", scope: !8450, file: !3, line: 1103, type: !754)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 1102, column: 2)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 1101, column: 7)
!8452 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 1101, column: 7)
!8453 = !DILocation(line: 0, scope: !8439)
!8454 = !DILocation(line: 1095, column: 7, scope: !8446)
!8455 = !DILocation(line: 1095, column: 7, scope: !8439)
!8456 = !DILocation(line: 1097, column: 7, scope: !8445)
!8457 = !DILocation(line: 1098, column: 7, scope: !8445)
!8458 = !DILocation(line: 1099, column: 30, scope: !8445)
!8459 = !DILocation(line: 0, scope: !8445)
!8460 = !DILocation(line: 1101, column: 7, scope: !8452)
!8461 = !DILocation(line: 1101, column: 7, scope: !8451)
!8462 = !DILocation(line: 1103, column: 39, scope: !8450)
!8463 = !DILocation(line: 1103, column: 20, scope: !8450)
!8464 = !DILocation(line: 0, scope: !8450)
!8465 = !DILocation(line: 1104, column: 14, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8450, file: !3, line: 1104, column: 8)
!8467 = !DILocation(line: 1104, column: 19, scope: !8466)
!8468 = !DILocation(line: 1104, column: 8, scope: !8450)
!8469 = !DILocation(line: 1105, column: 13, scope: !8466)
!8470 = !DILocation(line: 1105, column: 6, scope: !8466)
!8471 = distinct !{!8471, !8460, !8472}
!8472 = !DILocation(line: 1106, column: 2, scope: !8452)
!8473 = !DILocation(line: 1107, column: 5, scope: !8446)
!8474 = !DILocation(line: 1108, column: 3, scope: !8439)
!8475 = !DILocation(line: 1109, column: 1, scope: !8439)
!8476 = distinct !DISubprogram(name: "bitmap_set_replace_value", scope: !3, file: !3, line: 840, type: !8477, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8479)
!8477 = !DISubroutineType(types: !8478)
!8478 = !{null, !683, !6, !2889}
!8479 = !{!8480, !8481, !8482, !8483, !8484, !8485}
!8480 = !DILocalVariable(name: "set", arg: 1, scope: !8476, file: !3, line: 840, type: !683)
!8481 = !DILocalVariable(name: "lookfor", arg: 2, scope: !8476, file: !3, line: 840, type: !6)
!8482 = !DILocalVariable(name: "expr", arg: 3, scope: !8476, file: !3, line: 841, type: !2889)
!8483 = !DILocalVariable(name: "exprset", scope: !8476, file: !3, line: 843, type: !683)
!8484 = !DILocalVariable(name: "i", scope: !8476, file: !3, line: 844, type: !6)
!8485 = !DILocalVariable(name: "bi", scope: !8476, file: !3, line: 845, type: !3046)
!8486 = !DILocation(line: 0, scope: !8476)
!8487 = !DILocation(line: 844, column: 3, scope: !8476)
!8488 = !DILocation(line: 845, column: 3, scope: !8476)
!8489 = !DILocation(line: 847, column: 7, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 847, column: 7)
!8491 = !DILocation(line: 847, column: 7, scope: !8476)
!8492 = !DILocation(line: 850, column: 8, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 850, column: 7)
!8494 = !DILocation(line: 850, column: 7, scope: !8476)
!8495 = !DILocation(line: 862, column: 13, scope: !8476)
!8496 = !DILocation(line: 863, column: 3, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 863, column: 3)
!8498 = !DILocation(line: 0, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8500, file: !3, line: 865, column: 11)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 864, column: 5)
!8501 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 863, column: 3)
!8502 = !DILocation(line: 863, column: 3, scope: !8501)
!8503 = !DILocation(line: 865, column: 30, scope: !8499)
!8504 = !DILocation(line: 865, column: 43, scope: !8499)
!8505 = !DILocation(line: 865, column: 11, scope: !8499)
!8506 = !DILocation(line: 865, column: 11, scope: !8500)
!8507 = !DILocation(line: 867, column: 27, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 866, column: 2)
!8509 = !DILocation(line: 867, column: 40, scope: !8508)
!8510 = !DILocation(line: 867, column: 4, scope: !8508)
!8511 = !DILocation(line: 868, column: 25, scope: !8508)
!8512 = !DILocation(line: 868, column: 38, scope: !8508)
!8513 = !DILocation(line: 868, column: 4, scope: !8508)
!8514 = !DILocation(line: 869, column: 4, scope: !8508)
!8515 = distinct !{!8515, !8496, !8516}
!8516 = !DILocation(line: 871, column: 5, scope: !8497)
!8517 = !DILocation(line: 872, column: 1, scope: !8476)
!8518 = distinct !DISubprogram(name: "get_expression_id", scope: !3, file: !3, line: 280, type: !3178, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8519)
!8519 = !{!8520}
!8520 = !DILocalVariable(name: "expr", arg: 1, scope: !8518, file: !3, line: 280, type: !2889)
!8521 = !DILocation(line: 0, scope: !8518)
!8522 = !DILocation(line: 282, column: 16, scope: !8518)
!8523 = !DILocation(line: 282, column: 3, scope: !8518)
!8524 = distinct !DISubprogram(name: "valid_in_sets", scope: !3, file: !3, line: 2088, type: !8525, scopeLine: 2090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8527)
!8525 = !DISubroutineType(types: !8526)
!8526 = !{!663, !683, !683, !754, !1477}
!8527 = !{!8528, !8529, !8530, !8531, !8532, !8535, !8536, !8542, !8544, !8545, !8546}
!8528 = !DILocalVariable(name: "set1", arg: 1, scope: !8524, file: !3, line: 2088, type: !683)
!8529 = !DILocalVariable(name: "set2", arg: 2, scope: !8524, file: !3, line: 2088, type: !683)
!8530 = !DILocalVariable(name: "expr", arg: 3, scope: !8524, file: !3, line: 2088, type: !754)
!8531 = !DILocalVariable(name: "block", arg: 4, scope: !8524, file: !3, line: 2089, type: !1477)
!8532 = !DILocalVariable(name: "i", scope: !8533, file: !3, line: 2097, type: !6)
!8533 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 2096, column: 7)
!8534 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 2092, column: 5)
!8535 = !DILocalVariable(name: "nary", scope: !8533, file: !3, line: 2098, type: !2054)
!8536 = !DILocalVariable(name: "temp", scope: !8537, file: !3, line: 2103, type: !756)
!8537 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 2102, column: 8)
!8538 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 2101, column: 10)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 2100, column: 4)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 2099, column: 2)
!8541 = distinct !DILexicalBlock(scope: !8533, file: !3, line: 2099, column: 2)
!8542 = !DILocalVariable(name: "ref", scope: !8543, file: !3, line: 2127, type: !2068)
!8543 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 2126, column: 7)
!8544 = !DILocalVariable(name: "vro", scope: !8543, file: !3, line: 2128, type: !2899)
!8545 = !DILocalVariable(name: "i", scope: !8543, file: !3, line: 2129, type: !6)
!8546 = !DILocalVariable(name: "def_stmt", scope: !8547, file: !3, line: 2138, type: !1025)
!8547 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 2137, column: 4)
!8548 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 2136, column: 6)
!8549 = !DILocation(line: 0, scope: !8524)
!8550 = !DILocation(line: 2091, column: 17, scope: !8524)
!8551 = !DILocation(line: 2091, column: 3, scope: !8524)
!8552 = !DILocation(line: 2094, column: 40, scope: !8534)
!8553 = !DILocation(line: 2094, column: 14, scope: !8534)
!8554 = !DILocation(line: 2094, column: 7, scope: !8534)
!8555 = !DILocation(line: 2098, column: 22, scope: !8533)
!8556 = !DILocation(line: 0, scope: !8533)
!8557 = !DILocation(line: 0, scope: !8540)
!8558 = !DILocation(line: 0, scope: !8537)
!8559 = !DILocation(line: 0, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 2110, column: 7)
!8561 = !DILocation(line: 2099, column: 7, scope: !8541)
!8562 = !DILocation(line: 0, scope: !8541)
!8563 = !DILocation(line: 2099, column: 24, scope: !8540)
!8564 = !DILocation(line: 2099, column: 16, scope: !8540)
!8565 = !DILocation(line: 2099, column: 2, scope: !8541)
!8566 = !DILocation(line: 2101, column: 10, scope: !8538)
!8567 = !DILocation(line: 2101, column: 34, scope: !8538)
!8568 = !DILocation(line: 2101, column: 10, scope: !8539)
!8569 = !DILocation(line: 2103, column: 3, scope: !8537)
!8570 = !DILocation(line: 2104, column: 13, scope: !8537)
!8571 = !DILocation(line: 2105, column: 11, scope: !8537)
!8572 = !DILocation(line: 2106, column: 27, scope: !8537)
!8573 = !DILocation(line: 2106, column: 25, scope: !8537)
!8574 = !DILocation(line: 2107, column: 13, scope: !8537)
!8575 = !DILocation(line: 2107, column: 11, scope: !8537)
!8576 = !DILocation(line: 2108, column: 15, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 2108, column: 7)
!8578 = !DILocation(line: 2108, column: 7, scope: !8537)
!8579 = !DILocation(line: 2110, column: 8, scope: !8560)
!8580 = !DILocation(line: 2113, column: 8, scope: !8538)
!8581 = !DILocation(line: 2099, column: 33, scope: !8540)
!8582 = !DILocation(line: 2099, column: 2, scope: !8540)
!8583 = distinct !{!8583, !8565, !8584}
!8584 = !DILocation(line: 2114, column: 4, scope: !8541)
!8585 = !DILocation(line: 2119, column: 6, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8533, file: !3, line: 2119, column: 6)
!8587 = !DILocation(line: 2153, column: 1, scope: !8524)
!8588 = !DILocation(line: 2110, column: 7, scope: !8537)
!8589 = !DILocation(line: 2120, column: 6, scope: !8586)
!8590 = !DILocation(line: 2120, column: 9, scope: !8586)
!8591 = !DILocation(line: 2119, column: 6, scope: !8533)
!8592 = !DILocation(line: 2122, column: 2, scope: !8533)
!8593 = !DILocation(line: 2127, column: 23, scope: !8543)
!8594 = !DILocation(line: 0, scope: !8543)
!8595 = !DILocation(line: 2128, column: 2, scope: !8543)
!8596 = !DILocation(line: 0, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8598, file: !3, line: 2131, column: 2)
!8598 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 2131, column: 2)
!8599 = !DILocation(line: 2131, column: 7, scope: !8598)
!8600 = !DILocation(line: 0, scope: !8598)
!8601 = !DILocation(line: 2131, column: 14, scope: !8597)
!8602 = !DILocation(line: 2131, column: 2, scope: !8598)
!8603 = !DILocation(line: 2133, column: 42, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 2133, column: 10)
!8605 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 2132, column: 4)
!8606 = !DILocation(line: 2133, column: 11, scope: !8604)
!8607 = !DILocation(line: 2133, column: 10, scope: !8605)
!8608 = !DILocation(line: 2131, column: 71, scope: !8597)
!8609 = !DILocation(line: 2131, column: 2, scope: !8597)
!8610 = distinct !{!8610, !8602, !8611}
!8611 = !DILocation(line: 2135, column: 4, scope: !8598)
!8612 = !DILocation(line: 2136, column: 11, scope: !8548)
!8613 = !DILocation(line: 2136, column: 6, scope: !8548)
!8614 = !DILocation(line: 2136, column: 6, scope: !8543)
!8615 = !DILocation(line: 2138, column: 24, scope: !8547)
!8616 = !DILocation(line: 0, scope: !8547)
!8617 = !DILocation(line: 2139, column: 11, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 2139, column: 10)
!8619 = !DILocation(line: 2140, column: 3, scope: !8618)
!8620 = !DILocation(line: 2140, column: 6, scope: !8618)
!8621 = !DILocation(line: 2140, column: 27, scope: !8618)
!8622 = !DILocation(line: 2141, column: 3, scope: !8618)
!8623 = !DILocation(line: 2142, column: 16, scope: !8618)
!8624 = !DILocation(line: 2141, column: 7, scope: !8618)
!8625 = !DILocation(line: 2139, column: 10, scope: !8547)
!8626 = !DILocation(line: 2144, column: 4, scope: !8548)
!8627 = !DILocation(line: 2145, column: 10, scope: !8543)
!8628 = !DILocation(line: 2145, column: 9, scope: !8543)
!8629 = !DILocation(line: 2145, column: 2, scope: !8543)
!8630 = !DILocation(line: 2146, column: 7, scope: !8534)
!8631 = !DILocation(line: 2148, column: 7, scope: !8534)
!8632 = !DILocation(line: 2151, column: 5, scope: !8524)
!8633 = distinct !DISubprogram(name: "bitmap_remove_from_set", scope: !3, file: !3, line: 665, type: !5745, scopeLine: 666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8634)
!8634 = !{!8635, !8636, !8637}
!8635 = !DILocalVariable(name: "set", arg: 1, scope: !8633, file: !3, line: 665, type: !683)
!8636 = !DILocalVariable(name: "expr", arg: 2, scope: !8633, file: !3, line: 665, type: !754)
!8637 = !DILocalVariable(name: "val", scope: !8633, file: !3, line: 667, type: !6)
!8638 = !DILocation(line: 0, scope: !8633)
!8639 = !DILocation(line: 667, column: 23, scope: !8633)
!8640 = !DILocation(line: 668, column: 8, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 668, column: 7)
!8642 = !DILocation(line: 668, column: 7, scope: !8633)
!8643 = !DILocation(line: 670, column: 30, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 669, column: 5)
!8645 = !DILocation(line: 670, column: 7, scope: !8644)
!8646 = !DILocation(line: 671, column: 30, scope: !8644)
!8647 = !DILocation(line: 671, column: 43, scope: !8644)
!8648 = !DILocation(line: 671, column: 7, scope: !8644)
!8649 = !DILocation(line: 672, column: 5, scope: !8644)
!8650 = !DILocation(line: 673, column: 1, scope: !8633)
!8651 = distinct !DISubprogram(name: "bitmap_set_contains_expr", scope: !3, file: !3, line: 832, type: !8652, scopeLine: 833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8654)
!8652 = !DISubroutineType(types: !8653)
!8653 = !{!663, !683, !2889}
!8654 = !{!8655, !8656}
!8655 = !DILocalVariable(name: "set", arg: 1, scope: !8651, file: !3, line: 832, type: !683)
!8656 = !DILocalVariable(name: "expr", arg: 2, scope: !8651, file: !3, line: 832, type: !2889)
!8657 = !DILocation(line: 0, scope: !8651)
!8658 = !DILocation(line: 834, column: 29, scope: !8651)
!8659 = !DILocation(line: 834, column: 42, scope: !8651)
!8660 = !DILocation(line: 834, column: 10, scope: !8651)
!8661 = !DILocation(line: 834, column: 3, scope: !8651)
!8662 = distinct !DISubprogram(name: "vro_valid_in_sets", scope: !3, file: !3, line: 2034, type: !8663, scopeLine: 2036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8665)
!8663 = !DISubroutineType(types: !8664)
!8664 = !{!663, !683, !683, !2899}
!8665 = !{!8666, !8667, !8668, !8669, !8672, !8675}
!8666 = !DILocalVariable(name: "set1", arg: 1, scope: !8662, file: !3, line: 2034, type: !683)
!8667 = !DILocalVariable(name: "set2", arg: 2, scope: !8662, file: !3, line: 2034, type: !683)
!8668 = !DILocalVariable(name: "vro", arg: 3, scope: !8662, file: !3, line: 2035, type: !2899)
!8669 = !DILocalVariable(name: "temp", scope: !8670, file: !3, line: 2039, type: !756)
!8670 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 2038, column: 5)
!8671 = distinct !DILexicalBlock(scope: !8662, file: !3, line: 2037, column: 7)
!8672 = !DILocalVariable(name: "temp", scope: !8673, file: !3, line: 2052, type: !756)
!8673 = distinct !DILexicalBlock(scope: !8674, file: !3, line: 2051, column: 5)
!8674 = distinct !DILexicalBlock(scope: !8662, file: !3, line: 2050, column: 7)
!8675 = !DILocalVariable(name: "temp", scope: !8676, file: !3, line: 2066, type: !756)
!8676 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 2065, column: 5)
!8677 = distinct !DILexicalBlock(scope: !8662, file: !3, line: 2064, column: 7)
!8678 = !DILocation(line: 0, scope: !8662)
!8679 = !DILocation(line: 2037, column: 12, scope: !8671)
!8680 = !DILocation(line: 2037, column: 7, scope: !8671)
!8681 = !DILocation(line: 2037, column: 16, scope: !8671)
!8682 = !DILocation(line: 2037, column: 19, scope: !8671)
!8683 = !DILocation(line: 2037, column: 40, scope: !8671)
!8684 = !DILocation(line: 2037, column: 7, scope: !8662)
!8685 = !DILocation(line: 2039, column: 7, scope: !8670)
!8686 = !DILocation(line: 2040, column: 12, scope: !8670)
!8687 = !DILocation(line: 2040, column: 17, scope: !8670)
!8688 = !DILocation(line: 2041, column: 12, scope: !8670)
!8689 = !DILocation(line: 2041, column: 15, scope: !8670)
!8690 = !DILocation(line: 2042, column: 7, scope: !8670)
!8691 = !DILocation(line: 2042, column: 29, scope: !8670)
!8692 = !DILocation(line: 0, scope: !8670)
!8693 = !DILocation(line: 2043, column: 17, scope: !8670)
!8694 = !DILocation(line: 2043, column: 15, scope: !8670)
!8695 = !DILocation(line: 2044, column: 19, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 2044, column: 11)
!8697 = !DILocation(line: 2044, column: 11, scope: !8670)
!8698 = !DILocation(line: 2046, column: 12, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 2046, column: 11)
!8700 = !DILocation(line: 2046, column: 11, scope: !8670)
!8701 = !DILocation(line: 2049, column: 5, scope: !8671)
!8702 = !DILocation(line: 2050, column: 12, scope: !8674)
!8703 = !DILocation(line: 2050, column: 7, scope: !8674)
!8704 = !DILocation(line: 2050, column: 16, scope: !8674)
!8705 = !DILocation(line: 2050, column: 19, scope: !8674)
!8706 = !DILocation(line: 2050, column: 40, scope: !8674)
!8707 = !DILocation(line: 2050, column: 7, scope: !8662)
!8708 = !DILocation(line: 2052, column: 7, scope: !8673)
!8709 = !DILocation(line: 2053, column: 12, scope: !8673)
!8710 = !DILocation(line: 2053, column: 17, scope: !8673)
!8711 = !DILocation(line: 2054, column: 12, scope: !8673)
!8712 = !DILocation(line: 2054, column: 15, scope: !8673)
!8713 = !DILocation(line: 2055, column: 7, scope: !8673)
!8714 = !DILocation(line: 2055, column: 29, scope: !8673)
!8715 = !DILocation(line: 0, scope: !8673)
!8716 = !DILocation(line: 2056, column: 17, scope: !8673)
!8717 = !DILocation(line: 2056, column: 15, scope: !8673)
!8718 = !DILocation(line: 2057, column: 19, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 2057, column: 11)
!8720 = !DILocation(line: 2057, column: 11, scope: !8673)
!8721 = !DILocation(line: 2059, column: 12, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 2059, column: 11)
!8723 = !DILocation(line: 2059, column: 11, scope: !8673)
!8724 = !DILocation(line: 2062, column: 5, scope: !8674)
!8725 = !DILocation(line: 2064, column: 12, scope: !8677)
!8726 = !DILocation(line: 2064, column: 7, scope: !8677)
!8727 = !DILocation(line: 2064, column: 16, scope: !8677)
!8728 = !DILocation(line: 2064, column: 19, scope: !8677)
!8729 = !DILocation(line: 2064, column: 40, scope: !8677)
!8730 = !DILocation(line: 2064, column: 7, scope: !8662)
!8731 = !DILocation(line: 2066, column: 7, scope: !8676)
!8732 = !DILocation(line: 2067, column: 12, scope: !8676)
!8733 = !DILocation(line: 2067, column: 17, scope: !8676)
!8734 = !DILocation(line: 2068, column: 12, scope: !8676)
!8735 = !DILocation(line: 2068, column: 15, scope: !8676)
!8736 = !DILocation(line: 2069, column: 7, scope: !8676)
!8737 = !DILocation(line: 2069, column: 29, scope: !8676)
!8738 = !DILocation(line: 0, scope: !8676)
!8739 = !DILocation(line: 2070, column: 17, scope: !8676)
!8740 = !DILocation(line: 2070, column: 15, scope: !8676)
!8741 = !DILocation(line: 2071, column: 19, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 2071, column: 11)
!8743 = !DILocation(line: 2071, column: 11, scope: !8676)
!8744 = !DILocation(line: 2073, column: 12, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 2073, column: 11)
!8746 = !DILocation(line: 2073, column: 11, scope: !8676)
!8747 = !DILocation(line: 2076, column: 5, scope: !8677)
!8748 = !DILocation(line: 2078, column: 3, scope: !8662)
!8749 = !DILocation(line: 2079, column: 1, scope: !8662)
!8750 = distinct !DISubprogram(name: "value_dies_in_block_x", scope: !3, file: !3, line: 1955, type: !8751, scopeLine: 1956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8753)
!8751 = !DISubroutineType(types: !8752)
!8752 = !{!663, !754, !1477}
!8753 = !{!8754, !8755, !8756, !8757, !8758, !8759, !8760, !8761, !8762, !8763, !8767}
!8754 = !DILocalVariable(name: "expr", arg: 1, scope: !8750, file: !3, line: 1955, type: !754)
!8755 = !DILocalVariable(name: "block", arg: 2, scope: !8750, file: !3, line: 1955, type: !1477)
!8756 = !DILocalVariable(name: "vuse", scope: !8750, file: !3, line: 1957, type: !765)
!8757 = !DILocalVariable(name: "refx", scope: !8750, file: !3, line: 1958, type: !2068)
!8758 = !DILocalVariable(name: "def", scope: !8750, file: !3, line: 1959, type: !1025)
!8759 = !DILocalVariable(name: "gsi", scope: !8750, file: !3, line: 1960, type: !3671)
!8760 = !DILocalVariable(name: "id", scope: !8750, file: !3, line: 1961, type: !6)
!8761 = !DILocalVariable(name: "res", scope: !8750, file: !3, line: 1962, type: !663)
!8762 = !DILocalVariable(name: "ref", scope: !8750, file: !3, line: 1963, type: !7990)
!8763 = !DILocalVariable(name: "def_vuse", scope: !8764, file: !3, line: 1981, type: !765)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !3, line: 1980, column: 5)
!8765 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 1979, column: 3)
!8766 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 1979, column: 3)
!8767 = !DILocalVariable(name: "def_vdef", scope: !8764, file: !3, line: 1981, type: !765)
!8768 = !DILocation(line: 0, scope: !8750)
!8769 = !DILocation(line: 1957, column: 15, scope: !8750)
!8770 = !DILocation(line: 1957, column: 42, scope: !8750)
!8771 = !DILocation(line: 1960, column: 3, scope: !8750)
!8772 = !DILocation(line: 1961, column: 17, scope: !8750)
!8773 = !DILocation(line: 1963, column: 3, scope: !8750)
!8774 = !DILocation(line: 1965, column: 8, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 1965, column: 7)
!8776 = !DILocation(line: 1965, column: 7, scope: !8750)
!8777 = !DILocation(line: 1969, column: 7, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 1969, column: 7)
!8779 = !DILocation(line: 1970, column: 7, scope: !8778)
!8780 = !DILocation(line: 1970, column: 46, scope: !8778)
!8781 = !DILocation(line: 1970, column: 10, scope: !8778)
!8782 = !DILocation(line: 1969, column: 7, scope: !8750)
!8783 = !DILocation(line: 1971, column: 26, scope: !8778)
!8784 = !DILocation(line: 1971, column: 52, scope: !8778)
!8785 = !DILocation(line: 1971, column: 12, scope: !8778)
!8786 = !DILocation(line: 1971, column: 5, scope: !8778)
!8787 = !DILocation(line: 1978, column: 7, scope: !8750)
!8788 = !DILocation(line: 1978, column: 12, scope: !8750)
!8789 = !DILocation(line: 1979, column: 14, scope: !8766)
!8790 = !DILocation(line: 0, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 2001, column: 11)
!8792 = !DILocation(line: 1979, column: 8, scope: !8766)
!8793 = !DILocation(line: 1979, column: 37, scope: !8765)
!8794 = !DILocation(line: 1979, column: 36, scope: !8765)
!8795 = !DILocation(line: 1979, column: 3, scope: !8766)
!8796 = !DILocation(line: 1982, column: 13, scope: !8764)
!8797 = !DILocation(line: 1983, column: 18, scope: !8764)
!8798 = !DILocation(line: 0, scope: !8764)
!8799 = !DILocation(line: 1984, column: 18, scope: !8764)
!8800 = !DILocation(line: 1987, column: 12, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 1987, column: 11)
!8802 = !DILocation(line: 1987, column: 11, scope: !8764)
!8803 = !DILocation(line: 1991, column: 12, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 1991, column: 11)
!8805 = !DILocation(line: 1991, column: 11, scope: !8764)
!8806 = !DILocation(line: 1994, column: 17, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 1994, column: 8)
!8808 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 1992, column: 2)
!8809 = !DILocation(line: 0, scope: !8808)
!8810 = !DILocation(line: 2001, column: 15, scope: !8791)
!8811 = !DILocation(line: 2001, column: 20, scope: !8791)
!8812 = !DILocation(line: 2002, column: 4, scope: !8791)
!8813 = !DILocation(line: 2002, column: 51, scope: !8791)
!8814 = !DILocation(line: 2002, column: 62, scope: !8791)
!8815 = !DILocation(line: 2003, column: 17, scope: !8791)
!8816 = !DILocation(line: 2002, column: 8, scope: !8791)
!8817 = !DILocation(line: 2001, column: 11, scope: !8764)
!8818 = !DILocation(line: 2009, column: 11, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 2009, column: 11)
!8820 = !DILocation(line: 0, scope: !8765)
!8821 = !DILocation(line: 1979, column: 54, scope: !8765)
!8822 = !DILocation(line: 1979, column: 3, scope: !8765)
!8823 = distinct !{!8823, !8795, !8824}
!8824 = !DILocation(line: 2014, column: 5, scope: !8766)
!8825 = !DILocation(line: 2017, column: 8, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 2017, column: 7)
!8827 = !DILocation(line: 2017, column: 7, scope: !8750)
!8828 = !DILocation(line: 2018, column: 25, scope: !8826)
!8829 = !DILocation(line: 2018, column: 5, scope: !8826)
!8830 = !DILocation(line: 2018, column: 23, scope: !8826)
!8831 = !DILocation(line: 2019, column: 19, scope: !8750)
!8832 = !DILocation(line: 2019, column: 41, scope: !8750)
!8833 = !DILocation(line: 2019, column: 3, scope: !8750)
!8834 = !DILocation(line: 2020, column: 7, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 2020, column: 7)
!8836 = !DILocation(line: 2020, column: 7, scope: !8750)
!8837 = !DILocation(line: 2021, column: 21, scope: !8835)
!8838 = !DILocation(line: 2021, column: 47, scope: !8835)
!8839 = !DILocation(line: 2021, column: 5, scope: !8835)
!8840 = !DILocation(line: 2024, column: 1, scope: !8750)
!8841 = distinct !DISubprogram(name: "VEC_basic_block_base_length", scope: !349, file: !349, line: 281, type: !8842, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8844)
!8842 = !DISubroutineType(types: !8843)
!8843 = !{!6, !6181}
!8844 = !{!8845}
!8845 = !DILocalVariable(name: "vec_", arg: 1, scope: !8841, file: !349, line: 281, type: !6181)
!8846 = !DILocation(line: 0, scope: !8841)
!8847 = !DILocation(line: 281, column: 1, scope: !8841)
!8848 = distinct !DISubprogram(name: "bitmap_set_subtract_values", scope: !3, file: !3, line: 800, type: !5773, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8849)
!8849 = !{!8850, !8851, !8852, !8853, !8854, !8855}
!8850 = !DILocalVariable(name: "a", arg: 1, scope: !8848, file: !3, line: 800, type: !683)
!8851 = !DILocalVariable(name: "b", arg: 2, scope: !8848, file: !3, line: 800, type: !683)
!8852 = !DILocalVariable(name: "i", scope: !8848, file: !3, line: 802, type: !6)
!8853 = !DILocalVariable(name: "bi", scope: !8848, file: !3, line: 803, type: !3046)
!8854 = !DILocalVariable(name: "temp", scope: !8848, file: !3, line: 804, type: !688)
!8855 = !DILocalVariable(name: "expr", scope: !8856, file: !3, line: 809, type: !754)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !3, line: 808, column: 5)
!8857 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 807, column: 3)
!8858 = distinct !DILexicalBlock(scope: !8848, file: !3, line: 807, column: 3)
!8859 = !DILocation(line: 0, scope: !8848)
!8860 = !DILocation(line: 802, column: 3, scope: !8848)
!8861 = !DILocation(line: 803, column: 3, scope: !8848)
!8862 = !DILocation(line: 804, column: 17, scope: !8848)
!8863 = !DILocation(line: 806, column: 25, scope: !8848)
!8864 = !DILocation(line: 806, column: 3, scope: !8848)
!8865 = !DILocation(line: 807, column: 3, scope: !8858)
!8866 = !DILocation(line: 807, column: 3, scope: !8857)
!8867 = !DILocation(line: 809, column: 42, scope: !8856)
!8868 = !DILocation(line: 809, column: 23, scope: !8856)
!8869 = !DILocation(line: 0, scope: !8856)
!8870 = !DILocation(line: 810, column: 41, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 810, column: 11)
!8872 = !DILocation(line: 810, column: 11, scope: !8871)
!8873 = !DILocation(line: 810, column: 11, scope: !8856)
!8874 = !DILocation(line: 811, column: 2, scope: !8871)
!8875 = distinct !{!8875, !8865, !8876}
!8876 = !DILocation(line: 812, column: 5, scope: !8858)
!8877 = !DILocation(line: 813, column: 3, scope: !8848)
!8878 = !DILocation(line: 814, column: 1, scope: !8848)
!8879 = distinct !DISubprogram(name: "dependent_clean", scope: !3, file: !3, line: 2162, type: !8880, scopeLine: 2163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8882)
!8880 = !DISubroutineType(types: !8881)
!8881 = !{null, !683, !683, !1477}
!8882 = !{!8883, !8884, !8885, !8886, !8887, !8888}
!8883 = !DILocalVariable(name: "set1", arg: 1, scope: !8879, file: !3, line: 2162, type: !683)
!8884 = !DILocalVariable(name: "set2", arg: 2, scope: !8879, file: !3, line: 2162, type: !683)
!8885 = !DILocalVariable(name: "block", arg: 3, scope: !8879, file: !3, line: 2162, type: !1477)
!8886 = !DILocalVariable(name: "exprs", scope: !8879, file: !3, line: 2164, type: !2099)
!8887 = !DILocalVariable(name: "expr", scope: !8879, file: !3, line: 2165, type: !754)
!8888 = !DILocalVariable(name: "i", scope: !8879, file: !3, line: 2166, type: !664)
!8889 = !DILocation(line: 0, scope: !8879)
!8890 = !DILocation(line: 2164, column: 3, scope: !8879)
!8891 = !DILocation(line: 2164, column: 33, scope: !8879)
!8892 = !DILocation(line: 2164, column: 25, scope: !8879)
!8893 = !DILocation(line: 2165, column: 3, scope: !8879)
!8894 = !DILocation(line: 2168, column: 8, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 2168, column: 3)
!8896 = !DILocation(line: 2168, column: 15, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 2168, column: 3)
!8898 = !DILocation(line: 0, scope: !8895)
!8899 = !DILocation(line: 2168, column: 3, scope: !8895)
!8900 = !DILocation(line: 2170, column: 39, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8902, file: !3, line: 2170, column: 11)
!8902 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 2169, column: 5)
!8903 = !DILocation(line: 2170, column: 12, scope: !8901)
!8904 = !DILocation(line: 2170, column: 11, scope: !8902)
!8905 = !DILocation(line: 2171, column: 32, scope: !8901)
!8906 = !DILocation(line: 2171, column: 2, scope: !8901)
!8907 = !DILocation(line: 2168, column: 56, scope: !8897)
!8908 = !DILocation(line: 2168, column: 3, scope: !8897)
!8909 = distinct !{!8909, !8899, !8910}
!8910 = !DILocation(line: 2172, column: 5, scope: !8895)
!8911 = !DILocation(line: 2173, column: 3, scope: !8879)
!8912 = !DILocation(line: 2174, column: 1, scope: !8879)
!8913 = distinct !DISubprogram(name: "insert_aux", scope: !3, file: !3, line: 3714, type: !8914, scopeLine: 3715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8916)
!8914 = !DISubroutineType(types: !8915)
!8915 = !{!663, !1477}
!8916 = !{!8917, !8918, !8919, !8920, !8923, !8926, !8927, !8928}
!8917 = !DILocalVariable(name: "block", arg: 1, scope: !8913, file: !3, line: 3714, type: !1477)
!8918 = !DILocalVariable(name: "son", scope: !8913, file: !3, line: 3716, type: !1477)
!8919 = !DILocalVariable(name: "new_stuff", scope: !8913, file: !3, line: 3717, type: !663)
!8920 = !DILocalVariable(name: "dom", scope: !8921, file: !3, line: 3721, type: !1477)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 3720, column: 5)
!8922 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 3719, column: 7)
!8923 = !DILocalVariable(name: "i", scope: !8924, file: !3, line: 3725, type: !6)
!8924 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 3724, column: 2)
!8925 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 3723, column: 11)
!8926 = !DILocalVariable(name: "bi", scope: !8924, file: !3, line: 3726, type: !3046)
!8927 = !DILocalVariable(name: "newset", scope: !8924, file: !3, line: 3727, type: !683)
!8928 = !DILocalVariable(name: "expr", scope: !8929, file: !3, line: 3736, type: !754)
!8929 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 3735, column: 3)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 3734, column: 8)
!8931 = distinct !DILexicalBlock(scope: !8932, file: !3, line: 3734, column: 8)
!8932 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 3729, column: 6)
!8933 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 3728, column: 8)
!8934 = !DILocation(line: 0, scope: !8913)
!8935 = !DILocation(line: 3719, column: 7, scope: !8922)
!8936 = !DILocation(line: 3719, column: 7, scope: !8913)
!8937 = !DILocation(line: 3722, column: 13, scope: !8921)
!8938 = !DILocation(line: 0, scope: !8921)
!8939 = !DILocation(line: 3723, column: 11, scope: !8925)
!8940 = !DILocation(line: 3723, column: 11, scope: !8921)
!8941 = !DILocation(line: 3725, column: 4, scope: !8924)
!8942 = !DILocation(line: 3726, column: 4, scope: !8924)
!8943 = !DILocation(line: 3727, column: 26, scope: !8924)
!8944 = !DILocation(line: 0, scope: !8924)
!8945 = !DILocation(line: 3728, column: 8, scope: !8933)
!8946 = !DILocation(line: 3728, column: 8, scope: !8924)
!8947 = !DILocation(line: 3734, column: 8, scope: !8931)
!8948 = !DILocation(line: 0, scope: !8929)
!8949 = !DILocation(line: 3734, column: 8, scope: !8930)
!8950 = !DILocation(line: 3736, column: 40, scope: !8929)
!8951 = !DILocation(line: 3736, column: 21, scope: !8929)
!8952 = !DILocation(line: 3737, column: 34, scope: !8929)
!8953 = !DILocation(line: 3737, column: 5, scope: !8929)
!8954 = !DILocation(line: 3738, column: 34, scope: !8929)
!8955 = !DILocation(line: 3738, column: 5, scope: !8929)
!8956 = distinct !{!8956, !8947, !8957}
!8957 = !DILocation(line: 3739, column: 3, scope: !8931)
!8958 = !DILocation(line: 3741, column: 9, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 3741, column: 8)
!8960 = !DILocation(line: 3741, column: 8, scope: !8924)
!8961 = !DILocation(line: 3743, column: 21, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 3742, column: 6)
!8963 = !DILocation(line: 3744, column: 12, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 3744, column: 12)
!8965 = !DILocation(line: 3744, column: 12, scope: !8962)
!8966 = !DILocation(line: 3745, column: 16, scope: !8964)
!8967 = !DILocation(line: 3745, column: 13, scope: !8964)
!8968 = !DILocation(line: 3745, column: 3, scope: !8964)
!8969 = !DILocation(line: 3747, column: 2, scope: !8925)
!8970 = !DILocation(line: 3747, column: 2, scope: !8924)
!8971 = !DILocation(line: 3717, column: 8, scope: !8913)
!8972 = !DILocation(line: 3749, column: 14, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 3749, column: 3)
!8974 = !DILocation(line: 3749, column: 8, scope: !8973)
!8975 = !DILocation(line: 0, scope: !8973)
!8976 = !DILocation(line: 3749, column: 3, scope: !8973)
!8977 = !DILocation(line: 3753, column: 20, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 3752, column: 5)
!8979 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 3749, column: 3)
!8980 = !DILocation(line: 3753, column: 17, scope: !8978)
!8981 = !DILocation(line: 3751, column: 14, scope: !8979)
!8982 = !DILocation(line: 3749, column: 3, scope: !8979)
!8983 = distinct !{!8983, !8976, !8984}
!8984 = !DILocation(line: 3754, column: 5, scope: !8973)
!8985 = !DILocation(line: 3756, column: 3, scope: !8913)
!8986 = distinct !DISubprogram(name: "single_pred_p", scope: !349, file: !349, line: 634, type: !6608, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8987)
!8987 = !{!8988}
!8988 = !DILocalVariable(name: "bb", arg: 1, scope: !8986, file: !349, line: 634, type: !6048)
!8989 = !DILocation(line: 0, scope: !8986)
!8990 = !DILocation(line: 636, column: 10, scope: !8986)
!8991 = !DILocation(line: 636, column: 33, scope: !8986)
!8992 = !DILocation(line: 636, column: 3, scope: !8986)
!8993 = distinct !DISubprogram(name: "do_regular_insertion", scope: !3, file: !3, line: 3479, type: !8994, scopeLine: 3480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8996)
!8994 = !DISubroutineType(types: !8995)
!8995 = !{!663, !1477, !1477}
!8996 = !{!8997, !8998, !8999, !9000, !9001, !9002, !9003, !9009, !9010, !9011, !9012, !9013, !9014, !9015, !9016, !9017, !9018, !9019, !9020, !9024, !9028, !9029, !9030, !9031, !9035}
!8997 = !DILocalVariable(name: "block", arg: 1, scope: !8993, file: !3, line: 3479, type: !1477)
!8998 = !DILocalVariable(name: "dom", arg: 2, scope: !8993, file: !3, line: 3479, type: !1477)
!8999 = !DILocalVariable(name: "new_stuff", scope: !8993, file: !3, line: 3481, type: !663)
!9000 = !DILocalVariable(name: "exprs", scope: !8993, file: !3, line: 3482, type: !2099)
!9001 = !DILocalVariable(name: "expr", scope: !8993, file: !3, line: 3483, type: !754)
!9002 = !DILocalVariable(name: "i", scope: !8993, file: !3, line: 3484, type: !664)
!9003 = !DILocalVariable(name: "avail", scope: !9004, file: !3, line: 3490, type: !2173)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 3489, column: 2)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 3488, column: 11)
!9006 = distinct !DILexicalBlock(scope: !9007, file: !3, line: 3487, column: 5)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 3486, column: 3)
!9008 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 3486, column: 3)
!9009 = !DILocalVariable(name: "val", scope: !9004, file: !3, line: 3491, type: !6)
!9010 = !DILocalVariable(name: "by_some", scope: !9004, file: !3, line: 3492, type: !663)
!9011 = !DILocalVariable(name: "cant_insert", scope: !9004, file: !3, line: 3493, type: !663)
!9012 = !DILocalVariable(name: "all_same", scope: !9004, file: !3, line: 3494, type: !663)
!9013 = !DILocalVariable(name: "first_s", scope: !9004, file: !3, line: 3495, type: !754)
!9014 = !DILocalVariable(name: "pred", scope: !9004, file: !3, line: 3496, type: !1005)
!9015 = !DILocalVariable(name: "bprime", scope: !9004, file: !3, line: 3497, type: !1477)
!9016 = !DILocalVariable(name: "eprime", scope: !9004, file: !3, line: 3498, type: !754)
!9017 = !DILocalVariable(name: "ei", scope: !9004, file: !3, line: 3499, type: !2146)
!9018 = !DILocalVariable(name: "edoubleprime", scope: !9004, file: !3, line: 3500, type: !754)
!9019 = !DILocalVariable(name: "do_insertion", scope: !9004, file: !3, line: 3501, type: !663)
!9020 = !DILocalVariable(name: "vprime", scope: !9021, file: !3, line: 3516, type: !6)
!9021 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 3515, column: 6)
!9022 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 3514, column: 4)
!9023 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 3514, column: 4)
!9024 = !DILocalVariable(name: "j", scope: !9025, file: !3, line: 3582, type: !6)
!9025 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 3581, column: 6)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !3, line: 3577, column: 13)
!9027 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 3567, column: 8)
!9028 = !DILocalVariable(name: "bi", scope: !9025, file: !3, line: 3583, type: !3046)
!9029 = !DILocalVariable(name: "exprset", scope: !9025, file: !3, line: 3584, type: !683)
!9030 = !DILocalVariable(name: "new_val", scope: !9025, file: !3, line: 3587, type: !6)
!9031 = !DILocalVariable(name: "expr", scope: !9032, file: !3, line: 3590, type: !754)
!9032 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 3589, column: 3)
!9033 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 3588, column: 8)
!9034 = distinct !DILexicalBlock(scope: !9025, file: !3, line: 3588, column: 8)
!9035 = !DILocalVariable(name: "info", scope: !9036, file: !3, line: 3594, type: !9038)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 3593, column: 7)
!9037 = distinct !DILexicalBlock(scope: !9032, file: !3, line: 3592, column: 9)
!9038 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_ssa_aux_t", file: !2055, line: 164, baseType: !9039)
!9039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9040, size: 64)
!9040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vn_ssa_aux", file: !2055, line: 136, size: 256, elements: !9041)
!9041 = !{!9042, !9043, !9044, !9045, !9046, !9047, !9048, !9049, !9050, !9051}
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "valnum", scope: !9040, file: !2055, line: 139, baseType: !765, size: 64)
!9043 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !9040, file: !2055, line: 141, baseType: !765, size: 64, offset: 64)
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "value_id", scope: !9040, file: !2055, line: 144, baseType: !6, size: 32, offset: 128)
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "dfsnum", scope: !9040, file: !2055, line: 147, baseType: !6, size: 32, offset: 160)
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !9040, file: !2055, line: 148, baseType: !6, size: 32, offset: 192)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !9040, file: !2055, line: 149, baseType: !6, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "on_sccstack", scope: !9040, file: !2055, line: 150, baseType: !6, size: 1, offset: 225, flags: DIFlagBitField, extraData: i64 224)
!9049 = !DIDerivedType(tag: DW_TAG_member, name: "has_constants", scope: !9040, file: !2055, line: 153, baseType: !6, size: 1, offset: 226, flags: DIFlagBitField, extraData: i64 224)
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "use_processed", scope: !9040, file: !2055, line: 158, baseType: !6, size: 1, offset: 227, flags: DIFlagBitField, extraData: i64 224)
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "needs_insertion", scope: !9040, file: !2055, line: 163, baseType: !6, size: 1, offset: 228, flags: DIFlagBitField, extraData: i64 224)
!9052 = !DILocation(line: 0, scope: !8993)
!9053 = !DILocation(line: 3482, column: 3, scope: !8993)
!9054 = !DILocation(line: 3482, column: 63, scope: !8993)
!9055 = !DILocation(line: 3482, column: 33, scope: !8993)
!9056 = !DILocation(line: 3482, column: 25, scope: !8993)
!9057 = !DILocation(line: 3483, column: 3, scope: !8993)
!9058 = !DILocation(line: 0, scope: !9004)
!9059 = !DILocation(line: 0, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 3506, column: 8)
!9061 = !DILocation(line: 0, scope: !9023)
!9062 = !DILocation(line: 0, scope: !9022)
!9063 = !DILocation(line: 0, scope: !9025)
!9064 = !DILocation(line: 3486, column: 8, scope: !9008)
!9065 = !DILocation(line: 3486, column: 15, scope: !9007)
!9066 = !DILocation(line: 0, scope: !9008)
!9067 = !DILocation(line: 3481, column: 8, scope: !8993)
!9068 = !DILocation(line: 3486, column: 3, scope: !9008)
!9069 = !DILocation(line: 3488, column: 11, scope: !9005)
!9070 = !DILocation(line: 3488, column: 17, scope: !9005)
!9071 = !DILocation(line: 3488, column: 22, scope: !9005)
!9072 = !DILocation(line: 3488, column: 11, scope: !9006)
!9073 = !DILocation(line: 3496, column: 4, scope: !9004)
!9074 = !DILocation(line: 3499, column: 4, scope: !9004)
!9075 = !DILocation(line: 3503, column: 10, scope: !9004)
!9076 = !DILocation(line: 3504, column: 35, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 3504, column: 8)
!9078 = !DILocation(line: 3504, column: 8, scope: !9077)
!9079 = !DILocation(line: 3504, column: 8, scope: !9004)
!9080 = !DILocation(line: 3506, column: 35, scope: !9060)
!9081 = !DILocation(line: 3506, column: 8, scope: !9060)
!9082 = !DILocation(line: 3506, column: 8, scope: !9004)
!9083 = !DILocation(line: 3508, column: 12, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !3, line: 3508, column: 12)
!9085 = distinct !DILexicalBlock(scope: !9060, file: !3, line: 3507, column: 6)
!9086 = !DILocation(line: 3508, column: 22, scope: !9084)
!9087 = !DILocation(line: 3508, column: 26, scope: !9084)
!9088 = !DILocation(line: 3508, column: 37, scope: !9084)
!9089 = !DILocation(line: 3508, column: 12, scope: !9085)
!9090 = !DILocation(line: 3509, column: 3, scope: !9084)
!9091 = !DILocation(line: 3513, column: 12, scope: !9004)
!9092 = !DILocation(line: 3514, column: 4, scope: !9023)
!9093 = !DILocation(line: 3495, column: 13, scope: !9004)
!9094 = !DILocation(line: 3494, column: 9, scope: !9004)
!9095 = !DILocation(line: 3492, column: 9, scope: !9004)
!9096 = !DILocation(line: 3500, column: 13, scope: !9004)
!9097 = !DILocation(line: 3501, column: 9, scope: !9004)
!9098 = !DILocation(line: 3514, column: 4, scope: !9022)
!9099 = !DILocation(line: 3520, column: 8, scope: !9021)
!9100 = !DILocation(line: 3521, column: 17, scope: !9021)
!9101 = !DILocation(line: 3521, column: 23, scope: !9021)
!9102 = !DILocation(line: 3522, column: 32, scope: !9021)
!9103 = !DILocation(line: 3522, column: 38, scope: !9021)
!9104 = !DILocation(line: 3522, column: 17, scope: !9021)
!9105 = !DILocation(line: 3534, column: 19, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 3534, column: 12)
!9107 = !DILocation(line: 3534, column: 12, scope: !9021)
!9108 = !DILocation(line: 3540, column: 17, scope: !9021)
!9109 = !DILocation(line: 3541, column: 17, scope: !9021)
!9110 = !DILocation(line: 0, scope: !9021)
!9111 = !DILocation(line: 3542, column: 43, scope: !9021)
!9112 = !DILocation(line: 3542, column: 23, scope: !9021)
!9113 = !DILocation(line: 3544, column: 25, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 3544, column: 12)
!9115 = !DILocation(line: 0, scope: !9114)
!9116 = !DILocation(line: 3544, column: 12, scope: !9021)
!9117 = !DILocation(line: 3546, column: 26, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 3545, column: 3)
!9119 = !DILocation(line: 3548, column: 3, scope: !9118)
!9120 = !DILocation(line: 3551, column: 26, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 3550, column: 3)
!9122 = !DILocation(line: 3555, column: 36, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9121, file: !3, line: 3555, column: 9)
!9124 = !DILocation(line: 3555, column: 9, scope: !9123)
!9125 = !DILocation(line: 3555, column: 9, scope: !9121)
!9126 = !DILocation(line: 3557, column: 17, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9121, file: !3, line: 3557, column: 9)
!9128 = !DILocation(line: 3557, column: 9, scope: !9121)
!9129 = !DILocation(line: 3559, column: 28, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9127, file: !3, line: 3559, column: 14)
!9131 = !DILocation(line: 3559, column: 37, scope: !9130)
!9132 = !DILocation(line: 3559, column: 15, scope: !9130)
!9133 = !DILocation(line: 3559, column: 14, scope: !9127)
!9134 = distinct !{!9134, !9092, !9135}
!9135 = !DILocation(line: 3562, column: 6, scope: !9023)
!9136 = !DILocation(line: 3567, column: 21, scope: !9027)
!9137 = !DILocation(line: 3567, column: 37, scope: !9027)
!9138 = !DILocation(line: 3567, column: 48, scope: !9027)
!9139 = !DILocation(line: 3568, column: 11, scope: !9027)
!9140 = !DILocation(line: 3567, column: 8, scope: !9004)
!9141 = !DILocation(line: 3570, column: 66, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 3570, column: 12)
!9143 = distinct !DILexicalBlock(scope: !9027, file: !3, line: 3569, column: 6)
!9144 = !DILocation(line: 3570, column: 47, scope: !9142)
!9145 = !DILocation(line: 3570, column: 12, scope: !9142)
!9146 = !DILocation(line: 3570, column: 12, scope: !9143)
!9147 = !DILocation(line: 3573, column: 6, scope: !9143)
!9148 = !DILocation(line: 3577, column: 14, scope: !9026)
!9149 = !DILocation(line: 3577, column: 29, scope: !9026)
!9150 = !DILocation(line: 3577, column: 26, scope: !9026)
!9151 = !DILocation(line: 3577, column: 41, scope: !9026)
!9152 = !DILocation(line: 3578, column: 24, scope: !9026)
!9153 = !DILocation(line: 3578, column: 29, scope: !9026)
!9154 = !DILocation(line: 3579, column: 10, scope: !9026)
!9155 = !DILocation(line: 3579, column: 32, scope: !9026)
!9156 = !DILocation(line: 3580, column: 6, scope: !9026)
!9157 = !DILocation(line: 3580, column: 10, scope: !9026)
!9158 = !DILocation(line: 3577, column: 13, scope: !9027)
!9159 = !DILocation(line: 3582, column: 8, scope: !9025)
!9160 = !DILocation(line: 3583, column: 8, scope: !9025)
!9161 = !DILocation(line: 3584, column: 31, scope: !9025)
!9162 = !DILocation(line: 3587, column: 31, scope: !9025)
!9163 = !DILocation(line: 3588, column: 8, scope: !9034)
!9164 = !DILocation(line: 0, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3597, column: 13)
!9166 = !DILocation(line: 3588, column: 8, scope: !9033)
!9167 = !DILocation(line: 3590, column: 40, scope: !9032)
!9168 = !DILocation(line: 3590, column: 21, scope: !9032)
!9169 = !DILocation(line: 0, scope: !9032)
!9170 = !DILocation(line: 3592, column: 15, scope: !9037)
!9171 = !DILocation(line: 3592, column: 20, scope: !9037)
!9172 = !DILocation(line: 3592, column: 9, scope: !9032)
!9173 = !DILocation(line: 3594, column: 38, scope: !9036)
!9174 = !DILocation(line: 3594, column: 29, scope: !9036)
!9175 = !DILocation(line: 0, scope: !9036)
!9176 = !DILocation(line: 3597, column: 27, scope: !9165)
!9177 = !DILocation(line: 3597, column: 32, scope: !9165)
!9178 = !DILocation(line: 3597, column: 13, scope: !9036)
!9179 = !DILocation(line: 3599, column: 12, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 3598, column: 4)
!9181 = !DILocation(line: 3599, column: 19, scope: !9180)
!9182 = !DILocation(line: 3600, column: 26, scope: !9180)
!9183 = !DILocation(line: 3601, column: 4, scope: !9180)
!9184 = !DILocation(line: 3603, column: 19, scope: !9165)
!9185 = !DILocation(line: 3603, column: 59, scope: !9165)
!9186 = !DILocation(line: 3603, column: 17, scope: !9165)
!9187 = !DILocation(line: 3604, column: 15, scope: !9036)
!9188 = !DILocation(line: 3604, column: 24, scope: !9036)
!9189 = !DILocation(line: 3605, column: 7, scope: !9036)
!9190 = distinct !{!9190, !9163, !9191}
!9191 = !DILocation(line: 3606, column: 3, scope: !9034)
!9192 = !DILocation(line: 3607, column: 6, scope: !9026)
!9193 = !DILocation(line: 3607, column: 6, scope: !9025)
!9194 = !DILocation(line: 3608, column: 4, scope: !9004)
!9195 = !DILocation(line: 3609, column: 2, scope: !9005)
!9196 = !DILocation(line: 3486, column: 56, scope: !9007)
!9197 = !DILocation(line: 3486, column: 3, scope: !9007)
!9198 = distinct !{!9198, !9068, !9199}
!9199 = !DILocation(line: 3610, column: 5, scope: !9008)
!9200 = !DILocation(line: 3612, column: 3, scope: !8993)
!9201 = !DILocation(line: 3614, column: 1, scope: !8993)
!9202 = !DILocation(line: 3613, column: 3, scope: !8993)
!9203 = distinct !DISubprogram(name: "do_partial_partial_insertion", scope: !3, file: !3, line: 3625, type: !8994, scopeLine: 3626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9204)
!9204 = !{!9205, !9206, !9207, !9208, !9209, !9210, !9211, !9217, !9218, !9219, !9220, !9221, !9222, !9223, !9224, !9228}
!9205 = !DILocalVariable(name: "block", arg: 1, scope: !9203, file: !3, line: 3625, type: !1477)
!9206 = !DILocalVariable(name: "dom", arg: 2, scope: !9203, file: !3, line: 3625, type: !1477)
!9207 = !DILocalVariable(name: "new_stuff", scope: !9203, file: !3, line: 3627, type: !663)
!9208 = !DILocalVariable(name: "exprs", scope: !9203, file: !3, line: 3628, type: !2099)
!9209 = !DILocalVariable(name: "expr", scope: !9203, file: !3, line: 3629, type: !754)
!9210 = !DILocalVariable(name: "i", scope: !9203, file: !3, line: 3630, type: !664)
!9211 = !DILocalVariable(name: "avail", scope: !9212, file: !3, line: 3636, type: !2173)
!9212 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 3635, column: 2)
!9213 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3634, column: 11)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 3633, column: 5)
!9215 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 3632, column: 3)
!9216 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 3632, column: 3)
!9217 = !DILocalVariable(name: "val", scope: !9212, file: !3, line: 3637, type: !6)
!9218 = !DILocalVariable(name: "by_all", scope: !9212, file: !3, line: 3638, type: !663)
!9219 = !DILocalVariable(name: "cant_insert", scope: !9212, file: !3, line: 3639, type: !663)
!9220 = !DILocalVariable(name: "pred", scope: !9212, file: !3, line: 3640, type: !1005)
!9221 = !DILocalVariable(name: "bprime", scope: !9212, file: !3, line: 3641, type: !1477)
!9222 = !DILocalVariable(name: "eprime", scope: !9212, file: !3, line: 3642, type: !754)
!9223 = !DILocalVariable(name: "ei", scope: !9212, file: !3, line: 3643, type: !2146)
!9224 = !DILocalVariable(name: "vprime", scope: !9225, file: !3, line: 3654, type: !6)
!9225 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 3653, column: 6)
!9226 = distinct !DILexicalBlock(scope: !9227, file: !3, line: 3652, column: 4)
!9227 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 3652, column: 4)
!9228 = !DILocalVariable(name: "edoubleprime", scope: !9225, file: !3, line: 3655, type: !754)
!9229 = !DILocation(line: 0, scope: !9203)
!9230 = !DILocation(line: 3628, column: 3, scope: !9203)
!9231 = !DILocation(line: 3628, column: 63, scope: !9203)
!9232 = !DILocation(line: 3628, column: 33, scope: !9203)
!9233 = !DILocation(line: 3628, column: 25, scope: !9203)
!9234 = !DILocation(line: 3629, column: 3, scope: !9203)
!9235 = !DILocation(line: 0, scope: !9212)
!9236 = !DILocation(line: 0, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 3648, column: 8)
!9238 = !DILocation(line: 0, scope: !9227)
!9239 = !DILocation(line: 0, scope: !9226)
!9240 = !DILocation(line: 3632, column: 8, scope: !9216)
!9241 = !DILocation(line: 3632, column: 15, scope: !9215)
!9242 = !DILocation(line: 0, scope: !9216)
!9243 = !DILocation(line: 3627, column: 8, scope: !9203)
!9244 = !DILocation(line: 3632, column: 3, scope: !9216)
!9245 = !DILocation(line: 3634, column: 11, scope: !9213)
!9246 = !DILocation(line: 3634, column: 17, scope: !9213)
!9247 = !DILocation(line: 3634, column: 22, scope: !9213)
!9248 = !DILocation(line: 3634, column: 11, scope: !9214)
!9249 = !DILocation(line: 3640, column: 4, scope: !9212)
!9250 = !DILocation(line: 3643, column: 4, scope: !9212)
!9251 = !DILocation(line: 3645, column: 10, scope: !9212)
!9252 = !DILocation(line: 3646, column: 35, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 3646, column: 8)
!9254 = !DILocation(line: 3646, column: 8, scope: !9253)
!9255 = !DILocation(line: 3646, column: 8, scope: !9212)
!9256 = !DILocation(line: 3648, column: 35, scope: !9237)
!9257 = !DILocation(line: 3648, column: 8, scope: !9237)
!9258 = !DILocation(line: 3648, column: 8, scope: !9212)
!9259 = !DILocation(line: 3651, column: 12, scope: !9212)
!9260 = !DILocation(line: 3652, column: 4, scope: !9227)
!9261 = !DILocation(line: 3638, column: 9, scope: !9212)
!9262 = !DILocation(line: 3652, column: 4, scope: !9226)
!9263 = !DILocation(line: 3659, column: 8, scope: !9225)
!9264 = !DILocation(line: 3660, column: 17, scope: !9225)
!9265 = !DILocation(line: 3660, column: 23, scope: !9225)
!9266 = !DILocation(line: 3661, column: 32, scope: !9225)
!9267 = !DILocation(line: 3661, column: 38, scope: !9225)
!9268 = !DILocation(line: 3662, column: 11, scope: !9225)
!9269 = !DILocation(line: 3661, column: 17, scope: !9225)
!9270 = !DILocation(line: 3674, column: 19, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 3674, column: 12)
!9272 = !DILocation(line: 3674, column: 12, scope: !9225)
!9273 = !DILocation(line: 3680, column: 17, scope: !9225)
!9274 = !DILocation(line: 3681, column: 17, scope: !9225)
!9275 = !DILocation(line: 0, scope: !9225)
!9276 = !DILocation(line: 3682, column: 43, scope: !9225)
!9277 = !DILocation(line: 3682, column: 23, scope: !9225)
!9278 = !DILocation(line: 3684, column: 25, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 3684, column: 12)
!9280 = !DILocation(line: 3684, column: 12, scope: !9225)
!9281 = !DILocation(line: 3690, column: 17, scope: !9279)
!9282 = !DILocation(line: 3690, column: 3, scope: !9279)
!9283 = !DILocation(line: 3690, column: 24, scope: !9279)
!9284 = !DILocation(line: 3692, column: 6, scope: !9226)
!9285 = distinct !{!9285, !9260, !9286}
!9286 = !DILocation(line: 3692, column: 6, scope: !9227)
!9287 = !DILocation(line: 3698, column: 9, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 3698, column: 8)
!9289 = !DILocation(line: 3698, column: 24, scope: !9288)
!9290 = !DILocation(line: 3698, column: 21, scope: !9288)
!9291 = !DILocation(line: 3698, column: 34, scope: !9288)
!9292 = !DILocation(line: 3698, column: 8, scope: !9212)
!9293 = !DILocation(line: 3700, column: 27, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9288, file: !3, line: 3699, column: 6)
!9295 = !DILocation(line: 3701, column: 66, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 3701, column: 12)
!9297 = !DILocation(line: 3701, column: 47, scope: !9296)
!9298 = !DILocation(line: 3701, column: 12, scope: !9296)
!9299 = !DILocation(line: 3701, column: 12, scope: !9294)
!9300 = !DILocation(line: 3704, column: 6, scope: !9294)
!9301 = !DILocation(line: 3705, column: 4, scope: !9212)
!9302 = !DILocation(line: 3706, column: 2, scope: !9213)
!9303 = !DILocation(line: 3632, column: 56, scope: !9215)
!9304 = !DILocation(line: 3632, column: 3, scope: !9215)
!9305 = distinct !{!9305, !9244, !9306}
!9306 = !DILocation(line: 3707, column: 5, scope: !9216)
!9307 = !DILocation(line: 3709, column: 3, scope: !9203)
!9308 = !DILocation(line: 3711, column: 1, scope: !9203)
!9309 = !DILocation(line: 3710, column: 3, scope: !9203)
!9310 = distinct !DISubprogram(name: "insert_into_preds_of_block", scope: !3, file: !3, line: 3245, type: !9311, scopeLine: 3247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9313)
!9311 = !DISubroutineType(types: !9312)
!9312 = !{!663, !1477, !6, !2173}
!9313 = !{!9314, !9315, !9316, !9317, !9318, !9319, !9320, !9321, !9322, !9323, !9324, !9325, !9326, !9327, !9328, !9329, !9332, !9333, !9337, !9338, !9342, !9345, !9348, !9353, !9357, !9360, !9363, !9364, !9367, !9371}
!9314 = !DILocalVariable(name: "block", arg: 1, scope: !9310, file: !3, line: 3245, type: !1477)
!9315 = !DILocalVariable(name: "exprnum", arg: 2, scope: !9310, file: !3, line: 3245, type: !6)
!9316 = !DILocalVariable(name: "avail", arg: 3, scope: !9310, file: !3, line: 3246, type: !2173)
!9317 = !DILocalVariable(name: "expr", scope: !9310, file: !3, line: 3248, type: !754)
!9318 = !DILocalVariable(name: "newphi", scope: !9310, file: !3, line: 3249, type: !754)
!9319 = !DILocalVariable(name: "val", scope: !9310, file: !3, line: 3250, type: !6)
!9320 = !DILocalVariable(name: "pred", scope: !9310, file: !3, line: 3251, type: !1005)
!9321 = !DILocalVariable(name: "insertions", scope: !9310, file: !3, line: 3252, type: !663)
!9322 = !DILocalVariable(name: "nophi", scope: !9310, file: !3, line: 3253, type: !663)
!9323 = !DILocalVariable(name: "bprime", scope: !9310, file: !3, line: 3254, type: !1477)
!9324 = !DILocalVariable(name: "eprime", scope: !9310, file: !3, line: 3255, type: !754)
!9325 = !DILocalVariable(name: "ei", scope: !9310, file: !3, line: 3256, type: !2146)
!9326 = !DILocalVariable(name: "type", scope: !9310, file: !3, line: 3257, type: !765)
!9327 = !DILocalVariable(name: "temp", scope: !9310, file: !3, line: 3258, type: !765)
!9328 = !DILocalVariable(name: "phi", scope: !9310, file: !3, line: 3259, type: !1025)
!9329 = !DILocalVariable(name: "firstinsideloop", scope: !9330, file: !3, line: 3271, type: !663)
!9330 = distinct !DILexicalBlock(scope: !9331, file: !3, line: 3270, column: 5)
!9331 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 3269, column: 7)
!9332 = !DILocalVariable(name: "secondinsideloop", scope: !9330, file: !3, line: 3272, type: !663)
!9333 = !DILocalVariable(name: "stmts", scope: !9334, file: !3, line: 3291, type: !1015)
!9334 = distinct !DILexicalBlock(scope: !9335, file: !3, line: 3290, column: 5)
!9335 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 3289, column: 3)
!9336 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 3289, column: 3)
!9337 = !DILocalVariable(name: "builtexpr", scope: !9334, file: !3, line: 3292, type: !765)
!9338 = !DILocalVariable(name: "constant", scope: !9339, file: !3, line: 3312, type: !765)
!9339 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 3308, column: 2)
!9340 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 3307, column: 16)
!9341 = distinct !DILexicalBlock(scope: !9334, file: !3, line: 3296, column: 11)
!9342 = !DILocalVariable(name: "builtexpr", scope: !9343, file: !3, line: 3315, type: !765)
!9343 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 3314, column: 6)
!9344 = distinct !DILexicalBlock(scope: !9339, file: !3, line: 3313, column: 8)
!9345 = !DILocalVariable(name: "forcedexpr", scope: !9346, file: !3, line: 3318, type: !765)
!9346 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 3317, column: 3)
!9347 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 3316, column: 12)
!9348 = !DILocalVariable(name: "gsi", scope: !9349, file: !3, line: 3330, type: !3671)
!9349 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 3329, column: 4)
!9350 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 3328, column: 13)
!9351 = distinct !DILexicalBlock(scope: !9352, file: !3, line: 3322, column: 7)
!9352 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 3321, column: 9)
!9353 = !DILocalVariable(name: "stmt", scope: !9354, file: !3, line: 3334, type: !1025)
!9354 = distinct !DILexicalBlock(scope: !9355, file: !3, line: 3333, column: 8)
!9355 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 3332, column: 6)
!9356 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 3332, column: 6)
!9357 = !DILocalVariable(name: "name", scope: !9358, file: !3, line: 3351, type: !765)
!9358 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 3346, column: 2)
!9359 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 3345, column: 16)
!9360 = !DILocalVariable(name: "builtexpr", scope: !9361, file: !3, line: 3354, type: !765)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 3353, column: 6)
!9362 = distinct !DILexicalBlock(scope: !9358, file: !3, line: 3352, column: 8)
!9363 = !DILocalVariable(name: "forcedexpr", scope: !9361, file: !3, line: 3355, type: !765)
!9364 = !DILocalVariable(name: "gsi", scope: !9365, file: !3, line: 3369, type: !3671)
!9365 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 3368, column: 3)
!9366 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 3367, column: 12)
!9367 = !DILocalVariable(name: "stmt", scope: !9368, file: !3, line: 3373, type: !1025)
!9368 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 3372, column: 7)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 3371, column: 5)
!9370 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 3371, column: 5)
!9371 = !DILocalVariable(name: "ae", scope: !9372, file: !3, line: 3415, type: !754)
!9372 = distinct !DILexicalBlock(scope: !9373, file: !3, line: 3414, column: 5)
!9373 = distinct !DILexicalBlock(scope: !9374, file: !3, line: 3413, column: 3)
!9374 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 3413, column: 3)
!9375 = !DILocation(line: 0, scope: !9310)
!9376 = !DILocation(line: 3248, column: 19, scope: !9310)
!9377 = !DILocation(line: 3250, column: 22, scope: !9310)
!9378 = !DILocation(line: 3251, column: 3, scope: !9310)
!9379 = !DILocation(line: 3256, column: 3, scope: !9310)
!9380 = !DILocation(line: 3257, column: 15, scope: !9310)
!9381 = !DILocation(line: 3261, column: 7, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 3261, column: 7)
!9383 = !DILocation(line: 3261, column: 17, scope: !9382)
!9384 = !DILocation(line: 3261, column: 21, scope: !9382)
!9385 = !DILocation(line: 3261, column: 32, scope: !9382)
!9386 = !DILocation(line: 3261, column: 7, scope: !9310)
!9387 = !DILocation(line: 3263, column: 7, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9382, file: !3, line: 3262, column: 5)
!9389 = !DILocation(line: 3264, column: 23, scope: !9388)
!9390 = !DILocation(line: 3264, column: 7, scope: !9388)
!9391 = !DILocation(line: 3265, column: 16, scope: !9388)
!9392 = !DILocation(line: 3265, column: 7, scope: !9388)
!9393 = !DILocation(line: 3266, column: 5, scope: !9388)
!9394 = !DILocation(line: 3269, column: 14, scope: !9331)
!9395 = !DILocation(line: 3269, column: 25, scope: !9331)
!9396 = !DILocation(line: 3269, column: 29, scope: !9331)
!9397 = !DILocation(line: 3269, column: 32, scope: !9331)
!9398 = !DILocation(line: 3269, column: 58, scope: !9331)
!9399 = !DILocation(line: 3269, column: 7, scope: !9310)
!9400 = !DILocation(line: 0, scope: !9330)
!9401 = !DILocation(line: 3273, column: 55, scope: !9330)
!9402 = !DILocation(line: 3274, column: 13, scope: !9330)
!9403 = !DILocation(line: 3274, column: 35, scope: !9330)
!9404 = !DILocation(line: 3273, column: 25, scope: !9330)
!9405 = !DILocation(line: 3275, column: 56, scope: !9330)
!9406 = !DILocation(line: 3276, column: 7, scope: !9330)
!9407 = !DILocation(line: 3276, column: 29, scope: !9330)
!9408 = !DILocation(line: 3275, column: 26, scope: !9330)
!9409 = !DILocation(line: 3278, column: 28, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9330, file: !3, line: 3278, column: 11)
!9411 = !DILocation(line: 3279, column: 4, scope: !9410)
!9412 = !DILocation(line: 3279, column: 14, scope: !9410)
!9413 = !DILocation(line: 3279, column: 19, scope: !9410)
!9414 = !DILocation(line: 3280, column: 8, scope: !9410)
!9415 = !DILocation(line: 3280, column: 11, scope: !9410)
!9416 = !DILocation(line: 3278, column: 11, scope: !9330)
!9417 = !DILocation(line: 3282, column: 8, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 3282, column: 8)
!9419 = distinct !DILexicalBlock(scope: !9410, file: !3, line: 3281, column: 2)
!9420 = !DILocation(line: 3282, column: 18, scope: !9418)
!9421 = !DILocation(line: 3282, column: 22, scope: !9418)
!9422 = !DILocation(line: 3282, column: 33, scope: !9418)
!9423 = !DILocation(line: 3282, column: 8, scope: !9419)
!9424 = !DILocation(line: 3283, column: 6, scope: !9418)
!9425 = !DILocation(line: 3289, column: 3, scope: !9336)
!9426 = !DILocation(line: 0, scope: !9335)
!9427 = !DILocation(line: 0, scope: !9334)
!9428 = !DILocation(line: 0, scope: !9365)
!9429 = !DILocation(line: 0, scope: !9349)
!9430 = !DILocation(line: 3289, column: 3, scope: !9335)
!9431 = !DILocation(line: 3291, column: 7, scope: !9334)
!9432 = !DILocation(line: 3291, column: 18, scope: !9334)
!9433 = !DILocation(line: 3293, column: 16, scope: !9334)
!9434 = !DILocation(line: 3293, column: 22, scope: !9334)
!9435 = !DILocation(line: 3294, column: 30, scope: !9334)
!9436 = !DILocation(line: 3294, column: 16, scope: !9334)
!9437 = !DILocation(line: 3296, column: 19, scope: !9341)
!9438 = !DILocation(line: 3296, column: 24, scope: !9341)
!9439 = !DILocation(line: 3296, column: 32, scope: !9341)
!9440 = !DILocation(line: 3296, column: 48, scope: !9341)
!9441 = !DILocation(line: 3296, column: 11, scope: !9334)
!9442 = !DILocation(line: 3298, column: 16, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 3297, column: 2)
!9444 = !DILocation(line: 3302, column: 4, scope: !9443)
!9445 = !DILocation(line: 3303, column: 28, scope: !9443)
!9446 = !DILocation(line: 3303, column: 34, scope: !9443)
!9447 = !DILocation(line: 3303, column: 4, scope: !9443)
!9448 = !DILocation(line: 3304, column: 27, scope: !9443)
!9449 = !DILocation(line: 3304, column: 18, scope: !9443)
!9450 = !DILocation(line: 3304, column: 4, scope: !9443)
!9451 = !DILocation(line: 3304, column: 25, scope: !9443)
!9452 = !DILocation(line: 3306, column: 2, scope: !9443)
!9453 = !DILocation(line: 3307, column: 29, scope: !9340)
!9454 = !DILocation(line: 3307, column: 16, scope: !9341)
!9455 = !DILocation(line: 3312, column: 20, scope: !9339)
!9456 = !DILocation(line: 0, scope: !9339)
!9457 = !DILocation(line: 3313, column: 42, scope: !9344)
!9458 = !DILocation(line: 3313, column: 9, scope: !9344)
!9459 = !DILocation(line: 3313, column: 8, scope: !9339)
!9460 = !DILocation(line: 3315, column: 25, scope: !9343)
!9461 = !DILocation(line: 0, scope: !9343)
!9462 = !DILocation(line: 3316, column: 13, scope: !9347)
!9463 = !DILocation(line: 3316, column: 12, scope: !9343)
!9464 = !DILocation(line: 3318, column: 23, scope: !9346)
!9465 = !DILocation(line: 0, scope: !9346)
!9466 = !DILocation(line: 3321, column: 10, scope: !9352)
!9467 = !DILocation(line: 3321, column: 9, scope: !9346)
!9468 = !DILocation(line: 3323, column: 24, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 3323, column: 13)
!9470 = !DILocation(line: 3323, column: 13, scope: !9351)
!9471 = !DILocation(line: 3325, column: 41, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 3324, column: 4)
!9473 = !DILocation(line: 3325, column: 6, scope: !9472)
!9474 = !DILocation(line: 3325, column: 39, scope: !9472)
!9475 = !DILocation(line: 3326, column: 39, scope: !9472)
!9476 = !DILocation(line: 3326, column: 6, scope: !9472)
!9477 = !DILocation(line: 3326, column: 28, scope: !9472)
!9478 = !DILocation(line: 3326, column: 37, scope: !9472)
!9479 = !DILocation(line: 3327, column: 4, scope: !9472)
!9480 = !DILocation(line: 3328, column: 13, scope: !9350)
!9481 = !DILocation(line: 3328, column: 13, scope: !9351)
!9482 = !DILocation(line: 3330, column: 6, scope: !9349)
!9483 = !DILocation(line: 3331, column: 12, scope: !9349)
!9484 = !DILocation(line: 3332, column: 6, scope: !9349)
!9485 = !DILocation(line: 3332, column: 14, scope: !9355)
!9486 = !DILocation(line: 3332, column: 13, scope: !9355)
!9487 = !DILocation(line: 3332, column: 6, scope: !9356)
!9488 = !DILocation(line: 3334, column: 24, scope: !9354)
!9489 = !DILocation(line: 0, scope: !9354)
!9490 = !DILocation(line: 3335, column: 10, scope: !9354)
!9491 = !DILocation(line: 3336, column: 10, scope: !9354)
!9492 = !DILocation(line: 3332, column: 31, scope: !9355)
!9493 = !DILocation(line: 3332, column: 6, scope: !9355)
!9494 = distinct !{!9494, !9487, !9495}
!9495 = !DILocation(line: 3337, column: 8, scope: !9356)
!9496 = !DILocation(line: 3338, column: 30, scope: !9349)
!9497 = !DILocation(line: 3338, column: 36, scope: !9349)
!9498 = !DILocation(line: 3338, column: 6, scope: !9349)
!9499 = !DILocation(line: 3339, column: 4, scope: !9350)
!9500 = !DILocation(line: 3339, column: 4, scope: !9349)
!9501 = !DILocation(line: 3340, column: 32, scope: !9351)
!9502 = !DILocation(line: 3340, column: 23, scope: !9351)
!9503 = !DILocation(line: 3340, column: 9, scope: !9351)
!9504 = !DILocation(line: 3340, column: 30, scope: !9351)
!9505 = !DILocation(line: 3341, column: 7, scope: !9351)
!9506 = !DILocation(line: 3345, column: 16, scope: !9340)
!9507 = !DILocation(line: 3351, column: 16, scope: !9358)
!9508 = !DILocation(line: 0, scope: !9358)
!9509 = !DILocation(line: 3352, column: 42, scope: !9362)
!9510 = !DILocation(line: 3352, column: 9, scope: !9362)
!9511 = !DILocation(line: 3352, column: 8, scope: !9358)
!9512 = !DILocation(line: 3356, column: 20, scope: !9361)
!9513 = !DILocation(line: 0, scope: !9361)
!9514 = !DILocation(line: 3357, column: 21, scope: !9361)
!9515 = !DILocation(line: 3361, column: 23, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 3361, column: 12)
!9517 = !DILocation(line: 3361, column: 12, scope: !9361)
!9518 = !DILocation(line: 3363, column: 40, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9516, file: !3, line: 3362, column: 3)
!9520 = !DILocation(line: 3363, column: 56, scope: !9519)
!9521 = !DILocation(line: 3363, column: 5, scope: !9519)
!9522 = !DILocation(line: 3363, column: 38, scope: !9519)
!9523 = !DILocation(line: 3364, column: 38, scope: !9519)
!9524 = !DILocation(line: 3364, column: 54, scope: !9519)
!9525 = !DILocation(line: 3364, column: 5, scope: !9519)
!9526 = !DILocation(line: 3364, column: 27, scope: !9519)
!9527 = !DILocation(line: 3364, column: 36, scope: !9519)
!9528 = !DILocation(line: 3365, column: 3, scope: !9519)
!9529 = !DILocation(line: 3367, column: 12, scope: !9366)
!9530 = !DILocation(line: 3367, column: 12, scope: !9361)
!9531 = !DILocation(line: 3369, column: 5, scope: !9365)
!9532 = !DILocation(line: 3370, column: 11, scope: !9365)
!9533 = !DILocation(line: 3371, column: 5, scope: !9365)
!9534 = !DILocation(line: 3371, column: 13, scope: !9369)
!9535 = !DILocation(line: 3371, column: 12, scope: !9369)
!9536 = !DILocation(line: 3371, column: 5, scope: !9370)
!9537 = !DILocation(line: 3373, column: 23, scope: !9368)
!9538 = !DILocation(line: 0, scope: !9368)
!9539 = !DILocation(line: 3374, column: 9, scope: !9368)
!9540 = !DILocation(line: 3375, column: 9, scope: !9368)
!9541 = !DILocation(line: 3371, column: 30, scope: !9369)
!9542 = !DILocation(line: 3371, column: 5, scope: !9369)
!9543 = distinct !{!9543, !9536, !9544}
!9544 = !DILocation(line: 3376, column: 7, scope: !9370)
!9545 = !DILocation(line: 3377, column: 29, scope: !9365)
!9546 = !DILocation(line: 3377, column: 35, scope: !9365)
!9547 = !DILocation(line: 3377, column: 5, scope: !9365)
!9548 = !DILocation(line: 3378, column: 3, scope: !9366)
!9549 = !DILocation(line: 3378, column: 3, scope: !9365)
!9550 = !DILocation(line: 3379, column: 31, scope: !9361)
!9551 = !DILocation(line: 3379, column: 22, scope: !9361)
!9552 = !DILocation(line: 3379, column: 8, scope: !9361)
!9553 = !DILocation(line: 3379, column: 29, scope: !9361)
!9554 = !DILocation(line: 3380, column: 6, scope: !9361)
!9555 = !DILocation(line: 3382, column: 5, scope: !9335)
!9556 = distinct !{!9556, !9425, !9557}
!9557 = !DILocation(line: 3382, column: 5, scope: !9336)
!9558 = !DILocation(line: 3387, column: 7, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 3387, column: 7)
!9560 = !DILocation(line: 3387, column: 16, scope: !9559)
!9561 = !DILocation(line: 3387, column: 13, scope: !9559)
!9562 = !DILocation(line: 3389, column: 12, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 3389, column: 12)
!9564 = !DILocation(line: 3389, column: 18, scope: !9563)
!9565 = !DILocation(line: 3393, column: 8, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 3393, column: 7)
!9567 = !DILocation(line: 3393, column: 19, scope: !9566)
!9568 = !DILocation(line: 3393, column: 22, scope: !9566)
!9569 = !DILocation(line: 3393, column: 45, scope: !9566)
!9570 = !DILocation(line: 3393, column: 7, scope: !9310)
!9571 = !DILocation(line: 3395, column: 20, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 3394, column: 5)
!9573 = !DILocation(line: 3395, column: 18, scope: !9572)
!9574 = !DILocation(line: 3396, column: 7, scope: !9572)
!9575 = !DILocation(line: 3399, column: 10, scope: !9310)
!9576 = !DILocation(line: 3397, column: 5, scope: !9572)
!9577 = !DILocation(line: 3400, column: 3, scope: !9310)
!9578 = !DILocation(line: 3402, column: 7, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 3402, column: 7)
!9580 = !DILocation(line: 3402, column: 24, scope: !9579)
!9581 = !DILocation(line: 3403, column: 7, scope: !9579)
!9582 = !DILocation(line: 3403, column: 27, scope: !9579)
!9583 = !DILocation(line: 3402, column: 7, scope: !9310)
!9584 = !DILocation(line: 3404, column: 5, scope: !9579)
!9585 = !DILocation(line: 3404, column: 30, scope: !9579)
!9586 = !DILocation(line: 3405, column: 9, scope: !9310)
!9587 = !DILocation(line: 3407, column: 3, scope: !9310)
!9588 = !DILocation(line: 3408, column: 51, scope: !9310)
!9589 = !DILocation(line: 3408, column: 16, scope: !9310)
!9590 = !DILocation(line: 3408, column: 3, scope: !9310)
!9591 = !DILocation(line: 3408, column: 42, scope: !9310)
!9592 = !DILocation(line: 3408, column: 49, scope: !9310)
!9593 = !DILocation(line: 3409, column: 12, scope: !9310)
!9594 = !DILocation(line: 3409, column: 3, scope: !9310)
!9595 = !DILocation(line: 3409, column: 38, scope: !9310)
!9596 = !DILocation(line: 3409, column: 47, scope: !9310)
!9597 = !DILocation(line: 3410, column: 3, scope: !9310)
!9598 = !DILocation(line: 3411, column: 19, scope: !9310)
!9599 = !DILocation(line: 3412, column: 5, scope: !9310)
!9600 = !DILocation(line: 3411, column: 3, scope: !9310)
!9601 = !DILocation(line: 3413, column: 3, scope: !9374)
!9602 = !DILocation(line: 3413, column: 3, scope: !9373)
!9603 = !DILocation(line: 3415, column: 27, scope: !9372)
!9604 = !DILocation(line: 3415, column: 33, scope: !9372)
!9605 = !DILocation(line: 3415, column: 38, scope: !9372)
!9606 = !DILocation(line: 3415, column: 21, scope: !9372)
!9607 = !DILocation(line: 0, scope: !9372)
!9608 = !DILocation(line: 3416, column: 7, scope: !9372)
!9609 = !DILocation(line: 3418, column: 15, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 3418, column: 11)
!9611 = !DILocation(line: 3418, column: 20, scope: !9610)
!9612 = !DILocation(line: 3418, column: 11, scope: !9372)
!9613 = !DILocation(line: 3419, column: 20, scope: !9610)
!9614 = !DILocation(line: 3419, column: 44, scope: !9610)
!9615 = !DILocation(line: 3419, column: 2, scope: !9610)
!9616 = !DILocation(line: 3421, column: 20, scope: !9610)
!9617 = !DILocation(line: 3421, column: 2, scope: !9610)
!9618 = distinct !{!9618, !9601, !9619}
!9619 = !DILocation(line: 3423, column: 5, scope: !9374)
!9620 = !DILocation(line: 3425, column: 40, scope: !9310)
!9621 = !DILocation(line: 3425, column: 12, scope: !9310)
!9622 = !DILocation(line: 3426, column: 3, scope: !9310)
!9623 = !DILocation(line: 3442, column: 27, scope: !9310)
!9624 = !DILocation(line: 3442, column: 3, scope: !9310)
!9625 = !DILocation(line: 3443, column: 32, scope: !9310)
!9626 = !DILocation(line: 3443, column: 3, scope: !9310)
!9627 = !DILocation(line: 3445, column: 27, scope: !9310)
!9628 = !DILocation(line: 3445, column: 3, scope: !9310)
!9629 = !DILocation(line: 3448, column: 7, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 3448, column: 7)
!9631 = !DILocation(line: 3448, column: 17, scope: !9630)
!9632 = !DILocation(line: 3448, column: 21, scope: !9630)
!9633 = !DILocation(line: 3448, column: 32, scope: !9630)
!9634 = !DILocation(line: 3448, column: 7, scope: !9310)
!9635 = !DILocation(line: 3450, column: 7, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 3449, column: 5)
!9637 = !DILocation(line: 3451, column: 26, scope: !9636)
!9638 = !DILocation(line: 3451, column: 7, scope: !9636)
!9639 = !DILocation(line: 3452, column: 16, scope: !9636)
!9640 = !DILocation(line: 3452, column: 52, scope: !9636)
!9641 = !DILocation(line: 3452, column: 7, scope: !9636)
!9642 = !DILocation(line: 3453, column: 5, scope: !9636)
!9643 = !DILocation(line: 3454, column: 17, scope: !9310)
!9644 = !DILocation(line: 3455, column: 3, scope: !9310)
!9645 = !DILocation(line: 3456, column: 1, scope: !9310)
!9646 = distinct !DISubprogram(name: "inhibit_phi_insertion", scope: !3, file: !3, line: 3189, type: !9647, scopeLine: 3190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9649)
!9647 = !DISubroutineType(types: !9648)
!9648 = !{!663, !1477, !754}
!9649 = !{!9650, !9651, !9652, !9653, !9654, !9655, !9656, !9662}
!9650 = !DILocalVariable(name: "bb", arg: 1, scope: !9646, file: !3, line: 3189, type: !1477)
!9651 = !DILocalVariable(name: "expr", arg: 2, scope: !9646, file: !3, line: 3189, type: !754)
!9652 = !DILocalVariable(name: "vr", scope: !9646, file: !3, line: 3191, type: !2068)
!9653 = !DILocalVariable(name: "ops", scope: !9646, file: !3, line: 3192, type: !2078)
!9654 = !DILocalVariable(name: "op", scope: !9646, file: !3, line: 3193, type: !2899)
!9655 = !DILocalVariable(name: "i", scope: !9646, file: !3, line: 3194, type: !6)
!9656 = !DILocalVariable(name: "defbb", scope: !9657, file: !3, line: 3215, type: !1477)
!9657 = distinct !DILexicalBlock(scope: !9658, file: !3, line: 3214, column: 4)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 3207, column: 2)
!9659 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 3205, column: 5)
!9660 = distinct !DILexicalBlock(scope: !9661, file: !3, line: 3204, column: 3)
!9661 = distinct !DILexicalBlock(scope: !9646, file: !3, line: 3204, column: 3)
!9662 = !DILocalVariable(name: "iv", scope: !9657, file: !3, line: 3216, type: !9663)
!9663 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_iv", file: !1417, line: 651, baseType: !9664)
!9664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1417, line: 644, size: 192, elements: !9665)
!9665 = !{!9666, !9667, !9668}
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9664, file: !1417, line: 647, baseType: !765, size: 64)
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !9664, file: !1417, line: 647, baseType: !765, size: 64, offset: 64)
!9668 = !DIDerivedType(tag: DW_TAG_member, name: "no_overflow", scope: !9664, file: !1417, line: 650, baseType: !663, size: 8, offset: 128)
!9669 = !DILocation(line: 0, scope: !9646)
!9670 = !DILocation(line: 3191, column: 23, scope: !9646)
!9671 = !DILocation(line: 3192, column: 44, scope: !9646)
!9672 = !DILocation(line: 3193, column: 3, scope: !9646)
!9673 = !DILocation(line: 3197, column: 8, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9646, file: !3, line: 3197, column: 7)
!9675 = !DILocation(line: 3197, column: 7, scope: !9646)
!9676 = !DILocation(line: 0, scope: !9660)
!9677 = !DILocation(line: 0, scope: !9657)
!9678 = !DILocation(line: 0, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 3221, column: 10)
!9680 = !DILocation(line: 3204, column: 3, scope: !9661)
!9681 = !DILocation(line: 0, scope: !9661)
!9682 = !DILocation(line: 3204, column: 15, scope: !9660)
!9683 = !DILocation(line: 3206, column: 15, scope: !9659)
!9684 = !DILocation(line: 3206, column: 19, scope: !9659)
!9685 = !DILocation(line: 3206, column: 7, scope: !9659)
!9686 = !DILocation(line: 3215, column: 37, scope: !9657)
!9687 = !DILocation(line: 3210, column: 8, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9658, file: !3, line: 3210, column: 8)
!9689 = !DILocation(line: 3210, column: 28, scope: !9688)
!9690 = !DILocation(line: 3210, column: 8, scope: !9658)
!9691 = !DILocation(line: 3215, column: 26, scope: !9657)
!9692 = !DILocation(line: 3216, column: 6, scope: !9657)
!9693 = !DILocation(line: 3218, column: 11, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 3218, column: 10)
!9695 = !DILocation(line: 3218, column: 10, scope: !9657)
!9696 = !DILocation(line: 3221, column: 38, scope: !9679)
!9697 = !DILocation(line: 3221, column: 11, scope: !9679)
!9698 = !DILocation(line: 3221, column: 10, scope: !9657)
!9699 = !DILocation(line: 3225, column: 25, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 3225, column: 10)
!9701 = !DILocation(line: 3226, column: 7, scope: !9700)
!9702 = !DILocation(line: 3226, column: 11, scope: !9700)
!9703 = !DILocation(line: 3225, column: 10, scope: !9700)
!9704 = !DILocation(line: 3231, column: 4, scope: !9658)
!9705 = !DILocation(line: 3204, column: 60, scope: !9660)
!9706 = !DILocation(line: 3204, column: 3, scope: !9660)
!9707 = distinct !{!9707, !9680, !9708}
!9708 = !DILocation(line: 3235, column: 5, scope: !9661)
!9709 = !DILocation(line: 3237, column: 1, scope: !9646)
!9710 = distinct !DISubprogram(name: "create_expression_by_pieces", scope: !3, file: !3, line: 3012, type: !9711, scopeLine: 3014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9714)
!9711 = !DISubroutineType(types: !9712)
!9712 = !{!765, !1477, !754, !9713, !1025, !765}
!9713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!9714 = !{!9715, !9716, !9717, !9718, !9719, !9720, !9721, !9722, !9723, !9724, !9725, !9726, !9727, !9728, !9729, !9732, !9734, !9737, !9738, !9739, !9740, !9742, !9743, !9749, !9750}
!9715 = !DILocalVariable(name: "block", arg: 1, scope: !9710, file: !3, line: 3012, type: !1477)
!9716 = !DILocalVariable(name: "expr", arg: 2, scope: !9710, file: !3, line: 3012, type: !754)
!9717 = !DILocalVariable(name: "stmts", arg: 3, scope: !9710, file: !3, line: 3013, type: !9713)
!9718 = !DILocalVariable(name: "domstmt", arg: 4, scope: !9710, file: !3, line: 3013, type: !1025)
!9719 = !DILocalVariable(name: "type", arg: 5, scope: !9710, file: !3, line: 3013, type: !765)
!9720 = !DILocalVariable(name: "temp", scope: !9710, file: !3, line: 3015, type: !765)
!9721 = !DILocalVariable(name: "name", scope: !9710, file: !3, line: 3015, type: !765)
!9722 = !DILocalVariable(name: "folded", scope: !9710, file: !3, line: 3016, type: !765)
!9723 = !DILocalVariable(name: "forced_stmts", scope: !9710, file: !3, line: 3017, type: !1015)
!9724 = !DILocalVariable(name: "value_id", scope: !9710, file: !3, line: 3018, type: !6)
!9725 = !DILocalVariable(name: "gsi", scope: !9710, file: !3, line: 3019, type: !3671)
!9726 = !DILocalVariable(name: "exprtype", scope: !9710, file: !3, line: 3020, type: !765)
!9727 = !DILocalVariable(name: "nameexpr", scope: !9710, file: !3, line: 3021, type: !754)
!9728 = !DILocalVariable(name: "newstmt", scope: !9710, file: !3, line: 3022, type: !1025)
!9729 = !DILocalVariable(name: "ref", scope: !9730, file: !3, line: 3036, type: !2068)
!9730 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 3035, column: 7)
!9731 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 3025, column: 5)
!9732 = !DILocalVariable(name: "nary", scope: !9733, file: !3, line: 3042, type: !2054)
!9733 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 3041, column: 7)
!9734 = !DILocalVariable(name: "op1", scope: !9735, file: !3, line: 3047, type: !754)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 3046, column: 6)
!9736 = distinct !DILexicalBlock(scope: !9733, file: !3, line: 3044, column: 4)
!9737 = !DILocalVariable(name: "op2", scope: !9735, file: !3, line: 3048, type: !754)
!9738 = !DILocalVariable(name: "genop1", scope: !9735, file: !3, line: 3049, type: !765)
!9739 = !DILocalVariable(name: "genop2", scope: !9735, file: !3, line: 3051, type: !765)
!9740 = !DILocalVariable(name: "op1", scope: !9741, file: !3, line: 3074, type: !754)
!9741 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 3073, column: 6)
!9742 = !DILocalVariable(name: "genop1", scope: !9741, file: !3, line: 3075, type: !765)
!9743 = !DILocalVariable(name: "stmt", scope: !9744, file: !3, line: 3111, type: !1025)
!9744 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 3110, column: 2)
!9745 = distinct !DILexicalBlock(scope: !9746, file: !3, line: 3109, column: 7)
!9746 = distinct !DILexicalBlock(scope: !9747, file: !3, line: 3109, column: 7)
!9747 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 3107, column: 5)
!9748 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 3106, column: 7)
!9749 = !DILocalVariable(name: "forcedname", scope: !9744, file: !3, line: 3112, type: !765)
!9750 = !DILocalVariable(name: "nameexpr", scope: !9744, file: !3, line: 3113, type: !754)
!9751 = !DILocation(line: 0, scope: !9710)
!9752 = !DILocation(line: 3017, column: 3, scope: !9710)
!9753 = !DILocation(line: 3017, column: 14, scope: !9710)
!9754 = !DILocation(line: 3019, column: 3, scope: !9710)
!9755 = !DILocation(line: 3020, column: 19, scope: !9710)
!9756 = !DILocation(line: 3020, column: 33, scope: !9710)
!9757 = !DILocation(line: 3024, column: 17, scope: !9710)
!9758 = !DILocation(line: 3024, column: 3, scope: !9710)
!9759 = !DILocation(line: 3029, column: 16, scope: !9731)
!9760 = !DILocation(line: 3030, column: 7, scope: !9731)
!9761 = !DILocation(line: 3032, column: 16, scope: !9731)
!9762 = !DILocation(line: 3033, column: 7, scope: !9731)
!9763 = !DILocation(line: 3036, column: 23, scope: !9730)
!9764 = !DILocation(line: 0, scope: !9730)
!9765 = !DILocation(line: 3037, column: 11, scope: !9730)
!9766 = !DILocation(line: 3039, column: 7, scope: !9731)
!9767 = !DILocation(line: 3042, column: 22, scope: !9733)
!9768 = !DILocation(line: 0, scope: !9733)
!9769 = !DILocation(line: 3043, column: 16, scope: !9733)
!9770 = !DILocation(line: 3043, column: 2, scope: !9733)
!9771 = !DILocation(line: 3047, column: 46, scope: !9735)
!9772 = !DILocation(line: 3047, column: 23, scope: !9735)
!9773 = !DILocation(line: 0, scope: !9735)
!9774 = !DILocation(line: 3048, column: 46, scope: !9735)
!9775 = !DILocation(line: 3048, column: 23, scope: !9735)
!9776 = !DILocation(line: 3049, column: 22, scope: !9735)
!9777 = !DILocation(line: 3051, column: 22, scope: !9735)
!9778 = !DILocation(line: 3053, column: 13, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 3053, column: 12)
!9780 = !DILocation(line: 3053, column: 24, scope: !9779)
!9781 = !DILocation(line: 3053, column: 20, scope: !9779)
!9782 = !DILocation(line: 3057, column: 18, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 3057, column: 12)
!9784 = !DILocation(line: 3057, column: 25, scope: !9783)
!9785 = !DILocation(line: 3057, column: 12, scope: !9735)
!9786 = !DILocation(line: 3059, column: 14, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9783, file: !3, line: 3058, column: 3)
!9788 = !DILocation(line: 3060, column: 14, scope: !9787)
!9789 = !DILocation(line: 3061, column: 3, scope: !9787)
!9790 = !DILocation(line: 3064, column: 14, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9783, file: !3, line: 3063, column: 3)
!9792 = !DILocation(line: 3065, column: 14, scope: !9791)
!9793 = !DILocation(line: 0, scope: !9783)
!9794 = !DILocation(line: 3068, column: 17, scope: !9735)
!9795 = !DILocation(line: 3070, column: 6, scope: !9736)
!9796 = !DILocation(line: 3074, column: 46, scope: !9741)
!9797 = !DILocation(line: 3074, column: 23, scope: !9741)
!9798 = !DILocation(line: 0, scope: !9741)
!9799 = !DILocation(line: 3075, column: 22, scope: !9741)
!9800 = !DILocation(line: 3077, column: 13, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 3077, column: 12)
!9802 = !DILocation(line: 3077, column: 12, scope: !9741)
!9803 = !DILocation(line: 3079, column: 17, scope: !9741)
!9804 = !DILocation(line: 3081, column: 17, scope: !9741)
!9805 = !DILocation(line: 3083, column: 6, scope: !9736)
!9806 = !DILocation(line: 0, scope: !9736)
!9807 = !DILocation(line: 3088, column: 7, scope: !9731)
!9808 = !DILocation(line: 3094, column: 45, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 3094, column: 7)
!9810 = !DILocation(line: 3094, column: 8, scope: !9809)
!9811 = !DILocation(line: 3094, column: 7, scope: !9710)
!9812 = !DILocation(line: 3095, column: 14, scope: !9809)
!9813 = !DILocation(line: 3095, column: 5, scope: !9809)
!9814 = !DILocation(line: 3101, column: 34, scope: !9710)
!9815 = !DILocation(line: 3101, column: 12, scope: !9710)
!9816 = !DILocation(line: 3106, column: 7, scope: !9748)
!9817 = !DILocation(line: 3106, column: 7, scope: !9710)
!9818 = !DILocation(line: 3108, column: 13, scope: !9747)
!9819 = !DILocation(line: 0, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 3122, column: 12)
!9821 = distinct !DILexicalBlock(scope: !9822, file: !3, line: 3117, column: 6)
!9822 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 3116, column: 8)
!9823 = !DILocation(line: 3109, column: 7, scope: !9747)
!9824 = !DILocation(line: 3109, column: 15, scope: !9745)
!9825 = !DILocation(line: 3109, column: 14, scope: !9745)
!9826 = !DILocation(line: 3109, column: 7, scope: !9746)
!9827 = !DILocation(line: 3111, column: 18, scope: !9744)
!9828 = !DILocation(line: 0, scope: !9744)
!9829 = !DILocation(line: 3112, column: 22, scope: !9744)
!9830 = !DILocation(line: 3115, column: 4, scope: !9744)
!9831 = !DILocation(line: 3116, column: 8, scope: !9822)
!9832 = !DILocation(line: 3116, column: 31, scope: !9822)
!9833 = !DILocation(line: 3116, column: 8, scope: !9744)
!9834 = !DILocation(line: 3118, column: 8, scope: !9821)
!9835 = !DILocation(line: 3118, column: 34, scope: !9821)
!9836 = !DILocation(line: 3118, column: 41, scope: !9821)
!9837 = !DILocation(line: 3119, column: 41, scope: !9821)
!9838 = !DILocation(line: 3119, column: 8, scope: !9821)
!9839 = !DILocation(line: 3119, column: 30, scope: !9821)
!9840 = !DILocation(line: 3119, column: 39, scope: !9821)
!9841 = !DILocation(line: 3120, column: 19, scope: !9821)
!9842 = !DILocation(line: 3121, column: 22, scope: !9821)
!9843 = !DILocation(line: 3121, column: 44, scope: !9821)
!9844 = !DILocation(line: 3121, column: 8, scope: !9821)
!9845 = !DILocation(line: 3122, column: 13, scope: !9820)
!9846 = !DILocation(line: 3122, column: 12, scope: !9821)
!9847 = !DILocation(line: 3123, column: 32, scope: !9820)
!9848 = !DILocation(line: 3123, column: 3, scope: !9820)
!9849 = !DILocation(line: 3124, column: 37, scope: !9821)
!9850 = !DILocation(line: 3124, column: 8, scope: !9821)
!9851 = !DILocation(line: 3125, column: 6, scope: !9821)
!9852 = !DILocation(line: 3126, column: 4, scope: !9744)
!9853 = !DILocation(line: 3109, column: 32, scope: !9745)
!9854 = !DILocation(line: 3109, column: 7, scope: !9745)
!9855 = distinct !{!9855, !9826, !9856}
!9856 = !DILocation(line: 3127, column: 2, scope: !9746)
!9857 = !DILocation(line: 3128, column: 34, scope: !9747)
!9858 = !DILocation(line: 3128, column: 7, scope: !9747)
!9859 = !DILocation(line: 3129, column: 5, scope: !9747)
!9860 = !DILocation(line: 3133, column: 8, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 3133, column: 7)
!9862 = !DILocation(line: 3133, column: 16, scope: !9861)
!9863 = !DILocation(line: 3133, column: 31, scope: !9861)
!9864 = !DILocation(line: 3133, column: 28, scope: !9861)
!9865 = !DILocation(line: 3133, column: 7, scope: !9710)
!9866 = !DILocation(line: 3135, column: 17, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9861, file: !3, line: 3134, column: 5)
!9868 = !DILocation(line: 3135, column: 15, scope: !9867)
!9869 = !DILocation(line: 3136, column: 7, scope: !9867)
!9870 = !DILocation(line: 3139, column: 10, scope: !9710)
!9871 = !DILocation(line: 3137, column: 5, scope: !9867)
!9872 = !DILocation(line: 3140, column: 3, scope: !9710)
!9873 = !DILocation(line: 3142, column: 7, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 3142, column: 7)
!9875 = !DILocation(line: 3142, column: 28, scope: !9874)
!9876 = !DILocation(line: 3143, column: 7, scope: !9874)
!9877 = !DILocation(line: 3143, column: 31, scope: !9874)
!9878 = !DILocation(line: 3142, column: 7, scope: !9710)
!9879 = !DILocation(line: 3144, column: 5, scope: !9874)
!9880 = !DILocation(line: 3144, column: 30, scope: !9874)
!9881 = !DILocation(line: 3146, column: 13, scope: !9710)
!9882 = !DILocation(line: 3147, column: 10, scope: !9710)
!9883 = !DILocation(line: 3148, column: 3, scope: !9710)
!9884 = !DILocation(line: 3149, column: 3, scope: !9710)
!9885 = !DILocation(line: 3151, column: 3, scope: !9710)
!9886 = !DILocation(line: 3152, column: 3, scope: !9710)
!9887 = !DILocation(line: 3155, column: 3, scope: !9710)
!9888 = !DILocation(line: 3162, column: 3, scope: !9710)
!9889 = !DILocation(line: 3162, column: 23, scope: !9710)
!9890 = !DILocation(line: 3162, column: 30, scope: !9710)
!9891 = !DILocation(line: 3163, column: 14, scope: !9710)
!9892 = !DILocation(line: 3164, column: 3, scope: !9710)
!9893 = !DILocation(line: 3164, column: 19, scope: !9710)
!9894 = !DILocation(line: 3164, column: 28, scope: !9710)
!9895 = !DILocation(line: 3165, column: 14, scope: !9710)
!9896 = !DILocation(line: 3166, column: 3, scope: !9710)
!9897 = !DILocation(line: 3167, column: 8, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 3167, column: 7)
!9899 = !DILocation(line: 3167, column: 7, scope: !9710)
!9900 = !DILocation(line: 3168, column: 34, scope: !9898)
!9901 = !DILocation(line: 3168, column: 5, scope: !9898)
!9902 = !DILocation(line: 3169, column: 32, scope: !9710)
!9903 = !DILocation(line: 3169, column: 3, scope: !9710)
!9904 = !DILocation(line: 3171, column: 23, scope: !9710)
!9905 = !DILocation(line: 3172, column: 7, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 3172, column: 7)
!9907 = !DILocation(line: 3172, column: 17, scope: !9906)
!9908 = !DILocation(line: 3172, column: 21, scope: !9906)
!9909 = !DILocation(line: 3172, column: 32, scope: !9906)
!9910 = !DILocation(line: 3172, column: 7, scope: !9710)
!9911 = !DILocation(line: 3174, column: 7, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 3173, column: 5)
!9913 = !DILocation(line: 3175, column: 26, scope: !9912)
!9914 = !DILocation(line: 3175, column: 7, scope: !9912)
!9915 = !DILocation(line: 3176, column: 16, scope: !9912)
!9916 = !DILocation(line: 3176, column: 58, scope: !9912)
!9917 = !DILocation(line: 3176, column: 7, scope: !9912)
!9918 = !DILocation(line: 3177, column: 5, scope: !9912)
!9919 = !DILocation(line: 3180, column: 1, scope: !9710)
!9920 = distinct !DISubprogram(name: "gsi_start", scope: !587, file: !587, line: 4403, type: !9921, scopeLine: 4404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9923)
!9921 = !DISubroutineType(types: !9922)
!9922 = !{!3671, !1015}
!9923 = !{!9924, !9925}
!9924 = !DILocalVariable(name: "seq", arg: 1, scope: !9920, file: !587, line: 4403, type: !1015)
!9925 = !DILocalVariable(name: "i", scope: !9920, file: !587, line: 4405, type: !3671)
!9926 = !DILocation(line: 0, scope: !9920)
!9927 = !DILocation(line: 4405, column: 24, scope: !9920)
!9928 = !DILocation(line: 4407, column: 11, scope: !9920)
!9929 = !DILocation(line: 4407, column: 5, scope: !9920)
!9930 = !DILocation(line: 4407, column: 9, scope: !9920)
!9931 = !DILocation(line: 4408, column: 5, scope: !9920)
!9932 = !DILocation(line: 4408, column: 9, scope: !9920)
!9933 = !DILocation(line: 4409, column: 11, scope: !9920)
!9934 = !DILocation(line: 4409, column: 17, scope: !9920)
!9935 = !DILocation(line: 4409, column: 27, scope: !9920)
!9936 = !DILocation(line: 4409, column: 20, scope: !9920)
!9937 = !DILocation(line: 4409, column: 10, scope: !9920)
!9938 = !DILocation(line: 4409, column: 35, scope: !9920)
!9939 = !DILocation(line: 4409, column: 5, scope: !9920)
!9940 = !DILocation(line: 4409, column: 8, scope: !9920)
!9941 = !DILocation(line: 4411, column: 3, scope: !9920)
!9942 = distinct !DISubprogram(name: "create_component_ref_by_pieces", scope: !3, file: !3, line: 2924, type: !9943, scopeLine: 2926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9945)
!9943 = !DISubroutineType(types: !9944)
!9944 = !{!765, !1477, !2068, !9713, !1025}
!9945 = !{!9946, !9947, !9948, !9949, !9950}
!9946 = !DILocalVariable(name: "block", arg: 1, scope: !9942, file: !3, line: 2924, type: !1477)
!9947 = !DILocalVariable(name: "ref", arg: 2, scope: !9942, file: !3, line: 2924, type: !2068)
!9948 = !DILocalVariable(name: "stmts", arg: 3, scope: !9942, file: !3, line: 2925, type: !9713)
!9949 = !DILocalVariable(name: "domstmt", arg: 4, scope: !9942, file: !3, line: 2925, type: !1025)
!9950 = !DILocalVariable(name: "op", scope: !9942, file: !3, line: 2927, type: !6)
!9951 = !DILocation(line: 0, scope: !9942)
!9952 = !DILocation(line: 2927, column: 3, scope: !9942)
!9953 = !DILocation(line: 2927, column: 16, scope: !9942)
!9954 = !DILocation(line: 2928, column: 10, scope: !9942)
!9955 = !DILocation(line: 2929, column: 1, scope: !9942)
!9956 = !DILocation(line: 2928, column: 3, scope: !9942)
!9957 = distinct !DISubprogram(name: "find_or_generate_expression", scope: !3, file: !3, line: 2945, type: !9958, scopeLine: 2947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9960)
!9958 = !DISubroutineType(types: !9959)
!9959 = !{!765, !1477, !754, !9713, !1025}
!9960 = !{!9961, !9962, !9963, !9964, !9965, !9966, !9967, !9970, !9971, !9972, !9973, !9974}
!9961 = !DILocalVariable(name: "block", arg: 1, scope: !9957, file: !3, line: 2945, type: !1477)
!9962 = !DILocalVariable(name: "expr", arg: 2, scope: !9957, file: !3, line: 2945, type: !754)
!9963 = !DILocalVariable(name: "stmts", arg: 3, scope: !9957, file: !3, line: 2946, type: !9713)
!9964 = !DILocalVariable(name: "domstmt", arg: 4, scope: !9957, file: !3, line: 2946, type: !1025)
!9965 = !DILocalVariable(name: "leader", scope: !9957, file: !3, line: 2948, type: !754)
!9966 = !DILocalVariable(name: "genop", scope: !9957, file: !3, line: 2950, type: !765)
!9967 = !DILocalVariable(name: "exprset", scope: !9968, file: !3, line: 2964, type: !683)
!9968 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 2963, column: 5)
!9969 = distinct !DILexicalBlock(scope: !9957, file: !3, line: 2961, column: 7)
!9970 = !DILocalVariable(name: "lookfor", scope: !9968, file: !3, line: 2965, type: !6)
!9971 = !DILocalVariable(name: "handled", scope: !9968, file: !3, line: 2966, type: !663)
!9972 = !DILocalVariable(name: "bi", scope: !9968, file: !3, line: 2967, type: !3046)
!9973 = !DILocalVariable(name: "i", scope: !9968, file: !3, line: 2968, type: !6)
!9974 = !DILocalVariable(name: "temp", scope: !9975, file: !3, line: 2973, type: !754)
!9975 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 2972, column: 2)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 2971, column: 7)
!9977 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 2971, column: 7)
!9978 = !DILocation(line: 0, scope: !9957)
!9979 = !DILocation(line: 2948, column: 41, scope: !9957)
!9980 = !DILocation(line: 2949, column: 6, scope: !9957)
!9981 = !DILocation(line: 2948, column: 21, scope: !9957)
!9982 = !DILocation(line: 2951, column: 7, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9957, file: !3, line: 2951, column: 7)
!9984 = !DILocation(line: 2951, column: 7, scope: !9957)
!9985 = !DILocation(line: 2953, column: 19, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 2953, column: 11)
!9987 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 2952, column: 5)
!9988 = !DILocation(line: 2953, column: 24, scope: !9986)
!9989 = !DILocation(line: 2953, column: 11, scope: !9987)
!9990 = !DILocation(line: 2954, column: 10, scope: !9986)
!9991 = !DILocation(line: 2954, column: 2, scope: !9986)
!9992 = !DILocation(line: 2955, column: 29, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9986, file: !3, line: 2955, column: 16)
!9994 = !DILocation(line: 2955, column: 16, scope: !9986)
!9995 = !DILocation(line: 2956, column: 10, scope: !9993)
!9996 = !DILocation(line: 2956, column: 2, scope: !9993)
!9997 = !DILocation(line: 2961, column: 13, scope: !9969)
!9998 = !DILocation(line: 2962, column: 11, scope: !9969)
!9999 = !DILocation(line: 2962, column: 7, scope: !9969)
!10000 = !DILocation(line: 2965, column: 30, scope: !9968)
!10001 = !DILocation(line: 0, scope: !9968)
!10002 = !DILocation(line: 2967, column: 7, scope: !9968)
!10003 = !DILocation(line: 2968, column: 7, scope: !9968)
!10004 = !DILocation(line: 2970, column: 17, scope: !9968)
!10005 = !DILocation(line: 2971, column: 7, scope: !9977)
!10006 = !DILocation(line: 2971, column: 7, scope: !9976)
!10007 = !DILocation(line: 2973, column: 39, scope: !9975)
!10008 = !DILocation(line: 2973, column: 20, scope: !9975)
!10009 = !DILocation(line: 0, scope: !9975)
!10010 = !DILocation(line: 2974, column: 14, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !9975, file: !3, line: 2974, column: 8)
!10012 = !DILocation(line: 2974, column: 19, scope: !10011)
!10013 = !DILocation(line: 2974, column: 8, scope: !9975)
!10014 = !DILocation(line: 2979, column: 10, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 2975, column: 6)
!10016 = !DILocation(line: 2977, column: 16, scope: !10015)
!10017 = !DILocation(line: 2980, column: 8, scope: !10015)
!10018 = distinct !{!10018, !10005, !10019}
!10019 = !DILocation(line: 2982, column: 2, scope: !9977)
!10020 = !DILocation(line: 2983, column: 12, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 2983, column: 11)
!10022 = !DILocation(line: 2983, column: 23, scope: !10021)
!10023 = !DILocation(line: 2983, column: 20, scope: !10021)
!10024 = !DILocation(line: 2986, column: 7, scope: !9968)
!10025 = !DILocation(line: 2987, column: 5, scope: !9969)
!10026 = !DILocation(line: 2988, column: 3, scope: !9957)
!10027 = !DILocation(line: 2989, column: 1, scope: !9957)
!10028 = distinct !DISubprogram(name: "gimple_assign_set_lhs", scope: !587, file: !587, line: 1714, type: !10029, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10031)
!10029 = !DISubroutineType(types: !10030)
!10030 = !{null, !1025, !765}
!10031 = !{!10032, !10033}
!10032 = !DILocalVariable(name: "gs", arg: 1, scope: !10028, file: !587, line: 1714, type: !1025)
!10033 = !DILocalVariable(name: "lhs", arg: 2, scope: !10028, file: !587, line: 1714, type: !765)
!10034 = !DILocation(line: 0, scope: !10028)
!10035 = !DILocation(line: 1717, column: 3, scope: !10028)
!10036 = !DILocation(line: 1719, column: 7, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10028, file: !587, line: 1719, column: 7)
!10038 = !DILocation(line: 1719, column: 11, scope: !10037)
!10039 = !DILocation(line: 1719, column: 14, scope: !10037)
!10040 = !DILocation(line: 1719, column: 30, scope: !10037)
!10041 = !DILocation(line: 1719, column: 7, scope: !10028)
!10042 = !DILocation(line: 1720, column: 5, scope: !10037)
!10043 = !DILocation(line: 1720, column: 29, scope: !10037)
!10044 = !DILocation(line: 1721, column: 1, scope: !10028)
!10045 = distinct !DISubprogram(name: "create_component_ref_by_pieces_1", scope: !3, file: !3, line: 2678, type: !10046, scopeLine: 2681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10048)
!10046 = !DISubroutineType(types: !10047)
!10047 = !{!765, !1477, !2068, !3355, !9713, !1025}
!10048 = !{!10049, !10050, !10051, !10052, !10053, !10054, !10055, !10056, !10059, !10060, !10061, !10062, !10065, !10067, !10068, !10069, !10070, !10072, !10073, !10075, !10076, !10078, !10079, !10080, !10081, !10082, !10083, !10085, !10086, !10087, !10088, !10089, !10090, !10091, !10094, !10096, !10097, !10098, !10099}
!10049 = !DILocalVariable(name: "block", arg: 1, scope: !10045, file: !3, line: 2678, type: !1477)
!10050 = !DILocalVariable(name: "ref", arg: 2, scope: !10045, file: !3, line: 2678, type: !2068)
!10051 = !DILocalVariable(name: "operand", arg: 3, scope: !10045, file: !3, line: 2679, type: !3355)
!10052 = !DILocalVariable(name: "stmts", arg: 4, scope: !10045, file: !3, line: 2679, type: !9713)
!10053 = !DILocalVariable(name: "domstmt", arg: 5, scope: !10045, file: !3, line: 2680, type: !1025)
!10054 = !DILocalVariable(name: "currop", scope: !10045, file: !3, line: 2682, type: !2899)
!10055 = !DILocalVariable(name: "genop", scope: !10045, file: !3, line: 2684, type: !765)
!10056 = !DILocalVariable(name: "folded", scope: !10057, file: !3, line: 2690, type: !765)
!10057 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 2689, column: 7)
!10058 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 2687, column: 5)
!10059 = !DILocalVariable(name: "sc", scope: !10057, file: !3, line: 2690, type: !765)
!10060 = !DILocalVariable(name: "nargs", scope: !10057, file: !3, line: 2691, type: !6)
!10061 = !DILocalVariable(name: "args", scope: !10057, file: !3, line: 2692, type: !1059)
!10062 = !DILocalVariable(name: "scexpr", scope: !10063, file: !3, line: 2709, type: !754)
!10063 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 2708, column: 4)
!10064 = distinct !DILexicalBlock(scope: !10057, file: !3, line: 2707, column: 6)
!10065 = !DILocalVariable(name: "nextop", scope: !10066, file: !3, line: 2720, type: !2899)
!10066 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 2719, column: 7)
!10067 = !DILocalVariable(name: "op0expr", scope: !10066, file: !3, line: 2722, type: !754)
!10068 = !DILocalVariable(name: "genop0", scope: !10066, file: !3, line: 2723, type: !765)
!10069 = !DILocalVariable(name: "baseop", scope: !10066, file: !3, line: 2724, type: !765)
!10070 = !DILocalVariable(name: "folded", scope: !10071, file: !3, line: 2759, type: !765)
!10071 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 2758, column: 7)
!10072 = !DILocalVariable(name: "genop0", scope: !10071, file: !3, line: 2760, type: !765)
!10073 = !DILocalVariable(name: "folded", scope: !10074, file: !3, line: 2774, type: !765)
!10074 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 2773, column: 7)
!10075 = !DILocalVariable(name: "genop1", scope: !10074, file: !3, line: 2775, type: !765)
!10076 = !DILocalVariable(name: "folded", scope: !10077, file: !3, line: 2794, type: !765)
!10077 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 2793, column: 7)
!10078 = !DILocalVariable(name: "genop0", scope: !10077, file: !3, line: 2795, type: !765)
!10079 = !DILocalVariable(name: "op1expr", scope: !10077, file: !3, line: 2797, type: !754)
!10080 = !DILocalVariable(name: "op2expr", scope: !10077, file: !3, line: 2798, type: !754)
!10081 = !DILocalVariable(name: "genop1", scope: !10077, file: !3, line: 2799, type: !765)
!10082 = !DILocalVariable(name: "genop2", scope: !10077, file: !3, line: 2800, type: !765)
!10083 = !DILocalVariable(name: "genop0", scope: !10084, file: !3, line: 2821, type: !765)
!10084 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 2820, column: 7)
!10085 = !DILocalVariable(name: "genop1", scope: !10084, file: !3, line: 2822, type: !765)
!10086 = !DILocalVariable(name: "op1expr", scope: !10084, file: !3, line: 2823, type: !754)
!10087 = !DILocalVariable(name: "genop2", scope: !10084, file: !3, line: 2824, type: !765)
!10088 = !DILocalVariable(name: "op2expr", scope: !10084, file: !3, line: 2825, type: !754)
!10089 = !DILocalVariable(name: "genop3", scope: !10084, file: !3, line: 2826, type: !765)
!10090 = !DILocalVariable(name: "op3expr", scope: !10084, file: !3, line: 2827, type: !754)
!10091 = !DILocalVariable(name: "elmt_type", scope: !10092, file: !3, line: 2846, type: !765)
!10092 = distinct !DILexicalBlock(scope: !10093, file: !3, line: 2845, column: 4)
!10093 = distinct !DILexicalBlock(scope: !10084, file: !3, line: 2844, column: 6)
!10094 = !DILocalVariable(name: "op0", scope: !10095, file: !3, line: 2860, type: !765)
!10095 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 2859, column: 7)
!10096 = !DILocalVariable(name: "op1", scope: !10095, file: !3, line: 2861, type: !765)
!10097 = !DILocalVariable(name: "genop2", scope: !10095, file: !3, line: 2862, type: !765)
!10098 = !DILocalVariable(name: "op2expr", scope: !10095, file: !3, line: 2863, type: !754)
!10099 = !DILocalVariable(name: "op0expr", scope: !10100, file: !3, line: 2886, type: !754)
!10100 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 2885, column: 7)
!10101 = !DILocation(line: 0, scope: !10045)
!10102 = !DILocation(line: 2682, column: 30, scope: !10045)
!10103 = !DILocation(line: 2685, column: 3, scope: !10045)
!10104 = !DILocation(line: 2686, column: 19, scope: !10045)
!10105 = !DILocation(line: 2686, column: 3, scope: !10045)
!10106 = !DILocation(line: 2690, column: 28, scope: !10057)
!10107 = !DILocation(line: 0, scope: !10057)
!10108 = !DILocation(line: 2692, column: 15, scope: !10057)
!10109 = !DILocation(line: 2694, column: 2, scope: !10057)
!10110 = !DILocation(line: 2694, column: 9, scope: !10057)
!10111 = !DILocation(line: 2694, column: 20, scope: !10057)
!10112 = !DILocation(line: 2694, column: 18, scope: !10057)
!10113 = !DILocation(line: 2696, column: 20, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10057, file: !3, line: 2695, column: 4)
!10115 = !DILocation(line: 2696, column: 6, scope: !10114)
!10116 = !DILocation(line: 2696, column: 18, scope: !10114)
!10117 = !DILocation(line: 2699, column: 11, scope: !10114)
!10118 = distinct !{!10118, !10109, !10119}
!10119 = !DILocation(line: 2700, column: 4, scope: !10057)
!10120 = !DILocation(line: 2701, column: 11, scope: !10057)
!10121 = !DILocation(line: 2706, column: 2, scope: !10057)
!10122 = !DILocation(line: 2707, column: 6, scope: !10064)
!10123 = !DILocation(line: 2707, column: 6, scope: !10057)
!10124 = !DILocation(line: 2709, column: 24, scope: !10063)
!10125 = !DILocation(line: 0, scope: !10063)
!10126 = !DILocation(line: 2710, column: 11, scope: !10063)
!10127 = !DILocation(line: 2711, column: 11, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 2711, column: 10)
!10129 = !DILocation(line: 2711, column: 10, scope: !10063)
!10130 = !DILocation(line: 2713, column: 6, scope: !10063)
!10131 = !DILocation(line: 2713, column: 38, scope: !10063)
!10132 = !DILocation(line: 2714, column: 4, scope: !10064)
!10133 = !DILocation(line: 2715, column: 2, scope: !10057)
!10134 = !DILocation(line: 2720, column: 29, scope: !10066)
!10135 = !DILocation(line: 0, scope: !10066)
!10136 = !DILocation(line: 2724, column: 16, scope: !10066)
!10137 = !DILocation(line: 2726, column: 7, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 2726, column: 6)
!10139 = !DILocation(line: 2726, column: 6, scope: !10066)
!10140 = !DILocation(line: 2728, column: 14, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 2728, column: 6)
!10142 = !DILocation(line: 2728, column: 6, scope: !10141)
!10143 = !DILocation(line: 2728, column: 6, scope: !10066)
!10144 = !DILocation(line: 2730, column: 16, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10141, file: !3, line: 2729, column: 4)
!10146 = !DILocation(line: 2731, column: 15, scope: !10145)
!10147 = !DILocation(line: 2733, column: 11, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10145, file: !3, line: 2733, column: 10)
!10149 = !DILocation(line: 2733, column: 10, scope: !10145)
!10150 = !DILocation(line: 2736, column: 6, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 2736, column: 6)
!10152 = !DILocation(line: 0, scope: !10151)
!10153 = !DILocation(line: 2736, column: 6, scope: !10066)
!10154 = !DILocation(line: 2737, column: 11, scope: !10151)
!10155 = !DILocation(line: 2737, column: 4, scope: !10151)
!10156 = !DILocation(line: 2742, column: 11, scope: !10151)
!10157 = !DILocation(line: 2742, column: 4, scope: !10151)
!10158 = !DILocation(line: 2749, column: 19, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 2749, column: 11)
!10160 = !DILocation(line: 2749, column: 11, scope: !10159)
!10161 = !DILocation(line: 2749, column: 11, scope: !10058)
!10162 = !DILocation(line: 2751, column: 4, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 2750, column: 2)
!10164 = !DILocation(line: 2752, column: 19, scope: !10163)
!10165 = !DILocation(line: 2752, column: 4, scope: !10163)
!10166 = !DILocation(line: 2760, column: 16, scope: !10071)
!10167 = !DILocation(line: 0, scope: !10071)
!10168 = !DILocation(line: 2763, column: 7, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 2763, column: 6)
!10170 = !DILocation(line: 2763, column: 6, scope: !10071)
!10171 = !DILocation(line: 2765, column: 11, scope: !10071)
!10172 = !DILocation(line: 2767, column: 2, scope: !10071)
!10173 = !DILocation(line: 2775, column: 16, scope: !10074)
!10174 = !DILocation(line: 0, scope: !10074)
!10175 = !DILocation(line: 2778, column: 7, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 2778, column: 6)
!10177 = !DILocation(line: 2778, column: 6, scope: !10074)
!10178 = !DILocation(line: 2780, column: 11, scope: !10074)
!10179 = !DILocation(line: 2783, column: 14, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 2783, column: 6)
!10181 = !DILocation(line: 2783, column: 21, scope: !10180)
!10182 = !DILocation(line: 0, scope: !10180)
!10183 = !DILocation(line: 2783, column: 6, scope: !10074)
!10184 = !DILocation(line: 2784, column: 13, scope: !10180)
!10185 = !DILocation(line: 2784, column: 4, scope: !10180)
!10186 = !DILocation(line: 2787, column: 13, scope: !10180)
!10187 = !DILocation(line: 2795, column: 16, scope: !10077)
!10188 = !DILocation(line: 0, scope: !10077)
!10189 = !DILocation(line: 2797, column: 52, scope: !10077)
!10190 = !DILocation(line: 2797, column: 21, scope: !10077)
!10191 = !DILocation(line: 2798, column: 52, scope: !10077)
!10192 = !DILocation(line: 2798, column: 21, scope: !10077)
!10193 = !DILocation(line: 2802, column: 7, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 2802, column: 6)
!10195 = !DILocation(line: 2802, column: 6, scope: !10077)
!10196 = !DILocation(line: 2804, column: 11, scope: !10077)
!10197 = !DILocation(line: 2805, column: 7, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 2805, column: 6)
!10199 = !DILocation(line: 2805, column: 6, scope: !10077)
!10200 = !DILocation(line: 2807, column: 11, scope: !10077)
!10201 = !DILocation(line: 2808, column: 7, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 2808, column: 6)
!10203 = !DILocation(line: 2808, column: 6, scope: !10077)
!10204 = !DILocation(line: 2810, column: 11, scope: !10077)
!10205 = !DILocation(line: 2812, column: 2, scope: !10077)
!10206 = !DILocation(line: 2822, column: 24, scope: !10084)
!10207 = !DILocation(line: 0, scope: !10084)
!10208 = !DILocation(line: 2824, column: 24, scope: !10084)
!10209 = !DILocation(line: 2826, column: 24, scope: !10084)
!10210 = !DILocation(line: 2828, column: 11, scope: !10084)
!10211 = !DILocation(line: 2830, column: 7, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10084, file: !3, line: 2830, column: 6)
!10213 = !DILocation(line: 2830, column: 6, scope: !10084)
!10214 = !DILocation(line: 2832, column: 12, scope: !10084)
!10215 = !DILocation(line: 2833, column: 11, scope: !10084)
!10216 = !DILocation(line: 2834, column: 7, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10084, file: !3, line: 2834, column: 6)
!10218 = !DILocation(line: 2834, column: 6, scope: !10084)
!10219 = !DILocation(line: 2836, column: 6, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10084, file: !3, line: 2836, column: 6)
!10221 = !DILocation(line: 2836, column: 6, scope: !10084)
!10222 = !DILocation(line: 2838, column: 16, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 2837, column: 4)
!10224 = !DILocation(line: 2839, column: 15, scope: !10223)
!10225 = !DILocation(line: 2841, column: 11, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10223, file: !3, line: 2841, column: 10)
!10227 = !DILocation(line: 2841, column: 10, scope: !10223)
!10228 = !DILocation(line: 2844, column: 6, scope: !10093)
!10229 = !DILocation(line: 2844, column: 6, scope: !10084)
!10230 = !DILocation(line: 2846, column: 23, scope: !10092)
!10231 = !DILocation(line: 2847, column: 15, scope: !10092)
!10232 = !DILocation(line: 2849, column: 16, scope: !10092)
!10233 = !DILocation(line: 2850, column: 15, scope: !10092)
!10234 = !DILocation(line: 2852, column: 11, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10092, file: !3, line: 2852, column: 10)
!10236 = !DILocation(line: 2855, column: 9, scope: !10084)
!10237 = !DILocation(line: 2855, column: 2, scope: !10084)
!10238 = !DILocation(line: 2862, column: 24, scope: !10095)
!10239 = !DILocation(line: 0, scope: !10095)
!10240 = !DILocation(line: 2864, column: 8, scope: !10095)
!10241 = !DILocation(line: 2866, column: 7, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 2866, column: 6)
!10243 = !DILocation(line: 2866, column: 6, scope: !10095)
!10244 = !DILocation(line: 2870, column: 16, scope: !10095)
!10245 = !DILocation(line: 2871, column: 6, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 2871, column: 6)
!10247 = !DILocation(line: 2871, column: 6, scope: !10095)
!10248 = !DILocation(line: 2873, column: 16, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10246, file: !3, line: 2872, column: 4)
!10250 = !DILocation(line: 2874, column: 15, scope: !10249)
!10251 = !DILocation(line: 2876, column: 11, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10249, file: !3, line: 2876, column: 10)
!10253 = !DILocation(line: 2876, column: 10, scope: !10249)
!10254 = !DILocation(line: 2880, column: 9, scope: !10095)
!10255 = !DILocation(line: 2880, column: 2, scope: !10095)
!10256 = !DILocation(line: 2886, column: 52, scope: !10100)
!10257 = !DILocation(line: 2886, column: 21, scope: !10100)
!10258 = !DILocation(line: 0, scope: !10100)
!10259 = !DILocation(line: 2887, column: 10, scope: !10100)
!10260 = !DILocation(line: 2901, column: 22, scope: !10058)
!10261 = !DILocation(line: 2901, column: 7, scope: !10058)
!10262 = !DILocation(line: 2904, column: 7, scope: !10058)
!10263 = !DILocation(line: 2907, column: 5, scope: !10045)
!10264 = !DILocation(line: 2909, column: 1, scope: !10045)
!10265 = distinct !DISubprogram(name: "gimple_set_op", scope: !587, file: !587, line: 1663, type: !10266, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10268)
!10266 = !DISubroutineType(types: !10267)
!10267 = !{null, !1025, !6, !765}
!10268 = !{!10269, !10270, !10271}
!10269 = !DILocalVariable(name: "gs", arg: 1, scope: !10265, file: !587, line: 1663, type: !1025)
!10270 = !DILocalVariable(name: "i", arg: 2, scope: !10265, file: !587, line: 1663, type: !6)
!10271 = !DILocalVariable(name: "op", arg: 3, scope: !10265, file: !587, line: 1663, type: !765)
!10272 = !DILocation(line: 0, scope: !10265)
!10273 = !DILocation(line: 1665, column: 3, scope: !10265)
!10274 = !DILocation(line: 1671, column: 3, scope: !10265)
!10275 = !DILocation(line: 1671, column: 22, scope: !10265)
!10276 = !DILocation(line: 1672, column: 1, scope: !10265)
!10277 = distinct !DISubprogram(name: "gimple_has_lhs", scope: !587, file: !587, line: 2210, type: !5940, scopeLine: 2211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10278)
!10278 = !{!10279}
!10279 = !DILocalVariable(name: "stmt", arg: 1, scope: !10277, file: !587, line: 2210, type: !1025)
!10280 = !DILocation(line: 0, scope: !10277)
!10281 = !DILocation(line: 2212, column: 11, scope: !10277)
!10282 = !DILocation(line: 2213, column: 4, scope: !10277)
!10283 = !DILocation(line: 2213, column: 8, scope: !10277)
!10284 = !DILocation(line: 2214, column: 8, scope: !10277)
!10285 = !DILocation(line: 2214, column: 11, scope: !10277)
!10286 = !DILocation(line: 2214, column: 34, scope: !10277)
!10287 = !DILocation(line: 2212, column: 3, scope: !10277)
!10288 = distinct !DISubprogram(name: "update_stmt", scope: !587, file: !587, line: 1456, type: !10289, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10291)
!10289 = !DISubroutineType(types: !10290)
!10290 = !{null, !1025}
!10291 = !{!10292}
!10292 = !DILocalVariable(name: "s", arg: 1, scope: !10288, file: !587, line: 1456, type: !1025)
!10293 = !DILocation(line: 0, scope: !10288)
!10294 = !DILocation(line: 1458, column: 7, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10288, file: !587, line: 1458, column: 7)
!10296 = !DILocation(line: 1458, column: 7, scope: !10288)
!10297 = !DILocation(line: 1460, column: 7, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10295, file: !587, line: 1459, column: 5)
!10299 = !DILocation(line: 1461, column: 7, scope: !10298)
!10300 = !DILocation(line: 1462, column: 5, scope: !10298)
!10301 = !DILocation(line: 1463, column: 1, scope: !10288)
!10302 = distinct !DISubprogram(name: "can_PRE_operation", scope: !3, file: !3, line: 2651, type: !10303, scopeLine: 2652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10305)
!10303 = !DISubroutineType(types: !10304)
!10304 = !{!663, !765}
!10305 = !{!10306}
!10306 = !DILocalVariable(name: "op", arg: 1, scope: !10302, file: !3, line: 2651, type: !765)
!10307 = !DILocation(line: 0, scope: !10302)
!10308 = !DILocation(line: 2653, column: 10, scope: !10302)
!10309 = !DILocation(line: 2654, column: 5, scope: !10302)
!10310 = !DILocation(line: 2654, column: 8, scope: !10302)
!10311 = !DILocation(line: 2655, column: 5, scope: !10302)
!10312 = !DILocation(line: 2655, column: 8, scope: !10302)
!10313 = !DILocation(line: 2656, column: 5, scope: !10302)
!10314 = !DILocation(line: 2656, column: 23, scope: !10302)
!10315 = !DILocation(line: 2657, column: 5, scope: !10302)
!10316 = !DILocation(line: 2657, column: 23, scope: !10302)
!10317 = !DILocation(line: 2658, column: 5, scope: !10302)
!10318 = !DILocation(line: 2658, column: 23, scope: !10302)
!10319 = !DILocation(line: 2659, column: 5, scope: !10302)
!10320 = !DILocation(line: 2659, column: 23, scope: !10302)
!10321 = !DILocation(line: 2660, column: 5, scope: !10302)
!10322 = !DILocation(line: 2660, column: 23, scope: !10302)
!10323 = !DILocation(line: 2653, column: 3, scope: !10302)
!10324 = distinct !DISubprogram(name: "do_SCCVN_insertion", scope: !3, file: !3, line: 4089, type: !10325, scopeLine: 4090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10327)
!10325 = !DISubroutineType(types: !10326)
!10326 = !{!765, !1025, !765}
!10327 = !{!10328, !10329, !10330, !10331, !10332, !10333, !10334}
!10328 = !DILocalVariable(name: "stmt", arg: 1, scope: !10324, file: !3, line: 4089, type: !1025)
!10329 = !DILocalVariable(name: "ssa_vn", arg: 2, scope: !10324, file: !3, line: 4089, type: !765)
!10330 = !DILocalVariable(name: "bb", scope: !10324, file: !3, line: 4091, type: !1477)
!10331 = !DILocalVariable(name: "gsi", scope: !10324, file: !3, line: 4092, type: !3671)
!10332 = !DILocalVariable(name: "stmts", scope: !10324, file: !3, line: 4093, type: !1015)
!10333 = !DILocalVariable(name: "expr", scope: !10324, file: !3, line: 4094, type: !765)
!10334 = !DILocalVariable(name: "e", scope: !10324, file: !3, line: 4095, type: !754)
!10335 = !DILocation(line: 0, scope: !10324)
!10336 = !DILocation(line: 4091, column: 20, scope: !10324)
!10337 = !DILocation(line: 4092, column: 3, scope: !10324)
!10338 = !DILocation(line: 4093, column: 3, scope: !10324)
!10339 = !DILocation(line: 4093, column: 14, scope: !10324)
!10340 = !DILocation(line: 4099, column: 30, scope: !10324)
!10341 = !DILocation(line: 4099, column: 7, scope: !10324)
!10342 = !DILocation(line: 4100, column: 9, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 4100, column: 7)
!10344 = !DILocation(line: 4100, column: 7, scope: !10324)
!10345 = !DILocation(line: 4105, column: 10, scope: !10324)
!10346 = !DILocation(line: 4106, column: 12, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 4106, column: 7)
!10348 = !DILocation(line: 4106, column: 7, scope: !10324)
!10349 = !DILocation(line: 4108, column: 9, scope: !10324)
!10350 = !DILocation(line: 4109, column: 32, scope: !10324)
!10351 = !DILocation(line: 4109, column: 3, scope: !10324)
!10352 = !DILocation(line: 4111, column: 3, scope: !10324)
!10353 = !DILocation(line: 4112, column: 1, scope: !10324)
!10354 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !587, file: !587, line: 1694, type: !5340, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10355)
!10355 = !{!10356}
!10356 = !DILocalVariable(name: "gs", arg: 1, scope: !10354, file: !587, line: 1694, type: !5090)
!10357 = !DILocation(line: 0, scope: !10354)
!10358 = !DILocation(line: 1697, column: 10, scope: !10354)
!10359 = !DILocation(line: 1697, column: 3, scope: !10354)
!10360 = distinct !DISubprogram(name: "gimple_cond_lhs", scope: !587, file: !587, line: 2241, type: !5340, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10361)
!10361 = !{!10362}
!10362 = !DILocalVariable(name: "gs", arg: 1, scope: !10360, file: !587, line: 2241, type: !5090)
!10363 = !DILocation(line: 0, scope: !10360)
!10364 = !DILocation(line: 2244, column: 10, scope: !10360)
!10365 = !DILocation(line: 2244, column: 3, scope: !10360)
!10366 = distinct !DISubprogram(name: "gimple_cond_rhs", scope: !587, file: !587, line: 2271, type: !5340, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10367)
!10367 = !{!10368}
!10368 = !DILocalVariable(name: "gs", arg: 1, scope: !10366, file: !587, line: 2271, type: !5090)
!10369 = !DILocation(line: 0, scope: !10366)
!10370 = !DILocation(line: 2274, column: 10, scope: !10366)
!10371 = !DILocation(line: 2274, column: 3, scope: !10366)
!10372 = distinct !DISubprogram(name: "gimple_cond_code", scope: !587, file: !587, line: 2221, type: !5988, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10373)
!10373 = !{!10374}
!10374 = !DILocalVariable(name: "gs", arg: 1, scope: !10372, file: !587, line: 2221, type: !5090)
!10375 = !DILocation(line: 0, scope: !10372)
!10376 = !DILocation(line: 2224, column: 38, scope: !10372)
!10377 = !DILocation(line: 2224, column: 3, scope: !10372)
!10378 = distinct !DISubprogram(name: "gimple_cond_make_false", scope: !587, file: !587, line: 2346, type: !10289, scopeLine: 2347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10379)
!10379 = !{!10380}
!10380 = !DILocalVariable(name: "gs", arg: 1, scope: !10378, file: !587, line: 2346, type: !1025)
!10381 = !DILocation(line: 0, scope: !10378)
!10382 = !DILocation(line: 2348, column: 28, scope: !10378)
!10383 = !DILocation(line: 2348, column: 3, scope: !10378)
!10384 = !DILocation(line: 2349, column: 28, scope: !10378)
!10385 = !DILocation(line: 2349, column: 3, scope: !10378)
!10386 = !DILocation(line: 2350, column: 14, scope: !10378)
!10387 = !DILocation(line: 2350, column: 22, scope: !10378)
!10388 = !DILocation(line: 2351, column: 1, scope: !10378)
!10389 = distinct !DISubprogram(name: "gimple_cond_make_true", scope: !587, file: !587, line: 2357, type: !10289, scopeLine: 2358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10390)
!10390 = !{!10391}
!10391 = !DILocalVariable(name: "gs", arg: 1, scope: !10389, file: !587, line: 2357, type: !1025)
!10392 = !DILocation(line: 0, scope: !10389)
!10393 = !DILocation(line: 2359, column: 28, scope: !10389)
!10394 = !DILocation(line: 2359, column: 3, scope: !10389)
!10395 = !DILocation(line: 2360, column: 28, scope: !10389)
!10396 = !DILocation(line: 2360, column: 3, scope: !10389)
!10397 = !DILocation(line: 2361, column: 14, scope: !10389)
!10398 = !DILocation(line: 2361, column: 22, scope: !10389)
!10399 = !DILocation(line: 2362, column: 1, scope: !10389)
!10400 = distinct !DISubprogram(name: "gimple_call_set_fn", scope: !587, file: !587, line: 1932, type: !10029, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10401)
!10401 = !{!10402, !10403}
!10402 = !DILocalVariable(name: "gs", arg: 1, scope: !10400, file: !587, line: 1932, type: !1025)
!10403 = !DILocalVariable(name: "fn", arg: 2, scope: !10400, file: !587, line: 1932, type: !765)
!10404 = !DILocation(line: 0, scope: !10400)
!10405 = !DILocation(line: 1935, column: 3, scope: !10400)
!10406 = !DILocation(line: 1936, column: 1, scope: !10400)
!10407 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !587, file: !587, line: 3080, type: !6107, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10408)
!10408 = !{!10409}
!10409 = !DILocalVariable(name: "gs", arg: 1, scope: !10407, file: !587, line: 3080, type: !1025)
!10410 = !DILocation(line: 0, scope: !10407)
!10411 = !DILocation(line: 3083, column: 26, scope: !10407)
!10412 = !DILocation(line: 3083, column: 3, scope: !10407)
!10413 = distinct !DISubprogram(name: "gsi_after_labels", scope: !587, file: !587, line: 4510, type: !5869, scopeLine: 4511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10414)
!10414 = !{!10415, !10416}
!10415 = !DILocalVariable(name: "bb", arg: 1, scope: !10413, file: !587, line: 4510, type: !1477)
!10416 = !DILocalVariable(name: "gsi", scope: !10413, file: !587, line: 4512, type: !3671)
!10417 = !DILocation(line: 0, scope: !10413)
!10418 = !DILocation(line: 4512, column: 24, scope: !10413)
!10419 = !DILocation(line: 4512, column: 30, scope: !10413)
!10420 = !DILocation(line: 4514, column: 3, scope: !10413)
!10421 = !DILocation(line: 4514, column: 11, scope: !10413)
!10422 = !DILocation(line: 4514, column: 27, scope: !10413)
!10423 = !DILocation(line: 4514, column: 43, scope: !10413)
!10424 = !DILocation(line: 4514, column: 30, scope: !10413)
!10425 = !DILocation(line: 4514, column: 59, scope: !10413)
!10426 = !DILocation(line: 4515, column: 5, scope: !10413)
!10427 = distinct !{!10427, !10420, !10428}
!10428 = !DILocation(line: 4515, column: 19, scope: !10413)
!10429 = !DILocation(line: 4517, column: 3, scope: !10413)
!10430 = distinct !DISubprogram(name: "single_imm_use", scope: !5117, file: !5117, line: 373, type: !10431, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10434)
!10431 = !DISubroutineType(types: !10432)
!10432 = !{!663, !5691, !10433, !5045}
!10433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!10434 = !{!10435, !10436, !10437, !10438, !10439}
!10435 = !DILocalVariable(name: "var", arg: 1, scope: !10430, file: !5117, line: 373, type: !5691)
!10436 = !DILocalVariable(name: "use_p", arg: 2, scope: !10430, file: !5117, line: 373, type: !10433)
!10437 = !DILocalVariable(name: "stmt", arg: 3, scope: !10430, file: !5117, line: 373, type: !5045)
!10438 = !DILocalVariable(name: "ptr", scope: !10430, file: !5117, line: 375, type: !5697)
!10439 = !DILabel(scope: !10440, name: "return_false", file: !5117, line: 380)
!10440 = distinct !DILexicalBlock(scope: !10441, file: !5117, line: 379, column: 5)
!10441 = distinct !DILexicalBlock(scope: !10430, file: !5117, line: 378, column: 7)
!10442 = !DILocation(line: 0, scope: !10430)
!10443 = !DILocation(line: 375, column: 42, scope: !10430)
!10444 = !DILocation(line: 378, column: 19, scope: !10441)
!10445 = !DILocation(line: 378, column: 11, scope: !10441)
!10446 = !DILocation(line: 378, column: 7, scope: !10430)
!10447 = !DILocation(line: 380, column: 5, scope: !10440)
!10448 = !DILocation(line: 381, column: 14, scope: !10440)
!10449 = !DILocation(line: 382, column: 13, scope: !10440)
!10450 = !DILocation(line: 383, column: 7, scope: !10440)
!10451 = !DILocation(line: 387, column: 25, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10430, file: !5117, line: 387, column: 7)
!10453 = !DILocation(line: 387, column: 11, scope: !10452)
!10454 = !DILocation(line: 387, column: 7, scope: !10430)
!10455 = !DILocation(line: 389, column: 29, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10457, file: !5117, line: 389, column: 11)
!10457 = distinct !DILexicalBlock(scope: !10452, file: !5117, line: 388, column: 5)
!10458 = !DILocation(line: 389, column: 12, scope: !10456)
!10459 = !DILocation(line: 389, column: 11, scope: !10457)
!10460 = !DILocation(line: 391, column: 18, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10456, file: !5117, line: 390, column: 2)
!10462 = !DILocation(line: 391, column: 11, scope: !10461)
!10463 = !DILocation(line: 392, column: 17, scope: !10461)
!10464 = !DILocation(line: 392, column: 27, scope: !10461)
!10465 = !DILocation(line: 392, column: 10, scope: !10461)
!10466 = !DILocation(line: 393, column: 4, scope: !10461)
!10467 = !DILocation(line: 400, column: 8, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10430, file: !5117, line: 400, column: 7)
!10469 = !DILocation(line: 400, column: 7, scope: !10430)
!10470 = !DILocation(line: 403, column: 10, scope: !10430)
!10471 = !DILocation(line: 403, column: 3, scope: !10430)
!10472 = !DILocation(line: 404, column: 1, scope: !10430)
!10473 = distinct !DISubprogram(name: "set_ssa_use_from_ptr", scope: !5117, file: !5117, line: 233, type: !10474, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10476)
!10474 = !DISubroutineType(types: !10475)
!10475 = !{null, !2174, !765}
!10476 = !{!10477, !10478}
!10477 = !DILocalVariable(name: "use", arg: 1, scope: !10473, file: !5117, line: 233, type: !2174)
!10478 = !DILocalVariable(name: "val", arg: 2, scope: !10473, file: !5117, line: 233, type: !765)
!10479 = !DILocation(line: 0, scope: !10473)
!10480 = !DILocation(line: 235, column: 3, scope: !10473)
!10481 = !DILocation(line: 236, column: 10, scope: !10473)
!10482 = !DILocation(line: 236, column: 15, scope: !10473)
!10483 = !DILocation(line: 237, column: 3, scope: !10473)
!10484 = !DILocation(line: 238, column: 1, scope: !10473)
!10485 = distinct !DISubprogram(name: "is_gimple_assign", scope: !587, file: !587, line: 1677, type: !5250, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10486)
!10486 = !{!10487}
!10487 = !DILocalVariable(name: "gs", arg: 1, scope: !10485, file: !587, line: 1677, type: !5090)
!10488 = !DILocation(line: 0, scope: !10485)
!10489 = !DILocation(line: 1679, column: 10, scope: !10485)
!10490 = !DILocation(line: 1679, column: 27, scope: !10485)
!10491 = !DILocation(line: 1679, column: 3, scope: !10485)
!10492 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !587, file: !587, line: 1878, type: !5340, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10493)
!10493 = !{!10494}
!10494 = !DILocalVariable(name: "gs", arg: 1, scope: !10492, file: !587, line: 1878, type: !5090)
!10495 = !DILocation(line: 0, scope: !10492)
!10496 = !DILocation(line: 1881, column: 10, scope: !10492)
!10497 = !DILocation(line: 1881, column: 3, scope: !10492)
!10498 = distinct !DISubprogram(name: "gimple_cond_set_lhs", scope: !587, file: !587, line: 2261, type: !10029, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10499)
!10499 = !{!10500, !10501}
!10500 = !DILocalVariable(name: "gs", arg: 1, scope: !10498, file: !587, line: 2261, type: !1025)
!10501 = !DILocalVariable(name: "lhs", arg: 2, scope: !10498, file: !587, line: 2261, type: !765)
!10502 = !DILocation(line: 0, scope: !10498)
!10503 = !DILocation(line: 2264, column: 3, scope: !10498)
!10504 = !DILocation(line: 2265, column: 1, scope: !10498)
!10505 = distinct !DISubprogram(name: "gimple_cond_set_rhs", scope: !587, file: !587, line: 2292, type: !10029, scopeLine: 2293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10506)
!10506 = !{!10507, !10508}
!10507 = !DILocalVariable(name: "gs", arg: 1, scope: !10505, file: !587, line: 2292, type: !1025)
!10508 = !DILocalVariable(name: "rhs", arg: 2, scope: !10505, file: !587, line: 2292, type: !765)
!10509 = !DILocation(line: 0, scope: !10505)
!10510 = !DILocation(line: 2295, column: 3, scope: !10505)
!10511 = !DILocation(line: 2296, column: 1, scope: !10505)
!10512 = distinct !DISubprogram(name: "is_gimple_debug", scope: !587, file: !587, line: 3249, type: !5250, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10513)
!10513 = !{!10514}
!10514 = !DILocalVariable(name: "gs", arg: 1, scope: !10512, file: !587, line: 3249, type: !5090)
!10515 = !DILocation(line: 0, scope: !10512)
!10516 = !DILocation(line: 3251, column: 10, scope: !10512)
!10517 = !DILocation(line: 3251, column: 27, scope: !10512)
!10518 = !DILocation(line: 3251, column: 3, scope: !10512)
!10519 = distinct !DISubprogram(name: "delink_imm_use", scope: !5117, file: !5117, line: 188, type: !10520, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10522)
!10520 = !DISubroutineType(types: !10521)
!10521 = !{null, !2175}
!10522 = !{!10523}
!10523 = !DILocalVariable(name: "linknode", arg: 1, scope: !10519, file: !5117, line: 188, type: !2175)
!10524 = !DILocation(line: 0, scope: !10519)
!10525 = !DILocation(line: 191, column: 17, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10519, file: !5117, line: 191, column: 7)
!10527 = !DILocation(line: 191, column: 22, scope: !10526)
!10528 = !DILocation(line: 191, column: 7, scope: !10519)
!10529 = !DILocation(line: 194, column: 36, scope: !10519)
!10530 = !DILocation(line: 194, column: 19, scope: !10519)
!10531 = !DILocation(line: 194, column: 24, scope: !10519)
!10532 = !DILocation(line: 195, column: 36, scope: !10519)
!10533 = !DILocation(line: 195, column: 13, scope: !10519)
!10534 = !DILocation(line: 195, column: 24, scope: !10519)
!10535 = !DILocation(line: 196, column: 18, scope: !10519)
!10536 = !DILocation(line: 197, column: 18, scope: !10519)
!10537 = !DILocation(line: 198, column: 1, scope: !10519)
!10538 = distinct !DISubprogram(name: "link_imm_use", scope: !5117, file: !5117, line: 214, type: !10539, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10541)
!10539 = !DISubroutineType(types: !10540)
!10540 = !{null, !2175, !765}
!10541 = !{!10542, !10543, !10544}
!10542 = !DILocalVariable(name: "linknode", arg: 1, scope: !10538, file: !5117, line: 214, type: !2175)
!10543 = !DILocalVariable(name: "def", arg: 2, scope: !10538, file: !5117, line: 214, type: !765)
!10544 = !DILocalVariable(name: "root", scope: !10538, file: !5117, line: 216, type: !2175)
!10545 = !DILocation(line: 0, scope: !10538)
!10546 = !DILocation(line: 218, column: 8, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10538, file: !5117, line: 218, column: 7)
!10548 = !DILocation(line: 218, column: 12, scope: !10547)
!10549 = !DILocation(line: 218, column: 15, scope: !10547)
!10550 = !DILocation(line: 218, column: 31, scope: !10547)
!10551 = !DILocation(line: 218, column: 7, scope: !10538)
!10552 = !DILocation(line: 219, column: 15, scope: !10547)
!10553 = !DILocation(line: 219, column: 20, scope: !10547)
!10554 = !DILocation(line: 219, column: 5, scope: !10547)
!10555 = !DILocation(line: 222, column: 16, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10547, file: !5117, line: 221, column: 5)
!10557 = !DILocation(line: 227, column: 7, scope: !10556)
!10558 = !DILocation(line: 229, column: 1, scope: !10538)
!10559 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !5117, file: !5117, line: 202, type: !10560, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10562)
!10560 = !DISubroutineType(types: !10561)
!10561 = !{null, !2175, !2175}
!10562 = !{!10563, !10564}
!10563 = !DILocalVariable(name: "linknode", arg: 1, scope: !10559, file: !5117, line: 202, type: !2175)
!10564 = !DILocalVariable(name: "list", arg: 2, scope: !10559, file: !5117, line: 202, type: !2175)
!10565 = !DILocation(line: 0, scope: !10559)
!10566 = !DILocation(line: 206, column: 13, scope: !10559)
!10567 = !DILocation(line: 206, column: 18, scope: !10559)
!10568 = !DILocation(line: 207, column: 26, scope: !10559)
!10569 = !DILocation(line: 207, column: 13, scope: !10559)
!10570 = !DILocation(line: 207, column: 18, scope: !10559)
!10571 = !DILocation(line: 208, column: 9, scope: !10559)
!10572 = !DILocation(line: 208, column: 15, scope: !10559)
!10573 = !DILocation(line: 208, column: 20, scope: !10559)
!10574 = !DILocation(line: 209, column: 14, scope: !10559)
!10575 = !DILocation(line: 210, column: 1, scope: !10559)
!10576 = distinct !DISubprogram(name: "VEC_bitmap_set_t_heap_free", scope: !3, file: !3, line: 378, type: !10577, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10579)
!10577 = !DISubroutineType(types: !10578)
!10578 = !{null, !2811}
!10579 = !{!10580}
!10580 = !DILocalVariable(name: "vec_", arg: 1, scope: !10576, file: !3, line: 378, type: !2811)
!10581 = !DILocation(line: 0, scope: !10576)
!10582 = !DILocation(line: 378, column: 1, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10576, file: !3, line: 378, column: 1)
!10584 = !DILocation(line: 378, column: 1, scope: !10576)
!10585 = distinct !DISubprogram(name: "VEC_unsigned_heap_free", scope: !2113, file: !2113, line: 35, type: !10586, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10588)
!10586 = !DISubroutineType(types: !10587)
!10587 = !{null, !3271}
!10588 = !{!10589}
!10589 = !DILocalVariable(name: "vec_", arg: 1, scope: !10585, file: !2113, line: 35, type: !3271)
!10590 = !DILocation(line: 0, scope: !10585)
!10591 = !DILocation(line: 35, column: 1, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10585, file: !2113, line: 35, column: 1)
!10593 = !DILocation(line: 35, column: 1, scope: !10585)
