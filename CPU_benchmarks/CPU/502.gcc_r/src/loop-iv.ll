; ModuleID = 'loop-iv.bc'
source_filename = "loop-iv.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.gimple_seq_d = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type opaque
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_df = type opaque
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.rtx_iv = type { %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.df_rd_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.niter_desc = type { %struct.edge_def*, %struct.edge_def*, i8, i8, i64, i64, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, i32, %struct.rtx_def* }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [11 x i8] c"not simple\00", align 1
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@.str.1 = private unnamed_addr constant [11 x i8] c"invariant \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c" + \00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c" * iteration\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c" (in %s)\00", align 1
@mode_name = external dso_local local_unnamed_addr constant [87 x i8*], align 16
@.str.5 = private unnamed_addr constant [10 x i8] c" %s to %s\00", align 1
@rtx_name = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@.str.6 = private unnamed_addr constant [4 x i8] c" * \00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c" (first special)\00", align 1
@current_loop = internal unnamed_addr global %struct.loop* null, align 8, !dbg !0
@clean_slate = internal unnamed_addr global i1 false, align 1, !dbg !1759
@bivs = internal unnamed_addr global %struct.htab* null, align 8, !dbg !1753
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.8 = private unnamed_addr constant [10 x i8] c"loop-iv.c\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@iv_ref_table = internal unnamed_addr global %struct.rtx_iv** null, align 8, !dbg !1751
@iv_ref_table_size = internal unnamed_addr global i32 0, align 4, !dbg !1757
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@mode_mask_array = external dso_local local_unnamed_addr constant [87 x i64], align 16
@const_true_rtx = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@.str.10 = private unnamed_addr constant [20 x i8] c"Loop %d is simple:\0A\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"  simple exit %d -> %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"  assumptions: \00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"  does not roll if: \00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"  infinite if: \00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"  number of iterations: \00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"  upper bound: \00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"Loop %d is not simple.\0A\00", align 1
@flag_tree_loop_optimize = external dso_local local_unnamed_addr global i32, align 4
@warn_unsafe_loop_optimizations = external dso_local local_unnamed_addr global i32, align 4
@flag_unsafe_loop_optimizations = external dso_local local_unnamed_addr global i32, align 4
@.str.20 = private unnamed_addr constant [39 x i8] c"assuming that the loop is not infinite\00", align 1
@.str.21 = private unnamed_addr constant [40 x i8] c"cannot optimize possibly infinite loops\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.23 = private unnamed_addr constant [49 x i8] c"assuming that the loop counter does not overflow\00", align 1
@.str.24 = private unnamed_addr constant [52 x i8] c"cannot optimize loop, the loop counter may overflow\00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"Analyzing operand \00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c" of insn \00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"  not simple.\0A\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"Analyzing def of \00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c" in insn \00", align 1
@.str.31 = private unnamed_addr constant [21 x i8] c"  already analysed.\0A\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"  is \00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"Analyzing \00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c" for bivness.\0A\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@reg_obstack = external dso_local global %struct.bitmap_obstack, align 8
@regs_invalidated_by_call = external dso_local local_unnamed_addr global i64, align 8
@.str.36 = private unnamed_addr constant [33 x i8] c";; improved upper bound by one.\0A\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !1764 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !1777, metadata !DIExpression()), !dbg !1779
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !1778, metadata !DIExpression()), !dbg !1779
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1780
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !1781
  ret i32 %call, !dbg !1782
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !1783 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1787
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !1788
  ret i32 %call, !dbg !1789
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1790 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !1844, metadata !DIExpression()), !dbg !1845
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !1846
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1846
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !1846
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !1846
  %cmp = icmp uge i8* %0, %1, !dbg !1846
  %conv1 = zext i1 %cmp to i64, !dbg !1846
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1846
  %tobool = icmp eq i64 %expval, 0, !dbg !1846
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1846

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !1846
  br label %cond.end, !dbg !1846

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1846
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1846
  %2 = load i8, i8* %0, align 1, !dbg !1846
  %conv3 = zext i8 %2 to i32, !dbg !1846
  br label %cond.end, !dbg !1846

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1846
  ret i32 %cond, !dbg !1847
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1848 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !1850, metadata !DIExpression()), !dbg !1851
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !1852
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1852
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !1852
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !1852
  %cmp = icmp uge i8* %0, %1, !dbg !1852
  %conv1 = zext i1 %cmp to i64, !dbg !1852
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1852
  %tobool = icmp eq i64 %expval, 0, !dbg !1852
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1852

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !1852
  br label %cond.end, !dbg !1852

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1852
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1852
  %2 = load i8, i8* %0, align 1, !dbg !1852
  %conv3 = zext i8 %2 to i32, !dbg !1852
  br label %cond.end, !dbg !1852

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1852
  ret i32 %cond, !dbg !1853
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !1854 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1855
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !1855
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1855
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !1855
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !1855
  %cmp = icmp uge i8* %1, %2, !dbg !1855
  %conv1 = zext i1 %cmp to i64, !dbg !1855
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1855
  %tobool = icmp eq i64 %expval, 0, !dbg !1855
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1855

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !1855
  br label %cond.end, !dbg !1855

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1855
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1855
  %3 = load i8, i8* %1, align 1, !dbg !1855
  %conv3 = zext i8 %3 to i32, !dbg !1855
  br label %cond.end, !dbg !1855

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1855
  ret i32 %cond, !dbg !1856
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !1857 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1861, metadata !DIExpression()), !dbg !1862
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1863
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !1864
  ret i32 %call, !dbg !1865
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1866 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1870, metadata !DIExpression()), !dbg !1872
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1871, metadata !DIExpression()), !dbg !1872
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !1873
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !1873
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !1873
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !1873
  %cmp = icmp uge i8* %0, %1, !dbg !1873
  %conv1 = zext i1 %cmp to i64, !dbg !1873
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1873
  %tobool = icmp eq i64 %expval, 0, !dbg !1873
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1873

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !1873
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !1873
  br label %cond.end, !dbg !1873

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !1873
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1873
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !1873
  store i8 %conv2, i8* %0, align 1, !dbg !1873
  %conv6 = and i32 %__c, 255, !dbg !1873
  br label %cond.end, !dbg !1873

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !1873
  ret i32 %cond, !dbg !1874
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1875 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1877, metadata !DIExpression()), !dbg !1879
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1878, metadata !DIExpression()), !dbg !1879
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !1880
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !1880
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !1880
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !1880
  %cmp = icmp uge i8* %0, %1, !dbg !1880
  %conv1 = zext i1 %cmp to i64, !dbg !1880
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1880
  %tobool = icmp eq i64 %expval, 0, !dbg !1880
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1880

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !1880
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !1880
  br label %cond.end, !dbg !1880

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !1880
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1880
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !1880
  store i8 %conv2, i8* %0, align 1, !dbg !1880
  %conv6 = and i32 %__c, 255, !dbg !1880
  br label %cond.end, !dbg !1880

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !1880
  ret i32 %cond, !dbg !1881
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !1882 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1884, metadata !DIExpression()), !dbg !1885
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1886
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !1886
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !1886
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !1886
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !1886
  %cmp = icmp uge i8* %1, %2, !dbg !1886
  %conv1 = zext i1 %cmp to i64, !dbg !1886
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1886
  %tobool = icmp eq i64 %expval, 0, !dbg !1886
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1886

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !1886
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !1886
  br label %cond.end, !dbg !1886

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !1886
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1886
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !1886
  store i8 %conv4, i8* %1, align 1, !dbg !1886
  %conv6 = and i32 %__c, 255, !dbg !1886
  br label %cond.end, !dbg !1886

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !1886
  ret i32 %cond, !dbg !1887
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1888 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !1894, metadata !DIExpression()), !dbg !1897
  call void @llvm.dbg.value(metadata i64* %__n, metadata !1895, metadata !DIExpression()), !dbg !1897
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1896, metadata !DIExpression()), !dbg !1897
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !1898
  ret i64 %call, !dbg !1899
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1900 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1902, metadata !DIExpression()), !dbg !1903
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !1904
  %0 = load i32, i32* %_flags, align 8, !dbg !1904
  %and = lshr i32 %0, 4, !dbg !1904
  %and.lobit = and i32 %and, 1, !dbg !1904
  ret i32 %and.lobit, !dbg !1905
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1906 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1908, metadata !DIExpression()), !dbg !1909
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !1910
  %0 = load i32, i32* %_flags, align 8, !dbg !1910
  %and = lshr i32 %0, 5, !dbg !1910
  %and.lobit = and i32 %and, 1, !dbg !1910
  ret i32 %and.lobit, !dbg !1911
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !1912 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1915, metadata !DIExpression()), !dbg !1916
  %__c.off = add i32 %__c, 128, !dbg !1917
  %0 = icmp ult i32 %__c.off, 384, !dbg !1917
  br i1 %0, label %cond.true, label %cond.end, !dbg !1917

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !1918
  %1 = load i32*, i32** %call, align 8, !dbg !1919
  %idxprom = sext i32 %__c to i64, !dbg !1920
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !1920
  %2 = load i32, i32* %arrayidx, align 4, !dbg !1920
  br label %cond.end, !dbg !1921

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !1921
  ret i32 %cond, !dbg !1922
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !1923 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1925, metadata !DIExpression()), !dbg !1926
  %__c.off = add i32 %__c, 128, !dbg !1927
  %0 = icmp ult i32 %__c.off, 384, !dbg !1927
  br i1 %0, label %cond.true, label %cond.end, !dbg !1927

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !1928
  %1 = load i32*, i32** %call, align 8, !dbg !1929
  %idxprom = sext i32 %__c to i64, !dbg !1930
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !1930
  %2 = load i32, i32* %arrayidx, align 4, !dbg !1930
  br label %cond.end, !dbg !1931

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !1931
  ret i32 %cond, !dbg !1932
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !1933 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !1938, metadata !DIExpression()), !dbg !1939
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !1940
  %conv = trunc i64 %call to i32, !dbg !1941
  ret i32 %conv, !dbg !1942
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !1943 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !1947, metadata !DIExpression()), !dbg !1948
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !1949
  ret i64 %call, !dbg !1950
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !1951 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !1956, metadata !DIExpression()), !dbg !1957
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !1958
  ret i64 %call, !dbg !1959
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !1960 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !1966, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.value(metadata i8* %__base, metadata !1967, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !1968, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.value(metadata i64 %__size, metadata !1969, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !1970, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.value(metadata i64 0, metadata !1971, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !1972, metadata !DIExpression()), !dbg !1976
  br label %while.cond, !dbg !1977

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !1978
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !1976
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !1972, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !1971, metadata !DIExpression()), !dbg !1976
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !1979
  br i1 %cmp, label %while.body, label %cleanup, !dbg !1977

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !1980
  %div = lshr i64 %add, 1, !dbg !1982
  call void @llvm.dbg.value(metadata i64 %div, metadata !1973, metadata !DIExpression()), !dbg !1976
  %mul = mul i64 %div, %__size, !dbg !1983
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !1984
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !1974, metadata !DIExpression()), !dbg !1976
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !1985
  call void @llvm.dbg.value(metadata i32 %call, metadata !1975, metadata !DIExpression()), !dbg !1976
  %cmp1 = icmp slt i32 %call, 0, !dbg !1986
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !1988

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !1989
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !1991

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !1992
  call void @llvm.dbg.value(metadata i64 %add4, metadata !1971, metadata !DIExpression()), !dbg !1976
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !1976
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !1976
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !1972, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !1971, metadata !DIExpression()), !dbg !1976
  br label %while.cond, !dbg !1977, !llvm.loop !1993

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !1976
  ret i8* %retval.0, !dbg !1995
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !1996 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2002, metadata !DIExpression()), !dbg !2003
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2004
  ret double %call, !dbg !2005
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2006 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2015, metadata !DIExpression()), !dbg !2018
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2016, metadata !DIExpression()), !dbg !2018
  call void @llvm.dbg.value(metadata i32 %base, metadata !2017, metadata !DIExpression()), !dbg !2018
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2019
  ret i64 %call, !dbg !2020
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2021 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2027, metadata !DIExpression()), !dbg !2030
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2028, metadata !DIExpression()), !dbg !2030
  call void @llvm.dbg.value(metadata i32 %base, metadata !2029, metadata !DIExpression()), !dbg !2030
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2031
  ret i64 %call, !dbg !2032
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2033 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2044, metadata !DIExpression()), !dbg !2047
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2045, metadata !DIExpression()), !dbg !2047
  call void @llvm.dbg.value(metadata i32 %base, metadata !2046, metadata !DIExpression()), !dbg !2047
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2048
  ret i64 %call, !dbg !2049
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2050 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2054, metadata !DIExpression()), !dbg !2057
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2055, metadata !DIExpression()), !dbg !2057
  call void @llvm.dbg.value(metadata i32 %base, metadata !2056, metadata !DIExpression()), !dbg !2057
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2058
  ret i64 %call, !dbg !2059
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2060 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2100, metadata !DIExpression()), !dbg !2102
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2101, metadata !DIExpression()), !dbg !2102
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2103
  ret i32 %call, !dbg !2104
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2105 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2107, metadata !DIExpression()), !dbg !2109
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2108, metadata !DIExpression()), !dbg !2109
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2110
  ret i32 %call, !dbg !2111
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2112 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2116, metadata !DIExpression()), !dbg !2118
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2117, metadata !DIExpression()), !dbg !2118
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2119
  ret i32 %call, !dbg !2120
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2121 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2125, metadata !DIExpression()), !dbg !2129
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2126, metadata !DIExpression()), !dbg !2129
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2127, metadata !DIExpression()), !dbg !2129
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2128, metadata !DIExpression()), !dbg !2129
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2130
  ret i32 %call, !dbg !2131
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2132 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2136, metadata !DIExpression()), !dbg !2139
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2137, metadata !DIExpression()), !dbg !2139
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2138, metadata !DIExpression()), !dbg !2139
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2138, metadata !DIExpression(DW_OP_deref)), !dbg !2139
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2140
  ret i32 %call, !dbg !2141
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2142 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2146, metadata !DIExpression()), !dbg !2150
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2147, metadata !DIExpression()), !dbg !2150
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2148, metadata !DIExpression()), !dbg !2150
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2149, metadata !DIExpression()), !dbg !2150
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2149, metadata !DIExpression(DW_OP_deref)), !dbg !2150
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2151
  ret i32 %call, !dbg !2152
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2153 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2177, metadata !DIExpression()), !dbg !2179
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2178, metadata !DIExpression()), !dbg !2179
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2180
  ret i32 %call, !dbg !2181
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2182 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2184, metadata !DIExpression()), !dbg !2186
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2185, metadata !DIExpression()), !dbg !2186
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2187
  ret i32 %call, !dbg !2188
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2189 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2193, metadata !DIExpression()), !dbg !2195
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2194, metadata !DIExpression()), !dbg !2195
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2196
  ret i32 %call, !dbg !2197
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2198 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2202, metadata !DIExpression()), !dbg !2206
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2203, metadata !DIExpression()), !dbg !2206
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2204, metadata !DIExpression()), !dbg !2206
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2205, metadata !DIExpression()), !dbg !2206
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2207
  ret i32 %call, !dbg !2208
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @dump_iv_info(%struct._IO_FILE* %file, %struct.rtx_iv* %iv) local_unnamed_addr #4 !dbg !2209 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2213, metadata !DIExpression()), !dbg !2215
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !2214, metadata !DIExpression()), !dbg !2215
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !2216
  %0 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !2216
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !2218
  br i1 %tobool, label %if.then, label %if.end, !dbg !2219

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #6, !dbg !2220
  br label %if.end41, !dbg !2222

if.end:                                           ; preds = %entry
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 1, !dbg !2223
  %1 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !2223
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !2225
  %cmp = icmp eq %struct.rtx_def* %1, %2, !dbg !2226
  br i1 %cmp, label %land.lhs.true, label %if.end4, !dbg !2227

land.lhs.true:                                    ; preds = %if.end
  %first_special = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 7, !dbg !2228
  %bf.load = load i8, i8* %first_special, align 8, !dbg !2228
  %bf.clear = and i8 %bf.load, 1, !dbg !2228
  %tobool1 = icmp eq i8 %bf.clear, 0, !dbg !2229
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !2230

if.then2:                                         ; preds = %land.lhs.true
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2231
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !2232
  br label %if.end4, !dbg !2231

if.end4:                                          ; preds = %land.lhs.true, %if.then2, %if.end
  %3 = phi %struct.rtx_def* [ %0, %land.lhs.true ], [ %.pre, %if.then2 ], [ %0, %if.end ], !dbg !2232
  tail call void @print_rtl(%struct._IO_FILE* %file, %struct.rtx_def* %3) #6, !dbg !2233
  %4 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !2234
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !2236
  %cmp7 = icmp eq %struct.rtx_def* %4, %5, !dbg !2237
  br i1 %cmp7, label %if.end12, label %if.then8, !dbg !2238

if.then8:                                         ; preds = %if.end4
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2239
  %6 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !2241
  tail call void @print_rtl(%struct._IO_FILE* %file, %struct.rtx_def* %6) #6, !dbg !2242
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !2243
  br label %if.end12, !dbg !2244

if.end12:                                         ; preds = %if.end4, %if.then8
  %mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 6, !dbg !2245
  %7 = load i32, i32* %mode, align 4, !dbg !2245
  %idxprom = zext i32 %7 to i64, !dbg !2245
  %arrayidx = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom, !dbg !2245
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !2245
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %8) #6, !dbg !2246
  %9 = load i32, i32* %mode, align 4, !dbg !2247
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !2249
  %10 = load i32, i32* %extend_mode, align 8, !dbg !2249
  %cmp15 = icmp eq i32 %9, %10, !dbg !2250
  br i1 %cmp15, label %if.end23, label %if.then16, !dbg !2251

if.then16:                                        ; preds = %if.end12
  %extend = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 2, !dbg !2252
  %11 = load i32, i32* %extend, align 8, !dbg !2252
  %idxprom17 = zext i32 %11 to i64, !dbg !2253
  %arrayidx18 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_name, i64 0, i64 %idxprom17, !dbg !2253
  %12 = load i8*, i8** %arrayidx18, align 8, !dbg !2253
  %idxprom20 = zext i32 %10 to i64, !dbg !2254
  %arrayidx21 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom20, !dbg !2254
  %13 = load i8*, i8** %arrayidx21, align 8, !dbg !2254
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8* %12, i8* %13) #6, !dbg !2255
  br label %if.end23, !dbg !2255

if.end23:                                         ; preds = %if.end12, %if.then16
  %mult = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 4, !dbg !2256
  %14 = load %struct.rtx_def*, %struct.rtx_def** %mult, align 8, !dbg !2256
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !2258
  %cmp24 = icmp eq %struct.rtx_def* %14, %15, !dbg !2259
  br i1 %cmp24, label %if.end28, label %if.then25, !dbg !2260

if.then25:                                        ; preds = %if.end23
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !2261
  %16 = load %struct.rtx_def*, %struct.rtx_def** %mult, align 8, !dbg !2263
  tail call void @print_rtl(%struct._IO_FILE* %file, %struct.rtx_def* %16) #6, !dbg !2264
  br label %if.end28, !dbg !2265

if.end28:                                         ; preds = %if.end23, %if.then25
  %delta = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 3, !dbg !2266
  %17 = load %struct.rtx_def*, %struct.rtx_def** %delta, align 8, !dbg !2266
  %18 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !2268
  %cmp29 = icmp eq %struct.rtx_def* %17, %18, !dbg !2269
  br i1 %cmp29, label %if.end33, label %if.then30, !dbg !2270

if.then30:                                        ; preds = %if.end28
  %call31 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2271
  %19 = load %struct.rtx_def*, %struct.rtx_def** %delta, align 8, !dbg !2273
  tail call void @print_rtl(%struct._IO_FILE* %file, %struct.rtx_def* %19) #6, !dbg !2274
  br label %if.end33, !dbg !2275

if.end33:                                         ; preds = %if.end28, %if.then30
  %first_special34 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 7, !dbg !2276
  %bf.load35 = load i8, i8* %first_special34, align 8, !dbg !2276
  %bf.clear36 = and i8 %bf.load35, 1, !dbg !2276
  %tobool38 = icmp eq i8 %bf.clear36, 0, !dbg !2278
  br i1 %tobool38, label %if.end41, label %if.then39, !dbg !2279

if.then39:                                        ; preds = %if.end33
  %call40 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2280
  br label %if.end41, !dbg !2280

if.end41:                                         ; preds = %if.end33, %if.then, %if.then39
  ret void, !dbg !2281
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #1

declare dso_local void @print_rtl(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @lowpart_subreg(i32 %outer_mode, %struct.rtx_def* %expr, i32 %inner_mode) local_unnamed_addr #4 !dbg !2282 {
entry:
  call void @llvm.dbg.value(metadata i32 %outer_mode, metadata !2286, metadata !DIExpression()), !dbg !2289
  call void @llvm.dbg.value(metadata %struct.rtx_def* %expr, metadata !2287, metadata !DIExpression()), !dbg !2289
  call void @llvm.dbg.value(metadata i32 %inner_mode, metadata !2288, metadata !DIExpression()), !dbg !2289
  %call = tail call i32 @subreg_lowpart_offset(i32 %outer_mode, i32 %inner_mode) #6, !dbg !2290
  %call1 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %outer_mode, %struct.rtx_def* %expr, i32 %inner_mode, i32 %call) #6, !dbg !2291
  ret %struct.rtx_def* %call1, !dbg !2292
}

declare dso_local %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local i32 @subreg_lowpart_offset(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @iv_analysis_loop_init(%struct.loop* %loop) local_unnamed_addr #4 !dbg !2293 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2297, metadata !DIExpression()), !dbg !2303
  %call = tail call %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop* %loop) #6, !dbg !2304
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !2298, metadata !DIExpression()), !dbg !2303
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2305
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1, metadata !2301, metadata !DIExpression()), !dbg !2303
  store %struct.loop* %loop, %struct.loop** @current_loop, align 8, !dbg !2306
  %.b = load i1, i1* @clean_slate, align 1, !dbg !2307
  br i1 %.b, label %if.else, label %if.then, !dbg !2309

if.then:                                          ; preds = %entry
  %call2 = tail call i32 @df_set_flags(i32 36) #6, !dbg !2310
  %call3 = tail call %struct.htab* @htab_create(i64 10, i32 (i8*)* nonnull @biv_hash, i32 (i8*, i8*)* nonnull @biv_eq, void (i8*)* nonnull @free) #6, !dbg !2312
  store %struct.htab* %call3, %struct.htab** @bivs, align 8, !dbg !2313
  store i1 true, i1* @clean_slate, align 1, !dbg !2314
  br label %if.end, !dbg !2315

if.else:                                          ; preds = %entry
  tail call fastcc void @clear_iv_info() #7, !dbg !2316
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !2302, metadata !DIExpression()), !dbg !2303
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !2317
  br label %for.cond, !dbg !2320

for.cond:                                         ; preds = %for.body, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end ], !dbg !2321
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2302, metadata !DIExpression()), !dbg !2303
  %0 = load i32, i32* %num_nodes, align 4, !dbg !2322
  %1 = zext i32 %0 to i64, !dbg !2323
  %cmp = icmp ult i64 %indvars.iv, %1, !dbg !2323
  br i1 %cmp, label %for.body, label %for.end, !dbg !2324

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %indvars.iv, !dbg !2325
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !2325
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !2300, metadata !DIExpression()), !dbg !2303
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 9, !dbg !2327
  %3 = load i32, i32* %index, align 8, !dbg !2327
  %call4 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call1, i32 %3) #6, !dbg !2328
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2329
  br label %for.cond, !dbg !2330, !llvm.loop !2331

for.end:                                          ; preds = %for.cond
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !2333
  %arrayidx5 = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 1, i64 4, !dbg !2333
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx5, align 8, !dbg !2333
  tail call void @df_remove_problem(%struct.dataflow* %5) #6, !dbg !2334
  tail call void @df_process_deferred_rescans() #6, !dbg !2335
  tail call void @df_chain_add_problem(i32 2) #6, !dbg !2336
  tail call void @df_note_add_problem() #6, !dbg !2337
  tail call void @df_set_blocks(%struct.bitmap_head_def* %call1) #6, !dbg !2338
  tail call void @df_analyze() #6, !dbg !2339
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2340
  %tobool6 = icmp eq %struct._IO_FILE* %6, null, !dbg !2340
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !2342

if.then7:                                         ; preds = %for.end
  tail call void @df_dump_region(%struct._IO_FILE* nonnull %6) #6, !dbg !2343
  br label %if.end8, !dbg !2343

if.end8:                                          ; preds = %for.end, %if.then7
  tail call fastcc void @check_iv_ref_table_size() #7, !dbg !2344
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call1) #6, !dbg !2345
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2301, metadata !DIExpression()), !dbg !2303
  %7 = bitcast %struct.basic_block_def** %call to i8*, !dbg !2346
  tail call void @free(i8* %7) #6, !dbg !2347
  ret void, !dbg !2348
}

declare dso_local %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop*) local_unnamed_addr #1

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #1

declare dso_local i32 @df_set_flags(i32) local_unnamed_addr #1

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @biv_hash(i8* %b) #4 !dbg !2349 {
entry:
  call void @llvm.dbg.value(metadata i8* %b, metadata !2351, metadata !DIExpression()), !dbg !2352
  %regno = bitcast i8* %b to i32*, !dbg !2353
  %0 = load i32, i32* %regno, align 8, !dbg !2353
  ret i32 %0, !dbg !2354
}

; Function Attrs: nounwind uwtable
define internal i32 @biv_eq(i8* %b, i8* %r) #4 !dbg !2355 {
entry:
  call void @llvm.dbg.value(metadata i8* %b, metadata !2357, metadata !DIExpression()), !dbg !2359
  call void @llvm.dbg.value(metadata i8* %r, metadata !2358, metadata !DIExpression()), !dbg !2359
  %regno = bitcast i8* %b to i32*, !dbg !2360
  %0 = load i32, i32* %regno, align 8, !dbg !2360
  %1 = bitcast i8* %r to %struct.rtx_def*, !dbg !2361
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !2361
  %cmp = icmp eq i32 %0, %call, !dbg !2362
  %conv = zext i1 %cmp to i32, !dbg !2362
  ret i32 %conv, !dbg !2363
}

declare dso_local void @free(i8*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_iv_info() unnamed_addr #4 !dbg !2364 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2371
  %table_size = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 3, i32 4, !dbg !2371
  %1 = load i32, i32* %table_size, align 4, !dbg !2371
  call void @llvm.dbg.value(metadata i32 %1, metadata !2369, metadata !DIExpression()), !dbg !2372
  tail call fastcc void @check_iv_ref_table_size() #7, !dbg !2373
  call void @llvm.dbg.value(metadata i32 0, metadata !2368, metadata !DIExpression()), !dbg !2372
  %wide.trip.count = zext i32 %1 to i64, !dbg !2374
  br label %for.cond, !dbg !2377

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !2378
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2368, metadata !DIExpression()), !dbg !2372
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !2374
  br i1 %exitcond, label %for.end, label %for.body, !dbg !2379

for.body:                                         ; preds = %for.cond
  %2 = load %struct.rtx_iv**, %struct.rtx_iv*** @iv_ref_table, align 8, !dbg !2380
  %arrayidx = getelementptr inbounds %struct.rtx_iv*, %struct.rtx_iv** %2, i64 %indvars.iv, !dbg !2380
  %3 = load %struct.rtx_iv*, %struct.rtx_iv** %arrayidx, align 8, !dbg !2380
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %3, metadata !2370, metadata !DIExpression()), !dbg !2372
  %tobool = icmp eq %struct.rtx_iv* %3, null, !dbg !2382
  br i1 %tobool, label %for.inc, label %if.then, !dbg !2384

if.then:                                          ; preds = %for.body
  %4 = bitcast %struct.rtx_iv* %3 to i8*, !dbg !2385
  tail call void @free(i8* nonnull %4) #6, !dbg !2387
  %5 = load %struct.rtx_iv**, %struct.rtx_iv*** @iv_ref_table, align 8, !dbg !2388
  %arrayidx2 = getelementptr inbounds %struct.rtx_iv*, %struct.rtx_iv** %5, i64 %indvars.iv, !dbg !2388
  store %struct.rtx_iv* null, %struct.rtx_iv** %arrayidx2, align 8, !dbg !2389
  br label %for.inc, !dbg !2390

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2391
  br label %for.cond, !dbg !2392, !llvm.loop !2393

for.end:                                          ; preds = %for.cond
  %6 = load %struct.htab*, %struct.htab** @bivs, align 8, !dbg !2395
  tail call void @htab_empty(%struct.htab* %6) #6, !dbg !2396
  ret void, !dbg !2397
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

declare dso_local void @df_remove_problem(%struct.dataflow*) local_unnamed_addr #1

declare dso_local void @df_process_deferred_rescans() local_unnamed_addr #1

declare dso_local void @df_chain_add_problem(i32) local_unnamed_addr #1

declare dso_local void @df_note_add_problem() local_unnamed_addr #1

declare dso_local void @df_set_blocks(%struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @df_analyze() local_unnamed_addr #1

declare dso_local void @df_dump_region(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @check_iv_ref_table_size() unnamed_addr #4 !dbg !2398 {
entry:
  %0 = load i32, i32* @iv_ref_table_size, align 4, !dbg !2403
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !2404
  %table_size = getelementptr inbounds %struct.df, %struct.df* %1, i64 0, i32 3, i32 4, !dbg !2404
  %2 = load i32, i32* %table_size, align 4, !dbg !2404
  %cmp = icmp ult i32 %0, %2, !dbg !2405
  br i1 %cmp, label %if.then, label %if.end, !dbg !2406

if.then:                                          ; preds = %entry
  %div = lshr i32 %2, 2, !dbg !2407
  %add = add i32 %2, %div, !dbg !2408
  call void @llvm.dbg.value(metadata i32 %add, metadata !2400, metadata !DIExpression()), !dbg !2409
  %3 = load i8*, i8** bitcast (%struct.rtx_iv*** @iv_ref_table to i8**), align 8, !dbg !2410
  %conv = zext i32 %add to i64, !dbg !2410
  %mul = shl nuw nsw i64 %conv, 3, !dbg !2410
  %call = tail call i8* @xrealloc(i8* %3, i64 %mul) #6, !dbg !2410
  store i8* %call, i8** bitcast (%struct.rtx_iv*** @iv_ref_table to i8**), align 8, !dbg !2411
  %.cast = bitcast i8* %call to %struct.rtx_iv**, !dbg !2412
  %4 = load i32, i32* @iv_ref_table_size, align 4, !dbg !2413
  %idxprom = zext i32 %4 to i64, !dbg !2412
  %arrayidx = getelementptr inbounds %struct.rtx_iv*, %struct.rtx_iv** %.cast, i64 %idxprom, !dbg !2412
  %5 = bitcast %struct.rtx_iv** %arrayidx to i8*, !dbg !2414
  %sub = sub i32 %add, %4, !dbg !2415
  %conv5 = zext i32 %sub to i64, !dbg !2416
  %mul6 = shl nuw nsw i64 %conv5, 3, !dbg !2417
  %call7 = tail call i8* @memset(i8* %5, i32 0, i64 %mul6) #6, !dbg !2418
  store i32 %add, i32* @iv_ref_table_size, align 4, !dbg !2419
  br label %if.end, !dbg !2420

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2421
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @iv_analyze_expr(%struct.rtx_def* %insn, %struct.rtx_def* %rhs, i32 %mode, %struct.rtx_iv* %iv) local_unnamed_addr #4 !dbg !2422 {
entry:
  %iv0 = alloca %struct.rtx_iv, align 8
  %iv1 = alloca %struct.rtx_iv, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2426, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rhs, metadata !2427, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2428, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !2429, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2430, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2432, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2433, metadata !DIExpression()), !dbg !2438
  %0 = bitcast %struct.rtx_iv* %iv0 to i8*, !dbg !2439
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !2439
  %1 = bitcast %struct.rtx_iv* %iv1 to i8*, !dbg !2439
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1) #8, !dbg !2439
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 0, !dbg !2440
  %bf.load = load i32, i32* %2, align 8, !dbg !2440
  %bf.clear = and i32 %bf.load, 65535, !dbg !2440
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !2436, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2437, metadata !DIExpression()), !dbg !2438
  %mode1 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 6, !dbg !2441
  store i32 0, i32* %mode1, align 4, !dbg !2442
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !2443
  store %struct.rtx_def* null, %struct.rtx_def** %base, align 8, !dbg !2444
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 1, !dbg !2445
  store %struct.rtx_def* null, %struct.rtx_def** %step, align 8, !dbg !2446
  %bf.load2 = load i32, i32* %2, align 8, !dbg !2447
  %bf.lshr = lshr i32 %bf.load2, 16, !dbg !2447
  %bf.clear3 = and i32 %bf.lshr, 255, !dbg !2447
  %cmp = icmp eq i32 %bf.clear3, %mode, !dbg !2447
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !2447

lor.lhs.false:                                    ; preds = %entry
  %bf.clear6 = and i32 %bf.load2, 16711680, !dbg !2447
  %cmp7 = icmp eq i32 %bf.clear6, 0, !dbg !2447
  br i1 %cmp7, label %cond.end, label %cond.true, !dbg !2447

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 938, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2447
  %bf.load8.pre = load i32, i32* %2, align 8, !dbg !2448
  br label %cond.end, !dbg !2447

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %bf.load12 = phi i32 [ %bf.load2, %entry ], [ %bf.load2, %lor.lhs.false ], [ %bf.load8.pre, %cond.true ], !dbg !2448
  %bf.clear9 = and i32 %bf.load12, 65535, !dbg !2448
  %idxprom = zext i32 %bf.clear9 to i64, !dbg !2448
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !2448
  %3 = load i32, i32* %arrayidx, align 4, !dbg !2448
  %cmp10 = icmp eq i32 %3, 9, !dbg !2448
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !2450

lor.lhs.false11:                                  ; preds = %cond.end
  %cmp14 = icmp eq i32 %bf.clear9, 37, !dbg !2451
  %cmp16 = icmp eq i32 %bf.clear, 39, !dbg !2452
  %or.cond = or i1 %cmp14, %cmp16, !dbg !2453
  br i1 %or.cond, label %if.then, label %if.end23, !dbg !2453

if.then:                                          ; preds = %lor.lhs.false11, %cond.end
  %call = tail call fastcc zeroext i8 @iv_analyze_op(%struct.rtx_def* %insn, %struct.rtx_def* %rhs, %struct.rtx_iv* %iv) #7, !dbg !2454
  %tobool = icmp eq i8 %call, 0, !dbg !2454
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2457

if.end:                                           ; preds = %if.then
  %4 = load i32, i32* %mode1, align 4, !dbg !2458
  %cmp19 = icmp eq i32 %4, 0, !dbg !2460
  br i1 %cmp19, label %if.then20, label %cleanup, !dbg !2461

if.then20:                                        ; preds = %if.end
  store i32 %mode, i32* %mode1, align 4, !dbg !2462
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !2464
  store i32 %mode, i32* %extend_mode, align 8, !dbg !2465
  br label %cleanup, !dbg !2466

if.end23:                                         ; preds = %lor.lhs.false11
  %trunc = trunc i32 %bf.load to i16, !dbg !2467
  switch i16 %trunc, label %cleanup [
    i16 37, label %sw.epilog
    i16 98, label %sw.bb24
    i16 99, label %sw.bb24
    i16 51, label %sw.bb24
    i16 49, label %sw.bb29
    i16 50, label %sw.bb29
    i16 52, label %sw.bb38
    i16 65, label %sw.bb61
  ], !dbg !2467

sw.bb24:                                          ; preds = %if.end23, %if.end23, %if.end23
  %arrayidx25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2468
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !2468
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2468
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !2432, metadata !DIExpression()), !dbg !2438
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !2470
  %bf.load26 = load i32, i32* %6, align 8, !dbg !2470
  %bf.lshr27 = lshr i32 %bf.load26, 16, !dbg !2470
  %bf.clear28 = and i32 %bf.lshr27, 255, !dbg !2470
  call void @llvm.dbg.value(metadata i32 %bf.clear28, metadata !2437, metadata !DIExpression()), !dbg !2438
  br label %sw.epilog, !dbg !2471

sw.bb29:                                          ; preds = %if.end23, %if.end23
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2472
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !2472
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !2472
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !2432, metadata !DIExpression()), !dbg !2438
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2473
  %rt_rtx37 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !2473
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !2473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !2433, metadata !DIExpression()), !dbg !2438
  br label %sw.epilog, !dbg !2474

sw.bb38:                                          ; preds = %if.end23
  %arrayidx41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2475
  %rt_rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**, !dbg !2475
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx42, align 8, !dbg !2475
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !2432, metadata !DIExpression()), !dbg !2438
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2476
  %rt_rtx46 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !2476
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !2476
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !2430, metadata !DIExpression()), !dbg !2438
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 0, !dbg !2477
  %bf.load47 = load i32, i32* %13, align 8, !dbg !2477
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !2477
  %idxprom49 = zext i32 %bf.clear48 to i64, !dbg !2477
  %arrayidx50 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom49, !dbg !2477
  %14 = load i32, i32* %arrayidx50, align 4, !dbg !2477
  %cmp51 = icmp eq i32 %14, 9, !dbg !2477
  %spec.select = select i1 %cmp51, %struct.rtx_def* %12, %struct.rtx_def* %10, !dbg !2479
  %spec.select1 = select i1 %cmp51, %struct.rtx_def* %10, %struct.rtx_def* %12, !dbg !2479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select1, metadata !2432, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !2430, metadata !DIExpression()), !dbg !2438
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %spec.select, i64 0, i32 0, !dbg !2480
  %bf.load54 = load i32, i32* %15, align 8, !dbg !2480
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !2480
  %idxprom56 = zext i32 %bf.clear55 to i64, !dbg !2480
  %arrayidx57 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom56, !dbg !2480
  %16 = load i32, i32* %arrayidx57, align 4, !dbg !2480
  %cmp58 = icmp eq i32 %16, 9, !dbg !2480
  br i1 %cmp58, label %sw.epilog, label %cleanup, !dbg !2482

sw.bb61:                                          ; preds = %if.end23
  %arrayidx64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2483
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**, !dbg !2483
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !2483
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !2432, metadata !DIExpression()), !dbg !2438
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2484
  %rt_rtx69 = bitcast %union.rtunion_def* %18 to %struct.rtx_def**, !dbg !2484
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx69, align 8, !dbg !2484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !2430, metadata !DIExpression()), !dbg !2438
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !2485
  %bf.load70 = load i32, i32* %20, align 8, !dbg !2485
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !2485
  %idxprom72 = zext i32 %bf.clear71 to i64, !dbg !2485
  %arrayidx73 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom72, !dbg !2485
  %21 = load i32, i32* %arrayidx73, align 4, !dbg !2485
  %cmp74 = icmp eq i32 %21, 9, !dbg !2485
  br i1 %cmp74, label %sw.epilog, label %cleanup, !dbg !2487

sw.epilog:                                        ; preds = %sw.bb61, %sw.bb38, %if.end23, %sw.bb29, %sw.bb24
  %mby.1 = phi %struct.rtx_def* [ null, %sw.bb29 ], [ null, %sw.bb24 ], [ null, %if.end23 ], [ %spec.select, %sw.bb38 ], [ %19, %sw.bb61 ], !dbg !2438
  %op0.1 = phi %struct.rtx_def* [ %7, %sw.bb29 ], [ %5, %sw.bb24 ], [ %rhs, %if.end23 ], [ %spec.select1, %sw.bb38 ], [ %17, %sw.bb61 ], !dbg !2488
  %op1.0 = phi %struct.rtx_def* [ %9, %sw.bb29 ], [ null, %sw.bb24 ], [ null, %if.end23 ], [ null, %sw.bb38 ], [ null, %sw.bb61 ], !dbg !2438
  %omode.0 = phi i32 [ %mode, %sw.bb29 ], [ %bf.clear28, %sw.bb24 ], [ %mode, %if.end23 ], [ %mode, %sw.bb38 ], [ %mode, %sw.bb61 ], !dbg !2438
  call void @llvm.dbg.value(metadata i32 %omode.0, metadata !2437, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.0, metadata !2433, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.1, metadata !2432, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mby.1, metadata !2430, metadata !DIExpression()), !dbg !2438
  %tobool77 = icmp eq %struct.rtx_def* %op0.1, null, !dbg !2489
  br i1 %tobool77, label %if.end81, label %land.lhs.true, !dbg !2491

land.lhs.true:                                    ; preds = %sw.epilog
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv0, metadata !2434, metadata !DIExpression(DW_OP_deref)), !dbg !2438
  %call78 = call zeroext i8 @iv_analyze_expr(%struct.rtx_def* %insn, %struct.rtx_def* nonnull %op0.1, i32 %omode.0, %struct.rtx_iv* nonnull %iv0) #7, !dbg !2492
  %tobool79 = icmp eq i8 %call78, 0, !dbg !2492
  br i1 %tobool79, label %cleanup, label %if.end81, !dbg !2493

if.end81:                                         ; preds = %land.lhs.true, %sw.epilog
  %tobool82 = icmp eq %struct.rtx_def* %op1.0, null, !dbg !2494
  br i1 %tobool82, label %if.end87, label %land.lhs.true83, !dbg !2496

land.lhs.true83:                                  ; preds = %if.end81
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv1, metadata !2435, metadata !DIExpression(DW_OP_deref)), !dbg !2438
  %call84 = call zeroext i8 @iv_analyze_expr(%struct.rtx_def* %insn, %struct.rtx_def* nonnull %op1.0, i32 %omode.0, %struct.rtx_iv* nonnull %iv1) #7, !dbg !2497
  %tobool85 = icmp eq i8 %call84, 0, !dbg !2497
  br i1 %tobool85, label %cleanup, label %if.end87, !dbg !2498

if.end87:                                         ; preds = %land.lhs.true83, %if.end81
  switch i16 %trunc, label %sw.epilog114 [
    i16 98, label %sw.bb88
    i16 99, label %sw.bb88
    i16 51, label %sw.bb93
    i16 49, label %sw.bb98
    i16 50, label %sw.bb98
    i16 52, label %sw.bb103
    i16 65, label %sw.bb108
  ], !dbg !2499

sw.bb88:                                          ; preds = %if.end87, %if.end87
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv0, metadata !2434, metadata !DIExpression(DW_OP_deref)), !dbg !2438
  %call89 = call fastcc zeroext i8 @iv_extend(%struct.rtx_iv* nonnull %iv0, i32 %bf.clear, i32 %mode) #7, !dbg !2500
  %tobool90 = icmp eq i8 %call89, 0, !dbg !2500
  br i1 %tobool90, label %cleanup, label %sw.epilog114, !dbg !2503

sw.bb93:                                          ; preds = %if.end87
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv0, metadata !2434, metadata !DIExpression(DW_OP_deref)), !dbg !2438
  %call94 = call fastcc zeroext i8 @iv_neg(%struct.rtx_iv* nonnull %iv0) #7, !dbg !2504
  br i1 false, label %sw.bb93.cleanup_crit_edge, label %sw.epilog114, !dbg !2506

sw.bb93.cleanup_crit_edge:                        ; preds = %sw.bb93
  br label %cleanup, !dbg !2506

sw.bb98:                                          ; preds = %if.end87, %if.end87
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv0, metadata !2434, metadata !DIExpression(DW_OP_deref)), !dbg !2438
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv1, metadata !2435, metadata !DIExpression(DW_OP_deref)), !dbg !2438
  %call99 = call fastcc zeroext i8 @iv_add(%struct.rtx_iv* nonnull %iv0, %struct.rtx_iv* nonnull %iv1, i32 %bf.clear) #7, !dbg !2507
  %tobool100 = icmp eq i8 %call99, 0, !dbg !2507
  br i1 %tobool100, label %cleanup, label %sw.epilog114, !dbg !2509

sw.bb103:                                         ; preds = %if.end87
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv0, metadata !2434, metadata !DIExpression(DW_OP_deref)), !dbg !2438
  %call104 = call fastcc zeroext i8 @iv_mult(%struct.rtx_iv* nonnull %iv0, %struct.rtx_def* %mby.1) #7, !dbg !2510
  %tobool105 = icmp eq i8 %call104, 0, !dbg !2510
  br i1 %tobool105, label %cleanup, label %sw.epilog114, !dbg !2512

sw.bb108:                                         ; preds = %if.end87
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv0, metadata !2434, metadata !DIExpression(DW_OP_deref)), !dbg !2438
  %call109 = call fastcc zeroext i8 @iv_shift(%struct.rtx_iv* nonnull %iv0, %struct.rtx_def* %mby.1) #7, !dbg !2513
  %tobool110 = icmp eq i8 %call109, 0, !dbg !2513
  br i1 %tobool110, label %cleanup, label %sw.epilog114, !dbg !2515

sw.epilog114:                                     ; preds = %sw.bb88, %sw.bb93, %sw.bb98, %sw.bb103, %sw.bb108, %if.end87
  %22 = bitcast %struct.rtx_iv* %iv to i8*, !dbg !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %0, i64 56, i1 false), !dbg !2516
  %23 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !2517
  %cmp116 = icmp ne %struct.rtx_def* %23, null, !dbg !2518
  %conv117 = zext i1 %cmp116 to i8, !dbg !2519
  br label %cleanup, !dbg !2520

cleanup:                                          ; preds = %sw.bb93.cleanup_crit_edge, %if.then, %land.lhs.true, %land.lhs.true83, %sw.bb88, %sw.bb98, %sw.bb103, %sw.bb108, %if.end23, %sw.bb61, %sw.bb38, %if.end, %if.then20, %sw.epilog114
  %retval.0 = phi i8 [ %conv117, %sw.epilog114 ], [ 0, %if.then ], [ 1, %if.then20 ], [ 1, %if.end ], [ 0, %sw.bb38 ], [ 0, %sw.bb61 ], [ 0, %if.end23 ], [ 0, %land.lhs.true ], [ 0, %land.lhs.true83 ], [ 0, %sw.bb88 ], [ undef, %sw.bb93.cleanup_crit_edge ], [ 0, %sw.bb98 ], [ 0, %sw.bb103 ], [ 0, %sw.bb108 ], !dbg !2438
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1) #8, !dbg !2521
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !2521
  ret i8 %retval.0, !dbg !2521
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @iv_analyze_op(%struct.rtx_def* %insn, %struct.rtx_def* %op, %struct.rtx_iv* %iv) unnamed_addr #4 !dbg !2522 {
entry:
  %def = alloca %union.df_ref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2526, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !2527, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !2528, metadata !DIExpression()), !dbg !2591
  %0 = bitcast %union.df_ref_d** %def to i8*, !dbg !2592
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2592
  call void @llvm.dbg.value(metadata %union.df_ref_d* null, metadata !2529, metadata !DIExpression()), !dbg !2591
  store %union.df_ref_d* null, %union.df_ref_d** %def, align 8, !dbg !2593
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2594
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !2594
  br i1 %tobool, label %if.end, label %if.then, !dbg !2596

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !2597
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2599
  tail call void @print_rtl(%struct._IO_FILE* %2, %struct.rtx_def* %op) #6, !dbg !2600
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2601
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !2602
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2603
  %call2 = tail call i32 @print_rtl_single(%struct._IO_FILE* %4, %struct.rtx_def* %insn) #6, !dbg !2604
  br label %if.end, !dbg !2605

if.end:                                           ; preds = %entry, %if.then
  %call3 = tail call i32 @function_invariant_p(%struct.rtx_def* %op) #6, !dbg !2606
  %tobool4 = icmp eq i32 %call3, 0, !dbg !2606
  br i1 %tobool4, label %if.else, label %if.end28, !dbg !2608

if.else:                                          ; preds = %if.end
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !2609
  %bf.load = load i32, i32* %5, align 8, !dbg !2609
  %bf.clear = and i32 %bf.load, 65535, !dbg !2609
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !2611
  br i1 %cmp, label %if.then6, label %if.else18, !dbg !2612

if.then6:                                         ; preds = %if.else
  %call7 = tail call i32 @subreg_lowpart_p(%struct.rtx_def* %op) #6, !dbg !2613
  %tobool8 = icmp eq i32 %call7, 0, !dbg !2613
  br i1 %tobool8, label %cleanup, label %if.end10, !dbg !2616

if.end10:                                         ; preds = %if.then6
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2617
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2617
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2617
  %call11 = tail call fastcc zeroext i8 @iv_analyze_op(%struct.rtx_def* %insn, %struct.rtx_def* %6, %struct.rtx_iv* %iv) #7, !dbg !2619
  %tobool12 = icmp eq i8 %call11, 0, !dbg !2619
  br i1 %tobool12, label %cleanup, label %if.end14, !dbg !2620

if.end14:                                         ; preds = %if.end10
  %bf.load15 = load i32, i32* %5, align 8, !dbg !2621
  %bf.lshr = lshr i32 %bf.load15, 16, !dbg !2621
  %bf.clear16 = and i32 %bf.lshr, 255, !dbg !2621
  %call17 = tail call fastcc zeroext i8 @iv_subreg(%struct.rtx_iv* %iv, i32 %bf.clear16) #7, !dbg !2622
  br label %cleanup, !dbg !2623

if.else18:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def, metadata !2529, metadata !DIExpression(DW_OP_deref)), !dbg !2591
  %call19 = call fastcc i32 @iv_get_reaching_def(%struct.rtx_def* %insn, %struct.rtx_def* %op, %union.df_ref_d** nonnull %def) #7, !dbg !2624
  call void @llvm.dbg.value(metadata i32 %call19, metadata !2590, metadata !DIExpression()), !dbg !2591
  %cmp20 = icmp eq i32 %call19, 0, !dbg !2626
  br i1 %cmp20, label %if.then21, label %if.end28, !dbg !2628

if.then21:                                        ; preds = %if.else18
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2629
  %tobool22 = icmp eq %struct._IO_FILE* %7, null, !dbg !2629
  br i1 %tobool22, label %cleanup, label %if.then23, !dbg !2632

if.then23:                                        ; preds = %if.then21
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !2633
  br label %cleanup, !dbg !2633

if.end28:                                         ; preds = %if.end, %if.else18
  %res.0 = phi i32 [ 1, %if.end ], [ %call19, %if.else18 ], !dbg !2634
  call void @llvm.dbg.value(metadata i32 %res.0, metadata !2590, metadata !DIExpression()), !dbg !2591
  switch i32 %res.0, label %if.end41 [
    i32 1, label %if.then30
    i32 2, label %if.then39
  ], !dbg !2635

if.then30:                                        ; preds = %if.end28
  %call31 = call fastcc zeroext i8 @iv_constant(%struct.rtx_iv* %iv, %struct.rtx_def* %op, i32 0) #7, !dbg !2636
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2639
  %tobool32 = icmp eq %struct._IO_FILE* %8, null, !dbg !2639
  br i1 %tobool32, label %cleanup, label %if.then33, !dbg !2641

if.then33:                                        ; preds = %if.then30
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !2642
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2644
  call void @dump_iv_info(%struct._IO_FILE* %9, %struct.rtx_iv* %iv) #7, !dbg !2645
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2646
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !2647
  br label %cleanup, !dbg !2648

if.then39:                                        ; preds = %if.end28
  %call40 = call fastcc zeroext i8 @iv_analyze_biv(%struct.rtx_def* %op, %struct.rtx_iv* %iv) #7, !dbg !2649
  br label %cleanup, !dbg !2651

if.end41:                                         ; preds = %if.end28
  %11 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !2652
  call void @llvm.dbg.value(metadata %union.df_ref_d* %11, metadata !2529, metadata !DIExpression()), !dbg !2591
  %call42 = call fastcc zeroext i8 @iv_analyze_def(%union.df_ref_d* %11, %struct.rtx_iv* %iv) #7, !dbg !2653
  br label %cleanup, !dbg !2654

cleanup:                                          ; preds = %if.end10, %if.then6, %if.then21, %if.then30, %if.then33, %if.then23, %if.end41, %if.then39, %if.end14
  %retval.0 = phi i8 [ %call40, %if.then39 ], [ %call42, %if.end41 ], [ %call17, %if.end14 ], [ 0, %if.then6 ], [ 0, %if.end10 ], [ 0, %if.then23 ], [ 0, %if.then21 ], [ 1, %if.then33 ], [ 1, %if.then30 ], !dbg !2591
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2655
  ret i8 %retval.0, !dbg !2655
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @iv_extend(%struct.rtx_iv* %iv, i32 %extend, i32 %mode) unnamed_addr #4 !dbg !2656 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !2660, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.value(metadata i32 %extend, metadata !2661, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2662, metadata !DIExpression()), !dbg !2666
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 1, !dbg !2667
  %0 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !2667
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !2668
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !2669
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2670

land.lhs.true:                                    ; preds = %entry
  %first_special = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 7, !dbg !2671
  %bf.load = load i8, i8* %first_special, align 8, !dbg !2671
  %bf.clear = and i8 %bf.load, 1, !dbg !2671
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !2672
  br i1 %tobool, label %if.then, label %if.end, !dbg !2673

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @get_iv_value(%struct.rtx_iv* %iv, %struct.rtx_def* %0) #7, !dbg !2674
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2663, metadata !DIExpression()), !dbg !2675
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !2676
  %2 = load i32, i32* %extend_mode, align 8, !dbg !2676
  %call1 = tail call %struct.rtx_def* @simplify_gen_unary(i32 %extend, i32 %mode, %struct.rtx_def* %call, i32 %2) #6, !dbg !2677
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !2663, metadata !DIExpression()), !dbg !2675
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !2678
  store %struct.rtx_def* %call1, %struct.rtx_def** %base, align 8, !dbg !2679
  %extend2 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 2, !dbg !2680
  store i32 0, i32* %extend2, align 8, !dbg !2681
  store i32 %mode, i32* %extend_mode, align 8, !dbg !2682
  %mode4 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 6, !dbg !2683
  store i32 %mode, i32* %mode4, align 4, !dbg !2684
  %3 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !2685
  %delta = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 3, !dbg !2686
  %4 = bitcast %struct.rtx_def** %delta to i64*, !dbg !2687
  store i64 %3, i64* %4, align 8, !dbg !2687
  %5 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65) to i64*), align 8, !dbg !2688
  %mult = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 4, !dbg !2689
  %6 = bitcast %struct.rtx_def** %mult to i64*, !dbg !2690
  store i64 %5, i64* %6, align 8, !dbg !2690
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %extend_mode5 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !2691
  %7 = load i32, i32* %extend_mode5, align 8, !dbg !2691
  %cmp6 = icmp eq i32 %7, %mode, !dbg !2693
  br i1 %cmp6, label %if.end8, label %return, !dbg !2694

if.end8:                                          ; preds = %if.end
  %extend9 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 2, !dbg !2695
  %8 = load i32, i32* %extend9, align 8, !dbg !2695
  %cmp10 = icmp eq i32 %8, 0, !dbg !2697
  br i1 %cmp10, label %if.end15, label %land.lhs.true11, !dbg !2698

land.lhs.true11:                                  ; preds = %if.end8
  %cmp13 = icmp eq i32 %8, %extend, !dbg !2699
  br i1 %cmp13, label %if.end15, label %return, !dbg !2700

if.end15:                                         ; preds = %land.lhs.true11, %if.end8
  store i32 %extend, i32* %extend9, align 8, !dbg !2701
  br label %return, !dbg !2702

return:                                           ; preds = %land.lhs.true11, %if.end, %if.end15, %if.then
  %retval.0 = phi i8 [ 1, %if.end15 ], [ 1, %if.then ], [ 0, %if.end ], [ 0, %land.lhs.true11 ], !dbg !2666
  ret i8 %retval.0, !dbg !2703
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @iv_neg(%struct.rtx_iv* %iv) unnamed_addr #4 !dbg !2704 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !2708, metadata !DIExpression()), !dbg !2709
  %extend = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 2, !dbg !2710
  %0 = load i32, i32* %extend, align 8, !dbg !2710
  %cmp = icmp eq i32 %0, 0, !dbg !2712
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !2713
  %1 = load i32, i32* %extend_mode, align 8, !dbg !2713
  br i1 %cmp, label %if.then, label %if.else, !dbg !2714

if.then:                                          ; preds = %entry
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !2715
  %2 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !2715
  %call = tail call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %1, %struct.rtx_def* %2, i32 %1) #6, !dbg !2717
  store %struct.rtx_def* %call, %struct.rtx_def** %base, align 8, !dbg !2718
  %3 = load i32, i32* %extend_mode, align 8, !dbg !2719
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 1, !dbg !2720
  %4 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !2720
  %call5 = tail call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %3, %struct.rtx_def* %4, i32 %3) #6, !dbg !2721
  store %struct.rtx_def* %call5, %struct.rtx_def** %step, align 8, !dbg !2722
  br label %if.end, !dbg !2723

if.else:                                          ; preds = %entry
  %delta = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 3, !dbg !2724
  %5 = load %struct.rtx_def*, %struct.rtx_def** %delta, align 8, !dbg !2724
  %call9 = tail call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %1, %struct.rtx_def* %5, i32 %1) #6, !dbg !2726
  store %struct.rtx_def* %call9, %struct.rtx_def** %delta, align 8, !dbg !2727
  %6 = load i32, i32* %extend_mode, align 8, !dbg !2728
  %mult = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 4, !dbg !2729
  %7 = load %struct.rtx_def*, %struct.rtx_def** %mult, align 8, !dbg !2729
  %call13 = tail call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %6, %struct.rtx_def* %7, i32 %6) #6, !dbg !2730
  store %struct.rtx_def* %call13, %struct.rtx_def** %mult, align 8, !dbg !2731
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i8 undef, !dbg !2732
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @iv_add(%struct.rtx_iv* %iv0, %struct.rtx_iv* %iv1, i32 %op) unnamed_addr #4 !dbg !2733 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv0, metadata !2737, metadata !DIExpression()), !dbg !2742
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv1, metadata !2738, metadata !DIExpression()), !dbg !2742
  call void @llvm.dbg.value(metadata i32 %op, metadata !2739, metadata !DIExpression()), !dbg !2742
  %extend = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 2, !dbg !2743
  %0 = load i32, i32* %extend, align 8, !dbg !2743
  %cmp = icmp eq i32 %0, 0, !dbg !2745
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2746

land.lhs.true:                                    ; preds = %entry
  %mode1 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 6, !dbg !2747
  %1 = load i32, i32* %mode1, align 4, !dbg !2747
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 5, !dbg !2748
  %2 = load i32, i32* %extend_mode, align 8, !dbg !2748
  %cmp2 = icmp eq i32 %1, %2, !dbg !2749
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !2750

land.lhs.true3:                                   ; preds = %land.lhs.true
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 1, !dbg !2751
  %3 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !2751
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !2752
  %cmp4 = icmp eq %struct.rtx_def* %3, %4, !dbg !2753
  br i1 %cmp4, label %land.lhs.true5, label %if.end, !dbg !2754

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %idxprom = zext i32 %1 to i64, !dbg !2755
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !2755
  %5 = load i8, i8* %arrayidx, align 1, !dbg !2755
  %extend_mode8 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 5, !dbg !2756
  %6 = load i32, i32* %extend_mode8, align 8, !dbg !2756
  %idxprom9 = zext i32 %6 to i64, !dbg !2756
  %arrayidx10 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom9, !dbg !2756
  %7 = load i8, i8* %arrayidx10, align 1, !dbg !2756
  %cmp13 = icmp ult i8 %5, %7, !dbg !2757
  br i1 %cmp13, label %if.then, label %if.end, !dbg !2758

if.then:                                          ; preds = %land.lhs.true5
  store i32 %6, i32* %extend_mode, align 8, !dbg !2759
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 0, !dbg !2761
  %8 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !2761
  %call = tail call %struct.rtx_def* @simplify_gen_unary(i32 99, i32 %6, %struct.rtx_def* %8, i32 %1) #6, !dbg !2762
  store %struct.rtx_def* %call, %struct.rtx_def** %base, align 8, !dbg !2763
  br label %if.end, !dbg !2764

if.end:                                           ; preds = %if.then, %land.lhs.true5, %land.lhs.true3, %land.lhs.true, %entry
  %extend20 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 2, !dbg !2765
  %9 = load i32, i32* %extend20, align 8, !dbg !2765
  %cmp21 = icmp eq i32 %9, 0, !dbg !2767
  br i1 %cmp21, label %land.lhs.true23, label %if.end53, !dbg !2768

land.lhs.true23:                                  ; preds = %if.end
  %mode24 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 6, !dbg !2769
  %10 = load i32, i32* %mode24, align 4, !dbg !2769
  %extend_mode25 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 5, !dbg !2770
  %11 = load i32, i32* %extend_mode25, align 8, !dbg !2770
  %cmp26 = icmp eq i32 %10, %11, !dbg !2771
  br i1 %cmp26, label %land.lhs.true28, label %if.end53, !dbg !2772

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %step29 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 1, !dbg !2773
  %12 = load %struct.rtx_def*, %struct.rtx_def** %step29, align 8, !dbg !2773
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !2774
  %cmp30 = icmp eq %struct.rtx_def* %12, %13, !dbg !2775
  br i1 %cmp30, label %land.lhs.true32, label %if.end53, !dbg !2776

land.lhs.true32:                                  ; preds = %land.lhs.true28
  %idxprom34 = zext i32 %10 to i64, !dbg !2777
  %arrayidx35 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom34, !dbg !2777
  %14 = load i8, i8* %arrayidx35, align 1, !dbg !2777
  %extend_mode38 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 5, !dbg !2778
  %15 = load i32, i32* %extend_mode38, align 8, !dbg !2778
  %idxprom39 = zext i32 %15 to i64, !dbg !2778
  %arrayidx40 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom39, !dbg !2778
  %16 = load i8, i8* %arrayidx40, align 1, !dbg !2778
  %cmp43 = icmp ult i8 %14, %16, !dbg !2779
  br i1 %cmp43, label %if.then45, label %if.end53, !dbg !2780

if.then45:                                        ; preds = %land.lhs.true32
  store i32 %15, i32* %extend_mode25, align 8, !dbg !2781
  %base49 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 0, !dbg !2783
  %17 = load %struct.rtx_def*, %struct.rtx_def** %base49, align 8, !dbg !2783
  %call51 = tail call %struct.rtx_def* @simplify_gen_unary(i32 99, i32 %15, %struct.rtx_def* %17, i32 %10) #6, !dbg !2784
  store %struct.rtx_def* %call51, %struct.rtx_def** %base49, align 8, !dbg !2785
  br label %if.end53, !dbg !2786

if.end53:                                         ; preds = %if.then45, %land.lhs.true32, %land.lhs.true28, %land.lhs.true23, %if.end
  %extend_mode54 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 5, !dbg !2787
  %18 = load i32, i32* %extend_mode54, align 8, !dbg !2787
  call void @llvm.dbg.value(metadata i32 %18, metadata !2740, metadata !DIExpression()), !dbg !2742
  %extend_mode55 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 5, !dbg !2788
  %19 = load i32, i32* %extend_mode55, align 8, !dbg !2788
  %cmp56 = icmp eq i32 %18, %19, !dbg !2790
  br i1 %cmp56, label %if.end59, label %cleanup, !dbg !2791

if.end59:                                         ; preds = %if.end53
  %20 = load i32, i32* %extend, align 8, !dbg !2792
  %cmp61 = icmp eq i32 %20, 0, !dbg !2794
  br i1 %cmp61, label %land.lhs.true63, label %if.end59.if.end82_crit_edge, !dbg !2795

if.end59.if.end82_crit_edge:                      ; preds = %if.end59
  %.pre = load i32, i32* %extend20, align 8, !dbg !2796
  br label %if.end82, !dbg !2795

land.lhs.true63:                                  ; preds = %if.end59
  %21 = load i32, i32* %extend20, align 8, !dbg !2798
  %cmp65 = icmp eq i32 %21, 0, !dbg !2799
  br i1 %cmp65, label %if.then67, label %if.end82, !dbg !2800

if.then67:                                        ; preds = %land.lhs.true63
  %mode68 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 6, !dbg !2801
  %22 = load i32, i32* %mode68, align 4, !dbg !2801
  %mode69 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 6, !dbg !2804
  %23 = load i32, i32* %mode69, align 4, !dbg !2804
  %cmp70 = icmp eq i32 %22, %23, !dbg !2805
  br i1 %cmp70, label %if.end73, label %cleanup, !dbg !2806

if.end73:                                         ; preds = %if.then67
  %base74 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 0, !dbg !2807
  %24 = load %struct.rtx_def*, %struct.rtx_def** %base74, align 8, !dbg !2807
  %base75 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 0, !dbg !2808
  %25 = load %struct.rtx_def*, %struct.rtx_def** %base75, align 8, !dbg !2808
  %call76 = tail call %struct.rtx_def* @simplify_gen_binary(i32 %op, i32 %18, %struct.rtx_def* %24, %struct.rtx_def* %25) #6, !dbg !2809
  store %struct.rtx_def* %call76, %struct.rtx_def** %base74, align 8, !dbg !2810
  %step78 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 1, !dbg !2811
  %26 = load %struct.rtx_def*, %struct.rtx_def** %step78, align 8, !dbg !2811
  %step79 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 1, !dbg !2812
  %27 = load %struct.rtx_def*, %struct.rtx_def** %step79, align 8, !dbg !2812
  %call80 = tail call %struct.rtx_def* @simplify_gen_binary(i32 %op, i32 %18, %struct.rtx_def* %26, %struct.rtx_def* %27) #6, !dbg !2813
  store %struct.rtx_def* %call80, %struct.rtx_def** %step78, align 8, !dbg !2814
  br label %cleanup, !dbg !2815

if.end82:                                         ; preds = %if.end59.if.end82_crit_edge, %land.lhs.true63
  %28 = phi i32 [ %.pre, %if.end59.if.end82_crit_edge ], [ %21, %land.lhs.true63 ], !dbg !2796
  %cmp84 = icmp eq i32 %28, 0, !dbg !2816
  br i1 %cmp84, label %land.lhs.true86, label %if.end98, !dbg !2817

land.lhs.true86:                                  ; preds = %if.end82
  %mode87 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 6, !dbg !2818
  %29 = load i32, i32* %mode87, align 4, !dbg !2818
  %cmp88 = icmp eq i32 %29, %18, !dbg !2819
  br i1 %cmp88, label %land.lhs.true90, label %if.end98, !dbg !2820

land.lhs.true90:                                  ; preds = %land.lhs.true86
  %step91 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 1, !dbg !2821
  %30 = load %struct.rtx_def*, %struct.rtx_def** %step91, align 8, !dbg !2821
  %31 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !2822
  %cmp92 = icmp eq %struct.rtx_def* %30, %31, !dbg !2823
  br i1 %cmp92, label %if.then94, label %if.end98, !dbg !2824

if.then94:                                        ; preds = %land.lhs.true90
  %delta = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 3, !dbg !2825
  %32 = load %struct.rtx_def*, %struct.rtx_def** %delta, align 8, !dbg !2825
  %base95 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 0, !dbg !2827
  %33 = load %struct.rtx_def*, %struct.rtx_def** %base95, align 8, !dbg !2827
  %call96 = tail call %struct.rtx_def* @simplify_gen_binary(i32 %op, i32 %18, %struct.rtx_def* %32, %struct.rtx_def* %33) #6, !dbg !2828
  store %struct.rtx_def* %call96, %struct.rtx_def** %delta, align 8, !dbg !2829
  br label %cleanup, !dbg !2830

if.end98:                                         ; preds = %land.lhs.true90, %land.lhs.true86, %if.end82
  br i1 %cmp61, label %land.lhs.true102, label %cleanup, !dbg !2831

land.lhs.true102:                                 ; preds = %if.end98
  %mode103 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 6, !dbg !2833
  %34 = load i32, i32* %mode103, align 4, !dbg !2833
  %cmp104 = icmp eq i32 %34, %18, !dbg !2834
  br i1 %cmp104, label %land.lhs.true106, label %cleanup, !dbg !2835

land.lhs.true106:                                 ; preds = %land.lhs.true102
  %step107 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 1, !dbg !2836
  %35 = load %struct.rtx_def*, %struct.rtx_def** %step107, align 8, !dbg !2836
  %36 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !2837
  %cmp108 = icmp eq %struct.rtx_def* %35, %36, !dbg !2838
  br i1 %cmp108, label %if.then110, label %cleanup, !dbg !2839

if.then110:                                       ; preds = %land.lhs.true106
  %base111 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 0, !dbg !2840
  %37 = load %struct.rtx_def*, %struct.rtx_def** %base111, align 8, !dbg !2840
  call void @llvm.dbg.value(metadata %struct.rtx_def* %37, metadata !2741, metadata !DIExpression()), !dbg !2742
  %38 = bitcast %struct.rtx_iv* %iv0 to i8*, !dbg !2842
  %39 = bitcast %struct.rtx_iv* %iv1 to i8*, !dbg !2842
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 56, i1 false), !dbg !2842
  %cmp112 = icmp eq i32 %op, 50, !dbg !2843
  br i1 %cmp112, label %land.lhs.true114, label %if.end117, !dbg !2845

land.lhs.true114:                                 ; preds = %if.then110
  %call115 = tail call fastcc zeroext i8 @iv_neg(%struct.rtx_iv* %iv0) #7, !dbg !2846
  br i1 false, label %land.lhs.true114.cleanup_crit_edge, label %if.end117, !dbg !2847

land.lhs.true114.cleanup_crit_edge:               ; preds = %land.lhs.true114
  br label %cleanup, !dbg !2847

if.end117:                                        ; preds = %land.lhs.true114, %if.then110
  %delta118 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 3, !dbg !2848
  %40 = load %struct.rtx_def*, %struct.rtx_def** %delta118, align 8, !dbg !2848
  %call119 = tail call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %18, %struct.rtx_def* %40, %struct.rtx_def* %37) #6, !dbg !2849
  store %struct.rtx_def* %call119, %struct.rtx_def** %delta118, align 8, !dbg !2850
  br label %cleanup, !dbg !2851

cleanup:                                          ; preds = %land.lhs.true114.cleanup_crit_edge, %if.then67, %if.end53, %if.end98, %land.lhs.true102, %land.lhs.true106, %if.end117, %if.then94, %if.end73
  %retval.0 = phi i8 [ 1, %if.end73 ], [ 1, %if.then94 ], [ 1, %if.end117 ], [ 0, %if.end53 ], [ 0, %if.then67 ], [ undef, %land.lhs.true114.cleanup_crit_edge ], [ 0, %land.lhs.true106 ], [ 0, %land.lhs.true102 ], [ 0, %if.end98 ], !dbg !2742
  ret i8 %retval.0, !dbg !2852
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @iv_mult(%struct.rtx_iv* %iv, %struct.rtx_def* %mby) unnamed_addr #4 !dbg !2853 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !2857, metadata !DIExpression()), !dbg !2860
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mby, metadata !2858, metadata !DIExpression()), !dbg !2860
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !2861
  %0 = load i32, i32* %extend_mode, align 8, !dbg !2861
  call void @llvm.dbg.value(metadata i32 %0, metadata !2859, metadata !DIExpression()), !dbg !2860
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mby, i64 0, i32 0, !dbg !2862
  %bf.load = load i32, i32* %1, align 8, !dbg !2862
  %bf.clear = and i32 %bf.load, 16711680, !dbg !2862
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !2864
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !2865

land.lhs.true:                                    ; preds = %entry
  %bf.lshr2 = lshr i32 %bf.load, 16, !dbg !2866
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !2866
  %cmp4 = icmp eq i32 %bf.clear3, %0, !dbg !2867
  br i1 %cmp4, label %if.end, label %cleanup, !dbg !2868

if.end:                                           ; preds = %land.lhs.true, %entry
  %extend = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 2, !dbg !2869
  %2 = load i32, i32* %extend, align 8, !dbg !2869
  %cmp5 = icmp eq i32 %2, 0, !dbg !2871
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !2872

if.then6:                                         ; preds = %if.end
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !2873
  %3 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !2873
  %call = tail call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %0, %struct.rtx_def* %3, %struct.rtx_def* %mby) #6, !dbg !2875
  store %struct.rtx_def* %call, %struct.rtx_def** %base, align 8, !dbg !2876
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 1, !dbg !2877
  %4 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !2877
  %call8 = tail call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %0, %struct.rtx_def* %4, %struct.rtx_def* %mby) #6, !dbg !2878
  store %struct.rtx_def* %call8, %struct.rtx_def** %step, align 8, !dbg !2879
  br label %cleanup, !dbg !2880

if.else:                                          ; preds = %if.end
  %delta = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 3, !dbg !2881
  %5 = load %struct.rtx_def*, %struct.rtx_def** %delta, align 8, !dbg !2881
  %call10 = tail call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %0, %struct.rtx_def* %5, %struct.rtx_def* %mby) #6, !dbg !2883
  store %struct.rtx_def* %call10, %struct.rtx_def** %delta, align 8, !dbg !2884
  %mult = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 4, !dbg !2885
  %6 = load %struct.rtx_def*, %struct.rtx_def** %mult, align 8, !dbg !2885
  %call12 = tail call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %0, %struct.rtx_def* %6, %struct.rtx_def* %mby) #6, !dbg !2886
  store %struct.rtx_def* %call12, %struct.rtx_def** %mult, align 8, !dbg !2887
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true, %if.then6, %if.else
  %retval.0 = phi i8 [ 0, %land.lhs.true ], [ 1, %if.else ], [ 1, %if.then6 ], !dbg !2860
  ret i8 %retval.0, !dbg !2888
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @iv_shift(%struct.rtx_iv* %iv, %struct.rtx_def* %mby) unnamed_addr #4 !dbg !2889 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !2891, metadata !DIExpression()), !dbg !2894
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mby, metadata !2892, metadata !DIExpression()), !dbg !2894
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !2895
  %0 = load i32, i32* %extend_mode, align 8, !dbg !2895
  call void @llvm.dbg.value(metadata i32 %0, metadata !2893, metadata !DIExpression()), !dbg !2894
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mby, i64 0, i32 0, !dbg !2896
  %bf.load = load i32, i32* %1, align 8, !dbg !2896
  %bf.clear = and i32 %bf.load, 16711680, !dbg !2896
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !2898
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !2899

land.lhs.true:                                    ; preds = %entry
  %bf.lshr2 = lshr i32 %bf.load, 16, !dbg !2900
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !2900
  %cmp4 = icmp eq i32 %bf.clear3, %0, !dbg !2901
  br i1 %cmp4, label %if.end, label %cleanup, !dbg !2902

if.end:                                           ; preds = %land.lhs.true, %entry
  %extend = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 2, !dbg !2903
  %2 = load i32, i32* %extend, align 8, !dbg !2903
  %cmp5 = icmp eq i32 %2, 0, !dbg !2905
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !2906

if.then6:                                         ; preds = %if.end
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !2907
  %3 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !2907
  %call = tail call %struct.rtx_def* @simplify_gen_binary(i32 65, i32 %0, %struct.rtx_def* %3, %struct.rtx_def* %mby) #6, !dbg !2909
  store %struct.rtx_def* %call, %struct.rtx_def** %base, align 8, !dbg !2910
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 1, !dbg !2911
  %4 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !2911
  %call8 = tail call %struct.rtx_def* @simplify_gen_binary(i32 65, i32 %0, %struct.rtx_def* %4, %struct.rtx_def* %mby) #6, !dbg !2912
  store %struct.rtx_def* %call8, %struct.rtx_def** %step, align 8, !dbg !2913
  br label %cleanup, !dbg !2914

if.else:                                          ; preds = %if.end
  %delta = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 3, !dbg !2915
  %5 = load %struct.rtx_def*, %struct.rtx_def** %delta, align 8, !dbg !2915
  %call10 = tail call %struct.rtx_def* @simplify_gen_binary(i32 65, i32 %0, %struct.rtx_def* %5, %struct.rtx_def* %mby) #6, !dbg !2917
  store %struct.rtx_def* %call10, %struct.rtx_def** %delta, align 8, !dbg !2918
  %mult = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 4, !dbg !2919
  %6 = load %struct.rtx_def*, %struct.rtx_def** %mult, align 8, !dbg !2919
  %call12 = tail call %struct.rtx_def* @simplify_gen_binary(i32 65, i32 %0, %struct.rtx_def* %6, %struct.rtx_def* %mby) #6, !dbg !2920
  store %struct.rtx_def* %call12, %struct.rtx_def** %mult, align 8, !dbg !2921
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true, %if.then6, %if.else
  %retval.0 = phi i8 [ 0, %land.lhs.true ], [ 1, %if.else ], [ 1, %if.then6 ], !dbg !2894
  ret i8 %retval.0, !dbg !2922
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @iv_analyze(%struct.rtx_def* %insn, %struct.rtx_def* %val, %struct.rtx_iv* %iv) local_unnamed_addr #4 !dbg !2923 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2925, metadata !DIExpression()), !dbg !2929
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val, metadata !2926, metadata !DIExpression()), !dbg !2929
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !2927, metadata !DIExpression()), !dbg !2929
  %call = tail call fastcc zeroext i8 @simple_reg_p(%struct.rtx_def* %val) #7, !dbg !2930
  %tobool = icmp eq i8 %call, 0, !dbg !2930
  br i1 %tobool, label %if.end8, label %if.then, !dbg !2932

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %val, i64 0, i32 0, !dbg !2933
  %bf.load = load i32, i32* %0, align 8, !dbg !2933
  %bf.clear = and i32 %bf.load, 65535, !dbg !2933
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !2936
  br i1 %cmp, label %if.then1, label %if.end, !dbg !2937

if.then1:                                         ; preds = %if.then
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %val, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2938
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2938
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2938
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !2928, metadata !DIExpression()), !dbg !2929
  br label %if.end, !dbg !2939

if.end:                                           ; preds = %if.then, %if.then1
  %reg.0 = phi %struct.rtx_def* [ %1, %if.then1 ], [ %val, %if.then ], !dbg !2940
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0, metadata !2928, metadata !DIExpression()), !dbg !2929
  br label %while.cond, !dbg !2941

while.cond:                                       ; preds = %while.body, %if.end
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %if.end ], [ %3, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !2925, metadata !DIExpression()), !dbg !2929
  %call2 = tail call %union.df_ref_d* @df_find_use(%struct.rtx_def* %insn.addr.0, %struct.rtx_def* %reg.0) #6, !dbg !2942
  %tobool3 = icmp eq %union.df_ref_d* %call2, null, !dbg !2943
  br i1 %tobool3, label %while.body, label %if.end8.loopexit, !dbg !2941

while.body:                                       ; preds = %while.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2944
  %rt_rtx7 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !2944
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !2944
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !2925, metadata !DIExpression()), !dbg !2929
  br label %while.cond, !dbg !2941, !llvm.loop !2945

if.end8.loopexit:                                 ; preds = %while.cond
  %insn.addr.0.lcssa = phi %struct.rtx_def* [ %insn.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0.lcssa, metadata !2925, metadata !DIExpression()), !dbg !2929
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0.lcssa, metadata !2925, metadata !DIExpression()), !dbg !2929
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0.lcssa, metadata !2925, metadata !DIExpression()), !dbg !2929
  br label %if.end8, !dbg !2946

if.end8:                                          ; preds = %if.end8.loopexit, %entry
  %insn.addr.1 = phi %struct.rtx_def* [ %insn, %entry ], [ %insn.addr.0.lcssa, %if.end8.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !2925, metadata !DIExpression()), !dbg !2929
  %call9 = tail call fastcc zeroext i8 @iv_analyze_op(%struct.rtx_def* %insn.addr.1, %struct.rtx_def* %val, %struct.rtx_iv* %iv) #7, !dbg !2946
  ret i8 %call9, !dbg !2947
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @simple_reg_p(%struct.rtx_def* %reg) unnamed_addr #4 !dbg !2948 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !2952, metadata !DIExpression()), !dbg !2954
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !2955
  %bf.load = load i32, i32* %0, align 8, !dbg !2955
  %bf.clear = and i32 %bf.load, 65535, !dbg !2955
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !2957
  br i1 %cmp, label %if.then, label %if.end2, !dbg !2958

if.then:                                          ; preds = %entry
  %call = tail call i32 @subreg_lowpart_p(%struct.rtx_def* %reg) #6, !dbg !2959
  %tobool = icmp eq i32 %call, 0, !dbg !2959
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2962

if.end:                                           ; preds = %if.then
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2963
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2963
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2963
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !2952, metadata !DIExpression()), !dbg !2954
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !2964
  %bf.load3.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !2966
  br label %if.end2, !dbg !2967

if.end2:                                          ; preds = %if.end, %entry
  %bf.load3 = phi i32 [ %bf.load3.pre, %if.end ], [ %bf.load, %entry ], !dbg !2966
  %reg.addr.0 = phi %struct.rtx_def* [ %1, %if.end ], [ %reg, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.addr.0, metadata !2952, metadata !DIExpression()), !dbg !2954
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg.addr.0, i64 0, i32 0, !dbg !2966
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !2966
  %cmp5 = icmp eq i32 %bf.clear4, 37, !dbg !2966
  br i1 %cmp5, label %if.end7, label %cleanup, !dbg !2968

if.end7:                                          ; preds = %if.end2
  %call8 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg.addr.0) #7, !dbg !2969
  call void @llvm.dbg.value(metadata i32 %call8, metadata !2953, metadata !DIExpression()), !dbg !2954
  %cmp9 = icmp ult i32 %call8, 53, !dbg !2970
  br i1 %cmp9, label %cleanup, label %if.end11, !dbg !2972

if.end11:                                         ; preds = %if.end7
  %bf.load12 = load i32, i32* %2, align 8, !dbg !2973
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !2973
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !2973
  %idxprom = zext i32 %bf.clear13 to i64, !dbg !2973
  %arrayidx14 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !2973
  %3 = load i8, i8* %arrayidx14, align 1, !dbg !2973
  %cmp15 = icmp eq i8 %3, 2, !dbg !2975
  %. = zext i1 %cmp15 to i8, !dbg !2954
  br label %cleanup, !dbg !2954

cleanup:                                          ; preds = %if.then, %if.end11, %if.end7, %if.end2
  %retval.0 = phi i8 [ 0, %if.then ], [ 0, %if.end2 ], [ 0, %if.end7 ], [ %., %if.end11 ], !dbg !2954
  ret i8 %retval.0, !dbg !2976
}

declare dso_local %union.df_ref_d* @df_find_use(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @iv_analyze_result(%struct.rtx_def* %insn, %struct.rtx_def* %def, %struct.rtx_iv* %iv) local_unnamed_addr #4 !dbg !2977 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2979, metadata !DIExpression()), !dbg !2983
  call void @llvm.dbg.value(metadata %struct.rtx_def* %def, metadata !2980, metadata !DIExpression()), !dbg !2983
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !2981, metadata !DIExpression()), !dbg !2983
  %call = tail call %union.df_ref_d* @df_find_def(%struct.rtx_def* %insn, %struct.rtx_def* %def) #6, !dbg !2984
  call void @llvm.dbg.value(metadata %union.df_ref_d* %call, metadata !2982, metadata !DIExpression()), !dbg !2983
  %tobool = icmp eq %union.df_ref_d* %call, null, !dbg !2985
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2987

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @iv_analyze_def(%union.df_ref_d* nonnull %call, %struct.rtx_iv* %iv) #7, !dbg !2988
  br label %cleanup, !dbg !2989

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i8 [ %call1, %if.end ], [ 0, %entry ], !dbg !2983
  ret i8 %retval.0, !dbg !2990
}

declare dso_local %union.df_ref_d* @df_find_def(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @iv_analyze_def(%union.df_ref_d* %def, %struct.rtx_iv* %iv) unnamed_addr #4 !dbg !2991 {
entry:
  call void @llvm.dbg.value(metadata %union.df_ref_d* %def, metadata !2995, metadata !DIExpression()), !dbg !3001
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !2996, metadata !DIExpression()), !dbg !3001
  %insn_info = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !3002
  %0 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !3002
  %insn1 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %0, i64 0, i32 0, !dbg !3002
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !3002
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !2997, metadata !DIExpression()), !dbg !3001
  %reg3 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !3003
  %2 = load %struct.rtx_def*, %struct.rtx_def** %reg3, align 8, !dbg !3003
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !2998, metadata !DIExpression()), !dbg !3001
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3004
  %tobool = icmp eq %struct._IO_FILE* %3, null, !dbg !3004
  br i1 %tobool, label %if.end, label %if.then, !dbg !3006

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !3007
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3009
  tail call void @print_rtl(%struct._IO_FILE* %4, %struct.rtx_def* %2) #6, !dbg !3010
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3011
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !3012
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3013
  %call5 = tail call i32 @print_rtl_single(%struct._IO_FILE* %6, %struct.rtx_def* %1) #6, !dbg !3014
  br label %if.end, !dbg !3015

if.end:                                           ; preds = %entry, %if.then
  tail call fastcc void @check_iv_ref_table_size() #7, !dbg !3016
  %7 = load %struct.rtx_iv**, %struct.rtx_iv*** @iv_ref_table, align 8, !dbg !3017
  %id = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def, i64 0, i32 0, i32 0, i32 0, i32 7, !dbg !3017
  %8 = load i32, i32* %id, align 4, !dbg !3017
  %idxprom = sext i32 %8 to i64, !dbg !3017
  %arrayidx = getelementptr inbounds %struct.rtx_iv*, %struct.rtx_iv** %7, i64 %idxprom, !dbg !3017
  %9 = load %struct.rtx_iv*, %struct.rtx_iv** %arrayidx, align 8, !dbg !3017
  %tobool7 = icmp eq %struct.rtx_iv* %9, null, !dbg !3017
  br i1 %tobool7, label %if.end19, label %if.then8, !dbg !3019

if.then8:                                         ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3020
  %tobool9 = icmp eq %struct._IO_FILE* %10, null, !dbg !3020
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !3023

if.then10:                                        ; preds = %if.then8
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !3024
  %.pre = load %struct.rtx_iv**, %struct.rtx_iv*** @iv_ref_table, align 8, !dbg !3025
  %.pre1 = load i32, i32* %id, align 4, !dbg !3025
  %.pre2 = sext i32 %.pre1 to i64, !dbg !3025
  br label %if.end12, !dbg !3024

if.end12:                                         ; preds = %if.then8, %if.then10
  %idxprom15.pre-phi = phi i64 [ %idxprom, %if.then8 ], [ %.pre2, %if.then10 ], !dbg !3025
  %11 = phi %struct.rtx_iv** [ %7, %if.then8 ], [ %.pre, %if.then10 ], !dbg !3025
  %arrayidx16 = getelementptr inbounds %struct.rtx_iv*, %struct.rtx_iv** %11, i64 %idxprom15.pre-phi, !dbg !3025
  %12 = bitcast %struct.rtx_iv** %arrayidx16 to i8**, !dbg !3025
  %13 = load i8*, i8** %12, align 8, !dbg !3025
  %14 = bitcast %struct.rtx_iv* %iv to i8*, !dbg !3026
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %13, i64 56, i1 false), !dbg !3026
  %base17 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !3027
  %15 = load %struct.rtx_def*, %struct.rtx_def** %base17, align 8, !dbg !3027
  %cmp = icmp ne %struct.rtx_def* %15, null, !dbg !3028
  br label %cleanup, !dbg !3029

if.end19:                                         ; preds = %if.end
  %mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 6, !dbg !3030
  store i32 0, i32* %mode, align 4, !dbg !3031
  %base20 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !3032
  store %struct.rtx_def* null, %struct.rtx_def** %base20, align 8, !dbg !3033
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 1, !dbg !3034
  store %struct.rtx_def* null, %struct.rtx_def** %step, align 8, !dbg !3035
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !3036
  %bf.load = load i32, i32* %16, align 8, !dbg !3036
  %bf.clear = and i32 %bf.load, 65535, !dbg !3036
  %cmp21 = icmp eq i32 %bf.clear, 37, !dbg !3036
  br i1 %cmp21, label %if.end24, label %cleanup, !dbg !3038

if.end24:                                         ; preds = %if.end19
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3039
  %bf.load25 = load i32, i32* %17, align 8, !dbg !3039
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !3039
  %cmp27 = icmp eq i32 %bf.clear26, 8, !dbg !3039
  br i1 %cmp27, label %cond.true, label %lor.lhs.false, !dbg !3039

lor.lhs.false:                                    ; preds = %if.end24
  %cmp31 = icmp eq i32 %bf.clear26, 7, !dbg !3039
  br i1 %cmp31, label %cond.true, label %lor.lhs.false33, !dbg !3039

lor.lhs.false33:                                  ; preds = %lor.lhs.false
  %cmp36 = icmp eq i32 %bf.clear26, 9, !dbg !3039
  br i1 %cmp36, label %cond.true, label %lor.lhs.false38, !dbg !3039

lor.lhs.false38:                                  ; preds = %lor.lhs.false33
  %cmp41 = icmp eq i32 %bf.clear26, 10, !dbg !3039
  br i1 %cmp41, label %cond.true, label %cond.end59, !dbg !3039

cond.true:                                        ; preds = %lor.lhs.false38, %lor.lhs.false33, %lor.lhs.false, %if.end24
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !3039
  %18 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3039
  %19 = bitcast %union.rtunion_def* %18 to i32**, !dbg !3039
  %20 = load i32*, i32** %19, align 8, !dbg !3039
  %bf.load44 = load i32, i32* %20, align 8, !dbg !3039
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !3039
  %cmp46 = icmp eq i32 %bf.clear45, 23, !dbg !3039
  %21 = bitcast i32* %20 to %struct.rtx_def*, !dbg !3039
  br i1 %cmp46, label %cond.end59, label %cond.false, !dbg !3039

cond.false:                                       ; preds = %cond.true
  %call57 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %1, %struct.rtx_def* %21) #6, !dbg !3039
  br label %cond.end59, !dbg !3039

cond.end59:                                       ; preds = %lor.lhs.false38, %cond.false, %cond.true
  %cond60 = phi %struct.rtx_def* [ %call57, %cond.false ], [ %21, %cond.true ], [ null, %lor.lhs.false38 ], !dbg !3039
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond60, metadata !2999, metadata !DIExpression()), !dbg !3001
  %tobool61 = icmp eq %struct.rtx_def* %cond60, null, !dbg !3040
  br i1 %tobool61, label %cleanup, label %if.end63, !dbg !3042

if.end63:                                         ; preds = %cond.end59
  %arrayidx66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond60, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3043
  %22 = bitcast %union.rtunion_def* %arrayidx66 to i32**, !dbg !3043
  %23 = load i32*, i32** %22, align 8, !dbg !3043
  %bf.load68 = load i32, i32* %23, align 8, !dbg !3043
  %bf.clear69 = and i32 %bf.load68, 65535, !dbg !3043
  %cmp70 = icmp eq i32 %bf.clear69, 37, !dbg !3043
  br i1 %cmp70, label %if.end73, label %cleanup, !dbg !3045

if.end73:                                         ; preds = %if.end63
  %24 = bitcast i32* %23 to %struct.rtx_def*, !dbg !3045
  %cmp78 = icmp eq %struct.rtx_def* %2, %24, !dbg !3046
  br i1 %cmp78, label %cond.end82, label %cond.true80, !dbg !3046

cond.true80:                                      ; preds = %if.end73
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1084, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3046
  br label %cond.end82, !dbg !3046

cond.end82:                                       ; preds = %if.end73, %cond.true80
  %call84 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %1) #6, !dbg !3047
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call84, metadata !3000, metadata !DIExpression()), !dbg !3001
  %tobool85 = icmp eq %struct.rtx_def* %call84, null, !dbg !3048
  br i1 %tobool85, label %if.else, label %if.then86, !dbg !3050

if.then86:                                        ; preds = %cond.end82
  %arrayidx89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call84, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3051
  br label %if.end95, !dbg !3052

if.else:                                          ; preds = %cond.end82
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond60, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3053
  br label %if.end95

if.end95:                                         ; preds = %if.else, %if.then86
  %rhs.0.in.in = phi %union.rtunion_def* [ %arrayidx89, %if.then86 ], [ %25, %if.else ]
  %rhs.0.in = bitcast %union.rtunion_def* %rhs.0.in.in to %struct.rtx_def**, !dbg !3054
  %rhs.0 = load %struct.rtx_def*, %struct.rtx_def** %rhs.0.in, align 8, !dbg !3054
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rhs.0, metadata !3000, metadata !DIExpression()), !dbg !3001
  %bf.load96 = load i32, i32* %16, align 8, !dbg !3055
  %bf.lshr = lshr i32 %bf.load96, 16, !dbg !3055
  %bf.clear97 = and i32 %bf.lshr, 255, !dbg !3055
  %call98 = tail call zeroext i8 @iv_analyze_expr(%struct.rtx_def* %1, %struct.rtx_def* %rhs.0, i32 %bf.clear97, %struct.rtx_iv* %iv) #7, !dbg !3056
  tail call fastcc void @record_iv(%union.df_ref_d* %def, %struct.rtx_iv* %iv) #7, !dbg !3057
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3058
  %tobool99 = icmp eq %struct._IO_FILE* %26, null, !dbg !3058
  br i1 %tobool99, label %if.end105, label %if.then100, !dbg !3060

if.then100:                                       ; preds = %if.end95
  tail call void @print_rtl(%struct._IO_FILE* nonnull %26, %struct.rtx_def* %2) #6, !dbg !3061
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3063
  %call101 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !3064
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3065
  %call102 = tail call i32 @print_rtl_single(%struct._IO_FILE* %28, %struct.rtx_def* %1) #6, !dbg !3066
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3067
  %call103 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !3068
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3069
  tail call void @dump_iv_info(%struct._IO_FILE* %30, %struct.rtx_iv* %iv) #7, !dbg !3070
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3071
  %call104 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3072
  br label %if.end105, !dbg !3073

if.end105:                                        ; preds = %if.end95, %if.then100
  %32 = load %struct.rtx_def*, %struct.rtx_def** %base20, align 8, !dbg !3074
  %cmp107 = icmp ne %struct.rtx_def* %32, null, !dbg !3075
  br label %cleanup, !dbg !3076

cleanup:                                          ; preds = %cond.end59, %if.end63, %if.end19, %if.end105, %if.end12
  %retval.0.shrunk = phi i1 [ %cmp, %if.end12 ], [ %cmp107, %if.end105 ], [ false, %if.end19 ], [ false, %cond.end59 ], [ false, %if.end63 ]
  %retval.0 = zext i1 %retval.0.shrunk to i8, !dbg !3001
  ret i8 %retval.0, !dbg !3077
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @biv_p(%struct.rtx_def* %insn, %struct.rtx_def* %reg) local_unnamed_addr #4 !dbg !3078 {
entry:
  %iv = alloca %struct.rtx_iv, align 8
  %last_def = alloca %union.df_ref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3082, metadata !DIExpression()), !dbg !3087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3083, metadata !DIExpression()), !dbg !3087
  %0 = bitcast %struct.rtx_iv* %iv to i8*, !dbg !3088
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !3088
  %1 = bitcast %union.df_ref_d** %last_def to i8*, !dbg !3089
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3089
  %call = tail call fastcc zeroext i8 @simple_reg_p(%struct.rtx_def* %reg) #7, !dbg !3090
  %tobool = icmp eq i8 %call, 0, !dbg !3090
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3092

if.end:                                           ; preds = %entry
  %call1 = tail call %union.df_ref_d* @df_find_def(%struct.rtx_def* %insn, %struct.rtx_def* %reg) #6, !dbg !3093
  call void @llvm.dbg.value(metadata %union.df_ref_d* %call1, metadata !3085, metadata !DIExpression()), !dbg !3087
  %cmp = icmp eq %union.df_ref_d* %call1, null, !dbg !3094
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3094

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1218, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3094
  br label %cond.end, !dbg !3094

cond.end:                                         ; preds = %if.end, %cond.true
  call void @llvm.dbg.value(metadata %union.df_ref_d** %last_def, metadata !3086, metadata !DIExpression(DW_OP_deref)), !dbg !3087
  %call2 = call fastcc zeroext i8 @latch_dominating_def(%struct.rtx_def* %reg, %union.df_ref_d** nonnull %last_def) #7, !dbg !3095
  %tobool3 = icmp eq i8 %call2, 0, !dbg !3095
  %2 = load %union.df_ref_d*, %union.df_ref_d** %last_def, align 8, !dbg !3097
  call void @llvm.dbg.value(metadata %union.df_ref_d* %2, metadata !3086, metadata !DIExpression()), !dbg !3087
  %cmp6 = icmp ne %union.df_ref_d* %2, %call1, !dbg !3099
  %or.cond = or i1 %tobool3, %cmp6, !dbg !3100
  br i1 %or.cond, label %cleanup, label %if.end8, !dbg !3100

if.end8:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !3084, metadata !DIExpression(DW_OP_deref)), !dbg !3087
  %call9 = call fastcc zeroext i8 @iv_analyze_biv(%struct.rtx_def* %reg, %struct.rtx_iv* nonnull %iv) #7, !dbg !3101
  %tobool10 = icmp eq i8 %call9, 0, !dbg !3101
  br i1 %tobool10, label %cleanup, label %if.end12, !dbg !3103

if.end12:                                         ; preds = %if.end8
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 1, !dbg !3104
  %3 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !3104
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3105
  %cmp13 = icmp ne %struct.rtx_def* %3, %4, !dbg !3106
  %conv14 = zext i1 %cmp13 to i8, !dbg !3107
  br label %cleanup, !dbg !3108

cleanup:                                          ; preds = %if.end8, %entry, %cond.end, %if.end12
  %retval.0 = phi i8 [ %conv14, %if.end12 ], [ 0, %entry ], [ 0, %cond.end ], [ 0, %if.end8 ], !dbg !3087
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3109
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !3109
  ret i8 %retval.0, !dbg !3109
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @latch_dominating_def(%struct.rtx_def* %reg, %union.df_ref_d** %def) unnamed_addr #4 !dbg !3110 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3114, metadata !DIExpression()), !dbg !3120
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def, metadata !3115, metadata !DIExpression()), !dbg !3120
  call void @llvm.dbg.value(metadata %union.df_ref_d* null, metadata !3116, metadata !DIExpression()), !dbg !3120
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #7, !dbg !3121
  call void @llvm.dbg.value(metadata i32 %call, metadata !3118, metadata !DIExpression()), !dbg !3120
  %0 = load %struct.loop*, %struct.loop** @current_loop, align 8, !dbg !3122
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %0, i64 0, i32 3, !dbg !3122
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3122
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !3122
  %2 = load i32, i32* %index, align 8, !dbg !3122
  %call1 = tail call fastcc %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %2) #7, !dbg !3122
  call void @llvm.dbg.value(metadata %struct.df_rd_bb_info* %call1, metadata !3119, metadata !DIExpression()), !dbg !3120
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !3123
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 5, !dbg !3123
  %4 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !3123
  %idxprom = zext i32 %call to i64, !dbg !3123
  %arrayidx = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %4, i64 %idxprom, !dbg !3123
  %5 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx, align 8, !dbg !3123
  %reg_chain = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %5, i64 0, i32 0, !dbg !3123
  %out = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call1, i64 0, i32 4, !dbg !3125
  br label %for.cond, !dbg !3129

for.cond:                                         ; preds = %for.inc, %entry
  %single_rd.0 = phi %union.df_ref_d* [ null, %entry ], [ %single_rd.1, %for.inc ], !dbg !3120
  %adef.0.in = phi %union.df_ref_d** [ %reg_chain, %entry ], [ %next_reg, %for.inc ]
  %adef.0 = load %union.df_ref_d*, %union.df_ref_d** %adef.0.in, align 8, !dbg !3130
  call void @llvm.dbg.value(metadata %union.df_ref_d* %adef.0, metadata !3117, metadata !DIExpression()), !dbg !3120
  call void @llvm.dbg.value(metadata %union.df_ref_d* %single_rd.0, metadata !3116, metadata !DIExpression()), !dbg !3120
  %tobool = icmp eq %union.df_ref_d* %adef.0, null, !dbg !3131
  br i1 %tobool, label %for.end, label %for.body, !dbg !3131

for.body:                                         ; preds = %for.cond
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !3132
  %blocks_to_analyze = getelementptr inbounds %struct.df, %struct.df* %6, i64 0, i32 2, !dbg !3133
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_analyze, align 8, !dbg !3133
  %8 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %adef.0, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3134
  %bf.load = load i32, i32* %8, align 8, !dbg !3134
  %bf.clear = and i32 %bf.load, 255, !dbg !3134
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !3134
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3134

cond.true:                                        ; preds = %for.body
  %bb = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %adef.0, i64 0, i32 0, i32 0, i32 1, !dbg !3134
  %9 = bitcast %struct.rtx_def*** %bb to %struct.basic_block_def**, !dbg !3134
  br label %cond.end, !dbg !3134

cond.false:                                       ; preds = %for.body
  %insn_info = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %adef.0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !3134
  %10 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !3134
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %10, i64 0, i32 0, !dbg !3134
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3134
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 1, !dbg !3134
  %rt_bb = bitcast %struct.object_block** %arrayidx3 to %struct.basic_block_def**, !dbg !3134
  br label %cond.end, !dbg !3134

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %struct.basic_block_def** [ %9, %cond.true ], [ %rt_bb, %cond.false ]
  %cond = load %struct.basic_block_def*, %struct.basic_block_def** %cond.in, align 8, !dbg !3134
  %index4 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cond, i64 0, i32 9, !dbg !3134
  %12 = load i32, i32* %index4, align 8, !dbg !3134
  %call5 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %7, i32 %12) #6, !dbg !3135
  %tobool6 = icmp eq i32 %call5, 0, !dbg !3135
  br i1 %tobool6, label %for.inc, label %lor.lhs.false, !dbg !3136

lor.lhs.false:                                    ; preds = %cond.end
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !3137
  %id = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %adef.0, i64 0, i32 0, i32 0, i32 0, i32 7, !dbg !3138
  %14 = load i32, i32* %id, align 4, !dbg !3138
  %call8 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %13, i32 %14) #6, !dbg !3139
  %tobool9 = icmp eq i32 %call8, 0, !dbg !3139
  br i1 %tobool9, label %for.inc, label %if.end, !dbg !3140

if.end:                                           ; preds = %lor.lhs.false
  %tobool10 = icmp eq %union.df_ref_d* %single_rd.0, null, !dbg !3141
  br i1 %tobool10, label %if.end12, label %cleanup.loopexit, !dbg !3143

if.end12:                                         ; preds = %if.end
  %15 = load %struct.loop*, %struct.loop** @current_loop, align 8, !dbg !3144
  %bf.load14 = load i32, i32* %8, align 8, !dbg !3146
  %bf.clear15 = and i32 %bf.load14, 255, !dbg !3146
  %cmp16 = icmp eq i32 %bf.clear15, 1, !dbg !3146
  br i1 %cmp16, label %cond.true17, label %cond.false20, !dbg !3146

cond.true17:                                      ; preds = %if.end12
  %bb19 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %adef.0, i64 0, i32 0, i32 0, i32 1, !dbg !3146
  %16 = bitcast %struct.rtx_def*** %bb19 to %struct.basic_block_def**, !dbg !3146
  br label %cond.end28, !dbg !3146

cond.false20:                                     ; preds = %if.end12
  %insn_info22 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %adef.0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !3146
  %17 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info22, align 8, !dbg !3146
  %insn23 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %17, i64 0, i32 0, !dbg !3146
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn23, align 8, !dbg !3146
  %arrayidx26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 1, !dbg !3146
  %rt_bb27 = bitcast %struct.object_block** %arrayidx26 to %struct.basic_block_def**, !dbg !3146
  br label %cond.end28, !dbg !3146

cond.end28:                                       ; preds = %cond.false20, %cond.true17
  %cond29.in = phi %struct.basic_block_def** [ %16, %cond.true17 ], [ %rt_bb27, %cond.false20 ]
  %cond29 = load %struct.basic_block_def*, %struct.basic_block_def** %cond29.in, align 8, !dbg !3146
  %call30 = tail call zeroext i8 @just_once_each_iteration_p(%struct.loop* %15, %struct.basic_block_def* %cond29) #6, !dbg !3147
  %tobool31 = icmp eq i8 %call30, 0, !dbg !3147
  br i1 %tobool31, label %cleanup.loopexit, label %for.inc, !dbg !3148

for.inc:                                          ; preds = %cond.end28, %lor.lhs.false, %cond.end
  %single_rd.1 = phi %union.df_ref_d* [ %single_rd.0, %lor.lhs.false ], [ %single_rd.0, %cond.end ], [ %adef.0, %cond.end28 ], !dbg !3120
  call void @llvm.dbg.value(metadata %union.df_ref_d* %single_rd.1, metadata !3116, metadata !DIExpression()), !dbg !3120
  %next_reg = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %adef.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3149
  br label %for.cond, !dbg !3150, !llvm.loop !3151

for.end:                                          ; preds = %for.cond
  %single_rd.0.lcssa = phi %union.df_ref_d* [ %single_rd.0, %for.cond ], !dbg !3120
  call void @llvm.dbg.value(metadata %union.df_ref_d* %single_rd.0.lcssa, metadata !3116, metadata !DIExpression()), !dbg !3120
  call void @llvm.dbg.value(metadata %union.df_ref_d* %single_rd.0.lcssa, metadata !3116, metadata !DIExpression()), !dbg !3120
  call void @llvm.dbg.value(metadata %union.df_ref_d* %single_rd.0.lcssa, metadata !3116, metadata !DIExpression()), !dbg !3120
  store %union.df_ref_d* %single_rd.0.lcssa, %union.df_ref_d** %def, align 8, !dbg !3153
  br label %cleanup, !dbg !3154

cleanup.loopexit:                                 ; preds = %if.end, %cond.end28
  br label %cleanup, !dbg !3155

cleanup:                                          ; preds = %cleanup.loopexit, %for.end
  %retval.0 = phi i8 [ 1, %for.end ], [ 0, %cleanup.loopexit ], !dbg !3120
  ret i8 %retval.0, !dbg !3155
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @iv_analyze_biv(%struct.rtx_def* %def, %struct.rtx_iv* %iv) unnamed_addr #4 !dbg !3156 {
entry:
  %inner_step = alloca %struct.rtx_def*, align 8
  %outer_step = alloca %struct.rtx_def*, align 8
  %inner_mode = alloca i32, align 4
  %outer_mode = alloca i32, align 4
  %extend = alloca i32, align 4
  %last_def = alloca %union.df_ref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %def, metadata !3160, metadata !DIExpression()), !dbg !3169
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !3161, metadata !DIExpression()), !dbg !3169
  %0 = bitcast %struct.rtx_def** %inner_step to i8*, !dbg !3170
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3170
  %1 = bitcast %struct.rtx_def** %outer_step to i8*, !dbg !3170
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3170
  %2 = bitcast i32* %inner_mode to i8*, !dbg !3171
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !3171
  %3 = bitcast i32* %outer_mode to i8*, !dbg !3171
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !3171
  %4 = bitcast i32* %extend to i8*, !dbg !3172
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8, !dbg !3172
  %5 = bitcast %union.df_ref_d** %last_def to i8*, !dbg !3173
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !3173
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3174
  %tobool = icmp eq %struct._IO_FILE* %6, null, !dbg !3174
  br i1 %tobool, label %if.end, label %if.then, !dbg !3176

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !3177
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3179
  tail call void @print_rtl(%struct._IO_FILE* %7, %struct.rtx_def* %def) #6, !dbg !3180
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3181
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !3182
  br label %if.end, !dbg !3183

if.end:                                           ; preds = %entry, %if.then
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %def, i64 0, i32 0, !dbg !3184
  %bf.load = load i32, i32* %9, align 8, !dbg !3184
  %bf.clear = and i32 %bf.load, 65535, !dbg !3184
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !3184
  br i1 %cmp, label %if.end9, label %if.then2, !dbg !3186

if.then2:                                         ; preds = %if.end
  %idxprom = zext i32 %bf.clear to i64, !dbg !3187
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !3187
  %10 = load i32, i32* %arrayidx, align 4, !dbg !3187
  %cmp5 = icmp eq i32 %10, 9, !dbg !3187
  br i1 %cmp5, label %if.end7, label %cleanup, !dbg !3190

if.end7:                                          ; preds = %if.then2
  %call8 = tail call fastcc zeroext i8 @iv_constant(%struct.rtx_iv* %iv, %struct.rtx_def* %def, i32 0) #7, !dbg !3191
  br label %cleanup, !dbg !3192

if.end9:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.df_ref_d** %last_def, metadata !3167, metadata !DIExpression(DW_OP_deref)), !dbg !3169
  %call10 = call fastcc zeroext i8 @latch_dominating_def(%struct.rtx_def* %def, %union.df_ref_d** nonnull %last_def) #7, !dbg !3193
  %tobool11 = icmp eq i8 %call10, 0, !dbg !3193
  br i1 %tobool11, label %if.then12, label %if.end17, !dbg !3195

if.then12:                                        ; preds = %if.end9
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3196
  %tobool13 = icmp eq %struct._IO_FILE* %11, null, !dbg !3196
  br i1 %tobool13, label %cleanup, label %if.then14, !dbg !3199

if.then14:                                        ; preds = %if.then12
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !3200
  br label %cleanup, !dbg !3200

if.end17:                                         ; preds = %if.end9
  %12 = load %union.df_ref_d*, %union.df_ref_d** %last_def, align 8, !dbg !3201
  call void @llvm.dbg.value(metadata %union.df_ref_d* %12, metadata !3167, metadata !DIExpression()), !dbg !3169
  %tobool18 = icmp eq %union.df_ref_d* %12, null, !dbg !3201
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !3203

if.then19:                                        ; preds = %if.end17
  %call20 = call fastcc zeroext i8 @iv_constant(%struct.rtx_iv* %iv, %struct.rtx_def* %def, i32 0) #7, !dbg !3204
  br label %cleanup, !dbg !3205

if.end21:                                         ; preds = %if.end17
  %call22 = call fastcc zeroext i8 @analyzed_for_bivness_p(%struct.rtx_def* %def, %struct.rtx_iv* %iv) #7, !dbg !3206
  %tobool23 = icmp eq i8 %call22, 0, !dbg !3206
  br i1 %tobool23, label %if.end31, label %if.then24, !dbg !3208

if.then24:                                        ; preds = %if.end21
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3209
  %tobool25 = icmp eq %struct._IO_FILE* %13, null, !dbg !3209
  br i1 %tobool25, label %if.end28, label %if.then26, !dbg !3212

if.then26:                                        ; preds = %if.then24
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !3213
  br label %if.end28, !dbg !3213

if.end28:                                         ; preds = %if.then24, %if.then26
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !3214
  %14 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !3214
  %cmp29 = icmp ne %struct.rtx_def* %14, null, !dbg !3215
  br label %cleanup, !dbg !3216

if.end31:                                         ; preds = %if.end21
  %15 = load %union.df_ref_d*, %union.df_ref_d** %last_def, align 8, !dbg !3217
  call void @llvm.dbg.value(metadata %union.df_ref_d* %15, metadata !3167, metadata !DIExpression()), !dbg !3169
  call void @llvm.dbg.value(metadata %struct.rtx_def** %inner_step, metadata !3162, metadata !DIExpression(DW_OP_deref)), !dbg !3169
  call void @llvm.dbg.value(metadata %struct.rtx_def** %outer_step, metadata !3163, metadata !DIExpression(DW_OP_deref)), !dbg !3169
  call void @llvm.dbg.value(metadata i32* %inner_mode, metadata !3164, metadata !DIExpression(DW_OP_deref)), !dbg !3169
  call void @llvm.dbg.value(metadata i32* %outer_mode, metadata !3165, metadata !DIExpression(DW_OP_deref)), !dbg !3169
  call void @llvm.dbg.value(metadata i32* %extend, metadata !3166, metadata !DIExpression(DW_OP_deref)), !dbg !3169
  %call32 = call fastcc zeroext i8 @get_biv_step(%union.df_ref_d* %15, %struct.rtx_def* %def, %struct.rtx_def** nonnull %inner_step, i32* nonnull %inner_mode, i32* nonnull %extend, i32* nonnull %outer_mode, %struct.rtx_def** nonnull %outer_step) #7, !dbg !3219
  %tobool33 = icmp eq i8 %call32, 0, !dbg !3219
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !3220

if.then34:                                        ; preds = %if.end31
  %base35 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !3221
  store %struct.rtx_def* null, %struct.rtx_def** %base35, align 8, !dbg !3223
  br label %end, !dbg !3224

if.end36:                                         ; preds = %if.end31
  %16 = load i32, i32* %outer_mode, align 4, !dbg !3225
  call void @llvm.dbg.value(metadata i32 %16, metadata !3165, metadata !DIExpression()), !dbg !3169
  %17 = load %struct.rtx_def*, %struct.rtx_def** %outer_step, align 8, !dbg !3226
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !3163, metadata !DIExpression()), !dbg !3169
  %call37 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %16, %struct.rtx_def* %def, %struct.rtx_def* %17) #6, !dbg !3227
  %base38 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !3228
  store %struct.rtx_def* %call37, %struct.rtx_def** %base38, align 8, !dbg !3229
  %18 = load i32, i32* %outer_mode, align 4, !dbg !3230
  call void @llvm.dbg.value(metadata i32 %18, metadata !3165, metadata !DIExpression()), !dbg !3169
  %19 = load %struct.rtx_def*, %struct.rtx_def** %inner_step, align 8, !dbg !3231
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !3162, metadata !DIExpression()), !dbg !3169
  %20 = load %struct.rtx_def*, %struct.rtx_def** %outer_step, align 8, !dbg !3232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !3163, metadata !DIExpression()), !dbg !3169
  %call39 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %18, %struct.rtx_def* %19, %struct.rtx_def* %20) #6, !dbg !3233
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 1, !dbg !3234
  store %struct.rtx_def* %call39, %struct.rtx_def** %step, align 8, !dbg !3235
  %21 = load i32, i32* %inner_mode, align 4, !dbg !3236
  call void @llvm.dbg.value(metadata i32 %21, metadata !3164, metadata !DIExpression()), !dbg !3169
  %mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 6, !dbg !3237
  store i32 %21, i32* %mode, align 4, !dbg !3238
  %22 = load i32, i32* %outer_mode, align 4, !dbg !3239
  call void @llvm.dbg.value(metadata i32 %22, metadata !3165, metadata !DIExpression()), !dbg !3169
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !3240
  store i32 %22, i32* %extend_mode, align 8, !dbg !3241
  %23 = load i32, i32* %extend, align 4, !dbg !3242
  call void @llvm.dbg.value(metadata i32 %23, metadata !3166, metadata !DIExpression()), !dbg !3169
  %extend40 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 2, !dbg !3243
  store i32 %23, i32* %extend40, align 8, !dbg !3244
  %24 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65) to i64*), align 8, !dbg !3245
  %mult = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 4, !dbg !3246
  %25 = bitcast %struct.rtx_def** %mult to i64*, !dbg !3247
  store i64 %24, i64* %25, align 8, !dbg !3247
  %26 = bitcast %struct.rtx_def** %outer_step to i64*, !dbg !3248
  %27 = load i64, i64* %26, align 8, !dbg !3248
  %delta = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 3, !dbg !3249
  %28 = bitcast %struct.rtx_def** %delta to i64*, !dbg !3250
  store i64 %27, i64* %28, align 8, !dbg !3250
  call void @llvm.dbg.value(metadata i32 %21, metadata !3164, metadata !DIExpression()), !dbg !3169
  call void @llvm.dbg.value(metadata i32 %22, metadata !3165, metadata !DIExpression()), !dbg !3169
  %cmp41 = icmp ne i32 %21, %22, !dbg !3251
  %first_special = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 7, !dbg !3252
  %29 = zext i1 %cmp41 to i8, !dbg !3253
  %bf.load43 = load i8, i8* %first_special, align 8, !dbg !3253
  %bf.clear44 = and i8 %bf.load43, -2, !dbg !3253
  %bf.set = or i8 %bf.clear44, %29, !dbg !3253
  store i8 %bf.set, i8* %first_special, align 8, !dbg !3253
  br label %end, !dbg !3254

end:                                              ; preds = %if.end36, %if.then34
  call void @llvm.dbg.label(metadata !3168), !dbg !3255
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3256
  %tobool45 = icmp eq %struct._IO_FILE* %30, null, !dbg !3256
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !3258

if.then46:                                        ; preds = %end
  %call47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !3259
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3261
  call void @dump_iv_info(%struct._IO_FILE* %31, %struct.rtx_iv* %iv) #7, !dbg !3262
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3263
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3264
  br label %if.end49, !dbg !3265

if.end49:                                         ; preds = %end, %if.then46
  call fastcc void @record_biv(%struct.rtx_def* %def, %struct.rtx_iv* %iv) #7, !dbg !3266
  %base50 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !3267
  %33 = load %struct.rtx_def*, %struct.rtx_def** %base50, align 8, !dbg !3267
  %cmp51 = icmp ne %struct.rtx_def* %33, null, !dbg !3268
  br label %cleanup, !dbg !3269

cleanup:                                          ; preds = %if.then12, %if.then14, %if.then2, %if.end49, %if.end28, %if.then19, %if.end7
  %retval.0.shrunk = phi i1 [ %cmp29, %if.end28 ], [ %cmp51, %if.end49 ], [ true, %if.then19 ], [ true, %if.end7 ], [ false, %if.then2 ], [ false, %if.then14 ], [ false, %if.then12 ]
  %retval.0 = zext i1 %retval.0.shrunk to i8, !dbg !3169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !3270
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8, !dbg !3270
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !3270
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !3270
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3270
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3270
  ret i8 %retval.0, !dbg !3270
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_iv_value(%struct.rtx_iv* %iv, %struct.rtx_def* %iteration) local_unnamed_addr #4 !dbg !3271 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !3275, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata %struct.rtx_def* %iteration, metadata !3276, metadata !DIExpression()), !dbg !3278
  %first_special = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 7, !dbg !3279
  %bf.load = load i8, i8* %first_special, align 8, !dbg !3279
  %bf.clear = and i8 %bf.load, 1, !dbg !3279
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !3279
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3279

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1239, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3279
  br label %cond.end, !dbg !3279

cond.end:                                         ; preds = %entry, %cond.true
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 1, !dbg !3280
  %0 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !3280
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3282
  %cmp = icmp ne %struct.rtx_def* %0, %1, !dbg !3283
  %cmp1 = icmp ne %struct.rtx_def* %1, %iteration, !dbg !3284
  %or.cond = and i1 %cmp, %cmp1, !dbg !3285
  br i1 %or.cond, label %if.then, label %if.else, !dbg !3285

if.then:                                          ; preds = %cond.end
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !3286
  %2 = load i32, i32* %extend_mode, align 8, !dbg !3286
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !3287
  %3 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !3287
  %call = tail call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %2, %struct.rtx_def* %0, %struct.rtx_def* %iteration) #6, !dbg !3288
  %call4 = tail call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %2, %struct.rtx_def* %3, %struct.rtx_def* %call) #6, !dbg !3289
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !3277, metadata !DIExpression()), !dbg !3278
  br label %if.end, !dbg !3290

if.else:                                          ; preds = %cond.end
  %base5 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !3291
  %4 = load %struct.rtx_def*, %struct.rtx_def** %base5, align 8, !dbg !3291
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3277, metadata !DIExpression()), !dbg !3278
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %val.0 = phi %struct.rtx_def* [ %call4, %if.then ], [ %4, %if.else ], !dbg !3292
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.0, metadata !3277, metadata !DIExpression()), !dbg !3278
  %extend_mode6 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !3293
  %5 = load i32, i32* %extend_mode6, align 8, !dbg !3293
  %mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 6, !dbg !3295
  %6 = load i32, i32* %mode, align 4, !dbg !3295
  %cmp7 = icmp eq i32 %5, %6, !dbg !3296
  br i1 %cmp7, label %cleanup, label %if.end9, !dbg !3297

if.end9:                                          ; preds = %if.end
  %call12 = tail call %struct.rtx_def* @lowpart_subreg(i32 %6, %struct.rtx_def* %val.0, i32 %5) #7, !dbg !3298
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call12, metadata !3277, metadata !DIExpression()), !dbg !3278
  %extend = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 2, !dbg !3299
  %7 = load i32, i32* %extend, align 8, !dbg !3299
  %cmp13 = icmp eq i32 %7, 0, !dbg !3301
  br i1 %cmp13, label %cleanup, label %if.end15, !dbg !3302

if.end15:                                         ; preds = %if.end9
  %8 = load i32, i32* %extend_mode6, align 8, !dbg !3303
  %9 = load i32, i32* %mode, align 4, !dbg !3304
  %call19 = tail call %struct.rtx_def* @simplify_gen_unary(i32 %7, i32 %8, %struct.rtx_def* %call12, i32 %9) #6, !dbg !3305
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !3277, metadata !DIExpression()), !dbg !3278
  %10 = load i32, i32* %extend_mode6, align 8, !dbg !3306
  %delta = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 3, !dbg !3307
  %11 = load %struct.rtx_def*, %struct.rtx_def** %delta, align 8, !dbg !3307
  %mult = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 4, !dbg !3308
  %12 = load %struct.rtx_def*, %struct.rtx_def** %mult, align 8, !dbg !3308
  %call22 = tail call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %10, %struct.rtx_def* %12, %struct.rtx_def* %call19) #6, !dbg !3309
  %call23 = tail call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %10, %struct.rtx_def* %11, %struct.rtx_def* %call22) #6, !dbg !3310
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call23, metadata !3277, metadata !DIExpression()), !dbg !3278
  br label %cleanup, !dbg !3311

cleanup:                                          ; preds = %if.end9, %if.end, %if.end15
  %retval.0 = phi %struct.rtx_def* [ %call23, %if.end15 ], [ %val.0, %if.end ], [ %call12, %if.end9 ], !dbg !3278
  ret %struct.rtx_def* %retval.0, !dbg !3312
}

declare dso_local %struct.rtx_def* @simplify_gen_binary(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_gen_unary(i32, i32, %struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @iv_analysis_done() local_unnamed_addr #4 !dbg !3313 {
entry:
  %.b = load i1, i1* @clean_slate, align 1, !dbg !3314
  br i1 %.b, label %if.then, label %if.end, !dbg !3316

if.then:                                          ; preds = %entry
  tail call fastcc void @clear_iv_info() #7, !dbg !3317
  store i1 false, i1* @clean_slate, align 1, !dbg !3319
  tail call void @df_finish_pass(i8 zeroext 1) #6, !dbg !3320
  %0 = load %struct.htab*, %struct.htab** @bivs, align 8, !dbg !3321
  tail call void @htab_delete(%struct.htab* %0) #6, !dbg !3322
  %1 = load i8*, i8** bitcast (%struct.rtx_iv*** @iv_ref_table to i8**), align 8, !dbg !3323
  tail call void @free(i8* %1) #6, !dbg !3324
  store %struct.rtx_iv** null, %struct.rtx_iv*** @iv_ref_table, align 8, !dbg !3325
  store i32 0, i32* @iv_ref_table_size, align 4, !dbg !3326
  store %struct.htab* null, %struct.htab** @bivs, align 8, !dbg !3327
  br label %if.end, !dbg !3328

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3329
}

declare dso_local void @df_finish_pass(i8 zeroext) local_unnamed_addr #1

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @canon_condition(%struct.rtx_def* %cond) local_unnamed_addr #4 !dbg !3330 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !3334, metadata !DIExpression()), !dbg !3345
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 0, !dbg !3346
  %bf.load = load i32, i32* %0, align 8, !dbg !3346
  %bf.clear = and i32 %bf.load, 65535, !dbg !3346
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !3338, metadata !DIExpression()), !dbg !3345
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3347
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3347
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3347
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3336, metadata !DIExpression()), !dbg !3345
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3348
  %rt_rtx4 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !3348
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !3348
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3337, metadata !DIExpression()), !dbg !3345
  %call = tail call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %1, %struct.rtx_def* %3) #6, !dbg !3349
  %tobool = icmp eq i8 %call, 0, !dbg !3349
  br i1 %tobool, label %if.end, label %if.then, !dbg !3351

if.then:                                          ; preds = %entry
  %call5 = tail call i32 @swap_condition(i32 %bf.clear) #6, !dbg !3352
  call void @llvm.dbg.value(metadata i32 %call5, metadata !3338, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3335, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3336, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3337, metadata !DIExpression()), !dbg !3345
  br label %if.end, !dbg !3354

if.end:                                           ; preds = %entry, %if.then
  %code.0 = phi i32 [ %call5, %if.then ], [ %bf.clear, %entry ], !dbg !3345
  %op1.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %3, %entry ], !dbg !3345
  %op0.0 = phi %struct.rtx_def* [ %3, %if.then ], [ %1, %entry ], !dbg !3345
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.0, metadata !3336, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.0, metadata !3337, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !3338, metadata !DIExpression()), !dbg !3345
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 0, !dbg !3355
  %bf.load6 = load i32, i32* %4, align 8, !dbg !3355
  %bf.lshr = lshr i32 %bf.load6, 16, !dbg !3355
  %bf.clear7 = and i32 %bf.lshr, 255, !dbg !3355
  call void @llvm.dbg.value(metadata i32 %bf.clear7, metadata !3339, metadata !DIExpression()), !dbg !3345
  %cmp = icmp eq i32 %bf.clear7, 0, !dbg !3356
  br i1 %cmp, label %if.then8, label %if.end12, !dbg !3358

if.then8:                                         ; preds = %if.end
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.0, i64 0, i32 0, !dbg !3359
  %bf.load9 = load i32, i32* %5, align 8, !dbg !3359
  %bf.lshr10 = lshr i32 %bf.load9, 16, !dbg !3359
  %bf.clear11 = and i32 %bf.lshr10, 255, !dbg !3359
  call void @llvm.dbg.value(metadata i32 %bf.clear11, metadata !3339, metadata !DIExpression()), !dbg !3345
  br label %if.end12, !dbg !3360

if.end12:                                         ; preds = %if.then8, %if.end
  %mode.0 = phi i32 [ %bf.clear11, %if.then8 ], [ %bf.clear7, %if.end ], !dbg !3345
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !3339, metadata !DIExpression()), !dbg !3345
  %cmp13 = icmp eq i32 %mode.0, 0, !dbg !3361
  br i1 %cmp13, label %cond.true, label %cond.end, !dbg !3361

cond.true:                                        ; preds = %if.end12
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1650, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3361
  br label %cond.end, !dbg !3361

cond.end:                                         ; preds = %if.end12, %cond.true
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.0, i64 0, i32 0, !dbg !3362
  %bf.load15 = load i32, i32* %6, align 8, !dbg !3362
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !3362
  %cmp17 = icmp eq i32 %bf.clear16, 30, !dbg !3362
  br i1 %cmp17, label %land.lhs.true, label %if.end74, !dbg !3363

land.lhs.true:                                    ; preds = %cond.end
  %idxprom = zext i32 %mode.0 to i64, !dbg !3364
  %arrayidx18 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !3364
  %7 = load i8, i8* %arrayidx18, align 1, !dbg !3364
  %cmp19 = icmp eq i8 %7, 1, !dbg !3365
  br i1 %cmp19, label %if.end74, label %land.lhs.true21, !dbg !3366

land.lhs.true21:                                  ; preds = %land.lhs.true
  %arrayidx23 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3367
  %8 = load i8, i8* %arrayidx23, align 1, !dbg !3367
  %cmp28 = icmp ult i8 %8, 9, !dbg !3368
  br i1 %cmp28, label %if.then30, label %if.end74, !dbg !3369

if.then30:                                        ; preds = %land.lhs.true21
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.0, i64 0, i32 1, !dbg !3370
  %arrayidx32 = bitcast %union.u* %u31 to i64*, !dbg !3370
  %9 = load i64, i64* %arrayidx32, align 8, !dbg !3370
  call void @llvm.dbg.value(metadata i64 %9, metadata !3340, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i64 %9, metadata !3343, metadata !DIExpression()), !dbg !3371
  %arrayidx34 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom, !dbg !3372
  %10 = load i64, i64* %arrayidx34, align 8, !dbg !3372
  call void @llvm.dbg.value(metadata i64 %10, metadata !3344, metadata !DIExpression()), !dbg !3371
  switch i32 %code.0, label %if.end74 [
    i32 84, label %sw.bb
    i32 82, label %sw.bb43
    i32 88, label %sw.bb60
    i32 86, label %sw.bb67
  ], !dbg !3373

sw.bb:                                            ; preds = %if.then30
  %shr = lshr i64 %10, 1, !dbg !3374
  %cmp35 = icmp eq i64 %9, %shr, !dbg !3377
  br i1 %cmp35, label %if.end74, label %if.then37, !dbg !3378

if.then37:                                        ; preds = %sw.bb
  call void @llvm.dbg.value(metadata i32 85, metadata !3338, metadata !DIExpression()), !dbg !3345
  %add = add nsw i64 %9, 1, !dbg !3379
  %bf.load38 = load i32, i32* %4, align 8, !dbg !3380
  %bf.lshr39 = lshr i32 %bf.load38, 16, !dbg !3380
  %bf.clear40 = and i32 %bf.lshr39, 255, !dbg !3380
  %call41 = tail call %struct.rtx_def* @gen_int_mode(i64 %add, i32 %bf.clear40) #6, !dbg !3381
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call41, metadata !3337, metadata !DIExpression()), !dbg !3345
  br label %if.end74, !dbg !3382

sw.bb43:                                          ; preds = %if.then30
  %and = and i64 %9, %10, !dbg !3383
  %bf.load44 = load i32, i32* %4, align 8, !dbg !3385
  %bf.lshr45 = lshr i32 %bf.load44, 16, !dbg !3385
  %bf.clear46 = and i32 %bf.lshr45, 255, !dbg !3385
  %idxprom47 = zext i32 %bf.clear46 to i64, !dbg !3385
  %arrayidx48 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom47, !dbg !3385
  %11 = load i8, i8* %arrayidx48, align 1, !dbg !3385
  %conv50 = zext i8 %11 to i64, !dbg !3385
  %mul51 = shl nuw nsw i64 %conv50, 3, !dbg !3385
  %sub = add nuw nsw i64 %mul51, 4294967295, !dbg !3386
  %sh_prom = and i64 %sub, 4294967295, !dbg !3387
  %shl = shl i64 1, %sh_prom, !dbg !3387
  %cmp54 = icmp eq i64 %and, %shl, !dbg !3388
  br i1 %cmp54, label %if.end74, label %if.then56, !dbg !3389

if.then56:                                        ; preds = %sw.bb43
  call void @llvm.dbg.value(metadata i32 83, metadata !3338, metadata !DIExpression()), !dbg !3345
  %sub57 = add nsw i64 %9, -1, !dbg !3390
  %call58 = tail call %struct.rtx_def* @gen_int_mode(i64 %sub57, i32 %mode.0) #6, !dbg !3391
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call58, metadata !3337, metadata !DIExpression()), !dbg !3345
  br label %if.end74, !dbg !3392

sw.bb60:                                          ; preds = %if.then30
  %cmp61 = icmp ult i64 %9, %10, !dbg !3393
  br i1 %cmp61, label %if.then63, label %if.end74, !dbg !3395

if.then63:                                        ; preds = %sw.bb60
  call void @llvm.dbg.value(metadata i32 89, metadata !3338, metadata !DIExpression()), !dbg !3345
  %add64 = add i64 %9, 1, !dbg !3396
  %call65 = tail call %struct.rtx_def* @gen_int_mode(i64 %add64, i32 %mode.0) #6, !dbg !3397
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call65, metadata !3337, metadata !DIExpression()), !dbg !3345
  br label %if.end74, !dbg !3398

sw.bb67:                                          ; preds = %if.then30
  %cmp68 = icmp eq i64 %9, 0, !dbg !3399
  br i1 %cmp68, label %if.end74, label %if.then70, !dbg !3401

if.then70:                                        ; preds = %sw.bb67
  call void @llvm.dbg.value(metadata i32 87, metadata !3338, metadata !DIExpression()), !dbg !3345
  %sub71 = add i64 %9, -1, !dbg !3402
  %call72 = tail call %struct.rtx_def* @gen_int_mode(i64 %sub71, i32 %mode.0) #6, !dbg !3403
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call72, metadata !3337, metadata !DIExpression()), !dbg !3345
  br label %if.end74, !dbg !3404

if.end74:                                         ; preds = %sw.bb, %sw.bb43, %sw.bb67, %land.lhs.true, %if.then37, %if.then56, %if.then63, %sw.bb60, %if.then70, %if.then30, %land.lhs.true21, %cond.end
  %code.6 = phi i32 [ %code.0, %land.lhs.true21 ], [ %code.0, %land.lhs.true ], [ %code.0, %cond.end ], [ 85, %if.then37 ], [ 84, %sw.bb ], [ 83, %if.then56 ], [ 82, %sw.bb43 ], [ 89, %if.then63 ], [ 88, %sw.bb60 ], [ 87, %if.then70 ], [ 86, %sw.bb67 ], [ %code.0, %if.then30 ], !dbg !3405
  %op1.6 = phi %struct.rtx_def* [ %op1.0, %land.lhs.true21 ], [ %op1.0, %land.lhs.true ], [ %op1.0, %cond.end ], [ %call41, %if.then37 ], [ %op1.0, %sw.bb ], [ %call58, %if.then56 ], [ %op1.0, %sw.bb43 ], [ %call65, %if.then63 ], [ %op1.0, %sw.bb60 ], [ %call72, %if.then70 ], [ %op1.0, %sw.bb67 ], [ %op1.0, %if.then30 ], !dbg !3406
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.6, metadata !3337, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %code.6, metadata !3338, metadata !DIExpression()), !dbg !3345
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3407
  %cmp79 = icmp eq %struct.rtx_def* %op0.0, %12, !dbg !3409
  br i1 %cmp79, label %lor.lhs.false, label %if.then98, !dbg !3410

lor.lhs.false:                                    ; preds = %if.end74
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !3411
  %cmp85 = icmp eq %struct.rtx_def* %op1.6, %13, !dbg !3412
  br i1 %cmp85, label %lor.lhs.false87, label %if.then98, !dbg !3413

lor.lhs.false87:                                  ; preds = %lor.lhs.false
  %bf.load88 = load i32, i32* %0, align 8, !dbg !3414
  %bf.clear89 = and i32 %bf.load88, 65535, !dbg !3414
  %cmp90 = icmp eq i32 %code.6, %bf.clear89, !dbg !3415
  br i1 %cmp90, label %lor.lhs.false92, label %if.then98, !dbg !3416

lor.lhs.false92:                                  ; preds = %lor.lhs.false87
  %bf.clear95 = and i32 %bf.load88, 16711680, !dbg !3417
  %cmp96 = icmp eq i32 %bf.clear95, 1048576, !dbg !3418
  br i1 %cmp96, label %if.end100, label %if.then98, !dbg !3419

if.then98:                                        ; preds = %lor.lhs.false92, %lor.lhs.false87, %lor.lhs.false, %if.end74
  %call99 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %code.6, i32 16, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.6) #6, !dbg !3420
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call99, metadata !3334, metadata !DIExpression()), !dbg !3345
  br label %if.end100, !dbg !3421

if.end100:                                        ; preds = %lor.lhs.false92, %if.then98
  %cond.addr.0 = phi %struct.rtx_def* [ %call99, %if.then98 ], [ %cond, %lor.lhs.false92 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond.addr.0, metadata !3334, metadata !DIExpression()), !dbg !3345
  ret %struct.rtx_def* %cond.addr.0, !dbg !3422
}

declare dso_local zeroext i8 @swap_commutative_operands_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @swap_condition(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_int_mode(i64, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @simplify_using_condition(%struct.rtx_def* %cond, %struct.rtx_def** %expr, %struct.bitmap_head_def* %altered) local_unnamed_addr #4 !dbg !3423 {
entry:
  %cond.addr = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !3428, metadata !DIExpression()), !dbg !3434
  store %struct.rtx_def* %cond, %struct.rtx_def** %cond.addr, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def** %expr, metadata !3429, metadata !DIExpression()), !dbg !3434
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %altered, metadata !3430, metadata !DIExpression()), !dbg !3434
  %0 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !3435
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !3433, metadata !DIExpression()), !dbg !3434
  %tobool = icmp eq %struct.bitmap_head_def* %altered, null, !dbg !3436
  br i1 %tobool, label %entry.if.end_crit_edge, label %land.lhs.true, !dbg !3438

entry.if.end_crit_edge:                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 0, !dbg !3438
  br label %if.end, !dbg !3438

land.lhs.true:                                    ; preds = %entry
  %2 = bitcast %struct.bitmap_head_def* %altered to i8*, !dbg !3439
  call void @llvm.dbg.value(metadata %struct.rtx_def** %cond.addr, metadata !3428, metadata !DIExpression(DW_OP_deref)), !dbg !3434
  %call = call i32 @for_each_rtx(%struct.rtx_def** nonnull %cond.addr, i32 (%struct.rtx_def**, i8*)* nonnull @altered_reg_used, i8* nonnull %2) #6, !dbg !3440
  %tobool1 = icmp eq i32 %call, 0, !dbg !3440
  br i1 %tobool1, label %land.lhs.true.if.end_crit_edge, label %cleanup, !dbg !3441

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  %.phi.trans.insert = bitcast %struct.rtx_def** %cond.addr to i32**, !dbg !3442
  %.pre = load i32*, i32** %.phi.trans.insert, align 8, !dbg !3444
  %3 = bitcast i32* %.pre to %struct.rtx_def*, !dbg !3441
  br label %if.end, !dbg !3441

if.end:                                           ; preds = %entry.if.end_crit_edge, %land.lhs.true.if.end_crit_edge
  %4 = phi %struct.rtx_def* [ %3, %land.lhs.true.if.end_crit_edge ], [ %cond, %entry.if.end_crit_edge ]
  %5 = phi %struct.rtx_def* [ %3, %land.lhs.true.if.end_crit_edge ], [ %cond, %entry.if.end_crit_edge ]
  %6 = phi %struct.rtx_def* [ %3, %land.lhs.true.if.end_crit_edge ], [ %cond, %entry.if.end_crit_edge ]
  %7 = phi %struct.rtx_def* [ %3, %land.lhs.true.if.end_crit_edge ], [ %cond, %entry.if.end_crit_edge ]
  %8 = phi i32* [ %.pre, %land.lhs.true.if.end_crit_edge ], [ %1, %entry.if.end_crit_edge ], !dbg !3444
  %bf.load = load i32, i32* %8, align 8, !dbg !3444
  %bf.clear = and i32 %bf.load, 65535, !dbg !3444
  %cmp = icmp eq i32 %bf.clear, 81, !dbg !3445
  br i1 %cmp, label %land.lhs.true2, label %if.end25, !dbg !3446

land.lhs.true2:                                   ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !3428, metadata !DIExpression()), !dbg !3434
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3447
  %9 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !3447
  %10 = load i32*, i32** %9, align 8, !dbg !3447
  %bf.load3 = load i32, i32* %10, align 8, !dbg !3447
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !3447
  %cmp5 = icmp eq i32 %bf.clear4, 37, !dbg !3447
  br i1 %cmp5, label %land.lhs.true6, label %if.end25, !dbg !3448

land.lhs.true6:                                   ; preds = %land.lhs.true2
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !3428, metadata !DIExpression()), !dbg !3434
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3449
  %12 = bitcast %union.rtunion_def* %11 to i32**, !dbg !3449
  %13 = load i32*, i32** %12, align 8, !dbg !3449
  %bf.load11 = load i32, i32* %13, align 8, !dbg !3449
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !3449
  %idxprom = zext i32 %bf.clear12 to i64, !dbg !3449
  %arrayidx13 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !3449
  %14 = load i32, i32* %arrayidx13, align 4, !dbg !3449
  %cmp14 = icmp eq i32 %14, 9, !dbg !3449
  br i1 %cmp14, label %if.then15, label %if.end25, !dbg !3450

if.then15:                                        ; preds = %land.lhs.true6
  %15 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !3451
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3428, metadata !DIExpression()), !dbg !3434
  %arrayidx18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3453
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !3453
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !3453
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3428, metadata !DIExpression()), !dbg !3434
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3454
  %rt_rtx23 = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !3454
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !3454
  %call24 = call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %15, %struct.rtx_def* %16, %struct.rtx_def* %18) #6, !dbg !3455
  store %struct.rtx_def* %call24, %struct.rtx_def** %expr, align 8, !dbg !3456
  br label %cleanup, !dbg !3457

if.end25:                                         ; preds = %land.lhs.true6, %land.lhs.true2, %if.end
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !3458
  %bf.load26 = load i32, i32* %19, align 8, !dbg !3458
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !3458
  %idxprom28 = zext i32 %bf.clear27 to i64, !dbg !3458
  %arrayidx29 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom28, !dbg !3458
  %20 = load i32, i32* %arrayidx29, align 4, !dbg !3458
  %cmp30 = icmp ult i32 %20, 2, !dbg !3458
  br i1 %cmp30, label %if.end32, label %cleanup, !dbg !3460

if.end32:                                         ; preds = %if.end25
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3428, metadata !DIExpression()), !dbg !3434
  %call33 = call %struct.rtx_def* @reversed_condition(%struct.rtx_def* %5) #6, !dbg !3461
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call33, metadata !3431, metadata !DIExpression()), !dbg !3434
  %call34 = call %struct.rtx_def* @reversed_condition(%struct.rtx_def* %0) #6, !dbg !3462
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !3432, metadata !DIExpression()), !dbg !3434
  %21 = load %struct.rtx_def*, %struct.rtx_def** %cond.addr, align 8, !dbg !3463
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !3428, metadata !DIExpression()), !dbg !3434
  %call35 = call %struct.rtx_def* @canon_condition(%struct.rtx_def* %21) #7, !dbg !3464
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call35, metadata !3428, metadata !DIExpression()), !dbg !3434
  store %struct.rtx_def* %call35, %struct.rtx_def** %cond.addr, align 8, !dbg !3465
  %call36 = call %struct.rtx_def* @canon_condition(%struct.rtx_def* %0) #7, !dbg !3466
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call36, metadata !3433, metadata !DIExpression()), !dbg !3434
  %tobool37 = icmp eq %struct.rtx_def* %call33, null, !dbg !3467
  br i1 %tobool37, label %if.end40, label %if.then38, !dbg !3469

if.then38:                                        ; preds = %if.end32
  %call39 = call %struct.rtx_def* @canon_condition(%struct.rtx_def* nonnull %call33) #7, !dbg !3470
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call39, metadata !3431, metadata !DIExpression()), !dbg !3434
  br label %if.end40, !dbg !3471

if.end40:                                         ; preds = %if.end32, %if.then38
  %rev.0 = phi %struct.rtx_def* [ %call39, %if.then38 ], [ null, %if.end32 ], !dbg !3434
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rev.0, metadata !3431, metadata !DIExpression()), !dbg !3434
  %tobool41 = icmp eq %struct.rtx_def* %call34, null, !dbg !3472
  br i1 %tobool41, label %if.end44, label %if.then42, !dbg !3474

if.then42:                                        ; preds = %if.end40
  %call43 = call %struct.rtx_def* @canon_condition(%struct.rtx_def* nonnull %call34) #7, !dbg !3475
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call43, metadata !3432, metadata !DIExpression()), !dbg !3434
  br label %if.end44, !dbg !3476

if.end44:                                         ; preds = %if.end40, %if.then42
  %reve.0 = phi %struct.rtx_def* [ %call43, %if.then42 ], [ null, %if.end40 ], !dbg !3434
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reve.0, metadata !3432, metadata !DIExpression()), !dbg !3434
  %22 = load %struct.rtx_def*, %struct.rtx_def** %cond.addr, align 8, !dbg !3477
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !3428, metadata !DIExpression()), !dbg !3434
  %call45 = call i32 @rtx_equal_p(%struct.rtx_def* %call36, %struct.rtx_def* %22) #6, !dbg !3479
  %tobool46 = icmp eq i32 %call45, 0, !dbg !3479
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !3480

if.then47:                                        ; preds = %if.end44
  %23 = load i64, i64* bitcast (%struct.rtx_def** @const_true_rtx to i64*), align 8, !dbg !3481
  %24 = bitcast %struct.rtx_def** %expr to i64*, !dbg !3483
  store i64 %23, i64* %24, align 8, !dbg !3483
  br label %cleanup, !dbg !3484

if.end48:                                         ; preds = %if.end44
  %tobool49 = icmp eq %struct.rtx_def* %rev.0, null, !dbg !3485
  br i1 %tobool49, label %if.end54, label %land.lhs.true50, !dbg !3487

land.lhs.true50:                                  ; preds = %if.end48
  %call51 = call i32 @rtx_equal_p(%struct.rtx_def* %call36, %struct.rtx_def* nonnull %rev.0) #6, !dbg !3488
  %tobool52 = icmp eq i32 %call51, 0, !dbg !3488
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !3489

if.then53:                                        ; preds = %land.lhs.true50
  %25 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !3490
  %26 = bitcast %struct.rtx_def** %expr to i64*, !dbg !3492
  store i64 %25, i64* %26, align 8, !dbg !3492
  br label %cleanup, !dbg !3493

if.end54:                                         ; preds = %land.lhs.true50, %if.end48
  %27 = load %struct.rtx_def*, %struct.rtx_def** %cond.addr, align 8, !dbg !3494
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !3428, metadata !DIExpression()), !dbg !3434
  %call55 = call fastcc zeroext i8 @implies_p(%struct.rtx_def* %27, %struct.rtx_def* %call36) #7, !dbg !3496
  %tobool56 = icmp eq i8 %call55, 0, !dbg !3496
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !3497

if.then57:                                        ; preds = %if.end54
  %28 = load i64, i64* bitcast (%struct.rtx_def** @const_true_rtx to i64*), align 8, !dbg !3498
  %29 = bitcast %struct.rtx_def** %expr to i64*, !dbg !3500
  store i64 %28, i64* %29, align 8, !dbg !3500
  br label %cleanup, !dbg !3501

if.end58:                                         ; preds = %if.end54
  %tobool59 = icmp eq %struct.rtx_def* %reve.0, null, !dbg !3502
  br i1 %tobool59, label %if.end64, label %land.lhs.true60, !dbg !3504

land.lhs.true60:                                  ; preds = %if.end58
  %30 = load %struct.rtx_def*, %struct.rtx_def** %cond.addr, align 8, !dbg !3505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %30, metadata !3428, metadata !DIExpression()), !dbg !3434
  %call61 = call fastcc zeroext i8 @implies_p(%struct.rtx_def* %30, %struct.rtx_def* nonnull %reve.0) #7, !dbg !3506
  %tobool62 = icmp eq i8 %call61, 0, !dbg !3506
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !3507

if.then63:                                        ; preds = %land.lhs.true60
  %31 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !3508
  %32 = bitcast %struct.rtx_def** %expr to i64*, !dbg !3510
  store i64 %31, i64* %32, align 8, !dbg !3510
  br label %cleanup, !dbg !3511

if.end64:                                         ; preds = %land.lhs.true60, %if.end58
  br i1 %tobool49, label %cleanup, label %land.lhs.true66, !dbg !3512

land.lhs.true66:                                  ; preds = %if.end64
  %call67 = call fastcc zeroext i8 @implies_p(%struct.rtx_def* %call36, %struct.rtx_def* nonnull %rev.0) #7, !dbg !3514
  %tobool69 = icmp eq i8 %call67, 0, !dbg !3514
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !3515

if.then70:                                        ; preds = %land.lhs.true66
  %33 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !3516
  %34 = bitcast %struct.rtx_def** %expr to i64*, !dbg !3518
  store i64 %33, i64* %34, align 8, !dbg !3518
  br label %cleanup, !dbg !3519

if.end71:                                         ; preds = %land.lhs.true66
  br i1 %tobool59, label %cleanup, label %land.lhs.true75, !dbg !3520

land.lhs.true75:                                  ; preds = %if.end71
  %call76 = call fastcc zeroext i8 @implies_p(%struct.rtx_def* nonnull %reve.0, %struct.rtx_def* nonnull %rev.0) #7, !dbg !3522
  %tobool78 = icmp eq i8 %call76, 0, !dbg !3522
  br i1 %tobool78, label %cleanup, label %if.then79, !dbg !3523

if.then79:                                        ; preds = %land.lhs.true75
  %35 = load i64, i64* bitcast (%struct.rtx_def** @const_true_rtx to i64*), align 8, !dbg !3524
  %36 = bitcast %struct.rtx_def** %expr to i64*, !dbg !3526
  store i64 %35, i64* %36, align 8, !dbg !3526
  br label %cleanup, !dbg !3527

cleanup:                                          ; preds = %land.lhs.true, %land.lhs.true75, %if.end71, %if.end64, %if.end25, %if.then79, %if.then70, %if.then63, %if.then57, %if.then53, %if.then47, %if.then15
  ret void, !dbg !3528
}

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @altered_reg_used(%struct.rtx_def** %reg, i8* %alt) #4 !dbg !3529 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %reg, metadata !3533, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i8* %alt, metadata !3534, metadata !DIExpression()), !dbg !3535
  %0 = bitcast %struct.rtx_def** %reg to i32**, !dbg !3536
  %1 = load i32*, i32** %0, align 8, !dbg !3536
  %bf.load = load i32, i32* %1, align 8, !dbg !3536
  %bf.clear = and i32 %bf.load, 65535, !dbg !3536
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !3536
  br i1 %cmp, label %if.end, label %return, !dbg !3538

if.end:                                           ; preds = %entry
  %2 = bitcast i32* %1 to %struct.rtx_def*, !dbg !3538
  %3 = bitcast i8* %alt to %struct.bitmap_head_def*, !dbg !3539
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !3539
  %call1 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %3, i32 %call) #6, !dbg !3539
  br label %return, !dbg !3540

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call1, %if.end ], [ 0, %entry ], !dbg !3535
  ret i32 %retval.0, !dbg !3541
}

declare dso_local %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @reversed_condition(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @implies_p(%struct.rtx_def* %a, %struct.rtx_def* %b) unnamed_addr #4 !dbg !3542 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %a, metadata !3544, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b, metadata !3545, metadata !DIExpression()), !dbg !3552
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %a, i64 0, i32 0, !dbg !3553
  %bf.load = load i32, i32* %0, align 8, !dbg !3553
  %bf.clear = and i32 %bf.load, 65535, !dbg !3553
  %cmp = icmp eq i32 %bf.clear, 81, !dbg !3555
  br i1 %cmp, label %if.then, label %if.end21, !dbg !3556

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %a, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3557
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3557
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3557
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3546, metadata !DIExpression()), !dbg !3552
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %a, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3559
  %rt_rtx4 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !3559
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !3559
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3547, metadata !DIExpression()), !dbg !3552
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3560
  %bf.load5 = load i32, i32* %4, align 8, !dbg !3560
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !3560
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !3560
  br i1 %cmp7, label %if.then8, label %if.end11, !dbg !3562

if.then8:                                         ; preds = %if.then
  %call = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %b, %struct.rtx_def* %1, %struct.rtx_def* %3) #6, !dbg !3563
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3550, metadata !DIExpression()), !dbg !3552
  %5 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !3565
  %cmp9 = icmp eq %struct.rtx_def* %call, %5, !dbg !3567
  br i1 %cmp9, label %cleanup, label %if.end11, !dbg !3568

if.end11:                                         ; preds = %if.then8, %if.then
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !3569
  %bf.load12 = load i32, i32* %6, align 8, !dbg !3569
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3569
  %cmp14 = icmp eq i32 %bf.clear13, 37, !dbg !3569
  br i1 %cmp14, label %if.then15, label %if.end21, !dbg !3571

if.then15:                                        ; preds = %if.end11
  %call16 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %b, %struct.rtx_def* %3, %struct.rtx_def* %1) #6, !dbg !3572
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call16, metadata !3550, metadata !DIExpression()), !dbg !3552
  %7 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !3574
  %cmp17 = icmp eq %struct.rtx_def* %call16, %7, !dbg !3576
  br i1 %cmp17, label %cleanup, label %if.end21, !dbg !3577

if.end21:                                         ; preds = %if.end11, %if.then15, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !3578
  %cmp22 = icmp eq %struct.rtx_def* %8, %b, !dbg !3580
  br i1 %cmp22, label %cleanup, label %if.end24, !dbg !3581

if.end24:                                         ; preds = %if.end21
  %bf.load25 = load i32, i32* %0, align 8, !dbg !3582
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !3582
  %idxprom = zext i32 %bf.clear26 to i64, !dbg !3582
  %arrayidx27 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !3582
  %9 = load i32, i32* %arrayidx27, align 4, !dbg !3582
  %cmp28 = icmp eq i32 %9, 1, !dbg !3584
  br i1 %cmp28, label %lor.lhs.false, label %land.lhs.true, !dbg !3585

land.lhs.true:                                    ; preds = %if.end24
  %cmp33 = icmp eq i32 %9, 0, !dbg !3586
  br i1 %cmp33, label %lor.lhs.false, label %cleanup, !dbg !3587

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end24
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %b, i64 0, i32 0, !dbg !3588
  %bf.load34 = load i32, i32* %10, align 8, !dbg !3588
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !3588
  %idxprom36 = zext i32 %bf.clear35 to i64, !dbg !3588
  %arrayidx37 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom36, !dbg !3588
  %11 = load i32, i32* %arrayidx37, align 4, !dbg !3588
  %cmp38 = icmp eq i32 %11, 1, !dbg !3589
  br i1 %cmp38, label %if.end46, label %land.lhs.true39, !dbg !3590

land.lhs.true39:                                  ; preds = %lor.lhs.false
  %cmp44 = icmp eq i32 %11, 0, !dbg !3591
  br i1 %cmp44, label %if.end46, label %cleanup, !dbg !3592

if.end46:                                         ; preds = %land.lhs.true39, %lor.lhs.false
  %arrayidx49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %a, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3593
  %rt_rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !3593
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !3593
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !3546, metadata !DIExpression()), !dbg !3552
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %a, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3594
  %rt_rtx54 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !3594
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !3594
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !3547, metadata !DIExpression()), !dbg !3552
  %arrayidx57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %b, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3595
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !3595
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !3595
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !3548, metadata !DIExpression()), !dbg !3552
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %b, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3596
  %rt_rtx62 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !3596
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !3596
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !3549, metadata !DIExpression()), !dbg !3552
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 0, !dbg !3597
  %bf.load63 = load i32, i32* %18, align 8, !dbg !3597
  %bf.lshr = lshr i32 %bf.load63, 16, !dbg !3597
  %bf.clear64 = and i32 %bf.lshr, 255, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %bf.clear64, metadata !3551, metadata !DIExpression()), !dbg !3552
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 0, !dbg !3598
  %bf.load65 = load i32, i32* %19, align 8, !dbg !3598
  %bf.lshr66 = lshr i32 %bf.load65, 16, !dbg !3598
  %bf.clear67 = and i32 %bf.lshr66, 255, !dbg !3598
  %cmp68 = icmp eq i32 %bf.clear64, %bf.clear67, !dbg !3600
  br i1 %cmp68, label %if.else, label %if.end82, !dbg !3601

if.else:                                          ; preds = %if.end46
  %cmp70 = icmp eq i32 %bf.clear64, 0, !dbg !3602
  br i1 %cmp70, label %if.then71, label %if.end82, !dbg !3604

if.then71:                                        ; preds = %if.else
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 0, !dbg !3605
  %bf.load72 = load i32, i32* %20, align 8, !dbg !3605
  %bf.lshr73 = lshr i32 %bf.load72, 16, !dbg !3605
  %bf.clear74 = and i32 %bf.lshr73, 255, !dbg !3605
  call void @llvm.dbg.value(metadata i32 %bf.clear74, metadata !3551, metadata !DIExpression()), !dbg !3552
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 0, !dbg !3607
  %bf.load75 = load i32, i32* %21, align 8, !dbg !3607
  %bf.lshr76 = lshr i32 %bf.load75, 16, !dbg !3607
  %bf.clear77 = and i32 %bf.lshr76, 255, !dbg !3607
  %cmp78 = icmp eq i32 %bf.clear74, %bf.clear77, !dbg !3609
  %spec.select = select i1 %cmp78, i32 %bf.clear74, i32 0, !dbg !3610
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3551, metadata !DIExpression()), !dbg !3552
  br label %if.end82, !dbg !3611

if.end82:                                         ; preds = %if.end46, %if.else, %if.then71
  %mode.2 = phi i32 [ 0, %if.end46 ], [ %spec.select, %if.then71 ], [ %bf.clear64, %if.else ], !dbg !3612
  call void @llvm.dbg.value(metadata i32 %mode.2, metadata !3551, metadata !DIExpression()), !dbg !3552
  %cmp85 = icmp eq i32 %bf.clear26, 83, !dbg !3613
  br i1 %cmp85, label %land.lhs.true90, label %lor.lhs.false86, !dbg !3615

lor.lhs.false86:                                  ; preds = %if.end82
  %cmp89 = icmp eq i32 %bf.clear26, 85, !dbg !3616
  br i1 %cmp89, label %land.lhs.true90, label %if.end127, !dbg !3617

land.lhs.true90:                                  ; preds = %lor.lhs.false86, %if.end82
  %cmp93 = icmp eq i32 %bf.clear35, 82, !dbg !3618
  br i1 %cmp93, label %if.then98, label %lor.lhs.false94, !dbg !3619

lor.lhs.false94:                                  ; preds = %land.lhs.true90
  %cmp97 = icmp eq i32 %bf.clear35, 84, !dbg !3620
  br i1 %cmp97, label %if.then98, label %if.end127, !dbg !3621

if.then98:                                        ; preds = %lor.lhs.false94, %land.lhs.true90
  %spec.select1 = select i1 %cmp85, %struct.rtx_def* %12, %struct.rtx_def* %14, !dbg !3622
  %spec.select2 = select i1 %cmp85, %struct.rtx_def* %14, %struct.rtx_def* %12, !dbg !3622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select2, metadata !3546, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select1, metadata !3547, metadata !DIExpression()), !dbg !3552
  %opb1.0 = select i1 %cmp93, %struct.rtx_def* %15, %struct.rtx_def* %17, !dbg !3624
  %opb0.0 = select i1 %cmp93, %struct.rtx_def* %17, %struct.rtx_def* %15, !dbg !3624
  call void @llvm.dbg.value(metadata %struct.rtx_def* %opb0.0, metadata !3548, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %opb1.0, metadata !3549, metadata !DIExpression()), !dbg !3552
  %idxprom109 = zext i32 %mode.2 to i64, !dbg !3625
  %arrayidx110 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom109, !dbg !3625
  %22 = load i8, i8* %arrayidx110, align 1, !dbg !3625
  %cmp111 = icmp eq i8 %22, 2, !dbg !3625
  br i1 %cmp111, label %land.lhs.true119, label %lor.lhs.false113, !dbg !3625

lor.lhs.false113:                                 ; preds = %if.then98
  %cmp117 = icmp eq i8 %22, 3, !dbg !3625
  br i1 %cmp117, label %land.lhs.true119, label %if.end126, !dbg !3627

land.lhs.true119:                                 ; preds = %lor.lhs.false113, %if.then98
  %call120 = tail call i32 @rtx_equal_p(%struct.rtx_def* %spec.select1, %struct.rtx_def* %opb1.0) #6, !dbg !3628
  %tobool = icmp eq i32 %call120, 0, !dbg !3628
  br i1 %tobool, label %if.end126, label %land.lhs.true121, !dbg !3629

land.lhs.true121:                                 ; preds = %land.lhs.true119
  %call122 = tail call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %mode.2, %struct.rtx_def* %opb0.0, %struct.rtx_def* %spec.select2) #6, !dbg !3630
  %23 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !3631
  %cmp123 = icmp eq %struct.rtx_def* %call122, %23, !dbg !3632
  br i1 %cmp123, label %cleanup, label %if.end126, !dbg !3633

if.end126:                                        ; preds = %land.lhs.true119, %land.lhs.true121, %lor.lhs.false113
  br label %cleanup, !dbg !3634

if.end127:                                        ; preds = %lor.lhs.false94, %lor.lhs.false86
  %cmp130 = icmp eq i32 %bf.clear35, 80, !dbg !3635
  br i1 %cmp130, label %land.lhs.true132, label %if.end160, !dbg !3637

land.lhs.true132:                                 ; preds = %if.end127
  br i1 %cmp85, label %if.then152, label %lor.lhs.false137, !dbg !3638

lor.lhs.false137:                                 ; preds = %land.lhs.true132
  %cmp140 = icmp eq i32 %bf.clear26, 87, !dbg !3639
  br i1 %cmp140, label %if.then152, label %lor.lhs.false142, !dbg !3640

lor.lhs.false142:                                 ; preds = %lor.lhs.false137
  %cmp145 = icmp eq i32 %bf.clear26, 85, !dbg !3641
  br i1 %cmp145, label %if.then152, label %lor.lhs.false147, !dbg !3642

lor.lhs.false147:                                 ; preds = %lor.lhs.false142
  %cmp150 = icmp eq i32 %bf.clear26, 89, !dbg !3643
  br i1 %cmp150, label %if.then152, label %if.end160, !dbg !3644

if.then152:                                       ; preds = %lor.lhs.false147, %lor.lhs.false142, %lor.lhs.false137, %land.lhs.true132
  %call153 = tail call i32 @rtx_equal_p(%struct.rtx_def* %12, %struct.rtx_def* %15) #6, !dbg !3645
  %tobool154 = icmp eq i32 %call153, 0, !dbg !3645
  br i1 %tobool154, label %if.end160, label %land.lhs.true155, !dbg !3648

land.lhs.true155:                                 ; preds = %if.then152
  %call156 = tail call i32 @rtx_equal_p(%struct.rtx_def* %14, %struct.rtx_def* %17) #6, !dbg !3649
  %tobool157 = icmp eq i32 %call156, 0, !dbg !3649
  br i1 %tobool157, label %if.end160, label %cleanup, !dbg !3650

if.end160:                                        ; preds = %land.lhs.true155, %if.then152, %lor.lhs.false147, %if.end127
  %bf.load161 = load i32, i32* %0, align 8, !dbg !3651
  %bf.clear162 = and i32 %bf.load161, 65535, !dbg !3651
  %cmp163 = icmp eq i32 %bf.clear162, 80, !dbg !3653
  %24 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3654
  %cmp166 = icmp eq %struct.rtx_def* %14, %24, !dbg !3655
  %or.cond = and i1 %cmp163, %cmp166, !dbg !3656
  br i1 %or.cond, label %if.then168, label %if.end188, !dbg !3656

if.then168:                                       ; preds = %if.end160
  %bf.load169 = load i32, i32* %10, align 8, !dbg !3657
  %bf.clear170 = and i32 %bf.load169, 65535, !dbg !3657
  %cmp171 = icmp eq i32 %bf.clear170, 87, !dbg !3660
  %cmp174 = icmp eq %struct.rtx_def* %17, %14, !dbg !3661
  %or.cond3 = and i1 %cmp171, %cmp174, !dbg !3662
  br i1 %or.cond3, label %if.then184, label %lor.lhs.false176, !dbg !3662

lor.lhs.false176:                                 ; preds = %if.then168
  %cmp179 = icmp eq i32 %bf.clear170, 86, !dbg !3663
  %25 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !3664
  %cmp182 = icmp eq %struct.rtx_def* %17, %25, !dbg !3665
  %or.cond4 = and i1 %cmp179, %cmp182, !dbg !3666
  br i1 %or.cond4, label %if.then184, label %if.end188, !dbg !3666

if.then184:                                       ; preds = %lor.lhs.false176, %if.then168
  %call185 = tail call i32 @rtx_equal_p(%struct.rtx_def* %12, %struct.rtx_def* %15) #6, !dbg !3667
  %conv186 = trunc i32 %call185 to i8, !dbg !3667
  br label %cleanup, !dbg !3668

if.end188:                                        ; preds = %lor.lhs.false176, %if.end160
  br i1 %cmp163, label %land.lhs.true193, label %if.end249, !dbg !3669

land.lhs.true193:                                 ; preds = %if.end188
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 0, !dbg !3671
  %bf.load194 = load i32, i32* %26, align 8, !dbg !3671
  %bf.clear195 = and i32 %bf.load194, 65535, !dbg !3671
  %cmp196 = icmp eq i32 %bf.clear195, 30, !dbg !3671
  br i1 %cmp196, label %land.lhs.true198, label %if.end249, !dbg !3672

land.lhs.true198:                                 ; preds = %land.lhs.true193
  %bf.load199 = load i32, i32* %10, align 8, !dbg !3673
  %bf.clear200 = and i32 %bf.load199, 65535, !dbg !3673
  %cmp201 = icmp eq i32 %bf.clear200, 89, !dbg !3674
  %27 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !3675
  %cmp204 = icmp eq %struct.rtx_def* %17, %27, !dbg !3676
  %or.cond5 = and i1 %cmp201, %cmp204, !dbg !3677
  br i1 %or.cond5, label %land.lhs.true206, label %if.end249, !dbg !3677

land.lhs.true206:                                 ; preds = %land.lhs.true198
  %bf.load207 = load i32, i32* %19, align 8, !dbg !3678
  %bf.clear208 = and i32 %bf.load207, 65535, !dbg !3678
  %cmp209 = icmp eq i32 %bf.clear208, 49, !dbg !3679
  br i1 %cmp209, label %land.lhs.true211, label %if.end249, !dbg !3680

land.lhs.true211:                                 ; preds = %land.lhs.true206
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3681
  %29 = bitcast %union.rtunion_def* %28 to i32**, !dbg !3681
  %30 = load i32*, i32** %29, align 8, !dbg !3681
  %bf.load216 = load i32, i32* %30, align 8, !dbg !3681
  %bf.clear217 = and i32 %bf.load216, 65535, !dbg !3681
  %cmp218 = icmp eq i32 %bf.clear217, 30, !dbg !3681
  br i1 %cmp218, label %land.lhs.true220, label %if.end249, !dbg !3682

land.lhs.true220:                                 ; preds = %land.lhs.true211
  %u225 = getelementptr inbounds i32, i32* %30, i64 2, !dbg !3683
  %arrayidx226 = bitcast i32* %u225 to i64*, !dbg !3683
  %31 = load i64, i64* %arrayidx226, align 8, !dbg !3683
  %cmp227 = icmp eq i64 %31, 9223372036854775807, !dbg !3684
  br i1 %cmp227, label %if.end249, label %land.lhs.true229, !dbg !3685

land.lhs.true229:                                 ; preds = %land.lhs.true220
  %add = add nsw i64 %31, 1, !dbg !3686
  %u237 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, !dbg !3687
  %arrayidx239 = bitcast %union.u* %u237 to i64*, !dbg !3687
  %32 = load i64, i64* %arrayidx239, align 8, !dbg !3687
  %sub = sub nsw i64 0, %32, !dbg !3688
  %cmp240 = icmp eq i64 %add, %sub, !dbg !3689
  br i1 %cmp240, label %if.then242, label %if.end249, !dbg !3690

if.then242:                                       ; preds = %land.lhs.true229
  %arrayidx245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3691
  %rt_rtx246 = bitcast %union.rtunion_def* %arrayidx245 to %struct.rtx_def**, !dbg !3691
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx246, align 8, !dbg !3691
  %call247 = tail call i32 @rtx_equal_p(%struct.rtx_def* %12, %struct.rtx_def* %33) #6, !dbg !3692
  %conv248 = trunc i32 %call247 to i8, !dbg !3692
  br label %cleanup, !dbg !3693

if.end249:                                        ; preds = %land.lhs.true220, %land.lhs.true229, %land.lhs.true211, %land.lhs.true206, %land.lhs.true198, %land.lhs.true193, %if.end188
  br i1 %cmp163, label %land.lhs.true254, label %if.end368, !dbg !3694

land.lhs.true254:                                 ; preds = %if.end249
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 0, !dbg !3696
  %bf.load255 = load i32, i32* %34, align 8, !dbg !3696
  %bf.clear256 = and i32 %bf.load255, 65535, !dbg !3696
  %cmp257 = icmp eq i32 %bf.clear256, 30, !dbg !3696
  br i1 %cmp257, label %if.then259, label %if.end368, !dbg !3697

if.then259:                                       ; preds = %land.lhs.true254
  %bf.load260 = load i32, i32* %10, align 8, !dbg !3698
  %bf.clear261 = and i32 %bf.load260, 65535, !dbg !3698
  %cmp262 = icmp eq i32 %bf.clear261, 87, !dbg !3701
  br i1 %cmp262, label %land.lhs.true264, label %if.end313, !dbg !3702

land.lhs.true264:                                 ; preds = %if.then259
  %bf.load265 = load i32, i32* %19, align 8, !dbg !3703
  %bf.clear266 = and i32 %bf.load265, 65535, !dbg !3703
  %cmp267 = icmp eq i32 %bf.clear266, 49, !dbg !3704
  %cmp270 = icmp eq %struct.rtx_def* %17, %24, !dbg !3705
  %or.cond6 = and i1 %cmp267, %cmp270, !dbg !3706
  br i1 %or.cond6, label %land.lhs.true272, label %if.end313, !dbg !3706

land.lhs.true272:                                 ; preds = %land.lhs.true264
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3707
  %36 = bitcast %union.rtunion_def* %35 to i32**, !dbg !3707
  %37 = load i32*, i32** %36, align 8, !dbg !3707
  %bf.load277 = load i32, i32* %37, align 8, !dbg !3707
  %bf.clear278 = and i32 %bf.load277, 65535, !dbg !3707
  %cmp279 = icmp eq i32 %bf.clear278, 30, !dbg !3707
  br i1 %cmp279, label %land.lhs.true281, label %if.end313, !dbg !3708

land.lhs.true281:                                 ; preds = %land.lhs.true272
  %rt_rtx285 = bitcast %union.rtunion_def* %35 to %struct.rtx_def**, !dbg !3709
  %u286 = getelementptr inbounds i32, i32* %37, i64 2, !dbg !3709
  %arrayidx288 = bitcast i32* %u286 to i64*, !dbg !3709
  %38 = load i64, i64* %arrayidx288, align 8, !dbg !3709
  %cmp289 = icmp eq i64 %38, -9223372036854775808, !dbg !3710
  br i1 %cmp289, label %if.end313, label %land.lhs.true291, !dbg !3711

land.lhs.true291:                                 ; preds = %land.lhs.true281
  %arrayidx294 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3712
  %rt_rtx295 = bitcast %union.rtunion_def* %arrayidx294 to %struct.rtx_def**, !dbg !3712
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx295, align 8, !dbg !3712
  %call296 = tail call i32 @rtx_equal_p(%struct.rtx_def* %39, %struct.rtx_def* %12) #6, !dbg !3713
  %tobool297 = icmp eq i32 %call296, 0, !dbg !3713
  br i1 %tobool297, label %land.lhs.true291.if.end313_crit_edge, label %if.then298, !dbg !3714

land.lhs.true291.if.end313_crit_edge:             ; preds = %land.lhs.true291
  %bf.load314.pre = load i32, i32* %10, align 8, !dbg !3715
  br label %if.end313, !dbg !3714

if.then298:                                       ; preds = %land.lhs.true291
  %u299 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, !dbg !3717
  %arrayidx301 = bitcast %union.u* %u299 to i64*, !dbg !3717
  %40 = load i64, i64* %arrayidx301, align 8, !dbg !3717
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx285, align 8, !dbg !3718
  %u306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i64 0, i32 1, !dbg !3718
  %arrayidx308 = bitcast %union.u* %u306 to i64*, !dbg !3718
  %42 = load i64, i64* %arrayidx308, align 8, !dbg !3718
  %sub309 = sub nsw i64 0, %42, !dbg !3719
  %cmp310 = icmp eq i64 %40, %sub309, !dbg !3720
  %conv312 = zext i1 %cmp310 to i8, !dbg !3717
  br label %cleanup, !dbg !3721

if.end313:                                        ; preds = %land.lhs.true291.if.end313_crit_edge, %land.lhs.true281, %land.lhs.true272, %land.lhs.true264, %if.then259
  %bf.load314 = phi i32 [ %bf.load314.pre, %land.lhs.true291.if.end313_crit_edge ], [ %bf.load260, %land.lhs.true281 ], [ %bf.load260, %land.lhs.true272 ], [ %bf.load260, %land.lhs.true264 ], [ %bf.load260, %if.then259 ], !dbg !3715
  %bf.clear315 = and i32 %bf.load314, 65535, !dbg !3715
  %cmp316 = icmp eq i32 %bf.clear315, 86, !dbg !3722
  br i1 %cmp316, label %land.lhs.true318, label %if.end368, !dbg !3723

land.lhs.true318:                                 ; preds = %if.end313
  %bf.load319 = load i32, i32* %19, align 8, !dbg !3724
  %bf.clear320 = and i32 %bf.load319, 65535, !dbg !3724
  %cmp321 = icmp eq i32 %bf.clear320, 49, !dbg !3725
  %43 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !3726
  %cmp324 = icmp eq %struct.rtx_def* %17, %43, !dbg !3727
  %or.cond7 = and i1 %cmp321, %cmp324, !dbg !3728
  br i1 %or.cond7, label %land.lhs.true326, label %if.end368, !dbg !3728

land.lhs.true326:                                 ; preds = %land.lhs.true318
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3729
  %45 = bitcast %union.rtunion_def* %44 to i32**, !dbg !3729
  %46 = load i32*, i32** %45, align 8, !dbg !3729
  %bf.load331 = load i32, i32* %46, align 8, !dbg !3729
  %bf.clear332 = and i32 %bf.load331, 65535, !dbg !3729
  %cmp333 = icmp eq i32 %bf.clear332, 30, !dbg !3729
  br i1 %cmp333, label %land.lhs.true335, label %if.end368, !dbg !3730

land.lhs.true335:                                 ; preds = %land.lhs.true326
  %rt_rtx339 = bitcast %union.rtunion_def* %44 to %struct.rtx_def**, !dbg !3731
  %u340 = getelementptr inbounds i32, i32* %46, i64 2, !dbg !3731
  %arrayidx342 = bitcast i32* %u340 to i64*, !dbg !3731
  %47 = load i64, i64* %arrayidx342, align 8, !dbg !3731
  %cmp343 = icmp eq i64 %47, -9223372036854775808, !dbg !3732
  br i1 %cmp343, label %if.end368, label %land.lhs.true345, !dbg !3733

land.lhs.true345:                                 ; preds = %land.lhs.true335
  %arrayidx348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3734
  %rt_rtx349 = bitcast %union.rtunion_def* %arrayidx348 to %struct.rtx_def**, !dbg !3734
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx349, align 8, !dbg !3734
  %call350 = tail call i32 @rtx_equal_p(%struct.rtx_def* %48, %struct.rtx_def* %12) #6, !dbg !3735
  %tobool351 = icmp eq i32 %call350, 0, !dbg !3735
  br i1 %tobool351, label %if.end368, label %if.then352, !dbg !3736

if.then352:                                       ; preds = %land.lhs.true345
  %u353 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, !dbg !3737
  %arrayidx355 = bitcast %union.u* %u353 to i64*, !dbg !3737
  %49 = load i64, i64* %arrayidx355, align 8, !dbg !3737
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx339, align 8, !dbg !3738
  %u360 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i64 0, i32 1, !dbg !3738
  %arrayidx362 = bitcast %union.u* %u360 to i64*, !dbg !3738
  %51 = load i64, i64* %arrayidx362, align 8, !dbg !3738
  %sub363 = sub nsw i64 0, %51, !dbg !3739
  %cmp364 = icmp eq i64 %49, %sub363, !dbg !3740
  %conv366 = zext i1 %cmp364 to i8, !dbg !3737
  br label %cleanup, !dbg !3741

if.end368:                                        ; preds = %land.lhs.true345, %land.lhs.true335, %if.end313, %land.lhs.true318, %land.lhs.true326, %land.lhs.true254, %if.end249
  %bf.load369 = load i32, i32* %0, align 8, !dbg !3742
  %bf.clear370 = and i32 %bf.load369, 65535, !dbg !3742
  %cmp371 = icmp eq i32 %bf.clear370, 83, !dbg !3744
  br i1 %cmp371, label %land.lhs.true378, label %lor.lhs.false373, !dbg !3745

lor.lhs.false373:                                 ; preds = %if.end368
  %cmp376 = icmp eq i32 %bf.clear370, 82, !dbg !3746
  br i1 %cmp376, label %land.lhs.true378, label %cleanup, !dbg !3747

land.lhs.true378:                                 ; preds = %lor.lhs.false373, %if.end368
  %52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 0, !dbg !3748
  %bf.load379 = load i32, i32* %52, align 8, !dbg !3748
  %bf.clear380 = and i32 %bf.load379, 65535, !dbg !3748
  %cmp381 = icmp eq i32 %bf.clear380, 30, !dbg !3748
  br i1 %cmp381, label %land.lhs.true383, label %cleanup, !dbg !3749

land.lhs.true383:                                 ; preds = %land.lhs.true378
  %53 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !3750
  %cmp389 = icmp eq %struct.rtx_def* %14, %53, !dbg !3751
  %or.cond8 = and i1 %cmp371, %cmp389, !dbg !3752
  br i1 %or.cond8, label %land.lhs.true397, label %lor.lhs.false391, !dbg !3752

lor.lhs.false391:                                 ; preds = %land.lhs.true383
  %u392 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, !dbg !3753
  %arrayidx394 = bitcast %union.u* %u392 to i64*, !dbg !3753
  %54 = load i64, i64* %arrayidx394, align 8, !dbg !3753
  %cmp395 = icmp sgt i64 %54, -1, !dbg !3754
  br i1 %cmp395, label %land.lhs.true397, label %cleanup, !dbg !3755

land.lhs.true397:                                 ; preds = %land.lhs.true383, %lor.lhs.false391
  %bf.load398 = load i32, i32* %10, align 8, !dbg !3756
  %bf.clear399 = and i32 %bf.load398, 65535, !dbg !3756
  %cmp400 = icmp eq i32 %bf.clear399, 89, !dbg !3757
  br i1 %cmp400, label %land.lhs.true402, label %cleanup, !dbg !3758

land.lhs.true402:                                 ; preds = %land.lhs.true397
  %55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 0, !dbg !3759
  %bf.load403 = load i32, i32* %55, align 8, !dbg !3759
  %bf.clear404 = and i32 %bf.load403, 65535, !dbg !3759
  %cmp405 = icmp eq i32 %bf.clear404, 30, !dbg !3759
  br i1 %cmp405, label %land.lhs.true407, label %cleanup, !dbg !3760

land.lhs.true407:                                 ; preds = %land.lhs.true402
  %call408 = tail call i32 @rtx_equal_p(%struct.rtx_def* %12, %struct.rtx_def* %15) #6, !dbg !3761
  %tobool409 = icmp eq i32 %call408, 0, !dbg !3761
  br i1 %tobool409, label %cleanup, label %if.then410, !dbg !3762

if.then410:                                       ; preds = %land.lhs.true407
  %u411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, !dbg !3763
  %arrayidx413 = bitcast %union.u* %u411 to i64*, !dbg !3763
  %56 = load i64, i64* %arrayidx413, align 8, !dbg !3763
  %.lobit = lshr i64 %56, 63, !dbg !3763
  %57 = trunc i64 %.lobit to i8, !dbg !3763
  br label %cleanup, !dbg !3764

cleanup:                                          ; preds = %land.lhs.true, %land.lhs.true39, %land.lhs.true155, %land.lhs.true407, %lor.lhs.false373, %land.lhs.true378, %lor.lhs.false391, %land.lhs.true397, %land.lhs.true402, %land.lhs.true121, %if.end21, %if.then15, %if.then8, %if.then410, %if.then352, %if.then298, %if.then242, %if.then184, %if.end126
  %retval.0 = phi i8 [ 0, %if.end126 ], [ %conv186, %if.then184 ], [ %conv248, %if.then242 ], [ %conv312, %if.then298 ], [ %conv366, %if.then352 ], [ %57, %if.then410 ], [ 1, %if.then8 ], [ 1, %if.then15 ], [ 1, %if.end21 ], [ 0, %land.lhs.true39 ], [ 0, %land.lhs.true ], [ 1, %land.lhs.true121 ], [ 1, %land.lhs.true155 ], [ 0, %land.lhs.true407 ], [ 0, %land.lhs.true402 ], [ 0, %land.lhs.true397 ], [ 0, %lor.lhs.false391 ], [ 0, %land.lhs.true378 ], [ 0, %lor.lhs.false373 ], !dbg !3552
  ret i8 %retval.0, !dbg !3765
}

; Function Attrs: nounwind uwtable
define dso_local void @find_simple_exit(%struct.loop* %loop, %struct.niter_desc* %desc) local_unnamed_addr #4 !dbg !3766 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %act = alloca %struct.niter_desc, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3770, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata %struct.niter_desc* %desc, metadata !3771, metadata !DIExpression()), !dbg !3784
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !3785
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3785
  %1 = bitcast %struct.niter_desc* %act to i8*, !dbg !3786
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %1) #8, !dbg !3786
  call void @llvm.dbg.value(metadata i8 0, metadata !3776, metadata !DIExpression()), !dbg !3784
  %2 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3787
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3787
  %simple_p = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 2, !dbg !3788
  store i8 0, i8* %simple_p, align 8, !dbg !3789
  %call = tail call %struct.basic_block_def** @get_loop_body(%struct.loop* %loop) #6, !dbg !3790
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !3773, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i32 0, metadata !3772, metadata !DIExpression()), !dbg !3784
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !3791
  %3 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3794
  %4 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3794
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3794
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3797
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3797
  %simple_p7 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %act, i64 0, i32 2, !dbg !3799
  %const_iter = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %act, i64 0, i32 3, !dbg !3802
  %const_iter14 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 3, !dbg !3802
  %niter = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %act, i64 0, i32 4, !dbg !3802
  %niter16 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 4, !dbg !3802
  %infinite = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %act, i64 0, i32 8, !dbg !3806
  %infinite23 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 8, !dbg !3806
  %8 = bitcast %struct.niter_desc* %desc to i8*, !dbg !3808
  br label %for.cond, !dbg !3809

for.cond:                                         ; preds = %for.inc28, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc28 ], [ 0, %entry ], !dbg !3810
  %any.0 = phi i8 [ %any.1.lcssa, %for.inc28 ], [ 0, %entry ], !dbg !3811
  call void @llvm.dbg.value(metadata i8 %any.0, metadata !3776, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3772, metadata !DIExpression()), !dbg !3784
  %9 = load i32, i32* %num_nodes, align 4, !dbg !3812
  %10 = zext i32 %9 to i64, !dbg !3813
  %cmp = icmp ult i64 %indvars.iv, %10, !dbg !3813
  br i1 %cmp, label %for.body, label %for.end29, !dbg !3814

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !3815
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %indvars.iv, !dbg !3815
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !3815
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 1, !dbg !3815
  %call1 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3815
  %12 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 0, !dbg !3815
  store i32 %12, i32* %4, align 8, !dbg !3815
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 1, !dbg !3815
  store %struct.VEC_edge_gc** %13, %struct.VEC_edge_gc*** %5, align 8, !dbg !3815
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %3, i64 16, i1 false), !dbg !3815
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !3815
  br label %for.cond2, !dbg !3815

for.cond2:                                        ; preds = %for.inc, %for.body
  %any.1 = phi i8 [ %any.0, %for.body ], [ %any.3, %for.inc ], !dbg !3811
  call void @llvm.dbg.value(metadata i8 %any.1, metadata !3776, metadata !DIExpression()), !dbg !3784
  %14 = load i32, i32* %6, align 8, !dbg !3816
  %15 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %7, align 8, !dbg !3816
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3774, metadata !DIExpression(DW_OP_deref)), !dbg !3784
  %call3 = call fastcc zeroext i8 @ei_cond(i32 %14, %struct.VEC_edge_gc** %15, %struct.edge_def** nonnull %e) #7, !dbg !3816
  %tobool = icmp eq i8 %call3, 0, !dbg !3815
  br i1 %tobool, label %for.inc28, label %for.body4, !dbg !3815

for.body4:                                        ; preds = %for.cond2
  %16 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3817
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !3774, metadata !DIExpression()), !dbg !3784
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %16, i64 0, i32 1, !dbg !3819
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3819
  %call5 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %loop, %struct.basic_block_def* %17) #6, !dbg !3820
  %tobool6 = icmp eq i8 %call5, 0, !dbg !3820
  br i1 %tobool6, label %if.end, label %for.inc, !dbg !3821

if.end:                                           ; preds = %for.body4
  %18 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3822
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !3774, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata %struct.niter_desc* %act, metadata !3775, metadata !DIExpression(DW_OP_deref)), !dbg !3784
  call fastcc void @check_simple_exit(%struct.loop* %loop, %struct.edge_def* %18, %struct.niter_desc* nonnull %act) #7, !dbg !3823
  %19 = load i8, i8* %simple_p7, align 8, !dbg !3824
  %tobool8 = icmp eq i8 %19, 0, !dbg !3825
  br i1 %tobool8, label %for.inc, label %if.end10, !dbg !3826

if.end10:                                         ; preds = %if.end
  %tobool11 = icmp eq i8 %any.1, 0, !dbg !3827
  br i1 %tobool11, label %if.end27, label %if.else, !dbg !3828

if.else:                                          ; preds = %if.end10
  %20 = load i8, i8* %const_iter, align 1, !dbg !3829
  %tobool13 = icmp eq i8 %20, 0, !dbg !3830
  br i1 %tobool13, label %for.inc, label %lor.lhs.false, !dbg !3831

lor.lhs.false:                                    ; preds = %if.else
  %21 = load i8, i8* %const_iter14, align 1, !dbg !3832
  %tobool15 = icmp eq i8 %21, 0, !dbg !3833
  br i1 %tobool15, label %if.end20, label %land.lhs.true, !dbg !3834

land.lhs.true:                                    ; preds = %lor.lhs.false
  %22 = load i64, i64* %niter, align 8, !dbg !3835
  %23 = load i64, i64* %niter16, align 8, !dbg !3836
  %cmp17 = icmp ult i64 %22, %23, !dbg !3837
  br i1 %cmp17, label %if.end20, label %for.inc, !dbg !3838

if.end20:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %24 = load %struct.rtx_def*, %struct.rtx_def** %infinite, align 8, !dbg !3839
  %tobool21 = icmp eq %struct.rtx_def* %24, null, !dbg !3840
  br i1 %tobool21, label %if.end27, label %land.lhs.true22, !dbg !3841

land.lhs.true22:                                  ; preds = %if.end20
  %25 = load %struct.rtx_def*, %struct.rtx_def** %infinite23, align 8, !dbg !3842
  %tobool24 = icmp eq %struct.rtx_def* %25, null, !dbg !3843
  br i1 %tobool24, label %for.inc, label %if.end27, !dbg !3844

if.end27:                                         ; preds = %land.lhs.true22, %if.end20, %if.end10
  %any.2 = phi i8 [ 1, %if.end10 ], [ %any.1, %land.lhs.true22 ], [ %any.1, %if.end20 ], !dbg !3784
  call void @llvm.dbg.value(metadata i8 %any.2, metadata !3776, metadata !DIExpression()), !dbg !3784
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* nonnull align 8 %1, i64 80, i1 false), !dbg !3845
  br label %for.inc, !dbg !3846

for.inc:                                          ; preds = %land.lhs.true, %land.lhs.true22, %if.else, %if.end, %for.body4, %if.end27
  %any.3 = phi i8 [ %any.2, %if.end27 ], [ %any.1, %for.body4 ], [ %any.1, %if.end ], [ %any.1, %land.lhs.true ], [ %any.1, %if.else ], [ %any.1, %land.lhs.true22 ], !dbg !3811
  call void @llvm.dbg.value(metadata i8 %any.3, metadata !3776, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3777, metadata !DIExpression(DW_OP_deref)), !dbg !3784
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3816
  br label %for.cond2, !dbg !3816, !llvm.loop !3847

for.inc28:                                        ; preds = %for.cond2
  %any.1.lcssa = phi i8 [ %any.1, %for.cond2 ], !dbg !3811
  call void @llvm.dbg.value(metadata i8 %any.1.lcssa, metadata !3776, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i8 %any.1.lcssa, metadata !3776, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i8 %any.1.lcssa, metadata !3776, metadata !DIExpression()), !dbg !3784
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3849
  br label %for.cond, !dbg !3850, !llvm.loop !3851

for.end29:                                        ; preds = %for.cond
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3853
  %tobool30 = icmp eq %struct._IO_FILE* %26, null, !dbg !3853
  br i1 %tobool30, label %if.end68, label %if.then31, !dbg !3855

if.then31:                                        ; preds = %for.end29
  %27 = load i8, i8* %simple_p, align 8, !dbg !3856
  %tobool33 = icmp eq i8 %27, 0, !dbg !3859
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !3860
  %28 = load i32, i32* %num, align 8, !dbg !3860
  br i1 %tobool33, label %if.else64, label %if.then34, !dbg !3861

if.then34:                                        ; preds = %if.then31
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %26, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i32 %28) #6, !dbg !3862
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3864
  %out_edge = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 0, !dbg !3865
  %30 = load %struct.edge_def*, %struct.edge_def** %out_edge, align 8, !dbg !3865
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %30, i64 0, i32 0, !dbg !3866
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3866
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %31, i64 0, i32 9, !dbg !3867
  %32 = load i32, i32* %index, align 8, !dbg !3867
  %dest37 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %30, i64 0, i32 1, !dbg !3868
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %dest37, align 8, !dbg !3868
  %index38 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i64 0, i32 9, !dbg !3869
  %34 = load i32, i32* %index38, align 8, !dbg !3869
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i32 %32, i32 %34) #6, !dbg !3870
  %assumptions = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 6, !dbg !3871
  %35 = load %struct.rtx_def*, %struct.rtx_def** %assumptions, align 8, !dbg !3871
  %tobool40 = icmp eq %struct.rtx_def* %35, null, !dbg !3873
  br i1 %tobool40, label %if.end45, label %if.then41, !dbg !3874

if.then41:                                        ; preds = %if.then34
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3875
  %call42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3877
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3878
  %38 = load %struct.rtx_def*, %struct.rtx_def** %assumptions, align 8, !dbg !3879
  call void @print_rtl(%struct._IO_FILE* %37, %struct.rtx_def* %38) #6, !dbg !3880
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3881
  %call44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3882
  br label %if.end45, !dbg !3883

if.end45:                                         ; preds = %if.then34, %if.then41
  %noloop_assumptions = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 7, !dbg !3884
  %40 = load %struct.rtx_def*, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !3884
  %tobool46 = icmp eq %struct.rtx_def* %40, null, !dbg !3886
  br i1 %tobool46, label %if.end51, label %if.then47, !dbg !3887

if.then47:                                        ; preds = %if.end45
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3888
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !3890
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3891
  %43 = load %struct.rtx_def*, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !3892
  call void @print_rtl(%struct._IO_FILE* %42, %struct.rtx_def* %43) #6, !dbg !3893
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3894
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3895
  br label %if.end51, !dbg !3896

if.end51:                                         ; preds = %if.end45, %if.then47
  %45 = load %struct.rtx_def*, %struct.rtx_def** %infinite23, align 8, !dbg !3897
  %tobool53 = icmp eq %struct.rtx_def* %45, null, !dbg !3899
  br i1 %tobool53, label %if.end58, label %if.then54, !dbg !3900

if.then54:                                        ; preds = %if.end51
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3901
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !3903
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3904
  %48 = load %struct.rtx_def*, %struct.rtx_def** %infinite23, align 8, !dbg !3905
  call void @print_rtl(%struct._IO_FILE* %47, %struct.rtx_def* %48) #6, !dbg !3906
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3907
  %call57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3908
  br label %if.end58, !dbg !3909

if.end58:                                         ; preds = %if.end51, %if.then54
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3910
  %call59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !3911
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3912
  %niter_expr = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 11, !dbg !3913
  %52 = load %struct.rtx_def*, %struct.rtx_def** %niter_expr, align 8, !dbg !3913
  call void @print_rtl(%struct._IO_FILE* %51, %struct.rtx_def* %52) #6, !dbg !3914
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3915
  %call60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3916
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3917
  %call61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !3918
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3919
  %niter_max = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 5, !dbg !3920
  %56 = load i64, i64* %niter_max, align 8, !dbg !3920
  %call62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i64 %56) #6, !dbg !3921
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3922
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3923
  br label %if.end68, !dbg !3924

if.else64:                                        ; preds = %if.then31
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %26, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i64 0, i64 0), i32 %28) #6, !dbg !3925
  br label %if.end68

if.end68:                                         ; preds = %for.end29, %if.end58, %if.else64
  %58 = bitcast %struct.basic_block_def** %call to i8*, !dbg !3926
  call void @free(i8* %58) #6, !dbg !3927
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3928
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %1) #8, !dbg !3928
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3928
  ret void, !dbg !3928
}

declare dso_local %struct.basic_block_def** @get_loop_body(%struct.loop*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !3929 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !3933, metadata !DIExpression()), !dbg !3935
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !3936
  store i32 0, i32* %index, align 8, !dbg !3937
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !3938
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !3939
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !3940
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !3940
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !3940
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !3941 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !3947, metadata !DIExpression()), !dbg !3948
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !3949
  %tobool = icmp eq i8 %call, 0, !dbg !3949
  br i1 %tobool, label %if.then, label %if.else, !dbg !3951

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !3952
  br label %return, !dbg !3954

if.else:                                          ; preds = %entry
  br label %return, !dbg !3955

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !3957
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !3957
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !3957
  ret i8 %retval.0, !dbg !3958
}

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @check_simple_exit(%struct.loop* %loop, %struct.edge_def* %e, %struct.niter_desc* %desc) unnamed_addr #4 !dbg !3959 {
entry:
  %at = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3963, metadata !DIExpression()), !dbg !3970
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3964, metadata !DIExpression()), !dbg !3970
  call void @llvm.dbg.value(metadata %struct.niter_desc* %desc, metadata !3965, metadata !DIExpression()), !dbg !3970
  %0 = bitcast %struct.rtx_def** %at to i8*, !dbg !3971
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3971
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !3972
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3972
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !3966, metadata !DIExpression()), !dbg !3970
  %simple_p = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 2, !dbg !3973
  store i8 0, i8* %simple_p, align 8, !dbg !3974
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 3, !dbg !3975
  %2 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !3975
  %cmp = icmp eq %struct.loop* %2, %loop, !dbg !3977
  br i1 %cmp, label %if.end, label %cleanup, !dbg !3978

if.end:                                           ; preds = %entry
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !3979
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3979
  %call = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %3, %struct.basic_block_def* %1) #6, !dbg !3981
  %tobool = icmp eq i8 %call, 0, !dbg !3981
  br i1 %tobool, label %cleanup, label %if.end2, !dbg !3982

if.end2:                                          ; preds = %if.end
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 7, !dbg !3983
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3983
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3983
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !3983
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3983
  %call3 = tail call i32 @any_condjump_p(%struct.rtx_def* %5) #6, !dbg !3985
  %tobool4 = icmp eq i32 %call3, 0, !dbg !3985
  br i1 %tobool4, label %cleanup, label %if.end6, !dbg !3986

if.end6:                                          ; preds = %if.end2
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 1, !dbg !3987
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3987
  %tobool7 = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !3987
  br i1 %tobool7, label %cond.end, label %cond.true, !dbg !3987

cond.true:                                        ; preds = %if.end6
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !3987
  br label %cond.end, !dbg !3987

cond.end:                                         ; preds = %if.end6, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end6 ], !dbg !3987
  %call9 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #7, !dbg !3987
  call void @llvm.dbg.value(metadata %struct.edge_def* %call9, metadata !3969, metadata !DIExpression()), !dbg !3970
  %cmp10 = icmp eq %struct.edge_def* %call9, %e, !dbg !3988
  br i1 %cmp10, label %if.then11, label %if.end21, !dbg !3990

if.then11:                                        ; preds = %cond.end
  %7 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3991
  %tobool13 = icmp eq %struct.VEC_edge_gc* %7, null, !dbg !3991
  br i1 %tobool13, label %cond.end18, label %cond.true14, !dbg !3991

cond.true14:                                      ; preds = %if.then11
  %base16 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !3991
  br label %cond.end18, !dbg !3991

cond.end18:                                       ; preds = %if.then11, %cond.true14
  %cond19 = phi %struct.VEC_edge_base* [ %base16, %cond.true14 ], [ null, %if.then11 ], !dbg !3991
  %call20 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond19, i32 1) #7, !dbg !3991
  call void @llvm.dbg.value(metadata %struct.edge_def* %call20, metadata !3969, metadata !DIExpression()), !dbg !3970
  br label %if.end21, !dbg !3992

if.end21:                                         ; preds = %cond.end18, %cond.end
  %ein.0 = phi %struct.edge_def* [ %call20, %cond.end18 ], [ %call9, %cond.end ], !dbg !3970
  call void @llvm.dbg.value(metadata %struct.edge_def* %ein.0, metadata !3969, metadata !DIExpression()), !dbg !3970
  %out_edge = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 0, !dbg !3993
  store %struct.edge_def* %e, %struct.edge_def** %out_edge, align 8, !dbg !3994
  %in_edge = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 1, !dbg !3995
  store %struct.edge_def* %ein.0, %struct.edge_def** %in_edge, align 8, !dbg !3996
  %src22 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %ein.0, i64 0, i32 0, !dbg !3997
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %src22, align 8, !dbg !3997
  %il23 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i64 0, i32 7, !dbg !3997
  %rtl24 = bitcast %union.basic_block_il_dependent* %il23 to %struct.rtl_bb_info**, !dbg !3997
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl24, align 8, !dbg !3997
  %end_25 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !3997
  %10 = load %struct.rtx_def*, %struct.rtx_def** %end_25, align 8, !dbg !3997
  call void @llvm.dbg.value(metadata %struct.rtx_def** %at, metadata !3968, metadata !DIExpression(DW_OP_deref)), !dbg !3970
  %call26 = call %struct.rtx_def* @get_condition(%struct.rtx_def* %10, %struct.rtx_def** nonnull %at, i32 0, i32 0) #6, !dbg !3999
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call26, metadata !3967, metadata !DIExpression()), !dbg !3970
  %tobool27 = icmp eq %struct.rtx_def* %call26, null, !dbg !4000
  br i1 %tobool27, label %cleanup, label %if.end29, !dbg !4001

if.end29:                                         ; preds = %if.end21
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %ein.0, i64 0, i32 7, !dbg !4002
  %11 = load i32, i32* %flags, align 8, !dbg !4002
  %and = and i32 %11, 1, !dbg !4004
  %tobool30 = icmp eq i32 %and, 0, !dbg !4004
  br i1 %tobool30, label %if.end36, label %if.then31, !dbg !4005

if.then31:                                        ; preds = %if.end29
  %call32 = call %struct.rtx_def* @reversed_condition(%struct.rtx_def* nonnull %call26) #6, !dbg !4006
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call32, metadata !3967, metadata !DIExpression()), !dbg !3970
  %tobool33 = icmp eq %struct.rtx_def* %call32, null, !dbg !4008
  br i1 %tobool33, label %cleanup, label %if.end36, !dbg !4010

if.end36:                                         ; preds = %if.then31, %if.end29
  %condition.0 = phi %struct.rtx_def* [ %call26, %if.end29 ], [ %call32, %if.then31 ], !dbg !3970
  call void @llvm.dbg.value(metadata %struct.rtx_def* %condition.0, metadata !3967, metadata !DIExpression()), !dbg !3970
  %12 = load %struct.rtx_def*, %struct.rtx_def** %at, align 8, !dbg !4011
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !3968, metadata !DIExpression()), !dbg !3970
  call fastcc void @iv_number_of_iterations(%struct.loop* %loop, %struct.rtx_def* %12, %struct.rtx_def* %condition.0, %struct.niter_desc* %desc) #7, !dbg !4012
  br label %cleanup, !dbg !4013

cleanup:                                          ; preds = %if.then31, %if.end21, %if.end2, %if.end, %entry, %if.end36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4013
  ret void, !dbg !4013
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !4014 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !4019, metadata !DIExpression()), !dbg !4020
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !4021
  %0 = load i32, i32* %index, align 8, !dbg !4021
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !4021
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4021
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !4021
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4021
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4021

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !4021
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4021
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !4021
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4021
  br label %cond.end, !dbg !4021

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4021
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4021
  %cmp = icmp ult i32 %0, %call2, !dbg !4021
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !4021

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4021
  br label %cond.end5, !dbg !4021

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !4022
  %inc = add i32 %5, 1, !dbg !4022
  store i32 %inc, i32* %index, align 8, !dbg !4022
  ret void, !dbg !4023
}

; Function Attrs: nounwind uwtable
define dso_local %struct.niter_desc* @get_simple_loop_desc(%struct.loop* %loop) local_unnamed_addr #4 !dbg !4024 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4028, metadata !DIExpression()), !dbg !4033
  %call = tail call fastcc %struct.niter_desc* @simple_loop_desc(%struct.loop* %loop) #7, !dbg !4034
  call void @llvm.dbg.value(metadata %struct.niter_desc* %call, metadata !4029, metadata !DIExpression()), !dbg !4033
  %tobool = icmp eq %struct.niter_desc* %call, null, !dbg !4035
  br i1 %tobool, label %if.end, label %cleanup, !dbg !4037

if.end:                                           ; preds = %entry
  %call1 = tail call i8* @xcalloc(i64 1, i64 80) #6, !dbg !4038
  %0 = bitcast i8* %call1 to %struct.niter_desc*, !dbg !4038
  call void @llvm.dbg.value(metadata %struct.niter_desc* %0, metadata !4029, metadata !DIExpression()), !dbg !4033
  tail call void @iv_analysis_loop_init(%struct.loop* %loop) #7, !dbg !4039
  tail call void @find_simple_exit(%struct.loop* %loop, %struct.niter_desc* %0) #7, !dbg !4040
  %aux = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 10, !dbg !4041
  store i8* %call1, i8** %aux, align 8, !dbg !4042
  %1 = getelementptr inbounds i8, i8* %call1, i64 16, !dbg !4043
  %2 = load i8, i8* %1, align 8, !dbg !4043
  %tobool2 = icmp eq i8 %2, 0, !dbg !4044
  br i1 %tobool2, label %cleanup, label %land.lhs.true, !dbg !4045

land.lhs.true:                                    ; preds = %if.end
  %assumptions = getelementptr inbounds i8, i8* %call1, i64 40, !dbg !4046
  %3 = bitcast i8* %assumptions to %struct.rtx_def**, !dbg !4046
  %4 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8, !dbg !4046
  %tobool3 = icmp eq %struct.rtx_def* %4, null, !dbg !4047
  br i1 %tobool3, label %lor.lhs.false, label %if.then5, !dbg !4048

lor.lhs.false:                                    ; preds = %land.lhs.true
  %infinite = getelementptr inbounds i8, i8* %call1, i64 56, !dbg !4049
  %5 = bitcast i8* %infinite to %struct.rtx_def**, !dbg !4049
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8, !dbg !4049
  %tobool4 = icmp eq %struct.rtx_def* %6, null, !dbg !4050
  br i1 %tobool4, label %cleanup, label %if.then5, !dbg !4051

if.then5:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %7 = load i32, i32* @flag_tree_loop_optimize, align 4, !dbg !4052
  %tobool6 = icmp eq i32 %7, 0, !dbg !4052
  %8 = load i32, i32* @warn_unsafe_loop_optimizations, align 4, !dbg !4054
  %tobool8 = icmp ne i32 %8, 0, !dbg !4054
  %or.cond = and i1 %tobool6, %tobool8, !dbg !4055
  br i1 %or.cond, label %if.then9, label %if.end23, !dbg !4055

if.then9:                                         ; preds = %if.then5
  %infinite10 = getelementptr inbounds i8, i8* %call1, i64 56, !dbg !4056
  %9 = bitcast i8* %infinite10 to %struct.rtx_def**, !dbg !4056
  %10 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8, !dbg !4056
  %tobool11 = icmp eq %struct.rtx_def* %10, null, !dbg !4059
  br i1 %tobool11, label %if.end15, label %if.then12, !dbg !4060

if.then12:                                        ; preds = %if.then9
  %11 = load i32, i32* @flag_unsafe_loop_optimizations, align 4, !dbg !4061
  %tobool13 = icmp eq i32 %11, 0, !dbg !4061
  %cond = select i1 %tobool13, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.20, i64 0, i64 0), !dbg !4061
  call void @llvm.dbg.value(metadata i8* %cond, metadata !4030, metadata !DIExpression()), !dbg !4063
  %call14 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 216, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %cond) #6, !dbg !4064
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %3, align 8, !dbg !4065
  br label %if.end15, !dbg !4067

if.end15:                                         ; preds = %if.then9, %if.then12
  %12 = phi %struct.rtx_def* [ %4, %if.then9 ], [ %.pre, %if.then12 ], !dbg !4065
  %tobool17 = icmp eq %struct.rtx_def* %12, null, !dbg !4068
  br i1 %tobool17, label %if.end23, label %if.then18, !dbg !4069

if.then18:                                        ; preds = %if.end15
  %13 = load i32, i32* @flag_unsafe_loop_optimizations, align 4, !dbg !4070
  %tobool19 = icmp eq i32 %13, 0, !dbg !4070
  %cond20 = select i1 %tobool19, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.23, i64 0, i64 0), !dbg !4070
  call void @llvm.dbg.value(metadata i8* %cond20, metadata !4030, metadata !DIExpression()), !dbg !4063
  %call21 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 216, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %cond20) #6, !dbg !4072
  br label %if.end23, !dbg !4073

if.end23:                                         ; preds = %if.end15, %if.then18, %if.then5
  %14 = load i32, i32* @flag_unsafe_loop_optimizations, align 4, !dbg !4074
  %tobool24 = icmp eq i32 %14, 0, !dbg !4074
  br i1 %tobool24, label %cleanup, label %if.then25, !dbg !4076

if.then25:                                        ; preds = %if.end23
  store %struct.rtx_def* null, %struct.rtx_def** %3, align 8, !dbg !4077
  %infinite27 = getelementptr inbounds i8, i8* %call1, i64 56, !dbg !4079
  %15 = bitcast i8* %infinite27 to %struct.rtx_def**, !dbg !4079
  store %struct.rtx_def* null, %struct.rtx_def** %15, align 8, !dbg !4080
  br label %cleanup, !dbg !4081

cleanup:                                          ; preds = %if.end23, %lor.lhs.false, %if.end, %entry, %if.then25
  %retval.0 = phi %struct.niter_desc* [ %call, %entry ], [ %0, %if.end23 ], [ %0, %if.then25 ], [ %0, %lor.lhs.false ], [ %0, %if.end ], !dbg !4033
  ret %struct.niter_desc* %retval.0, !dbg !4082
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.niter_desc* @simple_loop_desc(%struct.loop* %loop) unnamed_addr #0 !dbg !4083 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4085, metadata !DIExpression()), !dbg !4086
  %aux = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 10, !dbg !4087
  %0 = bitcast i8** %aux to %struct.niter_desc**, !dbg !4087
  %1 = load %struct.niter_desc*, %struct.niter_desc** %0, align 8, !dbg !4087
  ret %struct.niter_desc* %1, !dbg !4088
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #1

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @free_simple_loop_desc(%struct.loop* %loop) local_unnamed_addr #4 !dbg !4089 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4091, metadata !DIExpression()), !dbg !4093
  %call = tail call fastcc %struct.niter_desc* @simple_loop_desc(%struct.loop* %loop) #7, !dbg !4094
  call void @llvm.dbg.value(metadata %struct.niter_desc* %call, metadata !4092, metadata !DIExpression()), !dbg !4093
  %tobool = icmp eq %struct.niter_desc* %call, null, !dbg !4095
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !4097

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.niter_desc* %call to i8*, !dbg !4098
  tail call void @free(i8* nonnull %0) #6, !dbg !4099
  %aux = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 10, !dbg !4100
  store i8* null, i8** %aux, align 8, !dbg !4101
  br label %cleanup.cont, !dbg !4102

cleanup.cont:                                     ; preds = %entry, %if.end
  ret void, !dbg !4102
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !4103 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4107, metadata !DIExpression()), !dbg !4108
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4109
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4109
  %0 = load i32, i32* %rt_uint, align 8, !dbg !4109
  ret i32 %0, !dbg !4110
}

declare dso_local void @htab_empty(%struct.htab*) local_unnamed_addr #1

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #1

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #1

declare dso_local i32 @print_rtl_single(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @function_invariant_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @subreg_lowpart_p(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @iv_subreg(%struct.rtx_iv* %iv, i32 %mode) unnamed_addr #4 !dbg !4111 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !4115, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4116, metadata !DIExpression()), !dbg !4120
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 1, !dbg !4121
  %0 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !4121
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4122
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !4123
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4124

land.lhs.true:                                    ; preds = %entry
  %first_special = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 7, !dbg !4125
  %bf.load = load i8, i8* %first_special, align 8, !dbg !4125
  %bf.clear = and i8 %bf.load, 1, !dbg !4125
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !4126
  br i1 %tobool, label %if.then, label %if.end, !dbg !4127

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @get_iv_value(%struct.rtx_iv* %iv, %struct.rtx_def* %0) #7, !dbg !4128
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4117, metadata !DIExpression()), !dbg !4129
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !4130
  %2 = load i32, i32* %extend_mode, align 8, !dbg !4130
  %call1 = tail call %struct.rtx_def* @lowpart_subreg(i32 %mode, %struct.rtx_def* %call, i32 %2) #7, !dbg !4131
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4117, metadata !DIExpression()), !dbg !4129
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !4132
  store %struct.rtx_def* %call1, %struct.rtx_def** %base, align 8, !dbg !4133
  %extend = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 2, !dbg !4134
  store i32 0, i32* %extend, align 8, !dbg !4135
  store i32 %mode, i32* %extend_mode, align 8, !dbg !4136
  %mode3 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 6, !dbg !4137
  store i32 %mode, i32* %mode3, align 4, !dbg !4138
  %3 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !4139
  %delta = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 3, !dbg !4140
  %4 = bitcast %struct.rtx_def** %delta to i64*, !dbg !4141
  store i64 %3, i64* %4, align 8, !dbg !4141
  %5 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65) to i64*), align 8, !dbg !4142
  %mult = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 4, !dbg !4143
  %6 = bitcast %struct.rtx_def** %mult to i64*, !dbg !4144
  store i64 %5, i64* %6, align 8, !dbg !4144
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %extend_mode4 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !4145
  %7 = load i32, i32* %extend_mode4, align 8, !dbg !4145
  %cmp5 = icmp eq i32 %7, %mode, !dbg !4147
  br i1 %cmp5, label %return, label %if.end7, !dbg !4148

if.end7:                                          ; preds = %if.end
  %idxprom = zext i32 %mode to i64, !dbg !4149
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4149
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4149
  %mode11 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 6, !dbg !4151
  %9 = load i32, i32* %mode11, align 4, !dbg !4151
  %idxprom12 = zext i32 %9 to i64, !dbg !4151
  %arrayidx13 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom12, !dbg !4151
  %10 = load i8, i8* %arrayidx13, align 1, !dbg !4151
  %cmp19 = icmp ugt i8 %8, %10, !dbg !4152
  br i1 %cmp19, label %return, label %if.end22, !dbg !4153

if.end22:                                         ; preds = %if.end7
  %extend23 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 2, !dbg !4154
  store i32 0, i32* %extend23, align 8, !dbg !4155
  store i32 %mode, i32* %mode11, align 4, !dbg !4156
  %delta26 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 3, !dbg !4157
  %11 = load %struct.rtx_def*, %struct.rtx_def** %delta26, align 8, !dbg !4157
  %base28 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !4158
  %12 = load %struct.rtx_def*, %struct.rtx_def** %base28, align 8, !dbg !4158
  %mult29 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 4, !dbg !4159
  %13 = load %struct.rtx_def*, %struct.rtx_def** %mult29, align 8, !dbg !4159
  %call30 = tail call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %7, %struct.rtx_def* %12, %struct.rtx_def* %13) #6, !dbg !4160
  %call31 = tail call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %7, %struct.rtx_def* %11, %struct.rtx_def* %call30) #6, !dbg !4161
  store %struct.rtx_def* %call31, %struct.rtx_def** %base28, align 8, !dbg !4162
  %14 = load i32, i32* %extend_mode4, align 8, !dbg !4163
  %15 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !4164
  %16 = load %struct.rtx_def*, %struct.rtx_def** %mult29, align 8, !dbg !4165
  %call36 = tail call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %14, %struct.rtx_def* %15, %struct.rtx_def* %16) #6, !dbg !4166
  store %struct.rtx_def* %call36, %struct.rtx_def** %step, align 8, !dbg !4167
  %17 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65) to i64*), align 8, !dbg !4168
  %18 = bitcast %struct.rtx_def** %mult29 to i64*, !dbg !4169
  store i64 %17, i64* %18, align 8, !dbg !4169
  %19 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !4170
  %20 = bitcast %struct.rtx_def** %delta26 to i64*, !dbg !4171
  store i64 %19, i64* %20, align 8, !dbg !4171
  %first_special40 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 7, !dbg !4172
  %bf.load41 = load i8, i8* %first_special40, align 8, !dbg !4173
  %bf.clear42 = and i8 %bf.load41, -2, !dbg !4173
  store i8 %bf.clear42, i8* %first_special40, align 8, !dbg !4173
  br label %return, !dbg !4174

return:                                           ; preds = %if.end7, %if.end, %if.end22, %if.then
  %retval.0 = phi i8 [ 1, %if.end22 ], [ 1, %if.then ], [ 1, %if.end ], [ 0, %if.end7 ], !dbg !4120
  ret i8 %retval.0, !dbg !4175
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @iv_get_reaching_def(%struct.rtx_def* %insn, %struct.rtx_def* %reg, %union.df_ref_d** %def) unnamed_addr #4 !dbg !4176 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4180, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !4181, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def, metadata !4182, metadata !DIExpression()), !dbg !4189
  store %union.df_ref_d* null, %union.df_ref_d** %def, align 8, !dbg !4190
  %call = tail call fastcc zeroext i8 @simple_reg_p(%struct.rtx_def* %reg) #7, !dbg !4191
  %tobool = icmp eq i8 %call, 0, !dbg !4191
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4193

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !4194
  %bf.load = load i32, i32* %0, align 8, !dbg !4194
  %bf.clear = and i32 %bf.load, 65535, !dbg !4194
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !4196
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !4197

if.then1:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4198
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4198
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4198
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4181, metadata !DIExpression()), !dbg !4189
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4189
  %bf.load3.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4199
  %.pre = and i32 %bf.load3.pre, 65535, !dbg !4199
  br label %if.end2, !dbg !4200

if.end2:                                          ; preds = %if.then1, %if.end
  %bf.clear4.pre-phi = phi i32 [ %.pre, %if.then1 ], [ %bf.clear, %if.end ], !dbg !4199
  %reg.addr.0 = phi %struct.rtx_def* [ %1, %if.then1 ], [ %reg, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.addr.0, metadata !4181, metadata !DIExpression()), !dbg !4189
  %cmp5 = icmp eq i32 %bf.clear4.pre-phi, 37, !dbg !4199
  br i1 %cmp5, label %cond.end, label %cond.true, !dbg !4199

cond.true:                                        ; preds = %if.end2
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 339, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4199
  br label %cond.end, !dbg !4199

cond.end:                                         ; preds = %if.end2, %cond.true
  %call6 = tail call %union.df_ref_d* @df_find_use(%struct.rtx_def* %insn, %struct.rtx_def* %reg.addr.0) #6, !dbg !4201
  call void @llvm.dbg.value(metadata %union.df_ref_d* %call6, metadata !4183, metadata !DIExpression()), !dbg !4189
  %cmp7 = icmp eq %union.df_ref_d* %call6, null, !dbg !4202
  br i1 %cmp7, label %cond.true8, label %cond.end10, !dbg !4202

cond.true8:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 342, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4202
  br label %cond.end10, !dbg !4202

cond.end10:                                       ; preds = %cond.end, %cond.true8
  %chain = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %call6, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4203
  %2 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !4203
  %tobool12 = icmp eq %struct.df_link* %2, null, !dbg !4203
  br i1 %tobool12, label %cleanup, label %if.end14, !dbg !4205

if.end14:                                         ; preds = %cond.end10
  %next = getelementptr inbounds %struct.df_link, %struct.df_link* %2, i64 0, i32 1, !dbg !4206
  %3 = load %struct.df_link*, %struct.df_link** %next, align 8, !dbg !4206
  %tobool17 = icmp eq %struct.df_link* %3, null, !dbg !4208
  br i1 %tobool17, label %if.end19, label %cleanup, !dbg !4209

if.end19:                                         ; preds = %if.end14
  %ref = getelementptr inbounds %struct.df_link, %struct.df_link* %2, i64 0, i32 0, !dbg !4210
  %4 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !4210
  call void @llvm.dbg.value(metadata %union.df_ref_d* %4, metadata !4184, metadata !DIExpression()), !dbg !4189
  %5 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %4, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !4211
  %bf.load23 = load i32, i32* %5, align 8, !dbg !4211
  %and = and i32 %bf.load23, 2097152, !dbg !4213
  %tobool24 = icmp eq i32 %and, 0, !dbg !4213
  br i1 %tobool24, label %if.end26, label %cleanup, !dbg !4214

if.end26:                                         ; preds = %if.end19
  %insn_info = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %4, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !4215
  %6 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4215
  %insn28 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %6, i64 0, i32 0, !dbg !4215
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn28, align 8, !dbg !4215
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !4187, metadata !DIExpression()), !dbg !4189
  %bf.clear31 = and i32 %bf.load23, 255, !dbg !4216
  %cmp32 = icmp eq i32 %bf.clear31, 1, !dbg !4216
  br i1 %cmp32, label %cond.true33, label %cond.false34, !dbg !4216

cond.true33:                                      ; preds = %if.end26
  %bb = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %4, i64 0, i32 0, i32 0, i32 1, !dbg !4216
  %8 = bitcast %struct.rtx_def*** %bb to %struct.basic_block_def**, !dbg !4216
  br label %cond.end41, !dbg !4216

cond.false34:                                     ; preds = %if.end26
  %arrayidx40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 1, !dbg !4216
  %rt_bb = bitcast %struct.object_block** %arrayidx40 to %struct.basic_block_def**, !dbg !4216
  br label %cond.end41, !dbg !4216

cond.end41:                                       ; preds = %cond.false34, %cond.true33
  %cond42.in = phi %struct.basic_block_def** [ %8, %cond.true33 ], [ %rt_bb, %cond.false34 ]
  %cond42 = load %struct.basic_block_def*, %struct.basic_block_def** %cond42.in, align 8, !dbg !4216
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cond42, metadata !4185, metadata !DIExpression()), !dbg !4189
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4217
  %rt_bb46 = bitcast %struct.object_block** %arrayidx45 to %struct.basic_block_def**, !dbg !4217
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb46, align 8, !dbg !4217
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !4186, metadata !DIExpression()), !dbg !4189
  %cmp47 = icmp eq %struct.basic_block_def* %9, %cond42, !dbg !4218
  br i1 %cmp47, label %if.then48, label %if.else, !dbg !4220

if.then48:                                        ; preds = %cond.end41
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !4221
  %insns = getelementptr inbounds %struct.df, %struct.df* %10, i64 0, i32 10, !dbg !4221
  %11 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !4221
  %arrayidx51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4221
  %rt_int = bitcast %union.rtunion_def* %arrayidx51 to i32*, !dbg !4221
  %12 = load i32, i32* %rt_int, align 8, !dbg !4221
  %idxprom = sext i32 %12 to i64, !dbg !4221
  %arrayidx52 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %11, i64 %idxprom, !dbg !4221
  %13 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx52, align 8, !dbg !4221
  %luid = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %13, i64 0, i32 5, !dbg !4221
  %14 = load i32, i32* %luid, align 8, !dbg !4221
  %arrayidx56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4222
  %rt_int57 = bitcast %union.rtunion_def* %arrayidx56 to i32*, !dbg !4222
  %15 = load i32, i32* %rt_int57, align 8, !dbg !4222
  %idxprom58 = sext i32 %15 to i64, !dbg !4222
  %arrayidx59 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %11, i64 %idxprom58, !dbg !4222
  %16 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx59, align 8, !dbg !4222
  %luid60 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %16, i64 0, i32 5, !dbg !4222
  %17 = load i32, i32* %luid60, align 8, !dbg !4222
  %cmp61 = icmp slt i32 %14, %17, !dbg !4223
  %conv62 = zext i1 %cmp61 to i8, !dbg !4224
  call void @llvm.dbg.value(metadata i8 %conv62, metadata !4188, metadata !DIExpression()), !dbg !4189
  br label %if.end64, !dbg !4225

if.else:                                          ; preds = %cond.end41
  %call63 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %9, %struct.basic_block_def* %cond42) #6, !dbg !4226
  call void @llvm.dbg.value(metadata i8 %call63, metadata !4188, metadata !DIExpression()), !dbg !4189
  br label %if.end64

if.end64:                                         ; preds = %if.else, %if.then48
  %dom_p.0 = phi i8 [ %conv62, %if.then48 ], [ %call63, %if.else ], !dbg !4227
  call void @llvm.dbg.value(metadata i8 %dom_p.0, metadata !4188, metadata !DIExpression()), !dbg !4189
  %tobool65 = icmp eq i8 %dom_p.0, 0, !dbg !4228
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !4230

if.then66:                                        ; preds = %if.end64
  store %union.df_ref_d* %4, %union.df_ref_d** %def, align 8, !dbg !4231
  br label %cleanup, !dbg !4233

if.end67:                                         ; preds = %if.end64
  %18 = load %struct.loop*, %struct.loop** @current_loop, align 8, !dbg !4234
  %call68 = tail call zeroext i8 @just_once_each_iteration_p(%struct.loop* %18, %struct.basic_block_def* %cond42) #6, !dbg !4236
  %tobool69 = icmp eq i8 %call68, 0, !dbg !4236
  %. = select i1 %tobool69, i32 0, i32 2, !dbg !4189
  br label %cleanup, !dbg !4189

cleanup:                                          ; preds = %if.end19, %if.end14, %cond.end10, %entry, %if.end67, %if.then66
  %retval.0 = phi i32 [ 3, %if.then66 ], [ 0, %entry ], [ 1, %cond.end10 ], [ 0, %if.end14 ], [ 0, %if.end19 ], [ %., %if.end67 ], !dbg !4189
  ret i32 %retval.0, !dbg !4237
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @iv_constant(%struct.rtx_iv* %iv, %struct.rtx_def* %cst, i32 %mode) unnamed_addr #4 !dbg !4238 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !4242, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cst, metadata !4243, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata i32 0, metadata !4244, metadata !DIExpression()), !dbg !4245
  br i1 true, label %if.then, label %entry.if.end_crit_edge, !dbg !4246

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end, !dbg !4246

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cst, i64 0, i32 0, !dbg !4247
  %bf.load = load i32, i32* %0, align 8, !dbg !4247
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4247
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4247
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4244, metadata !DIExpression()), !dbg !4245
  br label %if.end, !dbg !4249

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %mode.addr.0 = phi i32 [ %bf.clear, %if.then ], [ undef, %entry.if.end_crit_edge ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.0, metadata !4244, metadata !DIExpression()), !dbg !4245
  %mode1 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 6, !dbg !4250
  store i32 %mode.addr.0, i32* %mode1, align 4, !dbg !4251
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !4252
  store %struct.rtx_def* %cst, %struct.rtx_def** %base, align 8, !dbg !4253
  %1 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !4254
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 1, !dbg !4255
  %2 = bitcast %struct.rtx_def** %step to i64*, !dbg !4256
  store i64 %1, i64* %2, align 8, !dbg !4256
  %first_special = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 7, !dbg !4257
  %bf.load2 = load i8, i8* %first_special, align 8, !dbg !4258
  %bf.clear3 = and i8 %bf.load2, -2, !dbg !4258
  store i8 %bf.clear3, i8* %first_special, align 8, !dbg !4258
  %extend = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 2, !dbg !4259
  store i32 0, i32* %extend, align 8, !dbg !4260
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !4261
  store i32 %mode.addr.0, i32* %extend_mode, align 8, !dbg !4262
  %3 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !4263
  %delta = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 3, !dbg !4264
  %4 = bitcast %struct.rtx_def** %delta to i64*, !dbg !4265
  store i64 %3, i64* %4, align 8, !dbg !4265
  %5 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65) to i64*), align 8, !dbg !4266
  %mult = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 4, !dbg !4267
  %6 = bitcast %struct.rtx_def** %mult to i64*, !dbg !4268
  store i64 %5, i64* %6, align 8, !dbg !4268
  ret i8 undef, !dbg !4269
}

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @just_once_each_iteration_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @record_iv(%union.df_ref_d* %def, %struct.rtx_iv* %iv) unnamed_addr #4 !dbg !4270 {
entry:
  call void @llvm.dbg.value(metadata %union.df_ref_d* %def, metadata !4274, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !4275, metadata !DIExpression()), !dbg !4277
  %call = tail call i8* @xmalloc(i64 56) #6, !dbg !4278
  call void @llvm.dbg.value(metadata i8* %call, metadata !4276, metadata !DIExpression()), !dbg !4277
  %0 = bitcast %struct.rtx_iv* %iv to i8*, !dbg !4279
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call, i8* align 8 %0, i64 56, i1 false), !dbg !4279
  tail call fastcc void @check_iv_ref_table_size() #7, !dbg !4280
  %1 = load %struct.rtx_iv**, %struct.rtx_iv*** @iv_ref_table, align 8, !dbg !4281
  %id = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def, i64 0, i32 0, i32 0, i32 0, i32 7, !dbg !4281
  %2 = load i32, i32* %id, align 4, !dbg !4281
  %idxprom = sext i32 %2 to i64, !dbg !4281
  %arrayidx = getelementptr inbounds %struct.rtx_iv*, %struct.rtx_iv** %1, i64 %idxprom, !dbg !4281
  %3 = bitcast %struct.rtx_iv** %arrayidx to i8**, !dbg !4281
  store i8* %call, i8** %3, align 8, !dbg !4281
  ret void, !dbg !4282
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %index) unnamed_addr #0 !dbg !4283 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !4287, metadata !DIExpression()), !dbg !4288
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4289
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 3, !dbg !4289
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4289
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !4291
  %2 = load i32, i32* %block_info_size, align 8, !dbg !4291
  %cmp = icmp ugt i32 %2, %index, !dbg !4292
  br i1 %cmp, label %if.then, label %return, !dbg !4293

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !4294
  %3 = load i8**, i8*** %block_info, align 8, !dbg !4294
  %idxprom = zext i32 %index to i64, !dbg !4295
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !4295
  %4 = bitcast i8** %arrayidx3 to %struct.df_rd_bb_info**, !dbg !4295
  %5 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %4, align 8, !dbg !4295
  br label %return, !dbg !4296

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_rd_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !4297
  ret %struct.df_rd_bb_info* %retval.0, !dbg !4298
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @analyzed_for_bivness_p(%struct.rtx_def* %def, %struct.rtx_iv* %iv) unnamed_addr #4 !dbg !4299 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %def, metadata !4301, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !4302, metadata !DIExpression()), !dbg !4304
  %0 = load %struct.htab*, %struct.htab** @bivs, align 8, !dbg !4305
  %1 = bitcast %struct.rtx_def* %def to i8*, !dbg !4306
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %def) #7, !dbg !4307
  %call1 = tail call i8* @htab_find_with_hash(%struct.htab* %0, i8* %1, i32 %call) #6, !dbg !4308
  call void @llvm.dbg.value(metadata i8* %call1, metadata !4303, metadata !DIExpression()), !dbg !4304
  %tobool = icmp eq i8* %call1, null, !dbg !4309
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4311

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %call1, metadata !4303, metadata !DIExpression()), !dbg !4304
  %iv2 = getelementptr inbounds i8, i8* %call1, i64 8, !dbg !4312
  %2 = bitcast %struct.rtx_iv* %iv to i8*, !dbg !4312
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* nonnull align 8 %iv2, i64 56, i1 false), !dbg !4312
  br label %cleanup, !dbg !4313

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i8 [ 1, %if.end ], [ 0, %entry ], !dbg !4304
  ret i8 %retval.0, !dbg !4314
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @get_biv_step(%union.df_ref_d* %last_def, %struct.rtx_def* %reg, %struct.rtx_def** %inner_step, i32* %inner_mode, i32* %extend, i32* %outer_mode, %struct.rtx_def** %outer_step) unnamed_addr #4 !dbg !4315 {
entry:
  call void @llvm.dbg.value(metadata %union.df_ref_d* %last_def, metadata !4321, metadata !DIExpression()), !dbg !4328
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !4322, metadata !DIExpression()), !dbg !4328
  call void @llvm.dbg.value(metadata %struct.rtx_def** %inner_step, metadata !4323, metadata !DIExpression()), !dbg !4328
  call void @llvm.dbg.value(metadata i32* %inner_mode, metadata !4324, metadata !DIExpression()), !dbg !4328
  call void @llvm.dbg.value(metadata i32* %extend, metadata !4325, metadata !DIExpression()), !dbg !4328
  call void @llvm.dbg.value(metadata i32* %outer_mode, metadata !4326, metadata !DIExpression()), !dbg !4328
  call void @llvm.dbg.value(metadata %struct.rtx_def** %outer_step, metadata !4327, metadata !DIExpression()), !dbg !4328
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !4329
  %bf.load = load i32, i32* %0, align 8, !dbg !4329
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4329
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4329
  store i32 %bf.clear, i32* %outer_mode, align 4, !dbg !4330
  %call = tail call fastcc zeroext i8 @get_biv_step_1(%union.df_ref_d* %last_def, %struct.rtx_def* %reg, %struct.rtx_def** %inner_step, i32* %inner_mode, i32* %extend, i32 %bf.clear, %struct.rtx_def** %outer_step) #7, !dbg !4331
  %tobool = icmp eq i8 %call, 0, !dbg !4331
  br i1 %tobool, label %return, label %if.end, !dbg !4333

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %inner_mode, align 4, !dbg !4334
  %2 = load i32, i32* %outer_mode, align 4, !dbg !4334
  %cmp = icmp eq i32 %1, %2, !dbg !4334
  %3 = load i32, i32* %extend, align 4, !dbg !4334
  %cmp1 = icmp ne i32 %3, 0, !dbg !4334
  %cmp3 = xor i1 %cmp, %cmp1, !dbg !4334
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !4334

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 799, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4334
  %.pre = load i32, i32* %inner_mode, align 4, !dbg !4335
  %.pre1 = load i32, i32* %outer_mode, align 4, !dbg !4335
  br label %cond.end, !dbg !4334

cond.end:                                         ; preds = %if.end, %cond.true
  %4 = phi i32 [ %2, %if.end ], [ %.pre1, %cond.true ], !dbg !4335
  %5 = phi i32 [ %1, %if.end ], [ %.pre, %cond.true ], !dbg !4335
  %cmp5 = icmp eq i32 %5, %4, !dbg !4335
  br i1 %cmp5, label %lor.lhs.false, label %return, !dbg !4335

lor.lhs.false:                                    ; preds = %cond.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %outer_step, align 8, !dbg !4335
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4335
  %cmp7 = icmp eq %struct.rtx_def* %6, %7, !dbg !4335
  br i1 %cmp7, label %return, label %cond.true9, !dbg !4335

cond.true9:                                       ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 800, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4335
  br label %return, !dbg !4335

return:                                           ; preds = %cond.end, %entry, %cond.true9, %lor.lhs.false
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %cond.end ], [ 1, %lor.lhs.false ], [ 1, %cond.true9 ], !dbg !4328
  ret i8 %retval.0, !dbg !4336
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #5

; Function Attrs: nounwind uwtable
define internal fastcc void @record_biv(%struct.rtx_def* %def, %struct.rtx_iv* %iv) unnamed_addr #4 !dbg !4337 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %def, metadata !4341, metadata !DIExpression()), !dbg !4345
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !4342, metadata !DIExpression()), !dbg !4345
  %call = tail call i8* @xmalloc(i64 64) #6, !dbg !4346
  call void @llvm.dbg.value(metadata i8* %call, metadata !4343, metadata !DIExpression()), !dbg !4345
  %0 = load %struct.htab*, %struct.htab** @bivs, align 8, !dbg !4347
  %1 = bitcast %struct.rtx_def* %def to i8*, !dbg !4348
  %call1 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %def) #7, !dbg !4349
  %call2 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %0, i8* %1, i32 %call1, i32 1) #6, !dbg !4350
  call void @llvm.dbg.value(metadata i8** %call2, metadata !4344, metadata !DIExpression()), !dbg !4345
  %call3 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %def) #7, !dbg !4351
  %regno = bitcast i8* %call to i32*, !dbg !4352
  store i32 %call3, i32* %regno, align 8, !dbg !4353
  %iv4 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4354
  %2 = bitcast %struct.rtx_iv* %iv to i8*, !dbg !4355
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %iv4, i8* align 8 %2, i64 56, i1 false), !dbg !4355
  %3 = load i8*, i8** %call2, align 8, !dbg !4356
  %tobool = icmp eq i8* %3, null, !dbg !4356
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4356

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 841, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4356
  br label %cond.end, !dbg !4356

cond.end:                                         ; preds = %entry, %cond.true
  store i8* %call, i8** %call2, align 8, !dbg !4357
  ret void, !dbg !4358
}

declare dso_local i8* @htab_find_with_hash(%struct.htab*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @get_biv_step_1(%union.df_ref_d* %def, %struct.rtx_def* %reg, %struct.rtx_def** %inner_step, i32* %inner_mode, i32* %extend, i32 %outer_mode, %struct.rtx_def** %outer_step) unnamed_addr #4 !dbg !4359 {
entry:
  %next_def = alloca %union.df_ref_d*, align 8
  call void @llvm.dbg.value(metadata %union.df_ref_d* %def, metadata !4363, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !4364, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata %struct.rtx_def** %inner_step, metadata !4365, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i32* %inner_mode, metadata !4366, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i32* %extend, metadata !4367, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i32 %outer_mode, metadata !4368, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata %struct.rtx_def** %outer_step, metadata !4369, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4372, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4373, metadata !DIExpression()), !dbg !4384
  %insn_info = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !4385
  %0 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4385
  %insn1 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %0, i64 0, i32 0, !dbg !4385
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !4385
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4378, metadata !DIExpression()), !dbg !4384
  %2 = bitcast %union.df_ref_d** %next_def to i8*, !dbg !4386
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4386
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4387
  %bf.load = load i32, i32* %3, align 8, !dbg !4387
  %bf.clear = and i32 %bf.load, 65535, !dbg !4387
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4387
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !4387

lor.lhs.false:                                    ; preds = %entry
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !4387
  br i1 %cmp4, label %cond.true, label %lor.lhs.false5, !dbg !4387

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !4387
  br i1 %cmp8, label %cond.true, label %lor.lhs.false9, !dbg !4387

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 10, !dbg !4387
  br i1 %cmp12, label %cond.true, label %cond.end26, !dbg !4387

cond.true:                                        ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !4387
  %4 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4387
  %5 = bitcast %union.rtunion_def* %4 to i32**, !dbg !4387
  %6 = load i32*, i32** %5, align 8, !dbg !4387
  %bf.load13 = load i32, i32* %6, align 8, !dbg !4387
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !4387
  %cmp15 = icmp eq i32 %bf.clear14, 23, !dbg !4387
  %7 = bitcast i32* %6 to %struct.rtx_def*, !dbg !4387
  br i1 %cmp15, label %cond.end26, label %cond.false, !dbg !4387

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %1, %struct.rtx_def* %7) #6, !dbg !4387
  br label %cond.end26, !dbg !4387

cond.end26:                                       ; preds = %lor.lhs.false9, %cond.false, %cond.true
  %cond27 = phi %struct.rtx_def* [ %call, %cond.false ], [ %7, %cond.true ], [ null, %lor.lhs.false9 ], !dbg !4387
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond27, metadata !4370, metadata !DIExpression()), !dbg !4384
  %tobool = icmp eq %struct.rtx_def* %cond27, null, !dbg !4388
  br i1 %tobool, label %cleanup194, label %if.end, !dbg !4390

if.end:                                           ; preds = %cond.end26
  %call28 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %1) #6, !dbg !4391
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !4371, metadata !DIExpression()), !dbg !4384
  %tobool29 = icmp eq %struct.rtx_def* %call28, null, !dbg !4392
  br i1 %tobool29, label %if.else, label %if.then30, !dbg !4394

if.then30:                                        ; preds = %if.end
  %arrayidx33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call28, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4395
  br label %if.end39, !dbg !4396

if.else:                                          ; preds = %if.end
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond27, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4397
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then30
  %rhs.0.in.in = phi %union.rtunion_def* [ %arrayidx33, %if.then30 ], [ %8, %if.else ]
  %rhs.0.in = bitcast %union.rtunion_def* %rhs.0.in.in to %struct.rtx_def**, !dbg !4398
  %rhs.0 = load %struct.rtx_def*, %struct.rtx_def** %rhs.0.in, align 8, !dbg !4398
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rhs.0, metadata !4371, metadata !DIExpression()), !dbg !4384
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs.0, i64 0, i32 0, !dbg !4399
  %bf.load40 = load i32, i32* %9, align 8, !dbg !4399
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !4399
  call void @llvm.dbg.value(metadata i32 %bf.clear41, metadata !4377, metadata !DIExpression()), !dbg !4384
  %trunc = trunc i32 %bf.load40 to i16, !dbg !4400
  switch i16 %trunc, label %cleanup194 [
    i16 39, label %sw.epilog
    i16 37, label %sw.epilog
    i16 49, label %sw.bb42
    i16 50, label %sw.bb42
    i16 98, label %sw.bb88
    i16 99, label %sw.bb88
  ], !dbg !4400

sw.bb42:                                          ; preds = %if.end39, %if.end39
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4401
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !4401
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !4401
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !4372, metadata !DIExpression()), !dbg !4384
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4403
  %rt_rtx50 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !4403
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !4403
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !4373, metadata !DIExpression()), !dbg !4384
  %cmp51 = icmp eq i32 %bf.clear41, 49, !dbg !4404
  br i1 %cmp51, label %land.lhs.true, label %if.end57, !dbg !4406

land.lhs.true:                                    ; preds = %sw.bb42
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !4407
  %bf.load52 = load i32, i32* %13, align 8, !dbg !4407
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !4407
  %idxprom = zext i32 %bf.clear53 to i64, !dbg !4407
  %arrayidx54 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4407
  %14 = load i32, i32* %arrayidx54, align 4, !dbg !4407
  %cmp55 = icmp eq i32 %14, 9, !dbg !4407
  %spec.select = select i1 %cmp55, %struct.rtx_def* %12, %struct.rtx_def* %10, !dbg !4408
  %spec.select2 = select i1 %cmp55, %struct.rtx_def* %10, %struct.rtx_def* %12, !dbg !4408
  br label %if.end57, !dbg !4408

if.end57:                                         ; preds = %land.lhs.true, %sw.bb42
  %op0.0 = phi %struct.rtx_def* [ %10, %sw.bb42 ], [ %spec.select, %land.lhs.true ], !dbg !4409
  %op1.0 = phi %struct.rtx_def* [ %12, %sw.bb42 ], [ %spec.select2, %land.lhs.true ], !dbg !4409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.0, metadata !4373, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.0, metadata !4372, metadata !DIExpression()), !dbg !4384
  %call58 = tail call fastcc zeroext i8 @simple_reg_p(%struct.rtx_def* %op0.0) #7, !dbg !4410
  %tobool59 = icmp eq i8 %call58, 0, !dbg !4410
  br i1 %tobool59, label %cleanup194, label %lor.lhs.false60, !dbg !4412

lor.lhs.false60:                                  ; preds = %if.end57
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.0, i64 0, i32 0, !dbg !4413
  %bf.load61 = load i32, i32* %15, align 8, !dbg !4413
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !4413
  %idxprom63 = zext i32 %bf.clear62 to i64, !dbg !4413
  %arrayidx64 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom63, !dbg !4413
  %16 = load i32, i32* %arrayidx64, align 4, !dbg !4413
  %cmp65 = icmp eq i32 %16, 9, !dbg !4413
  br i1 %cmp65, label %if.end67, label %cleanup194, !dbg !4414

if.end67:                                         ; preds = %lor.lhs.false60
  %bf.load68 = load i32, i32* %9, align 8, !dbg !4415
  %bf.lshr = lshr i32 %bf.load68, 16, !dbg !4415
  %bf.clear69 = and i32 %bf.lshr, 255, !dbg !4415
  %cmp70 = icmp eq i32 %bf.clear69, %outer_mode, !dbg !4417
  br i1 %cmp70, label %sw.epilog, label %if.then71, !dbg !4418

if.then71:                                        ; preds = %if.end67
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 0, !dbg !4419
  %bf.load72 = load i32, i32* %17, align 8, !dbg !4419
  %bf.clear73 = and i32 %bf.load72, 65535, !dbg !4419
  %cmp74 = icmp eq i32 %bf.clear73, 39, !dbg !4422
  br i1 %cmp74, label %if.end76, label %cleanup194, !dbg !4423

if.end76:                                         ; preds = %if.then71
  %arrayidx79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4424
  %18 = bitcast %union.rtunion_def* %arrayidx79 to i32**, !dbg !4424
  %19 = load i32*, i32** %18, align 8, !dbg !4424
  %bf.load81 = load i32, i32* %19, align 8, !dbg !4424
  %bf.lshr82 = lshr i32 %bf.load81, 16, !dbg !4424
  %bf.clear83 = and i32 %bf.lshr82, 255, !dbg !4424
  %cmp84 = icmp eq i32 %bf.clear83, %outer_mode, !dbg !4426
  br i1 %cmp84, label %sw.epilog, label %cleanup194, !dbg !4427

sw.bb88:                                          ; preds = %if.end39, %if.end39
  %bf.lshr90 = lshr i32 %bf.load40, 16, !dbg !4428
  %bf.clear91 = and i32 %bf.lshr90, 255, !dbg !4428
  %cmp92 = icmp eq i32 %bf.clear91, %outer_mode, !dbg !4430
  br i1 %cmp92, label %if.end94, label %cleanup194, !dbg !4431

if.end94:                                         ; preds = %sw.bb88
  %arrayidx97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4432
  %rt_rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**, !dbg !4432
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx98, align 8, !dbg !4432
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !4372, metadata !DIExpression()), !dbg !4384
  %call99 = tail call fastcc zeroext i8 @simple_reg_p(%struct.rtx_def* %20) #7, !dbg !4433
  %tobool100 = icmp eq i8 %call99, 0, !dbg !4433
  br i1 %tobool100, label %cleanup194, label %sw.epilog, !dbg !4435

sw.epilog:                                        ; preds = %if.end76, %if.end67, %if.end94, %if.end39, %if.end39
  %op0.1 = phi %struct.rtx_def* [ null, %if.end39 ], [ null, %if.end39 ], [ %op0.0, %if.end76 ], [ %op0.0, %if.end67 ], [ %20, %if.end94 ], !dbg !4384
  %op1.1 = phi %struct.rtx_def* [ null, %if.end39 ], [ null, %if.end39 ], [ %op1.0, %if.end76 ], [ %op1.0, %if.end67 ], [ null, %if.end94 ], !dbg !4384
  %next.0 = phi %struct.rtx_def* [ %rhs.0, %if.end39 ], [ %rhs.0, %if.end39 ], [ %op0.0, %if.end76 ], [ %op0.0, %if.end67 ], [ %20, %if.end94 ], !dbg !4409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !4374, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.1, metadata !4373, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.1, metadata !4372, metadata !DIExpression()), !dbg !4384
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 0, !dbg !4436
  %bf.load103 = load i32, i32* %21, align 8, !dbg !4436
  %bf.clear104 = and i32 %bf.load103, 65535, !dbg !4436
  %cmp105 = icmp eq i32 %bf.clear104, 39, !dbg !4438
  br i1 %cmp105, label %if.then106, label %if.end122, !dbg !4439

if.then106:                                       ; preds = %sw.epilog
  %call107 = tail call i32 @subreg_lowpart_p(%struct.rtx_def* %next.0) #6, !dbg !4440
  %tobool108 = icmp eq i32 %call107, 0, !dbg !4440
  br i1 %tobool108, label %cleanup194, label %if.end110, !dbg !4443

if.end110:                                        ; preds = %if.then106
  %arrayidx113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4444
  %rt_rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**, !dbg !4444
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx114, align 8, !dbg !4444
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !4375, metadata !DIExpression()), !dbg !4384
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 0, !dbg !4445
  %bf.load115 = load i32, i32* %23, align 8, !dbg !4445
  %bf.lshr116 = lshr i32 %bf.load115, 16, !dbg !4445
  %bf.clear117 = and i32 %bf.lshr116, 255, !dbg !4445
  %cmp118 = icmp eq i32 %bf.clear117, %outer_mode, !dbg !4447
  br i1 %cmp118, label %if.end122, label %cleanup194, !dbg !4448

if.end122:                                        ; preds = %if.end110, %sw.epilog
  %nextr.0 = phi %struct.rtx_def* [ %22, %if.end110 ], [ %next.0, %sw.epilog ], !dbg !4449
  call void @llvm.dbg.value(metadata %struct.rtx_def* %nextr.0, metadata !4375, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata %union.df_ref_d** %next_def, metadata !4379, metadata !DIExpression(DW_OP_deref)), !dbg !4384
  %call123 = call fastcc i32 @iv_get_reaching_def(%struct.rtx_def* %1, %struct.rtx_def* %nextr.0, %union.df_ref_d** nonnull %next_def) #7, !dbg !4450
  call void @llvm.dbg.value(metadata i32 %call123, metadata !4380, metadata !DIExpression()), !dbg !4384
  switch i32 %call123, label %if.else135 [
    i32 0, label %cleanup194
    i32 1, label %cleanup194
    i32 2, label %if.then130
  ], !dbg !4451

if.then130:                                       ; preds = %if.end122
  %call131 = call i32 @rtx_equal_p(%struct.rtx_def* %nextr.0, %struct.rtx_def* %reg) #6, !dbg !4453
  %tobool132 = icmp eq i32 %call131, 0, !dbg !4453
  br i1 %tobool132, label %cleanup194, label %if.end134, !dbg !4457

if.end134:                                        ; preds = %if.then130
  %24 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !4458
  %25 = bitcast %struct.rtx_def** %inner_step to i64*, !dbg !4459
  store i64 %24, i64* %25, align 8, !dbg !4459
  store i32 0, i32* %extend, align 4, !dbg !4460
  store i32 %outer_mode, i32* %inner_mode, align 4, !dbg !4461
  %26 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !4462
  %27 = bitcast %struct.rtx_def** %outer_step to i64*, !dbg !4463
  store i64 %26, i64* %27, align 8, !dbg !4463
  br label %if.end140, !dbg !4464

if.else135:                                       ; preds = %if.end122
  %28 = load %union.df_ref_d*, %union.df_ref_d** %next_def, align 8, !dbg !4465
  call void @llvm.dbg.value(metadata %union.df_ref_d* %28, metadata !4379, metadata !DIExpression()), !dbg !4384
  %call136 = call fastcc zeroext i8 @get_biv_step_1(%union.df_ref_d* %28, %struct.rtx_def* %reg, %struct.rtx_def** %inner_step, i32* %inner_mode, i32* %extend, i32 %outer_mode, %struct.rtx_def** %outer_step) #7, !dbg !4467
  %tobool137 = icmp eq i8 %call136, 0, !dbg !4467
  br i1 %tobool137, label %cleanup194, label %if.end140, !dbg !4468

if.end140:                                        ; preds = %if.else135, %if.end134
  %bf.load141 = load i32, i32* %21, align 8, !dbg !4469
  %bf.clear142 = and i32 %bf.load141, 65535, !dbg !4469
  %cmp143 = icmp eq i32 %bf.clear142, 39, !dbg !4470
  br i1 %cmp143, label %if.then144, label %if.end160, !dbg !4471

if.then144:                                       ; preds = %if.end140
  %bf.lshr146 = lshr i32 %bf.load141, 16, !dbg !4472
  %bf.clear147 = and i32 %bf.lshr146, 255, !dbg !4472
  call void @llvm.dbg.value(metadata i32 %bf.clear147, metadata !4381, metadata !DIExpression()), !dbg !4473
  %idxprom148 = zext i32 %bf.clear147 to i64, !dbg !4474
  %arrayidx149 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom148, !dbg !4474
  %29 = load i8, i8* %arrayidx149, align 1, !dbg !4474
  %30 = load i32, i32* %inner_mode, align 4, !dbg !4476
  %idxprom151 = zext i32 %30 to i64, !dbg !4476
  %arrayidx152 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom151, !dbg !4476
  %31 = load i8, i8* %arrayidx152, align 1, !dbg !4476
  %cmp155 = icmp ugt i8 %29, %31, !dbg !4477
  br i1 %cmp155, label %cleanup, label %if.end158, !dbg !4478

if.end158:                                        ; preds = %if.then144
  store i32 %bf.clear147, i32* %inner_mode, align 4, !dbg !4479
  %32 = load %struct.rtx_def*, %struct.rtx_def** %inner_step, align 8, !dbg !4480
  %33 = load %struct.rtx_def*, %struct.rtx_def** %outer_step, align 8, !dbg !4481
  %call159 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %outer_mode, %struct.rtx_def* %32, %struct.rtx_def* %33) #6, !dbg !4482
  store %struct.rtx_def* %call159, %struct.rtx_def** %inner_step, align 8, !dbg !4483
  %34 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !4484
  %35 = bitcast %struct.rtx_def** %outer_step to i64*, !dbg !4485
  store i64 %34, i64* %35, align 8, !dbg !4485
  store i32 0, i32* %extend, align 4, !dbg !4486
  br label %cleanup, !dbg !4487

cleanup:                                          ; preds = %if.then144, %if.end158
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end158 ], [ false, %if.then144 ]
  br i1 %cleanup.dest.slot.0, label %if.end160, label %cleanup194

if.end160:                                        ; preds = %cleanup, %if.end140
  switch i16 %trunc, label %cleanup194 [
    i16 37, label %sw.epilog193
    i16 39, label %sw.epilog193
    i16 49, label %sw.bb162
    i16 50, label %sw.bb162
    i16 98, label %sw.bb176
    i16 99, label %sw.bb176
  ], !dbg !4488

sw.bb162:                                         ; preds = %if.end160, %if.end160
  %36 = load i32, i32* %inner_mode, align 4, !dbg !4489
  %cmp163 = icmp eq i32 %36, %outer_mode, !dbg !4492
  br i1 %cmp163, label %if.then171, label %lor.lhs.false165, !dbg !4493

lor.lhs.false165:                                 ; preds = %sw.bb162
  %bf.load166 = load i32, i32* %9, align 8, !dbg !4494
  %bf.lshr167 = lshr i32 %bf.load166, 16, !dbg !4494
  %bf.clear168 = and i32 %bf.lshr167, 255, !dbg !4494
  %cmp169 = icmp eq i32 %bf.clear168, %outer_mode, !dbg !4495
  br i1 %cmp169, label %if.else173, label %if.then171, !dbg !4496

if.then171:                                       ; preds = %lor.lhs.false165, %sw.bb162
  %37 = load %struct.rtx_def*, %struct.rtx_def** %inner_step, align 8, !dbg !4497
  %call172 = call %struct.rtx_def* @simplify_gen_binary(i32 %bf.clear41, i32 %outer_mode, %struct.rtx_def* %37, %struct.rtx_def* %op1.1) #6, !dbg !4498
  store %struct.rtx_def* %call172, %struct.rtx_def** %inner_step, align 8, !dbg !4499
  br label %sw.epilog193, !dbg !4500

if.else173:                                       ; preds = %lor.lhs.false165
  %38 = load %struct.rtx_def*, %struct.rtx_def** %outer_step, align 8, !dbg !4501
  %call174 = call %struct.rtx_def* @simplify_gen_binary(i32 %bf.clear41, i32 %outer_mode, %struct.rtx_def* %38, %struct.rtx_def* %op1.1) #6, !dbg !4502
  store %struct.rtx_def* %call174, %struct.rtx_def** %outer_step, align 8, !dbg !4503
  br label %sw.epilog193

sw.bb176:                                         ; preds = %if.end160, %if.end160
  %39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.1, i64 0, i32 0, !dbg !4504
  %bf.load177 = load i32, i32* %39, align 8, !dbg !4504
  %bf.lshr178 = lshr i32 %bf.load177, 16, !dbg !4504
  %bf.clear179 = and i32 %bf.lshr178, 255, !dbg !4504
  %40 = load i32, i32* %inner_mode, align 4, !dbg !4504
  %cmp180 = icmp eq i32 %bf.clear179, %40, !dbg !4504
  br i1 %cmp180, label %land.lhs.true182, label %cond.true188, !dbg !4504

land.lhs.true182:                                 ; preds = %sw.bb176
  %41 = load i32, i32* %extend, align 4, !dbg !4504
  %cmp183 = icmp eq i32 %41, 0, !dbg !4504
  br i1 %cmp183, label %land.lhs.true185, label %cond.true188, !dbg !4504

land.lhs.true185:                                 ; preds = %land.lhs.true182
  %42 = load %struct.rtx_def*, %struct.rtx_def** %outer_step, align 8, !dbg !4504
  %43 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4504
  %cmp186 = icmp eq %struct.rtx_def* %42, %43, !dbg !4504
  br i1 %cmp186, label %cond.end190, label %cond.true188, !dbg !4504

cond.true188:                                     ; preds = %land.lhs.true185, %land.lhs.true182, %sw.bb176
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 768, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4504
  br label %cond.end190, !dbg !4504

cond.end190:                                      ; preds = %land.lhs.true185, %cond.true188
  store i32 %bf.clear41, i32* %extend, align 4, !dbg !4505
  br label %sw.epilog193, !dbg !4506

sw.epilog193:                                     ; preds = %if.then171, %if.else173, %if.end160, %if.end160, %cond.end190
  br label %cleanup194, !dbg !4507

cleanup194:                                       ; preds = %if.end76, %if.then71, %if.end57, %if.end110, %if.then106, %if.else135, %if.then130, %if.end94, %sw.bb88, %cond.end26, %if.end160, %if.end122, %if.end122, %if.end39, %lor.lhs.false60, %cleanup, %sw.epilog193
  %retval.1 = phi i8 [ 0, %cleanup ], [ 1, %sw.epilog193 ], [ 0, %cond.end26 ], [ 0, %lor.lhs.false60 ], [ 0, %if.end57 ], [ 0, %if.then71 ], [ 0, %if.end76 ], [ 0, %sw.bb88 ], [ 0, %if.end94 ], [ 0, %if.end39 ], [ 0, %if.then106 ], [ 0, %if.end110 ], [ 0, %if.end122 ], [ 0, %if.end122 ], [ 0, %if.then130 ], [ 0, %if.else135 ], [ 0, %if.end160 ], !dbg !4384
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4508
  ret i8 %retval.1, !dbg !4508
}

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4509 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4514
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4514
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4514

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4514
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4514
  br label %cond.end, !dbg !4514

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4514
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4514
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !4515
  %conv3 = zext i1 %cmp to i8, !dbg !4516
  ret i8 %conv3, !dbg !4517
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4518 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4523
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4523
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4523

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4523
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4523
  br label %cond.end, !dbg !4523

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4523
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !4523
  ret %struct.edge_def* %call2, !dbg !4524
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !4525 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4531, metadata !DIExpression()), !dbg !4532
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !4533
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4533

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !4533
  %0 = load i32, i32* %num, align 8, !dbg !4533
  br label %cond.end, !dbg !4533

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4533
  ret i32 %cond, !dbg !4533
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4534 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !4539
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4539

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4539
  br label %cond.end, !dbg !4539

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !4540
  ret %struct.VEC_edge_gc* %0, !dbg !4541
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4542 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4546, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4547, metadata !DIExpression()), !dbg !4548
  br label %land.end, !dbg !4549

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4549
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4549
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !4549
  ret %struct.edge_def* %0, !dbg !4549
}

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_condition(%struct.rtx_def*, %struct.rtx_def**, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @iv_number_of_iterations(%struct.loop* %loop, %struct.rtx_def* %insn, %struct.rtx_def* %condition, %struct.niter_desc* %desc) unnamed_addr #4 !dbg !4550 {
entry:
  %iv0 = alloca %struct.rtx_iv, align 8
  %iv1 = alloca %struct.rtx_iv, align 8
  %tmp_iv = alloca %struct.rtx_iv, align 8
  %mmin = alloca %struct.rtx_def*, align 8
  %mmax = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4554, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4555, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.rtx_def* %condition, metadata !4556, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.niter_desc* %desc, metadata !4557, metadata !DIExpression()), !dbg !4609
  %0 = bitcast %struct.rtx_iv* %iv0 to i8*, !dbg !4610
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !4610
  %1 = bitcast %struct.rtx_iv* %iv1 to i8*, !dbg !4610
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1) #8, !dbg !4610
  %2 = bitcast %struct.rtx_iv* %tmp_iv to i8*, !dbg !4610
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2) #8, !dbg !4610
  %3 = bitcast %struct.rtx_def** %mmin to i8*, !dbg !4611
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4611
  %4 = bitcast %struct.rtx_def** %mmax to i8*, !dbg !4611
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4611
  call void @llvm.dbg.value(metadata i32 0, metadata !4587, metadata !DIExpression()), !dbg !4609
  %assumptions = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 6, !dbg !4612
  store %struct.rtx_def* null, %struct.rtx_def** %assumptions, align 8, !dbg !4613
  %noloop_assumptions = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 7, !dbg !4614
  store %struct.rtx_def* null, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !4615
  %infinite = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 8, !dbg !4616
  store %struct.rtx_def* null, %struct.rtx_def** %infinite, align 8, !dbg !4617
  %simple_p = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 2, !dbg !4618
  store i8 1, i8* %simple_p, align 8, !dbg !4619
  %const_iter = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 3, !dbg !4620
  store i8 0, i8* %const_iter, align 1, !dbg !4621
  %niter_expr = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 11, !dbg !4622
  store %struct.rtx_def* null, %struct.rtx_def** %niter_expr, align 8, !dbg !4623
  %niter_max = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 5, !dbg !4624
  store i64 0, i64* %niter_max, align 8, !dbg !4625
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %condition, i64 0, i32 0, !dbg !4626
  %bf.load = load i32, i32* %5, align 8, !dbg !4626
  %bf.clear = and i32 %bf.load, 65535, !dbg !4626
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4572, metadata !DIExpression()), !dbg !4609
  %idxprom = zext i32 %bf.clear to i64, !dbg !4627
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4627
  %6 = load i32, i32* %arrayidx, align 4, !dbg !4627
  %cmp = icmp ult i32 %6, 2, !dbg !4627
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4627

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2284, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4627
  br label %cond.end, !dbg !4627

cond.end:                                         ; preds = %entry, %cond.true
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %condition, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4628
  %7 = bitcast %union.rtunion_def* %arrayidx4 to i32**, !dbg !4628
  %8 = load i32*, i32** %7, align 8, !dbg !4628
  %bf.load5 = load i32, i32* %8, align 8, !dbg !4628
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !4628
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !4628
  call void @llvm.dbg.value(metadata i32 %bf.clear6, metadata !4573, metadata !DIExpression()), !dbg !4609
  %cmp7 = icmp eq i32 %bf.clear6, 0, !dbg !4629
  br i1 %cmp7, label %if.then, label %if.end, !dbg !4631

if.then:                                          ; preds = %cond.end
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %condition, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4632
  %10 = bitcast %union.rtunion_def* %9 to i32**, !dbg !4632
  %11 = load i32*, i32** %10, align 8, !dbg !4632
  %bf.load12 = load i32, i32* %11, align 8, !dbg !4632
  %bf.lshr13 = lshr i32 %bf.load12, 16, !dbg !4632
  %bf.clear14 = and i32 %bf.lshr13, 255, !dbg !4632
  call void @llvm.dbg.value(metadata i32 %bf.clear14, metadata !4573, metadata !DIExpression()), !dbg !4609
  br label %if.end, !dbg !4633

if.end:                                           ; preds = %if.then, %cond.end
  %mode.0 = phi i32 [ %bf.clear14, %if.then ], [ %bf.clear6, %cond.end ], !dbg !4609
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !4573, metadata !DIExpression()), !dbg !4609
  %cmp15 = icmp eq i32 %mode.0, 0, !dbg !4634
  br i1 %cmp15, label %cond.true16, label %cond.end18, !dbg !4634

cond.true16:                                      ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2290, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4634
  br label %cond.end18, !dbg !4634

cond.end18:                                       ; preds = %if.end, %cond.true16
  %idxprom20 = zext i32 %mode.0 to i64, !dbg !4635
  %arrayidx21 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom20, !dbg !4635
  %12 = load i8, i8* %arrayidx21, align 1, !dbg !4635
  %cmp22 = icmp eq i8 %12, 2, !dbg !4637
  br i1 %cmp22, label %if.end30, label %land.lhs.true, !dbg !4638

land.lhs.true:                                    ; preds = %cond.end18
  %cmp27 = icmp eq i8 %12, 3, !dbg !4639
  br i1 %cmp27, label %if.end30, label %fail, !dbg !4640

if.end30:                                         ; preds = %land.lhs.true, %cond.end18
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !4641
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !4641
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !4558, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv0, metadata !4567, metadata !DIExpression(DW_OP_deref)), !dbg !4609
  %call = call zeroext i8 @iv_analyze(%struct.rtx_def* %insn, %struct.rtx_def* %13, %struct.rtx_iv* nonnull %iv0) #7, !dbg !4642
  %tobool = icmp eq i8 %call, 0, !dbg !4642
  br i1 %tobool, label %fail, label %if.end36, !dbg !4644

if.end36:                                         ; preds = %if.end30
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 5, !dbg !4645
  %14 = load i32, i32* %extend_mode, align 8, !dbg !4645
  %cmp37 = icmp eq i32 %14, 0, !dbg !4647
  br i1 %cmp37, label %if.then39, label %if.end42, !dbg !4648

if.then39:                                        ; preds = %if.end36
  store i32 %mode.0, i32* %extend_mode, align 8, !dbg !4649
  %mode41 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 6, !dbg !4650
  store i32 %mode.0, i32* %mode41, align 4, !dbg !4651
  br label %if.end42, !dbg !4652

if.end42:                                         ; preds = %if.then39, %if.end36
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %condition, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4653
  %rt_rtx46 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !4653
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !4653
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !4559, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv1, metadata !4568, metadata !DIExpression(DW_OP_deref)), !dbg !4609
  %call47 = call zeroext i8 @iv_analyze(%struct.rtx_def* %insn, %struct.rtx_def* %16, %struct.rtx_iv* nonnull %iv1) #7, !dbg !4654
  %tobool48 = icmp eq i8 %call47, 0, !dbg !4654
  br i1 %tobool48, label %fail, label %if.end50, !dbg !4656

if.end50:                                         ; preds = %if.end42
  %extend_mode51 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 5, !dbg !4657
  %17 = load i32, i32* %extend_mode51, align 8, !dbg !4657
  %cmp52 = icmp eq i32 %17, 0, !dbg !4659
  br i1 %cmp52, label %if.then54, label %if.end57, !dbg !4660

if.then54:                                        ; preds = %if.end50
  store i32 %mode.0, i32* %extend_mode51, align 8, !dbg !4661
  %mode56 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 6, !dbg !4662
  store i32 %mode.0, i32* %mode56, align 4, !dbg !4663
  br label %if.end57, !dbg !4664

if.end57:                                         ; preds = %if.then54, %if.end50
  %18 = phi i32 [ %mode.0, %if.then54 ], [ %17, %if.end50 ]
  %19 = load i32, i32* %extend_mode, align 8, !dbg !4665
  %idxprom59 = zext i32 %19 to i64, !dbg !4665
  %arrayidx60 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom59, !dbg !4665
  %20 = load i8, i8* %arrayidx60, align 1, !dbg !4665
  %cmp65 = icmp ugt i8 %20, 8, !dbg !4667
  br i1 %cmp65, label %fail, label %lor.lhs.false, !dbg !4668

lor.lhs.false:                                    ; preds = %if.end57
  %idxprom68 = zext i32 %18 to i64, !dbg !4669
  %arrayidx69 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom68, !dbg !4669
  %21 = load i8, i8* %arrayidx69, align 1, !dbg !4669
  %cmp75 = icmp ugt i8 %21, 8, !dbg !4670
  br i1 %cmp75, label %fail, label %if.end78, !dbg !4671

if.end78:                                         ; preds = %lor.lhs.false
  %trunc = trunc i32 %bf.load to i16, !dbg !4672
  switch i16 %trunc, label %fail [
    i16 82, label %sw.bb
    i16 83, label %sw.bb
    i16 86, label %sw.bb
    i16 87, label %sw.bb
    i16 80, label %sw.epilog
    i16 84, label %sw.epilog
    i16 88, label %sw.epilog
    i16 85, label %sw.epilog
    i16 89, label %sw.epilog
  ], !dbg !4672

sw.bb:                                            ; preds = %if.end78, %if.end78, %if.end78, %if.end78
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %0, i64 56, i1 false), !dbg !4673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 56, i1 false), !dbg !4675
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 56, i1 false), !dbg !4676
  %call79 = call i32 @swap_condition(i32 %bf.clear) #6, !dbg !4677
  call void @llvm.dbg.value(metadata i32 %call79, metadata !4572, metadata !DIExpression()), !dbg !4609
  br label %sw.epilog, !dbg !4678

sw.epilog:                                        ; preds = %if.end78, %if.end78, %if.end78, %if.end78, %if.end78, %sw.bb
  %cond.0 = phi i32 [ %call79, %sw.bb ], [ %bf.clear, %if.end78 ], [ %bf.clear, %if.end78 ], [ %bf.clear, %if.end78 ], [ %bf.clear, %if.end78 ], [ %bf.clear, %if.end78 ], !dbg !4609
  call void @llvm.dbg.value(metadata i32 %cond.0, metadata !4572, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv0, metadata !4567, metadata !DIExpression(DW_OP_deref)), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv1, metadata !4568, metadata !DIExpression(DW_OP_deref)), !dbg !4609
  %call81 = call fastcc zeroext i8 @canonicalize_iv_subregs(%struct.rtx_iv* nonnull %iv0, %struct.rtx_iv* nonnull %iv1, i32 %cond.0, %struct.niter_desc* %desc) #7, !dbg !4679
  %tobool82 = icmp eq i8 %call81, 0, !dbg !4679
  br i1 %tobool82, label %fail, label %if.end84, !dbg !4681

if.end84:                                         ; preds = %sw.epilog
  %22 = load i32, i32* %extend_mode, align 8, !dbg !4682
  call void @llvm.dbg.value(metadata i32 %22, metadata !4574, metadata !DIExpression()), !dbg !4609
  %mode86 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 6, !dbg !4683
  %23 = load i32, i32* %mode86, align 4, !dbg !4683
  call void @llvm.dbg.value(metadata i32 %23, metadata !4573, metadata !DIExpression()), !dbg !4609
  %idxprom87 = zext i32 %23 to i64, !dbg !4684
  %arrayidx88 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom87, !dbg !4684
  %24 = load i8, i8* %arrayidx88, align 1, !dbg !4684
  %conv90 = zext i8 %24 to i64, !dbg !4684
  %mul91 = shl nuw nsw i64 %conv90, 3, !dbg !4684
  call void @llvm.dbg.value(metadata i64 %mul91, metadata !4580, metadata !DIExpression()), !dbg !4609
  %25 = or i32 %cond.0, 1, !dbg !4685
  %26 = icmp eq i32 %25, 85, !dbg !4685
  %lor.ext = zext i1 %26 to i32, !dbg !4685
  call void @llvm.dbg.value(metadata %struct.rtx_def** %mmin, metadata !4575, metadata !DIExpression(DW_OP_deref)), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.rtx_def** %mmax, metadata !4576, metadata !DIExpression(DW_OP_deref)), !dbg !4609
  call void @get_mode_bounds(i32 %23, i32 %lor.ext, i32 %22, %struct.rtx_def** nonnull %mmin, %struct.rtx_def** nonnull %mmax) #6, !dbg !4686
  %27 = load %struct.rtx_def*, %struct.rtx_def** %mmin, align 8, !dbg !4687
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !4575, metadata !DIExpression()), !dbg !4609
  %call98 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %27, i32 %22) #7, !dbg !4688
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call98, metadata !4577, metadata !DIExpression()), !dbg !4609
  %28 = load %struct.rtx_def*, %struct.rtx_def** %mmax, align 8, !dbg !4689
  call void @llvm.dbg.value(metadata %struct.rtx_def* %28, metadata !4576, metadata !DIExpression()), !dbg !4609
  %call99 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %28, i32 %22) #7, !dbg !4690
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call99, metadata !4578, metadata !DIExpression()), !dbg !4609
  %step100 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 1, !dbg !4691
  %29 = bitcast %struct.rtx_def** %step100 to i32**, !dbg !4691
  %30 = load i32*, i32** %29, align 8, !dbg !4691
  %bf.load101 = load i32, i32* %30, align 8, !dbg !4691
  %bf.clear102 = and i32 %bf.load101, 65535, !dbg !4691
  %cmp103 = icmp eq i32 %bf.clear102, 30, !dbg !4691
  %31 = bitcast i32* %30 to %struct.rtx_def*, !dbg !4693
  br i1 %cmp103, label %lor.lhs.false105, label %fail, !dbg !4693

lor.lhs.false105:                                 ; preds = %if.end84
  %step106 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 1, !dbg !4694
  %32 = bitcast %struct.rtx_def** %step106 to i32**, !dbg !4694
  %33 = load i32*, i32** %32, align 8, !dbg !4694
  %bf.load107 = load i32, i32* %33, align 8, !dbg !4694
  %bf.clear108 = and i32 %bf.load107, 65535, !dbg !4694
  %cmp109 = icmp eq i32 %bf.clear108, 30, !dbg !4694
  %34 = bitcast i32* %33 to %struct.rtx_def*, !dbg !4695
  br i1 %cmp109, label %if.end112, label %fail, !dbg !4695

if.end112:                                        ; preds = %lor.lhs.false105
  %35 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4696
  %cmp114 = icmp eq %struct.rtx_def* %35, %31, !dbg !4698
  br i1 %cmp114, label %if.end130, label %land.lhs.true116, !dbg !4699

land.lhs.true116:                                 ; preds = %if.end112
  %cmp118 = icmp eq %struct.rtx_def* %35, %34, !dbg !4700
  br i1 %cmp118, label %if.end130, label %if.then120, !dbg !4701

if.then120:                                       ; preds = %land.lhs.true116
  %cmp121 = icmp eq i32 %cond.0, 80, !dbg !4702
  br i1 %cmp121, label %if.end124, label %fail, !dbg !4705

if.end124:                                        ; preds = %if.then120
  %call127 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %22, %struct.rtx_def* %31, %struct.rtx_def* %34) #6, !dbg !4706
  store %struct.rtx_def* %call127, %struct.rtx_def** %step100, align 8, !dbg !4707
  %36 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !4708
  %37 = bitcast %struct.rtx_def** %step106 to i64*, !dbg !4709
  store i64 %36, i64* %37, align 8, !dbg !4709
  %38 = inttoptr i64 %36 to %struct.rtx_def*, !dbg !4710
  br label %if.end130, !dbg !4710

if.end130:                                        ; preds = %land.lhs.true116, %if.end112, %if.end124
  %39 = phi %struct.rtx_def* [ %34, %land.lhs.true116 ], [ %31, %if.end112 ], [ %38, %if.end124 ]
  %40 = phi %struct.rtx_def* [ %31, %land.lhs.true116 ], [ %31, %if.end112 ], [ %call127, %if.end124 ]
  %41 = phi %struct.rtx_def* [ %34, %land.lhs.true116 ], [ %34, %if.end112 ], [ %38, %if.end124 ]
  %42 = phi %struct.rtx_def* [ %31, %land.lhs.true116 ], [ %31, %if.end112 ], [ %call127, %if.end124 ]
  %43 = phi %struct.rtx_def* [ %34, %land.lhs.true116 ], [ %31, %if.end112 ], [ %38, %if.end124 ]
  %44 = phi %struct.rtx_def* [ %31, %land.lhs.true116 ], [ %31, %if.end112 ], [ %call127, %if.end124 ]
  %45 = phi %struct.rtx_def* [ %34, %land.lhs.true116 ], [ %31, %if.end112 ], [ %38, %if.end124 ]
  %46 = phi %struct.rtx_def* [ %34, %land.lhs.true116 ], [ %34, %if.end112 ], [ %38, %if.end124 ]
  %47 = phi %struct.rtx_def* [ %34, %land.lhs.true116 ], [ %31, %if.end112 ], [ %38, %if.end124 ], !dbg !4711
  %48 = phi %struct.rtx_def* [ %31, %land.lhs.true116 ], [ %31, %if.end112 ], [ %call127, %if.end124 ], !dbg !4713
  %cmp132 = icmp eq %struct.rtx_def* %48, %47, !dbg !4714
  br i1 %cmp132, label %land.lhs.true134, label %if.end139, !dbg !4715

land.lhs.true134:                                 ; preds = %if.end130
  %cmp136 = icmp eq %struct.rtx_def* %46, %45, !dbg !4716
  br i1 %cmp136, label %fail, label %if.end139, !dbg !4717

if.end139:                                        ; preds = %land.lhs.true134, %if.end130
  %cmp140 = icmp eq i32 %cond.0, 80, !dbg !4718
  br i1 %cmp140, label %if.end164, label %if.then142, !dbg !4720

if.then142:                                       ; preds = %if.end139
  %cmp144 = icmp eq %struct.rtx_def* %44, %43, !dbg !4721
  br i1 %cmp144, label %if.then146, label %if.else, !dbg !4724

if.then146:                                       ; preds = %if.then142
  %u148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i64 0, i32 1, !dbg !4725
  %arrayidx149 = bitcast %union.u* %u148 to i64*, !dbg !4725
  %49 = load i64, i64* %arrayidx149, align 8, !dbg !4725
  %sub = sub nsw i64 0, %49, !dbg !4726
  call void @llvm.dbg.value(metadata i64 %sub, metadata !4586, metadata !DIExpression()), !dbg !4609
  br label %if.end154, !dbg !4727

if.else:                                          ; preds = %if.then142
  %u151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i64 0, i32 1, !dbg !4728
  %arrayidx153 = bitcast %union.u* %u151 to i64*, !dbg !4728
  %50 = load i64, i64* %arrayidx153, align 8, !dbg !4728
  call void @llvm.dbg.value(metadata i64 %50, metadata !4586, metadata !DIExpression()), !dbg !4609
  br label %if.end154

if.end154:                                        ; preds = %if.else, %if.then146
  %step_val.0 = phi i64 [ %sub, %if.then146 ], [ %50, %if.else ], !dbg !4729
  call void @llvm.dbg.value(metadata i64 %step_val.0, metadata !4586, metadata !DIExpression()), !dbg !4609
  %cmp155 = icmp slt i64 %step_val.0, 0, !dbg !4730
  br i1 %cmp155, label %fail, label %if.end158, !dbg !4732

if.end158:                                        ; preds = %if.end154
  %51 = call i64 @llvm.ctpop.i64(i64 %step_val.0), !dbg !4733, !range !4734
  %tobool161 = icmp ult i64 %51, 2, !dbg !4733
  %conv162 = zext i1 %tobool161 to i8, !dbg !4733
  call void @llvm.dbg.value(metadata i8 %conv162, metadata !4589, metadata !DIExpression()), !dbg !4609
  br label %if.end164, !dbg !4735

if.end164:                                        ; preds = %if.end139, %if.end158
  %step_is_pow2.0 = phi i8 [ %conv162, %if.end158 ], [ 0, %if.end139 ], !dbg !4736
  call void @llvm.dbg.value(metadata i8 %step_is_pow2.0, metadata !4589, metadata !DIExpression()), !dbg !4609
  switch i32 %cond.0, label %sw.epilog202 [
    i32 85, label %sw.bb165
    i32 89, label %sw.bb165
  ], !dbg !4737

sw.bb165:                                         ; preds = %if.end164, %if.end164
  %cmp167 = icmp eq %struct.rtx_def* %40, %39, !dbg !4738
  br i1 %cmp167, label %if.then169, label %if.else179, !dbg !4741

if.then169:                                       ; preds = %sw.bb165
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 0, !dbg !4742
  %52 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !4742
  %call170 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %52, i32 %22) #7, !dbg !4744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call170, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call171 = call %struct.rtx_def* @simplify_gen_relational(i32 81, i32 16, i32 %23, %struct.rtx_def* %call170, %struct.rtx_def* %call99) #6, !dbg !4745
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call171, metadata !4570, metadata !DIExpression()), !dbg !4609
  %53 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !4746
  %cmp172 = icmp eq %struct.rtx_def* %call171, %53, !dbg !4748
  br i1 %cmp172, label %zero_iter_simplify, label %if.end175, !dbg !4749

if.end175:                                        ; preds = %if.then169
  %54 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !4750
  %55 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !4751
  %call177 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %22, %struct.rtx_def* %54, %struct.rtx_def* %55) #6, !dbg !4752
  store %struct.rtx_def* %call177, %struct.rtx_def** %base, align 8, !dbg !4753
  br label %if.end190, !dbg !4754

if.else179:                                       ; preds = %sw.bb165
  %base180 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 0, !dbg !4755
  %56 = load %struct.rtx_def*, %struct.rtx_def** %base180, align 8, !dbg !4755
  %call181 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %56, i32 %22) #7, !dbg !4757
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call181, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call182 = call %struct.rtx_def* @simplify_gen_relational(i32 81, i32 16, i32 %23, %struct.rtx_def* %call181, %struct.rtx_def* %call98) #6, !dbg !4758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call182, metadata !4570, metadata !DIExpression()), !dbg !4609
  %57 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !4759
  %cmp183 = icmp eq %struct.rtx_def* %call182, %57, !dbg !4761
  br i1 %cmp183, label %zero_iter_simplify, label %if.end186, !dbg !4762

if.end186:                                        ; preds = %if.else179
  %58 = load %struct.rtx_def*, %struct.rtx_def** %base180, align 8, !dbg !4763
  %59 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !4764
  %call188 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %22, %struct.rtx_def* %58, %struct.rtx_def* %59) #6, !dbg !4765
  store %struct.rtx_def* %call188, %struct.rtx_def** %base180, align 8, !dbg !4766
  br label %if.end190

if.end190:                                        ; preds = %if.end186, %if.end175
  %assumption.0 = phi %struct.rtx_def* [ %call171, %if.end175 ], [ %call182, %if.end186 ], !dbg !4767
  call void @llvm.dbg.value(metadata %struct.rtx_def* %assumption.0, metadata !4570, metadata !DIExpression()), !dbg !4609
  %60 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4768
  %cmp191 = icmp eq %struct.rtx_def* %assumption.0, %60, !dbg !4770
  br i1 %cmp191, label %if.end197, label %if.then193, !dbg !4771

if.then193:                                       ; preds = %if.end190
  %61 = load %struct.rtx_def*, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !4772
  %call195 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %assumption.0, %struct.rtx_def* %61) #6, !dbg !4773
  store %struct.rtx_def* %call195, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !4774
  br label %if.end197, !dbg !4775

if.end197:                                        ; preds = %if.end190, %if.then193
  %cmp198 = icmp eq i32 %cond.0, 85, !dbg !4776
  %cond200 = select i1 %cmp198, i32 84, i32 88, !dbg !4777
  call void @llvm.dbg.value(metadata i32 %cond200, metadata !4572, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i32 1, metadata !4587, metadata !DIExpression()), !dbg !4609
  br label %sw.epilog202, !dbg !4778

sw.epilog202:                                     ; preds = %if.end164, %if.end197
  %cond.1 = phi i32 [ %cond200, %if.end197 ], [ %cond.0, %if.end164 ], !dbg !4609
  %was_sharp.0 = phi i32 [ 1, %if.end197 ], [ 0, %if.end164 ], !dbg !4609
  call void @llvm.dbg.value(metadata i32 %was_sharp.0, metadata !4587, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i32 %cond.1, metadata !4572, metadata !DIExpression()), !dbg !4609
  %cond = icmp eq i32 %cond.1, 80, !dbg !4779
  br i1 %cond, label %if.end382, label %if.then205, !dbg !4779

if.then205:                                       ; preds = %sw.epilog202
  %62 = load %struct.rtx_def*, %struct.rtx_def** %step100, align 8, !dbg !4780
  %63 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4784
  %cmp207 = icmp eq %struct.rtx_def* %62, %63, !dbg !4785
  br i1 %cmp207, label %if.then209, label %if.else218, !dbg !4786

if.then209:                                       ; preds = %if.then205
  %base210 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 0, !dbg !4787
  %64 = load %struct.rtx_def*, %struct.rtx_def** %base210, align 8, !dbg !4787
  %call211 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %64, i32 %22) #7, !dbg !4789
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call211, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call212 = call i32 @rtx_equal_p(%struct.rtx_def* %call211, %struct.rtx_def* %call98) #6, !dbg !4790
  %tobool213 = icmp eq i32 %call212, 0, !dbg !4790
  br i1 %tobool213, label %if.end228, label %if.then214, !dbg !4792

if.then214:                                       ; preds = %if.then209
  %65 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !4793
  %call215 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %65, %struct.rtx_def* null) #6, !dbg !4795
  store %struct.rtx_def* %call215, %struct.rtx_def** %infinite, align 8, !dbg !4796
  br label %zero_iter_simplify, !dbg !4797

if.else218:                                       ; preds = %if.then205
  %base219 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 0, !dbg !4798
  %66 = load %struct.rtx_def*, %struct.rtx_def** %base219, align 8, !dbg !4798
  %call220 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %66, i32 %22) #7, !dbg !4800
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call220, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call221 = call i32 @rtx_equal_p(%struct.rtx_def* %call220, %struct.rtx_def* %call99) #6, !dbg !4801
  %tobool222 = icmp eq i32 %call221, 0, !dbg !4801
  br i1 %tobool222, label %if.end228, label %if.then223, !dbg !4803

if.then223:                                       ; preds = %if.else218
  %67 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !4804
  %call224 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %67, %struct.rtx_def* null) #6, !dbg !4806
  store %struct.rtx_def* %call224, %struct.rtx_def** %infinite, align 8, !dbg !4807
  br label %zero_iter_simplify, !dbg !4808

if.end228:                                        ; preds = %if.then209, %if.else218
  br i1 false, label %if.end228.if.end382_crit_edge, label %if.then231, !dbg !4809

if.end228.if.end382_crit_edge:                    ; preds = %if.end228
  br label %if.end382, !dbg !4809

if.then231:                                       ; preds = %if.end228
  %68 = load %struct.rtx_def*, %struct.rtx_def** %step100, align 8, !dbg !4810
  %69 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4814
  %cmp233 = icmp eq %struct.rtx_def* %68, %69, !dbg !4815
  br i1 %cmp233, label %if.then235, label %if.else238, !dbg !4816

if.then235:                                       ; preds = %if.then231
  %70 = load %struct.rtx_def*, %struct.rtx_def** %step106, align 8, !dbg !4817
  %call237 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %22, %struct.rtx_def* %70, i32 %22) #6, !dbg !4818
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call237, metadata !4561, metadata !DIExpression()), !dbg !4609
  br label %if.end240, !dbg !4819

if.else238:                                       ; preds = %if.then231
  call void @llvm.dbg.value(metadata %struct.rtx_def* %68, metadata !4561, metadata !DIExpression()), !dbg !4609
  br label %if.end240

if.end240:                                        ; preds = %if.else238, %if.then235
  %step.0 = phi %struct.rtx_def* [ %call237, %if.then235 ], [ %68, %if.else238 ], !dbg !4820
  call void @llvm.dbg.value(metadata %struct.rtx_def* %step.0, metadata !4561, metadata !DIExpression()), !dbg !4609
  %base241 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 0, !dbg !4821
  %71 = load %struct.rtx_def*, %struct.rtx_def** %base241, align 8, !dbg !4821
  %base242 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 0, !dbg !4822
  %72 = load %struct.rtx_def*, %struct.rtx_def** %base242, align 8, !dbg !4822
  %call243 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %22, %struct.rtx_def* %71, %struct.rtx_def* %72) #6, !dbg !4823
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call243, metadata !4560, metadata !DIExpression()), !dbg !4609
  %call244 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %call243, i32 %22) #7, !dbg !4824
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call244, metadata !4560, metadata !DIExpression()), !dbg !4609
  %call245 = call %struct.rtx_def* @simplify_gen_binary(i32 60, i32 %23, %struct.rtx_def* %call244, %struct.rtx_def* %step.0) #6, !dbg !4825
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call245, metadata !4560, metadata !DIExpression()), !dbg !4609
  %73 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4826
  call void @llvm.dbg.value(metadata %struct.rtx_def* %73, metadata !4563, metadata !DIExpression()), !dbg !4609
  %74 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !4827
  call void @llvm.dbg.value(metadata %struct.rtx_def* %74, metadata !4571, metadata !DIExpression()), !dbg !4609
  %75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call245, i64 0, i32 0, !dbg !4828
  %bf.load246 = load i32, i32* %75, align 8, !dbg !4828
  %bf.clear247 = and i32 %bf.load246, 65535, !dbg !4828
  %cmp248 = icmp eq i32 %bf.clear247, 30, !dbg !4828
  br i1 %cmp248, label %if.then250, label %if.end287, !dbg !4830

if.then250:                                       ; preds = %if.end240
  %tobool251 = icmp eq i32 %was_sharp.0, 0, !dbg !4831
  br i1 %tobool251, label %if.else263, label %land.lhs.true252, !dbg !4834

land.lhs.true252:                                 ; preds = %if.then250
  %u253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call245, i64 0, i32 1, !dbg !4835
  %arrayidx255 = bitcast %union.u* %u253 to i64*, !dbg !4835
  %76 = load i64, i64* %arrayidx255, align 8, !dbg !4835
  %u256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %step.0, i64 0, i32 1, !dbg !4836
  %arrayidx258 = bitcast %union.u* %u256 to i64*, !dbg !4836
  %77 = load i64, i64* %arrayidx258, align 8, !dbg !4836
  %sub259 = add nsw i64 %77, -1, !dbg !4837
  %cmp260 = icmp eq i64 %76, %sub259, !dbg !4838
  br i1 %cmp260, label %if.then262, label %if.else263, !dbg !4839

if.then262:                                       ; preds = %land.lhs.true252
  call void @llvm.dbg.value(metadata %struct.rtx_def* %74, metadata !4563, metadata !DIExpression()), !dbg !4609
  br label %if.end287, !dbg !4840

if.else263:                                       ; preds = %if.then250, %land.lhs.true252
  %78 = load %struct.rtx_def*, %struct.rtx_def** %step100, align 8, !dbg !4842
  %cmp265 = icmp eq %struct.rtx_def* %78, %73, !dbg !4844
  br i1 %cmp265, label %if.then267, label %if.else276, !dbg !4845

if.then267:                                       ; preds = %if.else263
  %79 = load %struct.rtx_def*, %struct.rtx_def** %mmin, align 8, !dbg !4846
  call void @llvm.dbg.value(metadata %struct.rtx_def* %79, metadata !4575, metadata !DIExpression()), !dbg !4609
  %call268 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %22, %struct.rtx_def* %79, %struct.rtx_def* %step.0) #6, !dbg !4848
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call268, metadata !4562, metadata !DIExpression()), !dbg !4609
  %call269 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %22, %struct.rtx_def* %call268, %struct.rtx_def* %call245) #6, !dbg !4849
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call269, metadata !4562, metadata !DIExpression()), !dbg !4609
  %call270 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %call269, i32 %22) #7, !dbg !4850
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call270, metadata !4562, metadata !DIExpression()), !dbg !4609
  %80 = load %struct.rtx_def*, %struct.rtx_def** %base242, align 8, !dbg !4851
  %call272 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %80, i32 %22) #7, !dbg !4852
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call272, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call273 = call %struct.rtx_def* @simplify_gen_relational(i32 %cond.1, i32 16, i32 %23, %struct.rtx_def* %call270, %struct.rtx_def* %call272) #6, !dbg !4853
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call273, metadata !4563, metadata !DIExpression()), !dbg !4609
  %call274 = call i32 @reverse_condition(i32 %cond.1) #6, !dbg !4854
  %call275 = call %struct.rtx_def* @simplify_gen_relational(i32 %call274, i32 16, i32 %23, %struct.rtx_def* %call270, %struct.rtx_def* %call272) #6, !dbg !4855
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call275, metadata !4571, metadata !DIExpression()), !dbg !4609
  br label %if.end287, !dbg !4856

if.else276:                                       ; preds = %if.else263
  %81 = load %struct.rtx_def*, %struct.rtx_def** %mmax, align 8, !dbg !4857
  call void @llvm.dbg.value(metadata %struct.rtx_def* %81, metadata !4576, metadata !DIExpression()), !dbg !4609
  %call277 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %22, %struct.rtx_def* %81, %struct.rtx_def* %step.0) #6, !dbg !4859
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call277, metadata !4562, metadata !DIExpression()), !dbg !4609
  %call278 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %22, %struct.rtx_def* %call277, %struct.rtx_def* %call245) #6, !dbg !4860
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call278, metadata !4562, metadata !DIExpression()), !dbg !4609
  %call279 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %call278, i32 %22) #7, !dbg !4861
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call279, metadata !4562, metadata !DIExpression()), !dbg !4609
  %82 = load %struct.rtx_def*, %struct.rtx_def** %base241, align 8, !dbg !4862
  %call281 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %82, i32 %22) #7, !dbg !4863
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call281, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call282 = call %struct.rtx_def* @simplify_gen_relational(i32 %cond.1, i32 16, i32 %23, %struct.rtx_def* %call281, %struct.rtx_def* %call279) #6, !dbg !4864
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call282, metadata !4563, metadata !DIExpression()), !dbg !4609
  %call283 = call i32 @reverse_condition(i32 %cond.1) #6, !dbg !4865
  %call284 = call %struct.rtx_def* @simplify_gen_relational(i32 %call283, i32 16, i32 %23, %struct.rtx_def* %call281, %struct.rtx_def* %call279) #6, !dbg !4866
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call284, metadata !4571, metadata !DIExpression()), !dbg !4609
  br label %if.end287

if.end287:                                        ; preds = %if.then262, %if.else276, %if.then267, %if.end240
  %may_not_xform.2 = phi %struct.rtx_def* [ %74, %if.end240 ], [ %74, %if.then262 ], [ %call275, %if.then267 ], [ %call284, %if.else276 ], !dbg !4867
  %may_xform.2 = phi %struct.rtx_def* [ %73, %if.end240 ], [ %74, %if.then262 ], [ %call273, %if.then267 ], [ %call282, %if.else276 ], !dbg !4868
  call void @llvm.dbg.value(metadata %struct.rtx_def* %may_xform.2, metadata !4563, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.rtx_def* %may_not_xform.2, metadata !4571, metadata !DIExpression()), !dbg !4609
  %83 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4869
  %cmp288 = icmp eq %struct.rtx_def* %may_xform.2, %83, !dbg !4871
  br i1 %cmp288, label %if.end382, label %if.then290, !dbg !4872

if.then290:                                       ; preds = %if.end287
  %84 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !4873
  %cmp291 = icmp eq %struct.rtx_def* %may_xform.2, %84, !dbg !4876
  br i1 %cmp291, label %if.end304, label %if.then293, !dbg !4877

if.then293:                                       ; preds = %if.then290
  %tobool294 = icmp eq i8 %step_is_pow2.0, 0, !dbg !4878
  br i1 %tobool294, label %if.else299, label %if.then295, !dbg !4881

if.then295:                                       ; preds = %if.then293
  %85 = load %struct.rtx_def*, %struct.rtx_def** %infinite, align 8, !dbg !4882
  %call297 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %may_not_xform.2, %struct.rtx_def* %85) #6, !dbg !4883
  store %struct.rtx_def* %call297, %struct.rtx_def** %infinite, align 8, !dbg !4884
  br label %if.end304, !dbg !4885

if.else299:                                       ; preds = %if.then293
  %86 = load %struct.rtx_def*, %struct.rtx_def** %assumptions, align 8, !dbg !4886
  %call301 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %may_xform.2, %struct.rtx_def* %86) #6, !dbg !4887
  store %struct.rtx_def* %call301, %struct.rtx_def** %assumptions, align 8, !dbg !4888
  br label %if.end304

if.end304:                                        ; preds = %if.then290, %if.then295, %if.else299
  %87 = load %struct.rtx_def*, %struct.rtx_def** %step100, align 8, !dbg !4889
  %u306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i64 0, i32 1, !dbg !4889
  %arrayidx308 = bitcast %union.u* %u306 to i64*, !dbg !4889
  %88 = load i64, i64* %arrayidx308, align 8, !dbg !4889
  %89 = load %struct.rtx_def*, %struct.rtx_def** %step106, align 8, !dbg !4890
  %u310 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i64 0, i32 1, !dbg !4890
  %arrayidx312 = bitcast %union.u* %u310 to i64*, !dbg !4890
  %90 = load i64, i64* %arrayidx312, align 8, !dbg !4890
  %sub313 = sub nsw i64 %88, %90, !dbg !4891
  call void @llvm.dbg.value(metadata i64 %sub313, metadata !4585, metadata !DIExpression()), !dbg !4609
  %91 = bitcast %struct.rtx_iv* %iv1 to i32**, !dbg !4892
  %92 = load i32*, i32** %91, align 8, !dbg !4892
  %bf.load315 = load i32, i32* %92, align 8, !dbg !4892
  %bf.clear316 = and i32 %bf.load315, 65535, !dbg !4892
  %cmp317 = icmp eq i32 %bf.clear316, 30, !dbg !4892
  %93 = bitcast i32* %92 to %struct.rtx_def*, !dbg !4894
  br i1 %cmp317, label %if.then319, label %if.else324, !dbg !4894

if.then319:                                       ; preds = %if.end304
  %u321 = getelementptr inbounds i32, i32* %92, i64 2, !dbg !4895
  %arrayidx323 = bitcast i32* %u321 to i64*, !dbg !4895
  %94 = load i64, i64* %arrayidx323, align 8, !dbg !4895
  call void @llvm.dbg.value(metadata i64 %94, metadata !4583, metadata !DIExpression()), !dbg !4609
  br label %if.end329, !dbg !4896

if.else324:                                       ; preds = %if.end304
  %u325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call99, i64 0, i32 1, !dbg !4897
  %arrayidx327 = bitcast %union.u* %u325 to i64*, !dbg !4897
  %95 = load i64, i64* %arrayidx327, align 8, !dbg !4897
  %sub328 = sub nsw i64 %95, %sub313, !dbg !4898
  call void @llvm.dbg.value(metadata i64 %sub328, metadata !4583, metadata !DIExpression()), !dbg !4609
  br label %if.end329

if.end329:                                        ; preds = %if.else324, %if.then319
  %up.0 = phi i64 [ %94, %if.then319 ], [ %sub328, %if.else324 ], !dbg !4899
  call void @llvm.dbg.value(metadata i64 %up.0, metadata !4583, metadata !DIExpression()), !dbg !4609
  %96 = bitcast %struct.rtx_iv* %iv0 to i32**, !dbg !4900
  %97 = load i32*, i32** %96, align 8, !dbg !4900
  %bf.load331 = load i32, i32* %97, align 8, !dbg !4900
  %bf.clear332 = and i32 %bf.load331, 65535, !dbg !4900
  %cmp333 = icmp eq i32 %bf.clear332, 30, !dbg !4900
  %.cast = bitcast i32* %97 to %struct.rtx_def*, !dbg !4900
  %cond339 = select i1 %cmp333, %struct.rtx_def* %.cast, %struct.rtx_def* %call98, !dbg !4900
  %u340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond339, i64 0, i32 1, !dbg !4900
  %arrayidx342 = bitcast %union.u* %u340 to i64*, !dbg !4900
  %98 = load i64, i64* %arrayidx342, align 8, !dbg !4900
  call void @llvm.dbg.value(metadata i64 %98, metadata !4584, metadata !DIExpression()), !dbg !4609
  %sub343 = sub nsw i64 %up.0, %98, !dbg !4901
  %div = sdiv i64 %sub343, %sub313, !dbg !4902
  %add = add nsw i64 %div, 1, !dbg !4903
  store i64 %add, i64* %niter_max, align 8, !dbg !4904
  %99 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4905
  %cmp346 = icmp eq %struct.rtx_def* %87, %99, !dbg !4907
  br i1 %cmp346, label %if.then348, label %if.else355, !dbg !4908

if.then348:                                       ; preds = %if.end329
  %call350 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %22, %struct.rtx_def* %.cast, %struct.rtx_def* %call245) #6, !dbg !4909
  store %struct.rtx_def* %call350, %struct.rtx_def** %base242, align 8, !dbg !4911
  %call353 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %22, %struct.rtx_def* %call350, %struct.rtx_def* %step.0) #6, !dbg !4912
  store %struct.rtx_def* %call353, %struct.rtx_def** %base242, align 8, !dbg !4913
  br label %if.end362, !dbg !4914

if.else355:                                       ; preds = %if.end329
  %call357 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %22, %struct.rtx_def* %93, %struct.rtx_def* %call245) #6, !dbg !4915
  store %struct.rtx_def* %call357, %struct.rtx_def** %base241, align 8, !dbg !4917
  %call360 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %22, %struct.rtx_def* %call357, %struct.rtx_def* %step.0) #6, !dbg !4918
  store %struct.rtx_def* %call360, %struct.rtx_def** %base241, align 8, !dbg !4919
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %base242, align 8, !dbg !4920
  br label %if.end362

if.end362:                                        ; preds = %if.else355, %if.then348
  %100 = phi %struct.rtx_def* [ %.pre, %if.else355 ], [ %call353, %if.then348 ], !dbg !4920
  %call364 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %100, i32 %22) #7, !dbg !4921
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call364, metadata !4565, metadata !DIExpression()), !dbg !4609
  %101 = load %struct.rtx_def*, %struct.rtx_def** %base241, align 8, !dbg !4922
  %call366 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %101, i32 %22) #7, !dbg !4923
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call366, metadata !4566, metadata !DIExpression()), !dbg !4609
  %call367 = call i32 @reverse_condition(i32 %cond.1) #6, !dbg !4924
  %call368 = call %struct.rtx_def* @simplify_gen_relational(i32 %call367, i32 16, i32 %23, %struct.rtx_def* %call364, %struct.rtx_def* %call366) #6, !dbg !4925
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call368, metadata !4570, metadata !DIExpression()), !dbg !4609
  %102 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !4926
  %cmp369 = icmp eq %struct.rtx_def* %call368, %102, !dbg !4928
  br i1 %cmp369, label %zero_iter_simplify, label %if.else372, !dbg !4929

if.else372:                                       ; preds = %if.end362
  %103 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4930
  %cmp373 = icmp eq %struct.rtx_def* %call368, %103, !dbg !4932
  br i1 %cmp373, label %if.end382, label %if.then375, !dbg !4933

if.then375:                                       ; preds = %if.else372
  %104 = load %struct.rtx_def*, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !4934
  %call377 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call368, %struct.rtx_def* %104) #6, !dbg !4935
  store %struct.rtx_def* %call377, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !4936
  br label %if.end382, !dbg !4937

if.end382:                                        ; preds = %if.end228.if.end382_crit_edge, %if.else372, %if.end287, %sw.epilog202, %if.then375
  %cond.3 = phi i32 [ undef, %if.end228.if.end382_crit_edge ], [ 80, %sw.epilog202 ], [ %cond.1, %if.end287 ], [ 80, %if.else372 ], [ 80, %if.then375 ], !dbg !4609
  call void @llvm.dbg.value(metadata i32 %cond.3, metadata !4572, metadata !DIExpression()), !dbg !4609
  %cmp383 = icmp eq i32 %cond.3, 80, !dbg !4938
  br i1 %cmp383, label %if.then385, label %if.else441, !dbg !4939

if.then385:                                       ; preds = %if.end382
  %base386 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 0, !dbg !4940
  %105 = load %struct.rtx_def*, %struct.rtx_def** %base386, align 8, !dbg !4940
  %base387 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 0, !dbg !4942
  %106 = load %struct.rtx_def*, %struct.rtx_def** %base387, align 8, !dbg !4942
  %call388 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %22, %struct.rtx_def* %105, %struct.rtx_def* %106) #6, !dbg !4943
  store %struct.rtx_def* %call388, %struct.rtx_def** %base386, align 8, !dbg !4944
  %107 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !4945
  %108 = bitcast %struct.rtx_iv* %iv0 to i64*, !dbg !4946
  store i64 %107, i64* %108, align 8, !dbg !4946
  %109 = load %struct.rtx_def*, %struct.rtx_def** %step100, align 8, !dbg !4947
  %110 = load %struct.rtx_def*, %struct.rtx_def** %step106, align 8, !dbg !4948
  %call393 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %22, %struct.rtx_def* %109, %struct.rtx_def* %110) #6, !dbg !4949
  store %struct.rtx_def* %call393, %struct.rtx_def** %step100, align 8, !dbg !4950
  %111 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !4951
  %112 = bitcast %struct.rtx_def** %step106 to i64*, !dbg !4952
  store i64 %111, i64* %112, align 8, !dbg !4952
  %u397 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call393, i64 0, i32 1, !dbg !4953
  %arrayidx399 = bitcast %union.u* %u397 to i64*, !dbg !4953
  %113 = load i64, i64* %arrayidx399, align 8, !dbg !4953
  %cmp400 = icmp slt i64 %113, 0, !dbg !4955
  br i1 %cmp400, label %if.then402, label %if.end409, !dbg !4956

if.then402:                                       ; preds = %if.then385
  %call404 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %22, %struct.rtx_def* %call393, i32 %23) #6, !dbg !4957
  store %struct.rtx_def* %call404, %struct.rtx_def** %step100, align 8, !dbg !4959
  %114 = load %struct.rtx_def*, %struct.rtx_def** %base386, align 8, !dbg !4960
  %call407 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %22, %struct.rtx_def* %114, i32 %23) #6, !dbg !4961
  store %struct.rtx_def* %call407, %struct.rtx_def** %base386, align 8, !dbg !4962
  %.pre1 = load %struct.rtx_def*, %struct.rtx_def** %step100, align 8, !dbg !4963
  br label %if.end409, !dbg !4964

if.end409:                                        ; preds = %if.then402, %if.then385
  %115 = phi %struct.rtx_def* [ %.pre1, %if.then402 ], [ %call393, %if.then385 ], !dbg !4963
  %call411 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %115, i32 %22) #7, !dbg !4965
  store %struct.rtx_def* %call411, %struct.rtx_def** %step100, align 8, !dbg !4966
  %u414 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call411, i64 0, i32 1, !dbg !4967
  %arrayidx416 = bitcast %union.u* %u414 to i64*, !dbg !4967
  %116 = load i64, i64* %arrayidx416, align 8, !dbg !4967
  call void @llvm.dbg.value(metadata i64 %116, metadata !4579, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i64 1, metadata !4581, metadata !DIExpression()), !dbg !4609
  br label %while.cond, !dbg !4968

while.cond:                                       ; preds = %while.body, %if.end409
  %s.0 = phi i64 [ %116, %if.end409 ], [ %div419, %while.body ], !dbg !4969
  %size.0 = phi i64 [ %mul91, %if.end409 ], [ %dec, %while.body ], !dbg !4609
  %d.0 = phi i64 [ 1, %if.end409 ], [ %mul420, %while.body ], !dbg !4969
  call void @llvm.dbg.value(metadata i64 %d.0, metadata !4581, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i64 %size.0, metadata !4580, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i64 %s.0, metadata !4579, metadata !DIExpression()), !dbg !4609
  %rem = and i64 %s.0, 1, !dbg !4970
  %cmp417 = icmp eq i64 %rem, 0, !dbg !4971
  br i1 %cmp417, label %while.body, label %while.end, !dbg !4968

while.body:                                       ; preds = %while.cond
  %div419 = lshr i64 %s.0, 1, !dbg !4972
  call void @llvm.dbg.value(metadata i64 %div419, metadata !4579, metadata !DIExpression()), !dbg !4609
  %mul420 = shl i64 %d.0, 1, !dbg !4974
  call void @llvm.dbg.value(metadata i64 %mul420, metadata !4581, metadata !DIExpression()), !dbg !4609
  %dec = add i64 %size.0, -1, !dbg !4975
  call void @llvm.dbg.value(metadata i64 %dec, metadata !4580, metadata !DIExpression()), !dbg !4609
  br label %while.cond, !dbg !4968, !llvm.loop !4976

while.end:                                        ; preds = %while.cond
  %s.0.lcssa = phi i64 [ %s.0, %while.cond ], !dbg !4969
  %size.0.lcssa = phi i64 [ %size.0, %while.cond ], !dbg !4609
  %d.0.lcssa = phi i64 [ %d.0, %while.cond ], !dbg !4969
  call void @llvm.dbg.value(metadata i64 %s.0.lcssa, metadata !4579, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !4580, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i64 %d.0.lcssa, metadata !4581, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i64 %s.0.lcssa, metadata !4579, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !4580, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i64 %d.0.lcssa, metadata !4581, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i64 %s.0.lcssa, metadata !4579, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !4580, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i64 %d.0.lcssa, metadata !4581, metadata !DIExpression()), !dbg !4609
  %sub421 = add i64 %size.0.lcssa, -1, !dbg !4978
  %shl422 = shl i64 2, %sub421, !dbg !4978
  %sub423 = add i64 %shl422, -1, !dbg !4978
  %call424 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub423) #6, !dbg !4978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call424, metadata !4562, metadata !DIExpression()), !dbg !4609
  %117 = load %struct.rtx_def*, %struct.rtx_def** %base386, align 8, !dbg !4979
  %call426 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %117, i32 %22) #7, !dbg !4980
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call426, metadata !4566, metadata !DIExpression()), !dbg !4609
  %call427 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %d.0.lcssa) #6, !dbg !4981
  %call428 = call %struct.rtx_def* @simplify_gen_binary(i32 60, i32 %23, %struct.rtx_def* %call426, %struct.rtx_def* %call427) #6, !dbg !4982
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call428, metadata !4564, metadata !DIExpression()), !dbg !4609
  %118 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4983
  %call429 = call %struct.rtx_def* @simplify_gen_relational(i32 80, i32 16, i32 %23, %struct.rtx_def* %call428, %struct.rtx_def* %118) #6, !dbg !4984
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call429, metadata !4570, metadata !DIExpression()), !dbg !4609
  %119 = load %struct.rtx_def*, %struct.rtx_def** %infinite, align 8, !dbg !4985
  %call431 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call429, %struct.rtx_def* %119) #6, !dbg !4986
  store %struct.rtx_def* %call431, %struct.rtx_def** %infinite, align 8, !dbg !4987
  %call433 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %d.0.lcssa) #6, !dbg !4988
  %call434 = call %struct.rtx_def* @simplify_gen_binary(i32 59, i32 %23, %struct.rtx_def* %call426, %struct.rtx_def* %call433) #6, !dbg !4989
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call434, metadata !4564, metadata !DIExpression()), !dbg !4609
  %conv435 = trunc i64 %size.0.lcssa to i32, !dbg !4990
  %call436 = call fastcc i64 @inverse(i64 %s.0.lcssa, i32 %conv435) #7, !dbg !4991
  call void @llvm.dbg.value(metadata i64 %call436, metadata !4582, metadata !DIExpression()), !dbg !4609
  %call437 = call %struct.rtx_def* @gen_int_mode(i64 %call436, i32 %23) #6, !dbg !4992
  %call438 = call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %23, %struct.rtx_def* %call434, %struct.rtx_def* %call437) #6, !dbg !4993
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call438, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call439 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %23, %struct.rtx_def* %call438, %struct.rtx_def* %call424) #6, !dbg !4994
  br label %if.end533, !dbg !4995

if.else441:                                       ; preds = %if.end382
  %120 = load %struct.rtx_def*, %struct.rtx_def** %step106, align 8, !dbg !4996
  %121 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4997
  %cmp443 = icmp eq %struct.rtx_def* %120, %121, !dbg !4998
  br i1 %cmp443, label %if.then445, label %if.else480, !dbg !4999

if.then445:                                       ; preds = %if.else441
  %122 = load %struct.rtx_def*, %struct.rtx_def** %step100, align 8, !dbg !5000
  call void @llvm.dbg.value(metadata %struct.rtx_def* %122, metadata !4561, metadata !DIExpression()), !dbg !4609
  %base447 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 0, !dbg !5001
  %123 = load %struct.rtx_def*, %struct.rtx_def** %base447, align 8, !dbg !5001
  %call448 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %123, i32 %22) #7, !dbg !5002
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call448, metadata !4565, metadata !DIExpression()), !dbg !4609
  %base449 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 0, !dbg !5003
  %124 = load %struct.rtx_def*, %struct.rtx_def** %base449, align 8, !dbg !5003
  %call450 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %124, i32 %22) #7, !dbg !5004
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call450, metadata !4566, metadata !DIExpression()), !dbg !4609
  %call451 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %122, i32 %22) #7, !dbg !5005
  %call452 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %23, %struct.rtx_def* %call99, %struct.rtx_def* %call451) #6, !dbg !5006
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call452, metadata !4562, metadata !DIExpression()), !dbg !4609
  %tobool453 = icmp eq i8 %step_is_pow2.0, 0, !dbg !5007
  br i1 %tobool453, label %if.else466, label %if.then454, !dbg !5008

if.then454:                                       ; preds = %if.then445
  %call455 = call i32 @reverse_condition(i32 %cond.3) #6, !dbg !5009
  %call456 = call %struct.rtx_def* @simplify_gen_relational(i32 %call455, i32 16, i32 %23, %struct.rtx_def* %call450, %struct.rtx_def* %call452) #6, !dbg !5010
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call456, metadata !4570, metadata !DIExpression()), !dbg !4609
  %call457 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call448) #6, !dbg !5011
  %call458 = call %struct.rtx_def* @simplify_gen_binary(i32 60, i32 %23, %struct.rtx_def* %call457, %struct.rtx_def* %122) #6, !dbg !5012
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call458, metadata !4590, metadata !DIExpression()), !dbg !5013
  %call459 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call450) #6, !dbg !5014
  %call460 = call %struct.rtx_def* @simplify_gen_binary(i32 60, i32 %23, %struct.rtx_def* %call459, %struct.rtx_def* %122) #6, !dbg !5015
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call460, metadata !4597, metadata !DIExpression()), !dbg !5013
  %call461 = call %struct.rtx_def* @simplify_gen_relational(i32 %cond.3, i32 16, i32 %23, %struct.rtx_def* %call458, %struct.rtx_def* %call460) #6, !dbg !5016
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call461, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call462 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 16, %struct.rtx_def* %call456, %struct.rtx_def* %call461) #6, !dbg !5017
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call462, metadata !4570, metadata !DIExpression()), !dbg !4609
  %125 = load %struct.rtx_def*, %struct.rtx_def** %infinite, align 8, !dbg !5018
  %call464 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call462, %struct.rtx_def* %125) #6, !dbg !5019
  store %struct.rtx_def* %call464, %struct.rtx_def** %infinite, align 8, !dbg !5020
  br label %if.end471, !dbg !5021

if.else466:                                       ; preds = %if.then445
  %call467 = call %struct.rtx_def* @simplify_gen_relational(i32 %cond.3, i32 16, i32 %23, %struct.rtx_def* %call450, %struct.rtx_def* %call452) #6, !dbg !5022
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call467, metadata !4570, metadata !DIExpression()), !dbg !4609
  %126 = load %struct.rtx_def*, %struct.rtx_def** %assumptions, align 8, !dbg !5024
  %call469 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call467, %struct.rtx_def* %126) #6, !dbg !5025
  store %struct.rtx_def* %call469, %struct.rtx_def** %assumptions, align 8, !dbg !5026
  br label %if.end471

if.end471:                                        ; preds = %if.else466, %if.then454
  %127 = load %struct.rtx_def*, %struct.rtx_def** %base449, align 8, !dbg !5027
  %128 = load %struct.rtx_def*, %struct.rtx_def** %step100, align 8, !dbg !5028
  %call474 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %22, %struct.rtx_def* %127, %struct.rtx_def* %128) #6, !dbg !5029
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call474, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call475 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %call474, i32 %22) #7, !dbg !5030
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call475, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call476 = call i32 @reverse_condition(i32 %cond.3) #6, !dbg !5031
  %call477 = call %struct.rtx_def* @simplify_gen_relational(i32 %call476, i32 16, i32 %23, %struct.rtx_def* %call448, %struct.rtx_def* %call475) #6, !dbg !5032
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call477, metadata !4570, metadata !DIExpression()), !dbg !4609
  %call478 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %23, %struct.rtx_def* %call450, %struct.rtx_def* %122) #6, !dbg !5033
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call478, metadata !4560, metadata !DIExpression()), !dbg !4609
  %call479 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %23, %struct.rtx_def* %call478, %struct.rtx_def* %call448) #6, !dbg !5034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call479, metadata !4560, metadata !DIExpression()), !dbg !4609
  br label %if.end518, !dbg !5035

if.else480:                                       ; preds = %if.else441
  %call482 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %23, %struct.rtx_def* %120, i32 %23) #6, !dbg !5036
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call482, metadata !4561, metadata !DIExpression()), !dbg !4609
  %base483 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 0, !dbg !5037
  %129 = load %struct.rtx_def*, %struct.rtx_def** %base483, align 8, !dbg !5037
  %call484 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %129, i32 %22) #7, !dbg !5038
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call484, metadata !4565, metadata !DIExpression()), !dbg !4609
  %base485 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 0, !dbg !5039
  %130 = load %struct.rtx_def*, %struct.rtx_def** %base485, align 8, !dbg !5039
  %call486 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %130, i32 %22) #7, !dbg !5040
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call486, metadata !4566, metadata !DIExpression()), !dbg !4609
  %call487 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %call482, i32 %22) #7, !dbg !5041
  %call488 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %23, %struct.rtx_def* %call98, %struct.rtx_def* %call487) #6, !dbg !5042
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call488, metadata !4562, metadata !DIExpression()), !dbg !4609
  %tobool489 = icmp eq i8 %step_is_pow2.0, 0, !dbg !5043
  br i1 %tobool489, label %if.else504, label %if.then490, !dbg !5044

if.then490:                                       ; preds = %if.else480
  %call493 = call i32 @reverse_condition(i32 %cond.3) #6, !dbg !5045
  %call494 = call %struct.rtx_def* @simplify_gen_relational(i32 %call493, i32 16, i32 %23, %struct.rtx_def* %call488, %struct.rtx_def* %call484) #6, !dbg !5046
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call494, metadata !4570, metadata !DIExpression()), !dbg !4609
  %call495 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call484) #6, !dbg !5047
  %call496 = call %struct.rtx_def* @simplify_gen_binary(i32 60, i32 %23, %struct.rtx_def* %call495, %struct.rtx_def* %call482) #6, !dbg !5048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call496, metadata !4598, metadata !DIExpression()), !dbg !5049
  %call497 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call486) #6, !dbg !5050
  %call498 = call %struct.rtx_def* @simplify_gen_binary(i32 60, i32 %23, %struct.rtx_def* %call497, %struct.rtx_def* %call482) #6, !dbg !5051
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call498, metadata !4602, metadata !DIExpression()), !dbg !5049
  %call499 = call %struct.rtx_def* @simplify_gen_relational(i32 %cond.3, i32 16, i32 %23, %struct.rtx_def* %call496, %struct.rtx_def* %call498) #6, !dbg !5052
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call499, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call500 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 16, %struct.rtx_def* %call494, %struct.rtx_def* %call499) #6, !dbg !5053
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call500, metadata !4570, metadata !DIExpression()), !dbg !4609
  %131 = load %struct.rtx_def*, %struct.rtx_def** %infinite, align 8, !dbg !5054
  %call502 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call500, %struct.rtx_def* %131) #6, !dbg !5055
  store %struct.rtx_def* %call502, %struct.rtx_def** %infinite, align 8, !dbg !5056
  br label %if.end509, !dbg !5057

if.else504:                                       ; preds = %if.else480
  %call505 = call %struct.rtx_def* @simplify_gen_relational(i32 %cond.3, i32 16, i32 %23, %struct.rtx_def* %call488, %struct.rtx_def* %call484) #6, !dbg !5058
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call505, metadata !4570, metadata !DIExpression()), !dbg !4609
  %132 = load %struct.rtx_def*, %struct.rtx_def** %assumptions, align 8, !dbg !5060
  %call507 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call505, %struct.rtx_def* %132) #6, !dbg !5061
  store %struct.rtx_def* %call507, %struct.rtx_def** %assumptions, align 8, !dbg !5062
  br label %if.end509

if.end509:                                        ; preds = %if.else504, %if.then490
  %133 = load %struct.rtx_def*, %struct.rtx_def** %base483, align 8, !dbg !5063
  %134 = load %struct.rtx_def*, %struct.rtx_def** %step106, align 8, !dbg !5064
  %call512 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %22, %struct.rtx_def* %133, %struct.rtx_def* %134) #6, !dbg !5065
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call512, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call513 = call %struct.rtx_def* @lowpart_subreg(i32 %23, %struct.rtx_def* %call512, i32 %22) #7, !dbg !5066
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call513, metadata !4564, metadata !DIExpression()), !dbg !4609
  %call514 = call i32 @reverse_condition(i32 %cond.3) #6, !dbg !5067
  %call515 = call %struct.rtx_def* @simplify_gen_relational(i32 %call514, i32 16, i32 %23, %struct.rtx_def* %call513, %struct.rtx_def* %call486) #6, !dbg !5068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call515, metadata !4570, metadata !DIExpression()), !dbg !4609
  %call516 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %23, %struct.rtx_def* %call484, %struct.rtx_def* %call482) #6, !dbg !5069
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call516, metadata !4560, metadata !DIExpression()), !dbg !4609
  %call517 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %23, %struct.rtx_def* %call486, %struct.rtx_def* %call516) #6, !dbg !5070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call517, metadata !4560, metadata !DIExpression()), !dbg !4609
  br label %if.end518

if.end518:                                        ; preds = %if.end509, %if.end471
  %assumption.1 = phi %struct.rtx_def* [ %call477, %if.end471 ], [ %call515, %if.end509 ], !dbg !5071
  %step.1 = phi %struct.rtx_def* [ %122, %if.end471 ], [ %call482, %if.end509 ], !dbg !5071
  %delta.0 = phi %struct.rtx_def* [ %call479, %if.end471 ], [ %call517, %if.end509 ], !dbg !5071
  call void @llvm.dbg.value(metadata %struct.rtx_def* %delta.0, metadata !4560, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.rtx_def* %step.1, metadata !4561, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.rtx_def* %assumption.1, metadata !4570, metadata !DIExpression()), !dbg !4609
  %135 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !5072
  %cmp519 = icmp eq %struct.rtx_def* %assumption.1, %135, !dbg !5074
  br i1 %cmp519, label %zero_iter_simplify, label %if.else522, !dbg !5075

if.else522:                                       ; preds = %if.end518
  %136 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5076
  %cmp523 = icmp eq %struct.rtx_def* %assumption.1, %136, !dbg !5078
  br i1 %cmp523, label %if.end530, label %if.then525, !dbg !5079

if.then525:                                       ; preds = %if.else522
  %137 = load %struct.rtx_def*, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !5080
  %call527 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %assumption.1, %struct.rtx_def* %137) #6, !dbg !5081
  store %struct.rtx_def* %call527, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !5082
  br label %if.end530, !dbg !5083

if.end530:                                        ; preds = %if.else522, %if.then525
  %call531 = call %struct.rtx_def* @simplify_gen_binary(i32 59, i32 %23, %struct.rtx_def* %delta.0, %struct.rtx_def* %step.1) #6, !dbg !5084
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call531, metadata !4560, metadata !DIExpression()), !dbg !4609
  br label %if.end533

if.end533:                                        ; preds = %if.end530, %while.end
  %storemerge = phi %struct.rtx_def* [ %call531, %if.end530 ], [ %call439, %while.end ], !dbg !5085
  %138 = phi %struct.rtx_def* [ %call531, %if.end530 ], [ %call439, %while.end ], !dbg !5086
  store %struct.rtx_def* %storemerge, %struct.rtx_def** %niter_expr, align 8, !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %138, metadata !4588, metadata !DIExpression()), !dbg !4609
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 61, %struct.rtx_def** nonnull %assumptions) #7, !dbg !5087
  %139 = load %struct.rtx_def*, %struct.rtx_def** %assumptions, align 8, !dbg !5088
  %tobool537 = icmp eq %struct.rtx_def* %139, null, !dbg !5090
  br i1 %tobool537, label %if.end547, label %land.lhs.true538, !dbg !5091

land.lhs.true538:                                 ; preds = %if.end533
  %arrayidx542 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5092
  %rt_rtx543 = bitcast %union.rtunion_def* %arrayidx542 to %struct.rtx_def**, !dbg !5092
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx543, align 8, !dbg !5092
  %141 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5093
  %cmp544 = icmp eq %struct.rtx_def* %140, %141, !dbg !5094
  br i1 %cmp544, label %fail, label %if.end547, !dbg !5095

if.end547:                                        ; preds = %if.end533, %land.lhs.true538
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 62, %struct.rtx_def** nonnull %noloop_assumptions) #7, !dbg !5096
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 62, %struct.rtx_def** nonnull %infinite) #7, !dbg !5097
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 0, %struct.rtx_def** nonnull %niter_expr) #7, !dbg !5098
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 61, %struct.rtx_def** nonnull %assumptions) #7, !dbg !5099
  %142 = load %struct.rtx_def*, %struct.rtx_def** %assumptions, align 8, !dbg !5100
  %tobool553 = icmp eq %struct.rtx_def* %142, null, !dbg !5102
  br i1 %tobool553, label %if.end563, label %land.lhs.true554, !dbg !5103

land.lhs.true554:                                 ; preds = %if.end547
  %arrayidx558 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5104
  %rt_rtx559 = bitcast %union.rtunion_def* %arrayidx558 to %struct.rtx_def**, !dbg !5104
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx559, align 8, !dbg !5104
  %144 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5105
  %cmp560 = icmp eq %struct.rtx_def* %143, %144, !dbg !5106
  br i1 %cmp560, label %fail, label %if.end563, !dbg !5107

if.end563:                                        ; preds = %if.end547, %land.lhs.true554
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 62, %struct.rtx_def** nonnull %noloop_assumptions) #7, !dbg !5108
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 62, %struct.rtx_def** nonnull %infinite) #7, !dbg !5109
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 0, %struct.rtx_def** nonnull %niter_expr) #7, !dbg !5110
  %145 = load %struct.rtx_def*, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !5111
  %tobool568 = icmp eq %struct.rtx_def* %145, null, !dbg !5113
  br i1 %tobool568, label %if.end578, label %land.lhs.true569, !dbg !5114

land.lhs.true569:                                 ; preds = %if.end563
  %arrayidx573 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5115
  %rt_rtx574 = bitcast %union.rtunion_def* %arrayidx573 to %struct.rtx_def**, !dbg !5115
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx574, align 8, !dbg !5115
  %147 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !5116
  %cmp575 = icmp eq %struct.rtx_def* %146, %147, !dbg !5117
  br i1 %cmp575, label %zero_iter, label %if.end578, !dbg !5118

if.end578:                                        ; preds = %if.end563, %land.lhs.true569
  %148 = bitcast %struct.rtx_def** %niter_expr to i32**, !dbg !5119
  %149 = load i32*, i32** %148, align 8, !dbg !5119
  %bf.load580 = load i32, i32* %149, align 8, !dbg !5119
  %bf.clear581 = and i32 %bf.load580, 65535, !dbg !5119
  %cmp582 = icmp eq i32 %bf.clear581, 30, !dbg !5119
  br i1 %cmp582, label %if.then584, label %if.else595, !dbg !5120

if.then584:                                       ; preds = %if.end578
  %u586 = getelementptr inbounds i32, i32* %149, i64 2, !dbg !5121
  %arrayidx588 = bitcast i32* %u586 to i64*, !dbg !5121
  %150 = load i64, i64* %arrayidx588, align 8, !dbg !5121
  call void @llvm.dbg.value(metadata i64 %150, metadata !4603, metadata !DIExpression()), !dbg !5122
  store i8 1, i8* %const_iter, align 1, !dbg !5123
  %mode590 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 10, !dbg !5124
  %151 = load i32, i32* %mode590, align 4, !dbg !5124
  %idxprom591 = zext i32 %151 to i64, !dbg !5124
  %arrayidx592 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom591, !dbg !5124
  %152 = load i64, i64* %arrayidx592, align 8, !dbg !5124
  %and593 = and i64 %150, %152, !dbg !5125
  %niter = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 4, !dbg !5126
  store i64 %and593, i64* %niter, align 8, !dbg !5127
  store i64 %and593, i64* %niter_max, align 8, !dbg !5128
  br label %cleanup, !dbg !5129

if.else595:                                       ; preds = %if.end578
  %153 = load i64, i64* %niter_max, align 8, !dbg !5130
  %tobool597 = icmp eq i64 %153, 0, !dbg !5133
  br i1 %tobool597, label %if.then598, label %if.end601, !dbg !5134

if.then598:                                       ; preds = %if.else595
  %call599 = call fastcc i64 @determine_max_iter(%struct.loop* %loop, %struct.niter_desc* %desc, %struct.rtx_def* %138) #7, !dbg !5135
  store i64 %call599, i64* %niter_max, align 8, !dbg !5136
  br label %if.end601, !dbg !5137

if.end601:                                        ; preds = %if.else595, %if.then598
  store %struct.rtx_def* %138, %struct.rtx_def** %niter_expr, align 8, !dbg !5138
  br label %cleanup

zero_iter_simplify:                               ; preds = %if.end518, %if.end362, %if.else179, %if.then169, %if.then223, %if.then214
  call void @llvm.dbg.label(metadata !4606), !dbg !5139
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 61, %struct.rtx_def** nonnull %assumptions) #7, !dbg !5140
  %154 = load %struct.rtx_def*, %struct.rtx_def** %assumptions, align 8, !dbg !5141
  %tobool606 = icmp eq %struct.rtx_def* %154, null, !dbg !5143
  br i1 %tobool606, label %if.end616, label %land.lhs.true607, !dbg !5144

land.lhs.true607:                                 ; preds = %zero_iter_simplify
  %arrayidx611 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5145
  %rt_rtx612 = bitcast %union.rtunion_def* %arrayidx611 to %struct.rtx_def**, !dbg !5145
  %155 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx612, align 8, !dbg !5145
  %156 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5146
  %cmp613 = icmp eq %struct.rtx_def* %155, %156, !dbg !5147
  br i1 %cmp613, label %fail, label %if.end616, !dbg !5148

if.end616:                                        ; preds = %zero_iter_simplify, %land.lhs.true607
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 62, %struct.rtx_def** nonnull %infinite) #7, !dbg !5149
  br label %zero_iter, !dbg !5149

zero_iter:                                        ; preds = %land.lhs.true569, %if.end616
  call void @llvm.dbg.label(metadata !4607), !dbg !5150
  store i8 1, i8* %const_iter, align 1, !dbg !5151
  %niter619 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 4, !dbg !5152
  store i64 0, i64* %niter619, align 8, !dbg !5153
  store i64 0, i64* %niter_max, align 8, !dbg !5154
  store %struct.rtx_def* null, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !5155
  %157 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !5156
  %158 = bitcast %struct.rtx_def** %niter_expr to i64*, !dbg !5157
  store i64 %157, i64* %158, align 8, !dbg !5157
  br label %cleanup, !dbg !5158

fail:                                             ; preds = %land.lhs.true, %if.then120, %sw.epilog, %if.end42, %if.end30, %land.lhs.true607, %land.lhs.true554, %land.lhs.true538, %if.end154, %land.lhs.true134, %if.end84, %lor.lhs.false105, %if.end78, %if.end57, %lor.lhs.false
  call void @llvm.dbg.label(metadata !4608), !dbg !5159
  store i8 0, i8* %simple_p, align 8, !dbg !5160
  br label %cleanup, !dbg !5161

cleanup:                                          ; preds = %if.then584, %if.end601, %fail, %zero_iter
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5162
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2) #8, !dbg !5162
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1) #8, !dbg !5162
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !5162
  ret void, !dbg !5162
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @canonicalize_iv_subregs(%struct.rtx_iv* %iv0, %struct.rtx_iv* %iv1, i32 %cond, %struct.niter_desc* %desc) unnamed_addr #4 !dbg !5163 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv0, metadata !5167, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv1, metadata !5168, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5169, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata %struct.niter_desc* %desc, metadata !5170, metadata !DIExpression()), !dbg !5173
  %first_special = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 7, !dbg !5174
  %bf.load = load i8, i8* %first_special, align 8, !dbg !5174
  %bf.clear = and i8 %bf.load, 1, !dbg !5174
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !5176
  br i1 %tobool, label %lor.lhs.false, label %cleanup, !dbg !5177

lor.lhs.false:                                    ; preds = %entry
  %mult = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 4, !dbg !5178
  %0 = load %struct.rtx_def*, %struct.rtx_def** %mult, align 8, !dbg !5178
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !5179
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !5180
  br i1 %cmp, label %lor.lhs.false1, label %cleanup, !dbg !5181

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %delta = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 3, !dbg !5182
  %2 = load %struct.rtx_def*, %struct.rtx_def** %delta, align 8, !dbg !5182
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5183
  %cmp2 = icmp eq %struct.rtx_def* %2, %3, !dbg !5184
  br i1 %cmp2, label %if.end, label %cleanup, !dbg !5185

if.end:                                           ; preds = %lor.lhs.false1
  %first_special3 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 7, !dbg !5186
  %bf.load4 = load i8, i8* %first_special3, align 8, !dbg !5186
  %bf.clear5 = and i8 %bf.load4, 1, !dbg !5186
  %tobool7 = icmp eq i8 %bf.clear5, 0, !dbg !5188
  br i1 %tobool7, label %lor.lhs.false8, label %cleanup, !dbg !5189

lor.lhs.false8:                                   ; preds = %if.end
  %mult9 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 4, !dbg !5190
  %4 = load %struct.rtx_def*, %struct.rtx_def** %mult9, align 8, !dbg !5190
  %cmp10 = icmp eq %struct.rtx_def* %4, %0, !dbg !5191
  br i1 %cmp10, label %lor.lhs.false11, label %cleanup, !dbg !5192

lor.lhs.false11:                                  ; preds = %lor.lhs.false8
  %delta12 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 3, !dbg !5193
  %5 = load %struct.rtx_def*, %struct.rtx_def** %delta12, align 8, !dbg !5193
  %cmp13 = icmp eq %struct.rtx_def* %5, %2, !dbg !5194
  br i1 %cmp13, label %if.end15, label %cleanup, !dbg !5195

if.end15:                                         ; preds = %lor.lhs.false11
  switch i32 %cond, label %sw.default [
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 88, label %sw.bb22
    i32 89, label %sw.bb22
    i32 80, label %sw.bb30
  ], !dbg !5196

sw.bb:                                            ; preds = %if.end15, %if.end15
  %extend = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 2, !dbg !5197
  %6 = load i32, i32* %extend, align 8, !dbg !5197
  %cmp16 = icmp eq i32 %6, 99, !dbg !5200
  br i1 %cmp16, label %cleanup, label %lor.lhs.false17, !dbg !5201

lor.lhs.false17:                                  ; preds = %sw.bb
  %extend18 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 2, !dbg !5202
  %7 = load i32, i32* %extend18, align 8, !dbg !5202
  %cmp19 = icmp eq i32 %7, 99, !dbg !5203
  br i1 %cmp19, label %cleanup, label %sw.epilog, !dbg !5204

sw.bb22:                                          ; preds = %if.end15, %if.end15
  %extend23 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 2, !dbg !5205
  %8 = load i32, i32* %extend23, align 8, !dbg !5205
  %cmp24 = icmp eq i32 %8, 98, !dbg !5207
  br i1 %cmp24, label %cleanup, label %lor.lhs.false25, !dbg !5208

lor.lhs.false25:                                  ; preds = %sw.bb22
  %extend26 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 2, !dbg !5209
  %9 = load i32, i32* %extend26, align 8, !dbg !5209
  %cmp27 = icmp eq i32 %9, 98, !dbg !5210
  br i1 %cmp27, label %cleanup, label %sw.epilog, !dbg !5211

sw.bb30:                                          ; preds = %if.end15
  %extend31 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 2, !dbg !5212
  %10 = load i32, i32* %extend31, align 8, !dbg !5212
  %cmp32 = icmp eq i32 %10, 0, !dbg !5214
  br i1 %cmp32, label %if.end40, label %land.lhs.true, !dbg !5215

land.lhs.true:                                    ; preds = %sw.bb30
  %extend33 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 2, !dbg !5216
  %11 = load i32, i32* %extend33, align 8, !dbg !5216
  %cmp34 = icmp eq i32 %11, 0, !dbg !5217
  br i1 %cmp34, label %if.end40, label %land.lhs.true35, !dbg !5218

land.lhs.true35:                                  ; preds = %land.lhs.true
  %cmp38 = icmp eq i32 %10, %11, !dbg !5219
  br i1 %cmp38, label %if.end40, label %cleanup, !dbg !5220

if.end40:                                         ; preds = %land.lhs.true35, %land.lhs.true, %sw.bb30
  call void @llvm.dbg.value(metadata i8 0, metadata !5172, metadata !DIExpression()), !dbg !5173
  br i1 %cmp32, label %if.end47, label %if.then43, !dbg !5221

if.then43:                                        ; preds = %if.end40
  %cmp45 = icmp eq i32 %10, 98, !dbg !5222
  %conv46 = zext i1 %cmp45 to i8, !dbg !5224
  call void @llvm.dbg.value(metadata i8 %conv46, metadata !5172, metadata !DIExpression()), !dbg !5173
  br label %if.end47, !dbg !5225

if.end47:                                         ; preds = %if.end40, %if.then43
  %signed_p.0 = phi i8 [ %conv46, %if.then43 ], [ 0, %if.end40 ], !dbg !5226
  call void @llvm.dbg.value(metadata i8 %signed_p.0, metadata !5172, metadata !DIExpression()), !dbg !5173
  %extend48 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 2, !dbg !5227
  %12 = load i32, i32* %extend48, align 8, !dbg !5227
  %cmp49 = icmp eq i32 %12, 0, !dbg !5229
  br i1 %cmp49, label %sw.epilog, label %if.then51, !dbg !5230

if.then51:                                        ; preds = %if.end47
  %cmp53 = icmp eq i32 %12, 98, !dbg !5231
  %conv55 = zext i1 %cmp53 to i8, !dbg !5232
  call void @llvm.dbg.value(metadata i8 %conv55, metadata !5172, metadata !DIExpression()), !dbg !5173
  br label %sw.epilog, !dbg !5233

sw.default:                                       ; preds = %if.end15
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2129, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5234
  br label %sw.epilog, !dbg !5235

sw.epilog:                                        ; preds = %if.end47, %if.then51, %lor.lhs.false25, %lor.lhs.false17, %sw.default
  %signed_p.2 = phi i8 [ undef, %sw.default ], [ 1, %lor.lhs.false17 ], [ 0, %lor.lhs.false25 ], [ %conv55, %if.then51 ], [ %signed_p.0, %if.end47 ]
  call void @llvm.dbg.value(metadata i8 %signed_p.2, metadata !5172, metadata !DIExpression()), !dbg !5173
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 5, !dbg !5236
  %13 = load i32, i32* %extend_mode, align 8, !dbg !5236
  call void @llvm.dbg.value(metadata i32 %13, metadata !5171, metadata !DIExpression()), !dbg !5173
  %idxprom = zext i32 %13 to i64, !dbg !5237
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5237
  %14 = load i8, i8* %arrayidx, align 1, !dbg !5237
  %extend_mode61 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 5, !dbg !5239
  %15 = load i32, i32* %extend_mode61, align 8, !dbg !5239
  %idxprom62 = zext i32 %15 to i64, !dbg !5239
  %arrayidx63 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom62, !dbg !5239
  %16 = load i8, i8* %arrayidx63, align 1, !dbg !5239
  %cmp69 = icmp ult i8 %14, %16, !dbg !5240
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !5241

if.then71:                                        ; preds = %sw.epilog
  call void @llvm.dbg.value(metadata i32 %15, metadata !5171, metadata !DIExpression()), !dbg !5173
  br label %if.end73, !dbg !5242

if.end73:                                         ; preds = %if.then71, %sw.epilog
  %comp_mode.0 = phi i32 [ %15, %if.then71 ], [ %13, %sw.epilog ], !dbg !5173
  call void @llvm.dbg.value(metadata i32 %comp_mode.0, metadata !5171, metadata !DIExpression()), !dbg !5173
  %cmp75 = icmp eq i32 %13, %comp_mode.0, !dbg !5243
  br i1 %cmp75, label %if.end92, label %if.then77, !dbg !5245

if.then77:                                        ; preds = %if.end73
  %mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 6, !dbg !5246
  %17 = load i32, i32* %mode, align 4, !dbg !5246
  %cmp79 = icmp eq i32 %17, %13, !dbg !5249
  br i1 %cmp79, label %lor.lhs.false81, label %cleanup, !dbg !5250

lor.lhs.false81:                                  ; preds = %if.then77
  %step = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 1, !dbg !5251
  %18 = load %struct.rtx_def*, %struct.rtx_def** %step, align 8, !dbg !5251
  %19 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5252
  %cmp82 = icmp eq %struct.rtx_def* %18, %19, !dbg !5253
  br i1 %cmp82, label %if.end85, label %cleanup, !dbg !5254

if.end85:                                         ; preds = %lor.lhs.false81
  %tobool87 = icmp eq i8 %signed_p.2, 0, !dbg !5255
  %cond88 = select i1 %tobool87, i32 99, i32 98, !dbg !5255
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 0, !dbg !5256
  %20 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !5256
  %call = tail call %struct.rtx_def* @simplify_gen_unary(i32 %cond88, i32 %comp_mode.0, %struct.rtx_def* %20, i32 %13) #6, !dbg !5257
  store %struct.rtx_def* %call, %struct.rtx_def** %base, align 8, !dbg !5258
  store i32 %comp_mode.0, i32* %extend_mode, align 8, !dbg !5259
  %.pre = load i32, i32* %extend_mode61, align 8, !dbg !5260
  br label %if.end92, !dbg !5262

if.end92:                                         ; preds = %if.end73, %if.end85
  %21 = phi i32 [ %13, %if.end73 ], [ %comp_mode.0, %if.end85 ]
  %22 = phi i32 [ %15, %if.end73 ], [ %.pre, %if.end85 ], !dbg !5260
  %cmp94 = icmp eq i32 %22, %comp_mode.0, !dbg !5263
  br i1 %cmp94, label %if.end115, label %if.then96, !dbg !5264

if.then96:                                        ; preds = %if.end92
  %mode97 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 6, !dbg !5265
  %23 = load i32, i32* %mode97, align 4, !dbg !5265
  %cmp99 = icmp eq i32 %23, %22, !dbg !5268
  br i1 %cmp99, label %lor.lhs.false101, label %cleanup, !dbg !5269

lor.lhs.false101:                                 ; preds = %if.then96
  %step102 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 1, !dbg !5270
  %24 = load %struct.rtx_def*, %struct.rtx_def** %step102, align 8, !dbg !5270
  %25 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5271
  %cmp103 = icmp eq %struct.rtx_def* %24, %25, !dbg !5272
  br i1 %cmp103, label %if.end106, label %cleanup, !dbg !5273

if.end106:                                        ; preds = %lor.lhs.false101
  %tobool108 = icmp eq i8 %signed_p.2, 0, !dbg !5274
  %cond109 = select i1 %tobool108, i32 99, i32 98, !dbg !5274
  %base110 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 0, !dbg !5275
  %26 = load %struct.rtx_def*, %struct.rtx_def** %base110, align 8, !dbg !5275
  %call112 = tail call %struct.rtx_def* @simplify_gen_unary(i32 %cond109, i32 %comp_mode.0, %struct.rtx_def* %26, i32 %22) #6, !dbg !5276
  store %struct.rtx_def* %call112, %struct.rtx_def** %base110, align 8, !dbg !5277
  store i32 %comp_mode.0, i32* %extend_mode61, align 8, !dbg !5278
  %.pre1 = load i32, i32* %extend_mode, align 8, !dbg !5279
  br label %if.end115, !dbg !5281

if.end115:                                        ; preds = %if.end92, %if.end106
  %27 = phi i32 [ %21, %if.end92 ], [ %.pre1, %if.end106 ], !dbg !5279
  %mode116 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 6, !dbg !5282
  %28 = load i32, i32* %mode116, align 4, !dbg !5282
  %cmp118 = icmp eq i32 %28, %27, !dbg !5283
  br i1 %cmp118, label %land.lhs.true120, label %if.end131, !dbg !5284

land.lhs.true120:                                 ; preds = %if.end115
  %step121 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv0, i64 0, i32 1, !dbg !5285
  %29 = load %struct.rtx_def*, %struct.rtx_def** %step121, align 8, !dbg !5285
  %30 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5286
  %cmp122 = icmp eq %struct.rtx_def* %29, %30, !dbg !5287
  br i1 %cmp122, label %land.lhs.true124, label %if.end131, !dbg !5288

land.lhs.true124:                                 ; preds = %land.lhs.true120
  %mode126 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 6, !dbg !5289
  %31 = load i32, i32* %mode126, align 4, !dbg !5289
  %cmp127 = icmp eq i32 %27, %31, !dbg !5290
  br i1 %cmp127, label %if.end131, label %if.then129, !dbg !5291

if.then129:                                       ; preds = %land.lhs.true124
  tail call fastcc void @shorten_into_mode(%struct.rtx_iv* %iv0, i32 %31, i32 %cond, i8 zeroext %signed_p.2, %struct.niter_desc* %desc) #7, !dbg !5292
  %.pre2 = load i32, i32* %extend_mode61, align 8, !dbg !5293
  br label %if.end131, !dbg !5292

if.end131:                                        ; preds = %land.lhs.true124, %if.then129, %land.lhs.true120, %if.end115
  %32 = phi i32 [ %comp_mode.0, %land.lhs.true124 ], [ %.pre2, %if.then129 ], [ %comp_mode.0, %land.lhs.true120 ], [ %comp_mode.0, %if.end115 ], !dbg !5293
  %mode132 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 6, !dbg !5295
  %33 = load i32, i32* %mode132, align 4, !dbg !5295
  %cmp134 = icmp eq i32 %33, %32, !dbg !5296
  br i1 %cmp134, label %land.lhs.true136, label %if.end148, !dbg !5297

land.lhs.true136:                                 ; preds = %if.end131
  %step137 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv1, i64 0, i32 1, !dbg !5298
  %34 = load %struct.rtx_def*, %struct.rtx_def** %step137, align 8, !dbg !5298
  %35 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5299
  %cmp138 = icmp eq %struct.rtx_def* %34, %35, !dbg !5300
  br i1 %cmp138, label %land.lhs.true140, label %if.end148, !dbg !5301

land.lhs.true140:                                 ; preds = %land.lhs.true136
  %36 = load i32, i32* %mode116, align 4, !dbg !5302
  %cmp143 = icmp eq i32 %36, %32, !dbg !5303
  br i1 %cmp143, label %if.end148, label %if.then145, !dbg !5304

if.then145:                                       ; preds = %land.lhs.true140
  %call147 = tail call i32 @swap_condition(i32 %cond) #6, !dbg !5305
  tail call fastcc void @shorten_into_mode(%struct.rtx_iv* %iv1, i32 %36, i32 %call147, i8 zeroext %signed_p.2, %struct.niter_desc* %desc) #7, !dbg !5306
  %.pre3 = load i32, i32* %mode132, align 4, !dbg !5307
  br label %if.end148, !dbg !5306

if.end148:                                        ; preds = %land.lhs.true140, %if.then145, %land.lhs.true136, %if.end131
  %37 = phi i32 [ %32, %land.lhs.true140 ], [ %.pre3, %if.then145 ], [ %32, %land.lhs.true136 ], [ %33, %if.end131 ], !dbg !5307
  %38 = load i32, i32* %mode116, align 4, !dbg !5309
  %cmp151 = icmp eq i32 %38, %37, !dbg !5310
  br i1 %cmp151, label %if.end154, label %cleanup, !dbg !5311

if.end154:                                        ; preds = %if.end148
  %mode156 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 10, !dbg !5312
  store i32 %37, i32* %mode156, align 4, !dbg !5313
  %signed_p157 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 9, !dbg !5314
  store i8 %signed_p.2, i8* %signed_p157, align 8, !dbg !5315
  br label %cleanup, !dbg !5316

cleanup:                                          ; preds = %land.lhs.true35, %lor.lhs.false81, %if.then77, %lor.lhs.false101, %if.then96, %if.end148, %lor.lhs.false11, %lor.lhs.false8, %if.end, %lor.lhs.false1, %lor.lhs.false, %entry, %sw.bb22, %lor.lhs.false25, %sw.bb, %lor.lhs.false17, %if.end154
  %retval.0 = phi i8 [ 1, %if.end154 ], [ 0, %lor.lhs.false1 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %lor.lhs.false11 ], [ 0, %lor.lhs.false8 ], [ 0, %if.end ], [ 0, %lor.lhs.false17 ], [ 0, %sw.bb ], [ 0, %lor.lhs.false25 ], [ 0, %sw.bb22 ], [ 0, %land.lhs.true35 ], [ 0, %lor.lhs.false81 ], [ 0, %if.then77 ], [ 0, %lor.lhs.false101 ], [ 0, %if.then96 ], [ 0, %if.end148 ], !dbg !5173
  ret i8 %retval.0, !dbg !5317
}

declare dso_local void @get_mode_bounds(i32, i32, i32, %struct.rtx_def**, %struct.rtx_def**) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_gen_relational(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @reverse_condition(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i64 @inverse(i64 %x, i32 %mod) unnamed_addr #4 !dbg !5318 {
entry:
  call void @llvm.dbg.value(metadata i64 %x, metadata !5322, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i32 %mod, metadata !5323, metadata !DIExpression()), !dbg !5327
  %sub = add nsw i32 %mod, -1, !dbg !5328
  %sh_prom = zext i32 %sub to i64, !dbg !5329
  %shl1 = shl i64 2, %sh_prom, !dbg !5330
  %sub2 = add i64 %shl1, -1, !dbg !5331
  call void @llvm.dbg.value(metadata i64 %sub2, metadata !5324, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i64 1, metadata !5325, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i32 0, metadata !5326, metadata !DIExpression()), !dbg !5327
  br label %for.cond, !dbg !5332

for.cond:                                         ; preds = %for.body, %entry
  %rslt.0 = phi i64 [ 1, %entry ], [ %and, %for.body ], !dbg !5327
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !5334
  %x.addr.0 = phi i64 [ %x, %entry ], [ %and5, %for.body ]
  call void @llvm.dbg.value(metadata i64 %x.addr.0, metadata !5322, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5326, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i64 %rslt.0, metadata !5325, metadata !DIExpression()), !dbg !5327
  %cmp = icmp slt i32 %i.0, %sub, !dbg !5335
  br i1 %cmp, label %for.body, label %for.end, !dbg !5337

for.body:                                         ; preds = %for.cond
  %mul = mul i64 %rslt.0, %x.addr.0, !dbg !5338
  %and = and i64 %mul, %sub2, !dbg !5340
  call void @llvm.dbg.value(metadata i64 %and, metadata !5325, metadata !DIExpression()), !dbg !5327
  %mul4 = mul i64 %x.addr.0, %x.addr.0, !dbg !5341
  %and5 = and i64 %mul4, %sub2, !dbg !5342
  call void @llvm.dbg.value(metadata i64 %and5, metadata !5322, metadata !DIExpression()), !dbg !5327
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5343
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5326, metadata !DIExpression()), !dbg !5327
  br label %for.cond, !dbg !5344, !llvm.loop !5345

for.end:                                          ; preds = %for.cond
  %rslt.0.lcssa = phi i64 [ %rslt.0, %for.cond ], !dbg !5327
  call void @llvm.dbg.value(metadata i64 %rslt.0.lcssa, metadata !5325, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i64 %rslt.0.lcssa, metadata !5325, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i64 %rslt.0.lcssa, metadata !5325, metadata !DIExpression()), !dbg !5327
  ret i64 %rslt.0.lcssa, !dbg !5347
}

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 %op, %struct.rtx_def** %expr) unnamed_addr #4 !dbg !5348 {
entry:
  %head = alloca %struct.rtx_def*, align 8
  %tail = alloca %struct.rtx_def*, align 8
  %cond_list = alloca %struct.rtx_def*, align 8
  %src131 = alloca %struct.rtx_def*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5352, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %op, metadata !5353, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def** %expr, metadata !5354, metadata !DIExpression()), !dbg !5395
  %0 = bitcast %struct.rtx_def** %head to i8*, !dbg !5396
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5396
  %1 = bitcast %struct.rtx_def** %tail to i8*, !dbg !5396
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5396
  %2 = bitcast %struct.rtx_def** %cond_list to i8*, !dbg !5396
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5396
  %3 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !5397
  %tobool = icmp eq %struct.rtx_def* %3, null, !dbg !5397
  br i1 %tobool, label %cleanup278, label %if.end, !dbg !5399

if.end:                                           ; preds = %entry
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !5399
  %5 = bitcast %struct.rtx_def** %expr to i32**, !dbg !5400
  %bf.load = load i32, i32* %4, align 8, !dbg !5400
  %bf.clear = and i32 %bf.load, 65535, !dbg !5400
  %idxprom = zext i32 %bf.clear to i64, !dbg !5400
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5400
  %6 = load i32, i32* %arrayidx, align 4, !dbg !5400
  %cmp = icmp eq i32 %6, 9, !dbg !5400
  br i1 %cmp, label %cleanup278, label %if.end2, !dbg !5402

if.end2:                                          ; preds = %if.end
  %cmp5 = icmp eq i32 %bf.clear, 3, !dbg !5403
  br i1 %cmp5, label %if.then6, label %if.end43, !dbg !5405

if.then6:                                         ; preds = %if.end2
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5406
  %7 = bitcast %union.rtunion_def* %arrayidx7 to i64*, !dbg !5406
  %8 = load i64, i64* %7, align 8, !dbg !5406
  %9 = bitcast %struct.rtx_def** %head to i64*, !dbg !5408
  store i64 %8, i64* %9, align 8, !dbg !5408
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5409
  %11 = bitcast %union.rtunion_def* %10 to i64*, !dbg !5409
  %12 = load i64, i64* %11, align 8, !dbg !5409
  %13 = bitcast %struct.rtx_def** %tail to i64*, !dbg !5410
  store i64 %12, i64* %13, align 8, !dbg !5410
  %.cast = inttoptr i64 %12 to %struct.rtx_def*, !dbg !5411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %.cast, metadata !5357, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !5356, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  call fastcc void @eliminate_implied_conditions(i32 %op, %struct.rtx_def** nonnull %head, %struct.rtx_def* %.cast) #7, !dbg !5412
  switch i32 %op, label %sw.default [
    i32 61, label %sw.bb
    i32 62, label %sw.bb12
  ], !dbg !5413

sw.bb:                                            ; preds = %if.then6
  %14 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !5414
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !5361, metadata !DIExpression()), !dbg !5395
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5416
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !5362, metadata !DIExpression()), !dbg !5395
  br label %sw.epilog, !dbg !5417

sw.bb12:                                          ; preds = %if.then6
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5418
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !5361, metadata !DIExpression()), !dbg !5395
  %17 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !5419
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !5362, metadata !DIExpression()), !dbg !5395
  br label %sw.epilog, !dbg !5420

sw.default:                                       ; preds = %if.then6
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1856, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5421
  br label %sw.epilog, !dbg !5422

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb
  %aggr.0 = phi %struct.rtx_def* [ undef, %sw.default ], [ %17, %sw.bb12 ], [ %15, %sw.bb ]
  %neutral.0 = phi %struct.rtx_def* [ undef, %sw.default ], [ %16, %sw.bb12 ], [ %14, %sw.bb ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %neutral.0, metadata !5361, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %aggr.0, metadata !5362, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !5356, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 0, %struct.rtx_def** nonnull %head) #7, !dbg !5423
  %18 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !5424
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !5356, metadata !DIExpression()), !dbg !5395
  %cmp13 = icmp eq %struct.rtx_def* %18, %aggr.0, !dbg !5426
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !5427

if.then14:                                        ; preds = %sw.epilog
  %19 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !5428
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5428
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !5428
  store %struct.rtx_def* %aggr.0, %struct.rtx_def** %rt_rtx18, align 8, !dbg !5430
  %20 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !5431
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5431
  %rt_rtx22 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !5431
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx22, align 8, !dbg !5432
  br label %cleanup278, !dbg !5433

if.else:                                          ; preds = %sw.epilog
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !5356, metadata !DIExpression()), !dbg !5395
  %cmp23 = icmp eq %struct.rtx_def* %18, %neutral.0, !dbg !5434
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !5436

if.then24:                                        ; preds = %if.else
  %22 = load i64, i64* %13, align 8, !dbg !5437
  %23 = bitcast %struct.rtx_def** %expr to i64*, !dbg !5439
  store i64 %22, i64* %23, align 8, !dbg !5439
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 %op, %struct.rtx_def** %expr) #7, !dbg !5440
  br label %cleanup278, !dbg !5441

if.end26:                                         ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail, metadata !5357, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 %op, %struct.rtx_def** nonnull %tail) #7, !dbg !5442
  %24 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !5443
  call void @llvm.dbg.value(metadata %struct.rtx_def* %24, metadata !5357, metadata !DIExpression()), !dbg !5395
  %tobool27 = icmp eq %struct.rtx_def* %24, null, !dbg !5443
  %25 = ptrtoint %struct.rtx_def* %24 to i64, !dbg !5445
  br i1 %tobool27, label %if.end34, label %land.lhs.true, !dbg !5445

land.lhs.true:                                    ; preds = %if.end26
  call void @llvm.dbg.value(metadata %struct.rtx_def* %24, metadata !5357, metadata !DIExpression()), !dbg !5395
  %arrayidx30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5446
  %rt_rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**, !dbg !5446
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !5446
  %cmp32 = icmp eq %struct.rtx_def* %26, %aggr.0, !dbg !5447
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !5448

if.then33:                                        ; preds = %land.lhs.true
  %27 = bitcast %struct.rtx_def** %expr to i64*, !dbg !5449
  store i64 %25, i64* %27, align 8, !dbg !5449
  br label %cleanup278, !dbg !5451

if.end34:                                         ; preds = %if.end26, %land.lhs.true
  %28 = load i64, i64* %9, align 8, !dbg !5452
  %29 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !5453
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, !dbg !5453
  %30 = bitcast %union.u* %u35 to i64*, !dbg !5454
  store i64 %28, i64* %30, align 8, !dbg !5454
  %31 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !5455
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5455
  %33 = bitcast %union.rtunion_def* %32 to i64*, !dbg !5456
  store i64 %25, i64* %33, align 8, !dbg !5456
  br label %cleanup278, !dbg !5457

if.end43:                                         ; preds = %if.end2
  %cmp44 = icmp eq i32 %op, 0, !dbg !5458
  br i1 %cmp44, label %cond.end, label %cond.true, !dbg !5458

cond.true:                                        ; preds = %if.end43
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1885, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5458
  br label %cond.end, !dbg !5458

cond.end:                                         ; preds = %if.end43, %cond.true
  %34 = bitcast %struct.rtx_def** %expr to i8*, !dbg !5459
  br label %for.cond, !dbg !5463

for.cond:                                         ; preds = %for.cond, %cond.end
  %call = tail call i32 @for_each_rtx(%struct.rtx_def** %expr, i32 (%struct.rtx_def**, i8*)* nonnull @replace_single_def_regs, i8* %34) #6, !dbg !5464
  %cmp45 = icmp eq i32 %call, 0, !dbg !5465
  br i1 %cmp45, label %for.end, label %for.cond, !dbg !5466, !llvm.loop !5467

for.end:                                          ; preds = %for.cond
  %35 = load i32*, i32** %5, align 8, !dbg !5470
  %bf.load48 = load i32, i32* %35, align 8, !dbg !5470
  %bf.clear49 = and i32 %bf.load48, 65535, !dbg !5470
  %idxprom50 = zext i32 %bf.clear49 to i64, !dbg !5470
  %arrayidx51 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom50, !dbg !5470
  %36 = load i32, i32* %arrayidx51, align 4, !dbg !5470
  %cmp52 = icmp eq i32 %36, 9, !dbg !5470
  br i1 %cmp52, label %cleanup278, label %if.end54, !dbg !5472

if.end54:                                         ; preds = %for.end
  %call55 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !5473
  call void @llvm.dbg.value(metadata %struct.edge_def* %call55, metadata !5365, metadata !DIExpression()), !dbg !5395
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call55, i64 0, i32 0, !dbg !5474
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5474
  %38 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5476
  %cfg = getelementptr inbounds %struct.function, %struct.function* %38, i64 0, i32 1, !dbg !5476
  %39 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5476
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %39, i64 0, i32 0, !dbg !5476
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5476
  %cmp56 = icmp eq %struct.basic_block_def* %37, %40, !dbg !5477
  br i1 %cmp56, label %cleanup278, label %if.end58, !dbg !5478

if.end58:                                         ; preds = %if.end54
  %call59 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @reg_obstack) #6, !dbg !5479
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call59, metadata !5363, metadata !DIExpression()), !dbg !5395
  %call60 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @reg_obstack) #6, !dbg !5480
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call60, metadata !5364, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i8 1, metadata !5355, metadata !DIExpression()), !dbg !5395
  %41 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !5481
  call void @llvm.dbg.value(metadata %struct.rtx_def* %41, metadata !5360, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5359, metadata !DIExpression()), !dbg !5395
  store %struct.rtx_def* null, %struct.rtx_def** %cond_list, align 8, !dbg !5482
  %42 = bitcast %struct.rtx_def** %src131 to i8*, !dbg !5483
  %43 = bitcast %struct.rtx_def** %dest to i8*, !dbg !5483
  %44 = bitcast %struct.bitmap_head_def* %call60 to i8*, !dbg !5483
  %45 = bitcast %struct.bitmap_head_def* %call59 to i8*, !dbg !5484
  br label %while.cond, !dbg !5486

while.cond:                                       ; preds = %if.end268, %if.end58
  %e.0 = phi %struct.edge_def* [ %call55, %if.end58 ], [ %call270, %if.end268 ], !dbg !5395
  %last_valid_expr.0 = phi %struct.rtx_def* [ %41, %if.end58 ], [ %last_valid_expr.129, %if.end268 ], !dbg !5487
  %expression_valid.0 = phi i8 [ 1, %if.end58 ], [ %expression_valid.125, %if.end268 ], !dbg !5488
  call void @llvm.dbg.value(metadata i8 %expression_valid.0, metadata !5355, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.0, metadata !5360, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.edge_def* %e.0, metadata !5365, metadata !DIExpression()), !dbg !5395
  %src61 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e.0, i64 0, i32 0, !dbg !5489
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %src61, align 8, !dbg !5489
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %46, i64 0, i32 7, !dbg !5489
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5489
  %47 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5489
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %47, i64 0, i32 1, !dbg !5489
  %48 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5489
  call void @llvm.dbg.value(metadata %struct.rtx_def* %48, metadata !5358, metadata !DIExpression()), !dbg !5395
  %call62 = call i32 @any_condjump_p(%struct.rtx_def* %48) #6, !dbg !5490
  %tobool63 = icmp eq i32 %call62, 0, !dbg !5490
  br i1 %tobool63, label %if.end115, label %if.then64, !dbg !5491

if.then64:                                        ; preds = %while.cond
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %src61, align 8, !dbg !5492
  %il67 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %49, i64 0, i32 7, !dbg !5492
  %rtl68 = bitcast %union.basic_block_il_dependent* %il67 to %struct.rtl_bb_info**, !dbg !5492
  %50 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl68, align 8, !dbg !5492
  %end_69 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %50, i64 0, i32 1, !dbg !5492
  %51 = load %struct.rtx_def*, %struct.rtx_def** %end_69, align 8, !dbg !5492
  %call70 = call %struct.rtx_def* @get_condition(%struct.rtx_def* %51, %struct.rtx_def** null, i32 0, i32 1) #6, !dbg !5493
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call70, metadata !5366, metadata !DIExpression()), !dbg !5494
  %tobool71 = icmp eq %struct.rtx_def* %call70, null, !dbg !5495
  br i1 %tobool71, label %if.end76, label %land.lhs.true72, !dbg !5497

land.lhs.true72:                                  ; preds = %if.then64
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e.0, i64 0, i32 7, !dbg !5498
  %52 = load i32, i32* %flags, align 8, !dbg !5498
  %and = and i32 %52, 1, !dbg !5499
  %tobool73 = icmp eq i32 %and, 0, !dbg !5499
  br i1 %tobool73, label %if.end76, label %if.then74, !dbg !5500

if.then74:                                        ; preds = %land.lhs.true72
  %call75 = call %struct.rtx_def* @reversed_condition(%struct.rtx_def* nonnull %call70) #6, !dbg !5501
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call75, metadata !5366, metadata !DIExpression()), !dbg !5494
  br label %if.end76, !dbg !5502

if.end76:                                         ; preds = %land.lhs.true72, %if.then64, %if.then74
  %cond65.0 = phi %struct.rtx_def* [ %call75, %if.then74 ], [ %call70, %land.lhs.true72 ], [ null, %if.then64 ], !dbg !5494
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond65.0, metadata !5366, metadata !DIExpression()), !dbg !5494
  %tobool77 = icmp eq %struct.rtx_def* %cond65.0, null, !dbg !5503
  br i1 %tobool77, label %if.end111, label %if.then78, !dbg !5504

if.then78:                                        ; preds = %if.end76
  %53 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !5505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %53, metadata !5370, metadata !DIExpression()), !dbg !5506
  call void @simplify_using_condition(%struct.rtx_def* nonnull %cond65.0, %struct.rtx_def** %expr, %struct.bitmap_head_def* %call59) #7, !dbg !5507
  %54 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !5508
  %cmp79 = icmp eq %struct.rtx_def* %53, %54, !dbg !5509
  br i1 %cmp79, label %if.end106, label %if.then80, !dbg !5510

if.then80:                                        ; preds = %if.then78
  %55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i64 0, i32 0, !dbg !5510
  %bf.load81 = load i32, i32* %55, align 8, !dbg !5511
  %bf.clear82 = and i32 %bf.load81, 65535, !dbg !5511
  %idxprom83 = zext i32 %bf.clear82 to i64, !dbg !5511
  %arrayidx84 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom83, !dbg !5511
  %56 = load i32, i32* %arrayidx84, align 4, !dbg !5511
  %cmp85 = icmp eq i32 %56, 9, !dbg !5511
  br i1 %cmp85, label %cleanup, label %if.end87, !dbg !5513

if.end87:                                         ; preds = %if.then80
  br label %for.cond88, !dbg !5514

for.cond88:                                       ; preds = %for.inc, %if.end87
  %note.0.in = phi %struct.rtx_def** [ %cond_list, %if.end87 ], [ %rt_rtx104, %for.inc ]
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !5516
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !5373, metadata !DIExpression()), !dbg !5517
  %tobool89 = icmp eq %struct.rtx_def* %note.0, null, !dbg !5518
  br i1 %tobool89, label %cleanup.loopexit, label %for.body, !dbg !5518

for.body:                                         ; preds = %for.cond88
  %arrayidx92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5519
  %rt_rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**, !dbg !5519
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93, align 8, !dbg !5519
  call void @simplify_using_condition(%struct.rtx_def* %57, %struct.rtx_def** %expr, %struct.bitmap_head_def* %call59) #7, !dbg !5522
  %58 = load i32*, i32** %5, align 8, !dbg !5523
  %bf.load94 = load i32, i32* %58, align 8, !dbg !5523
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !5523
  %idxprom96 = zext i32 %bf.clear95 to i64, !dbg !5523
  %arrayidx97 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom96, !dbg !5523
  %59 = load i32, i32* %arrayidx97, align 4, !dbg !5523
  %cmp98 = icmp eq i32 %59, 9, !dbg !5523
  br i1 %cmp98, label %cleanup.loopexit, label %for.inc, !dbg !5525

for.inc:                                          ; preds = %for.body
  %60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5526
  %rt_rtx104 = bitcast %union.rtunion_def* %60 to %struct.rtx_def**, !dbg !5526
  br label %for.cond88, !dbg !5527, !llvm.loop !5528

cleanup.loopexit:                                 ; preds = %for.body, %for.cond88
  %cleanup.dest.slot.0.ph = phi i32 [ 0, %for.cond88 ], [ 7, %for.body ]
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.then80
  %cleanup.dest.slot.0 = phi i32 [ 7, %if.then80 ], [ %cleanup.dest.slot.0.ph, %cleanup.loopexit ]
  %cond3 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond3, label %if.end106, label %cleanup108

if.end106:                                        ; preds = %if.then78, %cleanup
  %61 = load %struct.rtx_def*, %struct.rtx_def** %cond_list, align 8, !dbg !5530
  call void @llvm.dbg.value(metadata %struct.rtx_def* %61, metadata !5359, metadata !DIExpression()), !dbg !5395
  %call107 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* nonnull %cond65.0, %struct.rtx_def* %61) #6, !dbg !5531
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call107, metadata !5359, metadata !DIExpression()), !dbg !5395
  store %struct.rtx_def* %call107, %struct.rtx_def** %cond_list, align 8, !dbg !5532
  br label %cleanup108, !dbg !5533

cleanup108:                                       ; preds = %cleanup, %if.end106
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end106 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond2, label %if.end111, label %cleanup112

if.end111:                                        ; preds = %if.end76, %cleanup108
  br label %cleanup112, !dbg !5534

cleanup112:                                       ; preds = %cleanup108, %if.end111
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.1, %cleanup108 ], [ 0, %if.end111 ]
  switch i32 %cleanup.dest.slot.2, label %cleanup278.loopexit4 [
    i32 0, label %if.end115
    i32 7, label %out.loopexit5
  ]

if.end115:                                        ; preds = %while.cond, %cleanup112
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %src61, align 8, !dbg !5535
  %il117 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %62, i64 0, i32 7, !dbg !5535
  %rtl118 = bitcast %union.basic_block_il_dependent* %il117 to %struct.rtl_bb_info**, !dbg !5535
  %63 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl118, align 8, !dbg !5535
  %end_119 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %63, i64 0, i32 1, !dbg !5535
  br label %for.cond120, !dbg !5535

for.cond120:                                      ; preds = %for.inc251, %if.end115
  %last_valid_expr.1 = phi %struct.rtx_def* [ %last_valid_expr.0, %if.end115 ], [ %last_valid_expr.3, %for.inc251 ], !dbg !5487
  %insn.0.in = phi %struct.rtx_def** [ %end_119, %if.end115 ], [ %rt_rtx255, %for.inc251 ]
  %expression_valid.1 = phi i8 [ %expression_valid.0, %if.end115 ], [ %expression_valid.3, %for.inc251 ], !dbg !5488
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !5536
  call void @llvm.dbg.value(metadata i8 %expression_valid.1, metadata !5355, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5358, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.1, metadata !5360, metadata !DIExpression()), !dbg !5395
  %tobool121 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5537
  br i1 %tobool121, label %for.cond120.for.end256_crit_edge, label %land.rhs, !dbg !5537

for.cond120.for.end256_crit_edge:                 ; preds = %for.cond120
  %last_valid_expr.1.lcssa = phi %struct.rtx_def* [ %last_valid_expr.1, %for.cond120 ], !dbg !5487
  %expression_valid.1.lcssa = phi i8 [ %expression_valid.1, %for.cond120 ], !dbg !5488
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.1.lcssa, metadata !5360, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i8 %expression_valid.1.lcssa, metadata !5355, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.1.lcssa, metadata !5360, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i8 %expression_valid.1.lcssa, metadata !5355, metadata !DIExpression()), !dbg !5395
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** %src61, align 8, !dbg !5538
  br label %for.end256, !dbg !5537

land.rhs:                                         ; preds = %for.cond120
  %64 = load %struct.basic_block_def*, %struct.basic_block_def** %src61, align 8, !dbg !5537
  %il123 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %64, i64 0, i32 7, !dbg !5537
  %rtl124 = bitcast %union.basic_block_il_dependent* %il123 to %struct.rtl_bb_info**, !dbg !5537
  %65 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl124, align 8, !dbg !5537
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %65, i64 0, i32 0, !dbg !5537
  %66 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5537
  %67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5537
  %rt_rtx128 = bitcast %union.rtunion_def* %67 to %struct.rtx_def**, !dbg !5537
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx128, align 8, !dbg !5537
  %cmp129 = icmp eq %struct.rtx_def* %insn.0, %68, !dbg !5537
  br i1 %cmp129, label %for.end256.loopexit, label %for.body130, !dbg !5535

for.body130:                                      ; preds = %land.rhs
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #8, !dbg !5540
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8, !dbg !5540
  %69 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !5541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %69, metadata !5381, metadata !DIExpression()), !dbg !5483
  %70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5542
  %bf.load133 = load i32, i32* %70, align 8, !dbg !5542
  %bf.clear134 = and i32 %bf.load133, 65535, !dbg !5542
  %cmp135 = icmp eq i32 %bf.clear134, 8, !dbg !5542
  br i1 %cmp135, label %if.end148, label %lor.lhs.false, !dbg !5542

lor.lhs.false:                                    ; preds = %for.body130
  %cmp138 = icmp eq i32 %bf.clear134, 7, !dbg !5542
  br i1 %cmp138, label %if.end148, label %lor.lhs.false139, !dbg !5542

lor.lhs.false139:                                 ; preds = %lor.lhs.false
  %cmp142 = icmp eq i32 %bf.clear134, 9, !dbg !5542
  br i1 %cmp142, label %if.end148, label %lor.lhs.false143, !dbg !5542

lor.lhs.false143:                                 ; preds = %lor.lhs.false139
  %cmp146 = icmp eq i32 %bf.clear134, 10, !dbg !5542
  br i1 %cmp146, label %if.end148, label %cleanup246, !dbg !5544

if.end148:                                        ; preds = %lor.lhs.false143, %lor.lhs.false139, %lor.lhs.false, %for.body130
  call void @bitmap_clear(%struct.bitmap_head_def* %call60) #6, !dbg !5545
  %u149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !5546
  %71 = getelementptr inbounds %union.u, %union.u* %u149, i64 1, i32 0, i32 0, i64 0, !dbg !5546
  %rt_rtx152 = bitcast %union.rtunion_def* %71 to %struct.rtx_def**, !dbg !5546
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx152, align 8, !dbg !5546
  call void @note_stores(%struct.rtx_def* %72, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @mark_altered, i8* %44) #6, !dbg !5547
  %bf.load153 = load i32, i32* %70, align 8, !dbg !5548
  %bf.clear154 = and i32 %bf.load153, 65535, !dbg !5548
  %cmp155 = icmp eq i32 %bf.clear154, 10, !dbg !5548
  br i1 %cmp155, label %for.cond157.preheader, label %if.end167, !dbg !5549

for.cond157.preheader:                            ; preds = %if.end148
  br label %for.cond157, !dbg !5550

for.cond157:                                      ; preds = %for.cond157.preheader, %for.inc165
  %indvars.iv = phi i64 [ 0, %for.cond157.preheader ], [ %indvars.iv.next, %for.inc165 ], !dbg !5552
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5382, metadata !DIExpression()), !dbg !5553
  %exitcond = icmp eq i64 %indvars.iv, 53, !dbg !5554
  br i1 %exitcond, label %if.end167.loopexit, label %for.body159, !dbg !5550

for.body159:                                      ; preds = %for.cond157
  %73 = load i64, i64* @regs_invalidated_by_call, align 8, !dbg !5556
  %shl = shl i64 1, %indvars.iv, !dbg !5556
  %and160 = and i64 %73, %shl, !dbg !5556
  %tobool161 = icmp eq i64 %and160, 0, !dbg !5556
  br i1 %tobool161, label %for.inc165, label %if.then162, !dbg !5558

if.then162:                                       ; preds = %for.body159
  %74 = trunc i64 %indvars.iv to i32, !dbg !5559
  %call163 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call60, i32 %74) #6, !dbg !5559
  br label %for.inc165, !dbg !5559

for.inc165:                                       ; preds = %for.body159, %if.then162
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5560
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5553
  br label %for.cond157, !dbg !5561, !llvm.loop !5562

if.end167.loopexit:                               ; preds = %for.cond157
  br label %if.end167, !dbg !5564

if.end167:                                        ; preds = %if.end167.loopexit, %if.end148
  call void @llvm.dbg.value(metadata %struct.rtx_def** %src131, metadata !5376, metadata !DIExpression(DW_OP_deref)), !dbg !5483
  call void @llvm.dbg.value(metadata %struct.rtx_def** %dest, metadata !5380, metadata !DIExpression(DW_OP_deref)), !dbg !5483
  %call168 = call fastcc zeroext i8 @suitable_set_for_replacement(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def** nonnull %dest, %struct.rtx_def** nonnull %src131) #7, !dbg !5564
  %tobool169 = icmp eq i8 %call168, 0, !dbg !5564
  br i1 %tobool169, label %if.else225, label %if.then170, !dbg !5565

if.then170:                                       ; preds = %if.end167
  %75 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5566
  call void @llvm.dbg.value(metadata %struct.rtx_def* %75, metadata !5380, metadata !DIExpression()), !dbg !5483
  %76 = load %struct.rtx_def*, %struct.rtx_def** %src131, align 8, !dbg !5567
  call void @llvm.dbg.value(metadata %struct.rtx_def* %76, metadata !5376, metadata !DIExpression()), !dbg !5483
  call fastcc void @replace_in_expr(%struct.rtx_def** %expr, %struct.rtx_def* %75, %struct.rtx_def* %76) #7, !dbg !5568
  %77 = load i32*, i32** %5, align 8, !dbg !5569
  %bf.load171 = load i32, i32* %77, align 8, !dbg !5569
  %bf.clear172 = and i32 %bf.load171, 65535, !dbg !5569
  %idxprom173 = zext i32 %bf.clear172 to i64, !dbg !5569
  %arrayidx174 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom173, !dbg !5569
  %78 = load i32, i32* %arrayidx174, align 4, !dbg !5569
  %cmp175 = icmp eq i32 %78, 9, !dbg !5569
  br i1 %cmp175, label %cleanup221, label %for.cond178.preheader, !dbg !5571

for.cond178.preheader:                            ; preds = %if.then170
  br label %for.cond178, !dbg !5572

for.cond178:                                      ; preds = %for.cond178.preheader, %for.inc219
  %pnote.0 = phi %struct.rtx_def** [ %pnote_next.0, %for.inc219 ], [ %cond_list, %for.cond178.preheader ], !dbg !5573
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pnote.0, metadata !5385, metadata !DIExpression()), !dbg !5574
  %79 = load %struct.rtx_def*, %struct.rtx_def** %pnote.0, align 8, !dbg !5575
  %tobool179 = icmp eq %struct.rtx_def* %79, null, !dbg !5572
  br i1 %tobool179, label %cleanup221.loopexit, label %for.body180, !dbg !5572

for.body180:                                      ; preds = %for.cond178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %79, metadata !5389, metadata !DIExpression()), !dbg !5576
  %arrayidx184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5577
  %rt_rtx185 = bitcast %union.rtunion_def* %arrayidx184 to %struct.rtx_def**, !dbg !5577
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx185, align 8, !dbg !5577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %80, metadata !5393, metadata !DIExpression()), !dbg !5576
  %81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5578
  %rt_rtx189 = bitcast %union.rtunion_def* %81 to %struct.rtx_def**, !dbg !5578
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx189, metadata !5388, metadata !DIExpression()), !dbg !5574
  %82 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5579
  call void @llvm.dbg.value(metadata %struct.rtx_def* %82, metadata !5380, metadata !DIExpression()), !dbg !5483
  %83 = load %struct.rtx_def*, %struct.rtx_def** %src131, align 8, !dbg !5580
  call void @llvm.dbg.value(metadata %struct.rtx_def* %83, metadata !5376, metadata !DIExpression()), !dbg !5483
  call fastcc void @replace_in_expr(%struct.rtx_def** nonnull %rt_rtx185, %struct.rtx_def* %82, %struct.rtx_def* %83) #7, !dbg !5581
  %84 = bitcast %union.rtunion_def* %arrayidx184 to i32**, !dbg !5582
  %85 = load i32*, i32** %84, align 8, !dbg !5582
  %bf.load198 = load i32, i32* %85, align 8, !dbg !5582
  %bf.clear199 = and i32 %bf.load198, 65535, !dbg !5582
  %idxprom200 = zext i32 %bf.clear199 to i64, !dbg !5582
  %arrayidx201 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom200, !dbg !5582
  %86 = load i32, i32* %arrayidx201, align 4, !dbg !5582
  %cmp202 = icmp eq i32 %86, 9, !dbg !5582
  %87 = bitcast i32* %85 to %struct.rtx_def*, !dbg !5584
  br i1 %cmp202, label %if.then203, label %if.else204, !dbg !5584

if.then203:                                       ; preds = %for.body180
  %88 = bitcast %union.rtunion_def* %81 to i64*, !dbg !5585
  %89 = load i64, i64* %88, align 8, !dbg !5585
  %90 = bitcast %struct.rtx_def** %pnote.0 to i64*, !dbg !5587
  store i64 %89, i64* %90, align 8, !dbg !5587
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pnote.0, metadata !5388, metadata !DIExpression()), !dbg !5574
  call void @free_EXPR_LIST_node(%struct.rtx_def* nonnull %79) #6, !dbg !5588
  br label %for.inc219, !dbg !5589

if.else204:                                       ; preds = %for.body180
  %cmp209 = icmp eq %struct.rtx_def* %80, %87, !dbg !5590
  br i1 %cmp209, label %lor.lhs.false210, label %if.then212, !dbg !5592

lor.lhs.false210:                                 ; preds = %if.else204
  %91 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !5593
  %cmp211 = icmp eq %struct.rtx_def* %69, %91, !dbg !5594
  br i1 %cmp211, label %for.inc219, label %if.then212, !dbg !5595

if.then212:                                       ; preds = %lor.lhs.false210, %if.else204
  call void @simplify_using_condition(%struct.rtx_def* %87, %struct.rtx_def** %expr, %struct.bitmap_head_def* %call59) #7, !dbg !5596
  br label %for.inc219, !dbg !5596

for.inc219:                                       ; preds = %lor.lhs.false210, %if.then203, %if.then212
  %pnote_next.0 = phi %struct.rtx_def** [ %pnote.0, %if.then203 ], [ %rt_rtx189, %if.then212 ], [ %rt_rtx189, %lor.lhs.false210 ], !dbg !5576
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pnote_next.0, metadata !5388, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pnote_next.0, metadata !5385, metadata !DIExpression()), !dbg !5574
  br label %for.cond178, !dbg !5597, !llvm.loop !5598

cleanup221.loopexit:                              ; preds = %for.cond178
  br label %cleanup221

cleanup221:                                       ; preds = %cleanup221.loopexit, %if.then170
  %cleanup.dest.slot.3 = phi i32 [ 7, %if.then170 ], [ 0, %cleanup221.loopexit ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.3, 0
  br i1 %cond1, label %if.end230, label %cleanup246

if.else225:                                       ; preds = %if.end167
  %call226 = call i32 @for_each_rtx(%struct.rtx_def** %expr, i32 (%struct.rtx_def**, i8*)* nonnull @altered_reg_used, i8* %44) #6, !dbg !5600
  %tobool227 = icmp eq i32 %call226, 0, !dbg !5600
  br i1 %tobool227, label %if.end230, label %cleanup246, !dbg !5602

if.end230:                                        ; preds = %if.else225, %cleanup221
  %92 = load i32*, i32** %5, align 8, !dbg !5603
  %bf.load231 = load i32, i32* %92, align 8, !dbg !5603
  %bf.clear232 = and i32 %bf.load231, 65535, !dbg !5603
  %idxprom233 = zext i32 %bf.clear232 to i64, !dbg !5603
  %arrayidx234 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom233, !dbg !5603
  %93 = load i32, i32* %arrayidx234, align 4, !dbg !5603
  %cmp235 = icmp eq i32 %93, 9, !dbg !5603
  br i1 %cmp235, label %cleanup246, label %if.end237, !dbg !5605

if.end237:                                        ; preds = %if.end230
  %call238 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %call59, %struct.bitmap_head_def* %call60) #6, !dbg !5606
  %call239 = call i32 @for_each_rtx(%struct.rtx_def** %expr, i32 (%struct.rtx_def**, i8*)* nonnull @altered_reg_used, i8* %45) #6, !dbg !5607
  %tobool240 = icmp eq i32 %call239, 0, !dbg !5607
  %spec.select = select i1 %tobool240, i8 %expression_valid.1, i8 0, !dbg !5608
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !5355, metadata !DIExpression()), !dbg !5395
  %tobool243 = icmp eq i8 %spec.select, 0, !dbg !5609
  br i1 %tobool243, label %cleanup246, label %if.then244, !dbg !5611

if.then244:                                       ; preds = %if.end237
  %94 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !5612
  call void @llvm.dbg.value(metadata %struct.rtx_def* %94, metadata !5360, metadata !DIExpression()), !dbg !5395
  br label %cleanup246, !dbg !5613

cleanup246:                                       ; preds = %if.end237, %if.else225, %if.then244, %if.end230, %lor.lhs.false143, %cleanup221
  %cleanup.dest.slot.4 = phi i32 [ %cleanup.dest.slot.3, %cleanup221 ], [ 13, %lor.lhs.false143 ], [ 7, %if.else225 ], [ 7, %if.end230 ], [ 0, %if.then244 ], [ 0, %if.end237 ]
  %last_valid_expr.3 = phi %struct.rtx_def* [ %last_valid_expr.1, %cleanup221 ], [ %last_valid_expr.1, %lor.lhs.false143 ], [ %last_valid_expr.1, %if.else225 ], [ %last_valid_expr.1, %if.end230 ], [ %94, %if.then244 ], [ %last_valid_expr.1, %if.end237 ], !dbg !5395
  %expression_valid.3 = phi i8 [ %expression_valid.1, %cleanup221 ], [ %expression_valid.1, %lor.lhs.false143 ], [ %expression_valid.1, %if.else225 ], [ %expression_valid.1, %if.end230 ], [ %spec.select, %if.then244 ], [ 0, %if.end237 ], !dbg !5395
  call void @llvm.dbg.value(metadata i8 %expression_valid.3, metadata !5355, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.3, metadata !5360, metadata !DIExpression()), !dbg !5395
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8, !dbg !5614
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #8, !dbg !5614
  switch i32 %cleanup.dest.slot.4, label %cleanup278.loopexit [
    i32 0, label %for.inc251
    i32 13, label %for.inc251
    i32 7, label %out.loopexit
  ]

for.inc251:                                       ; preds = %cleanup246, %cleanup246
  %95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5537
  %rt_rtx255 = bitcast %union.rtunion_def* %95 to %struct.rtx_def**, !dbg !5537
  br label %for.cond120, !dbg !5537, !llvm.loop !5615

for.end256.loopexit:                              ; preds = %land.rhs
  %.lcssa = phi %struct.basic_block_def* [ %64, %land.rhs ], !dbg !5537
  %last_valid_expr.1.lcssa26 = phi %struct.rtx_def* [ %last_valid_expr.1, %land.rhs ], !dbg !5487
  %expression_valid.1.lcssa22 = phi i8 [ %expression_valid.1, %land.rhs ], !dbg !5488
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.1.lcssa26, metadata !5360, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i8 %expression_valid.1.lcssa22, metadata !5355, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.1.lcssa26, metadata !5360, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i8 %expression_valid.1.lcssa22, metadata !5355, metadata !DIExpression()), !dbg !5395
  br label %for.end256, !dbg !5617

for.end256:                                       ; preds = %for.end256.loopexit, %for.cond120.for.end256_crit_edge
  %last_valid_expr.129 = phi %struct.rtx_def* [ %last_valid_expr.1.lcssa, %for.cond120.for.end256_crit_edge ], [ %last_valid_expr.1.lcssa26, %for.end256.loopexit ]
  %expression_valid.125 = phi i8 [ %expression_valid.1.lcssa, %for.cond120.for.end256_crit_edge ], [ %expression_valid.1.lcssa22, %for.end256.loopexit ]
  %96 = phi %struct.basic_block_def* [ %.pre, %for.cond120.for.end256_crit_edge ], [ %.lcssa, %for.end256.loopexit ], !dbg !5538
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.129, metadata !5360, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.129, metadata !5360, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i8 %expression_valid.125, metadata !5355, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i8 %expression_valid.125, metadata !5355, metadata !DIExpression()), !dbg !5395
  %call258 = call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %96) #7, !dbg !5617
  %tobool259 = icmp eq i8 %call258, 0, !dbg !5617
  br i1 %tobool259, label %out.loopexit5, label %lor.lhs.false260, !dbg !5618

lor.lhs.false260:                                 ; preds = %for.end256
  %97 = load %struct.basic_block_def*, %struct.basic_block_def** %src61, align 8, !dbg !5619
  %call262 = call fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %97) #7, !dbg !5620
  %98 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5621
  %cfg264 = getelementptr inbounds %struct.function, %struct.function* %98, i64 0, i32 1, !dbg !5621
  %99 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg264, align 8, !dbg !5621
  %x_entry_block_ptr265 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %99, i64 0, i32 0, !dbg !5621
  %100 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr265, align 8, !dbg !5621
  %cmp266 = icmp eq %struct.basic_block_def* %call262, %100, !dbg !5622
  br i1 %cmp266, label %out.loopexit5, label %if.end268, !dbg !5623

if.end268:                                        ; preds = %lor.lhs.false260
  %101 = load %struct.basic_block_def*, %struct.basic_block_def** %src61, align 8, !dbg !5624
  %call270 = call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %101) #7, !dbg !5625
  call void @llvm.dbg.value(metadata %struct.edge_def* %call270, metadata !5365, metadata !DIExpression()), !dbg !5395
  br label %while.cond, !dbg !5486, !llvm.loop !5626

out.loopexit:                                     ; preds = %cleanup246
  %last_valid_expr.3.lcssa32 = phi %struct.rtx_def* [ %last_valid_expr.3, %cleanup246 ], !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.3.lcssa32, metadata !5360, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.3.lcssa32, metadata !5360, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.3.lcssa32, metadata !5360, metadata !DIExpression()), !dbg !5395
  br label %out, !dbg !5628

out.loopexit5:                                    ; preds = %cleanup112, %lor.lhs.false260, %for.end256
  %last_valid_expr.4.ph = phi %struct.rtx_def* [ %last_valid_expr.129, %lor.lhs.false260 ], [ %last_valid_expr.129, %for.end256 ], [ %last_valid_expr.0, %cleanup112 ]
  br label %out, !dbg !5628

out:                                              ; preds = %out.loopexit5, %out.loopexit
  %last_valid_expr.4 = phi %struct.rtx_def* [ %last_valid_expr.3.lcssa32, %out.loopexit ], [ %last_valid_expr.4.ph, %out.loopexit5 ], !dbg !5487
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_valid_expr.4, metadata !5360, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.label(metadata !5394), !dbg !5629
  call void @llvm.dbg.value(metadata %struct.rtx_def** %cond_list, metadata !5359, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  call void @free_EXPR_LIST_list(%struct.rtx_def** nonnull %cond_list) #6, !dbg !5628
  %102 = load i32*, i32** %5, align 8, !dbg !5630
  %bf.load271 = load i32, i32* %102, align 8, !dbg !5630
  %bf.clear272 = and i32 %bf.load271, 65535, !dbg !5630
  %idxprom273 = zext i32 %bf.clear272 to i64, !dbg !5630
  %arrayidx274 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom273, !dbg !5630
  %103 = load i32, i32* %arrayidx274, align 4, !dbg !5630
  %cmp275 = icmp eq i32 %103, 9, !dbg !5630
  br i1 %cmp275, label %if.end277, label %if.then276, !dbg !5632

if.then276:                                       ; preds = %out
  store %struct.rtx_def* %last_valid_expr.4, %struct.rtx_def** %expr, align 8, !dbg !5633
  br label %if.end277, !dbg !5634

if.end277:                                        ; preds = %if.then276, %out
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call59) #6, !dbg !5635
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5363, metadata !DIExpression()), !dbg !5395
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call60) #6, !dbg !5636
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5364, metadata !DIExpression()), !dbg !5395
  br label %cleanup278, !dbg !5637

cleanup278.loopexit:                              ; preds = %cleanup246
  br label %cleanup278, !dbg !5637

cleanup278.loopexit4:                             ; preds = %cleanup112
  br label %cleanup278, !dbg !5637

cleanup278:                                       ; preds = %cleanup278.loopexit4, %cleanup278.loopexit, %entry, %if.end54, %for.end, %if.end, %if.end277, %if.end34, %if.then33, %if.then24, %if.then14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5637
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5637
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5637
  ret void, !dbg !5637
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @determine_max_iter(%struct.loop* %loop, %struct.niter_desc* %desc, %struct.rtx_def* %old_niter) unnamed_addr #4 !dbg !5638 {
entry:
  %mmin = alloca %struct.rtx_def*, align 8
  %mmax = alloca %struct.rtx_def*, align 8
  %cmp = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5642, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.value(metadata %struct.niter_desc* %desc, metadata !5643, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_niter, metadata !5644, metadata !DIExpression()), !dbg !5651
  %niter_expr = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 11, !dbg !5652
  %0 = load %struct.rtx_def*, %struct.rtx_def** %niter_expr, align 8, !dbg !5652
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5645, metadata !DIExpression()), !dbg !5651
  %1 = bitcast %struct.rtx_def** %mmin to i8*, !dbg !5653
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5653
  %2 = bitcast %struct.rtx_def** %mmax to i8*, !dbg !5653
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5653
  %3 = bitcast %struct.rtx_def** %cmp to i8*, !dbg !5653
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5653
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !5654
  %bf.load = load i32, i32* %4, align 8, !dbg !5654
  %bf.clear = and i32 %bf.load, 65535, !dbg !5654
  %cmp1 = icmp eq i32 %bf.clear, 61, !dbg !5656
  br i1 %cmp1, label %land.lhs.true, label %if.end12, !dbg !5657

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5658
  %5 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !5658
  %6 = load i32*, i32** %5, align 8, !dbg !5658
  %bf.load2 = load i32, i32* %6, align 8, !dbg !5658
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !5658
  %cmp4 = icmp eq i32 %bf.clear3, 30, !dbg !5658
  br i1 %cmp4, label %if.then, label %if.end12, !dbg !5659

if.then:                                          ; preds = %land.lhs.true
  %u9 = getelementptr inbounds i32, i32* %6, i64 2, !dbg !5660
  %arrayidx10 = bitcast i32* %u9 to i64*, !dbg !5660
  %7 = load i64, i64* %arrayidx10, align 8, !dbg !5660
  call void @llvm.dbg.value(metadata i64 %7, metadata !5649, metadata !DIExpression()), !dbg !5651
  %add = add i64 %7, 1, !dbg !5662
  %and = and i64 %7, %add, !dbg !5664
  %tobool = icmp eq i64 %and, 0, !dbg !5664
  br i1 %tobool, label %if.then11, label %if.end12, !dbg !5665

if.then11:                                        ; preds = %if.then
  %niter_max = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 5, !dbg !5666
  store i64 %7, i64* %niter_max, align 8, !dbg !5668
  br label %cleanup, !dbg !5669

if.end12:                                         ; preds = %if.then, %land.lhs.true, %entry
  %mode = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 10, !dbg !5670
  %8 = load i32, i32* %mode, align 4, !dbg !5670
  %signed_p = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 9, !dbg !5671
  %9 = load i8, i8* %signed_p, align 8, !dbg !5671
  %conv = zext i8 %9 to i32, !dbg !5672
  call void @llvm.dbg.value(metadata %struct.rtx_def** %mmin, metadata !5646, metadata !DIExpression(DW_OP_deref)), !dbg !5651
  call void @llvm.dbg.value(metadata %struct.rtx_def** %mmax, metadata !5647, metadata !DIExpression(DW_OP_deref)), !dbg !5651
  call void @get_mode_bounds(i32 %8, i32 %conv, i32 %8, %struct.rtx_def** nonnull %mmin, %struct.rtx_def** nonnull %mmax) #6, !dbg !5673
  %10 = load %struct.rtx_def*, %struct.rtx_def** %mmax, align 8, !dbg !5674
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !5647, metadata !DIExpression()), !dbg !5651
  %u14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, !dbg !5674
  %arrayidx16 = bitcast %union.u* %u14 to i64*, !dbg !5674
  %11 = load i64, i64* %arrayidx16, align 8, !dbg !5674
  %12 = load %struct.rtx_def*, %struct.rtx_def** %mmin, align 8, !dbg !5675
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !5646, metadata !DIExpression()), !dbg !5651
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, !dbg !5675
  %arrayidx19 = bitcast %union.u* %u17 to i64*, !dbg !5675
  %13 = load i64, i64* %arrayidx19, align 8, !dbg !5675
  %sub = sub nsw i64 %11, %13, !dbg !5676
  call void @llvm.dbg.value(metadata i64 %sub, metadata !5649, metadata !DIExpression()), !dbg !5651
  %bf.load20 = load i32, i32* %4, align 8, !dbg !5677
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !5677
  %cmp22 = icmp eq i32 %bf.clear21, 59, !dbg !5679
  br i1 %cmp22, label %if.then24, label %if.end47, !dbg !5680

if.then24:                                        ; preds = %if.end12
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5681
  %15 = bitcast %union.rtunion_def* %14 to i32**, !dbg !5681
  %16 = load i32*, i32** %15, align 8, !dbg !5681
  %bf.load29 = load i32, i32* %16, align 8, !dbg !5681
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !5681
  %cmp31 = icmp eq i32 %bf.clear30, 30, !dbg !5681
  br i1 %cmp31, label %if.end35, label %if.then33, !dbg !5684

if.then33:                                        ; preds = %if.then24
  %niter_max34 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 5, !dbg !5685
  store i64 %sub, i64* %niter_max34, align 8, !dbg !5687
  br label %cleanup, !dbg !5688

if.end35:                                         ; preds = %if.then24
  %u40 = getelementptr inbounds i32, i32* %16, i64 2, !dbg !5689
  %arrayidx42 = bitcast i32* %u40 to i64*, !dbg !5689
  %17 = load i64, i64* %arrayidx42, align 8, !dbg !5689
  call void @llvm.dbg.value(metadata i64 %17, metadata !5650, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.value(metadata %struct.rtx_def* undef, metadata !5645, metadata !DIExpression()), !dbg !5651
  br label %if.end47, !dbg !5690

if.end47:                                         ; preds = %if.end12, %if.end35
  %inc.0 = phi i64 [ %17, %if.end35 ], [ 1, %if.end12 ], !dbg !5691
  call void @llvm.dbg.value(metadata i64 %inc.0, metadata !5650, metadata !DIExpression()), !dbg !5651
  %18 = load i8, i8* %signed_p, align 8, !dbg !5692
  %tobool50 = icmp eq i8 %18, 0, !dbg !5693
  %cond = select i1 %tobool50, i32 89, i32 85, !dbg !5693
  %19 = load i32, i32* %mode, align 4, !dbg !5694
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !5647, metadata !DIExpression()), !dbg !5651
  %call = call %struct.rtx_def* @simplify_gen_relational(i32 %cond, i32 0, i32 %19, %struct.rtx_def* %old_niter, %struct.rtx_def* %10) #6, !dbg !5695
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5648, metadata !DIExpression()), !dbg !5651
  store %struct.rtx_def* %call, %struct.rtx_def** %cmp, align 8, !dbg !5696
  call void @llvm.dbg.value(metadata %struct.rtx_def** %cmp, metadata !5648, metadata !DIExpression(DW_OP_deref)), !dbg !5651
  call fastcc void @simplify_using_initial_values(%struct.loop* %loop, i32 0, %struct.rtx_def** nonnull %cmp) #7, !dbg !5697
  %20 = load %struct.rtx_def*, %struct.rtx_def** %cmp, align 8, !dbg !5698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !5648, metadata !DIExpression()), !dbg !5651
  %21 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !5700
  %cmp52 = icmp eq %struct.rtx_def* %20, %21, !dbg !5701
  br i1 %cmp52, label %if.then54, label %if.end59, !dbg !5702

if.then54:                                        ; preds = %if.end47
  %dec = add i64 %sub, -1, !dbg !5703
  call void @llvm.dbg.value(metadata i64 %dec, metadata !5649, metadata !DIExpression()), !dbg !5651
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5705
  %tobool55 = icmp eq %struct._IO_FILE* %22, null, !dbg !5705
  br i1 %tobool55, label %if.end59, label %if.then56, !dbg !5707

if.then56:                                        ; preds = %if.then54
  %call57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %22, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !5708
  br label %if.end59, !dbg !5708

if.end59:                                         ; preds = %if.then54, %if.then56, %if.end47
  %nmax.0 = phi i64 [ %sub, %if.end47 ], [ %dec, %if.then56 ], [ %dec, %if.then54 ], !dbg !5651
  call void @llvm.dbg.value(metadata i64 %nmax.0, metadata !5649, metadata !DIExpression()), !dbg !5651
  %div = udiv i64 %nmax.0, %inc.0, !dbg !5709
  %niter_max60 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 5, !dbg !5710
  store i64 %div, i64* %niter_max60, align 8, !dbg !5711
  br label %cleanup, !dbg !5712

cleanup:                                          ; preds = %if.end59, %if.then33, %if.then11
  %retval.0 = phi i64 [ %div, %if.end59 ], [ %sub, %if.then33 ], [ %7, %if.then11 ], !dbg !5651
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5713
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5713
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5713
  ret i64 %retval.0, !dbg !5713
}

; Function Attrs: nounwind uwtable
define internal fastcc void @shorten_into_mode(%struct.rtx_iv* %iv, i32 %mode, i32 %cond, i8 zeroext %signed_p, %struct.niter_desc* %desc) unnamed_addr #4 !dbg !5714 {
entry:
  %mmin = alloca %struct.rtx_def*, align 8
  %mmax = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_iv* %iv, metadata !5718, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5719, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5720, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata i8 %signed_p, metadata !5721, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata %struct.niter_desc* %desc, metadata !5722, metadata !DIExpression()), !dbg !5727
  %0 = bitcast %struct.rtx_def** %mmin to i8*, !dbg !5728
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5728
  %1 = bitcast %struct.rtx_def** %mmax to i8*, !dbg !5728
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5728
  %conv = zext i8 %signed_p to i32, !dbg !5729
  %extend_mode = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 5, !dbg !5730
  %2 = load i32, i32* %extend_mode, align 8, !dbg !5730
  call void @llvm.dbg.value(metadata %struct.rtx_def** %mmin, metadata !5723, metadata !DIExpression(DW_OP_deref)), !dbg !5727
  call void @llvm.dbg.value(metadata %struct.rtx_def** %mmax, metadata !5724, metadata !DIExpression(DW_OP_deref)), !dbg !5727
  call void @get_mode_bounds(i32 %mode, i32 %conv, i32 %2, %struct.rtx_def** nonnull %mmin, %struct.rtx_def** nonnull %mmax) #6, !dbg !5731
  %3 = load i32, i32* %extend_mode, align 8, !dbg !5732
  %base = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 0, !dbg !5733
  %4 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !5733
  %5 = load %struct.rtx_def*, %struct.rtx_def** %mmin, align 8, !dbg !5734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !5723, metadata !DIExpression()), !dbg !5727
  %call = call %struct.rtx_def* @simplify_gen_relational(i32 85, i32 16, i32 %3, %struct.rtx_def* %4, %struct.rtx_def* %5) #6, !dbg !5735
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5726, metadata !DIExpression()), !dbg !5727
  %6 = load i32, i32* %extend_mode, align 8, !dbg !5736
  %7 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !5737
  %8 = load %struct.rtx_def*, %struct.rtx_def** %mmax, align 8, !dbg !5738
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !5724, metadata !DIExpression()), !dbg !5727
  %call4 = call %struct.rtx_def* @simplify_gen_relational(i32 83, i32 16, i32 %6, %struct.rtx_def* %7, %struct.rtx_def* %8) #6, !dbg !5739
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !5725, metadata !DIExpression()), !dbg !5727
  switch i32 %cond, label %sw.default [
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 82, label %sw.bb14
    i32 83, label %sw.bb14
    i32 86, label %sw.bb14
    i32 87, label %sw.bb14
    i32 80, label %sw.bb29
  ], !dbg !5740

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %9 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5741
  %cmp = icmp eq %struct.rtx_def* %call, %9, !dbg !5744
  br i1 %cmp, label %if.end, label %if.then, !dbg !5745

if.then:                                          ; preds = %sw.bb
  %infinite = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 8, !dbg !5746
  %10 = load %struct.rtx_def*, %struct.rtx_def** %infinite, align 8, !dbg !5746
  %call6 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call, %struct.rtx_def* %10) #6, !dbg !5747
  store %struct.rtx_def* %call6, %struct.rtx_def** %infinite, align 8, !dbg !5748
  %.pre2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5749
  br label %if.end, !dbg !5751

if.end:                                           ; preds = %sw.bb, %if.then
  %11 = phi %struct.rtx_def* [ %call, %sw.bb ], [ %.pre2, %if.then ], !dbg !5749
  %cmp8 = icmp eq %struct.rtx_def* %call4, %11, !dbg !5752
  br i1 %cmp8, label %sw.epilog, label %if.then10, !dbg !5753

if.then10:                                        ; preds = %if.end
  %noloop_assumptions = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 7, !dbg !5754
  %12 = load %struct.rtx_def*, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !5754
  %call11 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call4, %struct.rtx_def* %12) #6, !dbg !5755
  store %struct.rtx_def* %call11, %struct.rtx_def** %noloop_assumptions, align 8, !dbg !5756
  br label %sw.epilog, !dbg !5757

sw.bb14:                                          ; preds = %entry, %entry, %entry, %entry
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5758
  %cmp15 = icmp eq %struct.rtx_def* %call4, %13, !dbg !5760
  br i1 %cmp15, label %if.end21, label %if.then17, !dbg !5761

if.then17:                                        ; preds = %sw.bb14
  %infinite18 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 8, !dbg !5762
  %14 = load %struct.rtx_def*, %struct.rtx_def** %infinite18, align 8, !dbg !5762
  %call19 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call4, %struct.rtx_def* %14) #6, !dbg !5763
  store %struct.rtx_def* %call19, %struct.rtx_def** %infinite18, align 8, !dbg !5764
  %.pre1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5765
  br label %if.end21, !dbg !5767

if.end21:                                         ; preds = %sw.bb14, %if.then17
  %15 = phi %struct.rtx_def* [ %call4, %sw.bb14 ], [ %.pre1, %if.then17 ], !dbg !5765
  %cmp22 = icmp eq %struct.rtx_def* %call, %15, !dbg !5768
  br i1 %cmp22, label %sw.epilog, label %if.then24, !dbg !5769

if.then24:                                        ; preds = %if.end21
  %noloop_assumptions25 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 7, !dbg !5770
  %16 = load %struct.rtx_def*, %struct.rtx_def** %noloop_assumptions25, align 8, !dbg !5770
  %call26 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call, %struct.rtx_def* %16) #6, !dbg !5771
  store %struct.rtx_def* %call26, %struct.rtx_def** %noloop_assumptions25, align 8, !dbg !5772
  br label %sw.epilog, !dbg !5773

sw.bb29:                                          ; preds = %entry
  %17 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5774
  %cmp30 = icmp eq %struct.rtx_def* %call4, %17, !dbg !5776
  br i1 %cmp30, label %if.end36, label %if.then32, !dbg !5777

if.then32:                                        ; preds = %sw.bb29
  %infinite33 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 8, !dbg !5778
  %18 = load %struct.rtx_def*, %struct.rtx_def** %infinite33, align 8, !dbg !5778
  %call34 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call4, %struct.rtx_def* %18) #6, !dbg !5779
  store %struct.rtx_def* %call34, %struct.rtx_def** %infinite33, align 8, !dbg !5780
  %.pre = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5781
  br label %if.end36, !dbg !5783

if.end36:                                         ; preds = %sw.bb29, %if.then32
  %19 = phi %struct.rtx_def* [ %call4, %sw.bb29 ], [ %.pre, %if.then32 ], !dbg !5781
  %cmp37 = icmp eq %struct.rtx_def* %call, %19, !dbg !5784
  br i1 %cmp37, label %sw.epilog, label %if.then39, !dbg !5785

if.then39:                                        ; preds = %if.end36
  %infinite40 = getelementptr inbounds %struct.niter_desc, %struct.niter_desc* %desc, i64 0, i32 8, !dbg !5786
  %20 = load %struct.rtx_def*, %struct.rtx_def** %infinite40, align 8, !dbg !5786
  %call41 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call, %struct.rtx_def* %20) #6, !dbg !5787
  store %struct.rtx_def* %call41, %struct.rtx_def** %infinite40, align 8, !dbg !5788
  br label %sw.epilog, !dbg !5789

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2071, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5790
  br label %sw.epilog, !dbg !5791

sw.epilog:                                        ; preds = %if.end, %if.end21, %if.end36, %if.then39, %if.then24, %if.then10, %sw.default
  %mode44 = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 6, !dbg !5792
  store i32 %mode, i32* %mode44, align 4, !dbg !5793
  %tobool = icmp eq i8 %signed_p, 0, !dbg !5794
  %cond46 = select i1 %tobool, i32 99, i32 98, !dbg !5794
  %extend = getelementptr inbounds %struct.rtx_iv, %struct.rtx_iv* %iv, i64 0, i32 2, !dbg !5795
  store i32 %cond46, i32* %extend, align 8, !dbg !5796
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5797
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5797
  ret void, !dbg !5797
}

; Function Attrs: nounwind uwtable
define internal fastcc void @eliminate_implied_conditions(i32 %op, %struct.rtx_def** %head, %struct.rtx_def* %tail) unnamed_addr #4 !dbg !5798 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !5802, metadata !DIExpression()), !dbg !5806
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !5803, metadata !DIExpression()), !dbg !5806
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !5804, metadata !DIExpression()), !dbg !5806
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !5805, metadata !DIExpression()), !dbg !5806
  br label %for.cond, !dbg !5807

for.cond:                                         ; preds = %for.body, %entry
  %elt.0 = phi %struct.rtx_def* [ %tail, %entry ], [ %2, %for.body ], !dbg !5809
  call void @llvm.dbg.value(metadata %struct.rtx_def* %elt.0, metadata !5805, metadata !DIExpression()), !dbg !5806
  %tobool = icmp eq %struct.rtx_def* %elt.0, null, !dbg !5810
  br i1 %tobool, label %for.cond5.preheader, label %for.body, !dbg !5810

for.cond5.preheader:                              ; preds = %for.cond
  br label %for.cond5, !dbg !5811

for.body:                                         ; preds = %for.cond
  %0 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !5813
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %elt.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5815
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5815
  tail call fastcc void @eliminate_implied_condition(i32 %op, %struct.rtx_def* %0, %struct.rtx_def** nonnull %rt_rtx) #7, !dbg !5816
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %elt.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5817
  %rt_rtx4 = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !5817
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !5817
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !5805, metadata !DIExpression()), !dbg !5806
  br label %for.cond, !dbg !5818, !llvm.loop !5819

for.cond5:                                        ; preds = %for.cond5.preheader, %for.body7
  %elt.1 = phi %struct.rtx_def* [ %5, %for.body7 ], [ %tail, %for.cond5.preheader ], !dbg !5821
  call void @llvm.dbg.value(metadata %struct.rtx_def* %elt.1, metadata !5805, metadata !DIExpression()), !dbg !5806
  %tobool6 = icmp eq %struct.rtx_def* %elt.1, null, !dbg !5811
  br i1 %tobool6, label %for.end17, label %for.body7, !dbg !5811

for.body7:                                        ; preds = %for.cond5
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %elt.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5822
  %rt_rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !5822
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx11, align 8, !dbg !5822
  tail call fastcc void @eliminate_implied_condition(i32 %op, %struct.rtx_def* %3, %struct.rtx_def** %head) #7, !dbg !5824
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %elt.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5825
  %rt_rtx16 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !5825
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !5825
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !5805, metadata !DIExpression()), !dbg !5806
  br label %for.cond5, !dbg !5826, !llvm.loop !5827

for.end17:                                        ; preds = %for.cond5
  ret void, !dbg !5829
}

; Function Attrs: nounwind uwtable
define internal i32 @replace_single_def_regs(%struct.rtx_def** %reg, i8* %expr1) #4 !dbg !5830 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %reg, metadata !5832, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata i8* %expr1, metadata !5833, metadata !DIExpression()), !dbg !5843
  %0 = bitcast i8* %expr1 to %struct.rtx_def**, !dbg !5844
  call void @llvm.dbg.value(metadata %struct.rtx_def** %0, metadata !5838, metadata !DIExpression()), !dbg !5843
  %1 = bitcast %struct.rtx_def** %reg to i32**, !dbg !5845
  %2 = load i32*, i32** %1, align 8, !dbg !5845
  %bf.load = load i32, i32* %2, align 8, !dbg !5845
  %bf.clear = and i32 %bf.load, 65535, !dbg !5845
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5845
  br i1 %cmp, label %if.end, label %cleanup113, !dbg !5847

if.end:                                           ; preds = %entry
  %3 = bitcast i32* %2 to %struct.rtx_def*, !dbg !5847
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #7, !dbg !5848
  call void @llvm.dbg.value(metadata i32 %call, metadata !5834, metadata !DIExpression()), !dbg !5843
  br label %for.cond, !dbg !5849

for.cond:                                         ; preds = %cleanup, %if.end
  %regno.0 = phi i32 [ %call, %if.end ], [ %regno.1, %cleanup ], !dbg !5850
  %src.0 = phi %struct.rtx_def* [ undef, %if.end ], [ %src.1, %cleanup ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.0, metadata !5837, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata i32 %regno.0, metadata !5834, metadata !DIExpression()), !dbg !5843
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !5851
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 5, !dbg !5851
  %5 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !5851
  %idxprom = zext i32 %regno.0 to i64, !dbg !5851
  %arrayidx = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %5, i64 %idxprom, !dbg !5851
  %6 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx, align 8, !dbg !5851
  %reg_chain = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %6, i64 0, i32 0, !dbg !5851
  %7 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain, align 8, !dbg !5851
  call void @llvm.dbg.value(metadata %union.df_ref_d* %7, metadata !5835, metadata !DIExpression()), !dbg !5843
  %cmp1 = icmp eq %union.df_ref_d* %7, null, !dbg !5852
  br i1 %cmp1, label %cleanup, label %lor.lhs.false, !dbg !5854

lor.lhs.false:                                    ; preds = %for.cond
  %next_reg = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %7, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5855
  %8 = load %union.df_ref_d*, %union.df_ref_d** %next_reg, align 8, !dbg !5855
  %cmp2 = icmp eq %union.df_ref_d* %8, null, !dbg !5856
  br i1 %cmp2, label %lor.lhs.false3, label %cleanup, !dbg !5857

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %7, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !5858
  %bf.load5 = load i32, i32* %9, align 8, !dbg !5858
  %bf.clear6 = and i32 %bf.load5, 255, !dbg !5858
  %cmp7 = icmp eq i32 %bf.clear6, 1, !dbg !5858
  br i1 %cmp7, label %cleanup, label %if.end9, !dbg !5859

if.end9:                                          ; preds = %lor.lhs.false3
  %insn_info = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %7, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !5860
  %10 = bitcast %struct.df_insn_info** %insn_info to i32***, !dbg !5860
  %11 = load i32**, i32*** %10, align 8, !dbg !5860
  %12 = load i32*, i32** %11, align 8, !dbg !5860
  %bf.load11 = load i32, i32* %12, align 8, !dbg !5860
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !5860
  %cmp13 = icmp eq i32 %bf.clear12, 8, !dbg !5860
  %13 = bitcast i32* %12 to %struct.rtx_def*, !dbg !5860
  br i1 %cmp13, label %cond.true, label %lor.lhs.false14, !dbg !5860

lor.lhs.false14:                                  ; preds = %if.end9
  %cmp20 = icmp eq i32 %bf.clear12, 7, !dbg !5860
  br i1 %cmp20, label %cond.true, label %lor.lhs.false21, !dbg !5860

lor.lhs.false21:                                  ; preds = %lor.lhs.false14
  %cmp27 = icmp eq i32 %bf.clear12, 9, !dbg !5860
  br i1 %cmp27, label %cond.true, label %lor.lhs.false28, !dbg !5860

lor.lhs.false28:                                  ; preds = %lor.lhs.false21
  %cmp34 = icmp eq i32 %bf.clear12, 10, !dbg !5860
  br i1 %cmp34, label %cond.true, label %cond.end62, !dbg !5860

cond.true:                                        ; preds = %lor.lhs.false28, %lor.lhs.false21, %lor.lhs.false14, %if.end9
  %14 = getelementptr inbounds i32, i32* %12, i64 12, !dbg !5860
  %15 = bitcast i32* %14 to i32**, !dbg !5860
  %16 = load i32*, i32** %15, align 8, !dbg !5860
  %bf.load39 = load i32, i32* %16, align 8, !dbg !5860
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !5860
  %cmp41 = icmp eq i32 %bf.clear40, 23, !dbg !5860
  %17 = bitcast i32* %16 to %struct.rtx_def*, !dbg !5860
  br i1 %cmp41, label %cond.true42, label %cond.false, !dbg !5860

cond.true42:                                      ; preds = %cond.true
  br label %cond.end62, !dbg !5860

cond.false:                                       ; preds = %cond.true
  %call60 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %13, %struct.rtx_def* %17) #6, !dbg !5860
  br label %cond.end62, !dbg !5860

cond.end62:                                       ; preds = %lor.lhs.false28, %cond.true42, %cond.false
  %cond63 = phi %struct.rtx_def* [ %17, %cond.true42 ], [ %call60, %cond.false ], [ null, %lor.lhs.false28 ], !dbg !5860
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond63, metadata !5836, metadata !DIExpression()), !dbg !5843
  %cmp64 = icmp eq %struct.rtx_def* %cond63, null, !dbg !5861
  br i1 %cmp64, label %cleanup, label %lor.lhs.false65, !dbg !5863

lor.lhs.false65:                                  ; preds = %cond.end62
  %arrayidx68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond63, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5864
  %18 = bitcast %union.rtunion_def* %arrayidx68 to i32**, !dbg !5864
  %19 = load i32*, i32** %18, align 8, !dbg !5864
  %bf.load70 = load i32, i32* %19, align 8, !dbg !5864
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !5864
  %cmp72 = icmp eq i32 %bf.clear71, 37, !dbg !5864
  br i1 %cmp72, label %lor.lhs.false73, label %cleanup, !dbg !5865

lor.lhs.false73:                                  ; preds = %lor.lhs.false65
  %20 = bitcast i32* %19 to %struct.rtx_def*, !dbg !5865
  %call78 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %20) #7, !dbg !5866
  %cmp79 = icmp eq i32 %call78, %regno.0, !dbg !5867
  br i1 %cmp79, label %if.end81, label %cleanup, !dbg !5868

if.end81:                                         ; preds = %lor.lhs.false73
  %21 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5869
  %insn84 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %21, i64 0, i32 0, !dbg !5869
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn84, align 8, !dbg !5869
  %call85 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %22) #6, !dbg !5870
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call85, metadata !5839, metadata !DIExpression()), !dbg !5871
  %tobool = icmp eq %struct.rtx_def* %call85, null, !dbg !5872
  br i1 %tobool, label %if.end97, label %land.lhs.true, !dbg !5874

land.lhs.true:                                    ; preds = %if.end81
  %arrayidx88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call85, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5875
  %rt_rtx89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**, !dbg !5875
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89, align 8, !dbg !5875
  %call90 = tail call i32 @function_invariant_p(%struct.rtx_def* %23) #6, !dbg !5876
  %tobool91 = icmp eq i32 %call90, 0, !dbg !5876
  br i1 %tobool91, label %if.end97, label %if.then92, !dbg !5877

if.then92:                                        ; preds = %land.lhs.true
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89, align 8, !dbg !5878
  call void @llvm.dbg.value(metadata %struct.rtx_def* %24, metadata !5837, metadata !DIExpression()), !dbg !5843
  br label %cleanup, !dbg !5880

if.end97:                                         ; preds = %land.lhs.true, %if.end81
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond63, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5881
  %rt_rtx101 = bitcast %union.rtunion_def* %25 to %struct.rtx_def**, !dbg !5881
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !5881
  call void @llvm.dbg.value(metadata %struct.rtx_def* %26, metadata !5837, metadata !DIExpression()), !dbg !5843
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i64 0, i32 0, !dbg !5882
  %bf.load102 = load i32, i32* %27, align 8, !dbg !5882
  %bf.clear103 = and i32 %bf.load102, 65535, !dbg !5882
  %cmp104 = icmp eq i32 %bf.clear103, 37, !dbg !5882
  br i1 %cmp104, label %if.then105, label %cleanup, !dbg !5884

if.then105:                                       ; preds = %if.end97
  %call106 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %26) #7, !dbg !5885
  call void @llvm.dbg.value(metadata i32 %call106, metadata !5834, metadata !DIExpression()), !dbg !5843
  br label %cleanup, !dbg !5887, !llvm.loop !5888

cleanup:                                          ; preds = %lor.lhs.false73, %lor.lhs.false, %if.end97, %cond.end62, %lor.lhs.false65, %for.cond, %lor.lhs.false3, %if.then105, %if.then92
  %regno.1 = phi i32 [ %regno.0, %if.then92 ], [ %call106, %if.then105 ], [ %regno.0, %lor.lhs.false3 ], [ %regno.0, %lor.lhs.false ], [ %regno.0, %for.cond ], [ %regno.0, %lor.lhs.false73 ], [ %regno.0, %lor.lhs.false65 ], [ %regno.0, %cond.end62 ], [ %regno.0, %if.end97 ], !dbg !5843
  %src.1 = phi %struct.rtx_def* [ %24, %if.then92 ], [ %26, %if.then105 ], [ %src.0, %lor.lhs.false3 ], [ %src.0, %lor.lhs.false ], [ %src.0, %for.cond ], [ %src.0, %lor.lhs.false73 ], [ %src.0, %lor.lhs.false65 ], [ %src.0, %cond.end62 ], [ %26, %if.end97 ]
  %cleanup.dest.slot.0 = phi i32 [ 2, %if.then92 ], [ 3, %if.then105 ], [ 1, %lor.lhs.false3 ], [ 1, %lor.lhs.false ], [ 1, %for.cond ], [ 1, %lor.lhs.false73 ], [ 1, %lor.lhs.false65 ], [ 1, %cond.end62 ], [ 2, %if.end97 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.1, metadata !5837, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata i32 %regno.1, metadata !5834, metadata !DIExpression()), !dbg !5843
  switch i32 %cleanup.dest.slot.0, label %cleanup113.loopexit [
    i32 2, label %for.end
    i32 3, label %for.cond
  ]

for.end:                                          ; preds = %cleanup
  %src.1.lcssa4 = phi %struct.rtx_def* [ %src.1, %cleanup ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.1.lcssa4, metadata !5837, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.1.lcssa4, metadata !5837, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.1.lcssa4, metadata !5837, metadata !DIExpression()), !dbg !5843
  %call108 = tail call i32 @function_invariant_p(%struct.rtx_def* %src.1.lcssa4) #6, !dbg !5891
  %tobool109 = icmp eq i32 %call108, 0, !dbg !5891
  br i1 %tobool109, label %cleanup113, label %if.end111, !dbg !5893

if.end111:                                        ; preds = %for.end
  %28 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !5894
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5895
  %call112 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %28, %struct.rtx_def* %29, %struct.rtx_def* %src.1.lcssa4) #6, !dbg !5896
  store %struct.rtx_def* %call112, %struct.rtx_def** %0, align 8, !dbg !5897
  br label %cleanup113, !dbg !5898

cleanup113.loopexit:                              ; preds = %cleanup
  br label %cleanup113, !dbg !5899

cleanup113:                                       ; preds = %cleanup113.loopexit, %for.end, %entry, %if.end111
  %retval.2 = phi i32 [ 1, %if.end111 ], [ 0, %entry ], [ -1, %for.end ], [ -1, %cleanup113.loopexit ], !dbg !5843
  ret i32 %retval.2, !dbg !5899
}

declare dso_local %struct.edge_def* @loop_preheader_edge(%struct.loop*) local_unnamed_addr #1

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @mark_altered(%struct.rtx_def* %expr, %struct.rtx_def* %by, i8* %alt) #4 !dbg !5900 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %expr, metadata !5904, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata %struct.rtx_def* %by, metadata !5905, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i8* %alt, metadata !5906, metadata !DIExpression()), !dbg !5907
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %expr, i64 0, i32 0, !dbg !5908
  %bf.load = load i32, i32* %0, align 8, !dbg !5908
  %bf.clear = and i32 %bf.load, 65535, !dbg !5908
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !5910
  br i1 %cmp, label %if.then, label %if.end, !dbg !5911

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %expr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5912
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5912
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5912
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5904, metadata !DIExpression()), !dbg !5907
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5913
  %bf.load1.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !5915
  br label %if.end, !dbg !5916

if.end:                                           ; preds = %if.then, %entry
  %bf.load1 = phi i32 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ], !dbg !5915
  %expr.addr.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %expr, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %expr.addr.0, metadata !5904, metadata !DIExpression()), !dbg !5907
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !5915
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !5915
  br i1 %cmp3, label %if.end5, label %return, !dbg !5917

if.end5:                                          ; preds = %if.end
  %2 = bitcast i8* %alt to %struct.bitmap_head_def*, !dbg !5918
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %expr.addr.0) #7, !dbg !5918
  %call6 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %2, i32 %call) #6, !dbg !5918
  br label %return, !dbg !5919

return:                                           ; preds = %if.end, %if.end5
  ret void, !dbg !5919
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @suitable_set_for_replacement(%struct.rtx_def* %insn, %struct.rtx_def** %dest, %struct.rtx_def** %src) unnamed_addr #4 !dbg !5920 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5924, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.value(metadata %struct.rtx_def** %dest, metadata !5925, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.value(metadata %struct.rtx_def** %src, metadata !5926, metadata !DIExpression()), !dbg !5930
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5931
  %bf.load = load i32, i32* %0, align 8, !dbg !5931
  %bf.clear = and i32 %bf.load, 65535, !dbg !5931
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5931
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !5931

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !5931
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !5931

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !5931
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !5931

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !5931
  br i1 %cmp11, label %cond.true, label %cond.end25, !dbg !5931

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5931
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5931
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !5931
  %3 = load i32*, i32** %2, align 8, !dbg !5931
  %bf.load12 = load i32, i32* %3, align 8, !dbg !5931
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !5931
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !5931
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !5931
  br i1 %cmp14, label %cond.end25, label %cond.false, !dbg !5931

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %4) #6, !dbg !5931
  br label %cond.end25, !dbg !5931

cond.end25:                                       ; preds = %lor.lhs.false8, %cond.false, %cond.true
  %cond26 = phi %struct.rtx_def* [ %call, %cond.false ], [ %4, %cond.true ], [ null, %lor.lhs.false8 ], !dbg !5931
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond26, metadata !5927, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5928, metadata !DIExpression()), !dbg !5930
  %tobool = icmp eq %struct.rtx_def* %cond26, null, !dbg !5932
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5934

if.end:                                           ; preds = %cond.end25
  %arrayidx29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond26, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5935
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !5935
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !5935
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !5928, metadata !DIExpression()), !dbg !5930
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !5936
  %bf.load31 = load i32, i32* %6, align 8, !dbg !5936
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !5936
  %cmp33 = icmp eq i32 %bf.clear32, 37, !dbg !5936
  br i1 %cmp33, label %if.end35, label %cleanup, !dbg !5938

if.end35:                                         ; preds = %if.end
  %call36 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %insn) #6, !dbg !5939
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call36, metadata !5929, metadata !DIExpression()), !dbg !5930
  %tobool37 = icmp eq %struct.rtx_def* %call36, null, !dbg !5940
  br i1 %tobool37, label %if.else, label %if.then38, !dbg !5942

if.then38:                                        ; preds = %if.end35
  %arrayidx41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call36, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5943
  br label %if.end47, !dbg !5944

if.else:                                          ; preds = %if.end35
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond26, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5945
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.then38
  %rhs.0.in.in = phi %union.rtunion_def* [ %arrayidx41, %if.then38 ], [ %7, %if.else ]
  %rhs.0.in = bitcast %union.rtunion_def* %rhs.0.in.in to %struct.rtx_def**, !dbg !5946
  %rhs.0 = load %struct.rtx_def*, %struct.rtx_def** %rhs.0.in, align 8, !dbg !5946
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rhs.0, metadata !5929, metadata !DIExpression()), !dbg !5930
  %call48 = tail call fastcc zeroext i8 @simple_rhs_p(%struct.rtx_def* %rhs.0) #7, !dbg !5947
  %tobool49 = icmp eq i8 %call48, 0, !dbg !5947
  br i1 %tobool49, label %cleanup, label %if.end51, !dbg !5949

if.end51:                                         ; preds = %if.end47
  store %struct.rtx_def* %5, %struct.rtx_def** %dest, align 8, !dbg !5950
  store %struct.rtx_def* %rhs.0, %struct.rtx_def** %src, align 8, !dbg !5951
  br label %cleanup, !dbg !5952

cleanup:                                          ; preds = %if.end47, %cond.end25, %if.end, %if.end51
  %retval.0 = phi i8 [ 1, %if.end51 ], [ 0, %cond.end25 ], [ 0, %if.end ], [ 0, %if.end47 ], !dbg !5930
  ret i8 %retval.0, !dbg !5953
}

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_in_expr(%struct.rtx_def** %expr, %struct.rtx_def* %dest, %struct.rtx_def* %src) unnamed_addr #4 !dbg !5954 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %expr, metadata !5958, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !5959, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src, metadata !5960, metadata !DIExpression()), !dbg !5962
  %0 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !5963
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5961, metadata !DIExpression()), !dbg !5962
  %call = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %0, %struct.rtx_def* %dest, %struct.rtx_def* %src) #6, !dbg !5964
  store %struct.rtx_def* %call, %struct.rtx_def** %expr, align 8, !dbg !5965
  %cmp = icmp eq %struct.rtx_def* %0, %call, !dbg !5966
  br i1 %cmp, label %cleanup.cont, label %while.cond.preheader, !dbg !5968

while.cond.preheader:                             ; preds = %entry
  %1 = bitcast %struct.rtx_def** %expr to i8*, !dbg !5962
  br label %while.cond, !dbg !5969

while.cond:                                       ; preds = %while.cond.preheader, %while.cond
  %call1 = tail call i32 @for_each_rtx(%struct.rtx_def** %expr, i32 (%struct.rtx_def**, i8*)* nonnull @replace_single_def_regs, i8* %1) #6, !dbg !5970
  %cmp2 = icmp eq i32 %call1, 0, !dbg !5971
  br i1 %cmp2, label %cleanup.cont.loopexit, label %while.cond, !dbg !5969, !llvm.loop !5972

cleanup.cont.loopexit:                            ; preds = %while.cond
  br label %cleanup.cont, !dbg !5974

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !5974
}

declare dso_local void @free_EXPR_LIST_node(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5975 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5982, metadata !DIExpression()), !dbg !5983
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !5984
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5984
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5984
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5984

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5984
  br label %cond.end, !dbg !5984

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5984
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5984
  %cmp = icmp eq i32 %call, 1, !dbg !5985
  %conv2 = zext i1 %cmp to i8, !dbg !5984
  ret i8 %conv2, !dbg !5986
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5987 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5991, metadata !DIExpression()), !dbg !5992
  %call = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) #7, !dbg !5993
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !5994
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5994
  ret %struct.basic_block_def* %0, !dbg !5995
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5996 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6000, metadata !DIExpression()), !dbg !6001
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #7, !dbg !6002
  %tobool = icmp eq i8 %call, 0, !dbg !6002
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6002

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !6002
  br label %cond.end, !dbg !6002

cond.end:                                         ; preds = %entry, %cond.true
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !6003
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6003
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6003
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6003

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6003
  br label %cond.end5, !dbg !6003

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !6003
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !6003
  ret %struct.edge_def* %call7, !dbg !6004
}

declare dso_local void @free_EXPR_LIST_list(%struct.rtx_def**) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @eliminate_implied_condition(i32 %op, %struct.rtx_def* %a, %struct.rtx_def** %b) unnamed_addr #4 !dbg !6005 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !6009, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata %struct.rtx_def* %a, metadata !6010, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata %struct.rtx_def** %b, metadata !6011, metadata !DIExpression()), !dbg !6012
  switch i32 %op, label %sw.default [
    i32 61, label %sw.bb
    i32 62, label %sw.bb1
  ], !dbg !6013

sw.bb:                                            ; preds = %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** %b, align 8, !dbg !6014
  %call = tail call fastcc zeroext i8 @implies_p(%struct.rtx_def* %a, %struct.rtx_def* %0) #7, !dbg !6017
  %tobool = icmp eq i8 %call, 0, !dbg !6017
  br i1 %tobool, label %sw.epilog, label %if.then, !dbg !6018

if.then:                                          ; preds = %sw.bb
  %1 = load i64, i64* bitcast (%struct.rtx_def** @const_true_rtx to i64*), align 8, !dbg !6019
  %2 = bitcast %struct.rtx_def** %b to i64*, !dbg !6020
  store i64 %1, i64* %2, align 8, !dbg !6020
  br label %sw.epilog, !dbg !6021

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %b, align 8, !dbg !6022
  %call2 = tail call fastcc zeroext i8 @implies_p(%struct.rtx_def* %3, %struct.rtx_def* %a) #7, !dbg !6024
  %tobool3 = icmp eq i8 %call2, 0, !dbg !6024
  br i1 %tobool3, label %sw.epilog, label %if.then4, !dbg !6025

if.then4:                                         ; preds = %sw.bb1
  %4 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !6026
  %5 = bitcast %struct.rtx_def** %b to i64*, !dbg !6027
  store i64 %4, i64* %5, align 8, !dbg !6027
  br label %sw.epilog, !dbg !6028

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1800, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !6029
  br label %sw.epilog, !dbg !6030

sw.epilog:                                        ; preds = %sw.bb, %sw.bb1, %if.then4, %if.then, %sw.default
  ret void, !dbg !6031
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @simple_rhs_p(%struct.rtx_def* %rhs) unnamed_addr #4 !dbg !6032 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rhs, metadata !6034, metadata !DIExpression()), !dbg !6037
  %call = tail call i32 @function_invariant_p(%struct.rtx_def* %rhs) #6, !dbg !6038
  %tobool = icmp eq i32 %call, 0, !dbg !6038
  br i1 %tobool, label %lor.lhs.false, label %cleanup, !dbg !6040

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 0, !dbg !6041
  %bf.load = load i32, i32* %0, align 8, !dbg !6041
  %bf.clear = and i32 %bf.load, 65535, !dbg !6041
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !6041
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6042

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call1 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %rhs) #7, !dbg !6043
  %cmp2 = icmp ult i32 %call1, 53, !dbg !6043
  br i1 %cmp2, label %land.lhs.true.if.end_crit_edge, label %cleanup, !dbg !6044

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  %bf.load3.pre = load i32, i32* %0, align 8, !dbg !6045
  br label %if.end, !dbg !6044

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %lor.lhs.false
  %bf.load3 = phi i32 [ %bf.load3.pre, %land.lhs.true.if.end_crit_edge ], [ %bf.load, %lor.lhs.false ], !dbg !6045
  %trunc = trunc i32 %bf.load3 to i16, !dbg !6046
  switch i16 %trunc, label %cleanup [
    i16 49, label %sw.bb
    i16 50, label %sw.bb
    i16 61, label %sw.bb
    i16 65, label %sw.bb31
    i16 67, label %sw.bb31
    i16 68, label %sw.bb31
    i16 52, label %sw.bb31
  ], !dbg !6046

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6047
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6047
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6047
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !6035, metadata !DIExpression()), !dbg !6037
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6049
  %rt_rtx8 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !6049
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !6049
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !6036, metadata !DIExpression()), !dbg !6037
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !6050
  %bf.load9 = load i32, i32* %4, align 8, !dbg !6050
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !6050
  %cmp11 = icmp eq i32 %bf.clear10, 37, !dbg !6050
  br i1 %cmp11, label %land.lhs.true12, label %land.lhs.true15, !dbg !6052

land.lhs.true12:                                  ; preds = %sw.bb
  %call13 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !6053
  %cmp14 = icmp ult i32 %call13, 53, !dbg !6053
  br i1 %cmp14, label %land.lhs.true15, label %if.end19, !dbg !6054

land.lhs.true15:                                  ; preds = %land.lhs.true12, %sw.bb
  %call16 = tail call i32 @function_invariant_p(%struct.rtx_def* %1) #6, !dbg !6055
  %tobool17 = icmp eq i32 %call16, 0, !dbg !6055
  br i1 %tobool17, label %cleanup, label %if.end19, !dbg !6056

if.end19:                                         ; preds = %land.lhs.true15, %land.lhs.true12
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !6057
  %bf.load20 = load i32, i32* %5, align 8, !dbg !6057
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !6057
  %cmp22 = icmp eq i32 %bf.clear21, 37, !dbg !6057
  br i1 %cmp22, label %land.lhs.true23, label %land.lhs.true26, !dbg !6059

land.lhs.true23:                                  ; preds = %if.end19
  %call24 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #7, !dbg !6060
  %cmp25 = icmp ult i32 %call24, 53, !dbg !6060
  br i1 %cmp25, label %land.lhs.true26, label %if.end30, !dbg !6061

land.lhs.true26:                                  ; preds = %land.lhs.true23, %if.end19
  %call27 = tail call i32 @function_invariant_p(%struct.rtx_def* %3) #6, !dbg !6062
  %tobool28 = icmp eq i32 %call27, 0, !dbg !6062
  br i1 %tobool28, label %cleanup, label %if.end30, !dbg !6063

if.end30:                                         ; preds = %land.lhs.true26, %land.lhs.true23
  br label %cleanup, !dbg !6064

sw.bb31:                                          ; preds = %if.end, %if.end, %if.end, %if.end
  %arrayidx34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6065
  %rt_rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !6065
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx35, align 8, !dbg !6065
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !6035, metadata !DIExpression()), !dbg !6037
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6066
  %rt_rtx39 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !6066
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !6066
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !6036, metadata !DIExpression()), !dbg !6037
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !6067
  %bf.load40 = load i32, i32* %9, align 8, !dbg !6067
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !6067
  %cmp42 = icmp eq i32 %bf.clear41, 37, !dbg !6067
  br i1 %cmp42, label %land.lhs.true43, label %cleanup, !dbg !6069

land.lhs.true43:                                  ; preds = %sw.bb31
  %call44 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %6) #7, !dbg !6070
  %cmp45 = icmp ult i32 %call44, 53, !dbg !6070
  br i1 %cmp45, label %cleanup, label %if.end47, !dbg !6071

if.end47:                                         ; preds = %land.lhs.true43
  %call48 = tail call i32 @function_invariant_p(%struct.rtx_def* %8) #6, !dbg !6072
  %tobool49 = icmp ne i32 %call48, 0, !dbg !6072
  %. = zext i1 %tobool49 to i8, !dbg !6074
  br label %cleanup, !dbg !6074

cleanup:                                          ; preds = %land.lhs.true26, %land.lhs.true15, %entry, %if.end, %if.end47, %sw.bb31, %land.lhs.true43, %land.lhs.true, %if.end30
  %retval.0 = phi i8 [ 1, %if.end30 ], [ 1, %land.lhs.true ], [ 1, %entry ], [ 0, %land.lhs.true15 ], [ 0, %land.lhs.true26 ], [ 0, %land.lhs.true43 ], [ 0, %sw.bb31 ], [ %., %if.end47 ], [ 0, %if.end ], !dbg !6037
  ret i8 %retval.0, !dbg !6075
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1760, !1761, !1762}
!llvm.ident = !{!1763}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "current_loop", scope: !2, file: !3, line: 108, type: !987, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !561, globals: !1750, nameTableKind: None)
!3 = !DIFile(filename: "loop-iv.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !143, !147, !153, !158, !163, !182, !189, !196, !390, !533, !555}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !135, line: 31, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142}
!137 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !135, line: 91, baseType: !7, size: 32, elements: !144)
!144 = !{!145, !146}
!145 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!146 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !148, line: 363, baseType: !7, size: 32, elements: !149)
!148 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!149 = !{!150, !151, !152}
!150 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!151 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!152 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !148, line: 355, baseType: !7, size: 32, elements: !154)
!154 = !{!155, !156, !157}
!155 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!158 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !159, line: 474, baseType: !7, size: 32, elements: !160)
!159 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!160 = !{!161, !162}
!161 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!162 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !164, line: 280, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!165 = !{!166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181}
!166 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !164, line: 1817, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188}
!184 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !164, line: 1805, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !164, line: 39, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389}
!198 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!203 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!204 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!205 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!206 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!207 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!208 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!209 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!210 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!213 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!214 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!215 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!216 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!217 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!218 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!219 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!220 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!221 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!222 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!223 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!224 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!225 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!226 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!227 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!228 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!229 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!230 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!231 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!232 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!233 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!234 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!235 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!236 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!237 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!238 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!239 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!240 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!241 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!242 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!243 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!244 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!245 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!246 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!247 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!248 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!249 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!250 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!251 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!252 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!253 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!254 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!255 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!256 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!257 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!258 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!259 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!260 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!261 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!262 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!263 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!264 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!265 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!266 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!267 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!268 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!269 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!270 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!271 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!272 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!273 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!274 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!275 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!276 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!277 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!278 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!279 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!280 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!281 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!282 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!283 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!284 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!285 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!286 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!287 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!288 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!289 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!290 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!291 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!292 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!293 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!294 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!295 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!296 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!297 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!298 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!299 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!300 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!301 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!302 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!303 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!304 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!305 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!306 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!307 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!308 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!309 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!310 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!311 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!312 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!313 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!314 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!315 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!316 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!317 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!318 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!320 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!321 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!322 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!323 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!324 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!325 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!326 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!327 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!328 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!329 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!330 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!331 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!332 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!333 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!334 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!335 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!336 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!337 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!338 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!339 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!340 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!341 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!342 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!343 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!344 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!345 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!346 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!347 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!348 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!349 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!350 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!362 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!363 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!364 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!365 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!366 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!367 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!383 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!384 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!385 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!386 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!387 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!388 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!389 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !391, line: 45, baseType: !7, size: 32, elements: !392)
!391 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532}
!393 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!397 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!398 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!399 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!400 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!401 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!402 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!403 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!404 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!405 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!406 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!407 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!408 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!409 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!410 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!411 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!412 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!413 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!414 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!415 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!416 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!417 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!418 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!419 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!420 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!421 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!422 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!423 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!424 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!425 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!426 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!427 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!428 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!429 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!430 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!431 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!432 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!433 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!434 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!435 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!436 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!437 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!438 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!439 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!440 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!441 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!442 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!443 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!444 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!445 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!446 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!447 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!448 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!449 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!450 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!451 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!452 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!453 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!454 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!455 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!456 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!457 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!458 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!459 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!460 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!461 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!462 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!463 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!464 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!465 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!466 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!467 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!468 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!469 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!470 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!471 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!472 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!473 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!474 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!475 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!476 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!477 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!478 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!479 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!480 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!481 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!482 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!483 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!484 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!485 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!486 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!487 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!488 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!489 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!490 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!491 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!492 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!493 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!494 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!495 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!496 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!497 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!498 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!499 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!500 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!501 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!502 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!503 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!504 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!505 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!506 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!507 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!508 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!509 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!510 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!511 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!512 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!513 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!514 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!515 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!516 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!517 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!518 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!519 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!520 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!521 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!522 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!523 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!524 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!525 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!526 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!527 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!528 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!529 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!530 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!531 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!532 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!533 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !534, line: 36, baseType: !7, size: 32, elements: !535)
!534 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!535 = !{!536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554}
!536 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!537 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!538 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!539 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!540 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!541 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!542 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!543 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!544 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!545 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!546 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!547 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!548 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!549 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!550 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!551 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!552 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!553 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!554 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!555 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "iv_grd_result", file: !3, line: 69, baseType: !7, size: 32, elements: !556)
!556 = !{!557, !558, !559, !560}
!557 = !DIEnumerator(name: "GRD_INVALID", value: 0, isUnsigned: true)
!558 = !DIEnumerator(name: "GRD_INVARIANT", value: 1, isUnsigned: true)
!559 = !DIEnumerator(name: "GRD_MAYBE_BIV", value: 2, isUnsigned: true)
!560 = !DIEnumerator(name: "GRD_SINGLE_DOM", value: 3, isUnsigned: true)
!561 = !{!562, !563, !564, !565, !568, !569, !571, !634, !390, !5, !533, !1700, !589, !606, !1701, !1716, !1732, !1735, !1736, !1737, !1746, !1747, !1749}
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!564 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !567)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !572, line: 47, baseType: !573)
!572 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !575, line: 75, size: 256, elements: !576)
!575 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!576 = !{!577, !592, !593, !594}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !574, file: !575, line: 76, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !575, line: 68, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !575, line: 63, size: 320, elements: !581)
!581 = !{!582, !584, !585, !586}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !580, file: !575, line: 64, baseType: !583, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !580, file: !575, line: 65, baseType: !583, size: 64, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !580, file: !575, line: 66, baseType: !7, size: 32, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !580, file: !575, line: 67, baseType: !587, size: 128, offset: 192)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 128, elements: !590)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !575, line: 29, baseType: !589)
!589 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!590 = !{!591}
!591 = !DISubrange(count: 2)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !574, file: !575, line: 77, baseType: !578, size: 64, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !574, file: !575, line: 78, baseType: !7, size: 32, offset: 128)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !574, file: !575, line: 79, baseType: !595, size: 64, offset: 192)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !575, line: 49, baseType: !597)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !575, line: 45, size: 832, elements: !598)
!598 = !{!599, !600, !601}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !597, file: !575, line: 46, baseType: !583, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !597, file: !575, line: 47, baseType: !573, size: 64, offset: 64)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !597, file: !575, line: 48, baseType: !602, size: 704, offset: 128)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !603, line: 164, size: 704, elements: !604)
!603 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!604 = !{!605, !607, !617, !618, !619, !620, !621, !622, !626, !630, !631, !632, !633}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !602, file: !603, line: 166, baseType: !606, size: 64)
!606 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !602, file: !603, line: 167, baseType: !608, size: 64, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !603, line: 157, size: 192, elements: !610)
!610 = !{!611, !612, !613}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !609, file: !603, line: 159, baseType: !566, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !609, file: !603, line: 160, baseType: !608, size: 64, offset: 64)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !609, file: !603, line: 161, baseType: !614, size: 32, offset: 128)
!614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 32, elements: !615)
!615 = !{!616}
!616 = !DISubrange(count: 4)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !602, file: !603, line: 168, baseType: !566, size: 64, offset: 128)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !602, file: !603, line: 169, baseType: !566, size: 64, offset: 192)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !602, file: !603, line: 170, baseType: !566, size: 64, offset: 256)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !602, file: !603, line: 171, baseType: !606, size: 64, offset: 320)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !602, file: !603, line: 172, baseType: !564, size: 32, offset: 384)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !602, file: !603, line: 176, baseType: !623, size: 64, offset: 448)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DISubroutineType(types: !625)
!625 = !{!608, !568, !606}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !602, file: !603, line: 177, baseType: !627, size: 64, offset: 512)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DISubroutineType(types: !629)
!629 = !{null, !568, !608}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !602, file: !603, line: 178, baseType: !568, size: 64, offset: 576)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !602, file: !603, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !602, file: !603, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !602, file: !603, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !572, line: 50, baseType: !635)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !391, line: 240, size: 384, elements: !637)
!637 = !{!638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !636, file: !391, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !636, file: !391, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !636, file: !391, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !636, file: !391, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !636, file: !391, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !636, file: !391, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !636, file: !391, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !636, file: !391, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !636, file: !391, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !636, file: !391, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !636, file: !391, line: 321, baseType: !649, size: 320, offset: 64)
!649 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !391, line: 315, size: 320, elements: !650)
!650 = !{!651, !1635, !1637, !1698, !1699}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !649, file: !391, line: 316, baseType: !652, size: 64)
!652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !653, size: 64, elements: !668)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !391, line: 183, baseType: !654)
!654 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !391, line: 166, size: 64, elements: !655)
!655 = !{!656, !657, !658, !659, !660, !670, !671, !683, !686, !687, !1613, !1614, !1625, !1632}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !654, file: !391, line: 168, baseType: !564, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !654, file: !391, line: 169, baseType: !7, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !654, file: !391, line: 170, baseType: !569, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !654, file: !391, line: 171, baseType: !634, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !654, file: !391, line: 172, baseType: !661, size: 64)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !572, line: 53, baseType: !662)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !391, line: 359, size: 128, elements: !664)
!664 = !{!665, !666}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !663, file: !391, line: 360, baseType: !564, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !663, file: !391, line: 361, baseType: !667, size: 64, offset: 64)
!667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, size: 64, elements: !668)
!668 = !{!669}
!669 = !DISubrange(count: 1)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !654, file: !391, line: 173, baseType: !5, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !654, file: !391, line: 174, baseType: !672, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !391, line: 133, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !391, line: 115, size: 32, elements: !674)
!674 = !{!675, !676, !677, !678, !679, !680, !681, !682}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !673, file: !391, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !673, file: !391, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !673, file: !391, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !673, file: !391, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !673, file: !391, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !673, file: !391, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !673, file: !391, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !673, file: !391, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !654, file: !391, line: 175, baseType: !684, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !391, line: 175, flags: DIFlagFwdDecl)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !654, file: !391, line: 176, baseType: !573, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !654, file: !391, line: 177, baseType: !688, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !572, line: 56, baseType: !689)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !164, line: 3371, size: 1792, elements: !691)
!691 = !{!692, !725, !731, !742, !761, !772, !777, !784, !790, !803, !815, !853, !858, !886, !894, !895, !900, !909, !915, !920, !924, !928, !1240, !1289, !1295, !1302, !1309, !1332, !1357, !1374, !1386, !1408, !1423, !1595}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !690, file: !164, line: 3372, baseType: !693, size: 64)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !164, line: 360, size: 64, elements: !694)
!694 = !{!695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !693, file: !164, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !693, file: !164, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !693, file: !164, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !693, file: !164, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !693, file: !164, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !693, file: !164, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !693, file: !164, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !693, file: !164, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !693, file: !164, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !693, file: !164, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !693, file: !164, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !693, file: !164, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !693, file: !164, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !693, file: !164, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !693, file: !164, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !693, file: !164, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !693, file: !164, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !693, file: !164, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !693, file: !164, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !693, file: !164, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !693, file: !164, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !693, file: !164, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !693, file: !164, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !693, file: !164, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !693, file: !164, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !693, file: !164, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !693, file: !164, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !693, file: !164, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !693, file: !164, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !693, file: !164, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !690, file: !164, line: 3373, baseType: !726, size: 192)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !164, line: 402, size: 192, elements: !727)
!727 = !{!728, !729, !730}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !726, file: !164, line: 403, baseType: !693, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !726, file: !164, line: 404, baseType: !688, size: 64, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !726, file: !164, line: 405, baseType: !688, size: 64, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !690, file: !164, line: 3374, baseType: !732, size: 320)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !164, line: 1384, size: 320, elements: !733)
!733 = !{!734, !735}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !732, file: !164, line: 1385, baseType: !726, size: 192)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !732, file: !164, line: 1386, baseType: !736, size: 128, offset: 192)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !737, line: 58, baseType: !738)
!737 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !737, line: 54, size: 128, elements: !739)
!739 = !{!740, !741}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !738, file: !737, line: 56, baseType: !589, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !738, file: !737, line: 57, baseType: !606, size: 64, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !690, file: !164, line: 3375, baseType: !743, size: 256)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !164, line: 1397, size: 256, elements: !744)
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !743, file: !164, line: 1398, baseType: !726, size: 192)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !743, file: !164, line: 1399, baseType: !747, size: 64, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !749, line: 52, size: 256, elements: !750)
!749 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!750 = !{!751, !752, !753, !754, !755, !756, !757}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !748, file: !749, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !748, file: !749, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !748, file: !749, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !748, file: !749, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !748, file: !749, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !748, file: !749, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !748, file: !749, line: 62, baseType: !758, size: 192, offset: 64)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !589, size: 192, elements: !759)
!759 = !{!760}
!760 = !DISubrange(count: 3)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !690, file: !164, line: 3376, baseType: !762, size: 256)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !164, line: 1408, size: 256, elements: !763)
!763 = !{!764, !765}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !762, file: !164, line: 1409, baseType: !726, size: 192)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !762, file: !164, line: 1410, baseType: !766, size: 64, offset: 192)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !768, line: 27, size: 192, elements: !769)
!768 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!769 = !{!770, !771}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !767, file: !768, line: 29, baseType: !736, size: 128)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !767, file: !768, line: 30, baseType: !5, size: 32, offset: 128)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !690, file: !164, line: 3377, baseType: !773, size: 256)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !164, line: 1437, size: 256, elements: !774)
!774 = !{!775, !776}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !773, file: !164, line: 1438, baseType: !726, size: 192)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !773, file: !164, line: 1439, baseType: !688, size: 64, offset: 192)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !690, file: !164, line: 3378, baseType: !778, size: 256)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !164, line: 1418, size: 256, elements: !779)
!779 = !{!780, !781, !782}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !778, file: !164, line: 1419, baseType: !726, size: 192)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !778, file: !164, line: 1420, baseType: !564, size: 32, offset: 192)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !778, file: !164, line: 1421, baseType: !783, size: 8, offset: 224)
!783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 8, elements: !668)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !690, file: !164, line: 3379, baseType: !785, size: 320)
!785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !164, line: 1428, size: 320, elements: !786)
!786 = !{!787, !788, !789}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !785, file: !164, line: 1429, baseType: !726, size: 192)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !785, file: !164, line: 1430, baseType: !688, size: 64, offset: 192)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !785, file: !164, line: 1431, baseType: !688, size: 64, offset: 256)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !690, file: !164, line: 3380, baseType: !791, size: 320)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !164, line: 1460, size: 320, elements: !792)
!792 = !{!793, !794}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !791, file: !164, line: 1461, baseType: !726, size: 192)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !791, file: !164, line: 1462, baseType: !795, size: 128, offset: 192)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !796, line: 31, size: 128, elements: !797)
!796 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!797 = !{!798, !801, !802}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !795, file: !796, line: 32, baseType: !799, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !563)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !795, file: !796, line: 33, baseType: !7, size: 32, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !795, file: !796, line: 34, baseType: !7, size: 32, offset: 96)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !690, file: !164, line: 3381, baseType: !804, size: 384)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !164, line: 2507, size: 384, elements: !805)
!805 = !{!806, !807, !812, !813, !814}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !804, file: !164, line: 2508, baseType: !726, size: 192)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !804, file: !164, line: 2509, baseType: !808, size: 32, offset: 192)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !809, line: 58, baseType: !810)
!809 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!810 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !811, line: 44, baseType: !7)
!811 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!812 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !804, file: !164, line: 2510, baseType: !7, size: 32, offset: 224)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !804, file: !164, line: 2511, baseType: !688, size: 64, offset: 256)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !804, file: !164, line: 2512, baseType: !688, size: 64, offset: 320)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !690, file: !164, line: 3382, baseType: !816, size: 896)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !164, line: 2652, size: 896, elements: !817)
!817 = !{!818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !816, file: !164, line: 2653, baseType: !804, size: 384)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !816, file: !164, line: 2654, baseType: !688, size: 64, offset: 384)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !816, file: !164, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !816, file: !164, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !816, file: !164, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !816, file: !164, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !816, file: !164, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !816, file: !164, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !816, file: !164, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !816, file: !164, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !816, file: !164, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !816, file: !164, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !816, file: !164, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !816, file: !164, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !816, file: !164, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !816, file: !164, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !816, file: !164, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !816, file: !164, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !816, file: !164, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !816, file: !164, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !816, file: !164, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !816, file: !164, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !816, file: !164, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !816, file: !164, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !816, file: !164, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !816, file: !164, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !816, file: !164, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !816, file: !164, line: 2703, baseType: !7, size: 32, offset: 512)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !816, file: !164, line: 2705, baseType: !688, size: 64, offset: 576)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !816, file: !164, line: 2706, baseType: !688, size: 64, offset: 640)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !816, file: !164, line: 2707, baseType: !688, size: 64, offset: 704)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !816, file: !164, line: 2708, baseType: !688, size: 64, offset: 768)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !816, file: !164, line: 2711, baseType: !851, size: 64, offset: 832)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !164, line: 2711, flags: DIFlagFwdDecl)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !690, file: !164, line: 3383, baseType: !854, size: 960)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !164, line: 2756, size: 960, elements: !855)
!855 = !{!856, !857}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !854, file: !164, line: 2757, baseType: !816, size: 896)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !854, file: !164, line: 2758, baseType: !634, size: 64, offset: 896)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !690, file: !164, line: 3384, baseType: !859, size: 1472)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !164, line: 3114, size: 1472, elements: !860)
!860 = !{!861, !882, !883, !884, !885}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !859, file: !164, line: 3115, baseType: !862, size: 1216)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !164, line: 2984, size: 1216, elements: !863)
!863 = !{!864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !862, file: !164, line: 2985, baseType: !854, size: 960)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !862, file: !164, line: 2986, baseType: !688, size: 64, offset: 960)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !862, file: !164, line: 2987, baseType: !688, size: 64, offset: 1024)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !862, file: !164, line: 2988, baseType: !688, size: 64, offset: 1088)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !862, file: !164, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !862, file: !164, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !862, file: !164, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !862, file: !164, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !862, file: !164, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !862, file: !164, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !862, file: !164, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !862, file: !164, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !862, file: !164, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !862, file: !164, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !862, file: !164, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !862, file: !164, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !862, file: !164, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !862, file: !164, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !859, file: !164, line: 3117, baseType: !688, size: 64, offset: 1216)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !859, file: !164, line: 3119, baseType: !688, size: 64, offset: 1280)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !859, file: !164, line: 3121, baseType: !688, size: 64, offset: 1344)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !859, file: !164, line: 3123, baseType: !688, size: 64, offset: 1408)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !690, file: !164, line: 3385, baseType: !887, size: 1088)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !164, line: 2874, size: 1088, elements: !888)
!888 = !{!889, !890, !891}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !887, file: !164, line: 2875, baseType: !854, size: 960)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !887, file: !164, line: 2876, baseType: !634, size: 64, offset: 960)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !887, file: !164, line: 2877, baseType: !892, size: 64, offset: 1024)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !164, line: 2856, flags: DIFlagFwdDecl)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !690, file: !164, line: 3386, baseType: !862, size: 1216)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !690, file: !164, line: 3387, baseType: !896, size: 1280)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !164, line: 3093, size: 1280, elements: !897)
!897 = !{!898, !899}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !896, file: !164, line: 3094, baseType: !862, size: 1216)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !896, file: !164, line: 3095, baseType: !892, size: 64, offset: 1216)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !690, file: !164, line: 3388, baseType: !901, size: 1216)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !164, line: 2824, size: 1216, elements: !902)
!902 = !{!903, !904, !905, !906, !907, !908}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !901, file: !164, line: 2825, baseType: !816, size: 896)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !901, file: !164, line: 2827, baseType: !688, size: 64, offset: 896)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !901, file: !164, line: 2828, baseType: !688, size: 64, offset: 960)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !901, file: !164, line: 2829, baseType: !688, size: 64, offset: 1024)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !901, file: !164, line: 2830, baseType: !688, size: 64, offset: 1088)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !901, file: !164, line: 2831, baseType: !688, size: 64, offset: 1152)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !690, file: !164, line: 3389, baseType: !910, size: 1024)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !164, line: 2850, size: 1024, elements: !911)
!911 = !{!912, !913, !914}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !910, file: !164, line: 2851, baseType: !854, size: 960)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !910, file: !164, line: 2852, baseType: !564, size: 32, offset: 960)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !910, file: !164, line: 2853, baseType: !564, size: 32, offset: 992)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !690, file: !164, line: 3390, baseType: !916, size: 1024)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !164, line: 2857, size: 1024, elements: !917)
!917 = !{!918, !919}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !916, file: !164, line: 2858, baseType: !854, size: 960)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !916, file: !164, line: 2859, baseType: !892, size: 64, offset: 960)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !690, file: !164, line: 3391, baseType: !921, size: 960)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !164, line: 2862, size: 960, elements: !922)
!922 = !{!923}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !921, file: !164, line: 2863, baseType: !854, size: 960)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !690, file: !164, line: 3392, baseType: !925, size: 1472)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !164, line: 3304, size: 1472, elements: !926)
!926 = !{!927}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !925, file: !164, line: 3305, baseType: !859, size: 1472)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !690, file: !164, line: 3393, baseType: !929, size: 1792)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !164, line: 3248, size: 1792, elements: !930)
!930 = !{!931, !932, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !929, file: !164, line: 3249, baseType: !859, size: 1472)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !929, file: !164, line: 3251, baseType: !933, size: 64, offset: 1472)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !935, line: 463, size: 1152, elements: !936)
!935 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!936 = !{!937, !940, !1100, !1101, !1104, !1163, !1164, !1165, !1166, !1167, !1168, !1192, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !934, file: !935, line: 464, baseType: !938, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !935, line: 464, flags: DIFlagFwdDecl)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !934, file: !935, line: 467, baseType: !941, size: 64, offset: 64)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !148, line: 374, size: 640, elements: !943)
!943 = !{!944, !1075, !1076, !1089, !1090, !1091, !1092, !1093, !1094, !1096, !1098, !1099}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !942, file: !148, line: 377, baseType: !945, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !572, line: 111, baseType: !946)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !148, line: 217, size: 832, elements: !948)
!948 = !{!949, !984, !985, !986, !1045, !1049, !1050, !1051, !1069, !1070, !1071, !1072, !1073, !1074}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !947, file: !148, line: 219, baseType: !950, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !148, line: 151, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !148, line: 151, size: 128, elements: !953)
!953 = !{!954}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !952, file: !148, line: 151, baseType: !955, size: 128)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !148, line: 150, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !148, line: 150, size: 128, elements: !957)
!957 = !{!958, !959, !960}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !956, file: !148, line: 150, baseType: !7, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !956, file: !148, line: 150, baseType: !7, size: 32, offset: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !956, file: !148, line: 150, baseType: !961, size: 64, offset: 64)
!961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !962, size: 64, elements: !668)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !572, line: 108, baseType: !963)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !148, line: 122, size: 512, elements: !965)
!965 = !{!966, !967, !968, !976, !977, !978, !979, !980, !981, !982}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !964, file: !148, line: 124, baseType: !946, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !964, file: !148, line: 125, baseType: !946, size: 64, offset: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !964, file: !148, line: 131, baseType: !969, size: 64, offset: 128)
!969 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !148, line: 128, size: 64, elements: !970)
!970 = !{!971, !975}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !969, file: !148, line: 129, baseType: !972, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !572, line: 66, baseType: !973)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !572, line: 65, flags: DIFlagFwdDecl)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !969, file: !148, line: 130, baseType: !634, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !964, file: !148, line: 134, baseType: !568, size: 64, offset: 192)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !964, file: !148, line: 137, baseType: !688, size: 64, offset: 256)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !964, file: !148, line: 138, baseType: !808, size: 32, offset: 320)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !964, file: !148, line: 142, baseType: !7, size: 32, offset: 352)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !964, file: !148, line: 144, baseType: !564, size: 32, offset: 384)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !964, file: !148, line: 145, baseType: !564, size: 32, offset: 416)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !964, file: !148, line: 146, baseType: !983, size: 64, offset: 448)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !148, line: 119, baseType: !606)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !947, file: !148, line: 220, baseType: !950, size: 64, offset: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !947, file: !148, line: 223, baseType: !568, size: 64, offset: 128)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !947, file: !148, line: 226, baseType: !987, size: 64, offset: 192)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !135, line: 100, size: 1216, elements: !989)
!989 = !{!990, !991, !992, !993, !994, !999, !1000, !1001, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1035, !1043, !1044}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !988, file: !135, line: 102, baseType: !564, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !988, file: !135, line: 105, baseType: !7, size: 32, offset: 32)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !988, file: !135, line: 108, baseType: !946, size: 64, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !988, file: !135, line: 111, baseType: !946, size: 64, offset: 128)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !988, file: !135, line: 114, baseType: !995, size: 64, offset: 192)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !135, line: 41, size: 64, elements: !996)
!996 = !{!997, !998}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !995, file: !135, line: 42, baseType: !134, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !995, file: !135, line: 43, baseType: !7, size: 32, offset: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !988, file: !135, line: 117, baseType: !7, size: 32, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !988, file: !135, line: 120, baseType: !7, size: 32, offset: 288)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !988, file: !135, line: 123, baseType: !1002, size: 64, offset: 320)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !135, line: 87, baseType: !1004)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !135, line: 87, size: 128, elements: !1005)
!1005 = !{!1006}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1004, file: !135, line: 87, baseType: !1007, size: 128)
!1007 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !135, line: 85, baseType: !1008)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !135, line: 85, size: 128, elements: !1009)
!1009 = !{!1010, !1011, !1012}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1008, file: !135, line: 85, baseType: !7, size: 32)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1008, file: !135, line: 85, baseType: !7, size: 32, offset: 32)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1008, file: !135, line: 85, baseType: !1013, size: 64, offset: 64)
!1013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1014, size: 64, elements: !668)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !135, line: 84, baseType: !987)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !988, file: !135, line: 126, baseType: !987, size: 64, offset: 384)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !988, file: !135, line: 129, baseType: !987, size: 64, offset: 448)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !988, file: !135, line: 132, baseType: !568, size: 64, offset: 512)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !988, file: !135, line: 139, baseType: !688, size: 64, offset: 576)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !988, file: !135, line: 143, baseType: !736, size: 128, offset: 640)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !988, file: !135, line: 146, baseType: !736, size: 128, offset: 768)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !988, file: !135, line: 148, baseType: !563, size: 8, offset: 896)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !988, file: !135, line: 149, baseType: !563, size: 8, offset: 904)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !988, file: !135, line: 153, baseType: !143, size: 32, offset: 928)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !988, file: !135, line: 156, baseType: !1025, size: 64, offset: 960)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !135, line: 48, size: 320, elements: !1027)
!1027 = !{!1028, !1032, !1033, !1034}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1026, file: !135, line: 50, baseType: !1029, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !572, line: 58, baseType: !1030)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !572, line: 57, flags: DIFlagFwdDecl)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1026, file: !135, line: 59, baseType: !736, size: 128, offset: 64)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1026, file: !135, line: 64, baseType: !563, size: 8, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1026, file: !135, line: 67, baseType: !1025, size: 64, offset: 256)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !988, file: !135, line: 159, baseType: !1036, size: 64, offset: 1024)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !135, line: 72, size: 256, elements: !1038)
!1038 = !{!1039, !1040, !1041, !1042}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1037, file: !135, line: 74, baseType: !963, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1037, file: !135, line: 77, baseType: !1036, size: 64, offset: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1037, file: !135, line: 78, baseType: !1036, size: 64, offset: 128)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1037, file: !135, line: 81, baseType: !1036, size: 64, offset: 192)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !988, file: !135, line: 162, baseType: !563, size: 8, offset: 1088)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !988, file: !135, line: 166, baseType: !688, size: 64, offset: 1152)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !947, file: !148, line: 229, baseType: !1046, size: 128, offset: 256)
!1046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1047, size: 128, elements: !590)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !148, line: 229, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !947, file: !148, line: 232, baseType: !946, size: 64, offset: 384)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !947, file: !148, line: 233, baseType: !946, size: 64, offset: 448)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !947, file: !148, line: 238, baseType: !1052, size: 64, offset: 512)
!1052 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !148, line: 235, size: 64, elements: !1053)
!1053 = !{!1054, !1060}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1052, file: !148, line: 236, baseType: !1055, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !148, line: 273, size: 128, elements: !1057)
!1057 = !{!1058, !1059}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1056, file: !148, line: 275, baseType: !972, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1056, file: !148, line: 278, baseType: !972, size: 64, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1052, file: !148, line: 237, baseType: !1061, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !148, line: 259, size: 320, elements: !1063)
!1063 = !{!1064, !1065, !1066, !1067, !1068}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1062, file: !148, line: 261, baseType: !634, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1062, file: !148, line: 262, baseType: !634, size: 64, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1062, file: !148, line: 266, baseType: !634, size: 64, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1062, file: !148, line: 267, baseType: !634, size: 64, offset: 192)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1062, file: !148, line: 270, baseType: !564, size: 32, offset: 256)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !947, file: !148, line: 241, baseType: !983, size: 64, offset: 576)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !947, file: !148, line: 244, baseType: !564, size: 32, offset: 640)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !947, file: !148, line: 247, baseType: !564, size: 32, offset: 672)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !947, file: !148, line: 250, baseType: !564, size: 32, offset: 704)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !947, file: !148, line: 253, baseType: !564, size: 32, offset: 736)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !947, file: !148, line: 256, baseType: !564, size: 32, offset: 768)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !942, file: !148, line: 378, baseType: !945, size: 64, offset: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !942, file: !148, line: 381, baseType: !1077, size: 64, offset: 128)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !148, line: 282, baseType: !1079)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !148, line: 282, size: 128, elements: !1080)
!1080 = !{!1081}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1079, file: !148, line: 282, baseType: !1082, size: 128)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !148, line: 281, baseType: !1083)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !148, line: 281, size: 128, elements: !1084)
!1084 = !{!1085, !1086, !1087}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1083, file: !148, line: 281, baseType: !7, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1083, file: !148, line: 281, baseType: !7, size: 32, offset: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1083, file: !148, line: 281, baseType: !1088, size: 64, offset: 64)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !945, size: 64, elements: !668)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !942, file: !148, line: 384, baseType: !564, size: 32, offset: 192)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !942, file: !148, line: 387, baseType: !564, size: 32, offset: 224)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !942, file: !148, line: 390, baseType: !564, size: 32, offset: 256)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !942, file: !148, line: 394, baseType: !1077, size: 64, offset: 320)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !942, file: !148, line: 396, baseType: !147, size: 32, offset: 384)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !942, file: !148, line: 399, baseType: !1095, size: 64, offset: 416)
!1095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 64, elements: !590)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !942, file: !148, line: 402, baseType: !1097, size: 64, offset: 480)
!1097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !590)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !942, file: !148, line: 406, baseType: !564, size: 32, offset: 544)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !942, file: !148, line: 409, baseType: !564, size: 32, offset: 576)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !934, file: !935, line: 470, baseType: !973, size: 64, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !934, file: !935, line: 473, baseType: !1102, size: 64, offset: 192)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !935, line: 166, flags: DIFlagFwdDecl)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !934, file: !935, line: 476, baseType: !1105, size: 64, offset: 256)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !135, line: 187, size: 256, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1162}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1106, file: !135, line: 189, baseType: !564, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1106, file: !135, line: 192, baseType: !1002, size: 64, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1106, file: !135, line: 197, baseType: !1111, size: 64, offset: 128)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1112, line: 144, baseType: !1113)
!1112 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1112, line: 100, size: 896, elements: !1115)
!1115 = !{!1116, !1124, !1129, !1134, !1136, !1139, !1140, !1141, !1142, !1143, !1148, !1150, !1151, !1156, !1161}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1114, file: !1112, line: 102, baseType: !1117, size: 64)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1112, line: 52, baseType: !1118)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!1121, !1122}
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1112, line: 47, baseType: !7)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1114, file: !1112, line: 105, baseType: !1125, size: 64, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1112, line: 59, baseType: !1126)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!564, !1122, !1122}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1114, file: !1112, line: 108, baseType: !1130, size: 64, offset: 128)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1112, line: 63, baseType: !1131)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{null, !568}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1114, file: !1112, line: 111, baseType: !1135, size: 64, offset: 192)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1114, file: !1112, line: 114, baseType: !1137, size: 64, offset: 256)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1138, line: 46, baseType: !589)
!1138 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1114, file: !1112, line: 117, baseType: !1137, size: 64, offset: 320)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1114, file: !1112, line: 120, baseType: !1137, size: 64, offset: 384)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1114, file: !1112, line: 124, baseType: !7, size: 32, offset: 448)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1114, file: !1112, line: 128, baseType: !7, size: 32, offset: 480)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1114, file: !1112, line: 131, baseType: !1144, size: 64, offset: 512)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1112, line: 75, baseType: !1145)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!568, !1137, !1137}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1114, file: !1112, line: 132, baseType: !1149, size: 64, offset: 576)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1112, line: 78, baseType: !1131)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1114, file: !1112, line: 135, baseType: !568, size: 64, offset: 640)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1114, file: !1112, line: 136, baseType: !1152, size: 64, offset: 704)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1112, line: 82, baseType: !1153)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!568, !568, !1137, !1137}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1114, file: !1112, line: 137, baseType: !1157, size: 64, offset: 768)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1112, line: 83, baseType: !1158)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{null, !568, !568}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1114, file: !1112, line: 141, baseType: !7, size: 32, offset: 832)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1106, file: !135, line: 200, baseType: !987, size: 64, offset: 192)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !934, file: !935, line: 479, baseType: !1111, size: 64, offset: 320)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !934, file: !935, line: 484, baseType: !688, size: 64, offset: 384)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !934, file: !935, line: 488, baseType: !688, size: 64, offset: 448)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !934, file: !935, line: 493, baseType: !688, size: 64, offset: 512)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !934, file: !935, line: 496, baseType: !688, size: 64, offset: 576)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !934, file: !935, line: 501, baseType: !1169, size: 64, offset: 640)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !159, line: 2355, size: 576, elements: !1171)
!1171 = !{!1172, !1175, !1176, !1177, !1178, !1180, !1181, !1186, !1187, !1188, !1189, !1190, !1191}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1170, file: !159, line: 2356, baseType: !1173, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !159, line: 2356, flags: DIFlagFwdDecl)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1170, file: !159, line: 2357, baseType: !569, size: 64, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1170, file: !159, line: 2358, baseType: !564, size: 32, offset: 128)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1170, file: !159, line: 2359, baseType: !564, size: 32, offset: 160)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1170, file: !159, line: 2360, baseType: !1179, size: 128, offset: 192)
!1179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !564, size: 128, elements: !615)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1170, file: !159, line: 2364, baseType: !564, size: 32, offset: 320)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1170, file: !159, line: 2367, baseType: !1182, size: 128, offset: 384)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !159, line: 2349, size: 128, elements: !1183)
!1183 = !{!1184, !1185}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1182, file: !159, line: 2351, baseType: !634, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1182, file: !159, line: 2352, baseType: !606, size: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1170, file: !159, line: 2371, baseType: !158, size: 32, offset: 512)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1170, file: !159, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1170, file: !159, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1170, file: !159, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1170, file: !159, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1170, file: !159, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !934, file: !935, line: 504, baseType: !1193, size: 64, offset: 704)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1194 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !935, line: 504, flags: DIFlagFwdDecl)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !934, file: !935, line: 507, baseType: !1111, size: 64, offset: 768)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !934, file: !935, line: 510, baseType: !564, size: 32, offset: 832)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !934, file: !935, line: 513, baseType: !564, size: 32, offset: 864)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !934, file: !935, line: 516, baseType: !808, size: 32, offset: 896)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !934, file: !935, line: 519, baseType: !808, size: 32, offset: 928)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !934, file: !935, line: 522, baseType: !7, size: 32, offset: 960)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !934, file: !935, line: 523, baseType: !7, size: 32, offset: 992)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !934, file: !935, line: 528, baseType: !569, size: 64, offset: 1024)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !934, file: !935, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !934, file: !935, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !934, file: !935, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !934, file: !935, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !934, file: !935, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !934, file: !935, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !934, file: !935, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !934, file: !935, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !934, file: !935, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !934, file: !935, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !934, file: !935, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !934, file: !935, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !934, file: !935, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !934, file: !935, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !934, file: !935, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !934, file: !935, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !929, file: !164, line: 3254, baseType: !688, size: 64, offset: 1536)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !929, file: !164, line: 3257, baseType: !688, size: 64, offset: 1600)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !929, file: !164, line: 3258, baseType: !688, size: 64, offset: 1664)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !929, file: !164, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !929, file: !164, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !929, file: !164, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !929, file: !164, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !929, file: !164, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !929, file: !164, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !929, file: !164, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !929, file: !164, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !929, file: !164, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !929, file: !164, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !929, file: !164, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !929, file: !164, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !929, file: !164, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !929, file: !164, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !929, file: !164, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !929, file: !164, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !929, file: !164, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !929, file: !164, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !690, file: !164, line: 3394, baseType: !1241, size: 1344)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !164, line: 2279, size: 1344, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1268, !1269, !1270, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1241, file: !164, line: 2280, baseType: !726, size: 192)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1241, file: !164, line: 2281, baseType: !688, size: 64, offset: 192)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1241, file: !164, line: 2282, baseType: !688, size: 64, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1241, file: !164, line: 2283, baseType: !688, size: 64, offset: 320)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1241, file: !164, line: 2284, baseType: !688, size: 64, offset: 384)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1241, file: !164, line: 2285, baseType: !7, size: 32, offset: 448)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1241, file: !164, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1241, file: !164, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1241, file: !164, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1241, file: !164, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1241, file: !164, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1241, file: !164, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1241, file: !164, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1241, file: !164, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1241, file: !164, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1241, file: !164, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1241, file: !164, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1241, file: !164, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1241, file: !164, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1241, file: !164, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1241, file: !164, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1241, file: !164, line: 2305, baseType: !7, size: 32, offset: 512)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1241, file: !164, line: 2306, baseType: !1266, size: 32, offset: 544)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1267, line: 31, baseType: !564)
!1267 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1241, file: !164, line: 2307, baseType: !688, size: 64, offset: 576)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1241, file: !164, line: 2308, baseType: !688, size: 64, offset: 640)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1241, file: !164, line: 2314, baseType: !1271, size: 64, offset: 704)
!1271 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !164, line: 2309, size: 64, elements: !1272)
!1272 = !{!1273, !1274, !1275}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1271, file: !164, line: 2310, baseType: !564, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1271, file: !164, line: 2311, baseType: !569, size: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1271, file: !164, line: 2312, baseType: !1276, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !164, line: 2277, flags: DIFlagFwdDecl)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1241, file: !164, line: 2315, baseType: !688, size: 64, offset: 768)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1241, file: !164, line: 2316, baseType: !688, size: 64, offset: 832)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1241, file: !164, line: 2317, baseType: !688, size: 64, offset: 896)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1241, file: !164, line: 2318, baseType: !688, size: 64, offset: 960)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1241, file: !164, line: 2319, baseType: !688, size: 64, offset: 1024)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1241, file: !164, line: 2320, baseType: !688, size: 64, offset: 1088)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1241, file: !164, line: 2321, baseType: !688, size: 64, offset: 1152)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1241, file: !164, line: 2322, baseType: !688, size: 64, offset: 1216)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1241, file: !164, line: 2324, baseType: !1287, size: 64, offset: 1280)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !164, line: 2324, flags: DIFlagFwdDecl)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !690, file: !164, line: 3395, baseType: !1290, size: 320)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !164, line: 1469, size: 320, elements: !1291)
!1291 = !{!1292, !1293, !1294}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1290, file: !164, line: 1470, baseType: !726, size: 192)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1290, file: !164, line: 1471, baseType: !688, size: 64, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1290, file: !164, line: 1472, baseType: !688, size: 64, offset: 256)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !690, file: !164, line: 3396, baseType: !1296, size: 320)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !164, line: 1482, size: 320, elements: !1297)
!1297 = !{!1298, !1299, !1300}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1296, file: !164, line: 1483, baseType: !726, size: 192)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1296, file: !164, line: 1484, baseType: !564, size: 32, offset: 192)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1296, file: !164, line: 1485, baseType: !1301, size: 64, offset: 256)
!1301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 64, elements: !668)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !690, file: !164, line: 3397, baseType: !1303, size: 384)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !164, line: 1829, size: 384, elements: !1304)
!1304 = !{!1305, !1306, !1307, !1308}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1303, file: !164, line: 1830, baseType: !726, size: 192)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1303, file: !164, line: 1831, baseType: !808, size: 32, offset: 192)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1303, file: !164, line: 1832, baseType: !688, size: 64, offset: 256)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1303, file: !164, line: 1835, baseType: !1301, size: 64, offset: 320)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !690, file: !164, line: 3398, baseType: !1310, size: 704)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !164, line: 1898, size: 704, elements: !1311)
!1311 = !{!1312, !1313, !1314, !1315, !1316, !1319}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1310, file: !164, line: 1899, baseType: !726, size: 192)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1310, file: !164, line: 1902, baseType: !688, size: 64, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1310, file: !164, line: 1905, baseType: !1029, size: 64, offset: 256)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1310, file: !164, line: 1908, baseType: !7, size: 32, offset: 320)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1310, file: !164, line: 1911, baseType: !1317, size: 64, offset: 384)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !164, line: 1876, flags: DIFlagFwdDecl)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1310, file: !164, line: 1914, baseType: !1320, size: 256, offset: 448)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !164, line: 1883, size: 256, elements: !1321)
!1321 = !{!1322, !1324, !1325, !1330}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1320, file: !164, line: 1884, baseType: !1323, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1320, file: !164, line: 1885, baseType: !1323, size: 64, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1320, file: !164, line: 1891, baseType: !1326, size: 64, offset: 128)
!1326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1320, file: !164, line: 1891, size: 64, elements: !1327)
!1327 = !{!1328, !1329}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1326, file: !164, line: 1891, baseType: !1029, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1326, file: !164, line: 1891, baseType: !688, size: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1320, file: !164, line: 1892, baseType: !1331, size: 64, offset: 192)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !690, file: !164, line: 3399, baseType: !1333, size: 704)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !164, line: 2008, size: 704, elements: !1334)
!1334 = !{!1335, !1336, !1337, !1338, !1339, !1340, !1352, !1353, !1354, !1355, !1356}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1333, file: !164, line: 2009, baseType: !726, size: 192)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1333, file: !164, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1333, file: !164, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1333, file: !164, line: 2014, baseType: !808, size: 32, offset: 224)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1333, file: !164, line: 2016, baseType: !688, size: 64, offset: 256)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1333, file: !164, line: 2017, baseType: !1341, size: 64, offset: 320)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !164, line: 183, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !164, line: 183, size: 128, elements: !1344)
!1344 = !{!1345}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1343, file: !164, line: 183, baseType: !1346, size: 128)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !164, line: 182, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !164, line: 182, size: 128, elements: !1348)
!1348 = !{!1349, !1350, !1351}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1347, file: !164, line: 182, baseType: !7, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1347, file: !164, line: 182, baseType: !7, size: 32, offset: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1347, file: !164, line: 182, baseType: !1301, size: 64, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1333, file: !164, line: 2019, baseType: !688, size: 64, offset: 384)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1333, file: !164, line: 2020, baseType: !688, size: 64, offset: 448)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1333, file: !164, line: 2021, baseType: !688, size: 64, offset: 512)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1333, file: !164, line: 2022, baseType: !688, size: 64, offset: 576)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1333, file: !164, line: 2023, baseType: !688, size: 64, offset: 640)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !690, file: !164, line: 3400, baseType: !1358, size: 832)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !164, line: 2430, size: 832, elements: !1359)
!1359 = !{!1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1358, file: !164, line: 2431, baseType: !726, size: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1358, file: !164, line: 2433, baseType: !688, size: 64, offset: 192)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1358, file: !164, line: 2434, baseType: !688, size: 64, offset: 256)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1358, file: !164, line: 2435, baseType: !688, size: 64, offset: 320)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1358, file: !164, line: 2436, baseType: !688, size: 64, offset: 384)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1358, file: !164, line: 2437, baseType: !1341, size: 64, offset: 448)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1358, file: !164, line: 2438, baseType: !688, size: 64, offset: 512)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1358, file: !164, line: 2440, baseType: !688, size: 64, offset: 576)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1358, file: !164, line: 2441, baseType: !688, size: 64, offset: 640)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1358, file: !164, line: 2443, baseType: !1370, size: 128, offset: 704)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !164, line: 182, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !164, line: 182, size: 128, elements: !1372)
!1372 = !{!1373}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1371, file: !164, line: 182, baseType: !1346, size: 128)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !690, file: !164, line: 3401, baseType: !1375, size: 320)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !164, line: 3327, size: 320, elements: !1376)
!1376 = !{!1377, !1378, !1385}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1375, file: !164, line: 3329, baseType: !726, size: 192)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1375, file: !164, line: 3330, baseType: !1379, size: 64, offset: 192)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !164, line: 3320, size: 192, elements: !1381)
!1381 = !{!1382, !1383, !1384}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1380, file: !164, line: 3322, baseType: !1379, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1380, file: !164, line: 3323, baseType: !1379, size: 64, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1380, file: !164, line: 3324, baseType: !688, size: 64, offset: 128)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1375, file: !164, line: 3331, baseType: !1379, size: 64, offset: 256)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !690, file: !164, line: 3402, baseType: !1387, size: 256)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !164, line: 1540, size: 256, elements: !1388)
!1388 = !{!1389, !1390}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1387, file: !164, line: 1541, baseType: !726, size: 192)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1387, file: !164, line: 1542, baseType: !1391, size: 64, offset: 192)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !164, line: 1538, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !164, line: 1538, size: 192, elements: !1394)
!1394 = !{!1395}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1393, file: !164, line: 1538, baseType: !1396, size: 192)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !164, line: 1537, baseType: !1397)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !164, line: 1537, size: 192, elements: !1398)
!1398 = !{!1399, !1400, !1401}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1397, file: !164, line: 1537, baseType: !7, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1397, file: !164, line: 1537, baseType: !7, size: 32, offset: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1397, file: !164, line: 1537, baseType: !1402, size: 128, offset: 64)
!1402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 128, elements: !668)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !164, line: 1535, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !164, line: 1532, size: 128, elements: !1405)
!1405 = !{!1406, !1407}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1404, file: !164, line: 1533, baseType: !688, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1404, file: !164, line: 1534, baseType: !688, size: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !690, file: !164, line: 3403, baseType: !1409, size: 512)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !164, line: 1938, size: 512, elements: !1410)
!1410 = !{!1411, !1412, !1413, !1414, !1420, !1421, !1422}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1409, file: !164, line: 1939, baseType: !726, size: 192)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1409, file: !164, line: 1940, baseType: !808, size: 32, offset: 192)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1409, file: !164, line: 1941, baseType: !163, size: 32, offset: 224)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1409, file: !164, line: 1946, baseType: !1415, size: 32, offset: 256)
!1415 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !164, line: 1942, size: 32, elements: !1416)
!1416 = !{!1417, !1418, !1419}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1415, file: !164, line: 1943, baseType: !182, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1415, file: !164, line: 1944, baseType: !189, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1415, file: !164, line: 1945, baseType: !196, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1409, file: !164, line: 1950, baseType: !972, size: 64, offset: 320)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1409, file: !164, line: 1951, baseType: !972, size: 64, offset: 384)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1409, file: !164, line: 1953, baseType: !1301, size: 64, offset: 448)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !690, file: !164, line: 3404, baseType: !1424, size: 1664)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !164, line: 3337, size: 1664, elements: !1425)
!1425 = !{!1426, !1427}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1424, file: !164, line: 3338, baseType: !726, size: 192)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1424, file: !164, line: 3341, baseType: !1428, size: 1472, offset: 192)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1429, line: 410, size: 1472, elements: !1430)
!1429 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1430 = !{!1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1428, file: !1429, line: 412, baseType: !564, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1428, file: !1429, line: 413, baseType: !564, size: 32, offset: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1428, file: !1429, line: 414, baseType: !564, size: 32, offset: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1428, file: !1429, line: 415, baseType: !564, size: 32, offset: 96)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1428, file: !1429, line: 416, baseType: !564, size: 32, offset: 128)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1428, file: !1429, line: 417, baseType: !564, size: 32, offset: 160)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1428, file: !1429, line: 418, baseType: !563, size: 8, offset: 192)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1428, file: !1429, line: 419, baseType: !563, size: 8, offset: 200)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1428, file: !1429, line: 420, baseType: !1440, size: 8, offset: 208)
!1440 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1428, file: !1429, line: 421, baseType: !1440, size: 8, offset: 216)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1428, file: !1429, line: 422, baseType: !1440, size: 8, offset: 224)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1428, file: !1429, line: 423, baseType: !1440, size: 8, offset: 232)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1428, file: !1429, line: 424, baseType: !1440, size: 8, offset: 240)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1428, file: !1429, line: 425, baseType: !1440, size: 8, offset: 248)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1428, file: !1429, line: 426, baseType: !1440, size: 8, offset: 256)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1428, file: !1429, line: 427, baseType: !1440, size: 8, offset: 264)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1428, file: !1429, line: 428, baseType: !1440, size: 8, offset: 272)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1428, file: !1429, line: 429, baseType: !1440, size: 8, offset: 280)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1428, file: !1429, line: 430, baseType: !1440, size: 8, offset: 288)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1428, file: !1429, line: 431, baseType: !1440, size: 8, offset: 296)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1428, file: !1429, line: 432, baseType: !1440, size: 8, offset: 304)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1428, file: !1429, line: 433, baseType: !1440, size: 8, offset: 312)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1428, file: !1429, line: 434, baseType: !1440, size: 8, offset: 320)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1428, file: !1429, line: 435, baseType: !1440, size: 8, offset: 328)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1428, file: !1429, line: 436, baseType: !1440, size: 8, offset: 336)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1428, file: !1429, line: 437, baseType: !1440, size: 8, offset: 344)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1428, file: !1429, line: 438, baseType: !1440, size: 8, offset: 352)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1428, file: !1429, line: 439, baseType: !1440, size: 8, offset: 360)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1428, file: !1429, line: 440, baseType: !1440, size: 8, offset: 368)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1428, file: !1429, line: 441, baseType: !1440, size: 8, offset: 376)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1428, file: !1429, line: 442, baseType: !1440, size: 8, offset: 384)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1428, file: !1429, line: 443, baseType: !1440, size: 8, offset: 392)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1428, file: !1429, line: 444, baseType: !1440, size: 8, offset: 400)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1428, file: !1429, line: 445, baseType: !1440, size: 8, offset: 408)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1428, file: !1429, line: 446, baseType: !1440, size: 8, offset: 416)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1428, file: !1429, line: 447, baseType: !1440, size: 8, offset: 424)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1428, file: !1429, line: 448, baseType: !1440, size: 8, offset: 432)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1428, file: !1429, line: 449, baseType: !1440, size: 8, offset: 440)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1428, file: !1429, line: 450, baseType: !1440, size: 8, offset: 448)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1428, file: !1429, line: 451, baseType: !1440, size: 8, offset: 456)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1428, file: !1429, line: 452, baseType: !1440, size: 8, offset: 464)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1428, file: !1429, line: 453, baseType: !1440, size: 8, offset: 472)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1428, file: !1429, line: 454, baseType: !1440, size: 8, offset: 480)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1428, file: !1429, line: 455, baseType: !1440, size: 8, offset: 488)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1428, file: !1429, line: 456, baseType: !1440, size: 8, offset: 496)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1428, file: !1429, line: 457, baseType: !1440, size: 8, offset: 504)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1428, file: !1429, line: 458, baseType: !1440, size: 8, offset: 512)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1428, file: !1429, line: 459, baseType: !1440, size: 8, offset: 520)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1428, file: !1429, line: 460, baseType: !1440, size: 8, offset: 528)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1428, file: !1429, line: 461, baseType: !1440, size: 8, offset: 536)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1428, file: !1429, line: 462, baseType: !1440, size: 8, offset: 544)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1428, file: !1429, line: 463, baseType: !1440, size: 8, offset: 552)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1428, file: !1429, line: 464, baseType: !1440, size: 8, offset: 560)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1428, file: !1429, line: 465, baseType: !1440, size: 8, offset: 568)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1428, file: !1429, line: 466, baseType: !1440, size: 8, offset: 576)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1428, file: !1429, line: 467, baseType: !1440, size: 8, offset: 584)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1428, file: !1429, line: 468, baseType: !1440, size: 8, offset: 592)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1428, file: !1429, line: 469, baseType: !1440, size: 8, offset: 600)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1428, file: !1429, line: 470, baseType: !1440, size: 8, offset: 608)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1428, file: !1429, line: 471, baseType: !1440, size: 8, offset: 616)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1428, file: !1429, line: 472, baseType: !1440, size: 8, offset: 624)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1428, file: !1429, line: 473, baseType: !1440, size: 8, offset: 632)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1428, file: !1429, line: 474, baseType: !1440, size: 8, offset: 640)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1428, file: !1429, line: 475, baseType: !1440, size: 8, offset: 648)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1428, file: !1429, line: 476, baseType: !1440, size: 8, offset: 656)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1428, file: !1429, line: 477, baseType: !1440, size: 8, offset: 664)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1428, file: !1429, line: 478, baseType: !1440, size: 8, offset: 672)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1428, file: !1429, line: 479, baseType: !1440, size: 8, offset: 680)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1428, file: !1429, line: 480, baseType: !1440, size: 8, offset: 688)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1428, file: !1429, line: 481, baseType: !1440, size: 8, offset: 696)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1428, file: !1429, line: 482, baseType: !1440, size: 8, offset: 704)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1428, file: !1429, line: 483, baseType: !1440, size: 8, offset: 712)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1428, file: !1429, line: 484, baseType: !1440, size: 8, offset: 720)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1428, file: !1429, line: 485, baseType: !1440, size: 8, offset: 728)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1428, file: !1429, line: 486, baseType: !1440, size: 8, offset: 736)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1428, file: !1429, line: 487, baseType: !1440, size: 8, offset: 744)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1428, file: !1429, line: 488, baseType: !1440, size: 8, offset: 752)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1428, file: !1429, line: 489, baseType: !1440, size: 8, offset: 760)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1428, file: !1429, line: 490, baseType: !1440, size: 8, offset: 768)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1428, file: !1429, line: 491, baseType: !1440, size: 8, offset: 776)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1428, file: !1429, line: 492, baseType: !1440, size: 8, offset: 784)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1428, file: !1429, line: 493, baseType: !1440, size: 8, offset: 792)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1428, file: !1429, line: 494, baseType: !1440, size: 8, offset: 800)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1428, file: !1429, line: 495, baseType: !1440, size: 8, offset: 808)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1428, file: !1429, line: 496, baseType: !1440, size: 8, offset: 816)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1428, file: !1429, line: 497, baseType: !1440, size: 8, offset: 824)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1428, file: !1429, line: 498, baseType: !1440, size: 8, offset: 832)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1428, file: !1429, line: 499, baseType: !1440, size: 8, offset: 840)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1428, file: !1429, line: 500, baseType: !1440, size: 8, offset: 848)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1428, file: !1429, line: 501, baseType: !1440, size: 8, offset: 856)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1428, file: !1429, line: 502, baseType: !1440, size: 8, offset: 864)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1428, file: !1429, line: 503, baseType: !1440, size: 8, offset: 872)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1428, file: !1429, line: 504, baseType: !1440, size: 8, offset: 880)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1428, file: !1429, line: 505, baseType: !1440, size: 8, offset: 888)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1428, file: !1429, line: 506, baseType: !1440, size: 8, offset: 896)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1428, file: !1429, line: 507, baseType: !1440, size: 8, offset: 904)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1428, file: !1429, line: 508, baseType: !1440, size: 8, offset: 912)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1428, file: !1429, line: 509, baseType: !1440, size: 8, offset: 920)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1428, file: !1429, line: 510, baseType: !1440, size: 8, offset: 928)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1428, file: !1429, line: 511, baseType: !1440, size: 8, offset: 936)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1428, file: !1429, line: 512, baseType: !1440, size: 8, offset: 944)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1428, file: !1429, line: 513, baseType: !1440, size: 8, offset: 952)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1428, file: !1429, line: 514, baseType: !1440, size: 8, offset: 960)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1428, file: !1429, line: 515, baseType: !1440, size: 8, offset: 968)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1428, file: !1429, line: 516, baseType: !1440, size: 8, offset: 976)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1428, file: !1429, line: 517, baseType: !1440, size: 8, offset: 984)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1428, file: !1429, line: 518, baseType: !1440, size: 8, offset: 992)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1428, file: !1429, line: 519, baseType: !1440, size: 8, offset: 1000)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1428, file: !1429, line: 520, baseType: !1440, size: 8, offset: 1008)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1428, file: !1429, line: 521, baseType: !1440, size: 8, offset: 1016)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1428, file: !1429, line: 522, baseType: !1440, size: 8, offset: 1024)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1428, file: !1429, line: 523, baseType: !1440, size: 8, offset: 1032)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1428, file: !1429, line: 524, baseType: !1440, size: 8, offset: 1040)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1428, file: !1429, line: 525, baseType: !1440, size: 8, offset: 1048)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1428, file: !1429, line: 526, baseType: !1440, size: 8, offset: 1056)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1428, file: !1429, line: 527, baseType: !1440, size: 8, offset: 1064)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1428, file: !1429, line: 528, baseType: !1440, size: 8, offset: 1072)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1428, file: !1429, line: 529, baseType: !1440, size: 8, offset: 1080)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1428, file: !1429, line: 530, baseType: !1440, size: 8, offset: 1088)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1428, file: !1429, line: 531, baseType: !1440, size: 8, offset: 1096)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1428, file: !1429, line: 532, baseType: !1440, size: 8, offset: 1104)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1428, file: !1429, line: 533, baseType: !1440, size: 8, offset: 1112)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1428, file: !1429, line: 534, baseType: !1440, size: 8, offset: 1120)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1428, file: !1429, line: 535, baseType: !1440, size: 8, offset: 1128)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1428, file: !1429, line: 536, baseType: !1440, size: 8, offset: 1136)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1428, file: !1429, line: 537, baseType: !1440, size: 8, offset: 1144)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1428, file: !1429, line: 538, baseType: !1440, size: 8, offset: 1152)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1428, file: !1429, line: 539, baseType: !1440, size: 8, offset: 1160)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1428, file: !1429, line: 540, baseType: !1440, size: 8, offset: 1168)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1428, file: !1429, line: 541, baseType: !1440, size: 8, offset: 1176)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1428, file: !1429, line: 542, baseType: !1440, size: 8, offset: 1184)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1428, file: !1429, line: 543, baseType: !1440, size: 8, offset: 1192)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1428, file: !1429, line: 544, baseType: !1440, size: 8, offset: 1200)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1428, file: !1429, line: 545, baseType: !1440, size: 8, offset: 1208)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1428, file: !1429, line: 546, baseType: !1440, size: 8, offset: 1216)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1428, file: !1429, line: 547, baseType: !1440, size: 8, offset: 1224)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1428, file: !1429, line: 548, baseType: !1440, size: 8, offset: 1232)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1428, file: !1429, line: 549, baseType: !1440, size: 8, offset: 1240)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1428, file: !1429, line: 550, baseType: !1440, size: 8, offset: 1248)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1428, file: !1429, line: 551, baseType: !1440, size: 8, offset: 1256)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1428, file: !1429, line: 552, baseType: !1440, size: 8, offset: 1264)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1428, file: !1429, line: 553, baseType: !1440, size: 8, offset: 1272)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1428, file: !1429, line: 554, baseType: !1440, size: 8, offset: 1280)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1428, file: !1429, line: 555, baseType: !1440, size: 8, offset: 1288)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1428, file: !1429, line: 556, baseType: !1440, size: 8, offset: 1296)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1428, file: !1429, line: 557, baseType: !1440, size: 8, offset: 1304)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1428, file: !1429, line: 558, baseType: !1440, size: 8, offset: 1312)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1428, file: !1429, line: 559, baseType: !1440, size: 8, offset: 1320)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1428, file: !1429, line: 560, baseType: !1440, size: 8, offset: 1328)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1428, file: !1429, line: 561, baseType: !1440, size: 8, offset: 1336)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1428, file: !1429, line: 562, baseType: !1440, size: 8, offset: 1344)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1428, file: !1429, line: 563, baseType: !1440, size: 8, offset: 1352)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1428, file: !1429, line: 564, baseType: !1440, size: 8, offset: 1360)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1428, file: !1429, line: 565, baseType: !1440, size: 8, offset: 1368)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1428, file: !1429, line: 566, baseType: !1440, size: 8, offset: 1376)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1428, file: !1429, line: 567, baseType: !1440, size: 8, offset: 1384)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1428, file: !1429, line: 568, baseType: !1440, size: 8, offset: 1392)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1428, file: !1429, line: 569, baseType: !1440, size: 8, offset: 1400)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1428, file: !1429, line: 570, baseType: !1440, size: 8, offset: 1408)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1428, file: !1429, line: 571, baseType: !1440, size: 8, offset: 1416)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1428, file: !1429, line: 572, baseType: !1440, size: 8, offset: 1424)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1428, file: !1429, line: 573, baseType: !1440, size: 8, offset: 1432)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1428, file: !1429, line: 574, baseType: !1440, size: 8, offset: 1440)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !690, file: !164, line: 3405, baseType: !1596, size: 384)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !164, line: 3352, size: 384, elements: !1597)
!1597 = !{!1598, !1599}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1596, file: !164, line: 3353, baseType: !726, size: 192)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1596, file: !164, line: 3356, baseType: !1600, size: 192, offset: 192)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1429, line: 578, size: 192, elements: !1601)
!1601 = !{!1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1600, file: !1429, line: 580, baseType: !564, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1600, file: !1429, line: 581, baseType: !564, size: 32, offset: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1600, file: !1429, line: 582, baseType: !564, size: 32, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1600, file: !1429, line: 583, baseType: !564, size: 32, offset: 96)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1600, file: !1429, line: 584, baseType: !563, size: 8, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1600, file: !1429, line: 585, baseType: !563, size: 8, offset: 136)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1600, file: !1429, line: 586, baseType: !563, size: 8, offset: 144)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1600, file: !1429, line: 587, baseType: !563, size: 8, offset: 152)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1600, file: !1429, line: 588, baseType: !563, size: 8, offset: 160)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1600, file: !1429, line: 589, baseType: !563, size: 8, offset: 168)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1600, file: !1429, line: 590, baseType: !563, size: 8, offset: 176)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !654, file: !391, line: 178, baseType: !946, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !654, file: !391, line: 179, baseType: !1615, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !391, line: 150, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !391, line: 142, size: 320, elements: !1618)
!1618 = !{!1619, !1620, !1621, !1622, !1623, !1624}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1617, file: !391, line: 144, baseType: !688, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1617, file: !391, line: 145, baseType: !634, size: 64, offset: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1617, file: !391, line: 146, baseType: !634, size: 64, offset: 128)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1617, file: !391, line: 147, baseType: !1266, size: 32, offset: 192)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1617, file: !391, line: 148, baseType: !7, size: 32, offset: 224)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1617, file: !391, line: 149, baseType: !563, size: 8, offset: 256)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !654, file: !391, line: 180, baseType: !1626, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !391, line: 162, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !391, line: 159, size: 128, elements: !1629)
!1629 = !{!1630, !1631}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1628, file: !391, line: 160, baseType: !688, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1628, file: !391, line: 161, baseType: !606, size: 64, offset: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !654, file: !391, line: 181, baseType: !1633, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1634 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !391, line: 181, flags: DIFlagFwdDecl)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !649, file: !391, line: 317, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !606, size: 64, elements: !668)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !649, file: !391, line: 318, baseType: !1638, size: 320)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !391, line: 188, size: 320, elements: !1639)
!1639 = !{!1640, !1642, !1697}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1638, file: !391, line: 190, baseType: !1641, size: 192)
!1641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !653, size: 192, elements: !759)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1638, file: !391, line: 193, baseType: !1643, size: 64, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !391, line: 206, size: 320, elements: !1645)
!1645 = !{!1646, !1682, !1683, !1684, !1696}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1644, file: !391, line: 208, baseType: !1647, size: 64)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !572, line: 62, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1650, line: 538, size: 256, elements: !1651)
!1650 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1651 = !{!1652, !1656, !1662, !1673}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1649, file: !1650, line: 539, baseType: !1653, size: 32)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1650, line: 482, size: 32, elements: !1654)
!1654 = !{!1655}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1653, file: !1650, line: 484, baseType: !7, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1649, file: !1650, line: 540, baseType: !1657, size: 192)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1650, line: 488, size: 192, elements: !1658)
!1658 = !{!1659, !1660, !1661}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1657, file: !1650, line: 489, baseType: !1653, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1657, file: !1650, line: 492, baseType: !569, size: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1657, file: !1650, line: 496, baseType: !688, size: 64, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1649, file: !1650, line: 541, baseType: !1663, size: 256)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1650, line: 504, size: 256, elements: !1664)
!1664 = !{!1665, !1666, !1671, !1672}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1663, file: !1650, line: 505, baseType: !1653, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1663, file: !1650, line: 509, baseType: !1667, size: 64, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1650, line: 501, baseType: !1668)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{null, !1122}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1663, file: !1650, line: 510, baseType: !1122, size: 64, offset: 128)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1663, file: !1650, line: 513, baseType: !1647, size: 64, offset: 192)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1649, file: !1650, line: 542, baseType: !1674, size: 128)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1650, line: 530, size: 128, elements: !1675)
!1675 = !{!1676, !1677}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1674, file: !1650, line: 531, baseType: !1653, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1674, file: !1650, line: 534, baseType: !1678, size: 64, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1650, line: 525, baseType: !1679)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!563, !688, !569, !589, !589}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1644, file: !391, line: 211, baseType: !7, size: 32, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1644, file: !391, line: 214, baseType: !606, size: 64, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1644, file: !391, line: 224, baseType: !1685, size: 64, offset: 192)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !391, line: 202, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !391, line: 202, size: 128, elements: !1688)
!1688 = !{!1689}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1687, file: !391, line: 202, baseType: !1690, size: 128)
!1690 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !391, line: 200, baseType: !1691)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !391, line: 200, size: 128, elements: !1692)
!1692 = !{!1693, !1694, !1695}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1691, file: !391, line: 200, baseType: !7, size: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1691, file: !391, line: 200, baseType: !7, size: 32, offset: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1691, file: !391, line: 200, baseType: !667, size: 64, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1644, file: !391, line: 234, baseType: !1685, size: 64, offset: 256)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1638, file: !391, line: 197, baseType: !606, size: 64, offset: 256)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !649, file: !391, line: 319, baseType: !748, size: 256)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !649, file: !391, line: 320, baseType: !767, size: 192)
!1700 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "niter_desc", file: !135, line: 353, size: 640, elements: !1703)
!1703 = !{!1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "out_edge", scope: !1702, file: !135, line: 356, baseType: !962, size: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "in_edge", scope: !1702, file: !135, line: 359, baseType: !962, size: 64, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "simple_p", scope: !1702, file: !135, line: 363, baseType: !563, size: 8, offset: 128)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "const_iter", scope: !1702, file: !135, line: 366, baseType: !563, size: 8, offset: 136)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "niter", scope: !1702, file: !135, line: 369, baseType: !589, size: 64, offset: 192)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "niter_max", scope: !1702, file: !135, line: 372, baseType: !589, size: 64, offset: 256)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "assumptions", scope: !1702, file: !135, line: 375, baseType: !634, size: 64, offset: 320)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "noloop_assumptions", scope: !1702, file: !135, line: 379, baseType: !634, size: 64, offset: 384)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "infinite", scope: !1702, file: !135, line: 382, baseType: !634, size: 64, offset: 448)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "signed_p", scope: !1702, file: !135, line: 385, baseType: !563, size: 8, offset: 512)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1702, file: !135, line: 388, baseType: !5, size: 32, offset: 544)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "niter_expr", scope: !1702, file: !135, line: 391, baseType: !634, size: 64, offset: 576)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "biv_entry", file: !3, line: 89, size: 512, elements: !1719)
!1719 = !{!1720, !1721}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !1718, file: !3, line: 91, baseType: !7, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "iv", scope: !1718, file: !3, line: 92, baseType: !1722, size: 448, offset: 64)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_iv", file: !135, line: 328, size: 448, elements: !1723)
!1723 = !{!1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1722, file: !135, line: 332, baseType: !634, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1722, file: !135, line: 332, baseType: !634, size: 64, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1722, file: !135, line: 335, baseType: !390, size: 32, offset: 128)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1722, file: !135, line: 338, baseType: !634, size: 64, offset: 192)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "mult", scope: !1722, file: !135, line: 338, baseType: !634, size: 64, offset: 256)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "extend_mode", scope: !1722, file: !135, line: 341, baseType: !5, size: 32, offset: 320)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1722, file: !135, line: 344, baseType: !5, size: 32, offset: 352)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "first_special", scope: !1722, file: !135, line: 347, baseType: !7, size: 1, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !572, line: 51, baseType: !1733)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !636)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_rd_bb_info", file: !1739, line: 794, size: 320, elements: !1740)
!1739 = !DIFile(filename: "./df.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1740 = !{!1741, !1742, !1743, !1744, !1745}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !1738, file: !1739, line: 797, baseType: !571, size: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_kill", scope: !1738, file: !1739, line: 798, baseType: !571, size: 64, offset: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !1738, file: !1739, line: 799, baseType: !571, size: 64, offset: 128)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1738, file: !1739, line: 802, baseType: !571, size: 64, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !1738, file: !1739, line: 803, baseType: !571, size: 64, offset: 256)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !1748, line: 42, baseType: !589)
!1748 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!1750 = !{!1751, !0, !1753, !1755, !1757}
!1751 = !DIGlobalVariableExpression(var: !1752, expr: !DIExpression())
!1752 = distinct !DIGlobalVariable(name: "iv_ref_table", scope: !2, file: !3, line: 100, type: !1735, isLocal: true, isDefinition: true)
!1753 = !DIGlobalVariableExpression(var: !1754, expr: !DIExpression())
!1754 = distinct !DIGlobalVariable(name: "bivs", scope: !2, file: !3, line: 112, type: !1111, isLocal: true, isDefinition: true)
!1755 = !DIGlobalVariableExpression(var: !1756, expr: !DIExpression())
!1756 = distinct !DIGlobalVariable(name: "clean_slate", scope: !2, file: !3, line: 95, type: !563, isLocal: true, isDefinition: true)
!1757 = !DIGlobalVariableExpression(var: !1758, expr: !DIExpression())
!1758 = distinct !DIGlobalVariable(name: "iv_ref_table_size", scope: !2, file: !3, line: 97, type: !7, isLocal: true, isDefinition: true)
!1759 = !DIGlobalVariableExpression(var: !1756, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1760 = !{i32 2, !"Dwarf Version", i32 4}
!1761 = !{i32 2, !"Debug Info Version", i32 3}
!1762 = !{i32 1, !"wchar_size", i32 4}
!1763 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!1764 = distinct !DISubprogram(name: "vprintf", scope: !1765, file: !1765, line: 39, type: !1766, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1776)
!1765 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!1766 = !DISubroutineType(types: !1767)
!1767 = !{!564, !1768, !1769}
!1768 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !569)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !1771)
!1771 = !{!1772, !1773, !1774, !1775}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1770, file: !3, baseType: !7, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1770, file: !3, baseType: !7, size: 32, offset: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1770, file: !3, baseType: !568, size: 64, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1770, file: !3, baseType: !568, size: 64, offset: 128)
!1776 = !{!1777, !1778}
!1777 = !DILocalVariable(name: "__fmt", arg: 1, scope: !1764, file: !1765, line: 39, type: !1768)
!1778 = !DILocalVariable(name: "__arg", arg: 2, scope: !1764, file: !1765, line: 39, type: !1769)
!1779 = !DILocation(line: 0, scope: !1764)
!1780 = !DILocation(line: 41, column: 20, scope: !1764)
!1781 = !DILocation(line: 41, column: 10, scope: !1764)
!1782 = !DILocation(line: 41, column: 3, scope: !1764)
!1783 = distinct !DISubprogram(name: "getchar", scope: !1765, file: !1765, line: 47, type: !1784, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1786)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!564}
!1786 = !{}
!1787 = !DILocation(line: 49, column: 16, scope: !1783)
!1788 = !DILocation(line: 49, column: 10, scope: !1783)
!1789 = !DILocation(line: 49, column: 3, scope: !1783)
!1790 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !1765, file: !1765, line: 56, type: !1791, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1843)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!564, !1793}
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1795, line: 7, baseType: !1796)
!1795 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1797, line: 49, size: 1728, elements: !1798)
!1797 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1798 = !{!1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1814, !1816, !1817, !1818, !1821, !1822, !1823, !1824, !1827, !1829, !1832, !1835, !1836, !1837, !1838, !1839}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1796, file: !1797, line: 51, baseType: !564, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1796, file: !1797, line: 54, baseType: !566, size: 64, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1796, file: !1797, line: 55, baseType: !566, size: 64, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1796, file: !1797, line: 56, baseType: !566, size: 64, offset: 192)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1796, file: !1797, line: 57, baseType: !566, size: 64, offset: 256)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1796, file: !1797, line: 58, baseType: !566, size: 64, offset: 320)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1796, file: !1797, line: 59, baseType: !566, size: 64, offset: 384)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1796, file: !1797, line: 60, baseType: !566, size: 64, offset: 448)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1796, file: !1797, line: 61, baseType: !566, size: 64, offset: 512)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1796, file: !1797, line: 64, baseType: !566, size: 64, offset: 576)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1796, file: !1797, line: 65, baseType: !566, size: 64, offset: 640)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1796, file: !1797, line: 66, baseType: !566, size: 64, offset: 704)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1796, file: !1797, line: 68, baseType: !1812, size: 64, offset: 768)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1797, line: 36, flags: DIFlagFwdDecl)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1796, file: !1797, line: 70, baseType: !1815, size: 64, offset: 832)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1796, file: !1797, line: 72, baseType: !564, size: 32, offset: 896)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1796, file: !1797, line: 73, baseType: !564, size: 32, offset: 928)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1796, file: !1797, line: 74, baseType: !1819, size: 64, offset: 960)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1820, line: 152, baseType: !606)
!1820 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1796, file: !1797, line: 77, baseType: !1700, size: 16, offset: 1024)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1796, file: !1797, line: 78, baseType: !1440, size: 8, offset: 1040)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1796, file: !1797, line: 79, baseType: !783, size: 8, offset: 1048)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1796, file: !1797, line: 81, baseType: !1825, size: 64, offset: 1088)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1797, line: 43, baseType: null)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1796, file: !1797, line: 89, baseType: !1828, size: 64, offset: 1152)
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1820, line: 153, baseType: !606)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1796, file: !1797, line: 91, baseType: !1830, size: 64, offset: 1216)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1797, line: 37, flags: DIFlagFwdDecl)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1796, file: !1797, line: 92, baseType: !1833, size: 64, offset: 1280)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1797, line: 38, flags: DIFlagFwdDecl)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1796, file: !1797, line: 93, baseType: !1815, size: 64, offset: 1344)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1796, file: !1797, line: 94, baseType: !568, size: 64, offset: 1408)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1796, file: !1797, line: 95, baseType: !1137, size: 64, offset: 1472)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1796, file: !1797, line: 96, baseType: !564, size: 32, offset: 1536)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1796, file: !1797, line: 98, baseType: !1840, size: 160, offset: 1568)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 160, elements: !1841)
!1841 = !{!1842}
!1842 = !DISubrange(count: 20)
!1843 = !{!1844}
!1844 = !DILocalVariable(name: "__fp", arg: 1, scope: !1790, file: !1765, line: 56, type: !1793)
!1845 = !DILocation(line: 0, scope: !1790)
!1846 = !DILocation(line: 58, column: 10, scope: !1790)
!1847 = !DILocation(line: 58, column: 3, scope: !1790)
!1848 = distinct !DISubprogram(name: "getc_unlocked", scope: !1765, file: !1765, line: 66, type: !1791, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1849)
!1849 = !{!1850}
!1850 = !DILocalVariable(name: "__fp", arg: 1, scope: !1848, file: !1765, line: 66, type: !1793)
!1851 = !DILocation(line: 0, scope: !1848)
!1852 = !DILocation(line: 68, column: 10, scope: !1848)
!1853 = !DILocation(line: 68, column: 3, scope: !1848)
!1854 = distinct !DISubprogram(name: "getchar_unlocked", scope: !1765, file: !1765, line: 73, type: !1784, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1786)
!1855 = !DILocation(line: 75, column: 10, scope: !1854)
!1856 = !DILocation(line: 75, column: 3, scope: !1854)
!1857 = distinct !DISubprogram(name: "putchar", scope: !1765, file: !1765, line: 82, type: !1858, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1860)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!564, !564}
!1860 = !{!1861}
!1861 = !DILocalVariable(name: "__c", arg: 1, scope: !1857, file: !1765, line: 82, type: !564)
!1862 = !DILocation(line: 0, scope: !1857)
!1863 = !DILocation(line: 84, column: 21, scope: !1857)
!1864 = !DILocation(line: 84, column: 10, scope: !1857)
!1865 = !DILocation(line: 84, column: 3, scope: !1857)
!1866 = distinct !DISubprogram(name: "fputc_unlocked", scope: !1765, file: !1765, line: 91, type: !1867, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1869)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{!564, !564, !1793}
!1869 = !{!1870, !1871}
!1870 = !DILocalVariable(name: "__c", arg: 1, scope: !1866, file: !1765, line: 91, type: !564)
!1871 = !DILocalVariable(name: "__stream", arg: 2, scope: !1866, file: !1765, line: 91, type: !1793)
!1872 = !DILocation(line: 0, scope: !1866)
!1873 = !DILocation(line: 93, column: 10, scope: !1866)
!1874 = !DILocation(line: 93, column: 3, scope: !1866)
!1875 = distinct !DISubprogram(name: "putc_unlocked", scope: !1765, file: !1765, line: 101, type: !1867, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1876)
!1876 = !{!1877, !1878}
!1877 = !DILocalVariable(name: "__c", arg: 1, scope: !1875, file: !1765, line: 101, type: !564)
!1878 = !DILocalVariable(name: "__stream", arg: 2, scope: !1875, file: !1765, line: 101, type: !1793)
!1879 = !DILocation(line: 0, scope: !1875)
!1880 = !DILocation(line: 103, column: 10, scope: !1875)
!1881 = !DILocation(line: 103, column: 3, scope: !1875)
!1882 = distinct !DISubprogram(name: "putchar_unlocked", scope: !1765, file: !1765, line: 108, type: !1858, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1883)
!1883 = !{!1884}
!1884 = !DILocalVariable(name: "__c", arg: 1, scope: !1882, file: !1765, line: 108, type: !564)
!1885 = !DILocation(line: 0, scope: !1882)
!1886 = !DILocation(line: 110, column: 10, scope: !1882)
!1887 = !DILocation(line: 110, column: 3, scope: !1882)
!1888 = distinct !DISubprogram(name: "getline", scope: !1765, file: !1765, line: 118, type: !1889, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1893)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{!1891, !565, !1892, !1793}
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !1820, line: 193, baseType: !606)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1893 = !{!1894, !1895, !1896}
!1894 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !1888, file: !1765, line: 118, type: !565)
!1895 = !DILocalVariable(name: "__n", arg: 2, scope: !1888, file: !1765, line: 118, type: !1892)
!1896 = !DILocalVariable(name: "__stream", arg: 3, scope: !1888, file: !1765, line: 118, type: !1793)
!1897 = !DILocation(line: 0, scope: !1888)
!1898 = !DILocation(line: 120, column: 10, scope: !1888)
!1899 = !DILocation(line: 120, column: 3, scope: !1888)
!1900 = distinct !DISubprogram(name: "feof_unlocked", scope: !1765, file: !1765, line: 128, type: !1791, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1901)
!1901 = !{!1902}
!1902 = !DILocalVariable(name: "__stream", arg: 1, scope: !1900, file: !1765, line: 128, type: !1793)
!1903 = !DILocation(line: 0, scope: !1900)
!1904 = !DILocation(line: 130, column: 10, scope: !1900)
!1905 = !DILocation(line: 130, column: 3, scope: !1900)
!1906 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1765, file: !1765, line: 135, type: !1791, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1907)
!1907 = !{!1908}
!1908 = !DILocalVariable(name: "__stream", arg: 1, scope: !1906, file: !1765, line: 135, type: !1793)
!1909 = !DILocation(line: 0, scope: !1906)
!1910 = !DILocation(line: 137, column: 10, scope: !1906)
!1911 = !DILocation(line: 137, column: 3, scope: !1906)
!1912 = distinct !DISubprogram(name: "tolower", scope: !1913, file: !1913, line: 207, type: !1858, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1914)
!1913 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!1914 = !{!1915}
!1915 = !DILocalVariable(name: "__c", arg: 1, scope: !1912, file: !1913, line: 207, type: !564)
!1916 = !DILocation(line: 0, scope: !1912)
!1917 = !DILocation(line: 209, column: 22, scope: !1912)
!1918 = !DILocation(line: 209, column: 39, scope: !1912)
!1919 = !DILocation(line: 209, column: 38, scope: !1912)
!1920 = !DILocation(line: 209, column: 37, scope: !1912)
!1921 = !DILocation(line: 209, column: 10, scope: !1912)
!1922 = !DILocation(line: 209, column: 3, scope: !1912)
!1923 = distinct !DISubprogram(name: "toupper", scope: !1913, file: !1913, line: 213, type: !1858, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1924)
!1924 = !{!1925}
!1925 = !DILocalVariable(name: "__c", arg: 1, scope: !1923, file: !1913, line: 213, type: !564)
!1926 = !DILocation(line: 0, scope: !1923)
!1927 = !DILocation(line: 215, column: 22, scope: !1923)
!1928 = !DILocation(line: 215, column: 39, scope: !1923)
!1929 = !DILocation(line: 215, column: 38, scope: !1923)
!1930 = !DILocation(line: 215, column: 37, scope: !1923)
!1931 = !DILocation(line: 215, column: 10, scope: !1923)
!1932 = !DILocation(line: 215, column: 3, scope: !1923)
!1933 = distinct !DISubprogram(name: "atoi", scope: !1934, file: !1934, line: 361, type: !1935, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1937)
!1934 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!564, !569}
!1937 = !{!1938}
!1938 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1933, file: !1934, line: 361, type: !569)
!1939 = !DILocation(line: 0, scope: !1933)
!1940 = !DILocation(line: 363, column: 16, scope: !1933)
!1941 = !DILocation(line: 363, column: 10, scope: !1933)
!1942 = !DILocation(line: 363, column: 3, scope: !1933)
!1943 = distinct !DISubprogram(name: "atol", scope: !1934, file: !1934, line: 366, type: !1944, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1946)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{!606, !569}
!1946 = !{!1947}
!1947 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1943, file: !1934, line: 366, type: !569)
!1948 = !DILocation(line: 0, scope: !1943)
!1949 = !DILocation(line: 368, column: 10, scope: !1943)
!1950 = !DILocation(line: 368, column: 3, scope: !1943)
!1951 = distinct !DISubprogram(name: "atoll", scope: !1934, file: !1934, line: 373, type: !1952, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1955)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!1954, !569}
!1954 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!1955 = !{!1956}
!1956 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1951, file: !1934, line: 373, type: !569)
!1957 = !DILocation(line: 0, scope: !1951)
!1958 = !DILocation(line: 375, column: 10, scope: !1951)
!1959 = !DILocation(line: 375, column: 3, scope: !1951)
!1960 = distinct !DISubprogram(name: "bsearch", scope: !1961, file: !1961, line: 20, type: !1962, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1965)
!1961 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!568, !1122, !1122, !1137, !1137, !1964}
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !1934, line: 808, baseType: !1126)
!1965 = !{!1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975}
!1966 = !DILocalVariable(name: "__key", arg: 1, scope: !1960, file: !1961, line: 20, type: !1122)
!1967 = !DILocalVariable(name: "__base", arg: 2, scope: !1960, file: !1961, line: 20, type: !1122)
!1968 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !1960, file: !1961, line: 20, type: !1137)
!1969 = !DILocalVariable(name: "__size", arg: 4, scope: !1960, file: !1961, line: 20, type: !1137)
!1970 = !DILocalVariable(name: "__compar", arg: 5, scope: !1960, file: !1961, line: 21, type: !1964)
!1971 = !DILocalVariable(name: "__l", scope: !1960, file: !1961, line: 23, type: !1137)
!1972 = !DILocalVariable(name: "__u", scope: !1960, file: !1961, line: 23, type: !1137)
!1973 = !DILocalVariable(name: "__idx", scope: !1960, file: !1961, line: 23, type: !1137)
!1974 = !DILocalVariable(name: "__p", scope: !1960, file: !1961, line: 24, type: !1122)
!1975 = !DILocalVariable(name: "__comparison", scope: !1960, file: !1961, line: 25, type: !564)
!1976 = !DILocation(line: 0, scope: !1960)
!1977 = !DILocation(line: 29, column: 3, scope: !1960)
!1978 = !DILocation(line: 27, column: 7, scope: !1960)
!1979 = !DILocation(line: 29, column: 14, scope: !1960)
!1980 = !DILocation(line: 31, column: 20, scope: !1981)
!1981 = distinct !DILexicalBlock(scope: !1960, file: !1961, line: 30, column: 5)
!1982 = !DILocation(line: 31, column: 27, scope: !1981)
!1983 = !DILocation(line: 32, column: 56, scope: !1981)
!1984 = !DILocation(line: 32, column: 47, scope: !1981)
!1985 = !DILocation(line: 33, column: 22, scope: !1981)
!1986 = !DILocation(line: 34, column: 24, scope: !1987)
!1987 = distinct !DILexicalBlock(scope: !1981, file: !1961, line: 34, column: 11)
!1988 = !DILocation(line: 34, column: 11, scope: !1981)
!1989 = !DILocation(line: 36, column: 29, scope: !1990)
!1990 = distinct !DILexicalBlock(scope: !1987, file: !1961, line: 36, column: 16)
!1991 = !DILocation(line: 36, column: 16, scope: !1987)
!1992 = !DILocation(line: 37, column: 14, scope: !1990)
!1993 = distinct !{!1993, !1977, !1994}
!1994 = !DILocation(line: 40, column: 5, scope: !1960)
!1995 = !DILocation(line: 43, column: 1, scope: !1960)
!1996 = distinct !DISubprogram(name: "atof", scope: !1997, file: !1997, line: 25, type: !1998, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2001)
!1997 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!1998 = !DISubroutineType(types: !1999)
!1999 = !{!2000, !569}
!2000 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2001 = !{!2002}
!2002 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1996, file: !1997, line: 25, type: !569)
!2003 = !DILocation(line: 0, scope: !1996)
!2004 = !DILocation(line: 27, column: 10, scope: !1996)
!2005 = !DILocation(line: 27, column: 3, scope: !1996)
!2006 = distinct !DISubprogram(name: "strtoimax", scope: !2007, file: !2007, line: 324, type: !2008, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2014)
!2007 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2008 = !DISubroutineType(types: !2009)
!2009 = !{!2010, !1768, !2013, !564}
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2011, line: 101, baseType: !2012)
!2011 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !1820, line: 72, baseType: !606)
!2013 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !565)
!2014 = !{!2015, !2016, !2017}
!2015 = !DILocalVariable(name: "nptr", arg: 1, scope: !2006, file: !2007, line: 324, type: !1768)
!2016 = !DILocalVariable(name: "endptr", arg: 2, scope: !2006, file: !2007, line: 324, type: !2013)
!2017 = !DILocalVariable(name: "base", arg: 3, scope: !2006, file: !2007, line: 324, type: !564)
!2018 = !DILocation(line: 0, scope: !2006)
!2019 = !DILocation(line: 327, column: 10, scope: !2006)
!2020 = !DILocation(line: 327, column: 3, scope: !2006)
!2021 = distinct !DISubprogram(name: "strtoumax", scope: !2007, file: !2007, line: 336, type: !2022, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2026)
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!2024, !1768, !2013, !564}
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2011, line: 102, baseType: !2025)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !1820, line: 73, baseType: !589)
!2026 = !{!2027, !2028, !2029}
!2027 = !DILocalVariable(name: "nptr", arg: 1, scope: !2021, file: !2007, line: 336, type: !1768)
!2028 = !DILocalVariable(name: "endptr", arg: 2, scope: !2021, file: !2007, line: 336, type: !2013)
!2029 = !DILocalVariable(name: "base", arg: 3, scope: !2021, file: !2007, line: 336, type: !564)
!2030 = !DILocation(line: 0, scope: !2021)
!2031 = !DILocation(line: 339, column: 10, scope: !2021)
!2032 = !DILocation(line: 339, column: 3, scope: !2021)
!2033 = distinct !DISubprogram(name: "wcstoimax", scope: !2007, file: !2007, line: 348, type: !2034, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2043)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!2010, !2036, !2040, !564}
!2036 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2037)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2039)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2007, line: 34, baseType: !564)
!2040 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2041)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2043 = !{!2044, !2045, !2046}
!2044 = !DILocalVariable(name: "nptr", arg: 1, scope: !2033, file: !2007, line: 348, type: !2036)
!2045 = !DILocalVariable(name: "endptr", arg: 2, scope: !2033, file: !2007, line: 348, type: !2040)
!2046 = !DILocalVariable(name: "base", arg: 3, scope: !2033, file: !2007, line: 348, type: !564)
!2047 = !DILocation(line: 0, scope: !2033)
!2048 = !DILocation(line: 351, column: 10, scope: !2033)
!2049 = !DILocation(line: 351, column: 3, scope: !2033)
!2050 = distinct !DISubprogram(name: "wcstoumax", scope: !2007, file: !2007, line: 362, type: !2051, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2053)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{!2024, !2036, !2040, !564}
!2053 = !{!2054, !2055, !2056}
!2054 = !DILocalVariable(name: "nptr", arg: 1, scope: !2050, file: !2007, line: 362, type: !2036)
!2055 = !DILocalVariable(name: "endptr", arg: 2, scope: !2050, file: !2007, line: 362, type: !2040)
!2056 = !DILocalVariable(name: "base", arg: 3, scope: !2050, file: !2007, line: 362, type: !564)
!2057 = !DILocation(line: 0, scope: !2050)
!2058 = !DILocation(line: 365, column: 10, scope: !2050)
!2059 = !DILocation(line: 365, column: 3, scope: !2050)
!2060 = distinct !DISubprogram(name: "stat", scope: !2061, file: !2061, line: 453, type: !2062, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2099)
!2061 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2062 = !DISubroutineType(types: !2063)
!2063 = !{!564, !569, !2064}
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2066, line: 46, size: 1152, elements: !2067)
!2066 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2067 = !{!2068, !2070, !2072, !2074, !2076, !2078, !2080, !2081, !2082, !2083, !2085, !2087, !2095, !2096, !2097}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2065, file: !2066, line: 48, baseType: !2069, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1820, line: 145, baseType: !589)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2065, file: !2066, line: 53, baseType: !2071, size: 64, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1820, line: 148, baseType: !589)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2065, file: !2066, line: 61, baseType: !2073, size: 64, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1820, line: 151, baseType: !589)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2065, file: !2066, line: 62, baseType: !2075, size: 32, offset: 192)
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1820, line: 150, baseType: !7)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2065, file: !2066, line: 64, baseType: !2077, size: 32, offset: 224)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1820, line: 146, baseType: !7)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2065, file: !2066, line: 65, baseType: !2079, size: 32, offset: 256)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1820, line: 147, baseType: !7)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2065, file: !2066, line: 67, baseType: !564, size: 32, offset: 288)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2065, file: !2066, line: 69, baseType: !2069, size: 64, offset: 320)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2065, file: !2066, line: 74, baseType: !1819, size: 64, offset: 384)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2065, file: !2066, line: 78, baseType: !2084, size: 64, offset: 448)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1820, line: 174, baseType: !606)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2065, file: !2066, line: 80, baseType: !2086, size: 64, offset: 512)
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1820, line: 179, baseType: !606)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2065, file: !2066, line: 91, baseType: !2088, size: 128, offset: 576)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2089, line: 10, size: 128, elements: !2090)
!2089 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2090 = !{!2091, !2093}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2088, file: !2089, line: 12, baseType: !2092, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1820, line: 160, baseType: !606)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2088, file: !2089, line: 16, baseType: !2094, size: 64, offset: 64)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !1820, line: 196, baseType: !606)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2065, file: !2066, line: 92, baseType: !2088, size: 128, offset: 704)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2065, file: !2066, line: 93, baseType: !2088, size: 128, offset: 832)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2065, file: !2066, line: 106, baseType: !2098, size: 192, offset: 960)
!2098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2094, size: 192, elements: !759)
!2099 = !{!2100, !2101}
!2100 = !DILocalVariable(name: "__path", arg: 1, scope: !2060, file: !2061, line: 453, type: !569)
!2101 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2060, file: !2061, line: 453, type: !2064)
!2102 = !DILocation(line: 0, scope: !2060)
!2103 = !DILocation(line: 455, column: 10, scope: !2060)
!2104 = !DILocation(line: 455, column: 3, scope: !2060)
!2105 = distinct !DISubprogram(name: "lstat", scope: !2061, file: !2061, line: 460, type: !2062, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2106)
!2106 = !{!2107, !2108}
!2107 = !DILocalVariable(name: "__path", arg: 1, scope: !2105, file: !2061, line: 460, type: !569)
!2108 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2105, file: !2061, line: 460, type: !2064)
!2109 = !DILocation(line: 0, scope: !2105)
!2110 = !DILocation(line: 462, column: 10, scope: !2105)
!2111 = !DILocation(line: 462, column: 3, scope: !2105)
!2112 = distinct !DISubprogram(name: "fstat", scope: !2061, file: !2061, line: 467, type: !2113, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2115)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{!564, !564, !2064}
!2115 = !{!2116, !2117}
!2116 = !DILocalVariable(name: "__fd", arg: 1, scope: !2112, file: !2061, line: 467, type: !564)
!2117 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2112, file: !2061, line: 467, type: !2064)
!2118 = !DILocation(line: 0, scope: !2112)
!2119 = !DILocation(line: 469, column: 10, scope: !2112)
!2120 = !DILocation(line: 469, column: 3, scope: !2112)
!2121 = distinct !DISubprogram(name: "fstatat", scope: !2061, file: !2061, line: 474, type: !2122, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2124)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{!564, !564, !569, !2064, !564}
!2124 = !{!2125, !2126, !2127, !2128}
!2125 = !DILocalVariable(name: "__fd", arg: 1, scope: !2121, file: !2061, line: 474, type: !564)
!2126 = !DILocalVariable(name: "__filename", arg: 2, scope: !2121, file: !2061, line: 474, type: !569)
!2127 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2121, file: !2061, line: 474, type: !2064)
!2128 = !DILocalVariable(name: "__flag", arg: 4, scope: !2121, file: !2061, line: 474, type: !564)
!2129 = !DILocation(line: 0, scope: !2121)
!2130 = !DILocation(line: 477, column: 10, scope: !2121)
!2131 = !DILocation(line: 477, column: 3, scope: !2121)
!2132 = distinct !DISubprogram(name: "mknod", scope: !2061, file: !2061, line: 483, type: !2133, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2135)
!2133 = !DISubroutineType(types: !2134)
!2134 = !{!564, !569, !2075, !2069}
!2135 = !{!2136, !2137, !2138}
!2136 = !DILocalVariable(name: "__path", arg: 1, scope: !2132, file: !2061, line: 483, type: !569)
!2137 = !DILocalVariable(name: "__mode", arg: 2, scope: !2132, file: !2061, line: 483, type: !2075)
!2138 = !DILocalVariable(name: "__dev", arg: 3, scope: !2132, file: !2061, line: 483, type: !2069)
!2139 = !DILocation(line: 0, scope: !2132)
!2140 = !DILocation(line: 485, column: 10, scope: !2132)
!2141 = !DILocation(line: 485, column: 3, scope: !2132)
!2142 = distinct !DISubprogram(name: "mknodat", scope: !2061, file: !2061, line: 491, type: !2143, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2145)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{!564, !564, !569, !2075, !2069}
!2145 = !{!2146, !2147, !2148, !2149}
!2146 = !DILocalVariable(name: "__fd", arg: 1, scope: !2142, file: !2061, line: 491, type: !564)
!2147 = !DILocalVariable(name: "__path", arg: 2, scope: !2142, file: !2061, line: 491, type: !569)
!2148 = !DILocalVariable(name: "__mode", arg: 3, scope: !2142, file: !2061, line: 491, type: !2075)
!2149 = !DILocalVariable(name: "__dev", arg: 4, scope: !2142, file: !2061, line: 491, type: !2069)
!2150 = !DILocation(line: 0, scope: !2142)
!2151 = !DILocation(line: 494, column: 10, scope: !2142)
!2152 = !DILocation(line: 494, column: 3, scope: !2142)
!2153 = distinct !DISubprogram(name: "stat64", scope: !2061, file: !2061, line: 502, type: !2154, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2176)
!2154 = !DISubroutineType(types: !2155)
!2155 = !{!564, !569, !2156}
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2066, line: 119, size: 1152, elements: !2158)
!2158 = !{!2159, !2160, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2172, !2173, !2174, !2175}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2157, file: !2066, line: 121, baseType: !2069, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2157, file: !2066, line: 123, baseType: !2161, size: 64, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !1820, line: 149, baseType: !589)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2157, file: !2066, line: 124, baseType: !2073, size: 64, offset: 128)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2157, file: !2066, line: 125, baseType: !2075, size: 32, offset: 192)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2157, file: !2066, line: 132, baseType: !2077, size: 32, offset: 224)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2157, file: !2066, line: 133, baseType: !2079, size: 32, offset: 256)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2157, file: !2066, line: 135, baseType: !564, size: 32, offset: 288)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2157, file: !2066, line: 136, baseType: !2069, size: 64, offset: 320)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2157, file: !2066, line: 137, baseType: !1819, size: 64, offset: 384)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2157, file: !2066, line: 143, baseType: !2084, size: 64, offset: 448)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2157, file: !2066, line: 144, baseType: !2171, size: 64, offset: 512)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !1820, line: 180, baseType: !606)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2157, file: !2066, line: 152, baseType: !2088, size: 128, offset: 576)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2157, file: !2066, line: 153, baseType: !2088, size: 128, offset: 704)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2157, file: !2066, line: 154, baseType: !2088, size: 128, offset: 832)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2157, file: !2066, line: 164, baseType: !2098, size: 192, offset: 960)
!2176 = !{!2177, !2178}
!2177 = !DILocalVariable(name: "__path", arg: 1, scope: !2153, file: !2061, line: 502, type: !569)
!2178 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2153, file: !2061, line: 502, type: !2156)
!2179 = !DILocation(line: 0, scope: !2153)
!2180 = !DILocation(line: 504, column: 10, scope: !2153)
!2181 = !DILocation(line: 504, column: 3, scope: !2153)
!2182 = distinct !DISubprogram(name: "lstat64", scope: !2061, file: !2061, line: 509, type: !2154, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2183)
!2183 = !{!2184, !2185}
!2184 = !DILocalVariable(name: "__path", arg: 1, scope: !2182, file: !2061, line: 509, type: !569)
!2185 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2182, file: !2061, line: 509, type: !2156)
!2186 = !DILocation(line: 0, scope: !2182)
!2187 = !DILocation(line: 511, column: 10, scope: !2182)
!2188 = !DILocation(line: 511, column: 3, scope: !2182)
!2189 = distinct !DISubprogram(name: "fstat64", scope: !2061, file: !2061, line: 516, type: !2190, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2192)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!564, !564, !2156}
!2192 = !{!2193, !2194}
!2193 = !DILocalVariable(name: "__fd", arg: 1, scope: !2189, file: !2061, line: 516, type: !564)
!2194 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2189, file: !2061, line: 516, type: !2156)
!2195 = !DILocation(line: 0, scope: !2189)
!2196 = !DILocation(line: 518, column: 10, scope: !2189)
!2197 = !DILocation(line: 518, column: 3, scope: !2189)
!2198 = distinct !DISubprogram(name: "fstatat64", scope: !2061, file: !2061, line: 523, type: !2199, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2201)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!564, !564, !569, !2156, !564}
!2201 = !{!2202, !2203, !2204, !2205}
!2202 = !DILocalVariable(name: "__fd", arg: 1, scope: !2198, file: !2061, line: 523, type: !564)
!2203 = !DILocalVariable(name: "__filename", arg: 2, scope: !2198, file: !2061, line: 523, type: !569)
!2204 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2198, file: !2061, line: 523, type: !2156)
!2205 = !DILocalVariable(name: "__flag", arg: 4, scope: !2198, file: !2061, line: 523, type: !564)
!2206 = !DILocation(line: 0, scope: !2198)
!2207 = !DILocation(line: 526, column: 10, scope: !2198)
!2208 = !DILocation(line: 526, column: 3, scope: !2198)
!2209 = distinct !DISubprogram(name: "dump_iv_info", scope: !3, file: !3, line: 120, type: !2210, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2212)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{null, !1793, !1736}
!2212 = !{!2213, !2214}
!2213 = !DILocalVariable(name: "file", arg: 1, scope: !2209, file: !3, line: 120, type: !1793)
!2214 = !DILocalVariable(name: "iv", arg: 2, scope: !2209, file: !3, line: 120, type: !1736)
!2215 = !DILocation(line: 0, scope: !2209)
!2216 = !DILocation(line: 122, column: 12, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 122, column: 7)
!2218 = !DILocation(line: 122, column: 8, scope: !2217)
!2219 = !DILocation(line: 122, column: 7, scope: !2209)
!2220 = !DILocation(line: 124, column: 7, scope: !2221)
!2221 = distinct !DILexicalBlock(scope: !2217, file: !3, line: 123, column: 5)
!2222 = !DILocation(line: 125, column: 7, scope: !2221)
!2223 = !DILocation(line: 128, column: 11, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 128, column: 7)
!2225 = !DILocation(line: 128, column: 19, scope: !2224)
!2226 = !DILocation(line: 128, column: 16, scope: !2224)
!2227 = !DILocation(line: 129, column: 7, scope: !2224)
!2228 = !DILocation(line: 129, column: 15, scope: !2224)
!2229 = !DILocation(line: 129, column: 11, scope: !2224)
!2230 = !DILocation(line: 128, column: 7, scope: !2209)
!2231 = !DILocation(line: 130, column: 5, scope: !2224)
!2232 = !DILocation(line: 132, column: 24, scope: !2209)
!2233 = !DILocation(line: 132, column: 3, scope: !2209)
!2234 = !DILocation(line: 133, column: 11, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 133, column: 7)
!2236 = !DILocation(line: 133, column: 19, scope: !2235)
!2237 = !DILocation(line: 133, column: 16, scope: !2235)
!2238 = !DILocation(line: 133, column: 7, scope: !2209)
!2239 = !DILocation(line: 135, column: 7, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !2235, file: !3, line: 134, column: 5)
!2241 = !DILocation(line: 136, column: 28, scope: !2240)
!2242 = !DILocation(line: 136, column: 7, scope: !2240)
!2243 = !DILocation(line: 137, column: 7, scope: !2240)
!2244 = !DILocation(line: 138, column: 5, scope: !2240)
!2245 = !DILocation(line: 139, column: 30, scope: !2209)
!2246 = !DILocation(line: 139, column: 3, scope: !2209)
!2247 = !DILocation(line: 141, column: 11, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 141, column: 7)
!2249 = !DILocation(line: 141, column: 23, scope: !2248)
!2250 = !DILocation(line: 141, column: 16, scope: !2248)
!2251 = !DILocation(line: 141, column: 7, scope: !2209)
!2252 = !DILocation(line: 143, column: 20, scope: !2248)
!2253 = !DILocation(line: 143, column: 7, scope: !2248)
!2254 = !DILocation(line: 144, column: 7, scope: !2248)
!2255 = !DILocation(line: 142, column: 5, scope: !2248)
!2256 = !DILocation(line: 146, column: 11, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 146, column: 7)
!2258 = !DILocation(line: 146, column: 19, scope: !2257)
!2259 = !DILocation(line: 146, column: 16, scope: !2257)
!2260 = !DILocation(line: 146, column: 7, scope: !2209)
!2261 = !DILocation(line: 148, column: 7, scope: !2262)
!2262 = distinct !DILexicalBlock(scope: !2257, file: !3, line: 147, column: 5)
!2263 = !DILocation(line: 149, column: 28, scope: !2262)
!2264 = !DILocation(line: 149, column: 7, scope: !2262)
!2265 = !DILocation(line: 150, column: 5, scope: !2262)
!2266 = !DILocation(line: 151, column: 11, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 151, column: 7)
!2268 = !DILocation(line: 151, column: 20, scope: !2267)
!2269 = !DILocation(line: 151, column: 17, scope: !2267)
!2270 = !DILocation(line: 151, column: 7, scope: !2209)
!2271 = !DILocation(line: 153, column: 7, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2267, file: !3, line: 152, column: 5)
!2273 = !DILocation(line: 154, column: 28, scope: !2272)
!2274 = !DILocation(line: 154, column: 7, scope: !2272)
!2275 = !DILocation(line: 155, column: 5, scope: !2272)
!2276 = !DILocation(line: 156, column: 11, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 156, column: 7)
!2278 = !DILocation(line: 156, column: 7, scope: !2277)
!2279 = !DILocation(line: 156, column: 7, scope: !2209)
!2280 = !DILocation(line: 157, column: 5, scope: !2277)
!2281 = !DILocation(line: 158, column: 1, scope: !2209)
!2282 = distinct !DISubprogram(name: "lowpart_subreg", scope: !3, file: !3, line: 164, type: !2283, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2285)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!634, !5, !634, !5}
!2285 = !{!2286, !2287, !2288}
!2286 = !DILocalVariable(name: "outer_mode", arg: 1, scope: !2282, file: !3, line: 164, type: !5)
!2287 = !DILocalVariable(name: "expr", arg: 2, scope: !2282, file: !3, line: 164, type: !634)
!2288 = !DILocalVariable(name: "inner_mode", arg: 3, scope: !2282, file: !3, line: 165, type: !5)
!2289 = !DILocation(line: 0, scope: !2282)
!2290 = !DILocation(line: 168, column: 10, scope: !2282)
!2291 = !DILocation(line: 167, column: 10, scope: !2282)
!2292 = !DILocation(line: 167, column: 3, scope: !2282)
!2293 = distinct !DISubprogram(name: "iv_analysis_loop_init", scope: !3, file: !3, line: 253, type: !2294, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2296)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{null, !987}
!2296 = !{!2297, !2298, !2300, !2301, !2302}
!2297 = !DILocalVariable(name: "loop", arg: 1, scope: !2293, file: !3, line: 253, type: !987)
!2298 = !DILocalVariable(name: "body", scope: !2293, file: !3, line: 255, type: !2299)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!2300 = !DILocalVariable(name: "bb", scope: !2293, file: !3, line: 255, type: !945)
!2301 = !DILocalVariable(name: "blocks", scope: !2293, file: !3, line: 256, type: !571)
!2302 = !DILocalVariable(name: "i", scope: !2293, file: !3, line: 257, type: !7)
!2303 = !DILocation(line: 0, scope: !2293)
!2304 = !DILocation(line: 255, column: 23, scope: !2293)
!2305 = !DILocation(line: 256, column: 19, scope: !2293)
!2306 = !DILocation(line: 259, column: 16, scope: !2293)
!2307 = !DILocation(line: 262, column: 7, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2293, file: !3, line: 262, column: 7)
!2309 = !DILocation(line: 262, column: 7, scope: !2293)
!2310 = !DILocation(line: 264, column: 7, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !2308, file: !3, line: 263, column: 5)
!2312 = !DILocation(line: 265, column: 14, scope: !2311)
!2313 = !DILocation(line: 265, column: 12, scope: !2311)
!2314 = !DILocation(line: 266, column: 19, scope: !2311)
!2315 = !DILocation(line: 267, column: 5, scope: !2311)
!2316 = !DILocation(line: 269, column: 5, scope: !2308)
!2317 = !DILocation(line: 0, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !2319, file: !3, line: 271, column: 3)
!2319 = distinct !DILexicalBlock(scope: !2293, file: !3, line: 271, column: 3)
!2320 = !DILocation(line: 271, column: 8, scope: !2319)
!2321 = !DILocation(line: 0, scope: !2319)
!2322 = !DILocation(line: 271, column: 25, scope: !2318)
!2323 = !DILocation(line: 271, column: 17, scope: !2318)
!2324 = !DILocation(line: 271, column: 3, scope: !2319)
!2325 = !DILocation(line: 273, column: 12, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2318, file: !3, line: 272, column: 5)
!2327 = !DILocation(line: 274, column: 35, scope: !2326)
!2328 = !DILocation(line: 274, column: 7, scope: !2326)
!2329 = !DILocation(line: 271, column: 37, scope: !2318)
!2330 = !DILocation(line: 271, column: 3, scope: !2318)
!2331 = distinct !{!2331, !2324, !2332}
!2332 = !DILocation(line: 275, column: 5, scope: !2319)
!2333 = !DILocation(line: 278, column: 22, scope: !2293)
!2334 = !DILocation(line: 278, column: 3, scope: !2293)
!2335 = !DILocation(line: 279, column: 3, scope: !2293)
!2336 = !DILocation(line: 280, column: 3, scope: !2293)
!2337 = !DILocation(line: 281, column: 3, scope: !2293)
!2338 = !DILocation(line: 282, column: 3, scope: !2293)
!2339 = !DILocation(line: 283, column: 3, scope: !2293)
!2340 = !DILocation(line: 284, column: 7, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2293, file: !3, line: 284, column: 7)
!2342 = !DILocation(line: 284, column: 7, scope: !2293)
!2343 = !DILocation(line: 285, column: 5, scope: !2341)
!2344 = !DILocation(line: 287, column: 3, scope: !2293)
!2345 = !DILocation(line: 288, column: 3, scope: !2293)
!2346 = !DILocation(line: 289, column: 9, scope: !2293)
!2347 = !DILocation(line: 289, column: 3, scope: !2293)
!2348 = !DILocation(line: 290, column: 1, scope: !2293)
!2349 = distinct !DISubprogram(name: "biv_hash", scope: !3, file: !3, line: 237, type: !1119, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2350)
!2350 = !{!2351}
!2351 = !DILocalVariable(name: "b", arg: 1, scope: !2349, file: !3, line: 237, type: !1122)
!2352 = !DILocation(line: 0, scope: !2349)
!2353 = !DILocation(line: 239, column: 42, scope: !2349)
!2354 = !DILocation(line: 239, column: 3, scope: !2349)
!2355 = distinct !DISubprogram(name: "biv_eq", scope: !3, file: !3, line: 245, type: !1127, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2356)
!2356 = !{!2357, !2358}
!2357 = !DILocalVariable(name: "b", arg: 1, scope: !2355, file: !3, line: 245, type: !1122)
!2358 = !DILocalVariable(name: "r", arg: 2, scope: !2355, file: !3, line: 245, type: !1122)
!2359 = !DILocation(line: 0, scope: !2355)
!2360 = !DILocation(line: 247, column: 42, scope: !2355)
!2361 = !DILocation(line: 247, column: 51, scope: !2355)
!2362 = !DILocation(line: 247, column: 48, scope: !2355)
!2363 = !DILocation(line: 247, column: 3, scope: !2355)
!2364 = distinct !DISubprogram(name: "clear_iv_info", scope: !3, file: !3, line: 215, type: !2365, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2367)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{null}
!2367 = !{!2368, !2369, !2370}
!2368 = !DILocalVariable(name: "i", scope: !2364, file: !3, line: 217, type: !7)
!2369 = !DILocalVariable(name: "n_defs", scope: !2364, file: !3, line: 217, type: !7)
!2370 = !DILocalVariable(name: "iv", scope: !2364, file: !3, line: 218, type: !1736)
!2371 = !DILocation(line: 217, column: 24, scope: !2364)
!2372 = !DILocation(line: 0, scope: !2364)
!2373 = !DILocation(line: 220, column: 3, scope: !2364)
!2374 = !DILocation(line: 221, column: 17, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2376, file: !3, line: 221, column: 3)
!2376 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 221, column: 3)
!2377 = !DILocation(line: 221, column: 8, scope: !2376)
!2378 = !DILocation(line: 0, scope: !2376)
!2379 = !DILocation(line: 221, column: 3, scope: !2376)
!2380 = !DILocation(line: 223, column: 12, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 222, column: 5)
!2382 = !DILocation(line: 224, column: 11, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 224, column: 11)
!2384 = !DILocation(line: 224, column: 11, scope: !2381)
!2385 = !DILocation(line: 226, column: 10, scope: !2386)
!2386 = distinct !DILexicalBlock(scope: !2383, file: !3, line: 225, column: 2)
!2387 = !DILocation(line: 226, column: 4, scope: !2386)
!2388 = !DILocation(line: 227, column: 4, scope: !2386)
!2389 = !DILocation(line: 227, column: 20, scope: !2386)
!2390 = !DILocation(line: 228, column: 2, scope: !2386)
!2391 = !DILocation(line: 221, column: 28, scope: !2375)
!2392 = !DILocation(line: 221, column: 3, scope: !2375)
!2393 = distinct !{!2393, !2379, !2394}
!2394 = !DILocation(line: 229, column: 5, scope: !2376)
!2395 = !DILocation(line: 231, column: 15, scope: !2364)
!2396 = !DILocation(line: 231, column: 3, scope: !2364)
!2397 = !DILocation(line: 232, column: 1, scope: !2364)
!2398 = distinct !DISubprogram(name: "check_iv_ref_table_size", scope: !3, file: !3, line: 172, type: !2365, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2399)
!2399 = !{!2400}
!2400 = !DILocalVariable(name: "new_size", scope: !2401, file: !3, line: 176, type: !7)
!2401 = distinct !DILexicalBlock(scope: !2402, file: !3, line: 175, column: 5)
!2402 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 174, column: 7)
!2403 = !DILocation(line: 174, column: 7, scope: !2402)
!2404 = !DILocation(line: 174, column: 27, scope: !2402)
!2405 = !DILocation(line: 174, column: 25, scope: !2402)
!2406 = !DILocation(line: 174, column: 7, scope: !2398)
!2407 = !DILocation(line: 176, column: 78, scope: !2401)
!2408 = !DILocation(line: 176, column: 53, scope: !2401)
!2409 = !DILocation(line: 0, scope: !2401)
!2410 = !DILocation(line: 177, column: 22, scope: !2401)
!2411 = !DILocation(line: 177, column: 20, scope: !2401)
!2412 = !DILocation(line: 178, column: 16, scope: !2401)
!2413 = !DILocation(line: 178, column: 29, scope: !2401)
!2414 = !DILocation(line: 178, column: 15, scope: !2401)
!2415 = !DILocation(line: 179, column: 18, scope: !2401)
!2416 = !DILocation(line: 179, column: 8, scope: !2401)
!2417 = !DILocation(line: 179, column: 39, scope: !2401)
!2418 = !DILocation(line: 178, column: 7, scope: !2401)
!2419 = !DILocation(line: 180, column: 25, scope: !2401)
!2420 = !DILocation(line: 181, column: 5, scope: !2401)
!2421 = !DILocation(line: 182, column: 1, scope: !2398)
!2422 = distinct !DISubprogram(name: "iv_analyze_expr", scope: !3, file: !3, line: 926, type: !2423, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2425)
!2423 = !DISubroutineType(types: !2424)
!2424 = !{!563, !634, !634, !5, !1736}
!2425 = !{!2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437}
!2426 = !DILocalVariable(name: "insn", arg: 1, scope: !2422, file: !3, line: 926, type: !634)
!2427 = !DILocalVariable(name: "rhs", arg: 2, scope: !2422, file: !3, line: 926, type: !634)
!2428 = !DILocalVariable(name: "mode", arg: 3, scope: !2422, file: !3, line: 926, type: !5)
!2429 = !DILocalVariable(name: "iv", arg: 4, scope: !2422, file: !3, line: 926, type: !1736)
!2430 = !DILocalVariable(name: "mby", scope: !2422, file: !3, line: 928, type: !634)
!2431 = !DILocalVariable(name: "tmp", scope: !2422, file: !3, line: 928, type: !634)
!2432 = !DILocalVariable(name: "op0", scope: !2422, file: !3, line: 929, type: !634)
!2433 = !DILocalVariable(name: "op1", scope: !2422, file: !3, line: 929, type: !634)
!2434 = !DILocalVariable(name: "iv0", scope: !2422, file: !3, line: 930, type: !1722)
!2435 = !DILocalVariable(name: "iv1", scope: !2422, file: !3, line: 930, type: !1722)
!2436 = !DILocalVariable(name: "code", scope: !2422, file: !3, line: 931, type: !390)
!2437 = !DILocalVariable(name: "omode", scope: !2422, file: !3, line: 932, type: !5)
!2438 = !DILocation(line: 0, scope: !2422)
!2439 = !DILocation(line: 930, column: 3, scope: !2422)
!2440 = !DILocation(line: 931, column: 24, scope: !2422)
!2441 = !DILocation(line: 934, column: 7, scope: !2422)
!2442 = !DILocation(line: 934, column: 12, scope: !2422)
!2443 = !DILocation(line: 935, column: 7, scope: !2422)
!2444 = !DILocation(line: 935, column: 12, scope: !2422)
!2445 = !DILocation(line: 936, column: 7, scope: !2422)
!2446 = !DILocation(line: 936, column: 12, scope: !2422)
!2447 = !DILocation(line: 938, column: 3, scope: !2422)
!2448 = !DILocation(line: 940, column: 7, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 940, column: 7)
!2450 = !DILocation(line: 941, column: 7, scope: !2449)
!2451 = !DILocation(line: 941, column: 10, scope: !2449)
!2452 = !DILocation(line: 942, column: 15, scope: !2449)
!2453 = !DILocation(line: 942, column: 7, scope: !2449)
!2454 = !DILocation(line: 944, column: 12, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !2456, file: !3, line: 944, column: 11)
!2456 = distinct !DILexicalBlock(scope: !2449, file: !3, line: 943, column: 5)
!2457 = !DILocation(line: 944, column: 11, scope: !2456)
!2458 = !DILocation(line: 947, column: 15, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2456, file: !3, line: 947, column: 11)
!2460 = !DILocation(line: 947, column: 20, scope: !2459)
!2461 = !DILocation(line: 947, column: 11, scope: !2456)
!2462 = !DILocation(line: 949, column: 13, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2459, file: !3, line: 948, column: 2)
!2464 = !DILocation(line: 950, column: 8, scope: !2463)
!2465 = !DILocation(line: 950, column: 20, scope: !2463)
!2466 = !DILocation(line: 951, column: 2, scope: !2463)
!2467 = !DILocation(line: 956, column: 3, scope: !2422)
!2468 = !DILocation(line: 965, column: 13, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 957, column: 5)
!2470 = !DILocation(line: 966, column: 15, scope: !2469)
!2471 = !DILocation(line: 967, column: 7, scope: !2469)
!2472 = !DILocation(line: 971, column: 13, scope: !2469)
!2473 = !DILocation(line: 972, column: 13, scope: !2469)
!2474 = !DILocation(line: 973, column: 7, scope: !2469)
!2475 = !DILocation(line: 976, column: 13, scope: !2469)
!2476 = !DILocation(line: 977, column: 13, scope: !2469)
!2477 = !DILocation(line: 978, column: 12, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 978, column: 11)
!2479 = !DILocation(line: 978, column: 11, scope: !2469)
!2480 = !DILocation(line: 984, column: 12, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 984, column: 11)
!2482 = !DILocation(line: 984, column: 11, scope: !2469)
!2483 = !DILocation(line: 989, column: 13, scope: !2469)
!2484 = !DILocation(line: 990, column: 13, scope: !2469)
!2485 = !DILocation(line: 991, column: 12, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 991, column: 11)
!2487 = !DILocation(line: 991, column: 11, scope: !2469)
!2488 = !DILocation(line: 0, scope: !2469)
!2489 = !DILocation(line: 999, column: 7, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 999, column: 7)
!2491 = !DILocation(line: 1000, column: 7, scope: !2490)
!2492 = !DILocation(line: 1000, column: 11, scope: !2490)
!2493 = !DILocation(line: 999, column: 7, scope: !2422)
!2494 = !DILocation(line: 1003, column: 7, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 1003, column: 7)
!2496 = !DILocation(line: 1004, column: 7, scope: !2495)
!2497 = !DILocation(line: 1004, column: 11, scope: !2495)
!2498 = !DILocation(line: 1003, column: 7, scope: !2422)
!2499 = !DILocation(line: 1007, column: 3, scope: !2422)
!2500 = !DILocation(line: 1011, column: 12, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 1011, column: 11)
!2502 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 1008, column: 5)
!2503 = !DILocation(line: 1011, column: 11, scope: !2502)
!2504 = !DILocation(line: 1016, column: 12, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 1016, column: 11)
!2506 = !DILocation(line: 1016, column: 11, scope: !2502)
!2507 = !DILocation(line: 1022, column: 12, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 1022, column: 11)
!2509 = !DILocation(line: 1022, column: 11, scope: !2502)
!2510 = !DILocation(line: 1027, column: 12, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 1027, column: 11)
!2512 = !DILocation(line: 1027, column: 11, scope: !2502)
!2513 = !DILocation(line: 1032, column: 12, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 1032, column: 11)
!2515 = !DILocation(line: 1032, column: 11, scope: !2502)
!2516 = !DILocation(line: 1040, column: 9, scope: !2422)
!2517 = !DILocation(line: 1041, column: 14, scope: !2422)
!2518 = !DILocation(line: 1041, column: 19, scope: !2422)
!2519 = !DILocation(line: 1041, column: 10, scope: !2422)
!2520 = !DILocation(line: 1041, column: 3, scope: !2422)
!2521 = !DILocation(line: 1042, column: 1, scope: !2422)
!2522 = distinct !DISubprogram(name: "iv_analyze_op", scope: !3, file: !3, line: 1110, type: !2523, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2525)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!563, !634, !634, !1736}
!2525 = !{!2526, !2527, !2528, !2529, !2590}
!2526 = !DILocalVariable(name: "insn", arg: 1, scope: !2522, file: !3, line: 1110, type: !634)
!2527 = !DILocalVariable(name: "op", arg: 2, scope: !2522, file: !3, line: 1110, type: !634)
!2528 = !DILocalVariable(name: "iv", arg: 3, scope: !2522, file: !3, line: 1110, type: !1736)
!2529 = !DILocalVariable(name: "def", scope: !2522, file: !3, line: 1112, type: !2530)
!2530 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_ref", file: !1739, line: 429, baseType: !2531)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "df_ref_d", file: !1739, line: 422, size: 704, elements: !2533)
!2533 = !{!2534, !2573, !2578, !2583}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2532, file: !1739, line: 424, baseType: !2535, size: 512)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_base_ref", file: !1739, line: 356, size: 512, elements: !2536)
!2536 = !{!2537, !2538, !2539, !2540, !2541, !2547, !2568, !2569, !2570, !2571, !2572}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !2535, file: !1739, line: 360, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2535, file: !1739, line: 362, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2535, file: !1739, line: 364, baseType: !564, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2535, file: !1739, line: 365, baseType: !634, size: 64, offset: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !2535, file: !1739, line: 366, baseType: !2542, size: 64, offset: 128)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_link", file: !1739, line: 449, size: 128, elements: !2544)
!2544 = !{!2545, !2546}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2543, file: !1739, line: 451, baseType: !2530, size: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2543, file: !1739, line: 452, baseType: !2542, size: 64, offset: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "insn_info", scope: !2535, file: !1739, line: 370, baseType: !2548, size: 64, offset: 192)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 64)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_insn_info", file: !1739, line: 433, size: 384, elements: !2550)
!2550 = !{!2551, !2552, !2554, !2555, !2556, !2567}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2549, file: !1739, line: 435, baseType: !634, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !2549, file: !1739, line: 436, baseType: !2553, size: 64, offset: 64)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !2549, file: !1739, line: 437, baseType: !2553, size: 64, offset: 128)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "eq_uses", scope: !2549, file: !1739, line: 439, baseType: !2553, size: 64, offset: 192)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "mw_hardregs", scope: !2549, file: !1739, line: 440, baseType: !2557, size: 64, offset: 256)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_mw_hardreg", file: !1739, line: 339, size: 192, elements: !2560)
!2560 = !{!2561, !2562, !2563, !2564, !2565, !2566}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "mw_reg", scope: !2559, file: !1739, line: 341, baseType: !634, size: 64)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2559, file: !1739, line: 344, baseType: !7, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2559, file: !1739, line: 346, baseType: !564, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "start_regno", scope: !2559, file: !1739, line: 347, baseType: !7, size: 32, offset: 96)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "end_regno", scope: !2559, file: !1739, line: 348, baseType: !7, size: 32, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "mw_order", scope: !2559, file: !1739, line: 349, baseType: !7, size: 32, offset: 160)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !2549, file: !1739, line: 444, baseType: !564, size: 32, offset: 320)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "next_reg", scope: !2535, file: !1739, line: 374, baseType: !2531, size: 64, offset: 256)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "prev_reg", scope: !2535, file: !1739, line: 375, baseType: !2531, size: 64, offset: 320)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !2535, file: !1739, line: 376, baseType: !7, size: 32, offset: 384)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2535, file: !1739, line: 379, baseType: !564, size: 32, offset: 416)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "ref_order", scope: !2535, file: !1739, line: 382, baseType: !7, size: 32, offset: 448)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "regular_ref", scope: !2532, file: !1739, line: 425, baseType: !2574, size: 576)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_regular_ref", file: !1739, line: 398, size: 576, elements: !2575)
!2575 = !{!2576, !2577}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2574, file: !1739, line: 400, baseType: !2535, size: 512)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2574, file: !1739, line: 405, baseType: !1749, size: 64, offset: 512)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_ref", scope: !2532, file: !1739, line: 426, baseType: !2579, size: 576)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_artificial_ref", file: !1739, line: 388, size: 576, elements: !2580)
!2580 = !{!2581, !2582}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2579, file: !1739, line: 390, baseType: !2535, size: 512)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2579, file: !1739, line: 394, baseType: !945, size: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "extract_ref", scope: !2532, file: !1739, line: 427, baseType: !2584, size: 704)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_extract_ref", file: !1739, line: 413, size: 704, elements: !2585)
!2585 = !{!2586, !2587, !2588, !2589}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2584, file: !1739, line: 415, baseType: !2574, size: 576)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2584, file: !1739, line: 416, baseType: !564, size: 32, offset: 576)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2584, file: !1739, line: 417, baseType: !564, size: 32, offset: 608)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2584, file: !1739, line: 418, baseType: !5, size: 32, offset: 640)
!2590 = !DILocalVariable(name: "res", scope: !2522, file: !3, line: 1113, type: !555)
!2591 = !DILocation(line: 0, scope: !2522)
!2592 = !DILocation(line: 1112, column: 3, scope: !2522)
!2593 = !DILocation(line: 1112, column: 10, scope: !2522)
!2594 = !DILocation(line: 1115, column: 7, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2522, file: !3, line: 1115, column: 7)
!2596 = !DILocation(line: 1115, column: 7, scope: !2522)
!2597 = !DILocation(line: 1117, column: 7, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 1116, column: 5)
!2599 = !DILocation(line: 1118, column: 18, scope: !2598)
!2600 = !DILocation(line: 1118, column: 7, scope: !2598)
!2601 = !DILocation(line: 1119, column: 16, scope: !2598)
!2602 = !DILocation(line: 1119, column: 7, scope: !2598)
!2603 = !DILocation(line: 1120, column: 25, scope: !2598)
!2604 = !DILocation(line: 1120, column: 7, scope: !2598)
!2605 = !DILocation(line: 1121, column: 5, scope: !2598)
!2606 = !DILocation(line: 1123, column: 7, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2522, file: !3, line: 1123, column: 7)
!2608 = !DILocation(line: 1123, column: 7, scope: !2522)
!2609 = !DILocation(line: 1125, column: 12, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2607, file: !3, line: 1125, column: 12)
!2611 = !DILocation(line: 1125, column: 26, scope: !2610)
!2612 = !DILocation(line: 1125, column: 12, scope: !2607)
!2613 = !DILocation(line: 1127, column: 12, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2615, file: !3, line: 1127, column: 11)
!2615 = distinct !DILexicalBlock(scope: !2610, file: !3, line: 1126, column: 5)
!2616 = !DILocation(line: 1127, column: 11, scope: !2615)
!2617 = !DILocation(line: 1130, column: 33, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2615, file: !3, line: 1130, column: 11)
!2619 = !DILocation(line: 1130, column: 12, scope: !2618)
!2620 = !DILocation(line: 1130, column: 11, scope: !2615)
!2621 = !DILocation(line: 1133, column: 29, scope: !2615)
!2622 = !DILocation(line: 1133, column: 14, scope: !2615)
!2623 = !DILocation(line: 1133, column: 7, scope: !2615)
!2624 = !DILocation(line: 1137, column: 13, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2610, file: !3, line: 1136, column: 5)
!2626 = !DILocation(line: 1138, column: 15, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2625, file: !3, line: 1138, column: 11)
!2628 = !DILocation(line: 1138, column: 11, scope: !2625)
!2629 = !DILocation(line: 1140, column: 8, scope: !2630)
!2630 = distinct !DILexicalBlock(scope: !2631, file: !3, line: 1140, column: 8)
!2631 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 1139, column: 2)
!2632 = !DILocation(line: 1140, column: 8, scope: !2631)
!2633 = !DILocation(line: 1141, column: 6, scope: !2630)
!2634 = !DILocation(line: 0, scope: !2607)
!2635 = !DILocation(line: 1146, column: 7, scope: !2522)
!2636 = !DILocation(line: 1148, column: 7, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 1147, column: 5)
!2638 = distinct !DILexicalBlock(scope: !2522, file: !3, line: 1146, column: 7)
!2639 = !DILocation(line: 1150, column: 11, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2637, file: !3, line: 1150, column: 11)
!2641 = !DILocation(line: 1150, column: 11, scope: !2637)
!2642 = !DILocation(line: 1152, column: 4, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2640, file: !3, line: 1151, column: 2)
!2644 = !DILocation(line: 1153, column: 18, scope: !2643)
!2645 = !DILocation(line: 1153, column: 4, scope: !2643)
!2646 = !DILocation(line: 1154, column: 13, scope: !2643)
!2647 = !DILocation(line: 1154, column: 4, scope: !2643)
!2648 = !DILocation(line: 1155, column: 2, scope: !2643)
!2649 = !DILocation(line: 1160, column: 12, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2522, file: !3, line: 1159, column: 7)
!2651 = !DILocation(line: 1160, column: 5, scope: !2650)
!2652 = !DILocation(line: 1162, column: 26, scope: !2522)
!2653 = !DILocation(line: 1162, column: 10, scope: !2522)
!2654 = !DILocation(line: 1162, column: 3, scope: !2522)
!2655 = !DILocation(line: 1163, column: 1, scope: !2522)
!2656 = distinct !DISubprogram(name: "iv_extend", scope: !3, file: !3, line: 445, type: !2657, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2659)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{!563, !1736, !390, !5}
!2659 = !{!2660, !2661, !2662, !2663}
!2660 = !DILocalVariable(name: "iv", arg: 1, scope: !2656, file: !3, line: 445, type: !1736)
!2661 = !DILocalVariable(name: "extend", arg: 2, scope: !2656, file: !3, line: 445, type: !390)
!2662 = !DILocalVariable(name: "mode", arg: 3, scope: !2656, file: !3, line: 445, type: !5)
!2663 = !DILocalVariable(name: "val", scope: !2664, file: !3, line: 451, type: !634)
!2664 = distinct !DILexicalBlock(scope: !2665, file: !3, line: 450, column: 5)
!2665 = distinct !DILexicalBlock(scope: !2656, file: !3, line: 448, column: 7)
!2666 = !DILocation(line: 0, scope: !2656)
!2667 = !DILocation(line: 448, column: 11, scope: !2665)
!2668 = !DILocation(line: 448, column: 19, scope: !2665)
!2669 = !DILocation(line: 448, column: 16, scope: !2665)
!2670 = !DILocation(line: 449, column: 7, scope: !2665)
!2671 = !DILocation(line: 449, column: 15, scope: !2665)
!2672 = !DILocation(line: 449, column: 11, scope: !2665)
!2673 = !DILocation(line: 448, column: 7, scope: !2656)
!2674 = !DILocation(line: 451, column: 17, scope: !2664)
!2675 = !DILocation(line: 0, scope: !2664)
!2676 = !DILocation(line: 452, column: 56, scope: !2664)
!2677 = !DILocation(line: 452, column: 13, scope: !2664)
!2678 = !DILocation(line: 454, column: 11, scope: !2664)
!2679 = !DILocation(line: 454, column: 16, scope: !2664)
!2680 = !DILocation(line: 455, column: 11, scope: !2664)
!2681 = !DILocation(line: 455, column: 18, scope: !2664)
!2682 = !DILocation(line: 456, column: 34, scope: !2664)
!2683 = !DILocation(line: 456, column: 11, scope: !2664)
!2684 = !DILocation(line: 456, column: 16, scope: !2664)
!2685 = !DILocation(line: 457, column: 19, scope: !2664)
!2686 = !DILocation(line: 457, column: 11, scope: !2664)
!2687 = !DILocation(line: 457, column: 17, scope: !2664)
!2688 = !DILocation(line: 458, column: 18, scope: !2664)
!2689 = !DILocation(line: 458, column: 11, scope: !2664)
!2690 = !DILocation(line: 458, column: 16, scope: !2664)
!2691 = !DILocation(line: 462, column: 19, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2656, file: !3, line: 462, column: 7)
!2693 = !DILocation(line: 462, column: 12, scope: !2692)
!2694 = !DILocation(line: 462, column: 7, scope: !2656)
!2695 = !DILocation(line: 465, column: 11, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2656, file: !3, line: 465, column: 7)
!2697 = !DILocation(line: 465, column: 18, scope: !2696)
!2698 = !DILocation(line: 466, column: 7, scope: !2696)
!2699 = !DILocation(line: 466, column: 21, scope: !2696)
!2700 = !DILocation(line: 465, column: 7, scope: !2656)
!2701 = !DILocation(line: 469, column: 14, scope: !2656)
!2702 = !DILocation(line: 471, column: 3, scope: !2656)
!2703 = !DILocation(line: 472, column: 1, scope: !2656)
!2704 = distinct !DISubprogram(name: "iv_neg", scope: !3, file: !3, line: 477, type: !2705, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2707)
!2705 = !DISubroutineType(types: !2706)
!2706 = !{!563, !1736}
!2707 = !{!2708}
!2708 = !DILocalVariable(name: "iv", arg: 1, scope: !2704, file: !3, line: 477, type: !1736)
!2709 = !DILocation(line: 0, scope: !2704)
!2710 = !DILocation(line: 479, column: 11, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2704, file: !3, line: 479, column: 7)
!2712 = !DILocation(line: 479, column: 18, scope: !2711)
!2713 = !DILocation(line: 0, scope: !2711)
!2714 = !DILocation(line: 479, column: 7, scope: !2704)
!2715 = !DILocation(line: 482, column: 14, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2711, file: !3, line: 480, column: 5)
!2717 = !DILocation(line: 481, column: 18, scope: !2716)
!2718 = !DILocation(line: 481, column: 16, scope: !2716)
!2719 = !DILocation(line: 483, column: 47, scope: !2716)
!2720 = !DILocation(line: 484, column: 14, scope: !2716)
!2721 = !DILocation(line: 483, column: 18, scope: !2716)
!2722 = !DILocation(line: 483, column: 16, scope: !2716)
!2723 = !DILocation(line: 485, column: 5, scope: !2716)
!2724 = !DILocation(line: 489, column: 15, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2711, file: !3, line: 487, column: 5)
!2726 = !DILocation(line: 488, column: 19, scope: !2725)
!2727 = !DILocation(line: 488, column: 17, scope: !2725)
!2728 = !DILocation(line: 490, column: 47, scope: !2725)
!2729 = !DILocation(line: 491, column: 14, scope: !2725)
!2730 = !DILocation(line: 490, column: 18, scope: !2725)
!2731 = !DILocation(line: 490, column: 16, scope: !2725)
!2732 = !DILocation(line: 494, column: 3, scope: !2704)
!2733 = distinct !DISubprogram(name: "iv_add", scope: !3, file: !3, line: 500, type: !2734, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2736)
!2734 = !DISubroutineType(types: !2735)
!2735 = !{!563, !1736, !1736, !390}
!2736 = !{!2737, !2738, !2739, !2740, !2741}
!2737 = !DILocalVariable(name: "iv0", arg: 1, scope: !2733, file: !3, line: 500, type: !1736)
!2738 = !DILocalVariable(name: "iv1", arg: 2, scope: !2733, file: !3, line: 500, type: !1736)
!2739 = !DILocalVariable(name: "op", arg: 3, scope: !2733, file: !3, line: 500, type: !390)
!2740 = !DILocalVariable(name: "mode", scope: !2733, file: !3, line: 502, type: !5)
!2741 = !DILocalVariable(name: "arg", scope: !2733, file: !3, line: 503, type: !634)
!2742 = !DILocation(line: 0, scope: !2733)
!2743 = !DILocation(line: 506, column: 12, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 506, column: 7)
!2745 = !DILocation(line: 506, column: 19, scope: !2744)
!2746 = !DILocation(line: 507, column: 7, scope: !2744)
!2747 = !DILocation(line: 507, column: 15, scope: !2744)
!2748 = !DILocation(line: 507, column: 28, scope: !2744)
!2749 = !DILocation(line: 507, column: 20, scope: !2744)
!2750 = !DILocation(line: 508, column: 7, scope: !2744)
!2751 = !DILocation(line: 508, column: 15, scope: !2744)
!2752 = !DILocation(line: 508, column: 23, scope: !2744)
!2753 = !DILocation(line: 508, column: 20, scope: !2744)
!2754 = !DILocation(line: 509, column: 7, scope: !2744)
!2755 = !DILocation(line: 509, column: 10, scope: !2744)
!2756 = !DILocation(line: 509, column: 45, scope: !2744)
!2757 = !DILocation(line: 509, column: 43, scope: !2744)
!2758 = !DILocation(line: 506, column: 7, scope: !2733)
!2759 = !DILocation(line: 511, column: 24, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2744, file: !3, line: 510, column: 5)
!2761 = !DILocation(line: 513, column: 16, scope: !2760)
!2762 = !DILocation(line: 512, column: 19, scope: !2760)
!2763 = !DILocation(line: 512, column: 17, scope: !2760)
!2764 = !DILocation(line: 514, column: 5, scope: !2760)
!2765 = !DILocation(line: 515, column: 12, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 515, column: 7)
!2767 = !DILocation(line: 515, column: 19, scope: !2766)
!2768 = !DILocation(line: 516, column: 7, scope: !2766)
!2769 = !DILocation(line: 516, column: 15, scope: !2766)
!2770 = !DILocation(line: 516, column: 28, scope: !2766)
!2771 = !DILocation(line: 516, column: 20, scope: !2766)
!2772 = !DILocation(line: 517, column: 7, scope: !2766)
!2773 = !DILocation(line: 517, column: 15, scope: !2766)
!2774 = !DILocation(line: 517, column: 23, scope: !2766)
!2775 = !DILocation(line: 517, column: 20, scope: !2766)
!2776 = !DILocation(line: 518, column: 7, scope: !2766)
!2777 = !DILocation(line: 518, column: 10, scope: !2766)
!2778 = !DILocation(line: 518, column: 45, scope: !2766)
!2779 = !DILocation(line: 518, column: 43, scope: !2766)
!2780 = !DILocation(line: 515, column: 7, scope: !2733)
!2781 = !DILocation(line: 520, column: 24, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2766, file: !3, line: 519, column: 5)
!2783 = !DILocation(line: 522, column: 16, scope: !2782)
!2784 = !DILocation(line: 521, column: 19, scope: !2782)
!2785 = !DILocation(line: 521, column: 17, scope: !2782)
!2786 = !DILocation(line: 523, column: 5, scope: !2782)
!2787 = !DILocation(line: 525, column: 15, scope: !2733)
!2788 = !DILocation(line: 526, column: 20, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 526, column: 7)
!2790 = !DILocation(line: 526, column: 12, scope: !2789)
!2791 = !DILocation(line: 526, column: 7, scope: !2733)
!2792 = !DILocation(line: 529, column: 12, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 529, column: 7)
!2794 = !DILocation(line: 529, column: 19, scope: !2793)
!2795 = !DILocation(line: 529, column: 30, scope: !2793)
!2796 = !DILocation(line: 541, column: 12, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 541, column: 7)
!2798 = !DILocation(line: 529, column: 38, scope: !2793)
!2799 = !DILocation(line: 529, column: 45, scope: !2793)
!2800 = !DILocation(line: 529, column: 7, scope: !2733)
!2801 = !DILocation(line: 531, column: 16, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 531, column: 11)
!2803 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 530, column: 5)
!2804 = !DILocation(line: 531, column: 29, scope: !2802)
!2805 = !DILocation(line: 531, column: 21, scope: !2802)
!2806 = !DILocation(line: 531, column: 11, scope: !2803)
!2807 = !DILocation(line: 534, column: 55, scope: !2803)
!2808 = !DILocation(line: 534, column: 66, scope: !2803)
!2809 = !DILocation(line: 534, column: 19, scope: !2803)
!2810 = !DILocation(line: 534, column: 17, scope: !2803)
!2811 = !DILocation(line: 535, column: 55, scope: !2803)
!2812 = !DILocation(line: 535, column: 66, scope: !2803)
!2813 = !DILocation(line: 535, column: 19, scope: !2803)
!2814 = !DILocation(line: 535, column: 17, scope: !2803)
!2815 = !DILocation(line: 537, column: 7, scope: !2803)
!2816 = !DILocation(line: 541, column: 19, scope: !2797)
!2817 = !DILocation(line: 542, column: 7, scope: !2797)
!2818 = !DILocation(line: 542, column: 15, scope: !2797)
!2819 = !DILocation(line: 542, column: 20, scope: !2797)
!2820 = !DILocation(line: 543, column: 7, scope: !2797)
!2821 = !DILocation(line: 543, column: 15, scope: !2797)
!2822 = !DILocation(line: 543, column: 23, scope: !2797)
!2823 = !DILocation(line: 543, column: 20, scope: !2797)
!2824 = !DILocation(line: 541, column: 7, scope: !2733)
!2825 = !DILocation(line: 545, column: 56, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 544, column: 5)
!2827 = !DILocation(line: 545, column: 68, scope: !2826)
!2828 = !DILocation(line: 545, column: 20, scope: !2826)
!2829 = !DILocation(line: 545, column: 18, scope: !2826)
!2830 = !DILocation(line: 546, column: 7, scope: !2826)
!2831 = !DILocation(line: 550, column: 7, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 549, column: 7)
!2833 = !DILocation(line: 550, column: 15, scope: !2832)
!2834 = !DILocation(line: 550, column: 20, scope: !2832)
!2835 = !DILocation(line: 551, column: 7, scope: !2832)
!2836 = !DILocation(line: 551, column: 15, scope: !2832)
!2837 = !DILocation(line: 551, column: 23, scope: !2832)
!2838 = !DILocation(line: 551, column: 20, scope: !2832)
!2839 = !DILocation(line: 549, column: 7, scope: !2733)
!2840 = !DILocation(line: 553, column: 18, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 552, column: 5)
!2842 = !DILocation(line: 554, column: 14, scope: !2841)
!2843 = !DILocation(line: 555, column: 14, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2841, file: !3, line: 555, column: 11)
!2845 = !DILocation(line: 556, column: 4, scope: !2844)
!2846 = !DILocation(line: 556, column: 8, scope: !2844)
!2847 = !DILocation(line: 555, column: 11, scope: !2841)
!2848 = !DILocation(line: 559, column: 58, scope: !2841)
!2849 = !DILocation(line: 559, column: 20, scope: !2841)
!2850 = !DILocation(line: 559, column: 18, scope: !2841)
!2851 = !DILocation(line: 560, column: 7, scope: !2841)
!2852 = !DILocation(line: 564, column: 1, scope: !2733)
!2853 = distinct !DISubprogram(name: "iv_mult", scope: !3, file: !3, line: 569, type: !2854, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2856)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!563, !1736, !634}
!2856 = !{!2857, !2858, !2859}
!2857 = !DILocalVariable(name: "iv", arg: 1, scope: !2853, file: !3, line: 569, type: !1736)
!2858 = !DILocalVariable(name: "mby", arg: 2, scope: !2853, file: !3, line: 569, type: !634)
!2859 = !DILocalVariable(name: "mode", scope: !2853, file: !3, line: 571, type: !5)
!2860 = !DILocation(line: 0, scope: !2853)
!2861 = !DILocation(line: 571, column: 32, scope: !2853)
!2862 = !DILocation(line: 573, column: 7, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 573, column: 7)
!2864 = !DILocation(line: 573, column: 22, scope: !2863)
!2865 = !DILocation(line: 574, column: 7, scope: !2863)
!2866 = !DILocation(line: 574, column: 10, scope: !2863)
!2867 = !DILocation(line: 574, column: 25, scope: !2863)
!2868 = !DILocation(line: 573, column: 7, scope: !2853)
!2869 = !DILocation(line: 577, column: 11, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 577, column: 7)
!2871 = !DILocation(line: 577, column: 18, scope: !2870)
!2872 = !DILocation(line: 577, column: 7, scope: !2853)
!2873 = !DILocation(line: 579, column: 55, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2870, file: !3, line: 578, column: 5)
!2875 = !DILocation(line: 579, column: 18, scope: !2874)
!2876 = !DILocation(line: 579, column: 16, scope: !2874)
!2877 = !DILocation(line: 580, column: 55, scope: !2874)
!2878 = !DILocation(line: 580, column: 18, scope: !2874)
!2879 = !DILocation(line: 580, column: 16, scope: !2874)
!2880 = !DILocation(line: 581, column: 5, scope: !2874)
!2881 = !DILocation(line: 584, column: 56, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2870, file: !3, line: 583, column: 5)
!2883 = !DILocation(line: 584, column: 19, scope: !2882)
!2884 = !DILocation(line: 584, column: 17, scope: !2882)
!2885 = !DILocation(line: 585, column: 55, scope: !2882)
!2886 = !DILocation(line: 585, column: 18, scope: !2882)
!2887 = !DILocation(line: 585, column: 16, scope: !2882)
!2888 = !DILocation(line: 589, column: 1, scope: !2853)
!2889 = distinct !DISubprogram(name: "iv_shift", scope: !3, file: !3, line: 594, type: !2854, scopeLine: 595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2890)
!2890 = !{!2891, !2892, !2893}
!2891 = !DILocalVariable(name: "iv", arg: 1, scope: !2889, file: !3, line: 594, type: !1736)
!2892 = !DILocalVariable(name: "mby", arg: 2, scope: !2889, file: !3, line: 594, type: !634)
!2893 = !DILocalVariable(name: "mode", scope: !2889, file: !3, line: 596, type: !5)
!2894 = !DILocation(line: 0, scope: !2889)
!2895 = !DILocation(line: 596, column: 32, scope: !2889)
!2896 = !DILocation(line: 598, column: 7, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 598, column: 7)
!2898 = !DILocation(line: 598, column: 22, scope: !2897)
!2899 = !DILocation(line: 599, column: 7, scope: !2897)
!2900 = !DILocation(line: 599, column: 10, scope: !2897)
!2901 = !DILocation(line: 599, column: 25, scope: !2897)
!2902 = !DILocation(line: 598, column: 7, scope: !2889)
!2903 = !DILocation(line: 602, column: 11, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 602, column: 7)
!2905 = !DILocation(line: 602, column: 18, scope: !2904)
!2906 = !DILocation(line: 602, column: 7, scope: !2889)
!2907 = !DILocation(line: 604, column: 57, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 603, column: 5)
!2909 = !DILocation(line: 604, column: 18, scope: !2908)
!2910 = !DILocation(line: 604, column: 16, scope: !2908)
!2911 = !DILocation(line: 605, column: 57, scope: !2908)
!2912 = !DILocation(line: 605, column: 18, scope: !2908)
!2913 = !DILocation(line: 605, column: 16, scope: !2908)
!2914 = !DILocation(line: 606, column: 5, scope: !2908)
!2915 = !DILocation(line: 609, column: 58, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 608, column: 5)
!2917 = !DILocation(line: 609, column: 19, scope: !2916)
!2918 = !DILocation(line: 609, column: 17, scope: !2916)
!2919 = !DILocation(line: 610, column: 57, scope: !2916)
!2920 = !DILocation(line: 610, column: 18, scope: !2916)
!2921 = !DILocation(line: 610, column: 16, scope: !2916)
!2922 = !DILocation(line: 614, column: 1, scope: !2889)
!2923 = distinct !DISubprogram(name: "iv_analyze", scope: !3, file: !3, line: 1168, type: !2523, scopeLine: 1169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2924)
!2924 = !{!2925, !2926, !2927, !2928}
!2925 = !DILocalVariable(name: "insn", arg: 1, scope: !2923, file: !3, line: 1168, type: !634)
!2926 = !DILocalVariable(name: "val", arg: 2, scope: !2923, file: !3, line: 1168, type: !634)
!2927 = !DILocalVariable(name: "iv", arg: 3, scope: !2923, file: !3, line: 1168, type: !1736)
!2928 = !DILocalVariable(name: "reg", scope: !2923, file: !3, line: 1170, type: !634)
!2929 = !DILocation(line: 0, scope: !2923)
!2930 = !DILocation(line: 1176, column: 7, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 1176, column: 7)
!2932 = !DILocation(line: 1176, column: 7, scope: !2923)
!2933 = !DILocation(line: 1178, column: 11, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 1178, column: 11)
!2935 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 1177, column: 5)
!2936 = !DILocation(line: 1178, column: 26, scope: !2934)
!2937 = !DILocation(line: 1178, column: 11, scope: !2935)
!2938 = !DILocation(line: 1179, column: 8, scope: !2934)
!2939 = !DILocation(line: 1179, column: 2, scope: !2934)
!2940 = !DILocation(line: 0, scope: !2934)
!2941 = !DILocation(line: 1183, column: 7, scope: !2935)
!2942 = !DILocation(line: 1183, column: 15, scope: !2935)
!2943 = !DILocation(line: 1183, column: 14, scope: !2935)
!2944 = !DILocation(line: 1184, column: 9, scope: !2935)
!2945 = distinct !{!2945, !2941, !2944}
!2946 = !DILocation(line: 1187, column: 10, scope: !2923)
!2947 = !DILocation(line: 1187, column: 3, scope: !2923)
!2948 = distinct !DISubprogram(name: "simple_reg_p", scope: !3, file: !3, line: 188, type: !2949, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2951)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{!563, !634}
!2951 = !{!2952, !2953}
!2952 = !DILocalVariable(name: "reg", arg: 1, scope: !2948, file: !3, line: 188, type: !634)
!2953 = !DILocalVariable(name: "r", scope: !2948, file: !3, line: 190, type: !7)
!2954 = !DILocation(line: 0, scope: !2948)
!2955 = !DILocation(line: 192, column: 7, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 192, column: 7)
!2957 = !DILocation(line: 192, column: 22, scope: !2956)
!2958 = !DILocation(line: 192, column: 7, scope: !2948)
!2959 = !DILocation(line: 194, column: 12, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 194, column: 11)
!2961 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 193, column: 5)
!2962 = !DILocation(line: 194, column: 11, scope: !2961)
!2963 = !DILocation(line: 196, column: 13, scope: !2961)
!2964 = !DILocation(line: 0, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 199, column: 7)
!2966 = !DILocation(line: 199, column: 8, scope: !2965)
!2967 = !DILocation(line: 197, column: 5, scope: !2961)
!2968 = !DILocation(line: 199, column: 7, scope: !2948)
!2969 = !DILocation(line: 202, column: 7, scope: !2948)
!2970 = !DILocation(line: 203, column: 7, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 203, column: 7)
!2972 = !DILocation(line: 203, column: 7, scope: !2948)
!2973 = !DILocation(line: 206, column: 7, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 206, column: 7)
!2975 = !DILocation(line: 206, column: 39, scope: !2974)
!2976 = !DILocation(line: 210, column: 1, scope: !2948)
!2977 = distinct !DISubprogram(name: "iv_analyze_result", scope: !3, file: !3, line: 1193, type: !2523, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2978)
!2978 = !{!2979, !2980, !2981, !2982}
!2979 = !DILocalVariable(name: "insn", arg: 1, scope: !2977, file: !3, line: 1193, type: !634)
!2980 = !DILocalVariable(name: "def", arg: 2, scope: !2977, file: !3, line: 1193, type: !634)
!2981 = !DILocalVariable(name: "iv", arg: 3, scope: !2977, file: !3, line: 1193, type: !1736)
!2982 = !DILocalVariable(name: "adef", scope: !2977, file: !3, line: 1195, type: !2530)
!2983 = !DILocation(line: 0, scope: !2977)
!2984 = !DILocation(line: 1197, column: 10, scope: !2977)
!2985 = !DILocation(line: 1198, column: 8, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 1198, column: 7)
!2987 = !DILocation(line: 1198, column: 7, scope: !2977)
!2988 = !DILocation(line: 1201, column: 10, scope: !2977)
!2989 = !DILocation(line: 1201, column: 3, scope: !2977)
!2990 = !DILocation(line: 1202, column: 1, scope: !2977)
!2991 = distinct !DISubprogram(name: "iv_analyze_def", scope: !3, file: !3, line: 1047, type: !2992, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2994)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{!563, !2530, !1736}
!2994 = !{!2995, !2996, !2997, !2998, !2999, !3000}
!2995 = !DILocalVariable(name: "def", arg: 1, scope: !2991, file: !3, line: 1047, type: !2530)
!2996 = !DILocalVariable(name: "iv", arg: 2, scope: !2991, file: !3, line: 1047, type: !1736)
!2997 = !DILocalVariable(name: "insn", scope: !2991, file: !3, line: 1049, type: !634)
!2998 = !DILocalVariable(name: "reg", scope: !2991, file: !3, line: 1050, type: !634)
!2999 = !DILocalVariable(name: "set", scope: !2991, file: !3, line: 1051, type: !634)
!3000 = !DILocalVariable(name: "rhs", scope: !2991, file: !3, line: 1051, type: !634)
!3001 = !DILocation(line: 0, scope: !2991)
!3002 = !DILocation(line: 1049, column: 14, scope: !2991)
!3003 = !DILocation(line: 1050, column: 13, scope: !2991)
!3004 = !DILocation(line: 1053, column: 7, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 1053, column: 7)
!3006 = !DILocation(line: 1053, column: 7, scope: !2991)
!3007 = !DILocation(line: 1055, column: 7, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 1054, column: 5)
!3009 = !DILocation(line: 1056, column: 18, scope: !3008)
!3010 = !DILocation(line: 1056, column: 7, scope: !3008)
!3011 = !DILocation(line: 1057, column: 16, scope: !3008)
!3012 = !DILocation(line: 1057, column: 7, scope: !3008)
!3013 = !DILocation(line: 1058, column: 25, scope: !3008)
!3014 = !DILocation(line: 1058, column: 7, scope: !3008)
!3015 = !DILocation(line: 1059, column: 5, scope: !3008)
!3016 = !DILocation(line: 1061, column: 3, scope: !2991)
!3017 = !DILocation(line: 1062, column: 7, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 1062, column: 7)
!3019 = !DILocation(line: 1062, column: 7, scope: !2991)
!3020 = !DILocation(line: 1064, column: 11, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 1064, column: 11)
!3022 = distinct !DILexicalBlock(scope: !3018, file: !3, line: 1063, column: 5)
!3023 = !DILocation(line: 1064, column: 11, scope: !3022)
!3024 = !DILocation(line: 1065, column: 2, scope: !3021)
!3025 = !DILocation(line: 1066, column: 14, scope: !3022)
!3026 = !DILocation(line: 1066, column: 13, scope: !3022)
!3027 = !DILocation(line: 1067, column: 18, scope: !3022)
!3028 = !DILocation(line: 1067, column: 23, scope: !3022)
!3029 = !DILocation(line: 1067, column: 7, scope: !3022)
!3030 = !DILocation(line: 1070, column: 7, scope: !2991)
!3031 = !DILocation(line: 1070, column: 12, scope: !2991)
!3032 = !DILocation(line: 1071, column: 7, scope: !2991)
!3033 = !DILocation(line: 1071, column: 12, scope: !2991)
!3034 = !DILocation(line: 1072, column: 7, scope: !2991)
!3035 = !DILocation(line: 1072, column: 12, scope: !2991)
!3036 = !DILocation(line: 1074, column: 8, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 1074, column: 7)
!3038 = !DILocation(line: 1074, column: 7, scope: !2991)
!3039 = !DILocation(line: 1077, column: 9, scope: !2991)
!3040 = !DILocation(line: 1078, column: 8, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 1078, column: 7)
!3042 = !DILocation(line: 1078, column: 7, scope: !2991)
!3043 = !DILocation(line: 1081, column: 8, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 1081, column: 7)
!3045 = !DILocation(line: 1081, column: 7, scope: !2991)
!3046 = !DILocation(line: 1084, column: 3, scope: !2991)
!3047 = !DILocation(line: 1085, column: 9, scope: !2991)
!3048 = !DILocation(line: 1086, column: 7, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 1086, column: 7)
!3050 = !DILocation(line: 1086, column: 7, scope: !2991)
!3051 = !DILocation(line: 1087, column: 11, scope: !3049)
!3052 = !DILocation(line: 1087, column: 5, scope: !3049)
!3053 = !DILocation(line: 1089, column: 11, scope: !3049)
!3054 = !DILocation(line: 0, scope: !3049)
!3055 = !DILocation(line: 1091, column: 31, scope: !2991)
!3056 = !DILocation(line: 1091, column: 3, scope: !2991)
!3057 = !DILocation(line: 1092, column: 3, scope: !2991)
!3058 = !DILocation(line: 1094, column: 7, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 1094, column: 7)
!3060 = !DILocation(line: 1094, column: 7, scope: !2991)
!3061 = !DILocation(line: 1096, column: 7, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 1095, column: 5)
!3063 = !DILocation(line: 1097, column: 16, scope: !3062)
!3064 = !DILocation(line: 1097, column: 7, scope: !3062)
!3065 = !DILocation(line: 1098, column: 25, scope: !3062)
!3066 = !DILocation(line: 1098, column: 7, scope: !3062)
!3067 = !DILocation(line: 1099, column: 16, scope: !3062)
!3068 = !DILocation(line: 1099, column: 7, scope: !3062)
!3069 = !DILocation(line: 1100, column: 21, scope: !3062)
!3070 = !DILocation(line: 1100, column: 7, scope: !3062)
!3071 = !DILocation(line: 1101, column: 16, scope: !3062)
!3072 = !DILocation(line: 1101, column: 7, scope: !3062)
!3073 = !DILocation(line: 1102, column: 5, scope: !3062)
!3074 = !DILocation(line: 1104, column: 14, scope: !2991)
!3075 = !DILocation(line: 1104, column: 19, scope: !2991)
!3076 = !DILocation(line: 1104, column: 3, scope: !2991)
!3077 = !DILocation(line: 1105, column: 1, scope: !2991)
!3078 = distinct !DISubprogram(name: "biv_p", scope: !3, file: !3, line: 1209, type: !3079, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3081)
!3079 = !DISubroutineType(types: !3080)
!3080 = !{!563, !634, !634}
!3081 = !{!3082, !3083, !3084, !3085, !3086}
!3082 = !DILocalVariable(name: "insn", arg: 1, scope: !3078, file: !3, line: 1209, type: !634)
!3083 = !DILocalVariable(name: "reg", arg: 2, scope: !3078, file: !3, line: 1209, type: !634)
!3084 = !DILocalVariable(name: "iv", scope: !3078, file: !3, line: 1211, type: !1722)
!3085 = !DILocalVariable(name: "def", scope: !3078, file: !3, line: 1212, type: !2530)
!3086 = !DILocalVariable(name: "last_def", scope: !3078, file: !3, line: 1212, type: !2530)
!3087 = !DILocation(line: 0, scope: !3078)
!3088 = !DILocation(line: 1211, column: 3, scope: !3078)
!3089 = !DILocation(line: 1212, column: 3, scope: !3078)
!3090 = !DILocation(line: 1214, column: 8, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 1214, column: 7)
!3092 = !DILocation(line: 1214, column: 7, scope: !3078)
!3093 = !DILocation(line: 1217, column: 9, scope: !3078)
!3094 = !DILocation(line: 1218, column: 3, scope: !3078)
!3095 = !DILocation(line: 1219, column: 8, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 1219, column: 7)
!3097 = !DILocation(line: 1221, column: 7, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 1221, column: 7)
!3099 = !DILocation(line: 1221, column: 16, scope: !3098)
!3100 = !DILocation(line: 1219, column: 7, scope: !3078)
!3101 = !DILocation(line: 1224, column: 8, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 1224, column: 7)
!3103 = !DILocation(line: 1224, column: 7, scope: !3078)
!3104 = !DILocation(line: 1227, column: 13, scope: !3078)
!3105 = !DILocation(line: 1227, column: 21, scope: !3078)
!3106 = !DILocation(line: 1227, column: 18, scope: !3078)
!3107 = !DILocation(line: 1227, column: 10, scope: !3078)
!3108 = !DILocation(line: 1227, column: 3, scope: !3078)
!3109 = !DILocation(line: 1228, column: 1, scope: !3078)
!3110 = distinct !DISubprogram(name: "latch_dominating_def", scope: !3, file: !3, line: 298, type: !3111, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3113)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{!563, !634, !2553}
!3113 = !{!3114, !3115, !3116, !3117, !3118, !3119}
!3114 = !DILocalVariable(name: "reg", arg: 1, scope: !3110, file: !3, line: 298, type: !634)
!3115 = !DILocalVariable(name: "def", arg: 2, scope: !3110, file: !3, line: 298, type: !2553)
!3116 = !DILocalVariable(name: "single_rd", scope: !3110, file: !3, line: 300, type: !2530)
!3117 = !DILocalVariable(name: "adef", scope: !3110, file: !3, line: 300, type: !2530)
!3118 = !DILocalVariable(name: "regno", scope: !3110, file: !3, line: 301, type: !7)
!3119 = !DILocalVariable(name: "bb_info", scope: !3110, file: !3, line: 302, type: !1737)
!3120 = !DILocation(line: 0, scope: !3110)
!3121 = !DILocation(line: 301, column: 20, scope: !3110)
!3122 = !DILocation(line: 302, column: 35, scope: !3110)
!3123 = !DILocation(line: 304, column: 15, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 304, column: 3)
!3125 = !DILocation(line: 0, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 306, column: 11)
!3127 = distinct !DILexicalBlock(scope: !3128, file: !3, line: 305, column: 5)
!3128 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 304, column: 3)
!3129 = !DILocation(line: 304, column: 8, scope: !3124)
!3130 = !DILocation(line: 0, scope: !3124)
!3131 = !DILocation(line: 304, column: 3, scope: !3124)
!3132 = !DILocation(line: 306, column: 26, scope: !3126)
!3133 = !DILocation(line: 306, column: 30, scope: !3126)
!3134 = !DILocation(line: 306, column: 49, scope: !3126)
!3135 = !DILocation(line: 306, column: 12, scope: !3126)
!3136 = !DILocation(line: 307, column: 4, scope: !3126)
!3137 = !DILocation(line: 307, column: 31, scope: !3126)
!3138 = !DILocation(line: 307, column: 36, scope: !3126)
!3139 = !DILocation(line: 307, column: 8, scope: !3126)
!3140 = !DILocation(line: 306, column: 11, scope: !3127)
!3141 = !DILocation(line: 311, column: 11, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 311, column: 11)
!3143 = !DILocation(line: 311, column: 11, scope: !3127)
!3144 = !DILocation(line: 314, column: 40, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 314, column: 11)
!3146 = !DILocation(line: 314, column: 54, scope: !3145)
!3147 = !DILocation(line: 314, column: 12, scope: !3145)
!3148 = !DILocation(line: 314, column: 11, scope: !3127)
!3149 = !DILocation(line: 304, column: 54, scope: !3128)
!3150 = !DILocation(line: 304, column: 3, scope: !3128)
!3151 = distinct !{!3151, !3131, !3152}
!3152 = !DILocation(line: 318, column: 5, scope: !3124)
!3153 = !DILocation(line: 320, column: 8, scope: !3110)
!3154 = !DILocation(line: 321, column: 3, scope: !3110)
!3155 = !DILocation(line: 322, column: 1, scope: !3110)
!3156 = distinct !DISubprogram(name: "iv_analyze_biv", scope: !3, file: !3, line: 849, type: !3157, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3159)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{!563, !634, !1736}
!3159 = !{!3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168}
!3160 = !DILocalVariable(name: "def", arg: 1, scope: !3156, file: !3, line: 849, type: !634)
!3161 = !DILocalVariable(name: "iv", arg: 2, scope: !3156, file: !3, line: 849, type: !1736)
!3162 = !DILocalVariable(name: "inner_step", scope: !3156, file: !3, line: 851, type: !634)
!3163 = !DILocalVariable(name: "outer_step", scope: !3156, file: !3, line: 851, type: !634)
!3164 = !DILocalVariable(name: "inner_mode", scope: !3156, file: !3, line: 852, type: !5)
!3165 = !DILocalVariable(name: "outer_mode", scope: !3156, file: !3, line: 852, type: !5)
!3166 = !DILocalVariable(name: "extend", scope: !3156, file: !3, line: 853, type: !390)
!3167 = !DILocalVariable(name: "last_def", scope: !3156, file: !3, line: 854, type: !2530)
!3168 = !DILabel(scope: !3156, name: "end", file: !3, line: 910)
!3169 = !DILocation(line: 0, scope: !3156)
!3170 = !DILocation(line: 851, column: 3, scope: !3156)
!3171 = !DILocation(line: 852, column: 3, scope: !3156)
!3172 = !DILocation(line: 853, column: 3, scope: !3156)
!3173 = !DILocation(line: 854, column: 3, scope: !3156)
!3174 = !DILocation(line: 856, column: 7, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 856, column: 7)
!3176 = !DILocation(line: 856, column: 7, scope: !3156)
!3177 = !DILocation(line: 858, column: 7, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 857, column: 5)
!3179 = !DILocation(line: 859, column: 18, scope: !3178)
!3180 = !DILocation(line: 859, column: 7, scope: !3178)
!3181 = !DILocation(line: 860, column: 16, scope: !3178)
!3182 = !DILocation(line: 860, column: 7, scope: !3178)
!3183 = !DILocation(line: 861, column: 5, scope: !3178)
!3184 = !DILocation(line: 863, column: 8, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 863, column: 7)
!3186 = !DILocation(line: 863, column: 7, scope: !3156)
!3187 = !DILocation(line: 865, column: 12, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3189, file: !3, line: 865, column: 11)
!3189 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 864, column: 5)
!3190 = !DILocation(line: 865, column: 11, scope: !3189)
!3191 = !DILocation(line: 868, column: 14, scope: !3189)
!3192 = !DILocation(line: 868, column: 7, scope: !3189)
!3193 = !DILocation(line: 871, column: 8, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 871, column: 7)
!3195 = !DILocation(line: 871, column: 7, scope: !3156)
!3196 = !DILocation(line: 873, column: 11, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 873, column: 11)
!3198 = distinct !DILexicalBlock(scope: !3194, file: !3, line: 872, column: 5)
!3199 = !DILocation(line: 873, column: 11, scope: !3198)
!3200 = !DILocation(line: 874, column: 2, scope: !3197)
!3201 = !DILocation(line: 878, column: 8, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 878, column: 7)
!3203 = !DILocation(line: 878, column: 7, scope: !3156)
!3204 = !DILocation(line: 879, column: 12, scope: !3202)
!3205 = !DILocation(line: 879, column: 5, scope: !3202)
!3206 = !DILocation(line: 881, column: 7, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 881, column: 7)
!3208 = !DILocation(line: 881, column: 7, scope: !3156)
!3209 = !DILocation(line: 883, column: 11, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 883, column: 11)
!3211 = distinct !DILexicalBlock(scope: !3207, file: !3, line: 882, column: 5)
!3212 = !DILocation(line: 883, column: 11, scope: !3211)
!3213 = !DILocation(line: 884, column: 2, scope: !3210)
!3214 = !DILocation(line: 885, column: 18, scope: !3211)
!3215 = !DILocation(line: 885, column: 23, scope: !3211)
!3216 = !DILocation(line: 885, column: 7, scope: !3211)
!3217 = !DILocation(line: 888, column: 22, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 888, column: 7)
!3219 = !DILocation(line: 888, column: 8, scope: !3218)
!3220 = !DILocation(line: 888, column: 7, scope: !3156)
!3221 = !DILocation(line: 891, column: 11, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 890, column: 5)
!3223 = !DILocation(line: 891, column: 16, scope: !3222)
!3224 = !DILocation(line: 892, column: 7, scope: !3222)
!3225 = !DILocation(line: 901, column: 42, scope: !3156)
!3226 = !DILocation(line: 901, column: 59, scope: !3156)
!3227 = !DILocation(line: 901, column: 14, scope: !3156)
!3228 = !DILocation(line: 901, column: 7, scope: !3156)
!3229 = !DILocation(line: 901, column: 12, scope: !3156)
!3230 = !DILocation(line: 902, column: 41, scope: !3156)
!3231 = !DILocation(line: 902, column: 53, scope: !3156)
!3232 = !DILocation(line: 902, column: 65, scope: !3156)
!3233 = !DILocation(line: 902, column: 14, scope: !3156)
!3234 = !DILocation(line: 902, column: 7, scope: !3156)
!3235 = !DILocation(line: 902, column: 12, scope: !3156)
!3236 = !DILocation(line: 903, column: 14, scope: !3156)
!3237 = !DILocation(line: 903, column: 7, scope: !3156)
!3238 = !DILocation(line: 903, column: 12, scope: !3156)
!3239 = !DILocation(line: 904, column: 21, scope: !3156)
!3240 = !DILocation(line: 904, column: 7, scope: !3156)
!3241 = !DILocation(line: 904, column: 19, scope: !3156)
!3242 = !DILocation(line: 905, column: 16, scope: !3156)
!3243 = !DILocation(line: 905, column: 7, scope: !3156)
!3244 = !DILocation(line: 905, column: 14, scope: !3156)
!3245 = !DILocation(line: 906, column: 14, scope: !3156)
!3246 = !DILocation(line: 906, column: 7, scope: !3156)
!3247 = !DILocation(line: 906, column: 12, scope: !3156)
!3248 = !DILocation(line: 907, column: 15, scope: !3156)
!3249 = !DILocation(line: 907, column: 7, scope: !3156)
!3250 = !DILocation(line: 907, column: 13, scope: !3156)
!3251 = !DILocation(line: 908, column: 34, scope: !3156)
!3252 = !DILocation(line: 908, column: 7, scope: !3156)
!3253 = !DILocation(line: 908, column: 21, scope: !3156)
!3254 = !DILocation(line: 908, column: 3, scope: !3156)
!3255 = !DILocation(line: 910, column: 2, scope: !3156)
!3256 = !DILocation(line: 911, column: 7, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 911, column: 7)
!3258 = !DILocation(line: 911, column: 7, scope: !3156)
!3259 = !DILocation(line: 913, column: 7, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 912, column: 5)
!3261 = !DILocation(line: 914, column: 21, scope: !3260)
!3262 = !DILocation(line: 914, column: 7, scope: !3260)
!3263 = !DILocation(line: 915, column: 16, scope: !3260)
!3264 = !DILocation(line: 915, column: 7, scope: !3260)
!3265 = !DILocation(line: 916, column: 5, scope: !3260)
!3266 = !DILocation(line: 918, column: 3, scope: !3156)
!3267 = !DILocation(line: 919, column: 14, scope: !3156)
!3268 = !DILocation(line: 919, column: 19, scope: !3156)
!3269 = !DILocation(line: 919, column: 3, scope: !3156)
!3270 = !DILocation(line: 920, column: 1, scope: !3156)
!3271 = distinct !DISubprogram(name: "get_iv_value", scope: !3, file: !3, line: 1233, type: !3272, scopeLine: 1234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3274)
!3272 = !DISubroutineType(types: !3273)
!3273 = !{!634, !1736, !634}
!3274 = !{!3275, !3276, !3277}
!3275 = !DILocalVariable(name: "iv", arg: 1, scope: !3271, file: !3, line: 1233, type: !1736)
!3276 = !DILocalVariable(name: "iteration", arg: 2, scope: !3271, file: !3, line: 1233, type: !634)
!3277 = !DILocalVariable(name: "val", scope: !3271, file: !3, line: 1235, type: !634)
!3278 = !DILocation(line: 0, scope: !3271)
!3279 = !DILocation(line: 1239, column: 3, scope: !3271)
!3280 = !DILocation(line: 1241, column: 11, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 1241, column: 7)
!3282 = !DILocation(line: 1241, column: 19, scope: !3281)
!3283 = !DILocation(line: 1241, column: 16, scope: !3281)
!3284 = !DILocation(line: 1241, column: 43, scope: !3281)
!3285 = !DILocation(line: 1241, column: 30, scope: !3281)
!3286 = !DILocation(line: 1242, column: 42, scope: !3281)
!3287 = !DILocation(line: 1242, column: 59, scope: !3281)
!3288 = !DILocation(line: 1243, column: 11, scope: !3281)
!3289 = !DILocation(line: 1242, column: 11, scope: !3281)
!3290 = !DILocation(line: 1242, column: 5, scope: !3281)
!3291 = !DILocation(line: 1246, column: 15, scope: !3281)
!3292 = !DILocation(line: 0, scope: !3281)
!3293 = !DILocation(line: 1248, column: 11, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 1248, column: 7)
!3295 = !DILocation(line: 1248, column: 30, scope: !3294)
!3296 = !DILocation(line: 1248, column: 23, scope: !3294)
!3297 = !DILocation(line: 1248, column: 7, scope: !3271)
!3298 = !DILocation(line: 1251, column: 9, scope: !3271)
!3299 = !DILocation(line: 1253, column: 11, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 1253, column: 7)
!3301 = !DILocation(line: 1253, column: 18, scope: !3300)
!3302 = !DILocation(line: 1253, column: 7, scope: !3271)
!3303 = !DILocation(line: 1256, column: 45, scope: !3271)
!3304 = !DILocation(line: 1256, column: 67, scope: !3271)
!3305 = !DILocation(line: 1256, column: 9, scope: !3271)
!3306 = !DILocation(line: 1257, column: 40, scope: !3271)
!3307 = !DILocation(line: 1257, column: 57, scope: !3271)
!3308 = !DILocation(line: 1259, column: 13, scope: !3271)
!3309 = !DILocation(line: 1258, column: 9, scope: !3271)
!3310 = !DILocation(line: 1257, column: 9, scope: !3271)
!3311 = !DILocation(line: 1261, column: 3, scope: !3271)
!3312 = !DILocation(line: 1262, column: 1, scope: !3271)
!3313 = distinct !DISubprogram(name: "iv_analysis_done", scope: !3, file: !3, line: 1267, type: !2365, scopeLine: 1268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1786)
!3314 = !DILocation(line: 1269, column: 8, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 1269, column: 7)
!3316 = !DILocation(line: 1269, column: 7, scope: !3313)
!3317 = !DILocation(line: 1271, column: 7, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 1270, column: 5)
!3319 = !DILocation(line: 1272, column: 19, scope: !3318)
!3320 = !DILocation(line: 1273, column: 7, scope: !3318)
!3321 = !DILocation(line: 1274, column: 20, scope: !3318)
!3322 = !DILocation(line: 1274, column: 7, scope: !3318)
!3323 = !DILocation(line: 1275, column: 13, scope: !3318)
!3324 = !DILocation(line: 1275, column: 7, scope: !3318)
!3325 = !DILocation(line: 1276, column: 20, scope: !3318)
!3326 = !DILocation(line: 1277, column: 25, scope: !3318)
!3327 = !DILocation(line: 1278, column: 12, scope: !3318)
!3328 = !DILocation(line: 1279, column: 5, scope: !3318)
!3329 = !DILocation(line: 1280, column: 1, scope: !3313)
!3330 = distinct !DISubprogram(name: "canon_condition", scope: !3, file: !3, line: 1628, type: !3331, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3333)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{!634, !634}
!3333 = !{!3334, !3335, !3336, !3337, !3338, !3339, !3340, !3343, !3344}
!3334 = !DILocalVariable(name: "cond", arg: 1, scope: !3330, file: !3, line: 1628, type: !634)
!3335 = !DILocalVariable(name: "tem", scope: !3330, file: !3, line: 1630, type: !634)
!3336 = !DILocalVariable(name: "op0", scope: !3330, file: !3, line: 1631, type: !634)
!3337 = !DILocalVariable(name: "op1", scope: !3330, file: !3, line: 1631, type: !634)
!3338 = !DILocalVariable(name: "code", scope: !3330, file: !3, line: 1632, type: !390)
!3339 = !DILocalVariable(name: "mode", scope: !3330, file: !3, line: 1633, type: !5)
!3340 = !DILocalVariable(name: "const_val", scope: !3341, file: !3, line: 1656, type: !606)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 1655, column: 5)
!3342 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1652, column: 7)
!3343 = !DILocalVariable(name: "uconst_val", scope: !3341, file: !3, line: 1657, type: !589)
!3344 = !DILocalVariable(name: "max_val", scope: !3341, file: !3, line: 1658, type: !589)
!3345 = !DILocation(line: 0, scope: !3330)
!3346 = !DILocation(line: 1635, column: 10, scope: !3330)
!3347 = !DILocation(line: 1636, column: 9, scope: !3330)
!3348 = !DILocation(line: 1637, column: 9, scope: !3330)
!3349 = !DILocation(line: 1639, column: 7, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1639, column: 7)
!3351 = !DILocation(line: 1639, column: 7, scope: !3330)
!3352 = !DILocation(line: 1641, column: 14, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3350, file: !3, line: 1640, column: 5)
!3354 = !DILocation(line: 1645, column: 5, scope: !3353)
!3355 = !DILocation(line: 1647, column: 10, scope: !3330)
!3356 = !DILocation(line: 1648, column: 12, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1648, column: 7)
!3358 = !DILocation(line: 1648, column: 7, scope: !3330)
!3359 = !DILocation(line: 1649, column: 12, scope: !3357)
!3360 = !DILocation(line: 1649, column: 5, scope: !3357)
!3361 = !DILocation(line: 1650, column: 3, scope: !3330)
!3362 = !DILocation(line: 1652, column: 7, scope: !3342)
!3363 = !DILocation(line: 1653, column: 7, scope: !3342)
!3364 = !DILocation(line: 1653, column: 10, scope: !3342)
!3365 = !DILocation(line: 1653, column: 32, scope: !3342)
!3366 = !DILocation(line: 1654, column: 7, scope: !3342)
!3367 = !DILocation(line: 1654, column: 10, scope: !3342)
!3368 = !DILocation(line: 1654, column: 34, scope: !3342)
!3369 = !DILocation(line: 1652, column: 7, scope: !3330)
!3370 = !DILocation(line: 1656, column: 33, scope: !3341)
!3371 = !DILocation(line: 0, scope: !3341)
!3372 = !DILocation(line: 1659, column: 29, scope: !3341)
!3373 = !DILocation(line: 1661, column: 7, scope: !3341)
!3374 = !DILocation(line: 1664, column: 54, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 1664, column: 8)
!3376 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 1662, column: 2)
!3377 = !DILocation(line: 1664, column: 43, scope: !3375)
!3378 = !DILocation(line: 1664, column: 8, scope: !3376)
!3379 = !DILocation(line: 1665, column: 47, scope: !3375)
!3380 = !DILocation(line: 1665, column: 52, scope: !3375)
!3381 = !DILocation(line: 1665, column: 23, scope: !3375)
!3382 = !DILocation(line: 1665, column: 6, scope: !3375)
!3383 = !DILocation(line: 1671, column: 35, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 1671, column: 8)
!3385 = !DILocation(line: 1673, column: 10, scope: !3384)
!3386 = !DILocation(line: 1673, column: 44, scope: !3384)
!3387 = !DILocation(line: 1673, column: 6, scope: !3384)
!3388 = !DILocation(line: 1672, column: 8, scope: !3384)
!3389 = !DILocation(line: 1671, column: 8, scope: !3376)
!3390 = !DILocation(line: 1674, column: 47, scope: !3384)
!3391 = !DILocation(line: 1674, column: 23, scope: !3384)
!3392 = !DILocation(line: 1674, column: 6, scope: !3384)
!3393 = !DILocation(line: 1678, column: 19, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 1678, column: 8)
!3395 = !DILocation(line: 1678, column: 8, scope: !3376)
!3396 = !DILocation(line: 1679, column: 49, scope: !3394)
!3397 = !DILocation(line: 1679, column: 24, scope: !3394)
!3398 = !DILocation(line: 1679, column: 6, scope: !3394)
!3399 = !DILocation(line: 1683, column: 19, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 1683, column: 8)
!3401 = !DILocation(line: 1683, column: 8, scope: !3376)
!3402 = !DILocation(line: 1684, column: 49, scope: !3400)
!3403 = !DILocation(line: 1684, column: 24, scope: !3400)
!3404 = !DILocation(line: 1684, column: 6, scope: !3400)
!3405 = !DILocation(line: 1641, column: 12, scope: !3353)
!3406 = !DILocation(line: 1644, column: 11, scope: !3353)
!3407 = !DILocation(line: 1692, column: 14, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1692, column: 7)
!3409 = !DILocation(line: 1692, column: 11, scope: !3408)
!3410 = !DILocation(line: 1693, column: 7, scope: !3408)
!3411 = !DILocation(line: 1693, column: 17, scope: !3408)
!3412 = !DILocation(line: 1693, column: 14, scope: !3408)
!3413 = !DILocation(line: 1694, column: 7, scope: !3408)
!3414 = !DILocation(line: 1694, column: 18, scope: !3408)
!3415 = !DILocation(line: 1694, column: 15, scope: !3408)
!3416 = !DILocation(line: 1695, column: 7, scope: !3408)
!3417 = !DILocation(line: 1695, column: 10, scope: !3408)
!3418 = !DILocation(line: 1695, column: 26, scope: !3408)
!3419 = !DILocation(line: 1692, column: 7, scope: !3330)
!3420 = !DILocation(line: 1696, column: 12, scope: !3408)
!3421 = !DILocation(line: 1696, column: 5, scope: !3408)
!3422 = !DILocation(line: 1698, column: 3, scope: !3330)
!3423 = distinct !DISubprogram(name: "simplify_using_condition", scope: !3, file: !3, line: 1705, type: !3424, scopeLine: 1706, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3427)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{null, !634, !1749, !3426}
!3426 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !148, line: 37, baseType: !571)
!3427 = !{!3428, !3429, !3430, !3431, !3432, !3433}
!3428 = !DILocalVariable(name: "cond", arg: 1, scope: !3423, file: !3, line: 1705, type: !634)
!3429 = !DILocalVariable(name: "expr", arg: 2, scope: !3423, file: !3, line: 1705, type: !1749)
!3430 = !DILocalVariable(name: "altered", arg: 3, scope: !3423, file: !3, line: 1705, type: !3426)
!3431 = !DILocalVariable(name: "rev", scope: !3423, file: !3, line: 1707, type: !634)
!3432 = !DILocalVariable(name: "reve", scope: !3423, file: !3, line: 1707, type: !634)
!3433 = !DILocalVariable(name: "exp", scope: !3423, file: !3, line: 1707, type: !634)
!3434 = !DILocation(line: 0, scope: !3423)
!3435 = !DILocation(line: 1707, column: 24, scope: !3423)
!3436 = !DILocation(line: 1711, column: 7, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1711, column: 7)
!3438 = !DILocation(line: 1712, column: 7, scope: !3437)
!3439 = !DILocation(line: 1712, column: 49, scope: !3437)
!3440 = !DILocation(line: 1712, column: 10, scope: !3437)
!3441 = !DILocation(line: 1711, column: 7, scope: !3423)
!3442 = !DILocation(line: 0, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1715, column: 7)
!3444 = !DILocation(line: 1715, column: 7, scope: !3443)
!3445 = !DILocation(line: 1715, column: 23, scope: !3443)
!3446 = !DILocation(line: 1716, column: 7, scope: !3443)
!3447 = !DILocation(line: 1716, column: 10, scope: !3443)
!3448 = !DILocation(line: 1716, column: 33, scope: !3443)
!3449 = !DILocation(line: 1716, column: 36, scope: !3443)
!3450 = !DILocation(line: 1715, column: 7, scope: !3423)
!3451 = !DILocation(line: 1718, column: 37, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 1717, column: 5)
!3453 = !DILocation(line: 1718, column: 44, scope: !3452)
!3454 = !DILocation(line: 1718, column: 60, scope: !3452)
!3455 = !DILocation(line: 1718, column: 15, scope: !3452)
!3456 = !DILocation(line: 1718, column: 13, scope: !3452)
!3457 = !DILocation(line: 1719, column: 7, scope: !3452)
!3458 = !DILocation(line: 1722, column: 8, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1722, column: 7)
!3460 = !DILocation(line: 1722, column: 7, scope: !3423)
!3461 = !DILocation(line: 1725, column: 9, scope: !3423)
!3462 = !DILocation(line: 1726, column: 10, scope: !3423)
!3463 = !DILocation(line: 1728, column: 27, scope: !3423)
!3464 = !DILocation(line: 1728, column: 10, scope: !3423)
!3465 = !DILocation(line: 1728, column: 8, scope: !3423)
!3466 = !DILocation(line: 1729, column: 9, scope: !3423)
!3467 = !DILocation(line: 1730, column: 7, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1730, column: 7)
!3469 = !DILocation(line: 1730, column: 7, scope: !3423)
!3470 = !DILocation(line: 1731, column: 11, scope: !3468)
!3471 = !DILocation(line: 1731, column: 5, scope: !3468)
!3472 = !DILocation(line: 1732, column: 7, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1732, column: 7)
!3474 = !DILocation(line: 1732, column: 7, scope: !3423)
!3475 = !DILocation(line: 1733, column: 12, scope: !3473)
!3476 = !DILocation(line: 1733, column: 5, scope: !3473)
!3477 = !DILocation(line: 1735, column: 25, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1735, column: 7)
!3479 = !DILocation(line: 1735, column: 7, scope: !3478)
!3480 = !DILocation(line: 1735, column: 7, scope: !3423)
!3481 = !DILocation(line: 1737, column: 15, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 1736, column: 5)
!3483 = !DILocation(line: 1737, column: 13, scope: !3482)
!3484 = !DILocation(line: 1738, column: 7, scope: !3482)
!3485 = !DILocation(line: 1741, column: 7, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1741, column: 7)
!3487 = !DILocation(line: 1741, column: 11, scope: !3486)
!3488 = !DILocation(line: 1741, column: 14, scope: !3486)
!3489 = !DILocation(line: 1741, column: 7, scope: !3423)
!3490 = !DILocation(line: 1743, column: 15, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 1742, column: 5)
!3492 = !DILocation(line: 1743, column: 13, scope: !3491)
!3493 = !DILocation(line: 1744, column: 7, scope: !3491)
!3494 = !DILocation(line: 1747, column: 18, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1747, column: 7)
!3496 = !DILocation(line: 1747, column: 7, scope: !3495)
!3497 = !DILocation(line: 1747, column: 7, scope: !3423)
!3498 = !DILocation(line: 1749, column: 15, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 1748, column: 5)
!3500 = !DILocation(line: 1749, column: 13, scope: !3499)
!3501 = !DILocation(line: 1750, column: 7, scope: !3499)
!3502 = !DILocation(line: 1753, column: 7, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1753, column: 7)
!3504 = !DILocation(line: 1753, column: 12, scope: !3503)
!3505 = !DILocation(line: 1753, column: 26, scope: !3503)
!3506 = !DILocation(line: 1753, column: 15, scope: !3503)
!3507 = !DILocation(line: 1753, column: 7, scope: !3423)
!3508 = !DILocation(line: 1755, column: 15, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 1754, column: 5)
!3510 = !DILocation(line: 1755, column: 13, scope: !3509)
!3511 = !DILocation(line: 1756, column: 7, scope: !3509)
!3512 = !DILocation(line: 1761, column: 11, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1761, column: 7)
!3514 = !DILocation(line: 1761, column: 14, scope: !3513)
!3515 = !DILocation(line: 1761, column: 7, scope: !3423)
!3516 = !DILocation(line: 1763, column: 15, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 1762, column: 5)
!3518 = !DILocation(line: 1763, column: 13, scope: !3517)
!3519 = !DILocation(line: 1764, column: 7, scope: !3517)
!3520 = !DILocation(line: 1768, column: 11, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1768, column: 7)
!3522 = !DILocation(line: 1768, column: 22, scope: !3521)
!3523 = !DILocation(line: 1768, column: 7, scope: !3423)
!3524 = !DILocation(line: 1770, column: 15, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 1769, column: 5)
!3526 = !DILocation(line: 1770, column: 13, scope: !3525)
!3527 = !DILocation(line: 1771, column: 7, scope: !3525)
!3528 = !DILocation(line: 1777, column: 1, scope: !3423)
!3529 = distinct !DISubprogram(name: "altered_reg_used", scope: !3, file: !3, line: 1304, type: !3530, scopeLine: 1305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3532)
!3530 = !DISubroutineType(types: !3531)
!3531 = !{!564, !1749, !568}
!3532 = !{!3533, !3534}
!3533 = !DILocalVariable(name: "reg", arg: 1, scope: !3529, file: !3, line: 1304, type: !1749)
!3534 = !DILocalVariable(name: "alt", arg: 2, scope: !3529, file: !3, line: 1304, type: !568)
!3535 = !DILocation(line: 0, scope: !3529)
!3536 = !DILocation(line: 1306, column: 8, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 1306, column: 7)
!3538 = !DILocation(line: 1306, column: 7, scope: !3529)
!3539 = !DILocation(line: 1309, column: 10, scope: !3529)
!3540 = !DILocation(line: 1309, column: 3, scope: !3529)
!3541 = !DILocation(line: 1310, column: 1, scope: !3529)
!3542 = distinct !DISubprogram(name: "implies_p", scope: !3, file: !3, line: 1472, type: !3079, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3543)
!3543 = !{!3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551}
!3544 = !DILocalVariable(name: "a", arg: 1, scope: !3542, file: !3, line: 1472, type: !634)
!3545 = !DILocalVariable(name: "b", arg: 2, scope: !3542, file: !3, line: 1472, type: !634)
!3546 = !DILocalVariable(name: "op0", scope: !3542, file: !3, line: 1474, type: !634)
!3547 = !DILocalVariable(name: "op1", scope: !3542, file: !3, line: 1474, type: !634)
!3548 = !DILocalVariable(name: "opb0", scope: !3542, file: !3, line: 1474, type: !634)
!3549 = !DILocalVariable(name: "opb1", scope: !3542, file: !3, line: 1474, type: !634)
!3550 = !DILocalVariable(name: "r", scope: !3542, file: !3, line: 1474, type: !634)
!3551 = !DILocalVariable(name: "mode", scope: !3542, file: !3, line: 1475, type: !5)
!3552 = !DILocation(line: 0, scope: !3542)
!3553 = !DILocation(line: 1477, column: 7, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 1477, column: 7)
!3555 = !DILocation(line: 1477, column: 20, scope: !3554)
!3556 = !DILocation(line: 1477, column: 7, scope: !3542)
!3557 = !DILocation(line: 1479, column: 13, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1478, column: 5)
!3559 = !DILocation(line: 1480, column: 13, scope: !3558)
!3560 = !DILocation(line: 1482, column: 11, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 1482, column: 11)
!3562 = !DILocation(line: 1482, column: 11, scope: !3558)
!3563 = !DILocation(line: 1484, column: 8, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 1483, column: 2)
!3565 = !DILocation(line: 1485, column: 13, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3564, file: !3, line: 1485, column: 8)
!3567 = !DILocation(line: 1485, column: 10, scope: !3566)
!3568 = !DILocation(line: 1485, column: 8, scope: !3564)
!3569 = !DILocation(line: 1489, column: 11, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 1489, column: 11)
!3571 = !DILocation(line: 1489, column: 11, scope: !3558)
!3572 = !DILocation(line: 1491, column: 8, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3570, file: !3, line: 1490, column: 2)
!3574 = !DILocation(line: 1492, column: 13, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 1492, column: 8)
!3576 = !DILocation(line: 1492, column: 10, scope: !3575)
!3577 = !DILocation(line: 1492, column: 8, scope: !3573)
!3578 = !DILocation(line: 1497, column: 12, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 1497, column: 7)
!3580 = !DILocation(line: 1497, column: 9, scope: !3579)
!3581 = !DILocation(line: 1497, column: 7, scope: !3542)
!3582 = !DILocation(line: 1500, column: 8, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 1500, column: 7)
!3584 = !DILocation(line: 1500, column: 37, scope: !3583)
!3585 = !DILocation(line: 1501, column: 8, scope: !3583)
!3586 = !DILocation(line: 1501, column: 40, scope: !3583)
!3587 = !DILocation(line: 1502, column: 7, scope: !3583)
!3588 = !DILocation(line: 1502, column: 11, scope: !3583)
!3589 = !DILocation(line: 1502, column: 40, scope: !3583)
!3590 = !DILocation(line: 1503, column: 4, scope: !3583)
!3591 = !DILocation(line: 1503, column: 36, scope: !3583)
!3592 = !DILocation(line: 1500, column: 7, scope: !3542)
!3593 = !DILocation(line: 1506, column: 9, scope: !3542)
!3594 = !DILocation(line: 1507, column: 9, scope: !3542)
!3595 = !DILocation(line: 1508, column: 10, scope: !3542)
!3596 = !DILocation(line: 1509, column: 10, scope: !3542)
!3597 = !DILocation(line: 1511, column: 10, scope: !3542)
!3598 = !DILocation(line: 1512, column: 15, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 1512, column: 7)
!3600 = !DILocation(line: 1512, column: 12, scope: !3599)
!3601 = !DILocation(line: 1512, column: 7, scope: !3542)
!3602 = !DILocation(line: 1514, column: 17, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3599, file: !3, line: 1514, column: 12)
!3604 = !DILocation(line: 1514, column: 12, scope: !3599)
!3605 = !DILocation(line: 1516, column: 14, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 1515, column: 5)
!3607 = !DILocation(line: 1517, column: 19, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 1517, column: 11)
!3609 = !DILocation(line: 1517, column: 16, scope: !3608)
!3610 = !DILocation(line: 1517, column: 11, scope: !3606)
!3611 = !DILocation(line: 1519, column: 5, scope: !3606)
!3612 = !DILocation(line: 0, scope: !3599)
!3613 = !DILocation(line: 1522, column: 21, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 1522, column: 7)
!3615 = !DILocation(line: 1522, column: 27, scope: !3614)
!3616 = !DILocation(line: 1522, column: 43, scope: !3614)
!3617 = !DILocation(line: 1523, column: 7, scope: !3614)
!3618 = !DILocation(line: 1523, column: 24, scope: !3614)
!3619 = !DILocation(line: 1523, column: 30, scope: !3614)
!3620 = !DILocation(line: 1523, column: 46, scope: !3614)
!3621 = !DILocation(line: 1522, column: 7, scope: !3542)
!3622 = !DILocation(line: 1526, column: 11, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 1524, column: 5)
!3624 = !DILocation(line: 1533, column: 11, scope: !3623)
!3625 = !DILocation(line: 1540, column: 11, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1540, column: 11)
!3627 = !DILocation(line: 1541, column: 4, scope: !3626)
!3628 = !DILocation(line: 1541, column: 7, scope: !3626)
!3629 = !DILocation(line: 1542, column: 4, scope: !3626)
!3630 = !DILocation(line: 1542, column: 7, scope: !3626)
!3631 = !DILocation(line: 1542, column: 55, scope: !3626)
!3632 = !DILocation(line: 1542, column: 52, scope: !3626)
!3633 = !DILocation(line: 1540, column: 11, scope: !3623)
!3634 = !DILocation(line: 1544, column: 7, scope: !3623)
!3635 = !DILocation(line: 1549, column: 20, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 1549, column: 7)
!3637 = !DILocation(line: 1550, column: 7, scope: !3636)
!3638 = !DILocation(line: 1550, column: 30, scope: !3636)
!3639 = !DILocation(line: 1550, column: 46, scope: !3636)
!3640 = !DILocation(line: 1551, column: 4, scope: !3636)
!3641 = !DILocation(line: 1551, column: 20, scope: !3636)
!3642 = !DILocation(line: 1551, column: 26, scope: !3636)
!3643 = !DILocation(line: 1551, column: 42, scope: !3636)
!3644 = !DILocation(line: 1549, column: 7, scope: !3542)
!3645 = !DILocation(line: 1553, column: 11, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !3, line: 1553, column: 11)
!3647 = distinct !DILexicalBlock(scope: !3636, file: !3, line: 1552, column: 5)
!3648 = !DILocation(line: 1554, column: 4, scope: !3646)
!3649 = !DILocation(line: 1554, column: 7, scope: !3646)
!3650 = !DILocation(line: 1553, column: 11, scope: !3647)
!3651 = !DILocation(line: 1559, column: 7, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 1559, column: 7)
!3653 = !DILocation(line: 1559, column: 20, scope: !3652)
!3654 = !DILocation(line: 1560, column: 17, scope: !3652)
!3655 = !DILocation(line: 1560, column: 14, scope: !3652)
!3656 = !DILocation(line: 1560, column: 7, scope: !3652)
!3657 = !DILocation(line: 1562, column: 12, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3659, file: !3, line: 1562, column: 11)
!3659 = distinct !DILexicalBlock(scope: !3652, file: !3, line: 1561, column: 5)
!3660 = !DILocation(line: 1562, column: 25, scope: !3658)
!3661 = !DILocation(line: 1563, column: 13, scope: !3658)
!3662 = !DILocation(line: 1563, column: 5, scope: !3658)
!3663 = !DILocation(line: 1564, column: 21, scope: !3658)
!3664 = !DILocation(line: 1565, column: 19, scope: !3658)
!3665 = !DILocation(line: 1565, column: 16, scope: !3658)
!3666 = !DILocation(line: 1565, column: 8, scope: !3658)
!3667 = !DILocation(line: 1566, column: 9, scope: !3658)
!3668 = !DILocation(line: 1566, column: 2, scope: !3658)
!3669 = !DILocation(line: 1571, column: 7, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 1570, column: 7)
!3671 = !DILocation(line: 1571, column: 10, scope: !3670)
!3672 = !DILocation(line: 1572, column: 7, scope: !3670)
!3673 = !DILocation(line: 1572, column: 10, scope: !3670)
!3674 = !DILocation(line: 1572, column: 23, scope: !3670)
!3675 = !DILocation(line: 1573, column: 18, scope: !3670)
!3676 = !DILocation(line: 1573, column: 15, scope: !3670)
!3677 = !DILocation(line: 1573, column: 7, scope: !3670)
!3678 = !DILocation(line: 1574, column: 10, scope: !3670)
!3679 = !DILocation(line: 1574, column: 26, scope: !3670)
!3680 = !DILocation(line: 1575, column: 7, scope: !3670)
!3681 = !DILocation(line: 1575, column: 10, scope: !3670)
!3682 = !DILocation(line: 1577, column: 7, scope: !3670)
!3683 = !DILocation(line: 1577, column: 36, scope: !3670)
!3684 = !DILocation(line: 1578, column: 4, scope: !3670)
!3685 = !DILocation(line: 1580, column: 7, scope: !3670)
!3686 = !DILocation(line: 1580, column: 34, scope: !3670)
!3687 = !DILocation(line: 1580, column: 42, scope: !3670)
!3688 = !DILocation(line: 1580, column: 41, scope: !3670)
!3689 = !DILocation(line: 1580, column: 38, scope: !3670)
!3690 = !DILocation(line: 1570, column: 7, scope: !3542)
!3691 = !DILocation(line: 1581, column: 30, scope: !3670)
!3692 = !DILocation(line: 1581, column: 12, scope: !3670)
!3693 = !DILocation(line: 1581, column: 5, scope: !3670)
!3694 = !DILocation(line: 1585, column: 7, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 1584, column: 7)
!3696 = !DILocation(line: 1585, column: 10, scope: !3695)
!3697 = !DILocation(line: 1584, column: 7, scope: !3542)
!3698 = !DILocation(line: 1587, column: 11, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 1587, column: 11)
!3700 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 1586, column: 5)
!3701 = !DILocation(line: 1587, column: 24, scope: !3699)
!3702 = !DILocation(line: 1588, column: 4, scope: !3699)
!3703 = !DILocation(line: 1588, column: 7, scope: !3699)
!3704 = !DILocation(line: 1588, column: 23, scope: !3699)
!3705 = !DILocation(line: 1589, column: 12, scope: !3699)
!3706 = !DILocation(line: 1589, column: 4, scope: !3699)
!3707 = !DILocation(line: 1590, column: 7, scope: !3699)
!3708 = !DILocation(line: 1592, column: 4, scope: !3699)
!3709 = !DILocation(line: 1592, column: 33, scope: !3699)
!3710 = !DILocation(line: 1593, column: 8, scope: !3699)
!3711 = !DILocation(line: 1594, column: 4, scope: !3699)
!3712 = !DILocation(line: 1594, column: 20, scope: !3699)
!3713 = !DILocation(line: 1594, column: 7, scope: !3699)
!3714 = !DILocation(line: 1587, column: 11, scope: !3700)
!3715 = !DILocation(line: 1596, column: 11, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 1596, column: 11)
!3717 = !DILocation(line: 1595, column: 9, scope: !3699)
!3718 = !DILocation(line: 1595, column: 26, scope: !3699)
!3719 = !DILocation(line: 1595, column: 25, scope: !3699)
!3720 = !DILocation(line: 1595, column: 22, scope: !3699)
!3721 = !DILocation(line: 1595, column: 2, scope: !3699)
!3722 = !DILocation(line: 1596, column: 24, scope: !3716)
!3723 = !DILocation(line: 1597, column: 4, scope: !3716)
!3724 = !DILocation(line: 1597, column: 7, scope: !3716)
!3725 = !DILocation(line: 1597, column: 23, scope: !3716)
!3726 = !DILocation(line: 1598, column: 15, scope: !3716)
!3727 = !DILocation(line: 1598, column: 12, scope: !3716)
!3728 = !DILocation(line: 1598, column: 4, scope: !3716)
!3729 = !DILocation(line: 1599, column: 7, scope: !3716)
!3730 = !DILocation(line: 1601, column: 4, scope: !3716)
!3731 = !DILocation(line: 1601, column: 33, scope: !3716)
!3732 = !DILocation(line: 1602, column: 8, scope: !3716)
!3733 = !DILocation(line: 1603, column: 4, scope: !3716)
!3734 = !DILocation(line: 1603, column: 20, scope: !3716)
!3735 = !DILocation(line: 1603, column: 7, scope: !3716)
!3736 = !DILocation(line: 1596, column: 11, scope: !3700)
!3737 = !DILocation(line: 1604, column: 9, scope: !3716)
!3738 = !DILocation(line: 1604, column: 26, scope: !3716)
!3739 = !DILocation(line: 1604, column: 25, scope: !3716)
!3740 = !DILocation(line: 1604, column: 22, scope: !3716)
!3741 = !DILocation(line: 1604, column: 2, scope: !3716)
!3742 = !DILocation(line: 1608, column: 8, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 1608, column: 7)
!3744 = !DILocation(line: 1608, column: 21, scope: !3743)
!3745 = !DILocation(line: 1608, column: 27, scope: !3743)
!3746 = !DILocation(line: 1608, column: 43, scope: !3743)
!3747 = !DILocation(line: 1609, column: 7, scope: !3743)
!3748 = !DILocation(line: 1609, column: 10, scope: !3743)
!3749 = !DILocation(line: 1610, column: 7, scope: !3743)
!3750 = !DILocation(line: 1610, column: 41, scope: !3743)
!3751 = !DILocation(line: 1610, column: 38, scope: !3743)
!3752 = !DILocation(line: 1610, column: 31, scope: !3743)
!3753 = !DILocation(line: 1611, column: 7, scope: !3743)
!3754 = !DILocation(line: 1611, column: 20, scope: !3743)
!3755 = !DILocation(line: 1612, column: 7, scope: !3743)
!3756 = !DILocation(line: 1612, column: 10, scope: !3743)
!3757 = !DILocation(line: 1612, column: 23, scope: !3743)
!3758 = !DILocation(line: 1613, column: 7, scope: !3743)
!3759 = !DILocation(line: 1613, column: 10, scope: !3743)
!3760 = !DILocation(line: 1614, column: 7, scope: !3743)
!3761 = !DILocation(line: 1614, column: 10, scope: !3743)
!3762 = !DILocation(line: 1608, column: 7, scope: !3542)
!3763 = !DILocation(line: 1615, column: 12, scope: !3743)
!3764 = !DILocation(line: 1615, column: 5, scope: !3743)
!3765 = !DILocation(line: 1618, column: 1, scope: !3542)
!3766 = distinct !DISubprogram(name: "find_simple_exit", scope: !3, file: !3, line: 2852, type: !3767, scopeLine: 2853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3769)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{null, !987, !1701}
!3769 = !{!3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777}
!3770 = !DILocalVariable(name: "loop", arg: 1, scope: !3766, file: !3, line: 2852, type: !987)
!3771 = !DILocalVariable(name: "desc", arg: 2, scope: !3766, file: !3, line: 2852, type: !1701)
!3772 = !DILocalVariable(name: "i", scope: !3766, file: !3, line: 2854, type: !7)
!3773 = !DILocalVariable(name: "body", scope: !3766, file: !3, line: 2855, type: !2299)
!3774 = !DILocalVariable(name: "e", scope: !3766, file: !3, line: 2856, type: !962)
!3775 = !DILocalVariable(name: "act", scope: !3766, file: !3, line: 2857, type: !1702)
!3776 = !DILocalVariable(name: "any", scope: !3766, file: !3, line: 2858, type: !563)
!3777 = !DILocalVariable(name: "ei", scope: !3766, file: !3, line: 2859, type: !3778)
!3778 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !148, line: 682, baseType: !3779)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !148, line: 679, size: 128, elements: !3780)
!3780 = !{!3781, !3782}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3779, file: !148, line: 680, baseType: !7, size: 32)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !3779, file: !148, line: 681, baseType: !3783, size: 64, offset: 64)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!3784 = !DILocation(line: 0, scope: !3766)
!3785 = !DILocation(line: 2856, column: 3, scope: !3766)
!3786 = !DILocation(line: 2857, column: 3, scope: !3766)
!3787 = !DILocation(line: 2859, column: 3, scope: !3766)
!3788 = !DILocation(line: 2861, column: 9, scope: !3766)
!3789 = !DILocation(line: 2861, column: 18, scope: !3766)
!3790 = !DILocation(line: 2862, column: 10, scope: !3766)
!3791 = !DILocation(line: 0, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 2864, column: 3)
!3793 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 2864, column: 3)
!3794 = !DILocation(line: 0, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 2866, column: 7)
!3796 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 2865, column: 5)
!3797 = !DILocation(line: 0, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3795, file: !3, line: 2866, column: 7)
!3799 = !DILocation(line: 0, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 2872, column: 8)
!3801 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 2867, column: 2)
!3802 = !DILocation(line: 0, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 2880, column: 12)
!3804 = distinct !DILexicalBlock(scope: !3805, file: !3, line: 2878, column: 6)
!3805 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 2875, column: 8)
!3806 = !DILocation(line: 0, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 2886, column: 12)
!3808 = !DILocation(line: 0, scope: !3801)
!3809 = !DILocation(line: 2864, column: 8, scope: !3793)
!3810 = !DILocation(line: 0, scope: !3793)
!3811 = !DILocation(line: 2858, column: 8, scope: !3766)
!3812 = !DILocation(line: 2864, column: 25, scope: !3792)
!3813 = !DILocation(line: 2864, column: 17, scope: !3792)
!3814 = !DILocation(line: 2864, column: 3, scope: !3793)
!3815 = !DILocation(line: 2866, column: 7, scope: !3795)
!3816 = !DILocation(line: 2866, column: 7, scope: !3798)
!3817 = !DILocation(line: 2868, column: 37, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 2868, column: 8)
!3819 = !DILocation(line: 2868, column: 40, scope: !3818)
!3820 = !DILocation(line: 2868, column: 8, scope: !3818)
!3821 = !DILocation(line: 2868, column: 8, scope: !3801)
!3822 = !DILocation(line: 2871, column: 29, scope: !3801)
!3823 = !DILocation(line: 2871, column: 4, scope: !3801)
!3824 = !DILocation(line: 2872, column: 13, scope: !3800)
!3825 = !DILocation(line: 2872, column: 9, scope: !3800)
!3826 = !DILocation(line: 2872, column: 8, scope: !3801)
!3827 = !DILocation(line: 2875, column: 9, scope: !3805)
!3828 = !DILocation(line: 2875, column: 8, scope: !3801)
!3829 = !DILocation(line: 2880, column: 17, scope: !3803)
!3830 = !DILocation(line: 2880, column: 13, scope: !3803)
!3831 = !DILocation(line: 2881, column: 5, scope: !3803)
!3832 = !DILocation(line: 2881, column: 15, scope: !3803)
!3833 = !DILocation(line: 2881, column: 9, scope: !3803)
!3834 = !DILocation(line: 2881, column: 26, scope: !3803)
!3835 = !DILocation(line: 2881, column: 33, scope: !3803)
!3836 = !DILocation(line: 2881, column: 48, scope: !3803)
!3837 = !DILocation(line: 2881, column: 39, scope: !3803)
!3838 = !DILocation(line: 2880, column: 12, scope: !3804)
!3839 = !DILocation(line: 2886, column: 16, scope: !3807)
!3840 = !DILocation(line: 2886, column: 12, scope: !3807)
!3841 = !DILocation(line: 2886, column: 25, scope: !3807)
!3842 = !DILocation(line: 2886, column: 35, scope: !3807)
!3843 = !DILocation(line: 2886, column: 29, scope: !3807)
!3844 = !DILocation(line: 2886, column: 12, scope: !3804)
!3845 = !DILocation(line: 2890, column: 12, scope: !3801)
!3846 = !DILocation(line: 2891, column: 2, scope: !3801)
!3847 = distinct !{!3847, !3815, !3848}
!3848 = !DILocation(line: 2891, column: 2, scope: !3795)
!3849 = !DILocation(line: 2864, column: 37, scope: !3792)
!3850 = !DILocation(line: 2864, column: 3, scope: !3792)
!3851 = distinct !{!3851, !3814, !3852}
!3852 = !DILocation(line: 2892, column: 5, scope: !3793)
!3853 = !DILocation(line: 2894, column: 7, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 2894, column: 7)
!3855 = !DILocation(line: 2894, column: 7, scope: !3766)
!3856 = !DILocation(line: 2896, column: 17, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !3, line: 2896, column: 11)
!3858 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 2895, column: 5)
!3859 = !DILocation(line: 2896, column: 11, scope: !3857)
!3860 = !DILocation(line: 0, scope: !3857)
!3861 = !DILocation(line: 2896, column: 11, scope: !3858)
!3862 = !DILocation(line: 2898, column: 4, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 2897, column: 2)
!3864 = !DILocation(line: 2899, column: 13, scope: !3863)
!3865 = !DILocation(line: 2900, column: 12, scope: !3863)
!3866 = !DILocation(line: 2900, column: 22, scope: !3863)
!3867 = !DILocation(line: 2900, column: 27, scope: !3863)
!3868 = !DILocation(line: 2901, column: 22, scope: !3863)
!3869 = !DILocation(line: 2901, column: 28, scope: !3863)
!3870 = !DILocation(line: 2899, column: 4, scope: !3863)
!3871 = !DILocation(line: 2902, column: 14, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 2902, column: 8)
!3873 = !DILocation(line: 2902, column: 8, scope: !3872)
!3874 = !DILocation(line: 2902, column: 8, scope: !3863)
!3875 = !DILocation(line: 2904, column: 17, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 2903, column: 6)
!3877 = !DILocation(line: 2904, column: 8, scope: !3876)
!3878 = !DILocation(line: 2905, column: 19, scope: !3876)
!3879 = !DILocation(line: 2905, column: 36, scope: !3876)
!3880 = !DILocation(line: 2905, column: 8, scope: !3876)
!3881 = !DILocation(line: 2906, column: 17, scope: !3876)
!3882 = !DILocation(line: 2906, column: 8, scope: !3876)
!3883 = !DILocation(line: 2907, column: 6, scope: !3876)
!3884 = !DILocation(line: 2908, column: 14, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 2908, column: 8)
!3886 = !DILocation(line: 2908, column: 8, scope: !3885)
!3887 = !DILocation(line: 2908, column: 8, scope: !3863)
!3888 = !DILocation(line: 2910, column: 17, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 2909, column: 6)
!3890 = !DILocation(line: 2910, column: 8, scope: !3889)
!3891 = !DILocation(line: 2911, column: 19, scope: !3889)
!3892 = !DILocation(line: 2911, column: 36, scope: !3889)
!3893 = !DILocation(line: 2911, column: 8, scope: !3889)
!3894 = !DILocation(line: 2912, column: 17, scope: !3889)
!3895 = !DILocation(line: 2912, column: 8, scope: !3889)
!3896 = !DILocation(line: 2913, column: 6, scope: !3889)
!3897 = !DILocation(line: 2914, column: 14, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 2914, column: 8)
!3899 = !DILocation(line: 2914, column: 8, scope: !3898)
!3900 = !DILocation(line: 2914, column: 8, scope: !3863)
!3901 = !DILocation(line: 2916, column: 17, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 2915, column: 6)
!3903 = !DILocation(line: 2916, column: 8, scope: !3902)
!3904 = !DILocation(line: 2917, column: 19, scope: !3902)
!3905 = !DILocation(line: 2917, column: 36, scope: !3902)
!3906 = !DILocation(line: 2917, column: 8, scope: !3902)
!3907 = !DILocation(line: 2918, column: 17, scope: !3902)
!3908 = !DILocation(line: 2918, column: 8, scope: !3902)
!3909 = !DILocation(line: 2919, column: 6, scope: !3902)
!3910 = !DILocation(line: 2921, column: 13, scope: !3863)
!3911 = !DILocation(line: 2921, column: 4, scope: !3863)
!3912 = !DILocation(line: 2922, column: 15, scope: !3863)
!3913 = !DILocation(line: 2922, column: 32, scope: !3863)
!3914 = !DILocation(line: 2922, column: 4, scope: !3863)
!3915 = !DILocation(line: 2923, column: 19, scope: !3863)
!3916 = !DILocation(line: 2923, column: 10, scope: !3863)
!3917 = !DILocation(line: 2925, column: 13, scope: !3863)
!3918 = !DILocation(line: 2925, column: 4, scope: !3863)
!3919 = !DILocation(line: 2926, column: 13, scope: !3863)
!3920 = !DILocation(line: 2926, column: 57, scope: !3863)
!3921 = !DILocation(line: 2926, column: 4, scope: !3863)
!3922 = !DILocation(line: 2927, column: 19, scope: !3863)
!3923 = !DILocation(line: 2927, column: 10, scope: !3863)
!3924 = !DILocation(line: 2928, column: 2, scope: !3863)
!3925 = !DILocation(line: 2930, column: 2, scope: !3857)
!3926 = !DILocation(line: 2933, column: 9, scope: !3766)
!3927 = !DILocation(line: 2933, column: 3, scope: !3766)
!3928 = !DILocation(line: 2934, column: 1, scope: !3766)
!3929 = distinct !DISubprogram(name: "ei_start_1", scope: !148, file: !148, line: 696, type: !3930, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3932)
!3930 = !DISubroutineType(types: !3931)
!3931 = !{!3778, !3783}
!3932 = !{!3933, !3934}
!3933 = !DILocalVariable(name: "ev", arg: 1, scope: !3929, file: !148, line: 696, type: !3783)
!3934 = !DILocalVariable(name: "i", scope: !3929, file: !148, line: 698, type: !3778)
!3935 = !DILocation(line: 0, scope: !3929)
!3936 = !DILocation(line: 700, column: 5, scope: !3929)
!3937 = !DILocation(line: 700, column: 11, scope: !3929)
!3938 = !DILocation(line: 701, column: 5, scope: !3929)
!3939 = !DILocation(line: 701, column: 15, scope: !3929)
!3940 = !DILocation(line: 703, column: 3, scope: !3929)
!3941 = distinct !DISubprogram(name: "ei_cond", scope: !148, file: !148, line: 771, type: !3942, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3945)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!563, !3778, !3944}
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!3945 = !{!3946, !3947}
!3946 = !DILocalVariable(name: "ei", arg: 1, scope: !3941, file: !148, line: 771, type: !3778)
!3947 = !DILocalVariable(name: "p", arg: 2, scope: !3941, file: !148, line: 771, type: !3944)
!3948 = !DILocation(line: 0, scope: !3941)
!3949 = !DILocation(line: 773, column: 8, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3941, file: !148, line: 773, column: 7)
!3951 = !DILocation(line: 773, column: 7, scope: !3941)
!3952 = !DILocation(line: 775, column: 12, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3950, file: !148, line: 774, column: 5)
!3954 = !DILocation(line: 776, column: 7, scope: !3953)
!3955 = !DILocation(line: 781, column: 7, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3950, file: !148, line: 779, column: 5)
!3957 = !DILocation(line: 0, scope: !3950)
!3958 = !DILocation(line: 783, column: 1, scope: !3941)
!3959 = distinct !DISubprogram(name: "check_simple_exit", scope: !3, file: !3, line: 2805, type: !3960, scopeLine: 2806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3962)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{null, !987, !962, !1701}
!3962 = !{!3963, !3964, !3965, !3966, !3967, !3968, !3969}
!3963 = !DILocalVariable(name: "loop", arg: 1, scope: !3959, file: !3, line: 2805, type: !987)
!3964 = !DILocalVariable(name: "e", arg: 2, scope: !3959, file: !3, line: 2805, type: !962)
!3965 = !DILocalVariable(name: "desc", arg: 3, scope: !3959, file: !3, line: 2805, type: !1701)
!3966 = !DILocalVariable(name: "exit_bb", scope: !3959, file: !3, line: 2807, type: !945)
!3967 = !DILocalVariable(name: "condition", scope: !3959, file: !3, line: 2808, type: !634)
!3968 = !DILocalVariable(name: "at", scope: !3959, file: !3, line: 2808, type: !634)
!3969 = !DILocalVariable(name: "ein", scope: !3959, file: !3, line: 2809, type: !962)
!3970 = !DILocation(line: 0, scope: !3959)
!3971 = !DILocation(line: 2808, column: 3, scope: !3959)
!3972 = !DILocation(line: 2811, column: 16, scope: !3959)
!3973 = !DILocation(line: 2812, column: 9, scope: !3959)
!3974 = !DILocation(line: 2812, column: 18, scope: !3959)
!3975 = !DILocation(line: 2815, column: 16, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 2815, column: 7)
!3977 = !DILocation(line: 2815, column: 28, scope: !3976)
!3978 = !DILocation(line: 2815, column: 7, scope: !3959)
!3979 = !DILocation(line: 2819, column: 46, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 2819, column: 7)
!3981 = !DILocation(line: 2819, column: 8, scope: !3980)
!3982 = !DILocation(line: 2819, column: 7, scope: !3959)
!3983 = !DILocation(line: 2823, column: 24, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 2823, column: 7)
!3985 = !DILocation(line: 2823, column: 8, scope: !3984)
!3986 = !DILocation(line: 2823, column: 7, scope: !3959)
!3987 = !DILocation(line: 2826, column: 9, scope: !3959)
!3988 = !DILocation(line: 2827, column: 11, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 2827, column: 7)
!3990 = !DILocation(line: 2827, column: 7, scope: !3959)
!3991 = !DILocation(line: 2828, column: 11, scope: !3989)
!3992 = !DILocation(line: 2828, column: 5, scope: !3989)
!3993 = !DILocation(line: 2830, column: 9, scope: !3959)
!3994 = !DILocation(line: 2830, column: 18, scope: !3959)
!3995 = !DILocation(line: 2831, column: 9, scope: !3959)
!3996 = !DILocation(line: 2831, column: 17, scope: !3959)
!3997 = !DILocation(line: 2834, column: 36, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 2834, column: 7)
!3999 = !DILocation(line: 2834, column: 21, scope: !3998)
!4000 = !DILocation(line: 2834, column: 19, scope: !3998)
!4001 = !DILocation(line: 2834, column: 7, scope: !3959)
!4002 = !DILocation(line: 2837, column: 12, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 2837, column: 7)
!4004 = !DILocation(line: 2837, column: 18, scope: !4003)
!4005 = !DILocation(line: 2837, column: 7, scope: !3959)
!4006 = !DILocation(line: 2839, column: 19, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 2838, column: 5)
!4008 = !DILocation(line: 2840, column: 12, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 2840, column: 11)
!4010 = !DILocation(line: 2840, column: 11, scope: !4007)
!4011 = !DILocation(line: 2846, column: 34, scope: !3959)
!4012 = !DILocation(line: 2846, column: 3, scope: !3959)
!4013 = !DILocation(line: 2847, column: 1, scope: !3959)
!4014 = distinct !DISubprogram(name: "ei_next", scope: !148, file: !148, line: 736, type: !4015, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4018)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{null, !4017}
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3778, size: 64)
!4018 = !{!4019}
!4019 = !DILocalVariable(name: "i", arg: 1, scope: !4014, file: !148, line: 736, type: !4017)
!4020 = !DILocation(line: 0, scope: !4014)
!4021 = !DILocation(line: 738, column: 3, scope: !4014)
!4022 = !DILocation(line: 739, column: 11, scope: !4014)
!4023 = !DILocation(line: 740, column: 1, scope: !4014)
!4024 = distinct !DISubprogram(name: "get_simple_loop_desc", scope: !3, file: !3, line: 2940, type: !4025, scopeLine: 2941, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4027)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!1701, !987}
!4027 = !{!4028, !4029, !4030}
!4028 = !DILocalVariable(name: "loop", arg: 1, scope: !4024, file: !3, line: 2940, type: !987)
!4029 = !DILocalVariable(name: "desc", scope: !4024, file: !3, line: 2942, type: !1701)
!4030 = !DILocalVariable(name: "wording", scope: !4031, file: !3, line: 2956, type: !569)
!4031 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 2955, column: 5)
!4032 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 2954, column: 7)
!4033 = !DILocation(line: 0, scope: !4024)
!4034 = !DILocation(line: 2942, column: 29, scope: !4024)
!4035 = !DILocation(line: 2944, column: 7, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 2944, column: 7)
!4037 = !DILocation(line: 2944, column: 7, scope: !4024)
!4038 = !DILocation(line: 2949, column: 10, scope: !4024)
!4039 = !DILocation(line: 2950, column: 3, scope: !4024)
!4040 = !DILocation(line: 2951, column: 3, scope: !4024)
!4041 = !DILocation(line: 2952, column: 9, scope: !4024)
!4042 = !DILocation(line: 2952, column: 13, scope: !4024)
!4043 = !DILocation(line: 2954, column: 13, scope: !4032)
!4044 = !DILocation(line: 2954, column: 7, scope: !4032)
!4045 = !DILocation(line: 2954, column: 22, scope: !4032)
!4046 = !DILocation(line: 2954, column: 32, scope: !4032)
!4047 = !DILocation(line: 2954, column: 26, scope: !4032)
!4048 = !DILocation(line: 2954, column: 44, scope: !4032)
!4049 = !DILocation(line: 2954, column: 53, scope: !4032)
!4050 = !DILocation(line: 2954, column: 47, scope: !4032)
!4051 = !DILocation(line: 2954, column: 7, scope: !4024)
!4052 = !DILocation(line: 2960, column: 12, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 2960, column: 11)
!4054 = !DILocation(line: 2960, column: 39, scope: !4053)
!4055 = !DILocation(line: 2960, column: 36, scope: !4053)
!4056 = !DILocation(line: 2962, column: 14, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 2962, column: 8)
!4058 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 2961, column: 2)
!4059 = !DILocation(line: 2962, column: 8, scope: !4057)
!4060 = !DILocation(line: 2962, column: 8, scope: !4058)
!4061 = !DILocation(line: 2965, column: 3, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 2963, column: 6)
!4063 = !DILocation(line: 0, scope: !4031)
!4064 = !DILocation(line: 2968, column: 8, scope: !4062)
!4065 = !DILocation(line: 2971, column: 14, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 2971, column: 8)
!4067 = !DILocation(line: 2970, column: 6, scope: !4062)
!4068 = !DILocation(line: 2971, column: 8, scope: !4066)
!4069 = !DILocation(line: 2971, column: 8, scope: !4058)
!4070 = !DILocation(line: 2974, column: 3, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 2972, column: 6)
!4072 = !DILocation(line: 2977, column: 8, scope: !4071)
!4073 = !DILocation(line: 2979, column: 6, scope: !4071)
!4074 = !DILocation(line: 2982, column: 11, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 2982, column: 11)
!4076 = !DILocation(line: 2982, column: 11, scope: !4031)
!4077 = !DILocation(line: 2984, column: 22, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4075, file: !3, line: 2983, column: 2)
!4079 = !DILocation(line: 2985, column: 10, scope: !4078)
!4080 = !DILocation(line: 2985, column: 19, scope: !4078)
!4081 = !DILocation(line: 2986, column: 2, scope: !4078)
!4082 = !DILocation(line: 2990, column: 1, scope: !4024)
!4083 = distinct !DISubprogram(name: "simple_loop_desc", scope: !135, file: !135, line: 407, type: !4025, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4084)
!4084 = !{!4085}
!4085 = !DILocalVariable(name: "loop", arg: 1, scope: !4083, file: !135, line: 407, type: !987)
!4086 = !DILocation(line: 0, scope: !4083)
!4087 = !DILocation(line: 409, column: 38, scope: !4083)
!4088 = !DILocation(line: 409, column: 3, scope: !4083)
!4089 = distinct !DISubprogram(name: "free_simple_loop_desc", scope: !3, file: !3, line: 2995, type: !2294, scopeLine: 2996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4090)
!4090 = !{!4091, !4092}
!4091 = !DILocalVariable(name: "loop", arg: 1, scope: !4089, file: !3, line: 2995, type: !987)
!4092 = !DILocalVariable(name: "desc", scope: !4089, file: !3, line: 2997, type: !1701)
!4093 = !DILocation(line: 0, scope: !4089)
!4094 = !DILocation(line: 2997, column: 29, scope: !4089)
!4095 = !DILocation(line: 2999, column: 8, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 2999, column: 7)
!4097 = !DILocation(line: 2999, column: 7, scope: !4089)
!4098 = !DILocation(line: 3002, column: 9, scope: !4089)
!4099 = !DILocation(line: 3002, column: 3, scope: !4089)
!4100 = !DILocation(line: 3003, column: 9, scope: !4089)
!4101 = !DILocation(line: 3003, column: 13, scope: !4089)
!4102 = !DILocation(line: 3004, column: 1, scope: !4089)
!4103 = distinct !DISubprogram(name: "rhs_regno", scope: !391, file: !391, line: 1051, type: !4104, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4106)
!4104 = !DISubroutineType(types: !4105)
!4105 = !{!7, !1732}
!4106 = !{!4107}
!4107 = !DILocalVariable(name: "x", arg: 1, scope: !4103, file: !391, line: 1051, type: !1732)
!4108 = !DILocation(line: 0, scope: !4103)
!4109 = !DILocation(line: 1053, column: 10, scope: !4103)
!4110 = !DILocation(line: 1053, column: 3, scope: !4103)
!4111 = distinct !DISubprogram(name: "iv_subreg", scope: !3, file: !3, line: 405, type: !4112, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4114)
!4112 = !DISubroutineType(types: !4113)
!4113 = !{!563, !1736, !5}
!4114 = !{!4115, !4116, !4117}
!4115 = !DILocalVariable(name: "iv", arg: 1, scope: !4111, file: !3, line: 405, type: !1736)
!4116 = !DILocalVariable(name: "mode", arg: 2, scope: !4111, file: !3, line: 405, type: !5)
!4117 = !DILocalVariable(name: "val", scope: !4118, file: !3, line: 411, type: !634)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 410, column: 5)
!4119 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 408, column: 7)
!4120 = !DILocation(line: 0, scope: !4111)
!4121 = !DILocation(line: 408, column: 11, scope: !4119)
!4122 = !DILocation(line: 408, column: 19, scope: !4119)
!4123 = !DILocation(line: 408, column: 16, scope: !4119)
!4124 = !DILocation(line: 409, column: 7, scope: !4119)
!4125 = !DILocation(line: 409, column: 15, scope: !4119)
!4126 = !DILocation(line: 409, column: 11, scope: !4119)
!4127 = !DILocation(line: 408, column: 7, scope: !4111)
!4128 = !DILocation(line: 411, column: 17, scope: !4118)
!4129 = !DILocation(line: 0, scope: !4118)
!4130 = !DILocation(line: 412, column: 44, scope: !4118)
!4131 = !DILocation(line: 412, column: 13, scope: !4118)
!4132 = !DILocation(line: 414, column: 11, scope: !4118)
!4133 = !DILocation(line: 414, column: 16, scope: !4118)
!4134 = !DILocation(line: 415, column: 11, scope: !4118)
!4135 = !DILocation(line: 415, column: 18, scope: !4118)
!4136 = !DILocation(line: 416, column: 34, scope: !4118)
!4137 = !DILocation(line: 416, column: 11, scope: !4118)
!4138 = !DILocation(line: 416, column: 16, scope: !4118)
!4139 = !DILocation(line: 417, column: 19, scope: !4118)
!4140 = !DILocation(line: 417, column: 11, scope: !4118)
!4141 = !DILocation(line: 417, column: 17, scope: !4118)
!4142 = !DILocation(line: 418, column: 18, scope: !4118)
!4143 = !DILocation(line: 418, column: 11, scope: !4118)
!4144 = !DILocation(line: 418, column: 16, scope: !4118)
!4145 = !DILocation(line: 422, column: 11, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 422, column: 7)
!4147 = !DILocation(line: 422, column: 23, scope: !4146)
!4148 = !DILocation(line: 422, column: 7, scope: !4111)
!4149 = !DILocation(line: 425, column: 7, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 425, column: 7)
!4151 = !DILocation(line: 425, column: 33, scope: !4150)
!4152 = !DILocation(line: 425, column: 31, scope: !4150)
!4153 = !DILocation(line: 425, column: 7, scope: !4111)
!4154 = !DILocation(line: 428, column: 7, scope: !4111)
!4155 = !DILocation(line: 428, column: 14, scope: !4111)
!4156 = !DILocation(line: 429, column: 12, scope: !4111)
!4157 = !DILocation(line: 431, column: 62, scope: !4111)
!4158 = !DILocation(line: 433, column: 18, scope: !4111)
!4159 = !DILocation(line: 433, column: 28, scope: !4111)
!4160 = !DILocation(line: 432, column: 7, scope: !4111)
!4161 = !DILocation(line: 431, column: 14, scope: !4111)
!4162 = !DILocation(line: 431, column: 12, scope: !4111)
!4163 = !DILocation(line: 434, column: 45, scope: !4111)
!4164 = !DILocation(line: 434, column: 62, scope: !4111)
!4165 = !DILocation(line: 434, column: 72, scope: !4111)
!4166 = !DILocation(line: 434, column: 14, scope: !4111)
!4167 = !DILocation(line: 434, column: 12, scope: !4111)
!4168 = !DILocation(line: 435, column: 14, scope: !4111)
!4169 = !DILocation(line: 435, column: 12, scope: !4111)
!4170 = !DILocation(line: 436, column: 15, scope: !4111)
!4171 = !DILocation(line: 436, column: 13, scope: !4111)
!4172 = !DILocation(line: 437, column: 7, scope: !4111)
!4173 = !DILocation(line: 437, column: 21, scope: !4111)
!4174 = !DILocation(line: 439, column: 3, scope: !4111)
!4175 = !DILocation(line: 440, column: 1, scope: !4111)
!4176 = distinct !DISubprogram(name: "iv_get_reaching_def", scope: !3, file: !3, line: 327, type: !4177, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4179)
!4177 = !DISubroutineType(types: !4178)
!4178 = !{!555, !634, !634, !2553}
!4179 = !{!4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188}
!4180 = !DILocalVariable(name: "insn", arg: 1, scope: !4176, file: !3, line: 327, type: !634)
!4181 = !DILocalVariable(name: "reg", arg: 2, scope: !4176, file: !3, line: 327, type: !634)
!4182 = !DILocalVariable(name: "def", arg: 3, scope: !4176, file: !3, line: 327, type: !2553)
!4183 = !DILocalVariable(name: "use", scope: !4176, file: !3, line: 329, type: !2530)
!4184 = !DILocalVariable(name: "adef", scope: !4176, file: !3, line: 329, type: !2530)
!4185 = !DILocalVariable(name: "def_bb", scope: !4176, file: !3, line: 330, type: !945)
!4186 = !DILocalVariable(name: "use_bb", scope: !4176, file: !3, line: 330, type: !945)
!4187 = !DILocalVariable(name: "def_insn", scope: !4176, file: !3, line: 331, type: !634)
!4188 = !DILocalVariable(name: "dom_p", scope: !4176, file: !3, line: 332, type: !563)
!4189 = !DILocation(line: 0, scope: !4176)
!4190 = !DILocation(line: 334, column: 8, scope: !4176)
!4191 = !DILocation(line: 335, column: 8, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 335, column: 7)
!4193 = !DILocation(line: 335, column: 7, scope: !4176)
!4194 = !DILocation(line: 337, column: 7, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 337, column: 7)
!4196 = !DILocation(line: 337, column: 22, scope: !4195)
!4197 = !DILocation(line: 337, column: 7, scope: !4176)
!4198 = !DILocation(line: 338, column: 11, scope: !4195)
!4199 = !DILocation(line: 339, column: 3, scope: !4176)
!4200 = !DILocation(line: 338, column: 5, scope: !4195)
!4201 = !DILocation(line: 341, column: 9, scope: !4176)
!4202 = !DILocation(line: 342, column: 3, scope: !4176)
!4203 = !DILocation(line: 344, column: 8, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 344, column: 7)
!4205 = !DILocation(line: 344, column: 7, scope: !4176)
!4206 = !DILocation(line: 348, column: 27, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 348, column: 7)
!4208 = !DILocation(line: 348, column: 7, scope: !4207)
!4209 = !DILocation(line: 348, column: 7, scope: !4176)
!4210 = !DILocation(line: 351, column: 30, scope: !4176)
!4211 = !DILocation(line: 354, column: 7, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 354, column: 7)
!4213 = !DILocation(line: 354, column: 27, scope: !4212)
!4214 = !DILocation(line: 354, column: 7, scope: !4176)
!4215 = !DILocation(line: 357, column: 14, scope: !4176)
!4216 = !DILocation(line: 358, column: 12, scope: !4176)
!4217 = !DILocation(line: 359, column: 12, scope: !4176)
!4218 = !DILocation(line: 361, column: 14, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 361, column: 7)
!4220 = !DILocation(line: 361, column: 7, scope: !4176)
!4221 = !DILocation(line: 362, column: 14, scope: !4219)
!4222 = !DILocation(line: 362, column: 40, scope: !4219)
!4223 = !DILocation(line: 362, column: 38, scope: !4219)
!4224 = !DILocation(line: 362, column: 13, scope: !4219)
!4225 = !DILocation(line: 362, column: 5, scope: !4219)
!4226 = !DILocation(line: 364, column: 13, scope: !4219)
!4227 = !DILocation(line: 0, scope: !4219)
!4228 = !DILocation(line: 366, column: 7, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 366, column: 7)
!4230 = !DILocation(line: 366, column: 7, scope: !4176)
!4231 = !DILocation(line: 368, column: 12, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 367, column: 5)
!4233 = !DILocation(line: 369, column: 7, scope: !4232)
!4234 = !DILocation(line: 375, column: 35, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 375, column: 7)
!4236 = !DILocation(line: 375, column: 7, scope: !4235)
!4237 = !DILocation(line: 379, column: 1, scope: !4176)
!4238 = distinct !DISubprogram(name: "iv_constant", scope: !3, file: !3, line: 385, type: !4239, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4241)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!563, !1736, !634, !5}
!4241 = !{!4242, !4243, !4244}
!4242 = !DILocalVariable(name: "iv", arg: 1, scope: !4238, file: !3, line: 385, type: !1736)
!4243 = !DILocalVariable(name: "cst", arg: 2, scope: !4238, file: !3, line: 385, type: !634)
!4244 = !DILocalVariable(name: "mode", arg: 3, scope: !4238, file: !3, line: 385, type: !5)
!4245 = !DILocation(line: 0, scope: !4238)
!4246 = !DILocation(line: 387, column: 7, scope: !4238)
!4247 = !DILocation(line: 388, column: 12, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 387, column: 7)
!4249 = !DILocation(line: 388, column: 5, scope: !4248)
!4250 = !DILocation(line: 390, column: 7, scope: !4238)
!4251 = !DILocation(line: 390, column: 12, scope: !4238)
!4252 = !DILocation(line: 391, column: 7, scope: !4238)
!4253 = !DILocation(line: 391, column: 12, scope: !4238)
!4254 = !DILocation(line: 392, column: 14, scope: !4238)
!4255 = !DILocation(line: 392, column: 7, scope: !4238)
!4256 = !DILocation(line: 392, column: 12, scope: !4238)
!4257 = !DILocation(line: 393, column: 7, scope: !4238)
!4258 = !DILocation(line: 393, column: 21, scope: !4238)
!4259 = !DILocation(line: 394, column: 7, scope: !4238)
!4260 = !DILocation(line: 394, column: 14, scope: !4238)
!4261 = !DILocation(line: 395, column: 7, scope: !4238)
!4262 = !DILocation(line: 395, column: 19, scope: !4238)
!4263 = !DILocation(line: 396, column: 15, scope: !4238)
!4264 = !DILocation(line: 396, column: 7, scope: !4238)
!4265 = !DILocation(line: 396, column: 13, scope: !4238)
!4266 = !DILocation(line: 397, column: 14, scope: !4238)
!4267 = !DILocation(line: 397, column: 7, scope: !4238)
!4268 = !DILocation(line: 397, column: 12, scope: !4238)
!4269 = !DILocation(line: 399, column: 3, scope: !4238)
!4270 = distinct !DISubprogram(name: "record_iv", scope: !3, file: !3, line: 808, type: !4271, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4273)
!4271 = !DISubroutineType(types: !4272)
!4272 = !{null, !2530, !1736}
!4273 = !{!4274, !4275, !4276}
!4274 = !DILocalVariable(name: "def", arg: 1, scope: !4270, file: !3, line: 808, type: !2530)
!4275 = !DILocalVariable(name: "iv", arg: 2, scope: !4270, file: !3, line: 808, type: !1736)
!4276 = !DILocalVariable(name: "recorded_iv", scope: !4270, file: !3, line: 810, type: !1736)
!4277 = !DILocation(line: 0, scope: !4270)
!4278 = !DILocation(line: 810, column: 32, scope: !4270)
!4279 = !DILocation(line: 812, column: 18, scope: !4270)
!4280 = !DILocation(line: 813, column: 3, scope: !4270)
!4281 = !DILocation(line: 814, column: 3, scope: !4270)
!4282 = !DILocation(line: 815, column: 1, scope: !4270)
!4283 = distinct !DISubprogram(name: "df_rd_get_bb_info", scope: !1739, file: !1739, line: 1043, type: !4284, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4286)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{!1737, !7}
!4286 = !{!4287}
!4287 = !DILocalVariable(name: "index", arg: 1, scope: !4283, file: !1739, line: 1043, type: !7)
!4288 = !DILocation(line: 0, scope: !4283)
!4289 = !DILocation(line: 1045, column: 15, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4283, file: !1739, line: 1045, column: 7)
!4291 = !DILocation(line: 1045, column: 22, scope: !4290)
!4292 = !DILocation(line: 1045, column: 13, scope: !4290)
!4293 = !DILocation(line: 1045, column: 7, scope: !4283)
!4294 = !DILocation(line: 1046, column: 44, scope: !4290)
!4295 = !DILocation(line: 1046, column: 37, scope: !4290)
!4296 = !DILocation(line: 1046, column: 5, scope: !4290)
!4297 = !DILocation(line: 0, scope: !4290)
!4298 = !DILocation(line: 1049, column: 1, scope: !4283)
!4299 = distinct !DISubprogram(name: "analyzed_for_bivness_p", scope: !3, file: !3, line: 821, type: !3157, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4300)
!4300 = !{!4301, !4302, !4303}
!4301 = !DILocalVariable(name: "def", arg: 1, scope: !4299, file: !3, line: 821, type: !634)
!4302 = !DILocalVariable(name: "iv", arg: 2, scope: !4299, file: !3, line: 821, type: !1736)
!4303 = !DILocalVariable(name: "biv", scope: !4299, file: !3, line: 823, type: !1746)
!4304 = !DILocation(line: 0, scope: !4299)
!4305 = !DILocation(line: 824, column: 47, scope: !4299)
!4306 = !DILocation(line: 824, column: 53, scope: !4299)
!4307 = !DILocation(line: 824, column: 58, scope: !4299)
!4308 = !DILocation(line: 824, column: 26, scope: !4299)
!4309 = !DILocation(line: 826, column: 8, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 826, column: 7)
!4311 = !DILocation(line: 826, column: 7, scope: !4299)
!4312 = !DILocation(line: 829, column: 14, scope: !4299)
!4313 = !DILocation(line: 830, column: 3, scope: !4299)
!4314 = !DILocation(line: 831, column: 1, scope: !4299)
!4315 = distinct !DISubprogram(name: "get_biv_step", scope: !3, file: !3, line: 788, type: !4316, scopeLine: 791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4320)
!4316 = !DISubroutineType(types: !4317)
!4317 = !{!563, !2530, !634, !1749, !4318, !4319, !4318, !1749}
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!4320 = !{!4321, !4322, !4323, !4324, !4325, !4326, !4327}
!4321 = !DILocalVariable(name: "last_def", arg: 1, scope: !4315, file: !3, line: 788, type: !2530)
!4322 = !DILocalVariable(name: "reg", arg: 2, scope: !4315, file: !3, line: 788, type: !634)
!4323 = !DILocalVariable(name: "inner_step", arg: 3, scope: !4315, file: !3, line: 788, type: !1749)
!4324 = !DILocalVariable(name: "inner_mode", arg: 4, scope: !4315, file: !3, line: 789, type: !4318)
!4325 = !DILocalVariable(name: "extend", arg: 5, scope: !4315, file: !3, line: 789, type: !4319)
!4326 = !DILocalVariable(name: "outer_mode", arg: 6, scope: !4315, file: !3, line: 790, type: !4318)
!4327 = !DILocalVariable(name: "outer_step", arg: 7, scope: !4315, file: !3, line: 790, type: !1749)
!4328 = !DILocation(line: 0, scope: !4315)
!4329 = !DILocation(line: 792, column: 17, scope: !4315)
!4330 = !DILocation(line: 792, column: 15, scope: !4315)
!4331 = !DILocation(line: 794, column: 8, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 794, column: 7)
!4333 = !DILocation(line: 794, column: 7, scope: !4315)
!4334 = !DILocation(line: 799, column: 3, scope: !4315)
!4335 = !DILocation(line: 800, column: 3, scope: !4315)
!4336 = !DILocation(line: 803, column: 1, scope: !4315)
!4337 = distinct !DISubprogram(name: "record_biv", scope: !3, file: !3, line: 834, type: !4338, scopeLine: 835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4340)
!4338 = !DISubroutineType(types: !4339)
!4339 = !{null, !634, !1736}
!4340 = !{!4341, !4342, !4343, !4344}
!4341 = !DILocalVariable(name: "def", arg: 1, scope: !4337, file: !3, line: 834, type: !634)
!4342 = !DILocalVariable(name: "iv", arg: 2, scope: !4337, file: !3, line: 834, type: !1736)
!4343 = !DILocalVariable(name: "biv", scope: !4337, file: !3, line: 836, type: !1746)
!4344 = !DILocalVariable(name: "slot", scope: !4337, file: !3, line: 837, type: !1135)
!4345 = !DILocation(line: 0, scope: !4337)
!4346 = !DILocation(line: 836, column: 27, scope: !4337)
!4347 = !DILocation(line: 837, column: 43, scope: !4337)
!4348 = !DILocation(line: 837, column: 49, scope: !4337)
!4349 = !DILocation(line: 837, column: 54, scope: !4337)
!4350 = !DILocation(line: 837, column: 17, scope: !4337)
!4351 = !DILocation(line: 839, column: 16, scope: !4337)
!4352 = !DILocation(line: 839, column: 8, scope: !4337)
!4353 = !DILocation(line: 839, column: 14, scope: !4337)
!4354 = !DILocation(line: 840, column: 8, scope: !4337)
!4355 = !DILocation(line: 840, column: 13, scope: !4337)
!4356 = !DILocation(line: 841, column: 3, scope: !4337)
!4357 = !DILocation(line: 842, column: 9, scope: !4337)
!4358 = !DILocation(line: 843, column: 1, scope: !4337)
!4359 = distinct !DISubprogram(name: "get_biv_step_1", scope: !3, file: !3, line: 621, type: !4360, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4362)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{!563, !2530, !634, !1749, !4318, !4319, !5, !1749}
!4362 = !{!4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381}
!4363 = !DILocalVariable(name: "def", arg: 1, scope: !4359, file: !3, line: 621, type: !2530)
!4364 = !DILocalVariable(name: "reg", arg: 2, scope: !4359, file: !3, line: 621, type: !634)
!4365 = !DILocalVariable(name: "inner_step", arg: 3, scope: !4359, file: !3, line: 622, type: !1749)
!4366 = !DILocalVariable(name: "inner_mode", arg: 4, scope: !4359, file: !3, line: 622, type: !4318)
!4367 = !DILocalVariable(name: "extend", arg: 5, scope: !4359, file: !3, line: 623, type: !4319)
!4368 = !DILocalVariable(name: "outer_mode", arg: 6, scope: !4359, file: !3, line: 623, type: !5)
!4369 = !DILocalVariable(name: "outer_step", arg: 7, scope: !4359, file: !3, line: 624, type: !1749)
!4370 = !DILocalVariable(name: "set", scope: !4359, file: !3, line: 626, type: !634)
!4371 = !DILocalVariable(name: "rhs", scope: !4359, file: !3, line: 626, type: !634)
!4372 = !DILocalVariable(name: "op0", scope: !4359, file: !3, line: 626, type: !634)
!4373 = !DILocalVariable(name: "op1", scope: !4359, file: !3, line: 626, type: !634)
!4374 = !DILocalVariable(name: "next", scope: !4359, file: !3, line: 627, type: !634)
!4375 = !DILocalVariable(name: "nextr", scope: !4359, file: !3, line: 627, type: !634)
!4376 = !DILocalVariable(name: "tmp", scope: !4359, file: !3, line: 627, type: !634)
!4377 = !DILocalVariable(name: "code", scope: !4359, file: !3, line: 628, type: !390)
!4378 = !DILocalVariable(name: "insn", scope: !4359, file: !3, line: 629, type: !634)
!4379 = !DILocalVariable(name: "next_def", scope: !4359, file: !3, line: 630, type: !2530)
!4380 = !DILocalVariable(name: "res", scope: !4359, file: !3, line: 631, type: !555)
!4381 = !DILocalVariable(name: "amode", scope: !4382, file: !3, line: 734, type: !5)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 733, column: 5)
!4383 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 732, column: 7)
!4384 = !DILocation(line: 0, scope: !4359)
!4385 = !DILocation(line: 629, column: 14, scope: !4359)
!4386 = !DILocation(line: 630, column: 3, scope: !4359)
!4387 = !DILocation(line: 633, column: 9, scope: !4359)
!4388 = !DILocation(line: 634, column: 8, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 634, column: 7)
!4390 = !DILocation(line: 634, column: 7, scope: !4359)
!4391 = !DILocation(line: 637, column: 9, scope: !4359)
!4392 = !DILocation(line: 638, column: 7, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 638, column: 7)
!4394 = !DILocation(line: 638, column: 7, scope: !4359)
!4395 = !DILocation(line: 639, column: 11, scope: !4393)
!4396 = !DILocation(line: 639, column: 5, scope: !4393)
!4397 = !DILocation(line: 641, column: 11, scope: !4393)
!4398 = !DILocation(line: 0, scope: !4393)
!4399 = !DILocation(line: 643, column: 10, scope: !4359)
!4400 = !DILocation(line: 644, column: 3, scope: !4359)
!4401 = !DILocation(line: 653, column: 13, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 645, column: 5)
!4403 = !DILocation(line: 654, column: 13, scope: !4402)
!4404 = !DILocation(line: 656, column: 16, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 656, column: 11)
!4406 = !DILocation(line: 656, column: 24, scope: !4405)
!4407 = !DILocation(line: 656, column: 27, scope: !4405)
!4408 = !DILocation(line: 656, column: 11, scope: !4402)
!4409 = !DILocation(line: 0, scope: !4402)
!4410 = !DILocation(line: 661, column: 12, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 661, column: 11)
!4412 = !DILocation(line: 662, column: 4, scope: !4411)
!4413 = !DILocation(line: 662, column: 8, scope: !4411)
!4414 = !DILocation(line: 661, column: 11, scope: !4402)
!4415 = !DILocation(line: 665, column: 11, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 665, column: 11)
!4417 = !DILocation(line: 665, column: 26, scope: !4416)
!4418 = !DILocation(line: 665, column: 11, scope: !4402)
!4419 = !DILocation(line: 675, column: 8, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 675, column: 8)
!4421 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 666, column: 2)
!4422 = !DILocation(line: 675, column: 23, scope: !4420)
!4423 = !DILocation(line: 675, column: 8, scope: !4421)
!4424 = !DILocation(line: 677, column: 8, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 677, column: 8)
!4426 = !DILocation(line: 677, column: 36, scope: !4425)
!4427 = !DILocation(line: 677, column: 8, scope: !4421)
!4428 = !DILocation(line: 686, column: 11, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 686, column: 11)
!4430 = !DILocation(line: 686, column: 26, scope: !4429)
!4431 = !DILocation(line: 686, column: 11, scope: !4402)
!4432 = !DILocation(line: 689, column: 13, scope: !4402)
!4433 = !DILocation(line: 690, column: 12, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 690, column: 11)
!4435 = !DILocation(line: 690, column: 11, scope: !4402)
!4436 = !DILocation(line: 700, column: 7, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 700, column: 7)
!4438 = !DILocation(line: 700, column: 23, scope: !4437)
!4439 = !DILocation(line: 700, column: 7, scope: !4359)
!4440 = !DILocation(line: 702, column: 12, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 702, column: 11)
!4442 = distinct !DILexicalBlock(scope: !4437, file: !3, line: 701, column: 5)
!4443 = !DILocation(line: 702, column: 11, scope: !4442)
!4444 = !DILocation(line: 705, column: 15, scope: !4442)
!4445 = !DILocation(line: 706, column: 11, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 706, column: 11)
!4447 = !DILocation(line: 706, column: 28, scope: !4446)
!4448 = !DILocation(line: 706, column: 11, scope: !4442)
!4449 = !DILocation(line: 0, scope: !4437)
!4450 = !DILocation(line: 712, column: 9, scope: !4359)
!4451 = !DILocation(line: 714, column: 26, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 714, column: 7)
!4453 = !DILocation(line: 719, column: 12, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 719, column: 11)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 718, column: 5)
!4456 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 717, column: 7)
!4457 = !DILocation(line: 719, column: 11, scope: !4455)
!4458 = !DILocation(line: 722, column: 21, scope: !4455)
!4459 = !DILocation(line: 722, column: 19, scope: !4455)
!4460 = !DILocation(line: 723, column: 15, scope: !4455)
!4461 = !DILocation(line: 724, column: 19, scope: !4455)
!4462 = !DILocation(line: 725, column: 21, scope: !4455)
!4463 = !DILocation(line: 725, column: 19, scope: !4455)
!4464 = !DILocation(line: 726, column: 5, scope: !4455)
!4465 = !DILocation(line: 727, column: 29, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 727, column: 12)
!4467 = !DILocation(line: 727, column: 13, scope: !4466)
!4468 = !DILocation(line: 727, column: 12, scope: !4456)
!4469 = !DILocation(line: 732, column: 7, scope: !4383)
!4470 = !DILocation(line: 732, column: 23, scope: !4383)
!4471 = !DILocation(line: 732, column: 7, scope: !4359)
!4472 = !DILocation(line: 734, column: 33, scope: !4382)
!4473 = !DILocation(line: 0, scope: !4382)
!4474 = !DILocation(line: 736, column: 11, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 736, column: 11)
!4476 = !DILocation(line: 736, column: 35, scope: !4475)
!4477 = !DILocation(line: 736, column: 33, scope: !4475)
!4478 = !DILocation(line: 736, column: 11, scope: !4382)
!4479 = !DILocation(line: 739, column: 19, scope: !4382)
!4480 = !DILocation(line: 741, column: 7, scope: !4382)
!4481 = !DILocation(line: 741, column: 20, scope: !4382)
!4482 = !DILocation(line: 740, column: 21, scope: !4382)
!4483 = !DILocation(line: 740, column: 19, scope: !4382)
!4484 = !DILocation(line: 742, column: 21, scope: !4382)
!4485 = !DILocation(line: 742, column: 19, scope: !4382)
!4486 = !DILocation(line: 743, column: 15, scope: !4382)
!4487 = !DILocation(line: 744, column: 5, scope: !4383)
!4488 = !DILocation(line: 746, column: 3, scope: !4359)
!4489 = !DILocation(line: 754, column: 11, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4491, file: !3, line: 754, column: 11)
!4491 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 747, column: 5)
!4492 = !DILocation(line: 754, column: 23, scope: !4490)
!4493 = !DILocation(line: 756, column: 4, scope: !4490)
!4494 = !DILocation(line: 756, column: 7, scope: !4490)
!4495 = !DILocation(line: 756, column: 22, scope: !4490)
!4496 = !DILocation(line: 754, column: 11, scope: !4491)
!4497 = !DILocation(line: 758, column: 9, scope: !4490)
!4498 = !DILocation(line: 757, column: 16, scope: !4490)
!4499 = !DILocation(line: 757, column: 14, scope: !4490)
!4500 = !DILocation(line: 757, column: 2, scope: !4490)
!4501 = !DILocation(line: 761, column: 9, scope: !4490)
!4502 = !DILocation(line: 760, column: 16, scope: !4490)
!4503 = !DILocation(line: 760, column: 14, scope: !4490)
!4504 = !DILocation(line: 766, column: 7, scope: !4491)
!4505 = !DILocation(line: 770, column: 15, scope: !4491)
!4506 = !DILocation(line: 771, column: 7, scope: !4491)
!4507 = !DILocation(line: 777, column: 3, scope: !4359)
!4508 = !DILocation(line: 778, column: 1, scope: !4359)
!4509 = distinct !DISubprogram(name: "ei_end_p", scope: !148, file: !148, line: 721, type: !4510, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4512)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{!563, !3778}
!4512 = !{!4513}
!4513 = !DILocalVariable(name: "i", arg: 1, scope: !4509, file: !148, line: 721, type: !3778)
!4514 = !DILocation(line: 723, column: 22, scope: !4509)
!4515 = !DILocation(line: 723, column: 19, scope: !4509)
!4516 = !DILocation(line: 723, column: 10, scope: !4509)
!4517 = !DILocation(line: 723, column: 3, scope: !4509)
!4518 = distinct !DISubprogram(name: "ei_edge", scope: !148, file: !148, line: 752, type: !4519, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4521)
!4519 = !DISubroutineType(types: !4520)
!4520 = !{!962, !3778}
!4521 = !{!4522}
!4522 = !DILocalVariable(name: "i", arg: 1, scope: !4518, file: !148, line: 752, type: !3778)
!4523 = !DILocation(line: 754, column: 10, scope: !4518)
!4524 = !DILocation(line: 754, column: 3, scope: !4518)
!4525 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !148, file: !148, line: 150, type: !4526, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4530)
!4526 = !DISubroutineType(types: !4527)
!4527 = !{!7, !4528}
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4529, size: 64)
!4529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!4530 = !{!4531}
!4531 = !DILocalVariable(name: "vec_", arg: 1, scope: !4525, file: !148, line: 150, type: !4528)
!4532 = !DILocation(line: 0, scope: !4525)
!4533 = !DILocation(line: 150, column: 1, scope: !4525)
!4534 = distinct !DISubprogram(name: "ei_container", scope: !148, file: !148, line: 685, type: !4535, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4537)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!950, !3778}
!4537 = !{!4538}
!4538 = !DILocalVariable(name: "i", arg: 1, scope: !4534, file: !148, line: 685, type: !3778)
!4539 = !DILocation(line: 687, column: 3, scope: !4534)
!4540 = !DILocation(line: 688, column: 10, scope: !4534)
!4541 = !DILocation(line: 688, column: 3, scope: !4534)
!4542 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !148, file: !148, line: 150, type: !4543, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4545)
!4543 = !DISubroutineType(types: !4544)
!4544 = !{!962, !4528, !7}
!4545 = !{!4546, !4547}
!4546 = !DILocalVariable(name: "vec_", arg: 1, scope: !4542, file: !148, line: 150, type: !4528)
!4547 = !DILocalVariable(name: "ix_", arg: 2, scope: !4542, file: !148, line: 150, type: !7)
!4548 = !DILocation(line: 0, scope: !4542)
!4549 = !DILocation(line: 150, column: 1, scope: !4542)
!4550 = distinct !DISubprogram(name: "iv_number_of_iterations", scope: !3, file: !3, line: 2253, type: !4551, scopeLine: 2255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4553)
!4551 = !DISubroutineType(types: !4552)
!4552 = !{null, !987, !634, !634, !1701}
!4553 = !{!4554, !4555, !4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4597, !4598, !4602, !4603, !4606, !4607, !4608}
!4554 = !DILocalVariable(name: "loop", arg: 1, scope: !4550, file: !3, line: 2253, type: !987)
!4555 = !DILocalVariable(name: "insn", arg: 2, scope: !4550, file: !3, line: 2253, type: !634)
!4556 = !DILocalVariable(name: "condition", arg: 3, scope: !4550, file: !3, line: 2253, type: !634)
!4557 = !DILocalVariable(name: "desc", arg: 4, scope: !4550, file: !3, line: 2254, type: !1701)
!4558 = !DILocalVariable(name: "op0", scope: !4550, file: !3, line: 2256, type: !634)
!4559 = !DILocalVariable(name: "op1", scope: !4550, file: !3, line: 2256, type: !634)
!4560 = !DILocalVariable(name: "delta", scope: !4550, file: !3, line: 2256, type: !634)
!4561 = !DILocalVariable(name: "step", scope: !4550, file: !3, line: 2256, type: !634)
!4562 = !DILocalVariable(name: "bound", scope: !4550, file: !3, line: 2256, type: !634)
!4563 = !DILocalVariable(name: "may_xform", scope: !4550, file: !3, line: 2256, type: !634)
!4564 = !DILocalVariable(name: "tmp", scope: !4550, file: !3, line: 2256, type: !634)
!4565 = !DILocalVariable(name: "tmp0", scope: !4550, file: !3, line: 2256, type: !634)
!4566 = !DILocalVariable(name: "tmp1", scope: !4550, file: !3, line: 2256, type: !634)
!4567 = !DILocalVariable(name: "iv0", scope: !4550, file: !3, line: 2257, type: !1722)
!4568 = !DILocalVariable(name: "iv1", scope: !4550, file: !3, line: 2257, type: !1722)
!4569 = !DILocalVariable(name: "tmp_iv", scope: !4550, file: !3, line: 2257, type: !1722)
!4570 = !DILocalVariable(name: "assumption", scope: !4550, file: !3, line: 2258, type: !634)
!4571 = !DILocalVariable(name: "may_not_xform", scope: !4550, file: !3, line: 2258, type: !634)
!4572 = !DILocalVariable(name: "cond", scope: !4550, file: !3, line: 2259, type: !390)
!4573 = !DILocalVariable(name: "mode", scope: !4550, file: !3, line: 2260, type: !5)
!4574 = !DILocalVariable(name: "comp_mode", scope: !4550, file: !3, line: 2260, type: !5)
!4575 = !DILocalVariable(name: "mmin", scope: !4550, file: !3, line: 2261, type: !634)
!4576 = !DILocalVariable(name: "mmax", scope: !4550, file: !3, line: 2261, type: !634)
!4577 = !DILocalVariable(name: "mode_mmin", scope: !4550, file: !3, line: 2261, type: !634)
!4578 = !DILocalVariable(name: "mode_mmax", scope: !4550, file: !3, line: 2261, type: !634)
!4579 = !DILocalVariable(name: "s", scope: !4550, file: !3, line: 2262, type: !589)
!4580 = !DILocalVariable(name: "size", scope: !4550, file: !3, line: 2262, type: !589)
!4581 = !DILocalVariable(name: "d", scope: !4550, file: !3, line: 2262, type: !589)
!4582 = !DILocalVariable(name: "inv", scope: !4550, file: !3, line: 2262, type: !589)
!4583 = !DILocalVariable(name: "up", scope: !4550, file: !3, line: 2263, type: !606)
!4584 = !DILocalVariable(name: "down", scope: !4550, file: !3, line: 2263, type: !606)
!4585 = !DILocalVariable(name: "inc", scope: !4550, file: !3, line: 2263, type: !606)
!4586 = !DILocalVariable(name: "step_val", scope: !4550, file: !3, line: 2263, type: !606)
!4587 = !DILocalVariable(name: "was_sharp", scope: !4550, file: !3, line: 2264, type: !564)
!4588 = !DILocalVariable(name: "old_niter", scope: !4550, file: !3, line: 2265, type: !634)
!4589 = !DILocalVariable(name: "step_is_pow2", scope: !4550, file: !3, line: 2266, type: !563)
!4590 = !DILocalVariable(name: "t0", scope: !4591, file: !3, line: 2635, type: !634)
!4591 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 2634, column: 6)
!4592 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 2633, column: 8)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 2625, column: 2)
!4594 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 2618, column: 11)
!4595 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 2617, column: 5)
!4596 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2577, column: 7)
!4597 = !DILocalVariable(name: "t1", scope: !4591, file: !3, line: 2635, type: !634)
!4598 = !DILocalVariable(name: "t0", scope: !4599, file: !3, line: 2679, type: !634)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 2678, column: 6)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 2677, column: 8)
!4601 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 2667, column: 2)
!4602 = !DILocalVariable(name: "t1", scope: !4599, file: !3, line: 2679, type: !634)
!4603 = !DILocalVariable(name: "val", scope: !4604, file: !3, line: 2758, type: !589)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !3, line: 2757, column: 5)
!4605 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2756, column: 7)
!4606 = !DILabel(scope: !4550, name: "zero_iter_simplify", file: !3, line: 2779)
!4607 = !DILabel(scope: !4550, name: "zero_iter", file: !3, line: 2788)
!4608 = !DILabel(scope: !4550, name: "fail", file: !3, line: 2796)
!4609 = !DILocation(line: 0, scope: !4550)
!4610 = !DILocation(line: 2257, column: 3, scope: !4550)
!4611 = !DILocation(line: 2261, column: 3, scope: !4550)
!4612 = !DILocation(line: 2274, column: 9, scope: !4550)
!4613 = !DILocation(line: 2274, column: 21, scope: !4550)
!4614 = !DILocation(line: 2275, column: 9, scope: !4550)
!4615 = !DILocation(line: 2275, column: 28, scope: !4550)
!4616 = !DILocation(line: 2276, column: 9, scope: !4550)
!4617 = !DILocation(line: 2276, column: 18, scope: !4550)
!4618 = !DILocation(line: 2277, column: 9, scope: !4550)
!4619 = !DILocation(line: 2277, column: 18, scope: !4550)
!4620 = !DILocation(line: 2279, column: 9, scope: !4550)
!4621 = !DILocation(line: 2279, column: 20, scope: !4550)
!4622 = !DILocation(line: 2280, column: 9, scope: !4550)
!4623 = !DILocation(line: 2280, column: 20, scope: !4550)
!4624 = !DILocation(line: 2281, column: 9, scope: !4550)
!4625 = !DILocation(line: 2281, column: 19, scope: !4550)
!4626 = !DILocation(line: 2283, column: 10, scope: !4550)
!4627 = !DILocation(line: 2284, column: 3, scope: !4550)
!4628 = !DILocation(line: 2286, column: 10, scope: !4550)
!4629 = !DILocation(line: 2287, column: 12, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2287, column: 7)
!4631 = !DILocation(line: 2287, column: 7, scope: !4550)
!4632 = !DILocation(line: 2288, column: 12, scope: !4630)
!4633 = !DILocation(line: 2288, column: 5, scope: !4630)
!4634 = !DILocation(line: 2290, column: 3, scope: !4550)
!4635 = !DILocation(line: 2293, column: 7, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2293, column: 7)
!4637 = !DILocation(line: 2293, column: 29, scope: !4636)
!4638 = !DILocation(line: 2294, column: 7, scope: !4636)
!4639 = !DILocation(line: 2294, column: 32, scope: !4636)
!4640 = !DILocation(line: 2293, column: 7, scope: !4550)
!4641 = !DILocation(line: 2297, column: 9, scope: !4550)
!4642 = !DILocation(line: 2298, column: 8, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2298, column: 7)
!4644 = !DILocation(line: 2298, column: 7, scope: !4550)
!4645 = !DILocation(line: 2300, column: 11, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2300, column: 7)
!4647 = !DILocation(line: 2300, column: 23, scope: !4646)
!4648 = !DILocation(line: 2300, column: 7, scope: !4550)
!4649 = !DILocation(line: 2301, column: 32, scope: !4646)
!4650 = !DILocation(line: 2301, column: 9, scope: !4646)
!4651 = !DILocation(line: 2301, column: 14, scope: !4646)
!4652 = !DILocation(line: 2301, column: 5, scope: !4646)
!4653 = !DILocation(line: 2303, column: 9, scope: !4550)
!4654 = !DILocation(line: 2304, column: 8, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2304, column: 7)
!4656 = !DILocation(line: 2304, column: 7, scope: !4550)
!4657 = !DILocation(line: 2306, column: 11, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2306, column: 7)
!4659 = !DILocation(line: 2306, column: 23, scope: !4658)
!4660 = !DILocation(line: 2306, column: 7, scope: !4550)
!4661 = !DILocation(line: 2307, column: 32, scope: !4658)
!4662 = !DILocation(line: 2307, column: 9, scope: !4658)
!4663 = !DILocation(line: 2307, column: 14, scope: !4658)
!4664 = !DILocation(line: 2307, column: 5, scope: !4658)
!4665 = !DILocation(line: 2309, column: 7, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2309, column: 7)
!4667 = !DILocation(line: 2309, column: 42, scope: !4666)
!4668 = !DILocation(line: 2310, column: 7, scope: !4666)
!4669 = !DILocation(line: 2310, column: 10, scope: !4666)
!4670 = !DILocation(line: 2310, column: 45, scope: !4666)
!4671 = !DILocation(line: 2309, column: 7, scope: !4550)
!4672 = !DILocation(line: 2315, column: 3, scope: !4550)
!4673 = !DILocation(line: 2321, column: 11, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2316, column: 5)
!4675 = !DILocation(line: 2321, column: 22, scope: !4674)
!4676 = !DILocation(line: 2321, column: 33, scope: !4674)
!4677 = !DILocation(line: 2322, column: 9, scope: !4674)
!4678 = !DILocation(line: 2323, column: 2, scope: !4674)
!4679 = !DILocation(line: 2339, column: 8, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2339, column: 7)
!4681 = !DILocation(line: 2339, column: 7, scope: !4550)
!4682 = !DILocation(line: 2342, column: 19, scope: !4550)
!4683 = !DILocation(line: 2343, column: 14, scope: !4550)
!4684 = !DILocation(line: 2344, column: 10, scope: !4550)
!4685 = !DILocation(line: 2345, column: 38, scope: !4550)
!4686 = !DILocation(line: 2345, column: 3, scope: !4550)
!4687 = !DILocation(line: 2346, column: 37, scope: !4550)
!4688 = !DILocation(line: 2346, column: 15, scope: !4550)
!4689 = !DILocation(line: 2347, column: 37, scope: !4550)
!4690 = !DILocation(line: 2347, column: 15, scope: !4550)
!4691 = !DILocation(line: 2349, column: 8, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2349, column: 7)
!4693 = !DILocation(line: 2349, column: 31, scope: !4692)
!4694 = !DILocation(line: 2349, column: 35, scope: !4692)
!4695 = !DILocation(line: 2349, column: 7, scope: !4550)
!4696 = !DILocation(line: 2355, column: 19, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2355, column: 7)
!4698 = !DILocation(line: 2355, column: 16, scope: !4697)
!4699 = !DILocation(line: 2355, column: 30, scope: !4697)
!4700 = !DILocation(line: 2355, column: 42, scope: !4697)
!4701 = !DILocation(line: 2355, column: 7, scope: !4550)
!4702 = !DILocation(line: 2357, column: 16, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 2357, column: 11)
!4704 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 2356, column: 5)
!4705 = !DILocation(line: 2357, column: 11, scope: !4704)
!4706 = !DILocation(line: 2360, column: 18, scope: !4704)
!4707 = !DILocation(line: 2360, column: 16, scope: !4704)
!4708 = !DILocation(line: 2361, column: 18, scope: !4704)
!4709 = !DILocation(line: 2361, column: 16, scope: !4704)
!4710 = !DILocation(line: 2362, column: 5, scope: !4704)
!4711 = !DILocation(line: 2366, column: 19, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2366, column: 7)
!4713 = !DILocation(line: 2366, column: 11, scope: !4712)
!4714 = !DILocation(line: 2366, column: 16, scope: !4712)
!4715 = !DILocation(line: 2366, column: 30, scope: !4712)
!4716 = !DILocation(line: 2366, column: 42, scope: !4712)
!4717 = !DILocation(line: 2366, column: 7, scope: !4550)
!4718 = !DILocation(line: 2369, column: 12, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2369, column: 7)
!4720 = !DILocation(line: 2369, column: 7, scope: !4550)
!4721 = !DILocation(line: 2371, column: 20, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 2371, column: 11)
!4723 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 2370, column: 5)
!4724 = !DILocation(line: 2371, column: 11, scope: !4723)
!4725 = !DILocation(line: 2372, column: 14, scope: !4722)
!4726 = !DILocation(line: 2372, column: 13, scope: !4722)
!4727 = !DILocation(line: 2372, column: 2, scope: !4722)
!4728 = !DILocation(line: 2374, column: 13, scope: !4722)
!4729 = !DILocation(line: 0, scope: !4722)
!4730 = !DILocation(line: 2377, column: 20, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 2377, column: 11)
!4732 = !DILocation(line: 2377, column: 11, scope: !4723)
!4733 = !DILocation(line: 2380, column: 22, scope: !4723)
!4734 = !{i64 0, i64 65}
!4735 = !DILocation(line: 2381, column: 5, scope: !4723)
!4736 = !DILocation(line: 0, scope: !4719)
!4737 = !DILocation(line: 2392, column: 3, scope: !4550)
!4738 = !DILocation(line: 2402, column: 15, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 2402, column: 6)
!4740 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2393, column: 5)
!4741 = !DILocation(line: 2402, column: 6, scope: !4740)
!4742 = !DILocation(line: 2404, column: 38, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 2403, column: 4)
!4744 = !DILocation(line: 2404, column: 12, scope: !4743)
!4745 = !DILocation(line: 2405, column: 19, scope: !4743)
!4746 = !DILocation(line: 2407, column: 24, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 2407, column: 10)
!4748 = !DILocation(line: 2407, column: 21, scope: !4747)
!4749 = !DILocation(line: 2407, column: 10, scope: !4743)
!4750 = !DILocation(line: 2410, column: 14, scope: !4743)
!4751 = !DILocation(line: 2410, column: 20, scope: !4743)
!4752 = !DILocation(line: 2409, column: 17, scope: !4743)
!4753 = !DILocation(line: 2409, column: 15, scope: !4743)
!4754 = !DILocation(line: 2411, column: 4, scope: !4743)
!4755 = !DILocation(line: 2414, column: 38, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 2413, column: 4)
!4757 = !DILocation(line: 2414, column: 12, scope: !4756)
!4758 = !DILocation(line: 2415, column: 19, scope: !4756)
!4759 = !DILocation(line: 2417, column: 24, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2417, column: 10)
!4761 = !DILocation(line: 2417, column: 21, scope: !4760)
!4762 = !DILocation(line: 2417, column: 10, scope: !4756)
!4763 = !DILocation(line: 2420, column: 14, scope: !4756)
!4764 = !DILocation(line: 2420, column: 20, scope: !4756)
!4765 = !DILocation(line: 2419, column: 17, scope: !4756)
!4766 = !DILocation(line: 2419, column: 15, scope: !4756)
!4767 = !DILocation(line: 0, scope: !4739)
!4768 = !DILocation(line: 2423, column: 20, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 2423, column: 6)
!4770 = !DILocation(line: 2423, column: 17, scope: !4769)
!4771 = !DILocation(line: 2423, column: 6, scope: !4740)
!4772 = !DILocation(line: 2425, column: 43, scope: !4769)
!4773 = !DILocation(line: 2425, column: 5, scope: !4769)
!4774 = !DILocation(line: 2424, column: 29, scope: !4769)
!4775 = !DILocation(line: 2424, column: 4, scope: !4769)
!4776 = !DILocation(line: 2426, column: 15, scope: !4740)
!4777 = !DILocation(line: 2426, column: 9, scope: !4740)
!4778 = !DILocation(line: 2431, column: 2, scope: !4740)
!4779 = !DILocation(line: 2436, column: 7, scope: !4550)
!4780 = !DILocation(line: 2438, column: 15, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !3, line: 2438, column: 11)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !3, line: 2437, column: 5)
!4783 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2436, column: 7)
!4784 = !DILocation(line: 2438, column: 23, scope: !4781)
!4785 = !DILocation(line: 2438, column: 20, scope: !4781)
!4786 = !DILocation(line: 2438, column: 11, scope: !4782)
!4787 = !DILocation(line: 2440, column: 36, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 2439, column: 2)
!4789 = !DILocation(line: 2440, column: 10, scope: !4788)
!4790 = !DILocation(line: 2441, column: 8, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4788, file: !3, line: 2441, column: 8)
!4792 = !DILocation(line: 2441, column: 8, scope: !4788)
!4793 = !DILocation(line: 2444, column: 29, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 2442, column: 6)
!4795 = !DILocation(line: 2444, column: 9, scope: !4794)
!4796 = !DILocation(line: 2443, column: 23, scope: !4794)
!4797 = !DILocation(line: 2446, column: 8, scope: !4794)
!4798 = !DILocation(line: 2451, column: 36, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 2450, column: 2)
!4800 = !DILocation(line: 2451, column: 10, scope: !4799)
!4801 = !DILocation(line: 2452, column: 8, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 2452, column: 8)
!4803 = !DILocation(line: 2452, column: 8, scope: !4799)
!4804 = !DILocation(line: 2455, column: 29, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4802, file: !3, line: 2453, column: 6)
!4806 = !DILocation(line: 2455, column: 9, scope: !4805)
!4807 = !DILocation(line: 2454, column: 23, scope: !4805)
!4808 = !DILocation(line: 2457, column: 8, scope: !4805)
!4809 = !DILocation(line: 2468, column: 7, scope: !4550)
!4810 = !DILocation(line: 2470, column: 15, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 2470, column: 11)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 2469, column: 5)
!4813 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2468, column: 7)
!4814 = !DILocation(line: 2470, column: 23, scope: !4811)
!4815 = !DILocation(line: 2470, column: 20, scope: !4811)
!4816 = !DILocation(line: 2470, column: 11, scope: !4812)
!4817 = !DILocation(line: 2471, column: 49, scope: !4811)
!4818 = !DILocation(line: 2471, column: 9, scope: !4811)
!4819 = !DILocation(line: 2471, column: 2, scope: !4811)
!4820 = !DILocation(line: 0, scope: !4811)
!4821 = !DILocation(line: 2474, column: 58, scope: !4812)
!4822 = !DILocation(line: 2474, column: 68, scope: !4812)
!4823 = !DILocation(line: 2474, column: 15, scope: !4812)
!4824 = !DILocation(line: 2475, column: 15, scope: !4812)
!4825 = !DILocation(line: 2476, column: 15, scope: !4812)
!4826 = !DILocation(line: 2477, column: 19, scope: !4812)
!4827 = !DILocation(line: 2478, column: 23, scope: !4812)
!4828 = !DILocation(line: 2480, column: 11, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 2480, column: 11)
!4830 = !DILocation(line: 2480, column: 11, scope: !4812)
!4831 = !DILocation(line: 2482, column: 8, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 2482, column: 8)
!4833 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 2481, column: 2)
!4834 = !DILocation(line: 2482, column: 18, scope: !4832)
!4835 = !DILocation(line: 2482, column: 21, scope: !4832)
!4836 = !DILocation(line: 2482, column: 39, scope: !4832)
!4837 = !DILocation(line: 2482, column: 53, scope: !4832)
!4838 = !DILocation(line: 2482, column: 36, scope: !4832)
!4839 = !DILocation(line: 2482, column: 8, scope: !4833)
!4840 = !DILocation(line: 2494, column: 6, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 2483, column: 6)
!4842 = !DILocation(line: 2495, column: 17, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 2495, column: 13)
!4844 = !DILocation(line: 2495, column: 22, scope: !4843)
!4845 = !DILocation(line: 2495, column: 13, scope: !4832)
!4846 = !DILocation(line: 2497, column: 54, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 2496, column: 6)
!4848 = !DILocation(line: 2497, column: 16, scope: !4847)
!4849 = !DILocation(line: 2498, column: 16, scope: !4847)
!4850 = !DILocation(line: 2499, column: 16, scope: !4847)
!4851 = !DILocation(line: 2500, column: 40, scope: !4847)
!4852 = !DILocation(line: 2500, column: 14, scope: !4847)
!4853 = !DILocation(line: 2501, column: 20, scope: !4847)
!4854 = !DILocation(line: 2503, column: 49, scope: !4847)
!4855 = !DILocation(line: 2503, column: 24, scope: !4847)
!4856 = !DILocation(line: 2506, column: 6, scope: !4847)
!4857 = !DILocation(line: 2509, column: 55, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 2508, column: 6)
!4859 = !DILocation(line: 2509, column: 16, scope: !4858)
!4860 = !DILocation(line: 2510, column: 16, scope: !4858)
!4861 = !DILocation(line: 2511, column: 16, scope: !4858)
!4862 = !DILocation(line: 2512, column: 40, scope: !4858)
!4863 = !DILocation(line: 2512, column: 14, scope: !4858)
!4864 = !DILocation(line: 2513, column: 20, scope: !4858)
!4865 = !DILocation(line: 2515, column: 49, scope: !4858)
!4866 = !DILocation(line: 2515, column: 24, scope: !4858)
!4867 = !DILocation(line: 2478, column: 21, scope: !4812)
!4868 = !DILocation(line: 0, scope: !4812)
!4869 = !DILocation(line: 2521, column: 24, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 2521, column: 11)
!4871 = !DILocation(line: 2521, column: 21, scope: !4870)
!4872 = !DILocation(line: 2521, column: 11, scope: !4812)
!4873 = !DILocation(line: 2526, column: 21, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 2526, column: 8)
!4875 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 2522, column: 2)
!4876 = !DILocation(line: 2526, column: 18, scope: !4874)
!4877 = !DILocation(line: 2526, column: 8, scope: !4875)
!4878 = !DILocation(line: 2531, column: 12, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 2531, column: 12)
!4880 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 2527, column: 6)
!4881 = !DILocation(line: 2531, column: 12, scope: !4880)
!4882 = !DILocation(line: 2533, column: 15, scope: !4879)
!4883 = !DILocation(line: 2532, column: 20, scope: !4879)
!4884 = !DILocation(line: 2532, column: 18, scope: !4879)
!4885 = !DILocation(line: 2532, column: 3, scope: !4879)
!4886 = !DILocation(line: 2536, column: 18, scope: !4879)
!4887 = !DILocation(line: 2535, column: 23, scope: !4879)
!4888 = !DILocation(line: 2535, column: 21, scope: !4879)
!4889 = !DILocation(line: 2542, column: 10, scope: !4875)
!4890 = !DILocation(line: 2542, column: 30, scope: !4875)
!4891 = !DILocation(line: 2542, column: 28, scope: !4875)
!4892 = !DILocation(line: 2543, column: 8, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 2543, column: 8)
!4894 = !DILocation(line: 2543, column: 8, scope: !4875)
!4895 = !DILocation(line: 2544, column: 11, scope: !4893)
!4896 = !DILocation(line: 2544, column: 6, scope: !4893)
!4897 = !DILocation(line: 2546, column: 11, scope: !4893)
!4898 = !DILocation(line: 2546, column: 30, scope: !4893)
!4899 = !DILocation(line: 0, scope: !4893)
!4900 = !DILocation(line: 2547, column: 11, scope: !4875)
!4901 = !DILocation(line: 2550, column: 26, scope: !4875)
!4902 = !DILocation(line: 2550, column: 34, scope: !4875)
!4903 = !DILocation(line: 2550, column: 40, scope: !4875)
!4904 = !DILocation(line: 2550, column: 20, scope: !4875)
!4905 = !DILocation(line: 2552, column: 20, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 2552, column: 8)
!4907 = !DILocation(line: 2552, column: 17, scope: !4906)
!4908 = !DILocation(line: 2552, column: 8, scope: !4875)
!4909 = !DILocation(line: 2554, column: 19, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 2553, column: 6)
!4911 = !DILocation(line: 2554, column: 17, scope: !4910)
!4912 = !DILocation(line: 2555, column: 19, scope: !4910)
!4913 = !DILocation(line: 2555, column: 17, scope: !4910)
!4914 = !DILocation(line: 2556, column: 6, scope: !4910)
!4915 = !DILocation(line: 2559, column: 19, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 2558, column: 6)
!4917 = !DILocation(line: 2559, column: 17, scope: !4916)
!4918 = !DILocation(line: 2560, column: 19, scope: !4916)
!4919 = !DILocation(line: 2560, column: 17, scope: !4916)
!4920 = !DILocation(line: 2563, column: 37, scope: !4875)
!4921 = !DILocation(line: 2563, column: 11, scope: !4875)
!4922 = !DILocation(line: 2564, column: 37, scope: !4875)
!4923 = !DILocation(line: 2564, column: 11, scope: !4875)
!4924 = !DILocation(line: 2565, column: 42, scope: !4875)
!4925 = !DILocation(line: 2565, column: 17, scope: !4875)
!4926 = !DILocation(line: 2567, column: 22, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 2567, column: 8)
!4928 = !DILocation(line: 2567, column: 19, scope: !4927)
!4929 = !DILocation(line: 2567, column: 8, scope: !4875)
!4930 = !DILocation(line: 2569, column: 27, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2569, column: 13)
!4932 = !DILocation(line: 2569, column: 24, scope: !4931)
!4933 = !DILocation(line: 2569, column: 13, scope: !4927)
!4934 = !DILocation(line: 2571, column: 45, scope: !4931)
!4935 = !DILocation(line: 2571, column: 7, scope: !4931)
!4936 = !DILocation(line: 2570, column: 31, scope: !4931)
!4937 = !DILocation(line: 2570, column: 6, scope: !4931)
!4938 = !DILocation(line: 2577, column: 12, scope: !4596)
!4939 = !DILocation(line: 2577, column: 7, scope: !4550)
!4940 = !DILocation(line: 2583, column: 61, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 2578, column: 5)
!4942 = !DILocation(line: 2583, column: 71, scope: !4941)
!4943 = !DILocation(line: 2583, column: 18, scope: !4941)
!4944 = !DILocation(line: 2583, column: 16, scope: !4941)
!4945 = !DILocation(line: 2584, column: 18, scope: !4941)
!4946 = !DILocation(line: 2584, column: 16, scope: !4941)
!4947 = !DILocation(line: 2585, column: 61, scope: !4941)
!4948 = !DILocation(line: 2585, column: 71, scope: !4941)
!4949 = !DILocation(line: 2585, column: 18, scope: !4941)
!4950 = !DILocation(line: 2585, column: 16, scope: !4941)
!4951 = !DILocation(line: 2586, column: 18, scope: !4941)
!4952 = !DILocation(line: 2586, column: 16, scope: !4941)
!4953 = !DILocation(line: 2587, column: 11, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 2587, column: 11)
!4955 = !DILocation(line: 2587, column: 29, scope: !4954)
!4956 = !DILocation(line: 2587, column: 11, scope: !4941)
!4957 = !DILocation(line: 2589, column: 15, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 2588, column: 2)
!4959 = !DILocation(line: 2589, column: 13, scope: !4958)
!4960 = !DILocation(line: 2590, column: 55, scope: !4958)
!4961 = !DILocation(line: 2590, column: 15, scope: !4958)
!4962 = !DILocation(line: 2590, column: 13, scope: !4958)
!4963 = !DILocation(line: 2592, column: 44, scope: !4941)
!4964 = !DILocation(line: 2591, column: 2, scope: !4958)
!4965 = !DILocation(line: 2592, column: 18, scope: !4941)
!4966 = !DILocation(line: 2592, column: 16, scope: !4941)
!4967 = !DILocation(line: 2597, column: 11, scope: !4941)
!4968 = !DILocation(line: 2598, column: 7, scope: !4941)
!4969 = !DILocation(line: 0, scope: !4941)
!4970 = !DILocation(line: 2598, column: 16, scope: !4941)
!4971 = !DILocation(line: 2598, column: 20, scope: !4941)
!4972 = !DILocation(line: 2600, column: 6, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 2599, column: 2)
!4974 = !DILocation(line: 2601, column: 6, scope: !4973)
!4975 = !DILocation(line: 2602, column: 8, scope: !4973)
!4976 = distinct !{!4976, !4968, !4977}
!4977 = !DILocation(line: 2603, column: 2, scope: !4941)
!4978 = !DILocation(line: 2604, column: 15, scope: !4941)
!4979 = !DILocation(line: 2606, column: 40, scope: !4941)
!4980 = !DILocation(line: 2606, column: 14, scope: !4941)
!4981 = !DILocation(line: 2607, column: 52, scope: !4941)
!4982 = !DILocation(line: 2607, column: 13, scope: !4941)
!4983 = !DILocation(line: 2608, column: 68, scope: !4941)
!4984 = !DILocation(line: 2608, column: 20, scope: !4941)
!4985 = !DILocation(line: 2609, column: 62, scope: !4941)
!4986 = !DILocation(line: 2609, column: 24, scope: !4941)
!4987 = !DILocation(line: 2609, column: 22, scope: !4941)
!4988 = !DILocation(line: 2611, column: 52, scope: !4941)
!4989 = !DILocation(line: 2611, column: 13, scope: !4941)
!4990 = !DILocation(line: 2612, column: 25, scope: !4941)
!4991 = !DILocation(line: 2612, column: 13, scope: !4941)
!4992 = !DILocation(line: 2613, column: 51, scope: !4941)
!4993 = !DILocation(line: 2613, column: 13, scope: !4941)
!4994 = !DILocation(line: 2614, column: 26, scope: !4941)
!4995 = !DILocation(line: 2615, column: 5, scope: !4941)
!4996 = !DILocation(line: 2618, column: 15, scope: !4594)
!4997 = !DILocation(line: 2618, column: 23, scope: !4594)
!4998 = !DILocation(line: 2618, column: 20, scope: !4594)
!4999 = !DILocation(line: 2618, column: 11, scope: !4595)
!5000 = !DILocation(line: 2626, column: 15, scope: !4593)
!5001 = !DILocation(line: 2627, column: 37, scope: !4593)
!5002 = !DILocation(line: 2627, column: 11, scope: !4593)
!5003 = !DILocation(line: 2628, column: 37, scope: !4593)
!5004 = !DILocation(line: 2628, column: 11, scope: !4593)
!5005 = !DILocation(line: 2631, column: 12, scope: !4593)
!5006 = !DILocation(line: 2630, column: 12, scope: !4593)
!5007 = !DILocation(line: 2633, column: 8, scope: !4592)
!5008 = !DILocation(line: 2633, column: 8, scope: !4593)
!5009 = !DILocation(line: 2639, column: 46, scope: !4591)
!5010 = !DILocation(line: 2639, column: 21, scope: !4591)
!5011 = !DILocation(line: 2643, column: 46, scope: !4591)
!5012 = !DILocation(line: 2643, column: 13, scope: !4591)
!5013 = !DILocation(line: 0, scope: !4591)
!5014 = !DILocation(line: 2644, column: 46, scope: !4591)
!5015 = !DILocation(line: 2644, column: 13, scope: !4591)
!5016 = !DILocation(line: 2645, column: 14, scope: !4591)
!5017 = !DILocation(line: 2646, column: 21, scope: !4591)
!5018 = !DILocation(line: 2648, column: 47, scope: !4591)
!5019 = !DILocation(line: 2648, column: 9, scope: !4591)
!5020 = !DILocation(line: 2647, column: 23, scope: !4591)
!5021 = !DILocation(line: 2649, column: 6, scope: !4591)
!5022 = !DILocation(line: 2652, column: 21, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 2651, column: 6)
!5024 = !DILocation(line: 2655, column: 47, scope: !5023)
!5025 = !DILocation(line: 2655, column: 9, scope: !5023)
!5026 = !DILocation(line: 2654, column: 26, scope: !5023)
!5027 = !DILocation(line: 2658, column: 52, scope: !4593)
!5028 = !DILocation(line: 2658, column: 62, scope: !4593)
!5029 = !DILocation(line: 2658, column: 10, scope: !4593)
!5030 = !DILocation(line: 2659, column: 10, scope: !4593)
!5031 = !DILocation(line: 2660, column: 42, scope: !4593)
!5032 = !DILocation(line: 2660, column: 17, scope: !4593)
!5033 = !DILocation(line: 2663, column: 12, scope: !4593)
!5034 = !DILocation(line: 2664, column: 12, scope: !4593)
!5035 = !DILocation(line: 2665, column: 2, scope: !4593)
!5036 = !DILocation(line: 2671, column: 11, scope: !4601)
!5037 = !DILocation(line: 2672, column: 37, scope: !4601)
!5038 = !DILocation(line: 2672, column: 11, scope: !4601)
!5039 = !DILocation(line: 2673, column: 37, scope: !4601)
!5040 = !DILocation(line: 2673, column: 11, scope: !4601)
!5041 = !DILocation(line: 2676, column: 12, scope: !4601)
!5042 = !DILocation(line: 2675, column: 12, scope: !4601)
!5043 = !DILocation(line: 2677, column: 8, scope: !4600)
!5044 = !DILocation(line: 2677, column: 8, scope: !4601)
!5045 = !DILocation(line: 2683, column: 46, scope: !4599)
!5046 = !DILocation(line: 2683, column: 21, scope: !4599)
!5047 = !DILocation(line: 2687, column: 46, scope: !4599)
!5048 = !DILocation(line: 2687, column: 13, scope: !4599)
!5049 = !DILocation(line: 0, scope: !4599)
!5050 = !DILocation(line: 2688, column: 46, scope: !4599)
!5051 = !DILocation(line: 2688, column: 13, scope: !4599)
!5052 = !DILocation(line: 2689, column: 14, scope: !4599)
!5053 = !DILocation(line: 2690, column: 21, scope: !4599)
!5054 = !DILocation(line: 2692, column: 47, scope: !4599)
!5055 = !DILocation(line: 2692, column: 9, scope: !4599)
!5056 = !DILocation(line: 2691, column: 23, scope: !4599)
!5057 = !DILocation(line: 2693, column: 6, scope: !4599)
!5058 = !DILocation(line: 2696, column: 21, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 2695, column: 6)
!5060 = !DILocation(line: 2699, column: 47, scope: !5059)
!5061 = !DILocation(line: 2699, column: 9, scope: !5059)
!5062 = !DILocation(line: 2698, column: 26, scope: !5059)
!5063 = !DILocation(line: 2702, column: 52, scope: !4601)
!5064 = !DILocation(line: 2702, column: 62, scope: !4601)
!5065 = !DILocation(line: 2702, column: 10, scope: !4601)
!5066 = !DILocation(line: 2703, column: 10, scope: !4601)
!5067 = !DILocation(line: 2704, column: 42, scope: !4601)
!5068 = !DILocation(line: 2704, column: 17, scope: !4601)
!5069 = !DILocation(line: 2707, column: 12, scope: !4601)
!5070 = !DILocation(line: 2708, column: 12, scope: !4601)
!5071 = !DILocation(line: 0, scope: !4594)
!5072 = !DILocation(line: 2710, column: 25, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 2710, column: 11)
!5074 = !DILocation(line: 2710, column: 22, scope: !5073)
!5075 = !DILocation(line: 2710, column: 11, scope: !4595)
!5076 = !DILocation(line: 2712, column: 30, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 2712, column: 16)
!5078 = !DILocation(line: 2712, column: 27, scope: !5077)
!5079 = !DILocation(line: 2712, column: 16, scope: !5073)
!5080 = !DILocation(line: 2714, column: 41, scope: !5077)
!5081 = !DILocation(line: 2714, column: 3, scope: !5077)
!5082 = !DILocation(line: 2713, column: 27, scope: !5077)
!5083 = !DILocation(line: 2713, column: 2, scope: !5077)
!5084 = !DILocation(line: 2715, column: 15, scope: !4595)
!5085 = !DILocation(line: 0, scope: !4596)
!5086 = !DILocation(line: 2719, column: 21, scope: !4550)
!5087 = !DILocation(line: 2721, column: 3, scope: !4550)
!5088 = !DILocation(line: 2722, column: 13, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2722, column: 7)
!5090 = !DILocation(line: 2722, column: 7, scope: !5089)
!5091 = !DILocation(line: 2723, column: 7, scope: !5089)
!5092 = !DILocation(line: 2723, column: 10, scope: !5089)
!5093 = !DILocation(line: 2723, column: 41, scope: !5089)
!5094 = !DILocation(line: 2723, column: 38, scope: !5089)
!5095 = !DILocation(line: 2722, column: 7, scope: !4550)
!5096 = !DILocation(line: 2725, column: 3, scope: !4550)
!5097 = !DILocation(line: 2726, column: 3, scope: !4550)
!5098 = !DILocation(line: 2727, column: 3, scope: !4550)
!5099 = !DILocation(line: 2744, column: 3, scope: !4550)
!5100 = !DILocation(line: 2745, column: 13, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2745, column: 7)
!5102 = !DILocation(line: 2745, column: 7, scope: !5101)
!5103 = !DILocation(line: 2746, column: 7, scope: !5101)
!5104 = !DILocation(line: 2746, column: 10, scope: !5101)
!5105 = !DILocation(line: 2746, column: 41, scope: !5101)
!5106 = !DILocation(line: 2746, column: 38, scope: !5101)
!5107 = !DILocation(line: 2745, column: 7, scope: !4550)
!5108 = !DILocation(line: 2748, column: 3, scope: !4550)
!5109 = !DILocation(line: 2749, column: 3, scope: !4550)
!5110 = !DILocation(line: 2750, column: 3, scope: !4550)
!5111 = !DILocation(line: 2752, column: 13, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2752, column: 7)
!5113 = !DILocation(line: 2752, column: 7, scope: !5112)
!5114 = !DILocation(line: 2753, column: 7, scope: !5112)
!5115 = !DILocation(line: 2753, column: 10, scope: !5112)
!5116 = !DILocation(line: 2753, column: 48, scope: !5112)
!5117 = !DILocation(line: 2753, column: 45, scope: !5112)
!5118 = !DILocation(line: 2752, column: 7, scope: !4550)
!5119 = !DILocation(line: 2756, column: 7, scope: !4605)
!5120 = !DILocation(line: 2756, column: 7, scope: !4550)
!5121 = !DILocation(line: 2758, column: 38, scope: !4604)
!5122 = !DILocation(line: 0, scope: !4604)
!5123 = !DILocation(line: 2760, column: 24, scope: !4604)
!5124 = !DILocation(line: 2761, column: 45, scope: !4604)
!5125 = !DILocation(line: 2761, column: 43, scope: !4604)
!5126 = !DILocation(line: 2761, column: 31, scope: !4604)
!5127 = !DILocation(line: 2761, column: 37, scope: !4604)
!5128 = !DILocation(line: 2761, column: 23, scope: !4604)
!5129 = !DILocation(line: 2762, column: 5, scope: !4604)
!5130 = !DILocation(line: 2765, column: 18, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 2765, column: 11)
!5132 = distinct !DILexicalBlock(scope: !4605, file: !3, line: 2764, column: 5)
!5133 = !DILocation(line: 2765, column: 12, scope: !5131)
!5134 = !DILocation(line: 2765, column: 11, scope: !5132)
!5135 = !DILocation(line: 2766, column: 20, scope: !5131)
!5136 = !DILocation(line: 2766, column: 18, scope: !5131)
!5137 = !DILocation(line: 2766, column: 2, scope: !5131)
!5138 = !DILocation(line: 2774, column: 24, scope: !5132)
!5139 = !DILocation(line: 2779, column: 1, scope: !4550)
!5140 = !DILocation(line: 2781, column: 3, scope: !4550)
!5141 = !DILocation(line: 2782, column: 13, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2782, column: 7)
!5143 = !DILocation(line: 2782, column: 7, scope: !5142)
!5144 = !DILocation(line: 2783, column: 7, scope: !5142)
!5145 = !DILocation(line: 2783, column: 10, scope: !5142)
!5146 = !DILocation(line: 2783, column: 41, scope: !5142)
!5147 = !DILocation(line: 2783, column: 38, scope: !5142)
!5148 = !DILocation(line: 2782, column: 7, scope: !4550)
!5149 = !DILocation(line: 2785, column: 3, scope: !4550)
!5150 = !DILocation(line: 2788, column: 1, scope: !4550)
!5151 = !DILocation(line: 2789, column: 20, scope: !4550)
!5152 = !DILocation(line: 2790, column: 9, scope: !4550)
!5153 = !DILocation(line: 2790, column: 15, scope: !4550)
!5154 = !DILocation(line: 2791, column: 19, scope: !4550)
!5155 = !DILocation(line: 2792, column: 28, scope: !4550)
!5156 = !DILocation(line: 2793, column: 22, scope: !4550)
!5157 = !DILocation(line: 2793, column: 20, scope: !4550)
!5158 = !DILocation(line: 2794, column: 3, scope: !4550)
!5159 = !DILocation(line: 2796, column: 1, scope: !4550)
!5160 = !DILocation(line: 2797, column: 18, scope: !4550)
!5161 = !DILocation(line: 2798, column: 3, scope: !4550)
!5162 = !DILocation(line: 2799, column: 1, scope: !4550)
!5163 = distinct !DISubprogram(name: "canonicalize_iv_subregs", scope: !3, file: !3, line: 2083, type: !5164, scopeLine: 2085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5166)
!5164 = !DISubroutineType(types: !5165)
!5165 = !{!563, !1736, !1736, !390, !1701}
!5166 = !{!5167, !5168, !5169, !5170, !5171, !5172}
!5167 = !DILocalVariable(name: "iv0", arg: 1, scope: !5163, file: !3, line: 2083, type: !1736)
!5168 = !DILocalVariable(name: "iv1", arg: 2, scope: !5163, file: !3, line: 2083, type: !1736)
!5169 = !DILocalVariable(name: "cond", arg: 3, scope: !5163, file: !3, line: 2084, type: !390)
!5170 = !DILocalVariable(name: "desc", arg: 4, scope: !5163, file: !3, line: 2084, type: !1701)
!5171 = !DILocalVariable(name: "comp_mode", scope: !5163, file: !3, line: 2086, type: !5)
!5172 = !DILocalVariable(name: "signed_p", scope: !5163, file: !3, line: 2087, type: !563)
!5173 = !DILocation(line: 0, scope: !5163)
!5174 = !DILocation(line: 2091, column: 12, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2091, column: 7)
!5176 = !DILocation(line: 2091, column: 7, scope: !5175)
!5177 = !DILocation(line: 2091, column: 26, scope: !5175)
!5178 = !DILocation(line: 2091, column: 34, scope: !5175)
!5179 = !DILocation(line: 2091, column: 42, scope: !5175)
!5180 = !DILocation(line: 2091, column: 39, scope: !5175)
!5181 = !DILocation(line: 2091, column: 53, scope: !5175)
!5182 = !DILocation(line: 2091, column: 61, scope: !5175)
!5183 = !DILocation(line: 2091, column: 70, scope: !5175)
!5184 = !DILocation(line: 2091, column: 67, scope: !5175)
!5185 = !DILocation(line: 2091, column: 7, scope: !5163)
!5186 = !DILocation(line: 2093, column: 12, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2093, column: 7)
!5188 = !DILocation(line: 2093, column: 7, scope: !5187)
!5189 = !DILocation(line: 2093, column: 26, scope: !5187)
!5190 = !DILocation(line: 2093, column: 34, scope: !5187)
!5191 = !DILocation(line: 2093, column: 39, scope: !5187)
!5192 = !DILocation(line: 2093, column: 53, scope: !5187)
!5193 = !DILocation(line: 2093, column: 61, scope: !5187)
!5194 = !DILocation(line: 2093, column: 67, scope: !5187)
!5195 = !DILocation(line: 2093, column: 7, scope: !5163)
!5196 = !DILocation(line: 2097, column: 3, scope: !5163)
!5197 = !DILocation(line: 2101, column: 11, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 2101, column: 6)
!5199 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2098, column: 5)
!5200 = !DILocation(line: 2101, column: 18, scope: !5198)
!5201 = !DILocation(line: 2102, column: 6, scope: !5198)
!5202 = !DILocation(line: 2102, column: 14, scope: !5198)
!5203 = !DILocation(line: 2102, column: 21, scope: !5198)
!5204 = !DILocation(line: 2101, column: 6, scope: !5199)
!5205 = !DILocation(line: 2109, column: 11, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 2109, column: 6)
!5207 = !DILocation(line: 2109, column: 18, scope: !5206)
!5208 = !DILocation(line: 2110, column: 6, scope: !5206)
!5209 = !DILocation(line: 2110, column: 14, scope: !5206)
!5210 = !DILocation(line: 2110, column: 21, scope: !5206)
!5211 = !DILocation(line: 2109, column: 6, scope: !5199)
!5212 = !DILocation(line: 2116, column: 11, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 2116, column: 6)
!5214 = !DILocation(line: 2116, column: 18, scope: !5213)
!5215 = !DILocation(line: 2117, column: 6, scope: !5213)
!5216 = !DILocation(line: 2117, column: 14, scope: !5213)
!5217 = !DILocation(line: 2117, column: 21, scope: !5213)
!5218 = !DILocation(line: 2118, column: 6, scope: !5213)
!5219 = !DILocation(line: 2118, column: 21, scope: !5213)
!5220 = !DILocation(line: 2116, column: 6, scope: !5199)
!5221 = !DILocation(line: 2122, column: 6, scope: !5199)
!5222 = !DILocation(line: 2123, column: 27, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 2122, column: 6)
!5224 = !DILocation(line: 2123, column: 15, scope: !5223)
!5225 = !DILocation(line: 2123, column: 4, scope: !5223)
!5226 = !DILocation(line: 0, scope: !5199)
!5227 = !DILocation(line: 2124, column: 11, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 2124, column: 6)
!5229 = !DILocation(line: 2124, column: 18, scope: !5228)
!5230 = !DILocation(line: 2124, column: 6, scope: !5199)
!5231 = !DILocation(line: 2125, column: 27, scope: !5228)
!5232 = !DILocation(line: 2125, column: 15, scope: !5228)
!5233 = !DILocation(line: 2125, column: 4, scope: !5228)
!5234 = !DILocation(line: 2129, column: 2, scope: !5199)
!5235 = !DILocation(line: 2130, column: 5, scope: !5199)
!5236 = !DILocation(line: 2145, column: 20, scope: !5163)
!5237 = !DILocation(line: 2146, column: 7, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2146, column: 7)
!5239 = !DILocation(line: 2146, column: 38, scope: !5238)
!5240 = !DILocation(line: 2146, column: 36, scope: !5238)
!5241 = !DILocation(line: 2146, column: 7, scope: !5163)
!5242 = !DILocation(line: 2147, column: 5, scope: !5238)
!5243 = !DILocation(line: 2149, column: 24, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2149, column: 7)
!5245 = !DILocation(line: 2149, column: 7, scope: !5163)
!5246 = !DILocation(line: 2151, column: 16, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 2151, column: 11)
!5248 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 2150, column: 5)
!5249 = !DILocation(line: 2151, column: 21, scope: !5247)
!5250 = !DILocation(line: 2152, column: 4, scope: !5247)
!5251 = !DILocation(line: 2152, column: 12, scope: !5247)
!5252 = !DILocation(line: 2152, column: 20, scope: !5247)
!5253 = !DILocation(line: 2152, column: 17, scope: !5247)
!5254 = !DILocation(line: 2151, column: 11, scope: !5248)
!5255 = !DILocation(line: 2155, column: 39, scope: !5248)
!5256 = !DILocation(line: 2156, column: 27, scope: !5248)
!5257 = !DILocation(line: 2155, column: 19, scope: !5248)
!5258 = !DILocation(line: 2155, column: 17, scope: !5248)
!5259 = !DILocation(line: 2157, column: 24, scope: !5248)
!5260 = !DILocation(line: 2160, column: 12, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2160, column: 7)
!5262 = !DILocation(line: 2158, column: 5, scope: !5248)
!5263 = !DILocation(line: 2160, column: 24, scope: !5261)
!5264 = !DILocation(line: 2160, column: 7, scope: !5163)
!5265 = !DILocation(line: 2162, column: 16, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 2162, column: 11)
!5267 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 2161, column: 5)
!5268 = !DILocation(line: 2162, column: 21, scope: !5266)
!5269 = !DILocation(line: 2163, column: 4, scope: !5266)
!5270 = !DILocation(line: 2163, column: 12, scope: !5266)
!5271 = !DILocation(line: 2163, column: 20, scope: !5266)
!5272 = !DILocation(line: 2163, column: 17, scope: !5266)
!5273 = !DILocation(line: 2162, column: 11, scope: !5267)
!5274 = !DILocation(line: 2166, column: 39, scope: !5267)
!5275 = !DILocation(line: 2167, column: 27, scope: !5267)
!5276 = !DILocation(line: 2166, column: 19, scope: !5267)
!5277 = !DILocation(line: 2166, column: 17, scope: !5267)
!5278 = !DILocation(line: 2168, column: 24, scope: !5267)
!5279 = !DILocation(line: 2174, column: 25, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2174, column: 7)
!5281 = !DILocation(line: 2169, column: 5, scope: !5267)
!5282 = !DILocation(line: 2174, column: 12, scope: !5280)
!5283 = !DILocation(line: 2174, column: 17, scope: !5280)
!5284 = !DILocation(line: 2175, column: 7, scope: !5280)
!5285 = !DILocation(line: 2175, column: 15, scope: !5280)
!5286 = !DILocation(line: 2175, column: 23, scope: !5280)
!5287 = !DILocation(line: 2175, column: 20, scope: !5280)
!5288 = !DILocation(line: 2176, column: 7, scope: !5280)
!5289 = !DILocation(line: 2176, column: 28, scope: !5280)
!5290 = !DILocation(line: 2176, column: 20, scope: !5280)
!5291 = !DILocation(line: 2174, column: 7, scope: !5163)
!5292 = !DILocation(line: 2177, column: 5, scope: !5280)
!5293 = !DILocation(line: 2179, column: 25, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2179, column: 7)
!5295 = !DILocation(line: 2179, column: 12, scope: !5294)
!5296 = !DILocation(line: 2179, column: 17, scope: !5294)
!5297 = !DILocation(line: 2180, column: 7, scope: !5294)
!5298 = !DILocation(line: 2180, column: 15, scope: !5294)
!5299 = !DILocation(line: 2180, column: 23, scope: !5294)
!5300 = !DILocation(line: 2180, column: 20, scope: !5294)
!5301 = !DILocation(line: 2181, column: 7, scope: !5294)
!5302 = !DILocation(line: 2181, column: 15, scope: !5294)
!5303 = !DILocation(line: 2181, column: 20, scope: !5294)
!5304 = !DILocation(line: 2179, column: 7, scope: !5163)
!5305 = !DILocation(line: 2182, column: 40, scope: !5294)
!5306 = !DILocation(line: 2182, column: 5, scope: !5294)
!5307 = !DILocation(line: 2184, column: 25, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2184, column: 7)
!5309 = !DILocation(line: 2184, column: 12, scope: !5308)
!5310 = !DILocation(line: 2184, column: 17, scope: !5308)
!5311 = !DILocation(line: 2184, column: 7, scope: !5163)
!5312 = !DILocation(line: 2187, column: 9, scope: !5163)
!5313 = !DILocation(line: 2187, column: 14, scope: !5163)
!5314 = !DILocation(line: 2188, column: 9, scope: !5163)
!5315 = !DILocation(line: 2188, column: 18, scope: !5163)
!5316 = !DILocation(line: 2190, column: 3, scope: !5163)
!5317 = !DILocation(line: 2191, column: 1, scope: !5163)
!5318 = distinct !DISubprogram(name: "inverse", scope: !3, file: !3, line: 1285, type: !5319, scopeLine: 1286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5321)
!5319 = !DISubroutineType(types: !5320)
!5320 = !{!589, !589, !564}
!5321 = !{!5322, !5323, !5324, !5325, !5326}
!5322 = !DILocalVariable(name: "x", arg: 1, scope: !5318, file: !3, line: 1285, type: !589)
!5323 = !DILocalVariable(name: "mod", arg: 2, scope: !5318, file: !3, line: 1285, type: !564)
!5324 = !DILocalVariable(name: "mask", scope: !5318, file: !3, line: 1287, type: !589)
!5325 = !DILocalVariable(name: "rslt", scope: !5318, file: !3, line: 1289, type: !589)
!5326 = !DILocalVariable(name: "i", scope: !5318, file: !3, line: 1290, type: !564)
!5327 = !DILocation(line: 0, scope: !5318)
!5328 = !DILocation(line: 1288, column: 42, scope: !5318)
!5329 = !DILocation(line: 1288, column: 34, scope: !5318)
!5330 = !DILocation(line: 1288, column: 47, scope: !5318)
!5331 = !DILocation(line: 1288, column: 53, scope: !5318)
!5332 = !DILocation(line: 1292, column: 8, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 1292, column: 3)
!5334 = !DILocation(line: 0, scope: !5333)
!5335 = !DILocation(line: 1292, column: 17, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 1292, column: 3)
!5337 = !DILocation(line: 1292, column: 3, scope: !5333)
!5338 = !DILocation(line: 1294, column: 20, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 1293, column: 5)
!5340 = !DILocation(line: 1294, column: 25, scope: !5339)
!5341 = !DILocation(line: 1295, column: 14, scope: !5339)
!5342 = !DILocation(line: 1295, column: 19, scope: !5339)
!5343 = !DILocation(line: 1292, column: 29, scope: !5336)
!5344 = !DILocation(line: 1292, column: 3, scope: !5336)
!5345 = distinct !{!5345, !5337, !5346}
!5346 = !DILocation(line: 1296, column: 5, scope: !5333)
!5347 = !DILocation(line: 1298, column: 3, scope: !5318)
!5348 = distinct !DISubprogram(name: "simplify_using_initial_values", scope: !3, file: !3, line: 1822, type: !5349, scopeLine: 1823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5351)
!5349 = !DISubroutineType(types: !5350)
!5350 = !{null, !987, !390, !1749}
!5351 = !{!5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5370, !5373, !5376, !5380, !5381, !5382, !5385, !5388, !5389, !5393, !5394}
!5352 = !DILocalVariable(name: "loop", arg: 1, scope: !5348, file: !3, line: 1822, type: !987)
!5353 = !DILocalVariable(name: "op", arg: 2, scope: !5348, file: !3, line: 1822, type: !390)
!5354 = !DILocalVariable(name: "expr", arg: 3, scope: !5348, file: !3, line: 1822, type: !1749)
!5355 = !DILocalVariable(name: "expression_valid", scope: !5348, file: !3, line: 1824, type: !563)
!5356 = !DILocalVariable(name: "head", scope: !5348, file: !3, line: 1825, type: !634)
!5357 = !DILocalVariable(name: "tail", scope: !5348, file: !3, line: 1825, type: !634)
!5358 = !DILocalVariable(name: "insn", scope: !5348, file: !3, line: 1825, type: !634)
!5359 = !DILocalVariable(name: "cond_list", scope: !5348, file: !3, line: 1825, type: !634)
!5360 = !DILocalVariable(name: "last_valid_expr", scope: !5348, file: !3, line: 1825, type: !634)
!5361 = !DILocalVariable(name: "neutral", scope: !5348, file: !3, line: 1826, type: !634)
!5362 = !DILocalVariable(name: "aggr", scope: !5348, file: !3, line: 1826, type: !634)
!5363 = !DILocalVariable(name: "altered", scope: !5348, file: !3, line: 1827, type: !3426)
!5364 = !DILocalVariable(name: "this_altered", scope: !5348, file: !3, line: 1827, type: !3426)
!5365 = !DILocalVariable(name: "e", scope: !5348, file: !3, line: 1828, type: !962)
!5366 = !DILocalVariable(name: "cond", scope: !5367, file: !3, line: 1908, type: !634)
!5367 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 1907, column: 2)
!5368 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 1906, column: 11)
!5369 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 1904, column: 5)
!5370 = !DILocalVariable(name: "old", scope: !5371, file: !3, line: 1914, type: !634)
!5371 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 1913, column: 6)
!5372 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 1912, column: 8)
!5373 = !DILocalVariable(name: "note", scope: !5374, file: !3, line: 1918, type: !634)
!5374 = distinct !DILexicalBlock(scope: !5375, file: !3, line: 1917, column: 3)
!5375 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1916, column: 12)
!5376 = !DILocalVariable(name: "src", scope: !5377, file: !3, line: 1934, type: !634)
!5377 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 1933, column: 2)
!5378 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1932, column: 7)
!5379 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 1932, column: 7)
!5380 = !DILocalVariable(name: "dest", scope: !5377, file: !3, line: 1934, type: !634)
!5381 = !DILocalVariable(name: "old", scope: !5377, file: !3, line: 1935, type: !634)
!5382 = !DILocalVariable(name: "i", scope: !5383, file: !3, line: 1944, type: !564)
!5383 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1943, column: 6)
!5384 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 1942, column: 8)
!5385 = !DILocalVariable(name: "pnote", scope: !5386, file: !3, line: 1954, type: !1749)
!5386 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 1953, column: 6)
!5387 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 1952, column: 8)
!5388 = !DILocalVariable(name: "pnote_next", scope: !5386, file: !3, line: 1954, type: !1749)
!5389 = !DILocalVariable(name: "note", scope: !5390, file: !3, line: 1962, type: !634)
!5390 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 1961, column: 3)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 1960, column: 8)
!5392 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 1960, column: 8)
!5393 = !DILocalVariable(name: "old_cond", scope: !5390, file: !3, line: 1963, type: !634)
!5394 = !DILabel(scope: !5348, name: "out", file: !3, line: 2011)
!5395 = !DILocation(line: 0, scope: !5348)
!5396 = !DILocation(line: 1825, column: 3, scope: !5348)
!5397 = !DILocation(line: 1830, column: 8, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 1830, column: 7)
!5399 = !DILocation(line: 1830, column: 7, scope: !5348)
!5400 = !DILocation(line: 1833, column: 7, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 1833, column: 7)
!5402 = !DILocation(line: 1833, column: 7, scope: !5348)
!5403 = !DILocation(line: 1836, column: 24, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 1836, column: 7)
!5405 = !DILocation(line: 1836, column: 7, scope: !5348)
!5406 = !DILocation(line: 1838, column: 14, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 1837, column: 5)
!5408 = !DILocation(line: 1838, column: 12, scope: !5407)
!5409 = !DILocation(line: 1839, column: 14, scope: !5407)
!5410 = !DILocation(line: 1839, column: 12, scope: !5407)
!5411 = !DILocation(line: 1841, column: 48, scope: !5407)
!5412 = !DILocation(line: 1841, column: 7, scope: !5407)
!5413 = !DILocation(line: 1843, column: 7, scope: !5407)
!5414 = !DILocation(line: 1846, column: 14, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 1844, column: 2)
!5416 = !DILocation(line: 1847, column: 11, scope: !5415)
!5417 = !DILocation(line: 1848, column: 4, scope: !5415)
!5418 = !DILocation(line: 1851, column: 14, scope: !5415)
!5419 = !DILocation(line: 1852, column: 11, scope: !5415)
!5420 = !DILocation(line: 1853, column: 4, scope: !5415)
!5421 = !DILocation(line: 1856, column: 4, scope: !5415)
!5422 = !DILocation(line: 1857, column: 2, scope: !5415)
!5423 = !DILocation(line: 1859, column: 7, scope: !5407)
!5424 = !DILocation(line: 1860, column: 11, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 1860, column: 11)
!5426 = !DILocation(line: 1860, column: 16, scope: !5425)
!5427 = !DILocation(line: 1860, column: 11, scope: !5407)
!5428 = !DILocation(line: 1862, column: 4, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 1861, column: 2)
!5430 = !DILocation(line: 1862, column: 20, scope: !5429)
!5431 = !DILocation(line: 1863, column: 4, scope: !5429)
!5432 = !DILocation(line: 1863, column: 20, scope: !5429)
!5433 = !DILocation(line: 1864, column: 4, scope: !5429)
!5434 = !DILocation(line: 1866, column: 21, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 1866, column: 16)
!5436 = !DILocation(line: 1866, column: 16, scope: !5425)
!5437 = !DILocation(line: 1868, column: 12, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 1867, column: 2)
!5439 = !DILocation(line: 1868, column: 10, scope: !5438)
!5440 = !DILocation(line: 1869, column: 4, scope: !5438)
!5441 = !DILocation(line: 1870, column: 4, scope: !5438)
!5442 = !DILocation(line: 1872, column: 7, scope: !5407)
!5443 = !DILocation(line: 1874, column: 11, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 1874, column: 11)
!5445 = !DILocation(line: 1874, column: 16, scope: !5444)
!5446 = !DILocation(line: 1874, column: 19, scope: !5444)
!5447 = !DILocation(line: 1874, column: 34, scope: !5444)
!5448 = !DILocation(line: 1874, column: 11, scope: !5407)
!5449 = !DILocation(line: 1876, column: 10, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5444, file: !3, line: 1875, column: 2)
!5451 = !DILocation(line: 1877, column: 4, scope: !5450)
!5452 = !DILocation(line: 1880, column: 25, scope: !5407)
!5453 = !DILocation(line: 1880, column: 7, scope: !5407)
!5454 = !DILocation(line: 1880, column: 23, scope: !5407)
!5455 = !DILocation(line: 1881, column: 7, scope: !5407)
!5456 = !DILocation(line: 1881, column: 23, scope: !5407)
!5457 = !DILocation(line: 1882, column: 7, scope: !5407)
!5458 = !DILocation(line: 1885, column: 3, scope: !5348)
!5459 = !DILocation(line: 0, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 1888, column: 9)
!5461 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 1887, column: 3)
!5462 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 1887, column: 3)
!5463 = !DILocation(line: 1887, column: 3, scope: !5348)
!5464 = !DILocation(line: 1888, column: 9, scope: !5460)
!5465 = !DILocation(line: 1888, column: 60, scope: !5460)
!5466 = !DILocation(line: 1888, column: 9, scope: !5461)
!5467 = distinct !{!5467, !5468, !5469}
!5468 = !DILocation(line: 1887, column: 3, scope: !5462)
!5469 = !DILocation(line: 1889, column: 7, scope: !5462)
!5470 = !DILocation(line: 1890, column: 7, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 1890, column: 7)
!5472 = !DILocation(line: 1890, column: 7, scope: !5348)
!5473 = !DILocation(line: 1893, column: 7, scope: !5348)
!5474 = !DILocation(line: 1894, column: 10, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 1894, column: 7)
!5476 = !DILocation(line: 1894, column: 17, scope: !5475)
!5477 = !DILocation(line: 1894, column: 14, scope: !5475)
!5478 = !DILocation(line: 1894, column: 7, scope: !5348)
!5479 = !DILocation(line: 1897, column: 13, scope: !5348)
!5480 = !DILocation(line: 1898, column: 18, scope: !5348)
!5481 = !DILocation(line: 1901, column: 21, scope: !5348)
!5482 = !DILocation(line: 1902, column: 13, scope: !5348)
!5483 = !DILocation(line: 0, scope: !5377)
!5484 = !DILocation(line: 0, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 1999, column: 8)
!5486 = !DILocation(line: 1903, column: 3, scope: !5348)
!5487 = !DILocation(line: 1901, column: 19, scope: !5348)
!5488 = !DILocation(line: 1900, column: 20, scope: !5348)
!5489 = !DILocation(line: 1905, column: 14, scope: !5369)
!5490 = !DILocation(line: 1906, column: 11, scope: !5368)
!5491 = !DILocation(line: 1906, column: 11, scope: !5369)
!5492 = !DILocation(line: 1908, column: 30, scope: !5367)
!5493 = !DILocation(line: 1908, column: 15, scope: !5367)
!5494 = !DILocation(line: 0, scope: !5367)
!5495 = !DILocation(line: 1910, column: 8, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 1910, column: 8)
!5497 = !DILocation(line: 1910, column: 13, scope: !5496)
!5498 = !DILocation(line: 1910, column: 20, scope: !5496)
!5499 = !DILocation(line: 1910, column: 26, scope: !5496)
!5500 = !DILocation(line: 1910, column: 8, scope: !5367)
!5501 = !DILocation(line: 1911, column: 13, scope: !5496)
!5502 = !DILocation(line: 1911, column: 6, scope: !5496)
!5503 = !DILocation(line: 1912, column: 8, scope: !5372)
!5504 = !DILocation(line: 1912, column: 8, scope: !5367)
!5505 = !DILocation(line: 1914, column: 18, scope: !5371)
!5506 = !DILocation(line: 0, scope: !5371)
!5507 = !DILocation(line: 1915, column: 8, scope: !5371)
!5508 = !DILocation(line: 1916, column: 19, scope: !5375)
!5509 = !DILocation(line: 1916, column: 16, scope: !5375)
!5510 = !DILocation(line: 1916, column: 12, scope: !5371)
!5511 = !DILocation(line: 1919, column: 9, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 1919, column: 9)
!5513 = !DILocation(line: 1919, column: 9, scope: !5374)
!5514 = !DILocation(line: 1921, column: 10, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 1921, column: 5)
!5516 = !DILocation(line: 0, scope: !5515)
!5517 = !DILocation(line: 0, scope: !5374)
!5518 = !DILocation(line: 1921, column: 5, scope: !5515)
!5519 = !DILocation(line: 1923, column: 35, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 1922, column: 7)
!5521 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 1921, column: 5)
!5522 = !DILocation(line: 1923, column: 9, scope: !5520)
!5523 = !DILocation(line: 1924, column: 13, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 1924, column: 13)
!5525 = !DILocation(line: 1924, column: 13, scope: !5520)
!5526 = !DILocation(line: 1921, column: 41, scope: !5521)
!5527 = !DILocation(line: 1921, column: 5, scope: !5521)
!5528 = distinct !{!5528, !5518, !5529}
!5529 = !DILocation(line: 1926, column: 7, scope: !5515)
!5530 = !DILocation(line: 1928, column: 46, scope: !5371)
!5531 = !DILocation(line: 1928, column: 20, scope: !5371)
!5532 = !DILocation(line: 1928, column: 18, scope: !5371)
!5533 = !DILocation(line: 1929, column: 6, scope: !5372)
!5534 = !DILocation(line: 1930, column: 2, scope: !5368)
!5535 = !DILocation(line: 1932, column: 7, scope: !5379)
!5536 = !DILocation(line: 0, scope: !5379)
!5537 = !DILocation(line: 1932, column: 7, scope: !5378)
!5538 = !DILocation(line: 2005, column: 30, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 2005, column: 11)
!5540 = !DILocation(line: 1934, column: 4, scope: !5377)
!5541 = !DILocation(line: 1935, column: 14, scope: !5377)
!5542 = !DILocation(line: 1937, column: 9, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 1937, column: 8)
!5544 = !DILocation(line: 1937, column: 8, scope: !5377)
!5545 = !DILocation(line: 1940, column: 4, scope: !5377)
!5546 = !DILocation(line: 1941, column: 17, scope: !5377)
!5547 = !DILocation(line: 1941, column: 4, scope: !5377)
!5548 = !DILocation(line: 1942, column: 8, scope: !5384)
!5549 = !DILocation(line: 1942, column: 8, scope: !5377)
!5550 = !DILocation(line: 1947, column: 8, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 1947, column: 8)
!5552 = !DILocation(line: 0, scope: !5551)
!5553 = !DILocation(line: 0, scope: !5383)
!5554 = !DILocation(line: 1947, column: 22, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 1947, column: 8)
!5556 = !DILocation(line: 1948, column: 7, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 1948, column: 7)
!5558 = !DILocation(line: 1948, column: 7, scope: !5555)
!5559 = !DILocation(line: 1949, column: 5, scope: !5557)
!5560 = !DILocation(line: 1947, column: 48, scope: !5555)
!5561 = !DILocation(line: 1947, column: 8, scope: !5555)
!5562 = distinct !{!5562, !5550, !5563}
!5563 = !DILocation(line: 1949, column: 5, scope: !5551)
!5564 = !DILocation(line: 1952, column: 8, scope: !5387)
!5565 = !DILocation(line: 1952, column: 8, scope: !5377)
!5566 = !DILocation(line: 1956, column: 31, scope: !5386)
!5567 = !DILocation(line: 1956, column: 37, scope: !5386)
!5568 = !DILocation(line: 1956, column: 8, scope: !5386)
!5569 = !DILocation(line: 1957, column: 12, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 1957, column: 12)
!5571 = !DILocation(line: 1957, column: 12, scope: !5386)
!5572 = !DILocation(line: 1960, column: 8, scope: !5392)
!5573 = !DILocation(line: 0, scope: !5392)
!5574 = !DILocation(line: 0, scope: !5386)
!5575 = !DILocation(line: 1960, column: 33, scope: !5391)
!5576 = !DILocation(line: 0, scope: !5390)
!5577 = !DILocation(line: 1963, column: 20, scope: !5390)
!5578 = !DILocation(line: 1965, column: 19, scope: !5390)
!5579 = !DILocation(line: 1966, column: 39, scope: !5390)
!5580 = !DILocation(line: 1966, column: 45, scope: !5390)
!5581 = !DILocation(line: 1966, column: 5, scope: !5390)
!5582 = !DILocation(line: 1971, column: 9, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 1971, column: 9)
!5584 = !DILocation(line: 1971, column: 9, scope: !5390)
!5585 = !DILocation(line: 1973, column: 18, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 1972, column: 7)
!5587 = !DILocation(line: 1973, column: 16, scope: !5586)
!5588 = !DILocation(line: 1975, column: 9, scope: !5586)
!5589 = !DILocation(line: 1976, column: 7, scope: !5586)
!5590 = !DILocation(line: 1979, column: 23, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 1979, column: 14)
!5592 = !DILocation(line: 1979, column: 41, scope: !5591)
!5593 = !DILocation(line: 1979, column: 51, scope: !5591)
!5594 = !DILocation(line: 1979, column: 48, scope: !5591)
!5595 = !DILocation(line: 1979, column: 14, scope: !5583)
!5596 = !DILocation(line: 1980, column: 7, scope: !5591)
!5597 = !DILocation(line: 1960, column: 8, scope: !5391)
!5598 = distinct !{!5598, !5572, !5599}
!5599 = !DILocation(line: 1981, column: 3, scope: !5392)
!5600 = !DILocation(line: 1987, column: 10, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 1987, column: 10)
!5602 = !DILocation(line: 1987, column: 10, scope: !5387)
!5603 = !DILocation(line: 1990, column: 8, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 1990, column: 8)
!5605 = !DILocation(line: 1990, column: 8, scope: !5377)
!5606 = !DILocation(line: 1993, column: 4, scope: !5377)
!5607 = !DILocation(line: 1999, column: 8, scope: !5485)
!5608 = !DILocation(line: 1999, column: 8, scope: !5377)
!5609 = !DILocation(line: 2001, column: 8, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 2001, column: 8)
!5611 = !DILocation(line: 2001, column: 8, scope: !5377)
!5612 = !DILocation(line: 2002, column: 24, scope: !5610)
!5613 = !DILocation(line: 2002, column: 6, scope: !5610)
!5614 = !DILocation(line: 2003, column: 2, scope: !5378)
!5615 = distinct !{!5615, !5535, !5616}
!5616 = !DILocation(line: 2003, column: 2, scope: !5379)
!5617 = !DILocation(line: 2005, column: 12, scope: !5539)
!5618 = !DILocation(line: 2006, column: 4, scope: !5539)
!5619 = !DILocation(line: 2006, column: 23, scope: !5539)
!5620 = !DILocation(line: 2006, column: 7, scope: !5539)
!5621 = !DILocation(line: 2006, column: 31, scope: !5539)
!5622 = !DILocation(line: 2006, column: 28, scope: !5539)
!5623 = !DILocation(line: 2005, column: 11, scope: !5369)
!5624 = !DILocation(line: 2008, column: 32, scope: !5369)
!5625 = !DILocation(line: 2008, column: 11, scope: !5369)
!5626 = distinct !{!5626, !5486, !5627}
!5627 = !DILocation(line: 2009, column: 5, scope: !5348)
!5628 = !DILocation(line: 2012, column: 3, scope: !5348)
!5629 = !DILocation(line: 2011, column: 2, scope: !5348)
!5630 = !DILocation(line: 2013, column: 8, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 2013, column: 7)
!5632 = !DILocation(line: 2013, column: 7, scope: !5348)
!5633 = !DILocation(line: 2014, column: 11, scope: !5631)
!5634 = !DILocation(line: 2014, column: 5, scope: !5631)
!5635 = !DILocation(line: 2015, column: 3, scope: !5348)
!5636 = !DILocation(line: 2016, column: 3, scope: !5348)
!5637 = !DILocation(line: 2017, column: 1, scope: !5348)
!5638 = distinct !DISubprogram(name: "determine_max_iter", scope: !3, file: !3, line: 2199, type: !5639, scopeLine: 2200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5641)
!5639 = !DISubroutineType(types: !5640)
!5640 = !{!589, !987, !1701, !634}
!5641 = !{!5642, !5643, !5644, !5645, !5646, !5647, !5648, !5649, !5650}
!5642 = !DILocalVariable(name: "loop", arg: 1, scope: !5638, file: !3, line: 2199, type: !987)
!5643 = !DILocalVariable(name: "desc", arg: 2, scope: !5638, file: !3, line: 2199, type: !1701)
!5644 = !DILocalVariable(name: "old_niter", arg: 3, scope: !5638, file: !3, line: 2199, type: !634)
!5645 = !DILocalVariable(name: "niter", scope: !5638, file: !3, line: 2201, type: !634)
!5646 = !DILocalVariable(name: "mmin", scope: !5638, file: !3, line: 2202, type: !634)
!5647 = !DILocalVariable(name: "mmax", scope: !5638, file: !3, line: 2202, type: !634)
!5648 = !DILocalVariable(name: "cmp", scope: !5638, file: !3, line: 2202, type: !634)
!5649 = !DILocalVariable(name: "nmax", scope: !5638, file: !3, line: 2203, type: !589)
!5650 = !DILocalVariable(name: "inc", scope: !5638, file: !3, line: 2203, type: !589)
!5651 = !DILocation(line: 0, scope: !5638)
!5652 = !DILocation(line: 2201, column: 21, scope: !5638)
!5653 = !DILocation(line: 2202, column: 3, scope: !5638)
!5654 = !DILocation(line: 2205, column: 7, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 2205, column: 7)
!5656 = !DILocation(line: 2205, column: 24, scope: !5655)
!5657 = !DILocation(line: 2206, column: 7, scope: !5655)
!5658 = !DILocation(line: 2206, column: 10, scope: !5655)
!5659 = !DILocation(line: 2205, column: 7, scope: !5638)
!5660 = !DILocation(line: 2208, column: 14, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 2207, column: 5)
!5662 = !DILocation(line: 2209, column: 26, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 2209, column: 11)
!5664 = !DILocation(line: 2209, column: 18, scope: !5663)
!5665 = !DILocation(line: 2209, column: 11, scope: !5661)
!5666 = !DILocation(line: 2211, column: 10, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 2210, column: 2)
!5668 = !DILocation(line: 2211, column: 20, scope: !5667)
!5669 = !DILocation(line: 2212, column: 4, scope: !5667)
!5670 = !DILocation(line: 2216, column: 26, scope: !5638)
!5671 = !DILocation(line: 2216, column: 38, scope: !5638)
!5672 = !DILocation(line: 2216, column: 32, scope: !5638)
!5673 = !DILocation(line: 2216, column: 3, scope: !5638)
!5674 = !DILocation(line: 2217, column: 10, scope: !5638)
!5675 = !DILocation(line: 2217, column: 26, scope: !5638)
!5676 = !DILocation(line: 2217, column: 24, scope: !5638)
!5677 = !DILocation(line: 2219, column: 7, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 2219, column: 7)
!5679 = !DILocation(line: 2219, column: 24, scope: !5678)
!5680 = !DILocation(line: 2219, column: 7, scope: !5638)
!5681 = !DILocation(line: 2221, column: 12, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 2221, column: 11)
!5683 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 2220, column: 5)
!5684 = !DILocation(line: 2221, column: 11, scope: !5683)
!5685 = !DILocation(line: 2223, column: 10, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 2222, column: 2)
!5687 = !DILocation(line: 2223, column: 20, scope: !5686)
!5688 = !DILocation(line: 2224, column: 4, scope: !5686)
!5689 = !DILocation(line: 2226, column: 13, scope: !5683)
!5690 = !DILocation(line: 2228, column: 5, scope: !5683)
!5691 = !DILocation(line: 0, scope: !5678)
!5692 = !DILocation(line: 2234, column: 40, scope: !5638)
!5693 = !DILocation(line: 2234, column: 34, scope: !5638)
!5694 = !DILocation(line: 2235, column: 12, scope: !5638)
!5695 = !DILocation(line: 2234, column: 9, scope: !5638)
!5696 = !DILocation(line: 2234, column: 7, scope: !5638)
!5697 = !DILocation(line: 2236, column: 3, scope: !5638)
!5698 = !DILocation(line: 2237, column: 7, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 2237, column: 7)
!5700 = !DILocation(line: 2237, column: 14, scope: !5699)
!5701 = !DILocation(line: 2237, column: 11, scope: !5699)
!5702 = !DILocation(line: 2237, column: 7, scope: !5638)
!5703 = !DILocation(line: 2239, column: 11, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 2238, column: 5)
!5705 = !DILocation(line: 2241, column: 11, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 2241, column: 11)
!5707 = !DILocation(line: 2241, column: 11, scope: !5704)
!5708 = !DILocation(line: 2242, column: 2, scope: !5706)
!5709 = !DILocation(line: 2244, column: 26, scope: !5638)
!5710 = !DILocation(line: 2244, column: 9, scope: !5638)
!5711 = !DILocation(line: 2244, column: 19, scope: !5638)
!5712 = !DILocation(line: 2245, column: 3, scope: !5638)
!5713 = !DILocation(line: 2246, column: 1, scope: !5638)
!5714 = distinct !DISubprogram(name: "shorten_into_mode", scope: !3, file: !3, line: 2024, type: !5715, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5717)
!5715 = !DISubroutineType(types: !5716)
!5716 = !{null, !1736, !5, !390, !563, !1701}
!5717 = !{!5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726}
!5718 = !DILocalVariable(name: "iv", arg: 1, scope: !5714, file: !3, line: 2024, type: !1736)
!5719 = !DILocalVariable(name: "mode", arg: 2, scope: !5714, file: !3, line: 2024, type: !5)
!5720 = !DILocalVariable(name: "cond", arg: 3, scope: !5714, file: !3, line: 2025, type: !390)
!5721 = !DILocalVariable(name: "signed_p", arg: 4, scope: !5714, file: !3, line: 2025, type: !563)
!5722 = !DILocalVariable(name: "desc", arg: 5, scope: !5714, file: !3, line: 2025, type: !1701)
!5723 = !DILocalVariable(name: "mmin", scope: !5714, file: !3, line: 2027, type: !634)
!5724 = !DILocalVariable(name: "mmax", scope: !5714, file: !3, line: 2027, type: !634)
!5725 = !DILocalVariable(name: "cond_over", scope: !5714, file: !3, line: 2027, type: !634)
!5726 = !DILocalVariable(name: "cond_under", scope: !5714, file: !3, line: 2027, type: !634)
!5727 = !DILocation(line: 0, scope: !5714)
!5728 = !DILocation(line: 2027, column: 3, scope: !5714)
!5729 = !DILocation(line: 2029, column: 26, scope: !5714)
!5730 = !DILocation(line: 2029, column: 40, scope: !5714)
!5731 = !DILocation(line: 2029, column: 3, scope: !5714)
!5732 = !DILocation(line: 2030, column: 57, scope: !5714)
!5733 = !DILocation(line: 2031, column: 10, scope: !5714)
!5734 = !DILocation(line: 2031, column: 16, scope: !5714)
!5735 = !DILocation(line: 2030, column: 16, scope: !5714)
!5736 = !DILocation(line: 2032, column: 56, scope: !5714)
!5737 = !DILocation(line: 2033, column: 16, scope: !5714)
!5738 = !DILocation(line: 2033, column: 22, scope: !5714)
!5739 = !DILocation(line: 2032, column: 15, scope: !5714)
!5740 = !DILocation(line: 2035, column: 3, scope: !5714)
!5741 = !DILocation(line: 2041, column: 20, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 2041, column: 6)
!5743 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 2036, column: 5)
!5744 = !DILocation(line: 2041, column: 17, scope: !5742)
!5745 = !DILocation(line: 2041, column: 6, scope: !5743)
!5746 = !DILocation(line: 2043, column: 43, scope: !5742)
!5747 = !DILocation(line: 2043, column: 5, scope: !5742)
!5748 = !DILocation(line: 2042, column: 19, scope: !5742)
!5749 = !DILocation(line: 2044, column: 19, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 2044, column: 6)
!5751 = !DILocation(line: 2042, column: 4, scope: !5742)
!5752 = !DILocation(line: 2044, column: 16, scope: !5750)
!5753 = !DILocation(line: 2044, column: 6, scope: !5743)
!5754 = !DILocation(line: 2046, column: 42, scope: !5750)
!5755 = !DILocation(line: 2046, column: 5, scope: !5750)
!5756 = !DILocation(line: 2045, column: 29, scope: !5750)
!5757 = !DILocation(line: 2045, column: 4, scope: !5750)
!5758 = !DILocation(line: 2053, column: 19, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 2053, column: 6)
!5760 = !DILocation(line: 2053, column: 16, scope: !5759)
!5761 = !DILocation(line: 2053, column: 6, scope: !5743)
!5762 = !DILocation(line: 2055, column: 42, scope: !5759)
!5763 = !DILocation(line: 2055, column: 5, scope: !5759)
!5764 = !DILocation(line: 2054, column: 19, scope: !5759)
!5765 = !DILocation(line: 2056, column: 20, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 2056, column: 6)
!5767 = !DILocation(line: 2054, column: 4, scope: !5759)
!5768 = !DILocation(line: 2056, column: 17, scope: !5766)
!5769 = !DILocation(line: 2056, column: 6, scope: !5743)
!5770 = !DILocation(line: 2058, column: 43, scope: !5766)
!5771 = !DILocation(line: 2058, column: 5, scope: !5766)
!5772 = !DILocation(line: 2057, column: 29, scope: !5766)
!5773 = !DILocation(line: 2057, column: 4, scope: !5766)
!5774 = !DILocation(line: 2062, column: 19, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 2062, column: 6)
!5776 = !DILocation(line: 2062, column: 16, scope: !5775)
!5777 = !DILocation(line: 2062, column: 6, scope: !5743)
!5778 = !DILocation(line: 2064, column: 42, scope: !5775)
!5779 = !DILocation(line: 2064, column: 5, scope: !5775)
!5780 = !DILocation(line: 2063, column: 19, scope: !5775)
!5781 = !DILocation(line: 2065, column: 20, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 2065, column: 6)
!5783 = !DILocation(line: 2063, column: 4, scope: !5775)
!5784 = !DILocation(line: 2065, column: 17, scope: !5782)
!5785 = !DILocation(line: 2065, column: 6, scope: !5743)
!5786 = !DILocation(line: 2067, column: 43, scope: !5782)
!5787 = !DILocation(line: 2067, column: 5, scope: !5782)
!5788 = !DILocation(line: 2066, column: 19, scope: !5782)
!5789 = !DILocation(line: 2066, column: 4, scope: !5782)
!5790 = !DILocation(line: 2071, column: 2, scope: !5743)
!5791 = !DILocation(line: 2072, column: 5, scope: !5743)
!5792 = !DILocation(line: 2074, column: 7, scope: !5714)
!5793 = !DILocation(line: 2074, column: 12, scope: !5714)
!5794 = !DILocation(line: 2075, column: 16, scope: !5714)
!5795 = !DILocation(line: 2075, column: 7, scope: !5714)
!5796 = !DILocation(line: 2075, column: 14, scope: !5714)
!5797 = !DILocation(line: 2076, column: 1, scope: !5714)
!5798 = distinct !DISubprogram(name: "eliminate_implied_conditions", scope: !3, file: !3, line: 1808, type: !5799, scopeLine: 1809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5801)
!5799 = !DISubroutineType(types: !5800)
!5800 = !{null, !390, !1749, !634}
!5801 = !{!5802, !5803, !5804, !5805}
!5802 = !DILocalVariable(name: "op", arg: 1, scope: !5798, file: !3, line: 1808, type: !390)
!5803 = !DILocalVariable(name: "head", arg: 2, scope: !5798, file: !3, line: 1808, type: !1749)
!5804 = !DILocalVariable(name: "tail", arg: 3, scope: !5798, file: !3, line: 1808, type: !634)
!5805 = !DILocalVariable(name: "elt", scope: !5798, file: !3, line: 1810, type: !634)
!5806 = !DILocation(line: 0, scope: !5798)
!5807 = !DILocation(line: 1812, column: 8, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1812, column: 3)
!5809 = !DILocation(line: 0, scope: !5808)
!5810 = !DILocation(line: 1812, column: 3, scope: !5808)
!5811 = !DILocation(line: 1814, column: 3, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1814, column: 3)
!5813 = !DILocation(line: 1813, column: 38, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 1812, column: 3)
!5815 = !DILocation(line: 1813, column: 46, scope: !5814)
!5816 = !DILocation(line: 1813, column: 5, scope: !5814)
!5817 = !DILocation(line: 1812, column: 31, scope: !5814)
!5818 = !DILocation(line: 1812, column: 3, scope: !5814)
!5819 = distinct !{!5819, !5810, !5820}
!5820 = !DILocation(line: 1813, column: 59, scope: !5808)
!5821 = !DILocation(line: 0, scope: !5812)
!5822 = !DILocation(line: 1815, column: 38, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 1814, column: 3)
!5824 = !DILocation(line: 1815, column: 5, scope: !5823)
!5825 = !DILocation(line: 1814, column: 31, scope: !5823)
!5826 = !DILocation(line: 1814, column: 3, scope: !5823)
!5827 = distinct !{!5827, !5811, !5828}
!5828 = !DILocation(line: 1815, column: 57, scope: !5812)
!5829 = !DILocation(line: 1816, column: 1, scope: !5798)
!5830 = distinct !DISubprogram(name: "replace_single_def_regs", scope: !3, file: !3, line: 1376, type: !3530, scopeLine: 1377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5831)
!5831 = !{!5832, !5833, !5834, !5835, !5836, !5837, !5838, !5839}
!5832 = !DILocalVariable(name: "reg", arg: 1, scope: !5830, file: !3, line: 1376, type: !1749)
!5833 = !DILocalVariable(name: "expr1", arg: 2, scope: !5830, file: !3, line: 1376, type: !568)
!5834 = !DILocalVariable(name: "regno", scope: !5830, file: !3, line: 1378, type: !7)
!5835 = !DILocalVariable(name: "adef", scope: !5830, file: !3, line: 1379, type: !2530)
!5836 = !DILocalVariable(name: "set", scope: !5830, file: !3, line: 1380, type: !634)
!5837 = !DILocalVariable(name: "src", scope: !5830, file: !3, line: 1380, type: !634)
!5838 = !DILocalVariable(name: "expr", scope: !5830, file: !3, line: 1381, type: !1749)
!5839 = !DILocalVariable(name: "note", scope: !5840, file: !3, line: 1389, type: !634)
!5840 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 1388, column: 5)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1387, column: 3)
!5842 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1387, column: 3)
!5843 = !DILocation(line: 0, scope: !5830)
!5844 = !DILocation(line: 1381, column: 15, scope: !5830)
!5845 = !DILocation(line: 1383, column: 8, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1383, column: 7)
!5847 = !DILocation(line: 1383, column: 7, scope: !5830)
!5848 = !DILocation(line: 1386, column: 11, scope: !5830)
!5849 = !DILocation(line: 1387, column: 3, scope: !5830)
!5850 = !DILocation(line: 1386, column: 9, scope: !5830)
!5851 = !DILocation(line: 1390, column: 14, scope: !5840)
!5852 = !DILocation(line: 1391, column: 16, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1391, column: 11)
!5854 = !DILocation(line: 1391, column: 24, scope: !5853)
!5855 = !DILocation(line: 1391, column: 27, scope: !5853)
!5856 = !DILocation(line: 1391, column: 50, scope: !5853)
!5857 = !DILocation(line: 1392, column: 6, scope: !5853)
!5858 = !DILocation(line: 1392, column: 9, scope: !5853)
!5859 = !DILocation(line: 1391, column: 11, scope: !5840)
!5860 = !DILocation(line: 1395, column: 13, scope: !5840)
!5861 = !DILocation(line: 1396, column: 15, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1396, column: 11)
!5863 = !DILocation(line: 1396, column: 23, scope: !5862)
!5864 = !DILocation(line: 1396, column: 27, scope: !5862)
!5865 = !DILocation(line: 1397, column: 4, scope: !5862)
!5866 = !DILocation(line: 1397, column: 7, scope: !5862)
!5867 = !DILocation(line: 1397, column: 30, scope: !5862)
!5868 = !DILocation(line: 1396, column: 11, scope: !5840)
!5869 = !DILocation(line: 1400, column: 41, scope: !5840)
!5870 = !DILocation(line: 1400, column: 14, scope: !5840)
!5871 = !DILocation(line: 0, scope: !5840)
!5872 = !DILocation(line: 1402, column: 11, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1402, column: 11)
!5874 = !DILocation(line: 1402, column: 16, scope: !5873)
!5875 = !DILocation(line: 1402, column: 41, scope: !5873)
!5876 = !DILocation(line: 1402, column: 19, scope: !5873)
!5877 = !DILocation(line: 1402, column: 11, scope: !5840)
!5878 = !DILocation(line: 1404, column: 10, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 1403, column: 2)
!5880 = !DILocation(line: 1405, column: 4, scope: !5879)
!5881 = !DILocation(line: 1407, column: 13, scope: !5840)
!5882 = !DILocation(line: 1409, column: 11, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1409, column: 11)
!5884 = !DILocation(line: 1409, column: 11, scope: !5840)
!5885 = !DILocation(line: 1411, column: 12, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5883, file: !3, line: 1410, column: 2)
!5887 = !DILocation(line: 1412, column: 4, scope: !5886)
!5888 = distinct !{!5888, !5889, !5890}
!5889 = !DILocation(line: 1387, column: 3, scope: !5842)
!5890 = !DILocation(line: 1415, column: 5, scope: !5842)
!5891 = !DILocation(line: 1416, column: 8, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1416, column: 7)
!5893 = !DILocation(line: 1416, column: 7, scope: !5830)
!5894 = !DILocation(line: 1419, column: 33, scope: !5830)
!5895 = !DILocation(line: 1419, column: 40, scope: !5830)
!5896 = !DILocation(line: 1419, column: 11, scope: !5830)
!5897 = !DILocation(line: 1419, column: 9, scope: !5830)
!5898 = !DILocation(line: 1420, column: 3, scope: !5830)
!5899 = !DILocation(line: 1421, column: 1, scope: !5830)
!5900 = distinct !DISubprogram(name: "mark_altered", scope: !3, file: !3, line: 1315, type: !5901, scopeLine: 1316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5903)
!5901 = !DISubroutineType(types: !5902)
!5902 = !{null, !634, !1732, !568}
!5903 = !{!5904, !5905, !5906}
!5904 = !DILocalVariable(name: "expr", arg: 1, scope: !5900, file: !3, line: 1315, type: !634)
!5905 = !DILocalVariable(name: "by", arg: 2, scope: !5900, file: !3, line: 1315, type: !1732)
!5906 = !DILocalVariable(name: "alt", arg: 3, scope: !5900, file: !3, line: 1315, type: !568)
!5907 = !DILocation(line: 0, scope: !5900)
!5908 = !DILocation(line: 1317, column: 7, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1317, column: 7)
!5910 = !DILocation(line: 1317, column: 23, scope: !5909)
!5911 = !DILocation(line: 1317, column: 7, scope: !5900)
!5912 = !DILocation(line: 1318, column: 12, scope: !5909)
!5913 = !DILocation(line: 0, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1319, column: 7)
!5915 = !DILocation(line: 1319, column: 8, scope: !5914)
!5916 = !DILocation(line: 1318, column: 5, scope: !5909)
!5917 = !DILocation(line: 1319, column: 7, scope: !5900)
!5918 = !DILocation(line: 1322, column: 3, scope: !5900)
!5919 = !DILocation(line: 1323, column: 1, scope: !5900)
!5920 = distinct !DISubprogram(name: "suitable_set_for_replacement", scope: !3, file: !3, line: 1429, type: !5921, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5923)
!5921 = !DISubroutineType(types: !5922)
!5922 = !{!563, !634, !1749, !1749}
!5923 = !{!5924, !5925, !5926, !5927, !5928, !5929}
!5924 = !DILocalVariable(name: "insn", arg: 1, scope: !5920, file: !3, line: 1429, type: !634)
!5925 = !DILocalVariable(name: "dest", arg: 2, scope: !5920, file: !3, line: 1429, type: !1749)
!5926 = !DILocalVariable(name: "src", arg: 3, scope: !5920, file: !3, line: 1429, type: !1749)
!5927 = !DILocalVariable(name: "set", scope: !5920, file: !3, line: 1431, type: !634)
!5928 = !DILocalVariable(name: "lhs", scope: !5920, file: !3, line: 1432, type: !634)
!5929 = !DILocalVariable(name: "rhs", scope: !5920, file: !3, line: 1432, type: !634)
!5930 = !DILocation(line: 0, scope: !5920)
!5931 = !DILocation(line: 1431, column: 13, scope: !5920)
!5932 = !DILocation(line: 1434, column: 8, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1434, column: 7)
!5934 = !DILocation(line: 1434, column: 7, scope: !5920)
!5935 = !DILocation(line: 1437, column: 9, scope: !5920)
!5936 = !DILocation(line: 1438, column: 8, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1438, column: 7)
!5938 = !DILocation(line: 1438, column: 7, scope: !5920)
!5939 = !DILocation(line: 1441, column: 9, scope: !5920)
!5940 = !DILocation(line: 1442, column: 7, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1442, column: 7)
!5942 = !DILocation(line: 1442, column: 7, scope: !5920)
!5943 = !DILocation(line: 1443, column: 11, scope: !5941)
!5944 = !DILocation(line: 1443, column: 5, scope: !5941)
!5945 = !DILocation(line: 1445, column: 11, scope: !5941)
!5946 = !DILocation(line: 0, scope: !5941)
!5947 = !DILocation(line: 1447, column: 8, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1447, column: 7)
!5949 = !DILocation(line: 1447, column: 7, scope: !5920)
!5950 = !DILocation(line: 1450, column: 9, scope: !5920)
!5951 = !DILocation(line: 1451, column: 8, scope: !5920)
!5952 = !DILocation(line: 1452, column: 3, scope: !5920)
!5953 = !DILocation(line: 1453, column: 1, scope: !5920)
!5954 = distinct !DISubprogram(name: "replace_in_expr", scope: !3, file: !3, line: 1459, type: !5955, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5957)
!5955 = !DISubroutineType(types: !5956)
!5956 = !{null, !1749, !634, !634}
!5957 = !{!5958, !5959, !5960, !5961}
!5958 = !DILocalVariable(name: "expr", arg: 1, scope: !5954, file: !3, line: 1459, type: !1749)
!5959 = !DILocalVariable(name: "dest", arg: 2, scope: !5954, file: !3, line: 1459, type: !634)
!5960 = !DILocalVariable(name: "src", arg: 3, scope: !5954, file: !3, line: 1459, type: !634)
!5961 = !DILocalVariable(name: "old", scope: !5954, file: !3, line: 1461, type: !634)
!5962 = !DILocation(line: 0, scope: !5954)
!5963 = !DILocation(line: 1461, column: 13, scope: !5954)
!5964 = !DILocation(line: 1462, column: 11, scope: !5954)
!5965 = !DILocation(line: 1462, column: 9, scope: !5954)
!5966 = !DILocation(line: 1463, column: 11, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 1463, column: 7)
!5968 = !DILocation(line: 1463, column: 7, scope: !5954)
!5969 = !DILocation(line: 1465, column: 3, scope: !5954)
!5970 = !DILocation(line: 1465, column: 10, scope: !5954)
!5971 = !DILocation(line: 1465, column: 61, scope: !5954)
!5972 = distinct !{!5972, !5969, !5973}
!5973 = !DILocation(line: 1466, column: 5, scope: !5954)
!5974 = !DILocation(line: 1467, column: 1, scope: !5954)
!5975 = distinct !DISubprogram(name: "single_pred_p", scope: !148, file: !148, line: 634, type: !5976, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5981)
!5976 = !DISubroutineType(types: !5977)
!5977 = !{!563, !5978}
!5978 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !572, line: 112, baseType: !5979)
!5979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5980, size: 64)
!5980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!5981 = !{!5982}
!5982 = !DILocalVariable(name: "bb", arg: 1, scope: !5975, file: !148, line: 634, type: !5978)
!5983 = !DILocation(line: 0, scope: !5975)
!5984 = !DILocation(line: 636, column: 10, scope: !5975)
!5985 = !DILocation(line: 636, column: 33, scope: !5975)
!5986 = !DILocation(line: 636, column: 3, scope: !5975)
!5987 = distinct !DISubprogram(name: "single_pred", scope: !148, file: !148, line: 672, type: !5988, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5990)
!5988 = !DISubroutineType(types: !5989)
!5989 = !{!945, !5978}
!5990 = !{!5991}
!5991 = !DILocalVariable(name: "bb", arg: 1, scope: !5987, file: !148, line: 672, type: !5978)
!5992 = !DILocation(line: 0, scope: !5987)
!5993 = !DILocation(line: 674, column: 10, scope: !5987)
!5994 = !DILocation(line: 674, column: 33, scope: !5987)
!5995 = !DILocation(line: 674, column: 3, scope: !5987)
!5996 = distinct !DISubprogram(name: "single_pred_edge", scope: !148, file: !148, line: 653, type: !5997, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5999)
!5997 = !DISubroutineType(types: !5998)
!5998 = !{!962, !5978}
!5999 = !{!6000}
!6000 = !DILocalVariable(name: "bb", arg: 1, scope: !5996, file: !148, line: 653, type: !5978)
!6001 = !DILocation(line: 0, scope: !5996)
!6002 = !DILocation(line: 655, column: 3, scope: !5996)
!6003 = !DILocation(line: 656, column: 10, scope: !5996)
!6004 = !DILocation(line: 656, column: 3, scope: !5996)
!6005 = distinct !DISubprogram(name: "eliminate_implied_condition", scope: !3, file: !3, line: 1783, type: !6006, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6008)
!6006 = !DISubroutineType(types: !6007)
!6007 = !{null, !390, !634, !1749}
!6008 = !{!6009, !6010, !6011}
!6009 = !DILocalVariable(name: "op", arg: 1, scope: !6005, file: !3, line: 1783, type: !390)
!6010 = !DILocalVariable(name: "a", arg: 2, scope: !6005, file: !3, line: 1783, type: !634)
!6011 = !DILocalVariable(name: "b", arg: 3, scope: !6005, file: !3, line: 1783, type: !1749)
!6012 = !DILocation(line: 0, scope: !6005)
!6013 = !DILocation(line: 1785, column: 3, scope: !6005)
!6014 = !DILocation(line: 1789, column: 25, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 1789, column: 11)
!6016 = distinct !DILexicalBlock(scope: !6005, file: !3, line: 1786, column: 5)
!6017 = !DILocation(line: 1789, column: 11, scope: !6015)
!6018 = !DILocation(line: 1789, column: 11, scope: !6016)
!6019 = !DILocation(line: 1790, column: 7, scope: !6015)
!6020 = !DILocation(line: 1790, column: 5, scope: !6015)
!6021 = !DILocation(line: 1790, column: 2, scope: !6015)
!6022 = !DILocation(line: 1795, column: 22, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 1795, column: 11)
!6024 = !DILocation(line: 1795, column: 11, scope: !6023)
!6025 = !DILocation(line: 1795, column: 11, scope: !6016)
!6026 = !DILocation(line: 1796, column: 7, scope: !6023)
!6027 = !DILocation(line: 1796, column: 5, scope: !6023)
!6028 = !DILocation(line: 1796, column: 2, scope: !6023)
!6029 = !DILocation(line: 1800, column: 7, scope: !6016)
!6030 = !DILocation(line: 1801, column: 5, scope: !6016)
!6031 = !DILocation(line: 1802, column: 1, scope: !6005)
!6032 = distinct !DISubprogram(name: "simple_rhs_p", scope: !3, file: !3, line: 1328, type: !2949, scopeLine: 1329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6033)
!6033 = !{!6034, !6035, !6036}
!6034 = !DILocalVariable(name: "rhs", arg: 1, scope: !6032, file: !3, line: 1328, type: !634)
!6035 = !DILocalVariable(name: "op0", scope: !6032, file: !3, line: 1330, type: !634)
!6036 = !DILocalVariable(name: "op1", scope: !6032, file: !3, line: 1330, type: !634)
!6037 = !DILocation(line: 0, scope: !6032)
!6038 = !DILocation(line: 1332, column: 7, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 1332, column: 7)
!6040 = !DILocation(line: 1333, column: 7, scope: !6039)
!6041 = !DILocation(line: 1333, column: 11, scope: !6039)
!6042 = !DILocation(line: 1333, column: 23, scope: !6039)
!6043 = !DILocation(line: 1333, column: 27, scope: !6039)
!6044 = !DILocation(line: 1332, column: 7, scope: !6032)
!6045 = !DILocation(line: 1336, column: 11, scope: !6032)
!6046 = !DILocation(line: 1336, column: 3, scope: !6032)
!6047 = !DILocation(line: 1341, column: 13, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 1337, column: 5)
!6049 = !DILocation(line: 1342, column: 13, scope: !6048)
!6050 = !DILocation(line: 1344, column: 13, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 1344, column: 11)
!6052 = !DILocation(line: 1344, column: 25, scope: !6051)
!6053 = !DILocation(line: 1344, column: 29, scope: !6051)
!6054 = !DILocation(line: 1345, column: 4, scope: !6051)
!6055 = !DILocation(line: 1345, column: 8, scope: !6051)
!6056 = !DILocation(line: 1344, column: 11, scope: !6048)
!6057 = !DILocation(line: 1347, column: 13, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 1347, column: 11)
!6059 = !DILocation(line: 1347, column: 25, scope: !6058)
!6060 = !DILocation(line: 1347, column: 29, scope: !6058)
!6061 = !DILocation(line: 1348, column: 4, scope: !6058)
!6062 = !DILocation(line: 1348, column: 8, scope: !6058)
!6063 = !DILocation(line: 1347, column: 11, scope: !6048)
!6064 = !DILocation(line: 1351, column: 7, scope: !6048)
!6065 = !DILocation(line: 1357, column: 13, scope: !6048)
!6066 = !DILocation(line: 1358, column: 13, scope: !6048)
!6067 = !DILocation(line: 1360, column: 13, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 1360, column: 11)
!6069 = !DILocation(line: 1360, column: 25, scope: !6068)
!6070 = !DILocation(line: 1360, column: 29, scope: !6068)
!6071 = !DILocation(line: 1360, column: 11, scope: !6048)
!6072 = !DILocation(line: 1362, column: 12, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 1362, column: 11)
!6074 = !DILocation(line: 0, scope: !6048)
!6075 = !DILocation(line: 1370, column: 1, scope: !6032)
