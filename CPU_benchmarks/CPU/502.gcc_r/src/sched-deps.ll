; ModuleID = 'sched-deps.bc'
source_filename = "sched-deps.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.VEC_haifa_deps_insn_data_def_heap = type { %struct.VEC_haifa_deps_insn_data_def_base }
%struct.VEC_haifa_deps_insn_data_def_base = type { i32, i32, [1 x %struct._haifa_deps_insn_data] }
%struct._haifa_deps_insn_data = type { i32, i32, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, i8 }
%struct._deps_list = type { %struct._dep_link*, i32 }
%struct._dep_link = type { %struct._dep_node*, %struct._dep_link*, %struct._dep_link** }
%struct._dep_node = type { %struct._dep_link, %struct._dep, %struct._dep_link }
%struct._dep = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.haifa_sched_info = type { void ()*, i32 (%struct.rtx_def*)*, i32 ()*, i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8* (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8 (%struct.rtx_def*)*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, i32, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.gimple_seq_d = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.VEC_haifa_insn_data_def_heap = type { %struct.VEC_haifa_insn_data_def_base }
%struct.VEC_haifa_insn_data_def_base = type { i32, i32, [1 x %struct._haifa_insn_data] }
%struct._haifa_insn_data = type { i32, i32, i32, i32, i32, i16, i8, i8, i32, i32, i32, %struct.basic_block_def*, %struct.rtx_def*, %struct.reg_pressure_data*, i32*, %struct.reg_use_data*, %struct.reg_set_data*, i32 }
%struct.reg_pressure_data = type { i32 }
%struct.reg_use_data = type { i32, %struct.rtx_def*, %struct.reg_use_data*, %struct.reg_use_data* }
%struct.reg_set_data = type { i32, %struct.rtx_def*, %struct.reg_set_data* }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.reg_info_t = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.sched_deps_info_def = type { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)*, void (%struct.rtx_def*)*, void ()*, void (%struct.rtx_def*)*, void ()*, void (%struct.rtx_def*)*, void ()*, void (i32)*, void (i32)*, void (i32)*, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, i8 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.common_sched_info_def = type { void (i32, i32, i32)*, void (%struct.basic_block_def*, %struct.basic_block_def*)*, i32 (%struct.basic_block_def*)*, i32 (%struct.rtx_def*)*, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct.spec_info_def = type { i32, %struct._IO_FILE*, i32, i32, i32 }
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct._sd_iterator = type { i32, %struct.rtx_def*, %struct._dep_link**, i8 }
%struct.deps = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, %struct.deps_reg*, %struct.bitmap_head_def, %struct.bitmap_head_def, i32, i8 }
%struct.deps_reg = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.cselib_val_struct = type { i32, i32, %struct.rtx_def*, %struct.elt_loc_list*, %struct.elt_list*, %struct.cselib_val_struct* }
%struct.elt_loc_list = type { %struct.elt_loc_list*, %struct.rtx_def*, %struct.rtx_def* }
%struct.elt_list = type { %struct.elt_list*, %struct.cselib_val_struct* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@h_d_i_d = dso_local global %struct.VEC_haifa_deps_insn_data_def_heap* null, align 8, !dbg !0
@.str = private unnamed_addr constant [13 x i8] c"sched-deps.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@current_sched_info = external dso_local local_unnamed_addr global %struct.haifa_sched_info*, align 8
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@dn_pool_diff = internal unnamed_addr global i32 0, align 4, !dbg !1955
@dl_pool_diff = internal unnamed_addr global i32 0, align 4, !dbg !1957
@sched_luids = external dso_local local_unnamed_addr global %struct.VEC_int_heap*, align 8
@h_i_d = external dso_local local_unnamed_addr global %struct.VEC_haifa_insn_data_def_heap*, align 8
@true_dependency_cache = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !1959
@output_dependency_cache = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !1961
@anti_dependency_cache = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !1963
@spec_dependency_cache = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !1983
@reg_pending_sets = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !1941
@reg_pending_clobbers = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !1943
@reg_pending_uses = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !1945
@max_regno = external dso_local local_unnamed_addr global i32, align 4
@reg_info_p_size = external dso_local local_unnamed_addr global i64, align 8
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@reg_info_p = external dso_local local_unnamed_addr global %struct.reg_info_t*, align 8
@sched_deps_info = common dso_local local_unnamed_addr global %struct.sched_deps_info_def* null, align 8, !dbg !1877
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@reg_pending_barrier = internal unnamed_addr global i32 0, align 4, !dbg !1947
@global_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@implicit_reg_pending_uses = internal unnamed_addr global i64 0, align 8, !dbg !1951
@regs_invalidated_by_call = external dso_local local_unnamed_addr global i64, align 8
@fixed_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@reg_obstack = external dso_local global %struct.bitmap_obstack, align 8
@sched_max_luid = external dso_local local_unnamed_addr global i32, align 4
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@cache_size = internal unnamed_addr global i32 0, align 4, !dbg !1953
@.str.3 = private unnamed_addr constant [10 x i8] c"deps_list\00", align 1
@dl_pool = internal global %struct.alloc_pool_def* null, align 8, !dbg !1939
@.str.4 = private unnamed_addr constant [9 x i8] c"dep_node\00", align 1
@dn_pool = internal global %struct.alloc_pool_def* null, align 8, !dbg !1916
@implicit_reg_pending_clobbers = internal unnamed_addr global i64 0, align 8, !dbg !1949
@sched_emulate_haifa_p = external dso_local local_unnamed_addr global i32, align 4
@cur_insn = internal unnamed_addr global %struct.rtx_def* null, align 8, !dbg !2003
@.str.5 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"%d; \00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"%c; \00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c">\00", align 1
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@common_sched_info = external dso_local local_unnamed_addr global %struct.common_sched_info_def*, align 8
@sd_iterator_start.null_link = internal global %struct._dep_link* null, align 8, !dbg !1965
@.str.9 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c" \00", align 1
@ira_no_alloc_regs = external dso_local local_unnamed_addr global i64, align 8
@can_start_lhs_rhs_p = internal unnamed_addr global i8 0, align 1, !dbg !1987
@sched_pressure_p = external dso_local local_unnamed_addr global i8, align 1
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@spec_info = external dso_local local_unnamed_addr global %struct.spec_info_def*, align 8
@rtx_format = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@rtx_length = external dso_local local_unnamed_addr constant [139 x i8], align 16
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@setup_insn_reg_pressure_info.pressure_info = internal unnamed_addr global %struct.reg_pressure_data* null, align 8, !dbg !1989
@ira_reg_class_cover_size = external dso_local local_unnamed_addr global i32, align 4
@ira_reg_class_cover = external dso_local local_unnamed_addr global [27 x i32], align 16
@reg_pressure_info = internal unnamed_addr global [27 x %struct.reg_pressure_data] zeroinitializer, align 16, !dbg !1998
@sched_regno_cover_class = external dso_local local_unnamed_addr global i32*, align 8
@ira_reg_class_nregs = external dso_local local_unnamed_addr global [27 x [87 x i32]], align 16
@regno_reg_rtx = external dso_local local_unnamed_addr global %struct.rtx_def**, align 8
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.11 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"BEGIN_DATA: %d; \00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"BE_IN_DATA: %d; \00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"BEGIN_CONTROL: %d; \00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"BE_IN_CONTROL: %d; \00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"HARD_DEP; \00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"DEP_TRUE; \00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"DEP_ANTI; \00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"DEP_OUTPUT; \00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"}\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2009 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2022, metadata !DIExpression()), !dbg !2024
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2023, metadata !DIExpression()), !dbg !2024
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2025
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2026
  ret i32 %call, !dbg !2027
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2028 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2032
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2033
  ret i32 %call, !dbg !2034
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2035 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2090, metadata !DIExpression()), !dbg !2091
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2092
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2092
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2092
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2092
  %cmp = icmp uge i8* %0, %1, !dbg !2092
  %conv1 = zext i1 %cmp to i64, !dbg !2092
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2092
  %tobool = icmp eq i64 %expval, 0, !dbg !2092
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2092

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2092
  br label %cond.end, !dbg !2092

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2092
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2092
  %2 = load i8, i8* %0, align 1, !dbg !2092
  %conv3 = zext i8 %2 to i32, !dbg !2092
  br label %cond.end, !dbg !2092

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2092
  ret i32 %cond, !dbg !2093
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2094 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2096, metadata !DIExpression()), !dbg !2097
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2098
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2098
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2098
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2098
  %cmp = icmp uge i8* %0, %1, !dbg !2098
  %conv1 = zext i1 %cmp to i64, !dbg !2098
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2098
  %tobool = icmp eq i64 %expval, 0, !dbg !2098
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2098

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2098
  br label %cond.end, !dbg !2098

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2098
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2098
  %2 = load i8, i8* %0, align 1, !dbg !2098
  %conv3 = zext i8 %2 to i32, !dbg !2098
  br label %cond.end, !dbg !2098

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2098
  ret i32 %cond, !dbg !2099
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2100 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2101
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2101
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2101
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2101
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2101
  %cmp = icmp uge i8* %1, %2, !dbg !2101
  %conv1 = zext i1 %cmp to i64, !dbg !2101
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2101
  %tobool = icmp eq i64 %expval, 0, !dbg !2101
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2101

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2101
  br label %cond.end, !dbg !2101

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2101
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2101
  %3 = load i8, i8* %1, align 1, !dbg !2101
  %conv3 = zext i8 %3 to i32, !dbg !2101
  br label %cond.end, !dbg !2101

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2101
  ret i32 %cond, !dbg !2102
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2103 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2107, metadata !DIExpression()), !dbg !2108
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2109
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2110
  ret i32 %call, !dbg !2111
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2112 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2116, metadata !DIExpression()), !dbg !2118
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2117, metadata !DIExpression()), !dbg !2118
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2119
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2119
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2119
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2119
  %cmp = icmp uge i8* %0, %1, !dbg !2119
  %conv1 = zext i1 %cmp to i64, !dbg !2119
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2119
  %tobool = icmp eq i64 %expval, 0, !dbg !2119
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2119

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2119
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2119
  br label %cond.end, !dbg !2119

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2119
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2119
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2119
  store i8 %conv2, i8* %0, align 1, !dbg !2119
  %conv6 = and i32 %__c, 255, !dbg !2119
  br label %cond.end, !dbg !2119

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2119
  ret i32 %cond, !dbg !2120
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2121 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2123, metadata !DIExpression()), !dbg !2125
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2124, metadata !DIExpression()), !dbg !2125
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2126
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2126
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2126
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2126
  %cmp = icmp uge i8* %0, %1, !dbg !2126
  %conv1 = zext i1 %cmp to i64, !dbg !2126
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2126
  %tobool = icmp eq i64 %expval, 0, !dbg !2126
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2126

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2126
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2126
  br label %cond.end, !dbg !2126

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2126
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2126
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2126
  store i8 %conv2, i8* %0, align 1, !dbg !2126
  %conv6 = and i32 %__c, 255, !dbg !2126
  br label %cond.end, !dbg !2126

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2126
  ret i32 %cond, !dbg !2127
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2128 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2130, metadata !DIExpression()), !dbg !2131
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2132
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2132
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2132
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2132
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2132
  %cmp = icmp uge i8* %1, %2, !dbg !2132
  %conv1 = zext i1 %cmp to i64, !dbg !2132
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2132
  %tobool = icmp eq i64 %expval, 0, !dbg !2132
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2132

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2132
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2132
  br label %cond.end, !dbg !2132

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2132
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2132
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2132
  store i8 %conv4, i8* %1, align 1, !dbg !2132
  %conv6 = and i32 %__c, 255, !dbg !2132
  br label %cond.end, !dbg !2132

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2132
  ret i32 %cond, !dbg !2133
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2134 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2140, metadata !DIExpression()), !dbg !2143
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2141, metadata !DIExpression()), !dbg !2143
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2142, metadata !DIExpression()), !dbg !2143
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2144
  ret i64 %call, !dbg !2145
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2146 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2148, metadata !DIExpression()), !dbg !2149
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2150
  %0 = load i32, i32* %_flags, align 8, !dbg !2150
  %and = lshr i32 %0, 4, !dbg !2150
  %and.lobit = and i32 %and, 1, !dbg !2150
  ret i32 %and.lobit, !dbg !2151
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2152 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2154, metadata !DIExpression()), !dbg !2155
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2156
  %0 = load i32, i32* %_flags, align 8, !dbg !2156
  %and = lshr i32 %0, 5, !dbg !2156
  %and.lobit = and i32 %and, 1, !dbg !2156
  ret i32 %and.lobit, !dbg !2157
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2158 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2161, metadata !DIExpression()), !dbg !2162
  %__c.off = add i32 %__c, 128, !dbg !2163
  %0 = icmp ult i32 %__c.off, 384, !dbg !2163
  br i1 %0, label %cond.true, label %cond.end, !dbg !2163

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2164
  %1 = load i32*, i32** %call, align 8, !dbg !2165
  %idxprom = sext i32 %__c to i64, !dbg !2166
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2166
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2166
  br label %cond.end, !dbg !2167

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2167
  ret i32 %cond, !dbg !2168
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2169 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2171, metadata !DIExpression()), !dbg !2172
  %__c.off = add i32 %__c, 128, !dbg !2173
  %0 = icmp ult i32 %__c.off, 384, !dbg !2173
  br i1 %0, label %cond.true, label %cond.end, !dbg !2173

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2174
  %1 = load i32*, i32** %call, align 8, !dbg !2175
  %idxprom = sext i32 %__c to i64, !dbg !2176
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2176
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2176
  br label %cond.end, !dbg !2177

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2177
  ret i32 %cond, !dbg !2178
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2179 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2184, metadata !DIExpression()), !dbg !2185
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2186
  %conv = trunc i64 %call to i32, !dbg !2187
  ret i32 %conv, !dbg !2188
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2189 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2193, metadata !DIExpression()), !dbg !2194
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2195
  ret i64 %call, !dbg !2196
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2197 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2202, metadata !DIExpression()), !dbg !2203
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2204
  ret i64 %call, !dbg !2205
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2206 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2212, metadata !DIExpression()), !dbg !2222
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2213, metadata !DIExpression()), !dbg !2222
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2214, metadata !DIExpression()), !dbg !2222
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2215, metadata !DIExpression()), !dbg !2222
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2216, metadata !DIExpression()), !dbg !2222
  call void @llvm.dbg.value(metadata i64 0, metadata !2217, metadata !DIExpression()), !dbg !2222
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2218, metadata !DIExpression()), !dbg !2222
  br label %while.cond, !dbg !2223

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2224
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2222
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2218, metadata !DIExpression()), !dbg !2222
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2217, metadata !DIExpression()), !dbg !2222
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2225
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2223

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2226
  %div = lshr i64 %add, 1, !dbg !2228
  call void @llvm.dbg.value(metadata i64 %div, metadata !2219, metadata !DIExpression()), !dbg !2222
  %mul = mul i64 %div, %__size, !dbg !2229
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2230
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2220, metadata !DIExpression()), !dbg !2222
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2231
  call void @llvm.dbg.value(metadata i32 %call, metadata !2221, metadata !DIExpression()), !dbg !2222
  %cmp1 = icmp slt i32 %call, 0, !dbg !2232
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2234

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2235
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2237

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2238
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2217, metadata !DIExpression()), !dbg !2222
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2222
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2222
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2218, metadata !DIExpression()), !dbg !2222
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2217, metadata !DIExpression()), !dbg !2222
  br label %while.cond, !dbg !2223, !llvm.loop !2239

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2222
  ret i8* %retval.0, !dbg !2241
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2242 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2248, metadata !DIExpression()), !dbg !2249
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2250
  ret double %call, !dbg !2251
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2252 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2261, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2262, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i32 %base, metadata !2263, metadata !DIExpression()), !dbg !2264
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2265
  ret i64 %call, !dbg !2266
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2267 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2273, metadata !DIExpression()), !dbg !2276
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2274, metadata !DIExpression()), !dbg !2276
  call void @llvm.dbg.value(metadata i32 %base, metadata !2275, metadata !DIExpression()), !dbg !2276
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2277
  ret i64 %call, !dbg !2278
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2279 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2290, metadata !DIExpression()), !dbg !2293
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2291, metadata !DIExpression()), !dbg !2293
  call void @llvm.dbg.value(metadata i32 %base, metadata !2292, metadata !DIExpression()), !dbg !2293
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2294
  ret i64 %call, !dbg !2295
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2296 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2300, metadata !DIExpression()), !dbg !2303
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2301, metadata !DIExpression()), !dbg !2303
  call void @llvm.dbg.value(metadata i32 %base, metadata !2302, metadata !DIExpression()), !dbg !2303
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2304
  ret i64 %call, !dbg !2305
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2306 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2346, metadata !DIExpression()), !dbg !2348
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2347, metadata !DIExpression()), !dbg !2348
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2349
  ret i32 %call, !dbg !2350
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2351 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2353, metadata !DIExpression()), !dbg !2355
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2354, metadata !DIExpression()), !dbg !2355
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2356
  ret i32 %call, !dbg !2357
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2358 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2362, metadata !DIExpression()), !dbg !2364
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2363, metadata !DIExpression()), !dbg !2364
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2365
  ret i32 %call, !dbg !2366
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2367 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2371, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2372, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2373, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2374, metadata !DIExpression()), !dbg !2375
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2376
  ret i32 %call, !dbg !2377
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2378 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2382, metadata !DIExpression()), !dbg !2385
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2383, metadata !DIExpression()), !dbg !2385
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2384, metadata !DIExpression()), !dbg !2385
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2384, metadata !DIExpression(DW_OP_deref)), !dbg !2385
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2386
  ret i32 %call, !dbg !2387
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2388 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2392, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2393, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2394, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2395, metadata !DIExpression()), !dbg !2396
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2395, metadata !DIExpression(DW_OP_deref)), !dbg !2396
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2397
  ret i32 %call, !dbg !2398
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2399 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2423, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2424, metadata !DIExpression()), !dbg !2425
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2426
  ret i32 %call, !dbg !2427
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2428 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2430, metadata !DIExpression()), !dbg !2432
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2431, metadata !DIExpression()), !dbg !2432
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2433
  ret i32 %call, !dbg !2434
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2435 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2439, metadata !DIExpression()), !dbg !2441
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2440, metadata !DIExpression()), !dbg !2441
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2442
  ret i32 %call, !dbg !2443
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2444 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2448, metadata !DIExpression()), !dbg !2452
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2449, metadata !DIExpression()), !dbg !2452
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2450, metadata !DIExpression()), !dbg !2452
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2451, metadata !DIExpression()), !dbg !2452
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2453
  ret i32 %call, !dbg !2454
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @ds_to_dk(i32 %ds) local_unnamed_addr #5 !dbg !2455 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds, metadata !2459, metadata !DIExpression()), !dbg !2460
  %and = and i32 %ds, 16777216, !dbg !2461
  %tobool = icmp eq i32 %and, 0, !dbg !2461
  br i1 %tobool, label %if.end, label %return, !dbg !2463

if.end:                                           ; preds = %entry
  %and1 = and i32 %ds, 33554432, !dbg !2464
  %tobool2 = icmp eq i32 %and1, 0, !dbg !2464
  br i1 %tobool2, label %if.end4, label %return, !dbg !2466

if.end4:                                          ; preds = %if.end
  %and5 = and i32 %ds, 67108864, !dbg !2467
  %tobool6 = icmp eq i32 %and5, 0, !dbg !2467
  br i1 %tobool6, label %cond.true, label %return, !dbg !2467

cond.true:                                        ; preds = %if.end4
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2467
  br label %return, !dbg !2467

return:                                           ; preds = %if.end4, %if.end, %entry, %cond.true
  %retval.0 = phi i32 [ 0, %entry ], [ 11, %if.end ], [ 12, %if.end4 ], [ 12, %cond.true ], !dbg !2460
  ret i32 %retval.0, !dbg !2468
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @dk_to_ds(i32 %dk) local_unnamed_addr #5 !dbg !2469 {
entry:
  call void @llvm.dbg.value(metadata i32 %dk, metadata !2473, metadata !DIExpression()), !dbg !2474
  switch i32 %dk, label %cond.true [
    i32 0, label %return
    i32 11, label %sw.bb1
    i32 12, label %cond.end
  ], !dbg !2475

sw.bb1:                                           ; preds = %entry
  br label %return, !dbg !2476

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2478
  br label %cond.end, !dbg !2478

cond.end:                                         ; preds = %entry, %cond.true
  br label %return, !dbg !2479

return:                                           ; preds = %entry, %cond.end, %sw.bb1
  %retval.0 = phi i32 [ 67108864, %cond.end ], [ 33554432, %sw.bb1 ], [ 16777216, %entry ], !dbg !2480
  ret i32 %retval.0, !dbg !2481
}

; Function Attrs: nounwind uwtable
define dso_local void @init_dep_1(%struct._dep* %dep, %struct.rtx_def* %pro, %struct.rtx_def* %con, i32 %type, i32 %ds) local_unnamed_addr #5 !dbg !2482 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !2489, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pro, metadata !2490, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata %struct.rtx_def* %con, metadata !2491, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %type, metadata !2492, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %ds, metadata !2493, metadata !DIExpression()), !dbg !2494
  %pro1 = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 0, !dbg !2495
  store %struct.rtx_def* %pro, %struct.rtx_def** %pro1, align 8, !dbg !2496
  %con2 = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 1, !dbg !2497
  store %struct.rtx_def* %con, %struct.rtx_def** %con2, align 8, !dbg !2498
  %type3 = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 2, !dbg !2499
  store i32 %type, i32* %type3, align 8, !dbg !2500
  %status = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 3, !dbg !2501
  store i32 %ds, i32* %status, align 4, !dbg !2502
  ret void, !dbg !2503
}

; Function Attrs: nounwind uwtable
define dso_local void @init_dep(%struct._dep* %dep, %struct.rtx_def* %pro, %struct.rtx_def* %con, i32 %kind) local_unnamed_addr #5 !dbg !2504 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !2508, metadata !DIExpression()), !dbg !2513
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pro, metadata !2509, metadata !DIExpression()), !dbg !2513
  call void @llvm.dbg.value(metadata %struct.rtx_def* %con, metadata !2510, metadata !DIExpression()), !dbg !2513
  call void @llvm.dbg.value(metadata i32 %kind, metadata !2511, metadata !DIExpression()), !dbg !2513
  %0 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !2514
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %0, i64 0, i32 17, !dbg !2516
  %1 = load i32, i32* %flags, align 8, !dbg !2516
  %and = and i32 %1, 1, !dbg !2517
  %tobool = icmp eq i32 %and, 0, !dbg !2517
  br i1 %tobool, label %if.end, label %if.then, !dbg !2518

if.then:                                          ; preds = %entry
  %call = tail call i32 @dk_to_ds(i32 %kind) #7, !dbg !2519
  call void @llvm.dbg.value(metadata i32 %call, metadata !2512, metadata !DIExpression()), !dbg !2513
  br label %if.end, !dbg !2520

if.end:                                           ; preds = %entry, %if.then
  %ds.0 = phi i32 [ %call, %if.then ], [ -1, %entry ], !dbg !2521
  call void @llvm.dbg.value(metadata i32 %ds.0, metadata !2512, metadata !DIExpression()), !dbg !2513
  tail call void @init_dep_1(%struct._dep* %dep, %struct.rtx_def* %pro, %struct.rtx_def* %con, i32 %kind, i32 %ds.0) #7, !dbg !2522
  ret void, !dbg !2523
}

; Function Attrs: nounwind uwtable
define dso_local void @sd_debug_dep(%struct._dep* %dep) local_unnamed_addr #5 !dbg !2524 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !2528, metadata !DIExpression()), !dbg !2529
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2530
  tail call fastcc void @dump_dep(%struct._IO_FILE* %0, %struct._dep* %dep, i32 1) #7, !dbg !2531
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2532
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2533
  ret void, !dbg !2534
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_dep(%struct._IO_FILE* %dump, %struct._dep* %dep, i32 %flags) unnamed_addr #5 !dbg !2535 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %dump, metadata !2539, metadata !DIExpression()), !dbg !2546
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !2540, metadata !DIExpression()), !dbg !2546
  call void @llvm.dbg.value(metadata i32 %flags, metadata !2541, metadata !DIExpression()), !dbg !2546
  %and = and i32 %flags, 1, !dbg !2547
  %tobool = icmp eq i32 %and, 0, !dbg !2547
  %or = or i32 %flags, 30, !dbg !2549
  %spec.select = select i1 %tobool, i32 %flags, i32 %or, !dbg !2550
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2541, metadata !DIExpression()), !dbg !2546
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2551
  %and1 = and i32 %spec.select, 2, !dbg !2552
  %tobool2 = icmp eq i32 %and1, 0, !dbg !2552
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !2554

if.then3:                                         ; preds = %entry
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 0, !dbg !2555
  %0 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !2555
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2555
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2555
  %1 = load i32, i32* %rt_int, align 8, !dbg !2555
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 %1) #6, !dbg !2556
  br label %if.end5, !dbg !2556

if.end5:                                          ; preds = %entry, %if.then3
  %and6 = and i32 %spec.select, 4, !dbg !2557
  %tobool7 = icmp eq i32 %and6, 0, !dbg !2557
  br i1 %tobool7, label %if.end14, label %if.then8, !dbg !2559

if.then8:                                         ; preds = %if.end5
  %con = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 1, !dbg !2560
  %2 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !2560
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2560
  %rt_int12 = bitcast %union.rtunion_def* %arrayidx11 to i32*, !dbg !2560
  %3 = load i32, i32* %rt_int12, align 8, !dbg !2560
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 %3) #6, !dbg !2561
  br label %if.end14, !dbg !2561

if.end14:                                         ; preds = %if.end5, %if.then8
  %and15 = and i32 %spec.select, 8, !dbg !2562
  %tobool16 = icmp eq i32 %and15, 0, !dbg !2562
  br i1 %tobool16, label %if.end22, label %if.then17, !dbg !2563

if.then17:                                        ; preds = %if.end14
  %type18 = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 2, !dbg !2564
  %4 = load i32, i32* %type18, align 8, !dbg !2564
  call void @llvm.dbg.value(metadata i32 %4, metadata !2545, metadata !DIExpression()), !dbg !2565
  switch i32 %4, label %sw.default [
    i32 0, label %sw.epilog
    i32 11, label %sw.bb19
    i32 12, label %sw.bb20
  ], !dbg !2566

sw.bb19:                                          ; preds = %if.then17
  call void @llvm.dbg.value(metadata i8 111, metadata !2542, metadata !DIExpression()), !dbg !2565
  br label %sw.epilog, !dbg !2567

sw.bb20:                                          ; preds = %if.then17
  call void @llvm.dbg.value(metadata i8 97, metadata !2542, metadata !DIExpression()), !dbg !2565
  br label %sw.epilog, !dbg !2569

sw.default:                                       ; preds = %if.then17
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 188, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2570
  br label %sw.epilog, !dbg !2571

sw.epilog:                                        ; preds = %if.then17, %sw.default, %sw.bb20, %sw.bb19
  %t.0 = phi i32 [ 0, %sw.default ], [ 97, %sw.bb20 ], [ 111, %sw.bb19 ], [ 116, %if.then17 ]
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i32 %t.0) #6, !dbg !2572
  br label %if.end22, !dbg !2573

if.end22:                                         ; preds = %if.end14, %sw.epilog
  %and23 = and i32 %spec.select, 16, !dbg !2574
  %tobool24 = icmp eq i32 %and23, 0, !dbg !2574
  br i1 %tobool24, label %if.end31, label %if.then25, !dbg !2576

if.then25:                                        ; preds = %if.end22
  %5 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !2577
  %flags26 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %5, i64 0, i32 17, !dbg !2580
  %6 = load i32, i32* %flags26, align 8, !dbg !2580
  %and27 = and i32 %6, 1, !dbg !2581
  %tobool28 = icmp eq i32 %and27, 0, !dbg !2581
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !2582

if.then29:                                        ; preds = %if.then25
  %status = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 3, !dbg !2583
  %7 = load i32, i32* %status, align 4, !dbg !2583
  tail call fastcc void @dump_ds(%struct._IO_FILE* %dump, i32 %7) #7, !dbg !2584
  br label %if.end31, !dbg !2584

if.end31:                                         ; preds = %if.then25, %if.end22, %if.then29
  %call32 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2585
  ret void, !dbg !2586
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @deps_pools_are_empty_p() local_unnamed_addr #5 !dbg !2587 {
entry:
  %0 = load i32, i32* @dn_pool_diff, align 4, !dbg !2590
  %1 = load i32, i32* @dl_pool_diff, align 4, !dbg !2591
  %2 = or i32 %0, %1, !dbg !2591
  %3 = icmp eq i32 %2, 0, !dbg !2591
  %conv = zext i1 %3 to i8, !dbg !2590
  ret i8 %conv, !dbg !2592
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn1, %struct.rtx_def* %insn2) local_unnamed_addr #5 !dbg !2593 {
entry:
  %rev1 = alloca i8, align 1
  %rev2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn1, metadata !2597, metadata !DIExpression()), !dbg !2603
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn2, metadata !2598, metadata !DIExpression()), !dbg !2603
  call void @llvm.dbg.value(metadata i8* %rev1, metadata !2601, metadata !DIExpression(DW_OP_deref)), !dbg !2603
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %rev1) #8, !dbg !2604
  call void @llvm.dbg.value(metadata i8 0, metadata !2601, metadata !DIExpression()), !dbg !2603
  store i8 0, i8* %rev1, align 1, !dbg !2605
  call void @llvm.dbg.value(metadata i8* %rev2, metadata !2602, metadata !DIExpression(DW_OP_deref)), !dbg !2603
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %rev2) #8, !dbg !2604
  call void @llvm.dbg.value(metadata i8 0, metadata !2602, metadata !DIExpression()), !dbg !2603
  store i8 0, i8* %rev2, align 1, !dbg !2606
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn1, i64 0, i32 0, !dbg !2607
  %bf.load = load i32, i32* %0, align 8, !dbg !2607
  %bf.clear = and i32 %bf.load, 65535, !dbg !2607
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !2607
  br i1 %cmp, label %if.end17, label %land.lhs.true, !dbg !2609

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn2, i64 0, i32 0, !dbg !2610
  %bf.load1 = load i32, i32* %1, align 8, !dbg !2610
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2610
  %cmp3 = icmp eq i32 %bf.clear2, 10, !dbg !2610
  br i1 %cmp3, label %if.end17, label %if.then, !dbg !2611

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i8* %rev1, metadata !2601, metadata !DIExpression(DW_OP_deref)), !dbg !2603
  %call = call fastcc %struct.rtx_def* @sched_get_condition_with_rev(%struct.rtx_def* %insn1, i8* nonnull %rev1) #7, !dbg !2612
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2599, metadata !DIExpression()), !dbg !2603
  call void @llvm.dbg.value(metadata i8* %rev2, metadata !2602, metadata !DIExpression(DW_OP_deref)), !dbg !2603
  %call4 = call fastcc %struct.rtx_def* @sched_get_condition_with_rev(%struct.rtx_def* %insn2, i8* nonnull %rev2) #7, !dbg !2614
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !2600, metadata !DIExpression()), !dbg !2603
  %tobool = icmp ne %struct.rtx_def* %call, null, !dbg !2615
  %tobool6 = icmp ne %struct.rtx_def* %call4, null, !dbg !2617
  %or.cond = and i1 %tobool, %tobool6, !dbg !2618
  br i1 %or.cond, label %land.lhs.true7, label %if.end17, !dbg !2618

land.lhs.true7:                                   ; preds = %if.then
  %2 = load i8, i8* %rev1, align 1, !dbg !2619
  call void @llvm.dbg.value(metadata i8 %2, metadata !2601, metadata !DIExpression()), !dbg !2603
  %3 = load i8, i8* %rev2, align 1, !dbg !2620
  call void @llvm.dbg.value(metadata i8 %3, metadata !2602, metadata !DIExpression()), !dbg !2603
  %call8 = call fastcc i32 @conditions_mutex_p(%struct.rtx_def* nonnull %call, %struct.rtx_def* nonnull %call4, i8 zeroext %2, i8 zeroext %3) #7, !dbg !2621
  %tobool9 = icmp eq i32 %call8, 0, !dbg !2621
  br i1 %tobool9, label %if.end17, label %land.lhs.true10, !dbg !2622

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %call11 = call i32 @modified_in_p(%struct.rtx_def* nonnull %call, %struct.rtx_def* %insn2) #6, !dbg !2623
  %tobool12 = icmp eq i32 %call11, 0, !dbg !2623
  br i1 %tobool12, label %land.lhs.true13, label %if.end17, !dbg !2624

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %call14 = call i32 @modified_in_p(%struct.rtx_def* nonnull %call4, %struct.rtx_def* %insn1) #6, !dbg !2625
  %tobool15 = icmp eq i32 %call14, 0, !dbg !2625
  br i1 %tobool15, label %cleanup, label %if.end17, !dbg !2626

if.end17:                                         ; preds = %land.lhs.true13, %land.lhs.true10, %land.lhs.true7, %if.then, %land.lhs.true, %entry
  br label %cleanup, !dbg !2627

cleanup:                                          ; preds = %land.lhs.true13, %if.end17
  %retval.0 = phi i8 [ 0, %if.end17 ], [ 1, %land.lhs.true13 ], !dbg !2603
  call void @llvm.dbg.value(metadata i8* %rev2, metadata !2602, metadata !DIExpression(DW_OP_deref)), !dbg !2603
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %rev2) #8, !dbg !2628
  call void @llvm.dbg.value(metadata i8* %rev1, metadata !2601, metadata !DIExpression(DW_OP_deref)), !dbg !2603
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %rev1) #8, !dbg !2628
  ret i8 %retval.0, !dbg !2628
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @sched_get_condition_with_rev(%struct.rtx_def* %insn, i8* %rev) unnamed_addr #5 !dbg !2629 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2633, metadata !DIExpression()), !dbg !2642
  call void @llvm.dbg.value(metadata i8* %rev, metadata !2634, metadata !DIExpression()), !dbg !2642
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !2643
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !2643
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !2643
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2643
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !2635, metadata !DIExpression()), !dbg !2642
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !2644
  br i1 %cmp, label %cleanup50, label %if.end, !dbg !2646

if.end:                                           ; preds = %entry
  %tobool = icmp eq i8* %rev, null, !dbg !2647
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !2649

if.then1:                                         ; preds = %if.end
  store i8 0, i8* %rev, align 1, !dbg !2650
  br label %if.end2, !dbg !2651

if.end2:                                          ; preds = %if.end, %if.then1
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !2652
  %bf.load = load i32, i32* %2, align 8, !dbg !2652
  %bf.clear = and i32 %bf.load, 65535, !dbg !2652
  %cmp3 = icmp eq i32 %bf.clear, 14, !dbg !2654
  br i1 %cmp3, label %if.then4, label %if.end9, !dbg !2655

if.then4:                                         ; preds = %if.end2
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2656
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !2656
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !2656
  br label %cleanup50, !dbg !2657

if.end9:                                          ; preds = %if.end2
  %call = tail call i32 @any_condjump_p(%struct.rtx_def* %insn) #6, !dbg !2658
  %tobool10 = icmp eq i32 %call, 0, !dbg !2658
  br i1 %tobool10, label %cleanup50, label %lor.lhs.false, !dbg !2660

lor.lhs.false:                                    ; preds = %if.end9
  %call11 = tail call i32 @onlyjump_p(%struct.rtx_def* %insn) #6, !dbg !2661
  %tobool12 = icmp eq i32 %call11, 0, !dbg !2661
  br i1 %tobool12, label %cleanup50, label %if.end14, !dbg !2662

if.end14:                                         ; preds = %lor.lhs.false
  %call15 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %insn) #6, !dbg !2663
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call15, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2663
  %rt_rtx19 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !2663
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !2663
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !2636, metadata !DIExpression()), !dbg !2642
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2664
  %rt_rtx23 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !2664
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !2664
  %8 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !2665
  %cmp24 = icmp eq %struct.rtx_def* %7, %8, !dbg !2666
  br i1 %cmp24, label %if.then25, label %if.else, !dbg !2667

if.then25:                                        ; preds = %if.end14
  %arrayidx28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2668
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !2668
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !2668
  br label %cleanup50, !dbg !2669

if.else:                                          ; preds = %if.end14
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2670
  %rt_rtx33 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !2670
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !2670
  %cmp34 = icmp eq %struct.rtx_def* %11, %8, !dbg !2671
  br i1 %cmp34, label %if.then35, label %cleanup50, !dbg !2672

if.then35:                                        ; preds = %if.else
  %arrayidx38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2673
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !2673
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !2673
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !2637, metadata !DIExpression()), !dbg !2674
  %call40 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %12, %struct.rtx_def* %insn) #6, !dbg !2675
  call void @llvm.dbg.value(metadata i32 %call40, metadata !2641, metadata !DIExpression()), !dbg !2674
  %cmp41 = icmp eq i32 %call40, 0, !dbg !2676
  br i1 %cmp41, label %cleanup50, label %if.end43, !dbg !2678

if.end43:                                         ; preds = %if.then35
  br i1 %tobool, label %cleanup50, label %if.then45, !dbg !2679

if.then45:                                        ; preds = %if.end43
  store i8 1, i8* %rev, align 1, !dbg !2680
  br label %cleanup50, !dbg !2682

cleanup50:                                        ; preds = %if.end43, %lor.lhs.false, %if.end9, %if.else, %if.then35, %if.then45, %entry, %if.then25, %if.then4
  %retval.1 = phi %struct.rtx_def* [ %3, %if.then4 ], [ %9, %if.then25 ], [ null, %entry ], [ null, %lor.lhs.false ], [ null, %if.end9 ], [ null, %if.then35 ], [ %12, %if.then45 ], [ %12, %if.end43 ], [ null, %if.else ], !dbg !2642
  ret %struct.rtx_def* %retval.1, !dbg !2683
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @conditions_mutex_p(%struct.rtx_def* %cond1, %struct.rtx_def* %cond2, i8 zeroext %rev1, i8 zeroext %rev2) unnamed_addr #5 !dbg !2684 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond1, metadata !2688, metadata !DIExpression()), !dbg !2692
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond2, metadata !2689, metadata !DIExpression()), !dbg !2692
  call void @llvm.dbg.value(metadata i8 %rev1, metadata !2690, metadata !DIExpression()), !dbg !2692
  call void @llvm.dbg.value(metadata i8 %rev2, metadata !2691, metadata !DIExpression()), !dbg !2692
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond1, i64 0, i32 0, !dbg !2693
  %bf.load = load i32, i32* %0, align 8, !dbg !2693
  %bf.clear = and i32 %bf.load, 65535, !dbg !2693
  %idxprom = zext i32 %bf.clear to i64, !dbg !2693
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !2693
  %1 = load i32, i32* %arrayidx, align 4, !dbg !2693
  %cmp = icmp ult i32 %1, 2, !dbg !2693
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2695

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond2, i64 0, i32 0, !dbg !2696
  %bf.load1 = load i32, i32* %2, align 8, !dbg !2696
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2696
  %idxprom3 = zext i32 %bf.clear2 to i64, !dbg !2696
  %arrayidx4 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom3, !dbg !2696
  %3 = load i32, i32* %arrayidx4, align 4, !dbg !2696
  %cmp6 = icmp ult i32 %3, 2, !dbg !2696
  br i1 %cmp6, label %land.lhs.true7, label %if.end, !dbg !2697

land.lhs.true7:                                   ; preds = %land.lhs.true
  %cmp11 = icmp eq i8 %rev1, %rev2, !dbg !2698
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !2699

cond.true:                                        ; preds = %land.lhs.true7
  %call = tail call i32 @reversed_comparison_code(%struct.rtx_def* %cond2, %struct.rtx_def* null) #6, !dbg !2700
  br label %cond.end, !dbg !2699

cond.false:                                       ; preds = %land.lhs.true7
  br label %cond.end, !dbg !2699

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear2, %cond.false ], !dbg !2699
  %cmp15 = icmp eq i32 %bf.clear, %cond, !dbg !2701
  br i1 %cmp15, label %land.lhs.true17, label %if.end, !dbg !2702

land.lhs.true17:                                  ; preds = %cond.end
  %arrayidx18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2703
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !2703
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2703
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2704
  %rt_rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !2704
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !2704
  %cmp23 = icmp eq %struct.rtx_def* %4, %5, !dbg !2705
  br i1 %cmp23, label %land.lhs.true25, label %if.end, !dbg !2706

land.lhs.true25:                                  ; preds = %land.lhs.true17
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2707
  %rt_rtx29 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !2707
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !2707
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2708
  %rt_rtx33 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !2708
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !2708
  %cmp34 = icmp eq %struct.rtx_def* %7, %9, !dbg !2709
  br i1 %cmp34, label %return, label %if.end, !dbg !2710

if.end:                                           ; preds = %land.lhs.true25, %land.lhs.true17, %cond.end, %land.lhs.true, %entry
  br label %return, !dbg !2711

return:                                           ; preds = %land.lhs.true25, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ 1, %land.lhs.true25 ], !dbg !2692
  ret i32 %retval.0, !dbg !2712
}

declare dso_local i32 @modified_in_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sched_insn_is_legitimate_for_speculation_p(%struct.rtx_def* %insn, i32 %ds) local_unnamed_addr #5 !dbg !2713 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2717, metadata !DIExpression()), !dbg !2719
  call void @llvm.dbg.value(metadata i32 %ds, metadata !2718, metadata !DIExpression()), !dbg !2719
  %0 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2720
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %0, i64 0, i32 0, !dbg !2720
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2720
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !2720
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2720
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2720
  %2 = load i32, i32* %rt_int, align 8, !dbg !2720
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #7, !dbg !2720
  %call7 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base, i32 %call) #7, !dbg !2720
  %has_internal_dep = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call7, i64 0, i32 1, !dbg !2720
  %3 = load i32, i32* %has_internal_dep, align 4, !dbg !2720
  %tobool8 = icmp eq i32 %3, 0, !dbg !2720
  br i1 %tobool8, label %if.end, label %return, !dbg !2722

if.end:                                           ; preds = %entry
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !2723
  %bf.load = load i32, i32* %4, align 8, !dbg !2723
  %bf.clear = and i32 %bf.load, 65535, !dbg !2723
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !2723
  br i1 %cmp, label %if.end10, label %return, !dbg !2725

if.end10:                                         ; preds = %if.end
  %bf.clear12 = and i32 %bf.load, 268435456, !dbg !2726
  %tobool13 = icmp eq i32 %bf.clear12, 0, !dbg !2726
  br i1 %tobool13, label %if.end15, label %return, !dbg !2728

if.end15:                                         ; preds = %if.end10
  %call16 = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !2729
  %tobool17 = icmp eq i8 %call16, 0, !dbg !2729
  br i1 %tobool17, label %cond.false22, label %cond.true18, !dbg !2731

cond.true18:                                      ; preds = %if.end15
  %call19 = tail call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %insn) #6, !dbg !2729
  %tobool21 = icmp eq i8 %call19, 0, !dbg !2729
  br i1 %tobool21, label %if.end37, label %return, !dbg !2729

cond.false22:                                     ; preds = %if.end15
  %5 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !2729
  %base25 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %5, i64 0, i32 0, !dbg !2729
  %6 = load i32, i32* %rt_int, align 8, !dbg !2729
  %call33 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base25, i32 %6) #7, !dbg !2729
  %recovery_block = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call33, i64 0, i32 11, !dbg !2729
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !2729
  %cmp34 = icmp eq %struct.basic_block_def* %7, null, !dbg !2729
  br i1 %cmp34, label %if.end37, label %return, !dbg !2731

if.end37:                                         ; preds = %cond.true18, %cond.false22
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !2732
  %8 = getelementptr inbounds %union.u, %union.u* %u38, i64 1, i32 0, i32 0, i64 0, !dbg !2732
  %rt_rtx = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !2732
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2732
  %call41 = tail call i32 @side_effects_p(%struct.rtx_def* %9) #6, !dbg !2734
  %tobool42 = icmp eq i32 %call41, 0, !dbg !2734
  br i1 %tobool42, label %if.end44, label %return, !dbg !2735

if.end44:                                         ; preds = %if.end37
  %and = and i32 %ds, 16519104, !dbg !2736
  %tobool45 = icmp eq i32 %and, 0, !dbg !2736
  br i1 %tobool45, label %if.end62, label %if.then46, !dbg !2738

if.then46:                                        ; preds = %if.end44
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2739
  %call51 = tail call i32 @may_trap_p(%struct.rtx_def* %10) #6, !dbg !2742
  %tobool52 = icmp eq i32 %call51, 0, !dbg !2742
  br i1 %tobool52, label %if.end54, label %return, !dbg !2743

if.end54:                                         ; preds = %if.then46
  %and55 = and i32 %ds, 4032, !dbg !2744
  %tobool56 = icmp eq i32 %and55, 0, !dbg !2744
  br i1 %tobool56, label %if.end62, label %land.lhs.true, !dbg !2746

land.lhs.true:                                    ; preds = %if.end54
  %call57 = tail call fastcc zeroext i8 @sched_has_condition_p(%struct.rtx_def* %insn) #7, !dbg !2747
  %tobool59 = icmp eq i8 %call57, 0, !dbg !2747
  br i1 %tobool59, label %if.end62, label %return, !dbg !2748

if.end62:                                         ; preds = %land.lhs.true, %if.end54, %if.end44
  br label %return, !dbg !2749

return:                                           ; preds = %cond.true18, %land.lhs.true, %if.then46, %if.end37, %cond.false22, %if.end10, %entry, %if.end, %if.end62
  %retval.0 = phi i8 [ 1, %if.end62 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end10 ], [ 0, %cond.false22 ], [ 0, %cond.true18 ], [ 0, %if.end37 ], [ 0, %if.then46 ], [ 0, %land.lhs.true ], !dbg !2719
  ret i8 %retval.0, !dbg !2750
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2751 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_deps_insn_data_def_base* %vec_, metadata !2757, metadata !DIExpression()), !dbg !2759
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2758, metadata !DIExpression()), !dbg !2759
  br label %land.end, !dbg !2760

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2760
  %arrayidx = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2760
  ret %struct._haifa_deps_insn_data* %arrayidx, !dbg !2760
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2761 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !2774, metadata !DIExpression()), !dbg !2776
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2775, metadata !DIExpression()), !dbg !2776
  br label %land.end, !dbg !2777

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2777
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2777
  %0 = load i32, i32* %arrayidx, align 4, !dbg !2777
  ret i32 %0, !dbg !2777
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sel_sched_p() unnamed_addr #0 !dbg !2778 {
entry:
  %0 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !2779
  %sched_pass_id = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %0, i64 0, i32 4, !dbg !2780
  %1 = load i32, i32* %sched_pass_id, align 8, !dbg !2780
  %cmp = icmp eq i32 %1, 4, !dbg !2781
  %conv1 = zext i1 %cmp to i8, !dbg !2779
  ret i8 %conv1, !dbg !2782
}

declare dso_local zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2783 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_insn_data_def_base* %vec_, metadata !2819, metadata !DIExpression()), !dbg !2821
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2820, metadata !DIExpression()), !dbg !2821
  br label %land.end, !dbg !2822

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2822
  %arrayidx = getelementptr inbounds %struct.VEC_haifa_insn_data_def_base, %struct.VEC_haifa_insn_data_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2822
  ret %struct._haifa_insn_data* %arrayidx, !dbg !2822
}

declare dso_local i32 @side_effects_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @may_trap_p(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @sched_has_condition_p(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !2823 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2827, metadata !DIExpression()), !dbg !2828
  %call = tail call fastcc %struct.rtx_def* @sched_get_condition_with_rev(%struct.rtx_def* %insn, i8* null) #7, !dbg !2829
  %tobool = icmp ne %struct.rtx_def* %call, null, !dbg !2830
  %conv = zext i1 %tobool to i8, !dbg !2831
  ret i8 %conv, !dbg !2832
}

; Function Attrs: nounwind uwtable
define dso_local void @sd_next_list(%struct.rtx_def* %insn, i32* %types_ptr, %struct._deps_list** %list_ptr, i8* %resolved_p_ptr) local_unnamed_addr #5 !dbg !2833 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2839, metadata !DIExpression()), !dbg !2844
  call void @llvm.dbg.value(metadata i32* %types_ptr, metadata !2840, metadata !DIExpression()), !dbg !2844
  call void @llvm.dbg.value(metadata %struct._deps_list** %list_ptr, metadata !2841, metadata !DIExpression()), !dbg !2844
  call void @llvm.dbg.value(metadata i8* %resolved_p_ptr, metadata !2842, metadata !DIExpression()), !dbg !2844
  %0 = load i32, i32* %types_ptr, align 4, !dbg !2845
  call void @llvm.dbg.value(metadata i32 %0, metadata !2843, metadata !DIExpression()), !dbg !2844
  %and = and i32 %0, 1, !dbg !2846
  %tobool = icmp eq i32 %and, 0, !dbg !2846
  br i1 %tobool, label %if.else, label %if.then, !dbg !2848

if.then:                                          ; preds = %entry
  %1 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2849
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %1, i64 0, i32 0, !dbg !2849
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2849
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %2, i64 0, i32 0, !dbg !2849
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2849
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2849
  %3 = load i32, i32* %rt_int, align 8, !dbg !2849
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base4, i32 %3) #7, !dbg !2849
  %call8 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base, i32 %call) #7, !dbg !2849
  %hard_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call8, i64 0, i32 2, !dbg !2849
  %4 = bitcast %struct._deps_list** %hard_back_deps to i64*, !dbg !2849
  %5 = load i64, i64* %4, align 8, !dbg !2849
  %6 = bitcast %struct._deps_list** %list_ptr to i64*, !dbg !2851
  store i64 %5, i64* %6, align 8, !dbg !2851
  store i8 0, i8* %resolved_p_ptr, align 1, !dbg !2852
  %and9 = and i32 %0, -2, !dbg !2853
  store i32 %and9, i32* %types_ptr, align 4, !dbg !2854
  br label %if.end105, !dbg !2855

if.else:                                          ; preds = %entry
  %and10 = and i32 %0, 2, !dbg !2856
  %tobool11 = icmp eq i32 %and10, 0, !dbg !2856
  br i1 %tobool11, label %if.else32, label %if.then12, !dbg !2858

if.then12:                                        ; preds = %if.else
  %7 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2859
  %base15 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %7, i64 0, i32 0, !dbg !2859
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2859
  %base21 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i64 0, i32 0, !dbg !2859
  %arrayidx27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2859
  %rt_int28 = bitcast %union.rtunion_def* %arrayidx27 to i32*, !dbg !2859
  %9 = load i32, i32* %rt_int28, align 8, !dbg !2859
  %call29 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base21, i32 %9) #7, !dbg !2859
  %call30 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base15, i32 %call29) #7, !dbg !2859
  %spec_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call30, i64 0, i32 3, !dbg !2859
  %10 = bitcast %struct._deps_list** %spec_back_deps to i64*, !dbg !2859
  %11 = load i64, i64* %10, align 8, !dbg !2859
  %12 = bitcast %struct._deps_list** %list_ptr to i64*, !dbg !2861
  store i64 %11, i64* %12, align 8, !dbg !2861
  store i8 0, i8* %resolved_p_ptr, align 1, !dbg !2862
  %and31 = and i32 %0, -3, !dbg !2863
  store i32 %and31, i32* %types_ptr, align 4, !dbg !2864
  br label %if.end105, !dbg !2865

if.else32:                                        ; preds = %if.else
  %and33 = and i32 %0, 4, !dbg !2866
  %tobool34 = icmp eq i32 %and33, 0, !dbg !2866
  br i1 %tobool34, label %if.else55, label %if.then35, !dbg !2868

if.then35:                                        ; preds = %if.else32
  %13 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2869
  %base38 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %13, i64 0, i32 0, !dbg !2869
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2869
  %base44 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i64 0, i32 0, !dbg !2869
  %arrayidx50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2869
  %rt_int51 = bitcast %union.rtunion_def* %arrayidx50 to i32*, !dbg !2869
  %15 = load i32, i32* %rt_int51, align 8, !dbg !2869
  %call52 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base44, i32 %15) #7, !dbg !2869
  %call53 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base38, i32 %call52) #7, !dbg !2869
  %forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call53, i64 0, i32 4, !dbg !2869
  %16 = bitcast %struct._deps_list** %forw_deps to i64*, !dbg !2869
  %17 = load i64, i64* %16, align 8, !dbg !2869
  %18 = bitcast %struct._deps_list** %list_ptr to i64*, !dbg !2871
  store i64 %17, i64* %18, align 8, !dbg !2871
  store i8 0, i8* %resolved_p_ptr, align 1, !dbg !2872
  %and54 = and i32 %0, -5, !dbg !2873
  store i32 %and54, i32* %types_ptr, align 4, !dbg !2874
  br label %if.end105, !dbg !2875

if.else55:                                        ; preds = %if.else32
  %and56 = and i32 %0, 8, !dbg !2876
  %tobool57 = icmp eq i32 %and56, 0, !dbg !2876
  br i1 %tobool57, label %if.else78, label %if.then58, !dbg !2878

if.then58:                                        ; preds = %if.else55
  %19 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2879
  %base61 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %19, i64 0, i32 0, !dbg !2879
  %20 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2879
  %base67 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %20, i64 0, i32 0, !dbg !2879
  %arrayidx73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2879
  %rt_int74 = bitcast %union.rtunion_def* %arrayidx73 to i32*, !dbg !2879
  %21 = load i32, i32* %rt_int74, align 8, !dbg !2879
  %call75 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base67, i32 %21) #7, !dbg !2879
  %call76 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base61, i32 %call75) #7, !dbg !2879
  %resolved_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call76, i64 0, i32 5, !dbg !2879
  %22 = bitcast %struct._deps_list** %resolved_back_deps to i64*, !dbg !2879
  %23 = load i64, i64* %22, align 8, !dbg !2879
  %24 = bitcast %struct._deps_list** %list_ptr to i64*, !dbg !2881
  store i64 %23, i64* %24, align 8, !dbg !2881
  store i8 1, i8* %resolved_p_ptr, align 1, !dbg !2882
  %and77 = and i32 %0, -9, !dbg !2883
  store i32 %and77, i32* %types_ptr, align 4, !dbg !2884
  br label %if.end105, !dbg !2885

if.else78:                                        ; preds = %if.else55
  %and79 = and i32 %0, 16, !dbg !2886
  %tobool80 = icmp eq i32 %and79, 0, !dbg !2886
  br i1 %tobool80, label %if.else101, label %if.then81, !dbg !2888

if.then81:                                        ; preds = %if.else78
  %25 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2889
  %base84 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %25, i64 0, i32 0, !dbg !2889
  %26 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2889
  %base90 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %26, i64 0, i32 0, !dbg !2889
  %arrayidx96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2889
  %rt_int97 = bitcast %union.rtunion_def* %arrayidx96 to i32*, !dbg !2889
  %27 = load i32, i32* %rt_int97, align 8, !dbg !2889
  %call98 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base90, i32 %27) #7, !dbg !2889
  %call99 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base84, i32 %call98) #7, !dbg !2889
  %resolved_forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call99, i64 0, i32 6, !dbg !2889
  %28 = bitcast %struct._deps_list** %resolved_forw_deps to i64*, !dbg !2889
  %29 = load i64, i64* %28, align 8, !dbg !2889
  %30 = bitcast %struct._deps_list** %list_ptr to i64*, !dbg !2891
  store i64 %29, i64* %30, align 8, !dbg !2891
  store i8 1, i8* %resolved_p_ptr, align 1, !dbg !2892
  %and100 = and i32 %0, -17, !dbg !2893
  store i32 %and100, i32* %types_ptr, align 4, !dbg !2894
  br label %if.end105, !dbg !2895

if.else101:                                       ; preds = %if.else78
  store %struct._deps_list* null, %struct._deps_list** %list_ptr, align 8, !dbg !2896
  store i8 0, i8* %resolved_p_ptr, align 1, !dbg !2898
  store i32 0, i32* %types_ptr, align 4, !dbg !2899
  br label %if.end105

if.end105:                                        ; preds = %if.then12, %if.then58, %if.else101, %if.then81, %if.then35, %if.then
  ret void, !dbg !2900
}

; Function Attrs: nounwind uwtable
define dso_local i32 @sd_lists_size(%struct.rtx_def* %insn, i32 %list_types) local_unnamed_addr #5 !dbg !2901 {
entry:
  %list_types.addr = alloca i32, align 4
  %list = alloca %struct._deps_list*, align 8
  %resolved_p = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2905, metadata !DIExpression()), !dbg !2911
  call void @llvm.dbg.value(metadata i32 %list_types, metadata !2906, metadata !DIExpression()), !dbg !2911
  store i32 %list_types, i32* %list_types.addr, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !2907, metadata !DIExpression()), !dbg !2911
  %0 = bitcast %struct._deps_list** %list to i8*, !dbg !2912
  br label %while.cond, !dbg !2913

while.cond:                                       ; preds = %if.end, %entry
  %1 = phi i32 [ %list_types, %entry ], [ %.pre, %if.end ], !dbg !2914
  %size.0 = phi i32 [ 0, %entry ], [ %size.1, %if.end ], !dbg !2911
  call void @llvm.dbg.value(metadata i32 %size.0, metadata !2907, metadata !DIExpression()), !dbg !2911
  call void @llvm.dbg.value(metadata i32 %1, metadata !2906, metadata !DIExpression()), !dbg !2911
  %cmp = icmp eq i32 %1, 0, !dbg !2915
  br i1 %cmp, label %while.end, label %while.body, !dbg !2913

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2916
  call void @llvm.dbg.value(metadata i8* %resolved_p, metadata !2910, metadata !DIExpression(DW_OP_deref)), !dbg !2912
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %resolved_p) #8, !dbg !2917
  call void @llvm.dbg.value(metadata i32* %list_types.addr, metadata !2906, metadata !DIExpression(DW_OP_deref)), !dbg !2911
  call void @llvm.dbg.value(metadata %struct._deps_list** %list, metadata !2908, metadata !DIExpression(DW_OP_deref)), !dbg !2912
  call void @llvm.dbg.value(metadata i8* %resolved_p, metadata !2910, metadata !DIExpression(DW_OP_deref)), !dbg !2912
  call void @sd_next_list(%struct.rtx_def* %insn, i32* nonnull %list_types.addr, %struct._deps_list** nonnull %list, i8* nonnull %resolved_p) #7, !dbg !2918
  %2 = load %struct._deps_list*, %struct._deps_list** %list, align 8, !dbg !2919
  call void @llvm.dbg.value(metadata %struct._deps_list* %2, metadata !2908, metadata !DIExpression()), !dbg !2912
  %tobool = icmp eq %struct._deps_list* %2, null, !dbg !2919
  br i1 %tobool, label %if.end, label %if.then, !dbg !2921

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.value(metadata %struct._deps_list* %2, metadata !2908, metadata !DIExpression()), !dbg !2912
  %n_links = getelementptr inbounds %struct._deps_list, %struct._deps_list* %2, i64 0, i32 1, !dbg !2922
  %3 = load i32, i32* %n_links, align 8, !dbg !2922
  %add = add nsw i32 %size.0, %3, !dbg !2923
  call void @llvm.dbg.value(metadata i32 %add, metadata !2907, metadata !DIExpression()), !dbg !2911
  br label %if.end, !dbg !2924

if.end:                                           ; preds = %while.body, %if.then
  %size.1 = phi i32 [ %add, %if.then ], [ %size.0, %while.body ], !dbg !2911
  call void @llvm.dbg.value(metadata i32 %size.1, metadata !2907, metadata !DIExpression()), !dbg !2911
  call void @llvm.dbg.value(metadata i8* %resolved_p, metadata !2910, metadata !DIExpression(DW_OP_deref)), !dbg !2912
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %resolved_p) #8, !dbg !2925
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2925
  %.pre = load i32, i32* %list_types.addr, align 4, !dbg !2914
  br label %while.cond, !dbg !2913, !llvm.loop !2926

while.end:                                        ; preds = %while.cond
  %size.0.lcssa = phi i32 [ %size.0, %while.cond ], !dbg !2911
  call void @llvm.dbg.value(metadata i32 %size.0.lcssa, metadata !2907, metadata !DIExpression()), !dbg !2911
  call void @llvm.dbg.value(metadata i32 %size.0.lcssa, metadata !2907, metadata !DIExpression()), !dbg !2911
  call void @llvm.dbg.value(metadata i32 %size.0.lcssa, metadata !2907, metadata !DIExpression()), !dbg !2911
  ret i32 %size.0.lcssa, !dbg !2927
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sd_lists_empty_p(%struct.rtx_def* %insn, i32 %list_types) local_unnamed_addr #5 !dbg !2928 {
entry:
  %list_types.addr = alloca i32, align 4
  %list = alloca %struct._deps_list*, align 8
  %resolved_p = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2932, metadata !DIExpression()), !dbg !2937
  call void @llvm.dbg.value(metadata i32 %list_types, metadata !2933, metadata !DIExpression()), !dbg !2937
  store i32 %list_types, i32* %list_types.addr, align 4
  %0 = bitcast %struct._deps_list** %list to i8*, !dbg !2938
  br label %while.cond, !dbg !2939

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %entry
  %1 = phi i32 [ %.pre, %while.body.while.cond_crit_edge ], [ %list_types, %entry ], !dbg !2940
  call void @llvm.dbg.value(metadata i32 %1, metadata !2933, metadata !DIExpression()), !dbg !2937
  %cmp = icmp eq i32 %1, 0, !dbg !2941
  br i1 %cmp, label %return, label %while.body, !dbg !2939

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2938
  call void @llvm.dbg.value(metadata i8* %resolved_p, metadata !2936, metadata !DIExpression(DW_OP_deref)), !dbg !2942
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %resolved_p) #8, !dbg !2943
  call void @llvm.dbg.value(metadata i32* %list_types.addr, metadata !2933, metadata !DIExpression(DW_OP_deref)), !dbg !2937
  call void @llvm.dbg.value(metadata %struct._deps_list** %list, metadata !2934, metadata !DIExpression(DW_OP_deref)), !dbg !2942
  call void @llvm.dbg.value(metadata i8* %resolved_p, metadata !2936, metadata !DIExpression(DW_OP_deref)), !dbg !2942
  call void @sd_next_list(%struct.rtx_def* %insn, i32* nonnull %list_types.addr, %struct._deps_list** nonnull %list, i8* nonnull %resolved_p) #7, !dbg !2944
  %2 = load %struct._deps_list*, %struct._deps_list** %list, align 8, !dbg !2945
  call void @llvm.dbg.value(metadata %struct._deps_list* %2, metadata !2934, metadata !DIExpression()), !dbg !2942
  %call = call fastcc zeroext i8 @deps_list_empty_p(%struct._deps_list* %2) #7, !dbg !2947
  %tobool = icmp eq i8 %call, 0, !dbg !2947
  call void @llvm.dbg.value(metadata i8* %resolved_p, metadata !2936, metadata !DIExpression(DW_OP_deref)), !dbg !2942
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %resolved_p) #8, !dbg !2948
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2948
  br i1 %tobool, label %return, label %while.body.while.cond_crit_edge

while.body.while.cond_crit_edge:                  ; preds = %while.body
  %.pre = load i32, i32* %list_types.addr, align 4, !dbg !2940
  br label %while.cond

return:                                           ; preds = %while.body, %while.cond
  %retval.2 = phi i8 [ 0, %while.body ], [ 1, %while.cond ]
  ret i8 %retval.2, !dbg !2949
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @deps_list_empty_p(%struct._deps_list* %l) unnamed_addr #5 !dbg !2950 {
entry:
  call void @llvm.dbg.value(metadata %struct._deps_list* %l, metadata !2954, metadata !DIExpression()), !dbg !2955
  %n_links = getelementptr inbounds %struct._deps_list, %struct._deps_list* %l, i64 0, i32 1, !dbg !2956
  %0 = load i32, i32* %n_links, align 8, !dbg !2956
  %cmp = icmp eq i32 %0, 0, !dbg !2957
  %conv1 = zext i1 %cmp to i8, !dbg !2956
  ret i8 %conv1, !dbg !2958
}

; Function Attrs: nounwind uwtable
define dso_local void @sd_init_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !2959 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2961, metadata !DIExpression()), !dbg !2962
  %call = tail call fastcc %struct._deps_list* @create_deps_list() #7, !dbg !2963
  %0 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2964
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %0, i64 0, i32 0, !dbg !2964
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2964
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !2964
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2964
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2964
  %2 = load i32, i32* %rt_int, align 8, !dbg !2964
  %call7 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #7, !dbg !2964
  %call8 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base, i32 %call7) #7, !dbg !2964
  %hard_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call8, i64 0, i32 2, !dbg !2964
  store %struct._deps_list* %call, %struct._deps_list** %hard_back_deps, align 8, !dbg !2965
  %call9 = tail call fastcc %struct._deps_list* @create_deps_list() #7, !dbg !2966
  %3 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2967
  %base12 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %3, i64 0, i32 0, !dbg !2967
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2967
  %base18 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !2967
  %5 = load i32, i32* %rt_int, align 8, !dbg !2967
  %call26 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base18, i32 %5) #7, !dbg !2967
  %call27 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base12, i32 %call26) #7, !dbg !2967
  %spec_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call27, i64 0, i32 3, !dbg !2967
  store %struct._deps_list* %call9, %struct._deps_list** %spec_back_deps, align 8, !dbg !2968
  %call28 = tail call fastcc %struct._deps_list* @create_deps_list() #7, !dbg !2969
  %6 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2970
  %base31 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %6, i64 0, i32 0, !dbg !2970
  %7 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2970
  %base37 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %7, i64 0, i32 0, !dbg !2970
  %8 = load i32, i32* %rt_int, align 8, !dbg !2970
  %call45 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base37, i32 %8) #7, !dbg !2970
  %call46 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base31, i32 %call45) #7, !dbg !2970
  %resolved_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call46, i64 0, i32 5, !dbg !2970
  store %struct._deps_list* %call28, %struct._deps_list** %resolved_back_deps, align 8, !dbg !2971
  %call47 = tail call fastcc %struct._deps_list* @create_deps_list() #7, !dbg !2972
  %9 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2973
  %base50 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %9, i64 0, i32 0, !dbg !2973
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2973
  %base56 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !2973
  %11 = load i32, i32* %rt_int, align 8, !dbg !2973
  %call64 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base56, i32 %11) #7, !dbg !2973
  %call65 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base50, i32 %call64) #7, !dbg !2973
  %forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call65, i64 0, i32 4, !dbg !2973
  store %struct._deps_list* %call47, %struct._deps_list** %forw_deps, align 8, !dbg !2974
  %call66 = tail call fastcc %struct._deps_list* @create_deps_list() #7, !dbg !2975
  %12 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2976
  %base69 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %12, i64 0, i32 0, !dbg !2976
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2976
  %base75 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i64 0, i32 0, !dbg !2976
  %14 = load i32, i32* %rt_int, align 8, !dbg !2976
  %call83 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base75, i32 %14) #7, !dbg !2976
  %call84 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base69, i32 %call83) #7, !dbg !2976
  %resolved_forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call84, i64 0, i32 6, !dbg !2976
  store %struct._deps_list* %call66, %struct._deps_list** %resolved_forw_deps, align 8, !dbg !2977
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !2978
  %bf.load = load i32, i32* %15, align 8, !dbg !2978
  %bf.clear = and i32 %bf.load, 65535, !dbg !2978
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !2978
  br i1 %cmp, label %if.then, label %if.end, !dbg !2980

if.then:                                          ; preds = %entry
  %bf.set = or i32 %bf.load, 67108864, !dbg !2981
  store i32 %bf.set, i32* %15, align 8, !dbg !2981
  br label %if.end, !dbg !2982

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2983
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._deps_list* @create_deps_list() unnamed_addr #5 !dbg !2984 {
entry:
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @dl_pool, align 8, !dbg !2989
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %0) #6, !dbg !2990
  %1 = bitcast i8* %call to %struct._deps_list*, !dbg !2991
  call void @llvm.dbg.value(metadata %struct._deps_list* %1, metadata !2988, metadata !DIExpression()), !dbg !2992
  %first = bitcast i8* %call to %struct._dep_link**, !dbg !2993
  store %struct._dep_link* null, %struct._dep_link** %first, align 8, !dbg !2994
  %n_links = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2995
  %2 = bitcast i8* %n_links to i32*, !dbg !2995
  store i32 0, i32* %2, align 8, !dbg !2996
  %3 = load i32, i32* @dl_pool_diff, align 4, !dbg !2997
  %inc = add nsw i32 %3, 1, !dbg !2997
  store i32 %inc, i32* @dl_pool_diff, align 4, !dbg !2997
  ret %struct._deps_list* %1, !dbg !2998
}

; Function Attrs: nounwind uwtable
define dso_local void @sd_finish_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !2999 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3001, metadata !DIExpression()), !dbg !3002
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3003
  %bf.load = load i32, i32* %0, align 8, !dbg !3003
  %bf.clear = and i32 %bf.load, 65535, !dbg !3003
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !3003
  br i1 %cmp, label %if.then, label %if.end, !dbg !3005

if.then:                                          ; preds = %entry
  %bf.clear2 = and i32 %bf.load, 67108864, !dbg !3006
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !3006
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3006

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 727, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3006
  %bf.load3.pre = load i32, i32* %0, align 8, !dbg !3008
  br label %cond.end, !dbg !3006

cond.end:                                         ; preds = %if.then, %cond.true
  %bf.load3 = phi i32 [ %bf.load, %if.then ], [ %bf.load3.pre, %cond.true ], !dbg !3008
  %bf.clear4 = and i32 %bf.load3, -67108865, !dbg !3008
  store i32 %bf.clear4, i32* %0, align 8, !dbg !3008
  br label %if.end, !dbg !3009

if.end:                                           ; preds = %cond.end, %entry
  %1 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3010
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %1, i64 0, i32 0, !dbg !3010
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3010
  %base12 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %2, i64 0, i32 0, !dbg !3010
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3010
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3010
  %3 = load i32, i32* %rt_int, align 8, !dbg !3010
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base12, i32 %3) #7, !dbg !3010
  %call16 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base, i32 %call) #7, !dbg !3010
  %hard_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call16, i64 0, i32 2, !dbg !3010
  %4 = load %struct._deps_list*, %struct._deps_list** %hard_back_deps, align 8, !dbg !3010
  tail call fastcc void @free_deps_list(%struct._deps_list* %4) #7, !dbg !3011
  %5 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3012
  %base19 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %5, i64 0, i32 0, !dbg !3012
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3012
  %base25 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !3012
  %7 = load i32, i32* %rt_int, align 8, !dbg !3012
  %call33 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base25, i32 %7) #7, !dbg !3012
  %call34 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base19, i32 %call33) #7, !dbg !3012
  %hard_back_deps35 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call34, i64 0, i32 2, !dbg !3012
  store %struct._deps_list* null, %struct._deps_list** %hard_back_deps35, align 8, !dbg !3013
  %8 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3014
  %base38 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %8, i64 0, i32 0, !dbg !3014
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3014
  %base44 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %9, i64 0, i32 0, !dbg !3014
  %10 = load i32, i32* %rt_int, align 8, !dbg !3014
  %call52 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base44, i32 %10) #7, !dbg !3014
  %call53 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base38, i32 %call52) #7, !dbg !3014
  %spec_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call53, i64 0, i32 3, !dbg !3014
  %11 = load %struct._deps_list*, %struct._deps_list** %spec_back_deps, align 8, !dbg !3014
  tail call fastcc void @free_deps_list(%struct._deps_list* %11) #7, !dbg !3015
  %12 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3016
  %base56 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %12, i64 0, i32 0, !dbg !3016
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3016
  %base62 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i64 0, i32 0, !dbg !3016
  %14 = load i32, i32* %rt_int, align 8, !dbg !3016
  %call70 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base62, i32 %14) #7, !dbg !3016
  %call71 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base56, i32 %call70) #7, !dbg !3016
  %spec_back_deps72 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call71, i64 0, i32 3, !dbg !3016
  store %struct._deps_list* null, %struct._deps_list** %spec_back_deps72, align 8, !dbg !3017
  %15 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3018
  %base75 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %15, i64 0, i32 0, !dbg !3018
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3018
  %base81 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i64 0, i32 0, !dbg !3018
  %17 = load i32, i32* %rt_int, align 8, !dbg !3018
  %call89 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base81, i32 %17) #7, !dbg !3018
  %call90 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base75, i32 %call89) #7, !dbg !3018
  %resolved_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call90, i64 0, i32 5, !dbg !3018
  %18 = load %struct._deps_list*, %struct._deps_list** %resolved_back_deps, align 8, !dbg !3018
  tail call fastcc void @free_deps_list(%struct._deps_list* %18) #7, !dbg !3019
  %19 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3020
  %base93 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %19, i64 0, i32 0, !dbg !3020
  %20 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3020
  %base99 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %20, i64 0, i32 0, !dbg !3020
  %21 = load i32, i32* %rt_int, align 8, !dbg !3020
  %call107 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base99, i32 %21) #7, !dbg !3020
  %call108 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base93, i32 %call107) #7, !dbg !3020
  %resolved_back_deps109 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call108, i64 0, i32 5, !dbg !3020
  store %struct._deps_list* null, %struct._deps_list** %resolved_back_deps109, align 8, !dbg !3021
  %22 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3022
  %base112 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %22, i64 0, i32 0, !dbg !3022
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3022
  %base118 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i64 0, i32 0, !dbg !3022
  %24 = load i32, i32* %rt_int, align 8, !dbg !3022
  %call126 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base118, i32 %24) #7, !dbg !3022
  %call127 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base112, i32 %call126) #7, !dbg !3022
  %forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call127, i64 0, i32 4, !dbg !3022
  %25 = load %struct._deps_list*, %struct._deps_list** %forw_deps, align 8, !dbg !3022
  tail call fastcc void @free_deps_list(%struct._deps_list* %25) #7, !dbg !3023
  %26 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3024
  %base130 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %26, i64 0, i32 0, !dbg !3024
  %27 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3024
  %base136 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %27, i64 0, i32 0, !dbg !3024
  %28 = load i32, i32* %rt_int, align 8, !dbg !3024
  %call144 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base136, i32 %28) #7, !dbg !3024
  %call145 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base130, i32 %call144) #7, !dbg !3024
  %forw_deps146 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call145, i64 0, i32 4, !dbg !3024
  store %struct._deps_list* null, %struct._deps_list** %forw_deps146, align 8, !dbg !3025
  %29 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3026
  %base149 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %29, i64 0, i32 0, !dbg !3026
  %30 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3026
  %base155 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %30, i64 0, i32 0, !dbg !3026
  %31 = load i32, i32* %rt_int, align 8, !dbg !3026
  %call163 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base155, i32 %31) #7, !dbg !3026
  %call164 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base149, i32 %call163) #7, !dbg !3026
  %resolved_forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call164, i64 0, i32 6, !dbg !3026
  %32 = load %struct._deps_list*, %struct._deps_list** %resolved_forw_deps, align 8, !dbg !3026
  tail call fastcc void @free_deps_list(%struct._deps_list* %32) #7, !dbg !3027
  %33 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3028
  %base167 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %33, i64 0, i32 0, !dbg !3028
  %34 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3028
  %base173 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %34, i64 0, i32 0, !dbg !3028
  %35 = load i32, i32* %rt_int, align 8, !dbg !3028
  %call181 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base173, i32 %35) #7, !dbg !3028
  %call182 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base167, i32 %call181) #7, !dbg !3028
  %resolved_forw_deps183 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call182, i64 0, i32 6, !dbg !3028
  store %struct._deps_list* null, %struct._deps_list** %resolved_forw_deps183, align 8, !dbg !3029
  ret void, !dbg !3030
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_deps_list(%struct._deps_list* %l) unnamed_addr #5 !dbg !3031 {
entry:
  call void @llvm.dbg.value(metadata %struct._deps_list* %l, metadata !3035, metadata !DIExpression()), !dbg !3036
  %call = tail call fastcc zeroext i8 @deps_list_empty_p(%struct._deps_list* %l) #7, !dbg !3037
  %tobool = icmp eq i8 %call, 0, !dbg !3037
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3037

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3037
  br label %cond.end, !dbg !3037

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load i32, i32* @dl_pool_diff, align 4, !dbg !3038
  %dec = add nsw i32 %0, -1, !dbg !3038
  store i32 %dec, i32* @dl_pool_diff, align 4, !dbg !3038
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @dl_pool, align 8, !dbg !3039
  %2 = bitcast %struct._deps_list* %l to i8*, !dbg !3040
  tail call void @pool_free(%struct.alloc_pool_def* %1, i8* %2) #6, !dbg !3041
  ret void, !dbg !3042
}

; Function Attrs: nounwind uwtable
define dso_local %struct._dep* @sd_find_dep_between(%struct.rtx_def* %pro, %struct.rtx_def* %con, i8 zeroext %resolved_p) local_unnamed_addr #5 !dbg !3043 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pro, metadata !3047, metadata !DIExpression()), !dbg !3054
  call void @llvm.dbg.value(metadata %struct.rtx_def* %con, metadata !3048, metadata !DIExpression()), !dbg !3054
  call void @llvm.dbg.value(metadata i8 %resolved_p, metadata !3049, metadata !DIExpression()), !dbg !3054
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3055
  %cmp = icmp eq %struct.bitmap_head_def* %0, null, !dbg !3056
  br i1 %cmp, label %if.end33, label %if.then, !dbg !3057

if.then:                                          ; preds = %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3058
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !3058
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pro, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3058
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3058
  %2 = load i32, i32* %rt_int, align 8, !dbg !3058
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %2) #7, !dbg !3058
  call void @llvm.dbg.value(metadata i32 %call, metadata !3050, metadata !DIExpression()), !dbg !3059
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3060
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i64 0, i32 0, !dbg !3060
  %arrayidx9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %con, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3060
  %rt_int10 = bitcast %union.rtunion_def* %arrayidx9 to i32*, !dbg !3060
  %4 = load i32, i32* %rt_int10, align 8, !dbg !3060
  %call11 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %4) #7, !dbg !3060
  call void @llvm.dbg.value(metadata i32 %call11, metadata !3053, metadata !DIExpression()), !dbg !3059
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !3061
  %cmp12 = icmp ne %struct.bitmap_head_def* %5, null, !dbg !3061
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !3061
  %cmp13 = icmp ne %struct.bitmap_head_def* %6, null, !dbg !3061
  %or.cond = and i1 %cmp12, %cmp13, !dbg !3061
  br i1 %or.cond, label %cond.end16, label %cond.true14, !dbg !3061

cond.true14:                                      ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 822, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3061
  br label %cond.end16, !dbg !3061

cond.end16:                                       ; preds = %if.then, %cond.true14
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3062
  %idxprom = sext i32 %call11 to i64, !dbg !3062
  %arrayidx18 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %7, i64 %idxprom, !dbg !3062
  %call19 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx18, i32 %call) #6, !dbg !3064
  %tobool20 = icmp eq i32 %call19, 0, !dbg !3064
  br i1 %tobool20, label %land.lhs.true21, label %if.end, !dbg !3065

land.lhs.true21:                                  ; preds = %cond.end16
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !3066
  %arrayidx23 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %8, i64 %idxprom, !dbg !3066
  %call24 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx23, i32 %call) #6, !dbg !3067
  %tobool25 = icmp eq i32 %call24, 0, !dbg !3067
  br i1 %tobool25, label %land.lhs.true26, label %if.end, !dbg !3068

land.lhs.true26:                                  ; preds = %land.lhs.true21
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !3069
  %arrayidx28 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %9, i64 %idxprom, !dbg !3069
  %call29 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx28, i32 %call) #6, !dbg !3070
  %tobool30 = icmp eq i32 %call29, 0, !dbg !3070
  br i1 %tobool30, label %cleanup, label %if.end, !dbg !3071

if.end:                                           ; preds = %land.lhs.true26, %land.lhs.true21, %cond.end16
  br label %cleanup, !dbg !3072

cleanup:                                          ; preds = %land.lhs.true26, %if.end
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %land.lhs.true26 ]
  br i1 %cleanup.dest.slot.0, label %if.end33, label %return

if.end33:                                         ; preds = %entry, %cleanup
  %call34 = tail call fastcc %struct._dep* @sd_find_dep_between_no_cache(%struct.rtx_def* %pro, %struct.rtx_def* %con, i8 zeroext %resolved_p, %struct._sd_iterator* null) #7, !dbg !3073
  br label %return, !dbg !3074

return:                                           ; preds = %cleanup, %if.end33
  %retval.1 = phi %struct._dep* [ null, %cleanup ], [ %call34, %if.end33 ]
  ret %struct._dep* %retval.1, !dbg !3075
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct._dep* @sd_find_dep_between_no_cache(%struct.rtx_def* %pro, %struct.rtx_def* %con, i8 zeroext %resolved_p, %struct._sd_iterator* %sd_it_ptr) unnamed_addr #5 !dbg !3076 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  %tmp10 = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pro, metadata !3081, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %con, metadata !3082, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i8 %resolved_p, metadata !3083, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it_ptr, metadata !3084, metadata !DIExpression()), !dbg !3090
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !3091
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3091
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !3092
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3092
  call void @llvm.dbg.value(metadata i8 0, metadata !3089, metadata !DIExpression()), !dbg !3090
  %tobool = icmp ne i8 %resolved_p, 0, !dbg !3093
  %. = select i1 %tobool, i32 16, i32 4
  %.1 = select i1 %tobool, i32 8, i32 3
  call void @llvm.dbg.value(metadata i32 %.1, metadata !3086, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i32 %., metadata !3085, metadata !DIExpression()), !dbg !3090
  %call = tail call i32 @sd_lists_size(%struct.rtx_def* %con, i32 %.1) #7, !dbg !3095
  %call1 = tail call i32 @sd_lists_size(%struct.rtx_def* %pro, i32 %.) #7, !dbg !3097
  %cmp = icmp slt i32 %call, %call1, !dbg !3098
  br i1 %cmp, label %if.then2, label %if.else9, !dbg !3099

if.then2:                                         ; preds = %entry
  %2 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !3100
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !3100
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %con, i32 %.1) #7, !dbg !3100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 32, i1 false), !dbg !3100
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !3100
  br label %for.cond, !dbg !3100

for.cond:                                         ; preds = %for.inc, %if.then2
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !3087, metadata !DIExpression(DW_OP_deref)), !dbg !3090
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !3088, metadata !DIExpression(DW_OP_deref)), !dbg !3090
  %call3 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !3103
  %tobool4 = icmp eq i8 %call3, 0, !dbg !3100
  br i1 %tobool4, label %if.end21.loopexit, label %for.body, !dbg !3100

for.body:                                         ; preds = %for.cond
  %3 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3105
  call void @llvm.dbg.value(metadata %struct._dep* %3, metadata !3088, metadata !DIExpression()), !dbg !3090
  %pro5 = getelementptr inbounds %struct._dep, %struct._dep* %3, i64 0, i32 0, !dbg !3105
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pro5, align 8, !dbg !3105
  %cmp6 = icmp eq %struct.rtx_def* %4, %pro, !dbg !3107
  br i1 %cmp6, label %if.end21.loopexit, label %for.inc, !dbg !3108

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !3087, metadata !DIExpression(DW_OP_deref)), !dbg !3090
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !3103
  br label %for.cond, !dbg !3103, !llvm.loop !3109

if.else9:                                         ; preds = %entry
  %5 = bitcast %struct._sd_iterator* %tmp10 to i8*, !dbg !3111
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8, !dbg !3111
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp10, %struct.rtx_def* %pro, i32 %.) #7, !dbg !3111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %5, i64 32, i1 false), !dbg !3111
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8, !dbg !3111
  br label %for.cond11, !dbg !3111

for.cond11:                                       ; preds = %for.inc19, %if.else9
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !3087, metadata !DIExpression(DW_OP_deref)), !dbg !3090
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !3088, metadata !DIExpression(DW_OP_deref)), !dbg !3090
  %call12 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !3114
  %tobool13 = icmp eq i8 %call12, 0, !dbg !3111
  br i1 %tobool13, label %if.end21.loopexit2, label %for.body14, !dbg !3111

for.body14:                                       ; preds = %for.cond11
  %6 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3116
  call void @llvm.dbg.value(metadata %struct._dep* %6, metadata !3088, metadata !DIExpression()), !dbg !3090
  %con15 = getelementptr inbounds %struct._dep, %struct._dep* %6, i64 0, i32 1, !dbg !3116
  %7 = load %struct.rtx_def*, %struct.rtx_def** %con15, align 8, !dbg !3116
  %cmp16 = icmp eq %struct.rtx_def* %7, %con, !dbg !3118
  br i1 %cmp16, label %if.end21.loopexit2, label %for.inc19, !dbg !3119

for.inc19:                                        ; preds = %for.body14
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !3087, metadata !DIExpression(DW_OP_deref)), !dbg !3090
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !3114
  br label %for.cond11, !dbg !3114, !llvm.loop !3120

if.end21.loopexit:                                ; preds = %for.body, %for.cond
  %found_p.2.ph = phi i1 [ true, %for.body ], [ false, %for.cond ]
  br label %if.end21, !dbg !3122

if.end21.loopexit2:                               ; preds = %for.body14, %for.cond11
  %found_p.2.ph3 = phi i1 [ true, %for.body14 ], [ false, %for.cond11 ]
  br label %if.end21, !dbg !3122

if.end21:                                         ; preds = %if.end21.loopexit2, %if.end21.loopexit
  %found_p.2 = phi i1 [ %found_p.2.ph, %if.end21.loopexit ], [ %found_p.2.ph3, %if.end21.loopexit2 ]
  br i1 %found_p.2, label %if.then23, label %cleanup, !dbg !3122

if.then23:                                        ; preds = %if.end21
  %cmp24 = icmp eq %struct._sd_iterator* %sd_it_ptr, null, !dbg !3123
  br i1 %cmp24, label %if.end26, label %if.then25, !dbg !3127

if.then25:                                        ; preds = %if.then23
  %8 = bitcast %struct._sd_iterator* %sd_it_ptr to i8*, !dbg !3128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %0, i64 32, i1 false), !dbg !3128
  br label %if.end26, !dbg !3129

if.end26:                                         ; preds = %if.then23, %if.then25
  %9 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3130
  call void @llvm.dbg.value(metadata %struct._dep* %9, metadata !3088, metadata !DIExpression()), !dbg !3090
  br label %cleanup, !dbg !3131

cleanup:                                          ; preds = %if.end21, %if.end26
  %retval.0 = phi %struct._dep* [ %9, %if.end26 ], [ null, %if.end21 ], !dbg !3090
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3132
  ret %struct._dep* %retval.0, !dbg !3132
}

; Function Attrs: nounwind uwtable
define dso_local void @sd_add_dep(%struct._dep* %dep, i8 zeroext %resolved_p) local_unnamed_addr #5 !dbg !3133 {
entry:
  %con_back_deps = alloca %struct._deps_list*, align 8
  %pro_forw_deps = alloca %struct._deps_list*, align 8
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !3137, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.value(metadata i8 %resolved_p, metadata !3138, metadata !DIExpression()), !dbg !3144
  %call = tail call fastcc %struct._dep_node* @create_dep_node() #7, !dbg !3145
  call void @llvm.dbg.value(metadata %struct._dep_node* %call, metadata !3139, metadata !DIExpression()), !dbg !3144
  %0 = bitcast %struct._deps_list** %con_back_deps to i8*, !dbg !3146
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3146
  %1 = bitcast %struct._deps_list** %pro_forw_deps to i8*, !dbg !3147
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3147
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 0, !dbg !3148
  %2 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !3148
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3142, metadata !DIExpression()), !dbg !3144
  %con = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 1, !dbg !3149
  %3 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3149
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3143, metadata !DIExpression()), !dbg !3144
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !3150
  %bf.load = load i32, i32* %4, align 8, !dbg !3150
  %bf.clear = and i32 %bf.load, 65535, !dbg !3150
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3150
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !3150

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3150
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !3150

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3150
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !3150

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3150
  br i1 %cmp11, label %land.lhs.true, label %cond.true, !dbg !3150

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !3150
  %bf.load12 = load i32, i32* %5, align 8, !dbg !3150
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3150
  %cmp14 = icmp eq i32 %bf.clear13, 8, !dbg !3150
  br i1 %cmp14, label %land.lhs.true27, label %lor.lhs.false15, !dbg !3150

lor.lhs.false15:                                  ; preds = %land.lhs.true
  %cmp18 = icmp eq i32 %bf.clear13, 7, !dbg !3150
  br i1 %cmp18, label %land.lhs.true27, label %lor.lhs.false19, !dbg !3150

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %cmp22 = icmp eq i32 %bf.clear13, 9, !dbg !3150
  br i1 %cmp22, label %land.lhs.true27, label %lor.lhs.false23, !dbg !3150

lor.lhs.false23:                                  ; preds = %lor.lhs.false19
  %cmp26 = icmp eq i32 %bf.clear13, 10, !dbg !3150
  %cmp28 = icmp ne %struct.rtx_def* %3, %2, !dbg !3150
  %or.cond = and i1 %cmp26, %cmp28, !dbg !3150
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !3150

land.lhs.true27:                                  ; preds = %lor.lhs.false19, %lor.lhs.false15, %land.lhs.true
  %cmp28.old = icmp eq %struct.rtx_def* %3, %2, !dbg !3150
  br i1 %cmp28.old, label %cond.true, label %cond.end, !dbg !3150

cond.true:                                        ; preds = %land.lhs.true27, %lor.lhs.false23, %lor.lhs.false8
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1229, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3150
  br label %cond.end, !dbg !3150

cond.end:                                         ; preds = %land.lhs.true27, %lor.lhs.false23, %cond.true
  %6 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3151
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %6, i64 0, i32 17, !dbg !3153
  %7 = load i32, i32* %flags, align 8, !dbg !3153
  %and = and i32 %7, 2, !dbg !3154
  %tobool = icmp eq i32 %and, 0, !dbg !3154
  br i1 %tobool, label %if.end, label %land.lhs.true29, !dbg !3155

land.lhs.true29:                                  ; preds = %cond.end
  %status = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 3, !dbg !3156
  %8 = load i32, i32* %status, align 4, !dbg !3156
  %call30 = tail call zeroext i8 @sched_insn_is_legitimate_for_speculation_p(%struct.rtx_def* %3, i32 %8) #7, !dbg !3157
  %tobool31 = icmp eq i8 %call30, 0, !dbg !3157
  br i1 %tobool31, label %if.then, label %if.end, !dbg !3158

if.then:                                          ; preds = %land.lhs.true29
  %9 = load i32, i32* %status, align 4, !dbg !3159
  %and33 = and i32 %9, -16777216, !dbg !3159
  store i32 %and33, i32* %status, align 4, !dbg !3159
  br label %if.end, !dbg !3160

if.end:                                           ; preds = %land.lhs.true29, %cond.end, %if.then
  %dep34 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %call, i64 0, i32 1, !dbg !3161
  tail call fastcc void @copy_dep(%struct._dep* nonnull %dep34, %struct._dep* %dep) #7, !dbg !3162
  call void @llvm.dbg.value(metadata %struct._deps_list** %con_back_deps, metadata !3140, metadata !DIExpression(DW_OP_deref)), !dbg !3144
  call void @llvm.dbg.value(metadata %struct._deps_list** %pro_forw_deps, metadata !3141, metadata !DIExpression(DW_OP_deref)), !dbg !3144
  call fastcc void @get_back_and_forw_lists(%struct._dep* %dep, i8 zeroext %resolved_p, %struct._deps_list** nonnull %con_back_deps, %struct._deps_list** nonnull %pro_forw_deps) #7, !dbg !3163
  %back = getelementptr inbounds %struct._dep_node, %struct._dep_node* %call, i64 0, i32 0, !dbg !3164
  %10 = load %struct._deps_list*, %struct._deps_list** %con_back_deps, align 8, !dbg !3165
  call void @llvm.dbg.value(metadata %struct._deps_list* %10, metadata !3140, metadata !DIExpression()), !dbg !3144
  call fastcc void @add_to_deps_list(%struct._dep_link* %back, %struct._deps_list* %10) #7, !dbg !3166
  %forw = getelementptr inbounds %struct._dep_node, %struct._dep_node* %call, i64 0, i32 2, !dbg !3167
  %11 = load %struct._deps_list*, %struct._deps_list** %pro_forw_deps, align 8, !dbg !3168
  call void @llvm.dbg.value(metadata %struct._deps_list* %11, metadata !3141, metadata !DIExpression()), !dbg !3144
  call fastcc void @add_to_deps_list(%struct._dep_link* nonnull %forw, %struct._deps_list* %11) #7, !dbg !3169
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3170
  %cmp35 = icmp eq %struct.bitmap_head_def* %12, null, !dbg !3172
  br i1 %cmp35, label %if.end37, label %if.then36, !dbg !3173

if.then36:                                        ; preds = %if.end
  call fastcc void @set_dependency_caches(%struct._dep* %dep) #7, !dbg !3174
  br label %if.end37, !dbg !3174

if.end37:                                         ; preds = %if.end, %if.then36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3175
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3175
  ret void, !dbg !3175
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._dep_node* @create_dep_node() unnamed_addr #5 !dbg !3176 {
entry:
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @dn_pool, align 8, !dbg !3183
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %0) #6, !dbg !3184
  %1 = bitcast i8* %call to %struct._dep_node*, !dbg !3185
  call void @llvm.dbg.value(metadata %struct._dep_node* %1, metadata !3180, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata i8* %call, metadata !3181, metadata !DIExpression()), !dbg !3186
  %forw2 = getelementptr inbounds i8, i8* %call, i64 48, !dbg !3187
  call void @llvm.dbg.value(metadata i8* %forw2, metadata !3182, metadata !DIExpression()), !dbg !3186
  %2 = bitcast i8* %call to i8**, !dbg !3188
  store i8* %call, i8** %2, align 8, !dbg !3188
  %next = getelementptr inbounds i8, i8* %call, i64 8, !dbg !3189
  %3 = bitcast i8* %next to %struct._dep_link**, !dbg !3189
  store %struct._dep_link* null, %struct._dep_link** %3, align 8, !dbg !3190
  %prev_nextp = getelementptr inbounds i8, i8* %call, i64 16, !dbg !3191
  %4 = bitcast i8* %prev_nextp to %struct._dep_link***, !dbg !3191
  store %struct._dep_link** null, %struct._dep_link*** %4, align 8, !dbg !3192
  %5 = bitcast i8* %forw2 to i8**, !dbg !3193
  store i8* %call, i8** %5, align 8, !dbg !3193
  %next4 = getelementptr inbounds i8, i8* %call, i64 56, !dbg !3194
  %6 = bitcast i8* %next4 to %struct._dep_link**, !dbg !3194
  store %struct._dep_link* null, %struct._dep_link** %6, align 8, !dbg !3195
  %prev_nextp5 = getelementptr inbounds i8, i8* %call, i64 64, !dbg !3196
  %7 = bitcast i8* %prev_nextp5 to %struct._dep_link***, !dbg !3196
  store %struct._dep_link** null, %struct._dep_link*** %7, align 8, !dbg !3197
  %8 = load i32, i32* @dn_pool_diff, align 4, !dbg !3198
  %inc = add nsw i32 %8, 1, !dbg !3198
  store i32 %inc, i32* @dn_pool_diff, align 4, !dbg !3198
  ret %struct._dep_node* %1, !dbg !3199
}

; Function Attrs: nounwind uwtable
define internal fastcc void @copy_dep(%struct._dep* %to, %struct._dep* %from) unnamed_addr #5 !dbg !3200 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %to, metadata !3204, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata %struct._dep* %from, metadata !3205, metadata !DIExpression()), !dbg !3206
  %0 = bitcast %struct._dep* %to to i8*, !dbg !3207
  %1 = bitcast %struct._dep* %from to i8*, !dbg !3208
  %call = tail call i8* @memcpy(i8* %0, i8* %1, i64 24) #6, !dbg !3209
  ret void, !dbg !3210
}

; Function Attrs: nounwind uwtable
define internal fastcc void @get_back_and_forw_lists(%struct._dep* %dep, i8 zeroext %resolved_p, %struct._deps_list** %back_list_ptr, %struct._deps_list** %forw_list_ptr) unnamed_addr #5 !dbg !3211 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !3215, metadata !DIExpression()), !dbg !3220
  call void @llvm.dbg.value(metadata i8 %resolved_p, metadata !3216, metadata !DIExpression()), !dbg !3220
  call void @llvm.dbg.value(metadata %struct._deps_list** %back_list_ptr, metadata !3217, metadata !DIExpression()), !dbg !3220
  call void @llvm.dbg.value(metadata %struct._deps_list** %forw_list_ptr, metadata !3218, metadata !DIExpression()), !dbg !3220
  %con1 = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 1, !dbg !3221
  %0 = load %struct.rtx_def*, %struct.rtx_def** %con1, align 8, !dbg !3221
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !3219, metadata !DIExpression()), !dbg !3220
  %tobool = icmp eq i8 %resolved_p, 0, !dbg !3222
  br i1 %tobool, label %if.then, label %if.else50, !dbg !3224

if.then:                                          ; preds = %entry
  %1 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3225
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %1, i64 0, i32 17, !dbg !3228
  %2 = load i32, i32* %flags, align 8, !dbg !3228
  %and = and i32 %2, 2, !dbg !3229
  %tobool2 = icmp eq i32 %and, 0, !dbg !3229
  br i1 %tobool2, label %if.else, label %land.lhs.true, !dbg !3230

land.lhs.true:                                    ; preds = %if.then
  %status = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 3, !dbg !3231
  %3 = load i32, i32* %status, align 4, !dbg !3231
  %and3 = and i32 %3, 16777215, !dbg !3232
  %tobool4 = icmp eq i32 %and3, 0, !dbg !3232
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !3233

if.then5:                                         ; preds = %land.lhs.true
  %4 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3234
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %4, i64 0, i32 0, !dbg !3234
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3234
  %base9 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !3234
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3234
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3234
  %6 = load i32, i32* %rt_int, align 8, !dbg !3234
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base9, i32 %6) #7, !dbg !3234
  %call13 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base, i32 %call) #7, !dbg !3234
  %spec_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call13, i64 0, i32 3, !dbg !3234
  %7 = bitcast %struct._deps_list** %spec_back_deps to i64*, !dbg !3234
  %8 = load i64, i64* %7, align 8, !dbg !3234
  %9 = bitcast %struct._deps_list** %back_list_ptr to i64*, !dbg !3235
  store i64 %8, i64* %9, align 8, !dbg !3235
  br label %if.end, !dbg !3236

if.else:                                          ; preds = %land.lhs.true, %if.then
  %10 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3237
  %base16 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %10, i64 0, i32 0, !dbg !3237
  %11 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3237
  %base22 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %11, i64 0, i32 0, !dbg !3237
  %arrayidx28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3237
  %rt_int29 = bitcast %union.rtunion_def* %arrayidx28 to i32*, !dbg !3237
  %12 = load i32, i32* %rt_int29, align 8, !dbg !3237
  %call30 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base22, i32 %12) #7, !dbg !3237
  %call31 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base16, i32 %call30) #7, !dbg !3237
  %hard_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call31, i64 0, i32 2, !dbg !3237
  %13 = bitcast %struct._deps_list** %hard_back_deps to i64*, !dbg !3237
  %14 = load i64, i64* %13, align 8, !dbg !3237
  %15 = bitcast %struct._deps_list** %back_list_ptr to i64*, !dbg !3238
  store i64 %14, i64* %15, align 8, !dbg !3238
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %16 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3239
  %base34 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %16, i64 0, i32 0, !dbg !3239
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3239
  %base40 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %17, i64 0, i32 0, !dbg !3239
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 0, !dbg !3239
  %18 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !3239
  %arrayidx46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3239
  %rt_int47 = bitcast %union.rtunion_def* %arrayidx46 to i32*, !dbg !3239
  %19 = load i32, i32* %rt_int47, align 8, !dbg !3239
  %call48 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base40, i32 %19) #7, !dbg !3239
  %call49 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base34, i32 %call48) #7, !dbg !3239
  %forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call49, i64 0, i32 4, !dbg !3239
  %20 = bitcast %struct._deps_list** %forw_deps to i64*, !dbg !3239
  %21 = load i64, i64* %20, align 8, !dbg !3239
  %22 = bitcast %struct._deps_list** %forw_list_ptr to i64*, !dbg !3240
  store i64 %21, i64* %22, align 8, !dbg !3240
  br label %if.end88, !dbg !3241

if.else50:                                        ; preds = %entry
  %23 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3242
  %base53 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %23, i64 0, i32 0, !dbg !3242
  %24 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3242
  %base59 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %24, i64 0, i32 0, !dbg !3242
  %arrayidx65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3242
  %rt_int66 = bitcast %union.rtunion_def* %arrayidx65 to i32*, !dbg !3242
  %25 = load i32, i32* %rt_int66, align 8, !dbg !3242
  %call67 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base59, i32 %25) #7, !dbg !3242
  %call68 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base53, i32 %call67) #7, !dbg !3242
  %resolved_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call68, i64 0, i32 5, !dbg !3242
  %26 = bitcast %struct._deps_list** %resolved_back_deps to i64*, !dbg !3242
  %27 = load i64, i64* %26, align 8, !dbg !3242
  %28 = bitcast %struct._deps_list** %back_list_ptr to i64*, !dbg !3244
  store i64 %27, i64* %28, align 8, !dbg !3244
  %29 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3245
  %base71 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %29, i64 0, i32 0, !dbg !3245
  %30 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3245
  %base77 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %30, i64 0, i32 0, !dbg !3245
  %pro81 = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 0, !dbg !3245
  %31 = load %struct.rtx_def*, %struct.rtx_def** %pro81, align 8, !dbg !3245
  %arrayidx84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3245
  %rt_int85 = bitcast %union.rtunion_def* %arrayidx84 to i32*, !dbg !3245
  %32 = load i32, i32* %rt_int85, align 8, !dbg !3245
  %call86 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base77, i32 %32) #7, !dbg !3245
  %call87 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base71, i32 %call86) #7, !dbg !3245
  %resolved_forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call87, i64 0, i32 6, !dbg !3245
  %33 = bitcast %struct._deps_list** %resolved_forw_deps to i64*, !dbg !3245
  %34 = load i64, i64* %33, align 8, !dbg !3245
  %35 = bitcast %struct._deps_list** %forw_list_ptr to i64*, !dbg !3246
  store i64 %34, i64* %35, align 8, !dbg !3246
  br label %if.end88

if.end88:                                         ; preds = %if.else50, %if.end
  ret void, !dbg !3247
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_to_deps_list(%struct._dep_link* %link, %struct._deps_list* %l) unnamed_addr #5 !dbg !3248 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep_link* %link, metadata !3252, metadata !DIExpression()), !dbg !3254
  call void @llvm.dbg.value(metadata %struct._deps_list* %l, metadata !3253, metadata !DIExpression()), !dbg !3254
  %first = getelementptr inbounds %struct._deps_list, %struct._deps_list* %l, i64 0, i32 0, !dbg !3255
  tail call fastcc void @attach_dep_link(%struct._dep_link* %link, %struct._dep_link** %first) #7, !dbg !3256
  %call = tail call fastcc zeroext i8 @depl_on_debug_p(%struct._dep_link* %link) #7, !dbg !3257
  %tobool = icmp eq i8 %call, 0, !dbg !3257
  br i1 %tobool, label %if.then, label %if.end, !dbg !3259

if.then:                                          ; preds = %entry
  %n_links = getelementptr inbounds %struct._deps_list, %struct._deps_list* %l, i64 0, i32 1, !dbg !3260
  %0 = load i32, i32* %n_links, align 8, !dbg !3261
  %inc = add nsw i32 %0, 1, !dbg !3261
  store i32 %inc, i32* %n_links, align 8, !dbg !3261
  br label %if.end, !dbg !3261

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3262
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_dependency_caches(%struct._dep* %dep) unnamed_addr #5 !dbg !3263 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !3265, metadata !DIExpression()), !dbg !3271
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3272
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !3272
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 0, !dbg !3272
  %1 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !3272
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3272
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3272
  %2 = load i32, i32* %rt_int, align 8, !dbg !3272
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %2) #7, !dbg !3272
  call void @llvm.dbg.value(metadata i32 %call, metadata !3266, metadata !DIExpression()), !dbg !3271
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3273
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i64 0, i32 0, !dbg !3273
  %con = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 1, !dbg !3273
  %4 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3273
  %arrayidx9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3273
  %rt_int10 = bitcast %union.rtunion_def* %arrayidx9 to i32*, !dbg !3273
  %5 = load i32, i32* %rt_int10, align 8, !dbg !3273
  %call11 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %5) #7, !dbg !3273
  call void @llvm.dbg.value(metadata i32 %call11, metadata !3267, metadata !DIExpression()), !dbg !3271
  %6 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3274
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %6, i64 0, i32 17, !dbg !3275
  %7 = load i32, i32* %flags, align 8, !dbg !3275
  %and = and i32 %7, 1, !dbg !3276
  %tobool12 = icmp eq i32 %and, 0, !dbg !3276
  br i1 %tobool12, label %if.then, label %if.else, !dbg !3277

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 2, !dbg !3278
  %8 = load i32, i32* %type, align 8, !dbg !3278
  switch i32 %8, label %sw.default [
    i32 0, label %sw.bb
    i32 11, label %sw.bb15
    i32 12, label %sw.bb19
  ], !dbg !3280

sw.bb:                                            ; preds = %if.then
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3281
  %idxprom = sext i32 %call11 to i64, !dbg !3281
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %9, i64 %idxprom, !dbg !3281
  %call14 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx13, i32 %call) #6, !dbg !3283
  br label %if.end57, !dbg !3284

sw.bb15:                                          ; preds = %if.then
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !3285
  %idxprom16 = sext i32 %call11 to i64, !dbg !3285
  %arrayidx17 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %10, i64 %idxprom16, !dbg !3285
  %call18 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx17, i32 %call) #6, !dbg !3286
  br label %if.end57, !dbg !3287

sw.bb19:                                          ; preds = %if.then
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !3288
  %idxprom20 = sext i32 %call11 to i64, !dbg !3288
  %arrayidx21 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %11, i64 %idxprom20, !dbg !3288
  %call22 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx21, i32 %call) #6, !dbg !3289
  br label %if.end57, !dbg !3290

sw.default:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 963, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3291
  br label %if.end57, !dbg !3292

if.else:                                          ; preds = %entry
  %status = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 3, !dbg !3293
  %12 = load i32, i32* %status, align 4, !dbg !3293
  call void @llvm.dbg.value(metadata i32 %12, metadata !3268, metadata !DIExpression()), !dbg !3294
  %and23 = and i32 %12, 16777216, !dbg !3295
  %tobool24 = icmp eq i32 %and23, 0, !dbg !3295
  br i1 %tobool24, label %if.end, label %if.then25, !dbg !3297

if.then25:                                        ; preds = %if.else
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3298
  %idxprom26 = sext i32 %call11 to i64, !dbg !3298
  %arrayidx27 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %13, i64 %idxprom26, !dbg !3298
  %call28 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx27, i32 %call) #6, !dbg !3299
  br label %if.end, !dbg !3299

if.end:                                           ; preds = %if.else, %if.then25
  %and29 = and i32 %12, 33554432, !dbg !3300
  %tobool30 = icmp eq i32 %and29, 0, !dbg !3300
  br i1 %tobool30, label %if.end35, label %if.then31, !dbg !3302

if.then31:                                        ; preds = %if.end
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !3303
  %idxprom32 = sext i32 %call11 to i64, !dbg !3303
  %arrayidx33 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %14, i64 %idxprom32, !dbg !3303
  %call34 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx33, i32 %call) #6, !dbg !3304
  br label %if.end35, !dbg !3304

if.end35:                                         ; preds = %if.end, %if.then31
  %and36 = and i32 %12, 67108864, !dbg !3305
  %tobool37 = icmp eq i32 %and36, 0, !dbg !3305
  br i1 %tobool37, label %if.end42, label %if.then38, !dbg !3307

if.then38:                                        ; preds = %if.end35
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !3308
  %idxprom39 = sext i32 %call11 to i64, !dbg !3308
  %arrayidx40 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %15, i64 %idxprom39, !dbg !3308
  %call41 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx40, i32 %call) #6, !dbg !3309
  br label %if.end42, !dbg !3309

if.end42:                                         ; preds = %if.end35, %if.then38
  %and43 = and i32 %12, 16777215, !dbg !3310
  %tobool44 = icmp eq i32 %and43, 0, !dbg !3310
  br i1 %tobool44, label %if.end57, label %if.then45, !dbg !3312

if.then45:                                        ; preds = %if.end42
  %16 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3313
  %flags46 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %16, i64 0, i32 17, !dbg !3313
  %17 = load i32, i32* %flags46, align 8, !dbg !3313
  %and47 = and i32 %17, 2, !dbg !3313
  %tobool48 = icmp eq i32 %and47, 0, !dbg !3313
  br i1 %tobool48, label %cond.true49, label %cond.end51, !dbg !3313

cond.true49:                                      ; preds = %if.then45
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 979, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3313
  br label %cond.end51, !dbg !3313

cond.end51:                                       ; preds = %if.then45, %cond.true49
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !3315
  %idxprom53 = sext i32 %call11 to i64, !dbg !3315
  %arrayidx54 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %18, i64 %idxprom53, !dbg !3315
  %call55 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx54, i32 %call) #6, !dbg !3316
  br label %if.end57, !dbg !3317

if.end57:                                         ; preds = %if.end42, %cond.end51, %sw.bb, %sw.bb15, %sw.bb19, %sw.default
  ret void, !dbg !3318
}

; Function Attrs: nounwind uwtable
define dso_local i32 @sd_add_or_update_dep(%struct._dep* %dep, i8 zeroext %resolved_p) local_unnamed_addr #5 !dbg !3319 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !3323, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 %resolved_p, metadata !3324, metadata !DIExpression()), !dbg !3325
  %call = tail call fastcc i32 @add_or_update_dep_1(%struct._dep* %dep, i8 zeroext %resolved_p, %struct.rtx_def* null, %struct.rtx_def* null) #7, !dbg !3326
  ret i32 %call, !dbg !3327
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @add_or_update_dep_1(%struct._dep* %new_dep, i8 zeroext %resolved_p, %struct.rtx_def* %mem1, %struct.rtx_def* %mem2) unnamed_addr #5 !dbg !3328 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._dep* %new_dep, metadata !3332, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 %resolved_p, metadata !3333, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem1, metadata !3334, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem2, metadata !3335, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 1, metadata !3336, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 0, metadata !3337, metadata !DIExpression()), !dbg !3342
  %0 = bitcast %struct._dep* %new_dep to i32**, !dbg !3343
  %1 = load i32*, i32** %0, align 8, !dbg !3343
  %bf.load = load i32, i32* %1, align 8, !dbg !3343
  %bf.clear = and i32 %bf.load, 65535, !dbg !3343
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3343
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !3343

lor.lhs.false:                                    ; preds = %entry
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !3343
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false5, !dbg !3343

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp9 = icmp eq i32 %bf.clear, 9, !dbg !3343
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false10, !dbg !3343

lor.lhs.false10:                                  ; preds = %lor.lhs.false5
  %cmp14 = icmp eq i32 %bf.clear, 10, !dbg !3343
  br i1 %cmp14, label %land.lhs.true, label %cond.true, !dbg !3343

land.lhs.true:                                    ; preds = %lor.lhs.false10, %lor.lhs.false5, %lor.lhs.false, %entry
  %con = getelementptr inbounds %struct._dep, %struct._dep* %new_dep, i64 0, i32 1, !dbg !3343
  %2 = bitcast %struct.rtx_def** %con to i32**, !dbg !3343
  %3 = load i32*, i32** %2, align 8, !dbg !3343
  %bf.load15 = load i32, i32* %3, align 8, !dbg !3343
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !3343
  %cmp17 = icmp eq i32 %bf.clear16, 8, !dbg !3343
  br i1 %cmp17, label %land.lhs.true33, label %lor.lhs.false18, !dbg !3343

lor.lhs.false18:                                  ; preds = %land.lhs.true
  %cmp22 = icmp eq i32 %bf.clear16, 7, !dbg !3343
  br i1 %cmp22, label %land.lhs.true33, label %lor.lhs.false23, !dbg !3343

lor.lhs.false23:                                  ; preds = %lor.lhs.false18
  %cmp27 = icmp eq i32 %bf.clear16, 9, !dbg !3343
  br i1 %cmp27, label %land.lhs.true33, label %lor.lhs.false28, !dbg !3343

lor.lhs.false28:                                  ; preds = %lor.lhs.false23
  %cmp32 = icmp eq i32 %bf.clear16, 10, !dbg !3343
  br i1 %cmp32, label %land.lhs.true33, label %cond.true, !dbg !3343

land.lhs.true33:                                  ; preds = %lor.lhs.false28, %lor.lhs.false23, %lor.lhs.false18, %land.lhs.true
  %cmp36 = icmp eq i32* %1, %3, !dbg !3343
  br i1 %cmp36, label %cond.true, label %cond.end, !dbg !3343

cond.true:                                        ; preds = %land.lhs.true33, %lor.lhs.false28, %lor.lhs.false10
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3343
  br label %cond.end, !dbg !3343

cond.end:                                         ; preds = %land.lhs.true33, %cond.true
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3344
  %cmp37 = icmp eq %struct.bitmap_head_def* %4, null, !dbg !3346
  br i1 %cmp37, label %if.end, label %if.then, !dbg !3347

if.then:                                          ; preds = %cond.end
  %call = tail call fastcc i32 @ask_dependency_caches(%struct._dep* %new_dep) #7, !dbg !3348
  switch i32 %call, label %sw.default [
    i32 1, label %cleanup77
    i32 2, label %if.end
    i32 3, label %sw.bb39
  ], !dbg !3350

sw.bb39:                                          ; preds = %if.then
  call void @llvm.dbg.value(metadata i8 0, metadata !3336, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 0, metadata !3337, metadata !DIExpression()), !dbg !3342
  br label %if.end, !dbg !3351

sw.default:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1149, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3353
  br label %if.end, !dbg !3354

if.end:                                           ; preds = %cond.end, %sw.bb39, %sw.default, %if.then
  %maybe_present_p.1 = phi i1 [ true, %cond.end ], [ true, %sw.default ], [ false, %sw.bb39 ], [ true, %if.then ]
  %present_p.1 = phi i8 [ 0, %cond.end ], [ 0, %sw.default ], [ 0, %sw.bb39 ], [ 1, %if.then ], !dbg !3355
  call void @llvm.dbg.value(metadata i8 %present_p.1, metadata !3337, metadata !DIExpression()), !dbg !3342
  br i1 %maybe_present_p.1, label %if.then40, label %if.end62, !dbg !3356

if.then40:                                        ; preds = %if.end
  %5 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !3357
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8, !dbg !3357
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3358
  %cmp41 = icmp eq %struct.bitmap_head_def* %6, null, !dbg !3358
  %tobool43 = icmp ne i8 %present_p.1, 0, !dbg !3358
  %or.cond = or i1 %cmp41, %tobool43, !dbg !3358
  br i1 %or.cond, label %cond.end46, label %cond.true44, !dbg !3358

cond.true44:                                      ; preds = %if.then40
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1160, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3358
  br label %cond.end46, !dbg !3358

cond.end46:                                       ; preds = %if.then40, %cond.true44
  %pro48 = getelementptr inbounds %struct._dep, %struct._dep* %new_dep, i64 0, i32 0, !dbg !3359
  %7 = load %struct.rtx_def*, %struct.rtx_def** %pro48, align 8, !dbg !3359
  %con49 = getelementptr inbounds %struct._dep, %struct._dep* %new_dep, i64 0, i32 1, !dbg !3360
  %8 = load %struct.rtx_def*, %struct.rtx_def** %con49, align 8, !dbg !3360
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !3341, metadata !DIExpression(DW_OP_deref)), !dbg !3361
  %call50 = call fastcc %struct._dep* @sd_find_dep_between_no_cache(%struct.rtx_def* %7, %struct.rtx_def* %8, i8 zeroext %resolved_p, %struct._sd_iterator* nonnull %sd_it) #7, !dbg !3362
  call void @llvm.dbg.value(metadata %struct._dep* %call50, metadata !3338, metadata !DIExpression()), !dbg !3361
  %cmp51 = icmp eq %struct._dep* %call50, null, !dbg !3363
  br i1 %cmp51, label %if.else, label %if.then53, !dbg !3365

if.then53:                                        ; preds = %cond.end46
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !3341, metadata !DIExpression(DW_OP_deref)), !dbg !3361
  %call54 = call fastcc i32 @update_dep(%struct._dep* nonnull %call50, %struct._dep* %new_dep, %struct._sd_iterator* nonnull byval(%struct._sd_iterator) align 8 %sd_it, %struct.rtx_def* %mem1, %struct.rtx_def* %mem2) #7, !dbg !3366
  br label %cleanup, !dbg !3367

if.else:                                          ; preds = %cond.end46
  %tobool55 = icmp eq i8 %present_p.1, 0, !dbg !3368
  br i1 %tobool55, label %cleanup, label %cond.true56, !dbg !3368

cond.true56:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1171, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3368
  br label %cleanup, !dbg !3368

cleanup:                                          ; preds = %if.else, %cond.true56, %if.then53
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then53 ], [ true, %cond.true56 ], [ true, %if.else ]
  %retval.0 = phi i32 [ %call54, %if.then53 ], [ undef, %cond.true56 ], [ undef, %if.else ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8, !dbg !3369
  br i1 %cleanup.dest.slot.0, label %if.end62, label %cleanup77

if.end62:                                         ; preds = %cleanup, %if.end
  %cmp63 = icmp eq %struct.rtx_def* %mem1, null, !dbg !3370
  br i1 %cmp63, label %if.end76, label %if.then65, !dbg !3372

if.then65:                                        ; preds = %if.end62
  %9 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !3373
  %generate_spec_deps = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %9, i64 0, i32 12, !dbg !3373
  %bf.load66 = load i8, i8* %generate_spec_deps, align 8, !dbg !3373
  %bf.clear67 = and i8 %bf.load66, 4, !dbg !3373
  %tobool68 = icmp eq i8 %bf.clear67, 0, !dbg !3373
  br i1 %tobool68, label %cond.true69, label %cond.end71, !dbg !3373

cond.true69:                                      ; preds = %if.then65
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1181, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3373
  br label %cond.end71, !dbg !3373

cond.end71:                                       ; preds = %if.then65, %cond.true69
  %status = getelementptr inbounds %struct._dep, %struct._dep* %new_dep, i64 0, i32 3, !dbg !3375
  %10 = load i32, i32* %status, align 4, !dbg !3375
  %call73 = call i32 @estimate_dep_weak(%struct.rtx_def* nonnull %mem1, %struct.rtx_def* %mem2) #7, !dbg !3376
  %call74 = call i32 @set_dep_weak(i32 %10, i32 63, i32 %call73) #7, !dbg !3377
  store i32 %call74, i32* %status, align 4, !dbg !3378
  br label %if.end76, !dbg !3379

if.end76:                                         ; preds = %if.end62, %cond.end71
  call void @sd_add_dep(%struct._dep* %new_dep, i8 zeroext %resolved_p) #7, !dbg !3380
  br label %cleanup77, !dbg !3381

cleanup77:                                        ; preds = %if.then, %cleanup, %if.end76
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ 3, %if.end76 ], [ 1, %if.then ], !dbg !3342
  ret i32 %retval.1, !dbg !3382
}

; Function Attrs: nounwind uwtable
define dso_local void @sd_resolve_dep(%struct._sd_iterator* byval(%struct._sd_iterator) align 8 %sd_it) local_unnamed_addr #5 !dbg !3383 {
entry:
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !3387, metadata !DIExpression()), !dbg !3392
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %sd_it, i64 0, i32 2, !dbg !3393
  %0 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !3393
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !3393
  %node1 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i64 0, i32 0, !dbg !3393
  %2 = load %struct._dep_node*, %struct._dep_node** %node1, align 8, !dbg !3393
  call void @llvm.dbg.value(metadata %struct._dep_node* %2, metadata !3388, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata %struct._dep_node* %2, metadata !3389, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !3394
  %pro3 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 1, i32 0, !dbg !3395
  %3 = load %struct.rtx_def*, %struct.rtx_def** %pro3, align 8, !dbg !3395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3390, metadata !DIExpression()), !dbg !3394
  %con4 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 1, i32 1, !dbg !3396
  %4 = load %struct.rtx_def*, %struct.rtx_def** %con4, align 8, !dbg !3396
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3391, metadata !DIExpression()), !dbg !3394
  %5 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3397
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %5, i64 0, i32 17, !dbg !3399
  %6 = load i32, i32* %flags, align 8, !dbg !3399
  %and = and i32 %6, 2, !dbg !3400
  %tobool = icmp eq i32 %and, 0, !dbg !3400
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3401

land.lhs.true:                                    ; preds = %entry
  %status = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 1, i32 3, !dbg !3402
  %7 = load i32, i32* %status, align 4, !dbg !3402
  %and5 = and i32 %7, 16777215, !dbg !3403
  %tobool6 = icmp eq i32 %and5, 0, !dbg !3403
  br i1 %tobool6, label %if.else, label %if.then, !dbg !3404

if.then:                                          ; preds = %land.lhs.true
  %back = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 0, !dbg !3405
  %8 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3406
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %8, i64 0, i32 0, !dbg !3406
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3406
  %base10 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %9, i64 0, i32 0, !dbg !3406
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3406
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3406
  %10 = load i32, i32* %rt_int, align 8, !dbg !3406
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base10, i32 %10) #7, !dbg !3406
  %call14 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base, i32 %call) #7, !dbg !3406
  %spec_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call14, i64 0, i32 3, !dbg !3406
  %11 = load %struct._deps_list*, %struct._deps_list** %spec_back_deps, align 8, !dbg !3406
  %12 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3407
  %base17 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %12, i64 0, i32 0, !dbg !3407
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3407
  %base23 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i64 0, i32 0, !dbg !3407
  %14 = load i32, i32* %rt_int, align 8, !dbg !3407
  %call31 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base23, i32 %14) #7, !dbg !3407
  %call32 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base17, i32 %call31) #7, !dbg !3407
  %resolved_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call32, i64 0, i32 5, !dbg !3407
  %15 = load %struct._deps_list*, %struct._deps_list** %resolved_back_deps, align 8, !dbg !3407
  tail call fastcc void @move_dep_link(%struct._dep_link* %back, %struct._deps_list* %11, %struct._deps_list* %15) #7, !dbg !3408
  br label %if.end, !dbg !3408

if.else:                                          ; preds = %land.lhs.true, %entry
  %back33 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 0, !dbg !3409
  %16 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3410
  %base36 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %16, i64 0, i32 0, !dbg !3410
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3410
  %base42 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %17, i64 0, i32 0, !dbg !3410
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3410
  %rt_int49 = bitcast %union.rtunion_def* %arrayidx48 to i32*, !dbg !3410
  %18 = load i32, i32* %rt_int49, align 8, !dbg !3410
  %call50 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base42, i32 %18) #7, !dbg !3410
  %call51 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base36, i32 %call50) #7, !dbg !3410
  %hard_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call51, i64 0, i32 2, !dbg !3410
  %19 = load %struct._deps_list*, %struct._deps_list** %hard_back_deps, align 8, !dbg !3410
  %20 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3411
  %base54 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %20, i64 0, i32 0, !dbg !3411
  %21 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3411
  %base60 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %21, i64 0, i32 0, !dbg !3411
  %22 = load i32, i32* %rt_int49, align 8, !dbg !3411
  %call68 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base60, i32 %22) #7, !dbg !3411
  %call69 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base54, i32 %call68) #7, !dbg !3411
  %resolved_back_deps70 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call69, i64 0, i32 5, !dbg !3411
  %23 = load %struct._deps_list*, %struct._deps_list** %resolved_back_deps70, align 8, !dbg !3411
  tail call fastcc void @move_dep_link(%struct._dep_link* %back33, %struct._deps_list* %19, %struct._deps_list* %23) #7, !dbg !3412
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %forw = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 2, !dbg !3413
  %24 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3414
  %base73 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %24, i64 0, i32 0, !dbg !3414
  %25 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3414
  %base79 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %25, i64 0, i32 0, !dbg !3414
  %arrayidx85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3414
  %rt_int86 = bitcast %union.rtunion_def* %arrayidx85 to i32*, !dbg !3414
  %26 = load i32, i32* %rt_int86, align 8, !dbg !3414
  %call87 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base79, i32 %26) #7, !dbg !3414
  %call88 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base73, i32 %call87) #7, !dbg !3414
  %forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call88, i64 0, i32 4, !dbg !3414
  %27 = load %struct._deps_list*, %struct._deps_list** %forw_deps, align 8, !dbg !3414
  %28 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3415
  %base91 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %28, i64 0, i32 0, !dbg !3415
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3415
  %base97 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %29, i64 0, i32 0, !dbg !3415
  %30 = load i32, i32* %rt_int86, align 8, !dbg !3415
  %call105 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base97, i32 %30) #7, !dbg !3415
  %call106 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base91, i32 %call105) #7, !dbg !3415
  %resolved_forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call106, i64 0, i32 6, !dbg !3415
  %31 = load %struct._deps_list*, %struct._deps_list** %resolved_forw_deps, align 8, !dbg !3415
  tail call fastcc void @move_dep_link(%struct._dep_link* nonnull %forw, %struct._deps_list* %27, %struct._deps_list* %31) #7, !dbg !3416
  ret void, !dbg !3417
}

; Function Attrs: nounwind uwtable
define internal fastcc void @move_dep_link(%struct._dep_link* %link, %struct._deps_list* %from, %struct._deps_list* %to) unnamed_addr #5 !dbg !3418 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep_link* %link, metadata !3422, metadata !DIExpression()), !dbg !3425
  call void @llvm.dbg.value(metadata %struct._deps_list* %from, metadata !3423, metadata !DIExpression()), !dbg !3425
  call void @llvm.dbg.value(metadata %struct._deps_list* %to, metadata !3424, metadata !DIExpression()), !dbg !3425
  tail call fastcc void @remove_from_deps_list(%struct._dep_link* %link, %struct._deps_list* %from) #7, !dbg !3426
  tail call fastcc void @add_to_deps_list(%struct._dep_link* %link, %struct._deps_list* %to) #7, !dbg !3427
  ret void, !dbg !3428
}

; Function Attrs: nounwind uwtable
define dso_local void @sd_copy_back_deps(%struct.rtx_def* %to, %struct.rtx_def* %from, i8 zeroext %resolved_p) local_unnamed_addr #5 !dbg !3429 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  %_new_dep = alloca %struct._dep, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !3433, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !3434, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.value(metadata i8 %resolved_p, metadata !3435, metadata !DIExpression()), !dbg !3444
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !3445
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3445
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !3446
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3446
  %tobool = icmp eq i8 %resolved_p, 0, !dbg !3447
  %cond = select i1 %tobool, i32 3, i32 8, !dbg !3447
  call void @llvm.dbg.value(metadata i32 %cond, metadata !3436, metadata !DIExpression()), !dbg !3444
  %2 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !3448
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !3448
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %from, i32 %cond) #7, !dbg !3448
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 32, i1 false), !dbg !3448
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !3448
  %3 = bitcast %struct._dep* %_new_dep to i8*, !dbg !3449
  %con = getelementptr inbounds %struct._dep, %struct._dep* %_new_dep, i64 0, i32 1, !dbg !3449
  br label %for.cond, !dbg !3448

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !3437, metadata !DIExpression(DW_OP_deref)), !dbg !3444
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !3438, metadata !DIExpression(DW_OP_deref)), !dbg !3444
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !3450
  %tobool1 = icmp eq i8 %call, 0, !dbg !3448
  br i1 %tobool1, label %for.end, label %for.body, !dbg !3448

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3451
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !3443, metadata !DIExpression()), !dbg !3449
  %4 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3452
  call void @llvm.dbg.value(metadata %struct._dep* %4, metadata !3438, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !3439, metadata !DIExpression(DW_OP_deref)), !dbg !3449
  call fastcc void @copy_dep(%struct._dep* nonnull %_new_dep, %struct._dep* %4) #7, !dbg !3453
  store %struct.rtx_def* %to, %struct.rtx_def** %con, align 8, !dbg !3454
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !3439, metadata !DIExpression(DW_OP_deref)), !dbg !3449
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext %resolved_p) #7, !dbg !3455
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3456
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !3437, metadata !DIExpression(DW_OP_deref)), !dbg !3444
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !3450
  br label %for.cond, !dbg !3450, !llvm.loop !3457

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3459
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3459
  ret void, !dbg !3459
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sd_iterator_start(%struct._sd_iterator* noalias sret %agg.result, %struct.rtx_def* %insn, i32 %types) unnamed_addr #0 !dbg !1967 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !1980, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i32 %types, metadata !1981, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %agg.result, metadata !1982, metadata !DIExpression()), !dbg !3461
  %types1 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i64 0, i32 0, !dbg !3462
  store i32 %types, i32* %types1, align 8, !dbg !3463
  %insn2 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i64 0, i32 1, !dbg !3464
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn2, align 8, !dbg !3465
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i64 0, i32 2, !dbg !3466
  store %struct._dep_link** @sd_iterator_start.null_link, %struct._dep_link*** %linkp, align 8, !dbg !3467
  %resolved_p = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i64 0, i32 3, !dbg !3468
  store i8 0, i8* %resolved_p, align 8, !dbg !3469
  ret void, !dbg !3470
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %it_ptr, %struct._dep** %dep_ptr) unnamed_addr #0 !dbg !3471 {
entry:
  %list = alloca %struct._deps_list*, align 8
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %it_ptr, metadata !3476, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata %struct._dep** %dep_ptr, metadata !3477, metadata !DIExpression()), !dbg !3485
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 2, !dbg !3486
  %0 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !3486
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !3487
  call void @llvm.dbg.value(metadata %struct._dep_link* %1, metadata !3478, metadata !DIExpression()), !dbg !3485
  %cmp = icmp eq %struct._dep_link* %1, null, !dbg !3488
  br i1 %cmp, label %if.else, label %if.then, !dbg !3489

if.then:                                          ; preds = %entry
  %node = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i64 0, i32 0, !dbg !3490
  %2 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !3490
  %dep = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 1, !dbg !3490
  store %struct._dep* %dep, %struct._dep** %dep_ptr, align 8, !dbg !3492
  br label %cleanup9, !dbg !3493

if.else:                                          ; preds = %entry
  %types1 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 0, !dbg !3494
  %3 = load i32, i32* %types1, align 8, !dbg !3494
  call void @llvm.dbg.value(metadata i32 %3, metadata !3479, metadata !DIExpression()), !dbg !3495
  %cmp2 = icmp eq i32 %3, 0, !dbg !3496
  br i1 %cmp2, label %if.end7, label %if.then3, !dbg !3497

if.then3:                                         ; preds = %if.else
  %4 = bitcast %struct._deps_list** %list to i8*, !dbg !3498
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !3498
  %insn = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 1, !dbg !3499
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3499
  %resolved_p = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 3, !dbg !3500
  call void @llvm.dbg.value(metadata %struct._deps_list** %list, metadata !3482, metadata !DIExpression(DW_OP_deref)), !dbg !3501
  call void @sd_next_list(%struct.rtx_def* %5, i32* %types1, %struct._deps_list** nonnull %list, i8* nonnull %resolved_p) #7, !dbg !3502
  %6 = load %struct._deps_list*, %struct._deps_list** %list, align 8, !dbg !3503
  call void @llvm.dbg.value(metadata %struct._deps_list* %6, metadata !3482, metadata !DIExpression()), !dbg !3501
  %first = getelementptr inbounds %struct._deps_list, %struct._deps_list* %6, i64 0, i32 0, !dbg !3503
  store %struct._dep_link** %first, %struct._dep_link*** %linkp, align 8, !dbg !3504
  call void @llvm.dbg.value(metadata %struct._deps_list* %6, metadata !3482, metadata !DIExpression()), !dbg !3501
  %tobool = icmp eq %struct._deps_list* %6, null, !dbg !3505
  br i1 %tobool, label %cleanup, label %if.then6, !dbg !3507

if.then6:                                         ; preds = %if.then3
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %it_ptr, %struct._dep** %dep_ptr) #7, !dbg !3508
  br label %cleanup, !dbg !3509

cleanup:                                          ; preds = %if.then3, %if.then6
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then6 ], [ true, %if.then3 ]
  %retval.0 = phi i8 [ %call, %if.then6 ], [ undef, %if.then3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !3510
  br i1 %cleanup.dest.slot.0, label %if.end7, label %cleanup9

if.end7:                                          ; preds = %if.else, %cleanup
  store %struct._dep* null, %struct._dep** %dep_ptr, align 8, !dbg !3511
  br label %cleanup9, !dbg !3512

cleanup9:                                         ; preds = %if.end7, %cleanup, %if.then
  %retval.2 = phi i8 [ 1, %if.then ], [ %retval.0, %cleanup ], [ 0, %if.end7 ], !dbg !3513
  ret i8 %retval.2, !dbg !3514
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sd_iterator_next(%struct._sd_iterator* %it_ptr) unnamed_addr #0 !dbg !3515 {
entry:
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %it_ptr, metadata !3519, metadata !DIExpression()), !dbg !3520
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 2, !dbg !3521
  %0 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !3521
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !3521
  %next = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i64 0, i32 1, !dbg !3521
  store %struct._dep_link** %next, %struct._dep_link*** %linkp, align 8, !dbg !3522
  ret void, !dbg !3523
}

; Function Attrs: nounwind uwtable
define dso_local void @sd_delete_dep(%struct._sd_iterator* byval(%struct._sd_iterator) align 8 %sd_it) local_unnamed_addr #5 !dbg !3524 {
entry:
  %con_back_deps = alloca %struct._deps_list*, align 8
  %pro_forw_deps = alloca %struct._deps_list*, align 8
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !3526, metadata !DIExpression()), !dbg !3537
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %sd_it, i64 0, i32 2, !dbg !3538
  %0 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !3538
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !3538
  %node = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i64 0, i32 0, !dbg !3538
  %2 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !3538
  call void @llvm.dbg.value(metadata %struct._dep_node* %2, metadata !3527, metadata !DIExpression()), !dbg !3539
  %dep1 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 1, !dbg !3540
  call void @llvm.dbg.value(metadata %struct._dep* %dep1, metadata !3528, metadata !DIExpression()), !dbg !3539
  %pro2 = getelementptr inbounds %struct._dep, %struct._dep* %dep1, i64 0, i32 0, !dbg !3541
  %3 = load %struct.rtx_def*, %struct.rtx_def** %pro2, align 8, !dbg !3541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3529, metadata !DIExpression()), !dbg !3539
  %con3 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 1, i32 1, !dbg !3542
  %4 = load %struct.rtx_def*, %struct.rtx_def** %con3, align 8, !dbg !3542
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3530, metadata !DIExpression()), !dbg !3539
  %5 = bitcast %struct._deps_list** %con_back_deps to i8*, !dbg !3543
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !3543
  %6 = bitcast %struct._deps_list** %pro_forw_deps to i8*, !dbg !3544
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8, !dbg !3544
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3545
  %cmp = icmp eq %struct.bitmap_head_def* %7, null, !dbg !3546
  br i1 %cmp, label %if.end28, label %if.then, !dbg !3547

if.then:                                          ; preds = %entry
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3548
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i64 0, i32 0, !dbg !3548
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3548
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3548
  %9 = load i32, i32* %rt_int, align 8, !dbg !3548
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %9) #7, !dbg !3548
  call void @llvm.dbg.value(metadata i32 %call, metadata !3533, metadata !DIExpression()), !dbg !3549
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3550
  %base6 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !3550
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3550
  %rt_int13 = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !3550
  %11 = load i32, i32* %rt_int13, align 8, !dbg !3550
  %call14 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base6, i32 %11) #7, !dbg !3550
  call void @llvm.dbg.value(metadata i32 %call14, metadata !3536, metadata !DIExpression()), !dbg !3549
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3551
  %idxprom = sext i32 %call14 to i64, !dbg !3551
  %arrayidx15 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %12, i64 %idxprom, !dbg !3551
  %call16 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx15, i32 %call) #6, !dbg !3552
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !3553
  %arrayidx18 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %13, i64 %idxprom, !dbg !3553
  %call19 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx18, i32 %call) #6, !dbg !3554
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !3555
  %arrayidx21 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %14, i64 %idxprom, !dbg !3555
  %call22 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx21, i32 %call) #6, !dbg !3556
  %15 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3557
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %15, i64 0, i32 17, !dbg !3559
  %16 = load i32, i32* %flags, align 8, !dbg !3559
  %and = and i32 %16, 2, !dbg !3560
  %tobool23 = icmp eq i32 %and, 0, !dbg !3560
  br i1 %tobool23, label %if.end28, label %if.then24, !dbg !3561

if.then24:                                        ; preds = %if.then
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !3562
  %arrayidx26 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %17, i64 %idxprom, !dbg !3562
  %call27 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx26, i32 %call) #6, !dbg !3563
  br label %if.end28, !dbg !3563

if.end28:                                         ; preds = %if.then, %entry, %if.then24
  %resolved_p = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %sd_it, i64 0, i32 3, !dbg !3564
  %18 = load i8, i8* %resolved_p, align 8, !dbg !3564
  call void @llvm.dbg.value(metadata %struct._deps_list** %con_back_deps, metadata !3531, metadata !DIExpression(DW_OP_deref)), !dbg !3539
  call void @llvm.dbg.value(metadata %struct._deps_list** %pro_forw_deps, metadata !3532, metadata !DIExpression(DW_OP_deref)), !dbg !3539
  call fastcc void @get_back_and_forw_lists(%struct._dep* nonnull %dep1, i8 zeroext %18, %struct._deps_list** nonnull %con_back_deps, %struct._deps_list** nonnull %pro_forw_deps) #7, !dbg !3565
  %back = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 0, !dbg !3566
  %19 = load %struct._deps_list*, %struct._deps_list** %con_back_deps, align 8, !dbg !3567
  call void @llvm.dbg.value(metadata %struct._deps_list* %19, metadata !3531, metadata !DIExpression()), !dbg !3539
  call fastcc void @remove_from_deps_list(%struct._dep_link* %back, %struct._deps_list* %19) #7, !dbg !3568
  %forw = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 2, !dbg !3569
  %20 = load %struct._deps_list*, %struct._deps_list** %pro_forw_deps, align 8, !dbg !3570
  call void @llvm.dbg.value(metadata %struct._deps_list* %20, metadata !3532, metadata !DIExpression()), !dbg !3539
  call fastcc void @remove_from_deps_list(%struct._dep_link* nonnull %forw, %struct._deps_list* %20) #7, !dbg !3571
  call fastcc void @delete_dep_node(%struct._dep_node* %2) #7, !dbg !3572
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8, !dbg !3573
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !3573
  ret void, !dbg !3573
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_from_deps_list(%struct._dep_link* %link, %struct._deps_list* %list) unnamed_addr #5 !dbg !3574 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep_link* %link, metadata !3576, metadata !DIExpression()), !dbg !3578
  call void @llvm.dbg.value(metadata %struct._deps_list* %list, metadata !3577, metadata !DIExpression()), !dbg !3578
  tail call fastcc void @detach_dep_link(%struct._dep_link* %link) #7, !dbg !3579
  %call = tail call fastcc zeroext i8 @depl_on_debug_p(%struct._dep_link* %link) #7, !dbg !3580
  %tobool = icmp eq i8 %call, 0, !dbg !3580
  br i1 %tobool, label %if.then, label %if.end, !dbg !3582

if.then:                                          ; preds = %entry
  %n_links = getelementptr inbounds %struct._deps_list, %struct._deps_list* %list, i64 0, i32 1, !dbg !3583
  %0 = load i32, i32* %n_links, align 8, !dbg !3584
  %dec = add nsw i32 %0, -1, !dbg !3584
  store i32 %dec, i32* %n_links, align 8, !dbg !3584
  br label %if.end, !dbg !3584

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3585
}

; Function Attrs: nounwind uwtable
define internal fastcc void @delete_dep_node(%struct._dep_node* %n) unnamed_addr #5 !dbg !3586 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep_node* %n, metadata !3590, metadata !DIExpression()), !dbg !3591
  %back = getelementptr inbounds %struct._dep_node, %struct._dep_node* %n, i64 0, i32 0, !dbg !3592
  %call = tail call fastcc zeroext i8 @dep_link_is_detached_p(%struct._dep_link* %back) #7, !dbg !3592
  %tobool = icmp eq i8 %call, 0, !dbg !3592
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !3592

land.lhs.true:                                    ; preds = %entry
  %forw = getelementptr inbounds %struct._dep_node, %struct._dep_node* %n, i64 0, i32 2, !dbg !3592
  %call1 = tail call fastcc zeroext i8 @dep_link_is_detached_p(%struct._dep_link* nonnull %forw) #7, !dbg !3592
  %tobool3 = icmp eq i8 %call1, 0, !dbg !3592
  br i1 %tobool3, label %cond.true, label %cond.end, !dbg !3592

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 339, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3592
  br label %cond.end, !dbg !3592

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %0 = load i32, i32* @dn_pool_diff, align 4, !dbg !3593
  %dec = add nsw i32 %0, -1, !dbg !3593
  store i32 %dec, i32* @dn_pool_diff, align 4, !dbg !3593
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @dn_pool, align 8, !dbg !3594
  %2 = bitcast %struct._dep_node* %n to i8*, !dbg !3595
  tail call void @pool_free(%struct.alloc_pool_def* %1, i8* %2) #6, !dbg !3596
  ret void, !dbg !3597
}

; Function Attrs: nounwind uwtable
define dso_local void @sd_debug_lists(%struct.rtx_def* %insn, i32 %types) local_unnamed_addr #5 !dbg !3598 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3602, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i32 %types, metadata !3603, metadata !DIExpression()), !dbg !3604
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3605
  tail call fastcc void @dump_lists(%struct._IO_FILE* %0, %struct.rtx_def* %insn, i32 %types, i32 1) #7, !dbg !3606
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3607
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3608
  ret void, !dbg !3609
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_lists(%struct._IO_FILE* %dump, %struct.rtx_def* %insn, i32 %types, i32 %flags) unnamed_addr #5 !dbg !3610 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %dump, metadata !3614, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3615, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i32 %types, metadata !3616, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i32 1, metadata !3617, metadata !DIExpression()), !dbg !3621
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !3622
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3622
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !3623
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3623
  call void @llvm.dbg.value(metadata i32 1, metadata !3620, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i32 7, metadata !3617, metadata !DIExpression()), !dbg !3621
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3624
  br i1 false, label %entry.if.end6_crit_edge, label %if.then3, !dbg !3625

entry.if.end6_crit_edge:                          ; preds = %entry
  br label %if.end6, !dbg !3625

if.then3:                                         ; preds = %entry
  %call4 = tail call i32 @sd_lists_size(%struct.rtx_def* %insn, i32 %types) #7, !dbg !3626
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 %call4) #6, !dbg !3628
  br label %if.end6, !dbg !3628

if.end6:                                          ; preds = %entry.if.end6_crit_edge, %if.then3
  br i1 false, label %if.end6.if.end14_crit_edge, label %if.then9, !dbg !3629

if.end6.if.end14_crit_edge:                       ; preds = %if.end6
  br label %if.end14, !dbg !3629

if.then9:                                         ; preds = %if.end6
  %2 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !3630
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !3630
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn, i32 %types) #7, !dbg !3630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 32, i1 false), !dbg !3630
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !3630
  br label %for.cond, !dbg !3630

for.cond:                                         ; preds = %for.body, %if.then9
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !3618, metadata !DIExpression(DW_OP_deref)), !dbg !3621
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !3619, metadata !DIExpression(DW_OP_deref)), !dbg !3621
  %call10 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !3634
  %tobool11 = icmp eq i8 %call10, 0, !dbg !3630
  br i1 %tobool11, label %if.end14.loopexit, label %for.body, !dbg !3630

for.body:                                         ; preds = %for.cond
  %3 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3636
  call void @llvm.dbg.value(metadata %struct._dep* %3, metadata !3619, metadata !DIExpression()), !dbg !3621
  call fastcc void @dump_dep(%struct._IO_FILE* %dump, %struct._dep* %3, i32 7) #7, !dbg !3638
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3639
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !3618, metadata !DIExpression(DW_OP_deref)), !dbg !3621
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !3634
  br label %for.cond, !dbg !3634, !llvm.loop !3640

if.end14.loopexit:                                ; preds = %for.cond
  br label %if.end14, !dbg !3642

if.end14:                                         ; preds = %if.end6.if.end14_crit_edge, %if.end14.loopexit
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3642
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3642
  ret void, !dbg !3642
}

; Function Attrs: nounwind uwtable
define dso_local void @haifa_note_reg_set(i32 %regno) #5 !dbg !3643 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !3645, metadata !DIExpression()), !dbg !3646
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !3647
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %regno) #6, !dbg !3647
  ret void, !dbg !3648
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @haifa_note_reg_clobber(i32 %regno) #5 !dbg !3649 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !3651, metadata !DIExpression()), !dbg !3652
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !3653
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %regno) #6, !dbg !3653
  ret void, !dbg !3654
}

; Function Attrs: nounwind uwtable
define dso_local void @haifa_note_reg_use(i32 %regno) #5 !dbg !3655 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !3657, metadata !DIExpression()), !dbg !3658
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !3659
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %regno) #6, !dbg !3659
  ret void, !dbg !3660
}

; Function Attrs: nounwind uwtable
define dso_local i32 @ds_to_dt(i32 %ds) local_unnamed_addr #5 !dbg !3661 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds, metadata !3663, metadata !DIExpression()), !dbg !3664
  %and = and i32 %ds, 16777216, !dbg !3665
  %tobool = icmp eq i32 %and, 0, !dbg !3665
  br i1 %tobool, label %if.else, label %return, !dbg !3667

if.else:                                          ; preds = %entry
  %and1 = and i32 %ds, 33554432, !dbg !3668
  %tobool2 = icmp eq i32 %and1, 0, !dbg !3668
  br i1 %tobool2, label %if.else4, label %return, !dbg !3670

if.else4:                                         ; preds = %if.else
  %and5 = and i32 %ds, 67108864, !dbg !3671
  %tobool6 = icmp eq i32 %and5, 0, !dbg !3671
  br i1 %tobool6, label %cond.true, label %return, !dbg !3671

cond.true:                                        ; preds = %if.else4
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1726, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3671
  br label %return, !dbg !3671

return:                                           ; preds = %if.else4, %if.else, %entry, %cond.true
  %retval.0 = phi i32 [ 0, %entry ], [ 11, %if.else ], [ 12, %if.else4 ], [ 12, %cond.true ], !dbg !3673
  ret i32 %retval.0, !dbg !3674
}

; Function Attrs: nounwind uwtable
define dso_local void @maybe_extend_reg_info_p() local_unnamed_addr #5 !dbg !3675 {
entry:
  %0 = load i32, i32* @max_regno, align 4, !dbg !3680
  %sub = add i32 %0, -1, !dbg !3681
  %conv = zext i32 %sub to i64, !dbg !3682
  %1 = load i64, i64* @reg_info_p_size, align 8, !dbg !3683
  %cmp = icmp ugt i64 %1, %conv, !dbg !3684
  br i1 %cmp, label %if.end, label %if.then, !dbg !3685

if.then:                                          ; preds = %entry
  %add = add nsw i32 %0, 128, !dbg !3686
  %conv2 = sext i32 %add to i64, !dbg !3687
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !3677, metadata !DIExpression()), !dbg !3688
  %2 = load i32, i32* @reload_completed, align 4, !dbg !3689
  %tobool = icmp eq i32 %2, 0, !dbg !3689
  br i1 %tobool, label %land.lhs.true, label %cond.true, !dbg !3689

land.lhs.true:                                    ; preds = %if.then
  %call = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !3689
  %tobool4 = icmp eq i8 %call, 0, !dbg !3689
  br i1 %tobool4, label %cond.true, label %cond.end, !dbg !3689

cond.true:                                        ; preds = %land.lhs.true, %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2095, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3689
  br label %cond.end, !dbg !3689

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %3 = load i8*, i8** bitcast (%struct.reg_info_t** @reg_info_p to i8**), align 8, !dbg !3690
  %4 = load i64, i64* @reg_info_p_size, align 8, !dbg !3691
  %call5 = tail call i8* @xrecalloc(i8* %3, i64 %conv2, i64 %4, i64 28) #6, !dbg !3692
  store i8* %call5, i8** bitcast (%struct.reg_info_t** @reg_info_p to i8**), align 8, !dbg !3693
  store i64 %conv2, i64* @reg_info_p_size, align 8, !dbg !3694
  br label %if.end, !dbg !3695

if.end:                                           ; preds = %entry, %cond.end
  ret void, !dbg !3696
}

declare dso_local i8* @xrecalloc(i8*, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @deps_analyze_insn(%struct.deps* %deps, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !3697 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !3724, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3725, metadata !DIExpression()), !dbg !3730
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !3731
  %start_insn = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i64 0, i32 1, !dbg !3733
  %1 = load void (%struct.rtx_def*)*, void (%struct.rtx_def*)** %start_insn, align 8, !dbg !3733
  %tobool = icmp eq void (%struct.rtx_def*)* %1, null, !dbg !3731
  br i1 %tobool, label %if.end, label %if.then, !dbg !3734

if.then:                                          ; preds = %entry
  tail call void %1(%struct.rtx_def* %insn) #6, !dbg !3735
  br label %if.end, !dbg !3735

if.end:                                           ; preds = %entry, %if.then
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3736
  %bf.load = load i32, i32* %2, align 8, !dbg !3736
  %bf.clear = and i32 %bf.load, 65535, !dbg !3736
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3736
  br i1 %cmp, label %if.then9, label %lor.lhs.false, !dbg !3737

lor.lhs.false:                                    ; preds = %if.end
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !3738
  br i1 %cmp4, label %if.then9, label %lor.lhs.false5, !dbg !3739

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !3740
  br i1 %cmp8, label %if.then9, label %if.else31, !dbg !3741

if.then9:                                         ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !3742
  %bf.load10 = load i8, i8* %readonly, align 4, !dbg !3742
  %bf.clear11 = and i8 %bf.load10, 1, !dbg !3742
  %tobool12 = icmp eq i8 %bf.clear11, 0, !dbg !3745
  br i1 %tobool12, label %land.lhs.true, label %if.end29, !dbg !3746

land.lhs.true:                                    ; preds = %if.then9
  %cmp15 = icmp eq i32 %bf.clear, 9, !dbg !3747
  br i1 %cmp15, label %land.lhs.true16, label %if.end29, !dbg !3748

land.lhs.true16:                                  ; preds = %land.lhs.true
  %call = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !3749
  %tobool17 = icmp eq i8 %call, 0, !dbg !3749
  br i1 %tobool17, label %if.then22, label %land.lhs.true18, !dbg !3750

land.lhs.true18:                                  ; preds = %land.lhs.true16
  %call19 = tail call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %insn) #6, !dbg !3751
  %tobool21 = icmp eq i8 %call19, 0, !dbg !3751
  br i1 %tobool21, label %if.then22, label %if.end29, !dbg !3752

if.then22:                                        ; preds = %land.lhs.true18, %land.lhs.true16
  %pending_flush_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 6, !dbg !3753
  %3 = load i32, i32* %pending_flush_length, align 8, !dbg !3756
  %inc = add nsw i32 %3, 1, !dbg !3756
  store i32 %inc, i32* %pending_flush_length, align 8, !dbg !3756
  %4 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3757
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %4, i64 14, i32 1, !dbg !3757
  %5 = load i32, i32* %value, align 8, !dbg !3757
  %cmp23 = icmp sgt i32 %3, %5, !dbg !3758
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !3759

if.then25:                                        ; preds = %if.then22
  tail call fastcc void @flush_pending_lists(%struct.deps* %deps, %struct.rtx_def* %insn, i32 1, i32 1) #7, !dbg !3760
  br label %if.end29, !dbg !3760

if.else:                                          ; preds = %if.then22
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 7, !dbg !3761
  %6 = load %struct.rtx_def*, %struct.rtx_def** %last_pending_memory_flush, align 8, !dbg !3761
  %call26 = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %6) #6, !dbg !3762
  store %struct.rtx_def* %call26, %struct.rtx_def** %last_pending_memory_flush, align 8, !dbg !3763
  br label %if.end29

if.end29:                                         ; preds = %land.lhs.true18, %if.then9, %if.then25, %if.else, %land.lhs.true
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3764
  %7 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3764
  %rt_rtx = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !3764
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3764
  tail call fastcc void @sched_analyze_insn(%struct.deps* %deps, %struct.rtx_def* %8, %struct.rtx_def* %insn) #7, !dbg !3765
  br label %if.end133, !dbg !3766

if.else31:                                        ; preds = %lor.lhs.false5
  %cmp34 = icmp eq i32 %bf.clear, 10, !dbg !3767
  br i1 %cmp34, label %if.then36, label %if.end133, !dbg !3768

if.then36:                                        ; preds = %if.else31
  %9 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3769
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %9, i64 0, i32 0, !dbg !3769
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3769
  %base40 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !3769
  %arrayidx46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3769
  %rt_int = bitcast %union.rtunion_def* %arrayidx46 to i32*, !dbg !3769
  %11 = load i32, i32* %rt_int, align 8, !dbg !3769
  %call47 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base40, i32 %11) #7, !dbg !3769
  %call48 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base, i32 %call47) #7, !dbg !3769
  %cant_move = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call48, i64 0, i32 7, !dbg !3769
  %bf.load49 = load i8, i8* %cant_move, align 8, !dbg !3770
  %bf.set = or i8 %bf.load49, 1, !dbg !3770
  store i8 %bf.set, i8* %cant_move, align 8, !dbg !3770
  %call51 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 30, %struct.rtx_def* null) #6, !dbg !3771
  %tobool52 = icmp eq %struct.rtx_def* %call51, null, !dbg !3771
  br i1 %tobool52, label %for.cond.preheader, label %if.then53, !dbg !3773

for.cond.preheader:                               ; preds = %if.then36
  br label %for.cond, !dbg !3774

if.then53:                                        ; preds = %if.then36
  store i32 1, i32* @reg_pending_barrier, align 4, !dbg !3777
  br label %if.end95, !dbg !3779

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !3780
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3726, metadata !DIExpression()), !dbg !3781
  %exitcond = icmp eq i64 %indvars.iv, 53, !dbg !3782
  br i1 %exitcond, label %if.end95.loopexit, label %for.body, !dbg !3774

for.body:                                         ; preds = %for.cond
  %arrayidx57 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %indvars.iv, !dbg !3784
  %12 = load i8, i8* %arrayidx57, align 1, !dbg !3784
  %tobool58 = icmp eq i8 %12, 0, !dbg !3784
  br i1 %tobool58, label %if.else61, label %if.then59, !dbg !3786

if.then59:                                        ; preds = %for.body
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !3787
  %14 = trunc i64 %indvars.iv to i32, !dbg !3787
  %call60 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %13, i32 %14) #6, !dbg !3787
  %shl = shl i64 1, %indvars.iv, !dbg !3789
  %15 = load i64, i64* @implicit_reg_pending_uses, align 8, !dbg !3789
  %or = or i64 %15, %shl, !dbg !3789
  store i64 %or, i64* @implicit_reg_pending_uses, align 8, !dbg !3789
  br label %for.inc, !dbg !3790

if.else61:                                        ; preds = %for.body
  %16 = load i64, i64* @regs_invalidated_by_call, align 8, !dbg !3791
  %shl63 = shl i64 1, %indvars.iv, !dbg !3791
  %and = and i64 %16, %shl63, !dbg !3791
  %tobool64 = icmp eq i64 %and, 0, !dbg !3791
  br i1 %tobool64, label %if.else67, label %if.then65, !dbg !3793

if.then65:                                        ; preds = %if.else61
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !3794
  %18 = trunc i64 %indvars.iv to i32, !dbg !3794
  %call66 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %17, i32 %18) #6, !dbg !3794
  br label %for.inc, !dbg !3794

if.else67:                                        ; preds = %if.else61
  %arrayidx69 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv, !dbg !3795
  %19 = load i8, i8* %arrayidx69, align 1, !dbg !3795
  %tobool70 = icmp eq i8 %19, 0, !dbg !3795
  br i1 %tobool70, label %if.else75, label %if.then71, !dbg !3797

if.then71:                                        ; preds = %if.else67
  %20 = load i64, i64* @implicit_reg_pending_uses, align 8, !dbg !3798
  %or74 = or i64 %20, %shl63, !dbg !3798
  store i64 %or74, i64* @implicit_reg_pending_uses, align 8, !dbg !3798
  br label %for.inc, !dbg !3798

if.else75:                                        ; preds = %if.else67
  %21 = trunc i64 %indvars.iv to i32, !dbg !3799
  switch i32 %21, label %for.inc [
    i32 20, label %if.then86
    i32 6, label %land.lhs.true81
  ], !dbg !3799

land.lhs.true81:                                  ; preds = %if.else75
  %22 = load i32, i32* @reload_completed, align 4, !dbg !3801
  %tobool82 = icmp eq i32 %22, 0, !dbg !3801
  br i1 %tobool82, label %if.then86, label %lor.lhs.false83, !dbg !3802

lor.lhs.false83:                                  ; preds = %land.lhs.true81
  %23 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 41), align 1, !dbg !3803
  %tobool85 = icmp eq i8 %23, 0, !dbg !3803
  br i1 %tobool85, label %for.inc, label %if.then86, !dbg !3804

if.then86:                                        ; preds = %lor.lhs.false83, %land.lhs.true81, %if.else75
  %24 = load i64, i64* @implicit_reg_pending_uses, align 8, !dbg !3805
  %or89 = or i64 %24, %shl63, !dbg !3805
  store i64 %or89, i64* @implicit_reg_pending_uses, align 8, !dbg !3805
  br label %for.inc, !dbg !3805

for.inc:                                          ; preds = %lor.lhs.false83, %if.then59, %if.then71, %if.else75, %if.then86, %if.then65
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3806
  call void @llvm.dbg.value(metadata i32 undef, metadata !3726, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3781
  br label %for.cond, !dbg !3807, !llvm.loop !3808

if.end95.loopexit:                                ; preds = %for.cond
  br label %if.end95, !dbg !3810

if.end95:                                         ; preds = %if.end95.loopexit, %if.then53
  %sched_before_next_call = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 10, !dbg !3810
  tail call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** nonnull %sched_before_next_call, i32 1, i32 12) #7, !dbg !3811
  %u96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3812
  %25 = getelementptr inbounds %union.u, %union.u* %u96, i64 1, i32 0, i32 0, i64 0, !dbg !3812
  %rt_rtx99 = bitcast %union.rtunion_def* %25 to %struct.rtx_def**, !dbg !3812
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !3812
  tail call fastcc void @sched_analyze_insn(%struct.deps* %deps, %struct.rtx_def* %26, %struct.rtx_def* %insn) #7, !dbg !3813
  %bf.load100 = load i32, i32* %2, align 8, !dbg !3814
  %bf.clear101 = and i32 %bf.load100, 268435456, !dbg !3814
  %tobool102 = icmp eq i32 %bf.clear101, 0, !dbg !3814
  br i1 %tobool102, label %cond.end105, label %cond.true103, !dbg !3814

cond.true103:                                     ; preds = %if.end95
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3310, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3814
  %bf.load107.pre = load i32, i32* %2, align 8, !dbg !3815
  br label %cond.end105, !dbg !3814

cond.end105:                                      ; preds = %if.end95, %cond.true103
  %bf.load111 = phi i32 [ %bf.load100, %if.end95 ], [ %bf.load107.pre, %cond.true103 ], !dbg !3815
  %bf.clear109 = and i32 %bf.load111, 67108864, !dbg !3815
  %tobool110 = icmp eq i32 %bf.clear109, 0, !dbg !3815
  br i1 %tobool110, label %lor.rhs, label %lor.end, !dbg !3815

lor.rhs:                                          ; preds = %cond.end105
  %bf.load111.lobit = lshr i32 %bf.load111, 31, !dbg !3815
  %bf.load111.lobit.not = xor i32 %bf.load111.lobit, 1, !dbg !3815
  br label %lor.end, !dbg !3815

lor.end:                                          ; preds = %cond.end105, %lor.rhs
  %27 = phi i32 [ 0, %cond.end105 ], [ %bf.load111.lobit.not, %lor.rhs ]
  tail call fastcc void @flush_pending_lists(%struct.deps* %deps, %struct.rtx_def* %insn, i32 1, i32 %27) #7, !dbg !3816
  %readonly114 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !3817
  %bf.load115 = load i8, i8* %readonly114, align 4, !dbg !3817
  %bf.clear116 = and i8 %bf.load115, 1, !dbg !3817
  %tobool118 = icmp eq i8 %bf.clear116, 0, !dbg !3819
  br i1 %tobool118, label %if.then119, label %if.end133, !dbg !3820

if.then119:                                       ; preds = %lor.end
  %last_function_call = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 8, !dbg !3821
  tail call void @free_INSN_LIST_list(%struct.rtx_def** nonnull %last_function_call) #6, !dbg !3823
  %call120 = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* null) #6, !dbg !3824
  store %struct.rtx_def* %call120, %struct.rtx_def** %last_function_call, align 8, !dbg !3825
  %call122 = tail call fastcc zeroext i8 @call_may_noreturn_p(%struct.rtx_def* %insn) #7, !dbg !3826
  %tobool123 = icmp eq i8 %call122, 0, !dbg !3826
  br i1 %tobool123, label %if.end127, label %if.then124, !dbg !3828

if.then124:                                       ; preds = %if.then119
  %last_function_call_may_noreturn = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 9, !dbg !3829
  tail call void @free_INSN_LIST_list(%struct.rtx_def** nonnull %last_function_call_may_noreturn) #6, !dbg !3831
  %call125 = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* null) #6, !dbg !3832
  store %struct.rtx_def* %call125, %struct.rtx_def** %last_function_call_may_noreturn, align 8, !dbg !3833
  br label %if.end127, !dbg !3834

if.end127:                                        ; preds = %if.then119, %if.then124
  %28 = load i32, i32* @reload_completed, align 4, !dbg !3835
  %tobool128 = icmp eq i32 %28, 0, !dbg !3835
  br i1 %tobool128, label %if.then129, label %if.end133, !dbg !3837

if.then129:                                       ; preds = %if.end127
  %in_post_call_group_p = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 11, !dbg !3838
  store i32 1, i32* %in_post_call_group_p, align 8, !dbg !3839
  br label %if.end133, !dbg !3840

if.end133:                                        ; preds = %if.end127, %lor.end, %if.else31, %if.then129, %if.end29
  %29 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !3841
  %use_cselib = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %29, i64 0, i32 12, !dbg !3843
  %bf.load134 = load i8, i8* %use_cselib, align 8, !dbg !3843
  %bf.clear135 = and i8 %bf.load134, 1, !dbg !3843
  %tobool137 = icmp eq i8 %bf.clear135, 0, !dbg !3841
  br i1 %tobool137, label %if.end139, label %if.then138, !dbg !3844

if.then138:                                       ; preds = %if.end133
  tail call void @cselib_process_insn(%struct.rtx_def* %insn) #6, !dbg !3845
  br label %if.end139, !dbg !3845

if.end139:                                        ; preds = %if.end133, %if.then138
  %bf.load140 = load i32, i32* %2, align 8, !dbg !3846
  %bf.clear141 = and i32 %bf.load140, 65535, !dbg !3846
  %cmp142 = icmp eq i32 %bf.clear141, 13, !dbg !3846
  br i1 %cmp142, label %if.then144, label %if.end162, !dbg !3848

if.then144:                                       ; preds = %if.end139
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3849
  %30 = getelementptr inbounds %union.u, %union.u* %u145, i64 1, i32 0, i32 0, i64 0, !dbg !3849
  %rt_int148 = bitcast %union.rtunion_def* %30 to i32*, !dbg !3849
  %31 = load i32, i32* %rt_int148, align 8, !dbg !3849
  %cmp149 = icmp eq i32 %31, 7, !dbg !3849
  br i1 %cmp149, label %cond.true158, label %land.lhs.true151, !dbg !3849

land.lhs.true151:                                 ; preds = %if.then144
  %cmp156 = icmp eq i32 %31, 8, !dbg !3849
  br i1 %cmp156, label %cond.true158, label %if.end162, !dbg !3849

cond.true158:                                     ; preds = %land.lhs.true151, %if.then144
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3347, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3849
  br label %if.end162, !dbg !3849

if.end162:                                        ; preds = %land.lhs.true151, %cond.true158, %if.end139
  %32 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !3850
  %finish_insn = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %32, i64 0, i32 2, !dbg !3852
  %33 = load void ()*, void ()** %finish_insn, align 8, !dbg !3852
  %tobool163 = icmp eq void ()* %33, null, !dbg !3850
  br i1 %tobool163, label %if.end166, label %if.then164, !dbg !3853

if.then164:                                       ; preds = %if.end162
  tail call void %33() #6, !dbg !3854
  br label %if.end166, !dbg !3854

if.end166:                                        ; preds = %if.end162, %if.then164
  %bf.load167 = load i32, i32* %2, align 8, !dbg !3855
  %bf.clear168 = and i32 %bf.load167, 65535, !dbg !3855
  %cmp169 = icmp eq i32 %bf.clear168, 8, !dbg !3855
  br i1 %cmp169, label %land.lhs.true176, label %lor.lhs.false171, !dbg !3857

lor.lhs.false171:                                 ; preds = %if.end166
  %cmp174 = icmp eq i32 %bf.clear168, 9, !dbg !3858
  br i1 %cmp174, label %land.lhs.true176, label %if.end185, !dbg !3859

land.lhs.true176:                                 ; preds = %lor.lhs.false171, %if.end166
  %bf.clear179 = and i32 %bf.load167, 268435456, !dbg !3860
  %tobool180 = icmp eq i32 %bf.clear179, 0, !dbg !3860
  br i1 %tobool180, label %if.end185, label %land.lhs.true181, !dbg !3861

land.lhs.true181:                                 ; preds = %land.lhs.true176
  %call182 = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !3862
  %tobool183 = icmp eq i8 %call182, 0, !dbg !3862
  br i1 %tobool183, label %if.then184, label %if.end185, !dbg !3863

if.then184:                                       ; preds = %land.lhs.true181
  tail call fastcc void @fixup_sched_groups(%struct.rtx_def* %insn) #7, !dbg !3864
  br label %if.end185, !dbg !3864

if.end185:                                        ; preds = %land.lhs.true181, %land.lhs.true176, %if.then184, %lor.lhs.false171
  ret void, !dbg !3865
}

; Function Attrs: nounwind uwtable
define internal fastcc void @flush_pending_lists(%struct.deps* %deps, %struct.rtx_def* %insn, i32 %for_read, i32 %for_write) unnamed_addr #5 !dbg !3866 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !3870, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3871, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %for_read, metadata !3872, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %for_write, metadata !3873, metadata !DIExpression()), !dbg !3874
  %tobool = icmp eq i32 %for_write, 0, !dbg !3875
  br i1 %tobool, label %if.end3, label %if.then, !dbg !3877

if.then:                                          ; preds = %entry
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 0, !dbg !3878
  tail call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** %pending_read_insns, i32 1, i32 12) #7, !dbg !3880
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !3881
  %bf.load = load i8, i8* %readonly, align 4, !dbg !3881
  %bf.clear = and i8 %bf.load, 1, !dbg !3881
  %tobool1 = icmp eq i8 %bf.clear, 0, !dbg !3883
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !3884

if.then2:                                         ; preds = %if.then
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 1, !dbg !3885
  tail call void @free_EXPR_LIST_list(%struct.rtx_def** nonnull %pending_read_mems) #6, !dbg !3887
  %pending_read_list_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 4, !dbg !3888
  store i32 0, i32* %pending_read_list_length, align 8, !dbg !3889
  br label %if.end3, !dbg !3890

if.end3:                                          ; preds = %if.then, %entry, %if.then2
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 2, !dbg !3891
  %tobool4 = icmp eq i32 %for_read, 0, !dbg !3892
  %cond = select i1 %tobool4, i32 11, i32 12, !dbg !3892
  tail call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** nonnull %pending_write_insns, i32 1, i32 %cond) #7, !dbg !3893
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 7, !dbg !3894
  tail call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** nonnull %last_pending_memory_flush, i32 1, i32 %cond) #7, !dbg !3895
  %readonly7 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !3896
  %bf.load8 = load i8, i8* %readonly7, align 4, !dbg !3896
  %bf.clear9 = and i8 %bf.load8, 1, !dbg !3896
  %tobool11 = icmp eq i8 %bf.clear9, 0, !dbg !3898
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !3899

if.then12:                                        ; preds = %if.end3
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 3, !dbg !3900
  tail call void @free_EXPR_LIST_list(%struct.rtx_def** nonnull %pending_write_mems) #6, !dbg !3902
  %pending_write_list_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 5, !dbg !3903
  store i32 0, i32* %pending_write_list_length, align 4, !dbg !3904
  %call = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* null) #6, !dbg !3905
  store %struct.rtx_def* %call, %struct.rtx_def** %last_pending_memory_flush, align 8, !dbg !3906
  %pending_flush_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 6, !dbg !3907
  store i32 1, i32* %pending_flush_length, align 8, !dbg !3908
  br label %if.end14, !dbg !3909

if.end14:                                         ; preds = %if.end3, %if.then12
  ret void, !dbg !3910
}

declare dso_local %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @sched_analyze_insn(%struct.deps* %deps, %struct.rtx_def* %x, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !3911 {
entry:
  %i = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  %temp = alloca i64, align 8
  %tmp_uses = alloca %struct.bitmap_head_def, align 8
  %tmp_sets = alloca %struct.bitmap_head_def, align 8
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp890 = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !3915, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3916, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3917, metadata !DIExpression()), !dbg !4031
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4032
  %bf.load = load i32, i32* %0, align 8, !dbg !4032
  %bf.clear = and i32 %bf.load, 65535, !dbg !4032
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !3918, metadata !DIExpression()), !dbg !4031
  %1 = bitcast i32* %i to i8*, !dbg !4033
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !4033
  %2 = bitcast %struct.bitmap_iterator* %rsi to i8*, !dbg !4034
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !4034
  %3 = load i32, i32* @reload_completed, align 4, !dbg !4035
  %tobool = icmp eq i32 %3, 0, !dbg !4035
  br i1 %tobool, label %if.then, label %if.end, !dbg !4036

if.then:                                          ; preds = %entry
  %4 = bitcast i64* %temp to i8*, !dbg !4037
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4037
  tail call void @extract_insn(%struct.rtx_def* %insn) #6, !dbg !4038
  tail call void @preprocess_constraints() #6, !dbg !4039
  call void @llvm.dbg.value(metadata i64* %temp, metadata !3930, metadata !DIExpression(DW_OP_deref)), !dbg !4040
  call void @ira_implicitly_set_insn_hard_regs(i64* nonnull %temp) #6, !dbg !4041
  %5 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !4042
  %neg = xor i64 %5, -1, !dbg !4042
  %6 = load i64, i64* %temp, align 8, !dbg !4042
  call void @llvm.dbg.value(metadata i64 %6, metadata !3930, metadata !DIExpression()), !dbg !4040
  %and = and i64 %6, %neg, !dbg !4042
  call void @llvm.dbg.value(metadata i64 %and, metadata !3930, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata i64 %and, metadata !3930, metadata !DIExpression()), !dbg !4040
  %7 = load i64, i64* @implicit_reg_pending_clobbers, align 8, !dbg !4043
  %or = or i64 %7, %and, !dbg !4043
  store i64 %or, i64* @implicit_reg_pending_clobbers, align 8, !dbg !4043
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4044
  br label %if.end, !dbg !4045

if.end:                                           ; preds = %entry, %if.then
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4046
  %bf.load1 = load i32, i32* %8, align 8, !dbg !4046
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4046
  %cmp = icmp eq i32 %bf.clear2, 8, !dbg !4046
  %cmp3 = icmp eq i32 %bf.clear, 23, !dbg !4047
  %spec.select = and i1 %cmp, %cmp3, !dbg !4048
  %conv = zext i1 %spec.select to i8, !dbg !4049
  store i8 %conv, i8* @can_start_lhs_rhs_p, align 1, !dbg !4050
  %call = call i32 @may_trap_p(%struct.rtx_def* %x) #6, !dbg !4051
  %tobool4 = icmp eq i32 %call, 0, !dbg !4051
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !4053

if.then5:                                         ; preds = %if.end
  %last_function_call_may_noreturn = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 9, !dbg !4054
  %9 = load %struct.rtx_def*, %struct.rtx_def** %last_function_call_may_noreturn, align 8, !dbg !4054
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %9, i32 1, i32 12) #7, !dbg !4055
  br label %if.end6, !dbg !4055

if.end6:                                          ; preds = %if.end, %if.then5
  %cmp7 = icmp eq i32 %bf.clear, 14, !dbg !4056
  br i1 %cmp7, label %if.then9, label %if.end16, !dbg !4058

if.then9:                                         ; preds = %if.end6
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4059
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4059
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4059
  call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %10, %struct.rtx_def* %insn) #7, !dbg !4061
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4062
  %rt_rtx13 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !4062
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !4062
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !3916, metadata !DIExpression()), !dbg !4031
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 0, !dbg !4063
  %bf.load14 = load i32, i32* %13, align 8, !dbg !4063
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !4063
  call void @llvm.dbg.value(metadata i32 %bf.clear15, metadata !3918, metadata !DIExpression()), !dbg !4031
  br label %if.end16, !dbg !4064

if.end16:                                         ; preds = %if.then9, %if.end6
  %code.0 = phi i32 [ %bf.clear15, %if.then9 ], [ %bf.clear, %if.end6 ], !dbg !4031
  %x.addr.0 = phi %struct.rtx_def* [ %12, %if.then9 ], [ %x, %if.end6 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !3916, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !3918, metadata !DIExpression()), !dbg !4031
  %trunc = trunc i32 %code.0 to i16, !dbg !4065
  switch i16 %trunc, label %if.else62 [
    i16 23, label %if.then21
    i16 25, label %if.then21
    i16 15, label %if.then28
  ], !dbg !4065

if.then21:                                        ; preds = %if.end16, %if.end16
  call fastcc void @sched_analyze_1(%struct.deps* %deps, %struct.rtx_def* %x.addr.0, %struct.rtx_def* %insn) #7, !dbg !4066
  %cmp22 = icmp eq i32 %code.0, 25, !dbg !4068
  br i1 %cmp22, label %if.then24, label %if.end64, !dbg !4070

if.then24:                                        ; preds = %if.then21
  %last_function_call = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 8, !dbg !4071
  %14 = load %struct.rtx_def*, %struct.rtx_def** %last_function_call, align 8, !dbg !4071
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %14, i32 1, i32 11) #7, !dbg !4072
  br label %if.end64, !dbg !4072

if.then28:                                        ; preds = %if.end16
  %arrayidx31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4073
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtvec_def**, !dbg !4073
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4073
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i64 0, i32 0, !dbg !4073
  %16 = load i32, i32* %num_elem, align 8, !dbg !4073
  call void @llvm.dbg.value(metadata i32 %16, metadata !3920, metadata !DIExpression()), !dbg !4031
  store i32 %16, i32* %i, align 4, !dbg !4074
  br label %for.cond, !dbg !4075

for.cond:                                         ; preds = %if.end61, %if.then28
  %17 = phi i32 [ %.pre, %if.end61 ], [ %16, %if.then28 ], !dbg !4076
  call void @llvm.dbg.value(metadata i32 %17, metadata !3920, metadata !DIExpression()), !dbg !4031
  %dec = add i32 %17, -1, !dbg !4076
  call void @llvm.dbg.value(metadata i32 %dec, metadata !3920, metadata !DIExpression()), !dbg !4031
  store i32 %dec, i32* %i, align 4, !dbg !4076
  %tobool32 = icmp eq i32 %17, 0, !dbg !4077
  br i1 %tobool32, label %if.end64.loopexit, label %for.body, !dbg !4077

for.body:                                         ; preds = %for.cond
  %18 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %dec, metadata !3920, metadata !DIExpression()), !dbg !4031
  %idxprom = zext i32 %dec to i64, !dbg !4078
  %arrayidx37 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %18, i64 0, i32 1, i64 %idxprom, !dbg !4078
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx37, align 8, !dbg !4078
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !3933, metadata !DIExpression()), !dbg !4079
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !4080
  %bf.load38 = load i32, i32* %20, align 8, !dbg !4080
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !4080
  call void @llvm.dbg.value(metadata i32 %bf.clear39, metadata !3918, metadata !DIExpression()), !dbg !4031
  %cmp40 = icmp eq i32 %bf.clear39, 14, !dbg !4081
  br i1 %cmp40, label %if.then42, label %if.end53, !dbg !4083

if.then42:                                        ; preds = %for.body
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4084
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !4084
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !4084
  call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %21, %struct.rtx_def* %insn) #7, !dbg !4086
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4087
  %rt_rtx50 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !4087
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !4087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !3933, metadata !DIExpression()), !dbg !4079
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 0, !dbg !4088
  %bf.load51 = load i32, i32* %24, align 8, !dbg !4088
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %bf.clear52, metadata !3918, metadata !DIExpression()), !dbg !4031
  br label %if.end53, !dbg !4089

if.end53:                                         ; preds = %if.then42, %for.body
  %sub.0 = phi %struct.rtx_def* [ %23, %if.then42 ], [ %19, %for.body ], !dbg !4079
  %code.1 = phi i32 [ %bf.clear52, %if.then42 ], [ %bf.clear39, %for.body ], !dbg !4079
  call void @llvm.dbg.value(metadata i32 %code.1, metadata !3918, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.rtx_def* %sub.0, metadata !3933, metadata !DIExpression()), !dbg !4079
  %trunc7 = trunc i32 %code.1 to i16, !dbg !4090
  switch i16 %trunc7, label %if.else60 [
    i16 23, label %if.then59
    i16 25, label %if.then59
  ], !dbg !4090

if.then59:                                        ; preds = %if.end53, %if.end53
  call fastcc void @sched_analyze_1(%struct.deps* %deps, %struct.rtx_def* %sub.0, %struct.rtx_def* %insn) #7, !dbg !4092
  br label %if.end61, !dbg !4092

if.else60:                                        ; preds = %if.end53
  call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %sub.0, %struct.rtx_def* %insn) #7, !dbg !4093
  br label %if.end61

if.end61:                                         ; preds = %if.else60, %if.then59
  %.pre = load i32, i32* %i, align 4, !dbg !4076
  br label %for.cond, !dbg !4094, !llvm.loop !4095

if.else62:                                        ; preds = %if.end16
  call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %x.addr.0, %struct.rtx_def* %insn) #7, !dbg !4097
  br label %if.end64

if.end64.loopexit:                                ; preds = %for.cond
  br label %if.end64, !dbg !4098

if.end64:                                         ; preds = %if.end64.loopexit, %if.else62, %if.then21, %if.then24
  %bf.load65 = load i32, i32* %8, align 8, !dbg !4098
  %bf.clear66 = and i32 %bf.load65, 65535, !dbg !4098
  %cmp67 = icmp eq i32 %bf.clear66, 10, !dbg !4098
  br i1 %cmp67, label %if.then69, label %if.end105, !dbg !4100

if.then69:                                        ; preds = %if.end64
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4101
  %arrayidx72 = getelementptr inbounds %union.u, %union.u* %u70, i64 1, i32 0, i32 1, !dbg !4101
  %rt_rtx73 = bitcast %struct.object_block** %arrayidx72 to %struct.rtx_def**, !dbg !4101
  br label %for.cond74, !dbg !4104

for.cond74:                                       ; preds = %for.inc, %if.then69
  %link.0.in = phi %struct.rtx_def** [ %rt_rtx73, %if.then69 ], [ %rt_rtx99, %for.inc ]
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !4105
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !3919, metadata !DIExpression()), !dbg !4031
  %tobool75 = icmp eq %struct.rtx_def* %link.0, null, !dbg !4106
  br i1 %tobool75, label %for.end100, label %for.body76, !dbg !4106

for.body76:                                       ; preds = %for.cond74
  %arrayidx79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4107
  %25 = bitcast %union.rtunion_def* %arrayidx79 to i32**, !dbg !4107
  %26 = load i32*, i32** %25, align 8, !dbg !4107
  %bf.load81 = load i32, i32* %26, align 8, !dbg !4107
  %bf.clear82 = and i32 %bf.load81, 65535, !dbg !4107
  %cmp83 = icmp eq i32 %bf.clear82, 25, !dbg !4111
  %.cast = bitcast i32* %26 to %struct.rtx_def*, !dbg !4112
  br i1 %cmp83, label %if.then85, label %if.else90, !dbg !4113

if.then85:                                        ; preds = %for.body76
  call fastcc void @sched_analyze_1(%struct.deps* %deps, %struct.rtx_def* %.cast, %struct.rtx_def* %insn) #7, !dbg !4114
  br label %for.inc, !dbg !4114

if.else90:                                        ; preds = %for.body76
  call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %.cast, %struct.rtx_def* %insn) #7, !dbg !4115
  br label %for.inc

for.inc:                                          ; preds = %if.then85, %if.else90
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4116
  %rt_rtx99 = bitcast %union.rtunion_def* %27 to %struct.rtx_def**, !dbg !4116
  br label %for.cond74, !dbg !4117, !llvm.loop !4118

for.end100:                                       ; preds = %for.cond74
  %call101 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 30, %struct.rtx_def* null) #6, !dbg !4120
  %tobool102 = icmp eq %struct.rtx_def* %call101, null, !dbg !4120
  br i1 %tobool102, label %if.end105, label %if.then103, !dbg !4122

if.then103:                                       ; preds = %for.end100
  store i32 1, i32* @reg_pending_barrier, align 4, !dbg !4123
  br label %if.end105, !dbg !4124

if.end105:                                        ; preds = %for.end100, %if.then103, %if.end64
  %bf.load106 = load i32, i32* %8, align 8, !dbg !4125
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !4125
  %cmp108 = icmp eq i32 %bf.clear107, 9, !dbg !4125
  br i1 %cmp108, label %if.then110, label %if.end206, !dbg !4126

if.then110:                                       ; preds = %if.end105
  %call111 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn) #6, !dbg !4127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call111, metadata !3940, metadata !DIExpression()), !dbg !4128
  br label %while.cond, !dbg !4129

while.cond:                                       ; preds = %while.body, %if.then110
  %next.0 = phi %struct.rtx_def* [ %call111, %if.then110 ], [ %call120, %while.body ], !dbg !4128
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !3940, metadata !DIExpression()), !dbg !4128
  %cond3 = icmp eq %struct.rtx_def* %next.0, null, !dbg !4130
  br i1 %cond3, label %if.else127.loopexit, label %land.rhs113, !dbg !4130

land.rhs113:                                      ; preds = %while.cond
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 0, !dbg !4131
  %bf.load114 = load i32, i32* %28, align 8, !dbg !4131
  %bf.clear115 = and i32 %bf.load114, 65535, !dbg !4131
  %cmp116 = icmp eq i32 %bf.clear115, 7, !dbg !4131
  br i1 %cmp116, label %while.body, label %while.end, !dbg !4129

while.body:                                       ; preds = %land.rhs113
  %call120 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* nonnull %next.0) #6, !dbg !4132
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call120, metadata !3940, metadata !DIExpression()), !dbg !4128
  br label %while.cond, !dbg !4129, !llvm.loop !4133

while.end:                                        ; preds = %land.rhs113
  %bf.clear115.lcssa = phi i32 [ %bf.clear115, %land.rhs113 ], !dbg !4131
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !3940, metadata !DIExpression()), !dbg !4128
  %cmp124 = icmp eq i32 %bf.clear115.lcssa, 11, !dbg !4135
  br i1 %cmp124, label %if.then126, label %if.else127, !dbg !4136

if.then126:                                       ; preds = %while.end
  store i32 1, i32* @reg_pending_barrier, align 4, !dbg !4137
  br label %if.end206, !dbg !4138

if.else127.loopexit:                              ; preds = %while.cond
  br label %if.else127, !dbg !4139

if.else127:                                       ; preds = %if.else127.loopexit, %while.end
  %29 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !4139
  %compute_jump_reg_dependencies = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %29, i64 0, i32 0, !dbg !4140
  %30 = load void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)*, void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)** %compute_jump_reg_dependencies, align 8, !dbg !4140
  %tobool128 = icmp eq void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)* %30, null, !dbg !4139
  br i1 %tobool128, label %if.end148, label %if.then129, !dbg !4141

if.then129:                                       ; preds = %if.else127
  %31 = bitcast %struct.bitmap_head_def* %tmp_uses to i8*, !dbg !4142
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #8, !dbg !4142
  %32 = bitcast %struct.bitmap_head_def* %tmp_sets to i8*, !dbg !4142
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #8, !dbg !4142
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_uses, metadata !3947, metadata !DIExpression(DW_OP_deref)), !dbg !4143
  call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* nonnull %tmp_uses, %struct.bitmap_obstack* nonnull @reg_obstack) #7, !dbg !4144
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_sets, metadata !3950, metadata !DIExpression(DW_OP_deref)), !dbg !4143
  call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* nonnull %tmp_sets, %struct.bitmap_obstack* nonnull @reg_obstack) #7, !dbg !4145
  %33 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !4146
  %compute_jump_reg_dependencies130 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %33, i64 0, i32 0, !dbg !4147
  %34 = load void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)*, void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)** %compute_jump_reg_dependencies130, align 8, !dbg !4147
  %reg_conditional_sets = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 16, !dbg !4148
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_uses, metadata !3947, metadata !DIExpression(DW_OP_deref)), !dbg !4143
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_sets, metadata !3950, metadata !DIExpression(DW_OP_deref)), !dbg !4143
  call void %34(%struct.rtx_def* %insn, %struct.bitmap_head_def* nonnull %reg_conditional_sets, %struct.bitmap_head_def* nonnull %tmp_uses, %struct.bitmap_head_def* nonnull %tmp_sets) #6, !dbg !4149
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_uses, metadata !3947, metadata !DIExpression(DW_OP_deref)), !dbg !4143
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* nonnull %tmp_uses, i32 0, i32* nonnull %i) #7, !dbg !4150
  %reg_last135 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 14, !dbg !4151
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !4152
  br label %for.cond131, !dbg !4150

for.cond131:                                      ; preds = %for.inc145, %if.then129
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  %call132 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4154
  %tobool133 = icmp eq i8 %call132, 0, !dbg !4150
  br i1 %tobool133, label %for.end146, label %for.body134, !dbg !4150

for.body134:                                      ; preds = %for.cond131
  %35 = load %struct.deps_reg*, %struct.deps_reg** %reg_last135, align 8, !dbg !4155
  %36 = load i32, i32* %i, align 4, !dbg !4156
  call void @llvm.dbg.value(metadata i32 %36, metadata !3920, metadata !DIExpression()), !dbg !4031
  %idxprom136 = zext i32 %36 to i64, !dbg !4157
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3951, metadata !DIExpression()), !dbg !4151
  %sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %35, i64 %idxprom136, i32 1, !dbg !4158
  %37 = load %struct.rtx_def*, %struct.rtx_def** %sets, align 8, !dbg !4158
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %37, i32 0, i32 12) #7, !dbg !4159
  %implicit_sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %35, i64 %idxprom136, i32 2, !dbg !4160
  %38 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets, align 8, !dbg !4160
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %38, i32 0, i32 12) #7, !dbg !4161
  %clobbers = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %35, i64 %idxprom136, i32 3, !dbg !4162
  %39 = load %struct.rtx_def*, %struct.rtx_def** %clobbers, align 8, !dbg !4162
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %39, i32 0, i32 12) #7, !dbg !4163
  %bf.load138 = load i8, i8* %readonly, align 4, !dbg !4164
  %bf.clear139 = and i8 %bf.load138, 1, !dbg !4164
  %tobool140 = icmp eq i8 %bf.clear139, 0, !dbg !4165
  br i1 %tobool140, label %if.then141, label %for.inc145, !dbg !4166

if.then141:                                       ; preds = %for.body134
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3951, metadata !DIExpression()), !dbg !4151
  %uses_length = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %35, i64 %idxprom136, i32 4, !dbg !4167
  %40 = load i32, i32* %uses_length, align 8, !dbg !4169
  %inc = add nsw i32 %40, 1, !dbg !4169
  store i32 %inc, i32* %uses_length, align 8, !dbg !4169
  %uses = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %35, i64 %idxprom136, i32 0, !dbg !4170
  %41 = load %struct.rtx_def*, %struct.rtx_def** %uses, align 8, !dbg !4170
  %call142 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %41) #6, !dbg !4171
  store %struct.rtx_def* %call142, %struct.rtx_def** %uses, align 8, !dbg !4172
  br label %for.inc145, !dbg !4173

for.inc145:                                       ; preds = %for.body134, %if.then141
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4154
  br label %for.cond131, !dbg !4154, !llvm.loop !4174

for.end146:                                       ; preds = %for.cond131
  %42 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !4176
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_sets, metadata !3950, metadata !DIExpression(DW_OP_deref)), !dbg !4143
  %call147 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %42, %struct.bitmap_head_def* nonnull %tmp_sets) #6, !dbg !4176
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_uses, metadata !3947, metadata !DIExpression(DW_OP_deref)), !dbg !4143
  call void @bitmap_clear(%struct.bitmap_head_def* nonnull %tmp_uses) #6, !dbg !4177
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_sets, metadata !3950, metadata !DIExpression(DW_OP_deref)), !dbg !4143
  call void @bitmap_clear(%struct.bitmap_head_def* nonnull %tmp_sets) #6, !dbg !4178
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #8, !dbg !4179
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #8, !dbg !4179
  br label %if.end148, !dbg !4180

if.end148:                                        ; preds = %if.else127, %for.end146
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 2, !dbg !4181
  br label %while.cond149, !dbg !4182

while.cond149:                                    ; preds = %if.end163, %if.end148
  %pending.0.in = phi %struct.rtx_def** [ %pending_write_insns, %if.end148 ], [ %rt_rtx167, %if.end163 ]
  %pending.0 = load %struct.rtx_def*, %struct.rtx_def** %pending.0.in, align 8, !dbg !4183
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending.0, metadata !3943, metadata !DIExpression()), !dbg !4183
  %tobool150 = icmp eq %struct.rtx_def* %pending.0, null, !dbg !4182
  br i1 %tobool150, label %while.end172, label %while.body151, !dbg !4182

while.body151:                                    ; preds = %while.cond149
  %arrayidx154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4184
  %rt_rtx155 = bitcast %union.rtunion_def* %arrayidx154 to %struct.rtx_def**, !dbg !4184
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx155, align 8, !dbg !4184
  %call156 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn, %struct.rtx_def* %43) #7, !dbg !4187
  %tobool157 = icmp eq i8 %call156, 0, !dbg !4187
  br i1 %tobool157, label %if.then158, label %if.end163, !dbg !4188

if.then158:                                       ; preds = %while.body151
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx155, align 8, !dbg !4189
  call void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* %44, i32 11) #7, !dbg !4190
  br label %if.end163, !dbg !4190

if.end163:                                        ; preds = %while.body151, %if.then158
  %45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4191
  %rt_rtx167 = bitcast %union.rtunion_def* %45 to %struct.rtx_def**, !dbg !4191
  br label %while.cond149, !dbg !4182, !llvm.loop !4192

while.end172:                                     ; preds = %while.cond149
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 0, !dbg !4194
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 1, !dbg !4195
  br label %while.cond173, !dbg !4196

while.cond173:                                    ; preds = %if.end195, %while.end172
  %pending_mem.1.in = phi %struct.rtx_def** [ %pending_read_mems, %while.end172 ], [ %rt_rtx203, %if.end195 ]
  %pending.1.in = phi %struct.rtx_def** [ %pending_read_insns, %while.end172 ], [ %rt_rtx199, %if.end195 ]
  %pending.1 = load %struct.rtx_def*, %struct.rtx_def** %pending.1.in, align 8, !dbg !4183
  %pending_mem.1 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem.1.in, align 8, !dbg !4183
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending.1, metadata !3943, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending_mem.1, metadata !3946, metadata !DIExpression()), !dbg !4183
  %tobool174 = icmp eq %struct.rtx_def* %pending.1, null, !dbg !4196
  br i1 %tobool174, label %while.end204, label %while.body175, !dbg !4196

while.body175:                                    ; preds = %while.cond173
  %arrayidx178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending_mem.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4197
  %46 = bitcast %union.rtunion_def* %arrayidx178 to i32**, !dbg !4197
  %47 = load i32*, i32** %46, align 8, !dbg !4197
  %bf.load180 = load i32, i32* %47, align 8, !dbg !4197
  %bf.clear181 = and i32 %bf.load180, 134217728, !dbg !4197
  %tobool182 = icmp eq i32 %bf.clear181, 0, !dbg !4197
  br i1 %tobool182, label %if.end195, label %land.lhs.true183, !dbg !4200

land.lhs.true183:                                 ; preds = %while.body175
  %arrayidx186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4201
  %rt_rtx187 = bitcast %union.rtunion_def* %arrayidx186 to %struct.rtx_def**, !dbg !4201
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx187, align 8, !dbg !4201
  %call188 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn, %struct.rtx_def* %48) #7, !dbg !4202
  %tobool189 = icmp eq i8 %call188, 0, !dbg !4202
  br i1 %tobool189, label %if.then190, label %if.end195, !dbg !4203

if.then190:                                       ; preds = %land.lhs.true183
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx187, align 8, !dbg !4204
  call void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* %49, i32 11) #7, !dbg !4205
  br label %if.end195, !dbg !4205

if.end195:                                        ; preds = %land.lhs.true183, %while.body175, %if.then190
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4206
  %rt_rtx199 = bitcast %union.rtunion_def* %50 to %struct.rtx_def**, !dbg !4206
  %51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending_mem.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4207
  %rt_rtx203 = bitcast %union.rtunion_def* %51 to %struct.rtx_def**, !dbg !4207
  br label %while.cond173, !dbg !4196, !llvm.loop !4208

while.end204:                                     ; preds = %while.cond173
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 7, !dbg !4210
  %52 = load %struct.rtx_def*, %struct.rtx_def** %last_pending_memory_flush, align 8, !dbg !4210
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %52, i32 1, i32 12) #7, !dbg !4211
  br label %if.end206

if.end206:                                        ; preds = %if.then126, %while.end204, %if.end105
  %bf.load207 = load i32, i32* %8, align 8, !dbg !4212
  %bf.clear208 = and i32 %bf.load207, 65535, !dbg !4212
  %cmp209 = icmp eq i32 %bf.clear208, 10, !dbg !4212
  br i1 %cmp209, label %land.lhs.true216, label %lor.lhs.false211, !dbg !4214

lor.lhs.false211:                                 ; preds = %if.end206
  %cmp214 = icmp eq i32 %bf.clear208, 9, !dbg !4215
  br i1 %cmp214, label %land.lhs.true216, label %lor.lhs.false220, !dbg !4216

land.lhs.true216:                                 ; preds = %lor.lhs.false211, %if.end206
  %call217 = call zeroext i8 @can_throw_internal(%struct.rtx_def* %insn) #6, !dbg !4217
  %tobool219 = icmp eq i8 %call217, 0, !dbg !4217
  br i1 %tobool219, label %land.lhs.true216.lor.lhs.false220_crit_edge, label %if.then229, !dbg !4218

land.lhs.true216.lor.lhs.false220_crit_edge:      ; preds = %land.lhs.true216
  %bf.load221.pre = load i32, i32* %8, align 8, !dbg !4219
  br label %lor.lhs.false220, !dbg !4218

lor.lhs.false220:                                 ; preds = %land.lhs.true216.lor.lhs.false220_crit_edge, %lor.lhs.false211
  %bf.load221 = phi i32 [ %bf.load221.pre, %land.lhs.true216.lor.lhs.false220_crit_edge ], [ %bf.load207, %lor.lhs.false211 ], !dbg !4219
  %bf.clear222 = and i32 %bf.load221, 65535, !dbg !4219
  %cmp223 = icmp eq i32 %bf.clear222, 8, !dbg !4219
  br i1 %cmp223, label %land.lhs.true225, label %if.end230, !dbg !4220

land.lhs.true225:                                 ; preds = %lor.lhs.false220
  %call226 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %insn) #6, !dbg !4221
  %tobool228 = icmp eq i8 %call226, 0, !dbg !4221
  br i1 %tobool228, label %if.end230, label %if.then229, !dbg !4222

if.then229:                                       ; preds = %land.lhs.true216, %land.lhs.true225
  store i32 1, i32* @reg_pending_barrier, align 4, !dbg !4223
  br label %if.end230, !dbg !4224

if.end230:                                        ; preds = %land.lhs.true225, %if.then229, %lor.lhs.false220
  %53 = load i8, i8* @sched_pressure_p, align 1, !dbg !4225
  %tobool231 = icmp eq i8 %53, 0, !dbg !4225
  br i1 %tobool231, label %if.end233, label %if.then232, !dbg !4227

if.then232:                                       ; preds = %if.end230
  call fastcc void @setup_insn_reg_uses(%struct.deps* %deps, %struct.rtx_def* %insn) #7, !dbg !4228
  call fastcc void @setup_insn_reg_pressure_info(%struct.rtx_def* %insn) #7, !dbg !4230
  br label %if.end233, !dbg !4231

if.end233:                                        ; preds = %if.end230, %if.then232
  %bf.load234 = load i32, i32* %8, align 8, !dbg !4232
  %bf.clear235 = and i32 %bf.load234, 65535, !dbg !4232
  %cmp236 = icmp eq i32 %bf.clear235, 7, !dbg !4232
  br i1 %cmp236, label %if.then238, label %if.else333, !dbg !4233

if.then238:                                       ; preds = %if.end233
  %last_debug_insn = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 12, !dbg !4234
  %54 = load %struct.rtx_def*, %struct.rtx_def** %last_debug_insn, align 8, !dbg !4234
  call void @llvm.dbg.value(metadata %struct.rtx_def* %54, metadata !3955, metadata !DIExpression()), !dbg !4235
  %readonly240 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !4236
  %bf.load241 = load i8, i8* %readonly240, align 4, !dbg !4236
  %bf.clear242 = and i8 %bf.load241, 1, !dbg !4236
  %tobool244 = icmp eq i8 %bf.clear242, 0, !dbg !4238
  br i1 %tobool244, label %if.then245, label %if.end247, !dbg !4239

if.then245:                                       ; preds = %if.then238
  store %struct.rtx_def* %insn, %struct.rtx_def** %last_debug_insn, align 8, !dbg !4240
  br label %if.end247, !dbg !4241

if.end247:                                        ; preds = %if.then238, %if.then245
  %tobool248 = icmp eq %struct.rtx_def* %54, null, !dbg !4242
  br i1 %tobool248, label %if.end250, label %if.then249, !dbg !4244

if.then249:                                       ; preds = %if.end247
  call void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* nonnull %54, i32 12) #7, !dbg !4245
  br label %if.end250, !dbg !4245

if.end250:                                        ; preds = %if.end247, %if.then249
  %last_function_call251 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 8, !dbg !4246
  %55 = load %struct.rtx_def*, %struct.rtx_def** %last_function_call251, align 8, !dbg !4246
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %55, i32 1, i32 12) #7, !dbg !4247
  %last_pending_memory_flush252 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 7, !dbg !4248
  br label %for.cond253, !dbg !4250

for.cond253:                                      ; preds = %for.inc273, %if.end250
  %u239.0.in = phi %struct.rtx_def** [ %last_pending_memory_flush252, %if.end250 ], [ %rt_rtx277, %for.inc273 ]
  %u239.0 = load %struct.rtx_def*, %struct.rtx_def** %u239.0.in, align 8, !dbg !4251
  call void @llvm.dbg.value(metadata %struct.rtx_def* %u239.0, metadata !3958, metadata !DIExpression()), !dbg !4235
  %tobool254 = icmp eq %struct.rtx_def* %u239.0, null, !dbg !4252
  br i1 %tobool254, label %for.end278, label %for.body255, !dbg !4252

for.body255:                                      ; preds = %for.cond253
  %arrayidx258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %u239.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4253
  %56 = bitcast %union.rtunion_def* %arrayidx258 to i32**, !dbg !4253
  %57 = load i32*, i32** %56, align 8, !dbg !4253
  %bf.load260 = load i32, i32* %57, align 8, !dbg !4253
  %bf.clear261 = and i32 %bf.load260, 65535, !dbg !4253
  %cmp262 = icmp eq i32 %bf.clear261, 9, !dbg !4253
  br i1 %cmp262, label %lor.lhs.false264, label %for.body255.if.then267_crit_edge, !dbg !4256

for.body255.if.then267_crit_edge:                 ; preds = %for.body255
  %58 = bitcast i32* %57 to %struct.rtx_def*, !dbg !4256
  br label %if.then267, !dbg !4256

lor.lhs.false264:                                 ; preds = %for.body255
  %call265 = call fastcc zeroext i8 @sel_sched_p() #7, !dbg !4257
  %tobool266 = icmp eq i8 %call265, 0, !dbg !4257
  br i1 %tobool266, label %lor.lhs.false264.if.then267_crit_edge, label %for.inc273, !dbg !4258

lor.lhs.false264.if.then267_crit_edge:            ; preds = %lor.lhs.false264
  %rt_rtx271.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx258 to %struct.rtx_def**, !dbg !4259
  %.pre13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx271.phi.trans.insert, align 8, !dbg !4260
  br label %if.then267, !dbg !4258

if.then267:                                       ; preds = %for.body255.if.then267_crit_edge, %lor.lhs.false264.if.then267_crit_edge
  %59 = phi %struct.rtx_def* [ %.pre13, %lor.lhs.false264.if.then267_crit_edge ], [ %58, %for.body255.if.then267_crit_edge ], !dbg !4260
  call void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* %59, i32 12) #7, !dbg !4261
  br label %for.inc273, !dbg !4261

for.inc273:                                       ; preds = %lor.lhs.false264, %if.then267
  %60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %u239.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4262
  %rt_rtx277 = bitcast %union.rtunion_def* %60 to %struct.rtx_def**, !dbg !4262
  br label %for.cond253, !dbg !4263, !llvm.loop !4264

for.end278:                                       ; preds = %for.cond253
  %61 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !4266
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* %61, i32 0, i32* nonnull %i) #7, !dbg !4266
  %reg_last284 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 14, !dbg !4267
  br label %for.cond279, !dbg !4266

for.cond279:                                      ; preds = %for.inc299, %for.end278
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  %call280 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4268
  %tobool281 = icmp eq i8 %call280, 0, !dbg !4266
  br i1 %tobool281, label %for.end300, label %for.body282, !dbg !4266

for.body282:                                      ; preds = %for.cond279
  %62 = load %struct.deps_reg*, %struct.deps_reg** %reg_last284, align 8, !dbg !4269
  %63 = load i32, i32* %i, align 4, !dbg !4270
  call void @llvm.dbg.value(metadata i32 %63, metadata !3920, metadata !DIExpression()), !dbg !4031
  %idxprom285 = zext i32 %63 to i64, !dbg !4271
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3959, metadata !DIExpression()), !dbg !4267
  %sets287 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %62, i64 %idxprom285, i32 1, !dbg !4272
  %64 = load %struct.rtx_def*, %struct.rtx_def** %sets287, align 8, !dbg !4272
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %64, i32 1, i32 12) #7, !dbg !4273
  %clobbers288 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %62, i64 %idxprom285, i32 3, !dbg !4274
  %65 = load %struct.rtx_def*, %struct.rtx_def** %clobbers288, align 8, !dbg !4274
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %65, i32 1, i32 12) #7, !dbg !4275
  %bf.load290 = load i8, i8* %readonly240, align 4, !dbg !4276
  %bf.clear291 = and i8 %bf.load290, 1, !dbg !4276
  %tobool293 = icmp eq i8 %bf.clear291, 0, !dbg !4278
  br i1 %tobool293, label %if.then294, label %for.inc299, !dbg !4279

if.then294:                                       ; preds = %for.body282
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3959, metadata !DIExpression()), !dbg !4267
  %uses295 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %62, i64 %idxprom285, i32 0, !dbg !4280
  %66 = load %struct.rtx_def*, %struct.rtx_def** %uses295, align 8, !dbg !4280
  %call296 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %66) #6, !dbg !4281
  store %struct.rtx_def* %call296, %struct.rtx_def** %uses295, align 8, !dbg !4282
  br label %for.inc299, !dbg !4283

for.inc299:                                       ; preds = %for.body282, %if.then294
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4268
  br label %for.cond279, !dbg !4268, !llvm.loop !4284

for.end300:                                       ; preds = %for.cond279
  %67 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !4286
  call void @bitmap_clear(%struct.bitmap_head_def* %67) #6, !dbg !4286
  %68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4287
  %rt_rtx304 = bitcast %union.rtunion_def* %68 to %struct.rtx_def**, !dbg !4287
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx304, align 8, !dbg !4287
  call void @llvm.dbg.value(metadata %struct.rtx_def* %69, metadata !3955, metadata !DIExpression()), !dbg !4235
  %tobool305 = icmp eq %struct.rtx_def* %69, null, !dbg !4288
  br i1 %tobool305, label %if.end526, label %land.lhs.true306, !dbg !4290

land.lhs.true306:                                 ; preds = %for.end300
  %70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i64 0, i32 0, !dbg !4291
  %bf.load307 = load i32, i32* %70, align 8, !dbg !4291
  %bf.clear308 = and i32 %bf.load307, 65535, !dbg !4291
  %cmp309 = icmp eq i32 %bf.clear308, 8, !dbg !4291
  br i1 %cmp309, label %land.lhs.true326, label %lor.lhs.false311, !dbg !4291

lor.lhs.false311:                                 ; preds = %land.lhs.true306
  %cmp314 = icmp eq i32 %bf.clear308, 7, !dbg !4291
  br i1 %cmp314, label %land.lhs.true326, label %lor.lhs.false316, !dbg !4291

lor.lhs.false316:                                 ; preds = %lor.lhs.false311
  %cmp319 = icmp eq i32 %bf.clear308, 9, !dbg !4291
  br i1 %cmp319, label %land.lhs.true326, label %lor.lhs.false321, !dbg !4291

lor.lhs.false321:                                 ; preds = %lor.lhs.false316
  %cmp324 = icmp eq i32 %bf.clear308, 10, !dbg !4291
  br i1 %cmp324, label %land.lhs.true326, label %if.end526, !dbg !4291

land.lhs.true326:                                 ; preds = %lor.lhs.false321, %lor.lhs.false316, %lor.lhs.false311, %land.lhs.true306
  %cmp329 = icmp eq i32 %bf.clear308, 7, !dbg !4291
  br i1 %cmp329, label %if.end526, label %if.then331, !dbg !4292

if.then331:                                       ; preds = %land.lhs.true326
  call void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* nonnull %69, i32 12) #7, !dbg !4293
  br label %if.end526, !dbg !4293

if.else333:                                       ; preds = %if.end233
  %71 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !4294
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* %71, i32 0, i32* nonnull %i) #7, !dbg !4294
  %reg_last339 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 14, !dbg !4295
  %readonly345 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !4296
  br label %for.cond334, !dbg !4294

for.cond334:                                      ; preds = %for.inc357, %if.else333
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  %call335 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4298
  %tobool336 = icmp eq i8 %call335, 0, !dbg !4294
  br i1 %tobool336, label %for.end358, label %for.body337, !dbg !4294

for.body337:                                      ; preds = %for.cond334
  %72 = load %struct.deps_reg*, %struct.deps_reg** %reg_last339, align 8, !dbg !4299
  %73 = load i32, i32* %i, align 4, !dbg !4300
  call void @llvm.dbg.value(metadata i32 %73, metadata !3920, metadata !DIExpression()), !dbg !4031
  %idxprom340 = zext i32 %73 to i64, !dbg !4301
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3963, metadata !DIExpression()), !dbg !4295
  %sets342 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %72, i64 %idxprom340, i32 1, !dbg !4302
  %74 = load %struct.rtx_def*, %struct.rtx_def** %sets342, align 8, !dbg !4302
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %74, i32 0, i32 0) #7, !dbg !4303
  %implicit_sets343 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %72, i64 %idxprom340, i32 2, !dbg !4304
  %75 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets343, align 8, !dbg !4304
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %75, i32 0, i32 12) #7, !dbg !4305
  %clobbers344 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %72, i64 %idxprom340, i32 3, !dbg !4306
  %76 = load %struct.rtx_def*, %struct.rtx_def** %clobbers344, align 8, !dbg !4306
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %76, i32 0, i32 0) #7, !dbg !4307
  %bf.load346 = load i8, i8* %readonly345, align 4, !dbg !4308
  %bf.clear347 = and i8 %bf.load346, 1, !dbg !4308
  %tobool349 = icmp eq i8 %bf.clear347, 0, !dbg !4309
  br i1 %tobool349, label %if.then350, label %for.inc357, !dbg !4310

if.then350:                                       ; preds = %for.body337
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3963, metadata !DIExpression()), !dbg !4295
  %uses351 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %72, i64 %idxprom340, i32 0, !dbg !4311
  %77 = load %struct.rtx_def*, %struct.rtx_def** %uses351, align 8, !dbg !4311
  %call352 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %77) #6, !dbg !4313
  store %struct.rtx_def* %call352, %struct.rtx_def** %uses351, align 8, !dbg !4314
  %uses_length354 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %72, i64 %idxprom340, i32 4, !dbg !4315
  %78 = load i32, i32* %uses_length354, align 8, !dbg !4316
  %inc355 = add nsw i32 %78, 1, !dbg !4316
  store i32 %inc355, i32* %uses_length354, align 8, !dbg !4316
  br label %for.inc357, !dbg !4317

for.inc357:                                       ; preds = %for.body337, %if.then350
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4298
  br label %for.cond334, !dbg !4298, !llvm.loop !4318

for.end358:                                       ; preds = %for.cond334
  call void @llvm.dbg.value(metadata i32 0, metadata !3920, metadata !DIExpression()), !dbg !4031
  br label %for.cond359, !dbg !4320

for.cond359:                                      ; preds = %for.inc386, %for.end358
  %79 = phi i32 [ 0, %for.end358 ], [ %inc387, %for.inc386 ], !dbg !4321
  store i32 %79, i32* %i, align 4, !dbg !4321
  call void @llvm.dbg.value(metadata i32 %79, metadata !3920, metadata !DIExpression()), !dbg !4031
  %cmp360 = icmp ult i32 %79, 53, !dbg !4322
  br i1 %cmp360, label %for.body362, label %for.end388, !dbg !4323

for.body362:                                      ; preds = %for.cond359
  %80 = load i64, i64* @implicit_reg_pending_uses, align 8, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %79, metadata !3920, metadata !DIExpression()), !dbg !4031
  %sh_prom = zext i32 %79 to i64, !dbg !4324
  %shl = shl i64 1, %sh_prom, !dbg !4324
  %and363 = and i64 %80, %shl, !dbg !4324
  %tobool364 = icmp eq i64 %and363, 0, !dbg !4324
  br i1 %tobool364, label %for.inc386, label %if.then365, !dbg !4325

if.then365:                                       ; preds = %for.body362
  %81 = load %struct.deps_reg*, %struct.deps_reg** %reg_last339, align 8, !dbg !4326
  call void @llvm.dbg.value(metadata i32 %79, metadata !3920, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3968, metadata !DIExpression()), !dbg !4327
  %sets370 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %81, i64 %sh_prom, i32 1, !dbg !4328
  %82 = load %struct.rtx_def*, %struct.rtx_def** %sets370, align 8, !dbg !4328
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %82, i32 0, i32 0) #7, !dbg !4329
  %implicit_sets371 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %81, i64 %sh_prom, i32 2, !dbg !4330
  %83 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets371, align 8, !dbg !4330
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %83, i32 0, i32 12) #7, !dbg !4331
  %clobbers372 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %81, i64 %sh_prom, i32 3, !dbg !4332
  %84 = load %struct.rtx_def*, %struct.rtx_def** %clobbers372, align 8, !dbg !4332
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %84, i32 0, i32 0) #7, !dbg !4333
  %bf.load374 = load i8, i8* %readonly345, align 4, !dbg !4334
  %bf.clear375 = and i8 %bf.load374, 1, !dbg !4334
  %tobool377 = icmp eq i8 %bf.clear375, 0, !dbg !4336
  br i1 %tobool377, label %if.then378, label %for.inc386, !dbg !4337

if.then378:                                       ; preds = %if.then365
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3968, metadata !DIExpression()), !dbg !4327
  %uses379 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %81, i64 %sh_prom, i32 0, !dbg !4338
  %85 = load %struct.rtx_def*, %struct.rtx_def** %uses379, align 8, !dbg !4338
  %call380 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %85) #6, !dbg !4340
  store %struct.rtx_def* %call380, %struct.rtx_def** %uses379, align 8, !dbg !4341
  %uses_length382 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %81, i64 %sh_prom, i32 4, !dbg !4342
  %86 = load i32, i32* %uses_length382, align 8, !dbg !4343
  %inc383 = add nsw i32 %86, 1, !dbg !4343
  store i32 %inc383, i32* %uses_length382, align 8, !dbg !4343
  br label %for.inc386, !dbg !4344

for.inc386:                                       ; preds = %if.then365, %for.body362, %if.then378
  %87 = load i32, i32* %i, align 4, !dbg !4345
  call void @llvm.dbg.value(metadata i32 %87, metadata !3920, metadata !DIExpression()), !dbg !4031
  %inc387 = add i32 %87, 1, !dbg !4345
  call void @llvm.dbg.value(metadata i32 %inc387, metadata !3920, metadata !DIExpression()), !dbg !4031
  br label %for.cond359, !dbg !4346, !llvm.loop !4347

for.end388:                                       ; preds = %for.cond359
  %call389 = call fastcc zeroext i8 @sched_has_condition_p(%struct.rtx_def* %insn) #7, !dbg !4349
  %tobool390 = icmp eq i8 %call389, 0, !dbg !4349
  %88 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !4350
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* %88, i32 0, i32* nonnull %i) #7, !dbg !4350
  br i1 %tobool390, label %for.cond443.preheader, label %for.cond392.preheader, !dbg !4351

for.cond392.preheader:                            ; preds = %for.end388
  br label %for.cond392, !dbg !4352

for.cond443.preheader:                            ; preds = %for.end388
  br label %for.cond443, !dbg !4353

for.cond392:                                      ; preds = %for.cond392.preheader, %for.inc414
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  %call393 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4354
  %tobool394 = icmp eq i8 %call393, 0, !dbg !4352
  br i1 %tobool394, label %for.end415, label %for.body395, !dbg !4352

for.body395:                                      ; preds = %for.cond392
  %89 = load %struct.deps_reg*, %struct.deps_reg** %reg_last339, align 8, !dbg !4355
  %90 = load i32, i32* %i, align 4, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %90, metadata !3920, metadata !DIExpression()), !dbg !4031
  %idxprom398 = zext i32 %90 to i64, !dbg !4357
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3973, metadata !DIExpression()), !dbg !4358
  %sets400 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %89, i64 %idxprom398, i32 1, !dbg !4359
  %91 = load %struct.rtx_def*, %struct.rtx_def** %sets400, align 8, !dbg !4359
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %91, i32 0, i32 11) #7, !dbg !4360
  %implicit_sets401 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %89, i64 %idxprom398, i32 2, !dbg !4361
  %92 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets401, align 8, !dbg !4361
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %92, i32 0, i32 12) #7, !dbg !4362
  %uses402 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %89, i64 %idxprom398, i32 0, !dbg !4363
  %93 = load %struct.rtx_def*, %struct.rtx_def** %uses402, align 8, !dbg !4363
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %93, i32 0, i32 12) #7, !dbg !4364
  %bf.load404 = load i8, i8* %readonly345, align 4, !dbg !4365
  %bf.clear405 = and i8 %bf.load404, 1, !dbg !4365
  %tobool407 = icmp eq i8 %bf.clear405, 0, !dbg !4367
  br i1 %tobool407, label %if.then408, label %for.inc414, !dbg !4368

if.then408:                                       ; preds = %for.body395
  %clobbers409 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %89, i64 %idxprom398, i32 3, !dbg !4369
  %94 = load %struct.rtx_def*, %struct.rtx_def** %clobbers409, align 8, !dbg !4369
  %call410 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %94) #6, !dbg !4371
  store %struct.rtx_def* %call410, %struct.rtx_def** %clobbers409, align 8, !dbg !4372
  %clobbers_length = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %89, i64 %idxprom398, i32 5, !dbg !4373
  %95 = load i32, i32* %clobbers_length, align 4, !dbg !4374
  %inc412 = add nsw i32 %95, 1, !dbg !4374
  store i32 %inc412, i32* %clobbers_length, align 4, !dbg !4374
  br label %for.inc414, !dbg !4375

for.inc414:                                       ; preds = %for.body395, %if.then408
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4354
  br label %for.cond392, !dbg !4354, !llvm.loop !4376

for.end415:                                       ; preds = %for.cond392
  %96 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !4378
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* %96, i32 0, i32* nonnull %i) #7, !dbg !4378
  %reg_conditional_sets437 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 16, !dbg !4379
  br label %for.cond416, !dbg !4378

for.cond416:                                      ; preds = %for.inc440, %for.end415
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  %call417 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4382
  %tobool418 = icmp eq i8 %call417, 0, !dbg !4378
  br i1 %tobool418, label %if.end526.loopexit9, label %for.body419, !dbg !4378

for.body419:                                      ; preds = %for.cond416
  %97 = load %struct.deps_reg*, %struct.deps_reg** %reg_last339, align 8, !dbg !4383
  %98 = load i32, i32* %i, align 4, !dbg !4384
  call void @llvm.dbg.value(metadata i32 %98, metadata !3920, metadata !DIExpression()), !dbg !4031
  %idxprom422 = zext i32 %98 to i64, !dbg !4385
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3979, metadata !DIExpression()), !dbg !4386
  %sets424 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %97, i64 %idxprom422, i32 1, !dbg !4387
  %99 = load %struct.rtx_def*, %struct.rtx_def** %sets424, align 8, !dbg !4387
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %99, i32 0, i32 11) #7, !dbg !4388
  %implicit_sets425 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %97, i64 %idxprom422, i32 2, !dbg !4389
  %100 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets425, align 8, !dbg !4389
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %100, i32 0, i32 12) #7, !dbg !4390
  %clobbers426 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %97, i64 %idxprom422, i32 3, !dbg !4391
  %101 = load %struct.rtx_def*, %struct.rtx_def** %clobbers426, align 8, !dbg !4391
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %101, i32 0, i32 11) #7, !dbg !4392
  %uses427 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %97, i64 %idxprom422, i32 0, !dbg !4393
  %102 = load %struct.rtx_def*, %struct.rtx_def** %uses427, align 8, !dbg !4393
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %102, i32 0, i32 12) #7, !dbg !4394
  %bf.load429 = load i8, i8* %readonly345, align 4, !dbg !4395
  %bf.clear430 = and i8 %bf.load429, 1, !dbg !4395
  %tobool432 = icmp eq i8 %bf.clear430, 0, !dbg !4396
  br i1 %tobool432, label %if.then433, label %for.inc440, !dbg !4397

if.then433:                                       ; preds = %for.body419
  %103 = load %struct.rtx_def*, %struct.rtx_def** %sets424, align 8, !dbg !4398
  %call435 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %103) #6, !dbg !4399
  store %struct.rtx_def* %call435, %struct.rtx_def** %sets424, align 8, !dbg !4400
  %104 = load i32, i32* %i, align 4, !dbg !4401
  call void @llvm.dbg.value(metadata i32 %104, metadata !3920, metadata !DIExpression()), !dbg !4031
  %call438 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %reg_conditional_sets437, i32 %104) #6, !dbg !4401
  br label %for.inc440, !dbg !4402

for.inc440:                                       ; preds = %for.body419, %if.then433
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4382
  br label %for.cond416, !dbg !4382, !llvm.loop !4403

for.cond443:                                      ; preds = %for.cond443.preheader, %for.inc495
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  %call444 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4405
  %tobool445 = icmp eq i8 %call444, 0, !dbg !4353
  br i1 %tobool445, label %for.end496, label %for.body446, !dbg !4353

for.body446:                                      ; preds = %for.cond443
  %105 = load %struct.deps_reg*, %struct.deps_reg** %reg_last339, align 8, !dbg !4406
  %106 = load i32, i32* %i, align 4, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %106, metadata !3920, metadata !DIExpression()), !dbg !4031
  %idxprom449 = zext i32 %106 to i64, !dbg !4408
  %arrayidx450 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %105, i64 %idxprom449, !dbg !4408
  call void @llvm.dbg.value(metadata %struct.deps_reg* %arrayidx450, metadata !3983, metadata !DIExpression()), !dbg !4409
  %uses_length451 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %105, i64 %idxprom449, i32 4, !dbg !4410
  %107 = load i32, i32* %uses_length451, align 8, !dbg !4410
  %108 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4412
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %108, i64 14, i32 1, !dbg !4412
  %109 = load i32, i32* %value, align 8, !dbg !4412
  %cmp453 = icmp sgt i32 %107, %109, !dbg !4413
  br i1 %cmp453, label %if.then461, label %lor.lhs.false455, !dbg !4414

lor.lhs.false455:                                 ; preds = %for.body446
  %clobbers_length456 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %105, i64 %idxprom449, i32 5, !dbg !4415
  %110 = load i32, i32* %clobbers_length456, align 4, !dbg !4415
  %cmp459 = icmp sgt i32 %110, %109, !dbg !4416
  br i1 %cmp459, label %if.then461, label %if.else478, !dbg !4417

if.then461:                                       ; preds = %lor.lhs.false455, %for.body446
  %sets462 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %105, i64 %idxprom449, i32 1, !dbg !4418
  call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** nonnull %sets462, i32 0, i32 11) #7, !dbg !4420
  %implicit_sets463 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %105, i64 %idxprom449, i32 2, !dbg !4421
  call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** nonnull %implicit_sets463, i32 0, i32 12) #7, !dbg !4422
  %uses464 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %arrayidx450, i64 0, i32 0, !dbg !4423
  call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** %uses464, i32 0, i32 12) #7, !dbg !4424
  %clobbers465 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %105, i64 %idxprom449, i32 3, !dbg !4425
  call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** nonnull %clobbers465, i32 0, i32 11) #7, !dbg !4426
  %bf.load467 = load i8, i8* %readonly345, align 4, !dbg !4427
  %bf.clear468 = and i8 %bf.load467, 1, !dbg !4427
  %tobool470 = icmp eq i8 %bf.clear468, 0, !dbg !4429
  br i1 %tobool470, label %if.then471, label %if.end482, !dbg !4430

if.then471:                                       ; preds = %if.then461
  %111 = load %struct.rtx_def*, %struct.rtx_def** %sets462, align 8, !dbg !4431
  %call473 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %111) #6, !dbg !4433
  store %struct.rtx_def* %call473, %struct.rtx_def** %sets462, align 8, !dbg !4434
  %clobbers_length475 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %105, i64 %idxprom449, i32 5, !dbg !4435
  store i32 0, i32* %clobbers_length475, align 4, !dbg !4436
  store i32 0, i32* %uses_length451, align 8, !dbg !4437
  br label %if.end482, !dbg !4438

if.else478:                                       ; preds = %lor.lhs.false455
  %sets479 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %105, i64 %idxprom449, i32 1, !dbg !4439
  %112 = load %struct.rtx_def*, %struct.rtx_def** %sets479, align 8, !dbg !4439
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %112, i32 0, i32 11) #7, !dbg !4441
  %implicit_sets480 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %105, i64 %idxprom449, i32 2, !dbg !4442
  %113 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets480, align 8, !dbg !4442
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %113, i32 0, i32 12) #7, !dbg !4443
  %uses481 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %arrayidx450, i64 0, i32 0, !dbg !4444
  %114 = load %struct.rtx_def*, %struct.rtx_def** %uses481, align 8, !dbg !4444
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %114, i32 0, i32 12) #7, !dbg !4445
  br label %if.end482

if.end482:                                        ; preds = %if.then461, %if.then471, %if.else478
  %bf.load484 = load i8, i8* %readonly345, align 4, !dbg !4446
  %bf.clear485 = and i8 %bf.load484, 1, !dbg !4446
  %tobool487 = icmp eq i8 %bf.clear485, 0, !dbg !4448
  br i1 %tobool487, label %if.then488, label %for.inc495, !dbg !4449

if.then488:                                       ; preds = %if.end482
  %clobbers_length489 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %105, i64 %idxprom449, i32 5, !dbg !4450
  %115 = load i32, i32* %clobbers_length489, align 4, !dbg !4452
  %inc490 = add nsw i32 %115, 1, !dbg !4452
  store i32 %inc490, i32* %clobbers_length489, align 4, !dbg !4452
  %clobbers491 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %105, i64 %idxprom449, i32 3, !dbg !4453
  %116 = load %struct.rtx_def*, %struct.rtx_def** %clobbers491, align 8, !dbg !4453
  %call492 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %116) #6, !dbg !4454
  store %struct.rtx_def* %call492, %struct.rtx_def** %clobbers491, align 8, !dbg !4455
  br label %for.inc495, !dbg !4456

for.inc495:                                       ; preds = %if.end482, %if.then488
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4405
  br label %for.cond443, !dbg !4405, !llvm.loop !4457

for.end496:                                       ; preds = %for.cond443
  %117 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !4459
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* %117, i32 0, i32* nonnull %i) #7, !dbg !4459
  %reg_conditional_sets520 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 16, !dbg !4460
  br label %for.cond497, !dbg !4459

for.cond497:                                      ; preds = %for.inc523, %for.end496
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  %call498 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4463
  %tobool499 = icmp eq i8 %call498, 0, !dbg !4459
  br i1 %tobool499, label %if.end526.loopexit, label %for.body500, !dbg !4459

for.body500:                                      ; preds = %for.cond497
  %118 = load %struct.deps_reg*, %struct.deps_reg** %reg_last339, align 8, !dbg !4464
  %119 = load i32, i32* %i, align 4, !dbg !4465
  call void @llvm.dbg.value(metadata i32 %119, metadata !3920, metadata !DIExpression()), !dbg !4031
  %idxprom503 = zext i32 %119 to i64, !dbg !4466
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3988, metadata !DIExpression()), !dbg !4467
  %sets505 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %118, i64 %idxprom503, i32 1, !dbg !4468
  call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** nonnull %sets505, i32 0, i32 11) #7, !dbg !4469
  %implicit_sets506 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %118, i64 %idxprom503, i32 2, !dbg !4470
  call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** nonnull %implicit_sets506, i32 0, i32 12) #7, !dbg !4471
  %clobbers507 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %118, i64 %idxprom503, i32 3, !dbg !4472
  call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** nonnull %clobbers507, i32 0, i32 11) #7, !dbg !4473
  %uses508 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %118, i64 %idxprom503, i32 0, !dbg !4474
  call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** %uses508, i32 0, i32 12) #7, !dbg !4475
  %bf.load510 = load i8, i8* %readonly345, align 4, !dbg !4476
  %bf.clear511 = and i8 %bf.load510, 1, !dbg !4476
  %tobool513 = icmp eq i8 %bf.clear511, 0, !dbg !4477
  br i1 %tobool513, label %if.then514, label %for.inc523, !dbg !4478

if.then514:                                       ; preds = %for.body500
  %120 = load %struct.rtx_def*, %struct.rtx_def** %sets505, align 8, !dbg !4479
  %call516 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %120) #6, !dbg !4480
  store %struct.rtx_def* %call516, %struct.rtx_def** %sets505, align 8, !dbg !4481
  %uses_length518 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %118, i64 %idxprom503, i32 4, !dbg !4482
  store i32 0, i32* %uses_length518, align 8, !dbg !4483
  %clobbers_length519 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %118, i64 %idxprom503, i32 5, !dbg !4484
  store i32 0, i32* %clobbers_length519, align 4, !dbg !4485
  %121 = load i32, i32* %i, align 4, !dbg !4486
  call void @llvm.dbg.value(metadata i32 %121, metadata !3920, metadata !DIExpression()), !dbg !4031
  %call521 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* nonnull %reg_conditional_sets520, i32 %121) #6, !dbg !4486
  br label %for.inc523, !dbg !4487

for.inc523:                                       ; preds = %for.body500, %if.then514
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4463
  br label %for.cond497, !dbg !4463, !llvm.loop !4488

if.end526.loopexit:                               ; preds = %for.cond497
  br label %if.end526, !dbg !4490

if.end526.loopexit9:                              ; preds = %for.cond416
  br label %if.end526, !dbg !4490

if.end526:                                        ; preds = %if.end526.loopexit9, %if.end526.loopexit, %for.end300, %lor.lhs.false321, %land.lhs.true326, %if.then331
  call void @llvm.dbg.value(metadata i32 0, metadata !3920, metadata !DIExpression()), !dbg !4031
  %reg_last537 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 14, !dbg !4491
  %readonly543 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !4492
  br label %for.cond527, !dbg !4490

for.cond527:                                      ; preds = %for.inc554, %if.end526
  %122 = phi i32 [ 0, %if.end526 ], [ %inc555, %for.inc554 ], !dbg !4494
  store i32 %122, i32* %i, align 4, !dbg !4494
  call void @llvm.dbg.value(metadata i32 %122, metadata !3920, metadata !DIExpression()), !dbg !4031
  %cmp528 = icmp ult i32 %122, 53, !dbg !4495
  br i1 %cmp528, label %for.body530, label %for.end556, !dbg !4496

for.body530:                                      ; preds = %for.cond527
  %123 = load i64, i64* @implicit_reg_pending_clobbers, align 8, !dbg !4497
  call void @llvm.dbg.value(metadata i32 %122, metadata !3920, metadata !DIExpression()), !dbg !4031
  %sh_prom531 = zext i32 %122 to i64, !dbg !4497
  %shl532 = shl i64 1, %sh_prom531, !dbg !4497
  %and533 = and i64 %123, %shl532, !dbg !4497
  %tobool534 = icmp eq i64 %and533, 0, !dbg !4497
  br i1 %tobool534, label %for.inc554, label %if.then535, !dbg !4498

if.then535:                                       ; preds = %for.body530
  %124 = load %struct.deps_reg*, %struct.deps_reg** %reg_last537, align 8, !dbg !4499
  call void @llvm.dbg.value(metadata i32 %122, metadata !3920, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3992, metadata !DIExpression()), !dbg !4491
  %sets540 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %124, i64 %sh_prom531, i32 1, !dbg !4500
  %125 = load %struct.rtx_def*, %struct.rtx_def** %sets540, align 8, !dbg !4500
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %125, i32 0, i32 12) #7, !dbg !4501
  %clobbers541 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %124, i64 %sh_prom531, i32 3, !dbg !4502
  %126 = load %struct.rtx_def*, %struct.rtx_def** %clobbers541, align 8, !dbg !4502
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %126, i32 0, i32 12) #7, !dbg !4503
  %uses542 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %124, i64 %sh_prom531, i32 0, !dbg !4504
  %127 = load %struct.rtx_def*, %struct.rtx_def** %uses542, align 8, !dbg !4504
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %127, i32 0, i32 12) #7, !dbg !4505
  %bf.load544 = load i8, i8* %readonly543, align 4, !dbg !4506
  %bf.clear545 = and i8 %bf.load544, 1, !dbg !4506
  %tobool547 = icmp eq i8 %bf.clear545, 0, !dbg !4507
  br i1 %tobool547, label %if.then548, label %for.inc554, !dbg !4508

if.then548:                                       ; preds = %if.then535
  %implicit_sets549 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %124, i64 %sh_prom531, i32 2, !dbg !4509
  %128 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets549, align 8, !dbg !4509
  %call550 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %128) #6, !dbg !4510
  store %struct.rtx_def* %call550, %struct.rtx_def** %implicit_sets549, align 8, !dbg !4511
  br label %for.inc554, !dbg !4512

for.inc554:                                       ; preds = %if.then535, %for.body530, %if.then548
  %129 = load i32, i32* %i, align 4, !dbg !4513
  call void @llvm.dbg.value(metadata i32 %129, metadata !3920, metadata !DIExpression()), !dbg !4031
  %inc555 = add i32 %129, 1, !dbg !4513
  call void @llvm.dbg.value(metadata i32 %inc555, metadata !3920, metadata !DIExpression()), !dbg !4031
  br label %for.cond527, !dbg !4514, !llvm.loop !4515

for.end556:                                       ; preds = %for.cond527
  %bf.load558 = load i8, i8* %readonly543, align 4, !dbg !4517
  %bf.clear559 = and i8 %bf.load558, 1, !dbg !4517
  %tobool561 = icmp eq i8 %bf.clear559, 0, !dbg !4519
  br i1 %tobool561, label %if.then562, label %if.end588, !dbg !4520

if.then562:                                       ; preds = %for.end556
  %reg_last_in_use = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 15, !dbg !4521
  %130 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !4521
  %call563 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* nonnull %reg_last_in_use, %struct.bitmap_head_def* %130) #6, !dbg !4521
  %131 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !4523
  %call565 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* nonnull %reg_last_in_use, %struct.bitmap_head_def* %131) #6, !dbg !4523
  %132 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !4524
  %call567 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* nonnull %reg_last_in_use, %struct.bitmap_head_def* %132) #6, !dbg !4524
  call void @llvm.dbg.value(metadata i32 0, metadata !3920, metadata !DIExpression()), !dbg !4031
  br label %for.cond568, !dbg !4525

for.cond568:                                      ; preds = %for.inc585, %if.then562
  %133 = phi i32 [ 0, %if.then562 ], [ %inc586, %for.inc585 ], !dbg !4527
  store i32 %133, i32* %i, align 4, !dbg !4527
  call void @llvm.dbg.value(metadata i32 %133, metadata !3920, metadata !DIExpression()), !dbg !4031
  %cmp569 = icmp ult i32 %133, 53, !dbg !4528
  br i1 %cmp569, label %for.body571, label %for.end587, !dbg !4530

for.body571:                                      ; preds = %for.cond568
  %134 = load i64, i64* @implicit_reg_pending_uses, align 8, !dbg !4531
  call void @llvm.dbg.value(metadata i32 %133, metadata !3920, metadata !DIExpression()), !dbg !4031
  %sh_prom572 = zext i32 %133 to i64, !dbg !4531
  %shl573 = shl i64 1, %sh_prom572, !dbg !4531
  %and574 = and i64 %134, %shl573, !dbg !4531
  %tobool575 = icmp eq i64 %and574, 0, !dbg !4531
  br i1 %tobool575, label %lor.lhs.false576, label %if.then581, !dbg !4533

lor.lhs.false576:                                 ; preds = %for.body571
  %135 = load i64, i64* @implicit_reg_pending_clobbers, align 8, !dbg !4534
  call void @llvm.dbg.value(metadata i32 %133, metadata !3920, metadata !DIExpression()), !dbg !4031
  %and579 = and i64 %135, %shl573, !dbg !4534
  %tobool580 = icmp eq i64 %and579, 0, !dbg !4534
  br i1 %tobool580, label %for.inc585, label %if.then581, !dbg !4535

if.then581:                                       ; preds = %lor.lhs.false576, %for.body571
  call void @llvm.dbg.value(metadata i32 %133, metadata !3920, metadata !DIExpression()), !dbg !4031
  %call583 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %reg_last_in_use, i32 %133) #6, !dbg !4536
  %.pre18 = load i32, i32* %i, align 4, !dbg !4537
  br label %for.inc585, !dbg !4536

for.inc585:                                       ; preds = %lor.lhs.false576, %if.then581
  %136 = phi i32 [ %133, %lor.lhs.false576 ], [ %.pre18, %if.then581 ], !dbg !4537
  call void @llvm.dbg.value(metadata i32 %136, metadata !3920, metadata !DIExpression()), !dbg !4031
  %inc586 = add i32 %136, 1, !dbg !4537
  call void @llvm.dbg.value(metadata i32 %inc586, metadata !3920, metadata !DIExpression()), !dbg !4031
  br label %for.cond568, !dbg !4538, !llvm.loop !4539

for.end587:                                       ; preds = %for.cond568
  %137 = load i32, i32* @reg_pending_barrier, align 4, !dbg !4541
  %last_reg_pending_barrier = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 17, !dbg !4542
  store i32 %137, i32* %last_reg_pending_barrier, align 8, !dbg !4543
  br label %if.end588, !dbg !4544

if.end588:                                        ; preds = %for.end556, %for.end587
  %138 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !4545
  call void @bitmap_clear(%struct.bitmap_head_def* %138) #6, !dbg !4545
  %139 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !4546
  call void @bitmap_clear(%struct.bitmap_head_def* %139) #6, !dbg !4546
  %140 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !4547
  call void @bitmap_clear(%struct.bitmap_head_def* %140) #6, !dbg !4547
  store i64 0, i64* @implicit_reg_pending_clobbers, align 8, !dbg !4548
  store i64 0, i64* @implicit_reg_pending_uses, align 8, !dbg !4549
  %141 = load i32, i32* @reg_pending_barrier, align 4, !dbg !4550
  %tobool589 = icmp eq i32 %141, 0, !dbg !4550
  br i1 %tobool589, label %if.end691, label %if.then590, !dbg !4551

if.then590:                                       ; preds = %if.end588
  %call591 = call fastcc zeroext i8 @sched_has_condition_p(%struct.rtx_def* %insn) #7, !dbg !4552
  %tobool592 = icmp eq i8 %call591, 0, !dbg !4552
  %reg_last_in_use594 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 15, !dbg !4553
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* nonnull %reg_last_in_use594, i32 0, i32* nonnull %i) #7, !dbg !4553
  br i1 %tobool592, label %for.cond616.preheader, label %for.cond595.preheader, !dbg !4554

for.cond595.preheader:                            ; preds = %if.then590
  br label %for.cond595, !dbg !4555

for.cond616.preheader:                            ; preds = %if.then590
  br label %for.cond616, !dbg !4556

for.cond595:                                      ; preds = %for.cond595.preheader, %for.body598
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  %call596 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4557
  %tobool597 = icmp eq i8 %call596, 0, !dbg !4555
  br i1 %tobool597, label %if.end645.loopexit8, label %for.body598, !dbg !4555

for.body598:                                      ; preds = %for.cond595
  %142 = load %struct.deps_reg*, %struct.deps_reg** %reg_last537, align 8, !dbg !4558
  %143 = load i32, i32* %i, align 4, !dbg !4559
  call void @llvm.dbg.value(metadata i32 %143, metadata !3920, metadata !DIExpression()), !dbg !4031
  %idxprom601 = zext i32 %143 to i64, !dbg !4560
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !3997, metadata !DIExpression()), !dbg !4561
  %uses603 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %142, i64 %idxprom601, i32 0, !dbg !4562
  %144 = load %struct.rtx_def*, %struct.rtx_def** %uses603, align 8, !dbg !4562
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %144, i32 0, i32 12) #7, !dbg !4563
  %sets604 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %142, i64 %idxprom601, i32 1, !dbg !4564
  %145 = load %struct.rtx_def*, %struct.rtx_def** %sets604, align 8, !dbg !4564
  %146 = load i32, i32* @reg_pending_barrier, align 4, !dbg !4565
  %cmp605 = icmp eq i32 %146, 2, !dbg !4566
  %cond = select i1 %cmp605, i32 0, i32 12, !dbg !4565
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %145, i32 0, i32 %cond) #7, !dbg !4567
  %implicit_sets607 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %142, i64 %idxprom601, i32 2, !dbg !4568
  %147 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets607, align 8, !dbg !4568
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %147, i32 0, i32 12) #7, !dbg !4569
  %clobbers608 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %142, i64 %idxprom601, i32 3, !dbg !4570
  %148 = load %struct.rtx_def*, %struct.rtx_def** %clobbers608, align 8, !dbg !4570
  %149 = load i32, i32* @reg_pending_barrier, align 4, !dbg !4571
  %cmp609 = icmp eq i32 %149, 2, !dbg !4572
  %cond611 = select i1 %cmp609, i32 0, i32 12, !dbg !4571
  call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %148, i32 0, i32 %cond611) #7, !dbg !4573
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4557
  br label %for.cond595, !dbg !4557, !llvm.loop !4574

for.cond616:                                      ; preds = %for.cond616.preheader, %for.inc643
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  %call617 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4576
  %tobool618 = icmp eq i8 %call617, 0, !dbg !4556
  br i1 %tobool618, label %if.end645.loopexit, label %for.body619, !dbg !4556

for.body619:                                      ; preds = %for.cond616
  %150 = load %struct.deps_reg*, %struct.deps_reg** %reg_last537, align 8, !dbg !4577
  %151 = load i32, i32* %i, align 4, !dbg !4578
  call void @llvm.dbg.value(metadata i32 %151, metadata !3920, metadata !DIExpression()), !dbg !4031
  %idxprom622 = zext i32 %151 to i64, !dbg !4579
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !4005, metadata !DIExpression()), !dbg !4580
  %uses624 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %150, i64 %idxprom622, i32 0, !dbg !4581
  call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** %uses624, i32 0, i32 12) #7, !dbg !4582
  %sets625 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %150, i64 %idxprom622, i32 1, !dbg !4583
  %152 = load i32, i32* @reg_pending_barrier, align 4, !dbg !4584
  %cmp626 = icmp eq i32 %152, 2, !dbg !4585
  %cond628 = select i1 %cmp626, i32 0, i32 12, !dbg !4584
  call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** nonnull %sets625, i32 0, i32 %cond628) #7, !dbg !4586
  %implicit_sets629 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %150, i64 %idxprom622, i32 2, !dbg !4587
  call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** nonnull %implicit_sets629, i32 0, i32 12) #7, !dbg !4588
  %clobbers630 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %150, i64 %idxprom622, i32 3, !dbg !4589
  %153 = load i32, i32* @reg_pending_barrier, align 4, !dbg !4590
  %cmp631 = icmp eq i32 %153, 2, !dbg !4591
  %cond633 = select i1 %cmp631, i32 0, i32 12, !dbg !4590
  call fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** nonnull %clobbers630, i32 0, i32 %cond633) #7, !dbg !4592
  %bf.load635 = load i8, i8* %readonly543, align 4, !dbg !4593
  %bf.clear636 = and i8 %bf.load635, 1, !dbg !4593
  %tobool638 = icmp eq i8 %bf.clear636, 0, !dbg !4595
  br i1 %tobool638, label %if.then639, label %for.inc643, !dbg !4596

if.then639:                                       ; preds = %for.body619
  %uses_length640 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %150, i64 %idxprom622, i32 4, !dbg !4597
  store i32 0, i32* %uses_length640, align 8, !dbg !4599
  %clobbers_length641 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %150, i64 %idxprom622, i32 5, !dbg !4600
  store i32 0, i32* %clobbers_length641, align 4, !dbg !4601
  br label %for.inc643, !dbg !4602

for.inc643:                                       ; preds = %for.body619, %if.then639
  call void @llvm.dbg.value(metadata i32* %i, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !4576
  br label %for.cond616, !dbg !4576, !llvm.loop !4603

if.end645.loopexit:                               ; preds = %for.cond616
  br label %if.end645, !dbg !4605

if.end645.loopexit8:                              ; preds = %for.cond595
  br label %if.end645, !dbg !4605

if.end645:                                        ; preds = %if.end645.loopexit8, %if.end645.loopexit
  %bf.load647 = load i8, i8* %readonly543, align 4, !dbg !4605
  %bf.clear648 = and i8 %bf.load647, 1, !dbg !4605
  %tobool650 = icmp eq i8 %bf.clear648, 0, !dbg !4606
  br i1 %tobool650, label %if.then651, label %if.end668, !dbg !4607

if.then651:                                       ; preds = %if.end645
  call void @llvm.dbg.value(metadata i32 0, metadata !3920, metadata !DIExpression()), !dbg !4031
  %max_reg = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 13, !dbg !4608
  br label %for.cond652, !dbg !4609

for.cond652:                                      ; preds = %for.body655, %if.then651
  %154 = phi i32 [ 0, %if.then651 ], [ %inc666, %for.body655 ], !dbg !4610
  store i32 %154, i32* %i, align 4, !dbg !4610
  call void @llvm.dbg.value(metadata i32 %154, metadata !3920, metadata !DIExpression()), !dbg !4031
  %155 = load i32, i32* %max_reg, align 8, !dbg !4611
  %cmp653 = icmp ult i32 %154, %155, !dbg !4612
  br i1 %cmp653, label %for.body655, label %if.end668.loopexit, !dbg !4613

for.body655:                                      ; preds = %for.cond652
  %156 = load %struct.deps_reg*, %struct.deps_reg** %reg_last537, align 8, !dbg !4614
  call void @llvm.dbg.value(metadata i32 %154, metadata !3920, metadata !DIExpression()), !dbg !4031
  %idxprom658 = zext i32 %154 to i64, !dbg !4615
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !4010, metadata !DIExpression()), !dbg !4616
  %sets660 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %156, i64 %idxprom658, i32 1, !dbg !4617
  %157 = load %struct.rtx_def*, %struct.rtx_def** %sets660, align 8, !dbg !4617
  %call661 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %157) #6, !dbg !4618
  store %struct.rtx_def* %call661, %struct.rtx_def** %sets660, align 8, !dbg !4619
  %158 = load i32, i32* %i, align 4, !dbg !4620
  call void @llvm.dbg.value(metadata i32 %158, metadata !3920, metadata !DIExpression()), !dbg !4031
  %call664 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %reg_last_in_use594, i32 %158) #6, !dbg !4620
  %159 = load i32, i32* %i, align 4, !dbg !4621
  call void @llvm.dbg.value(metadata i32 %159, metadata !3920, metadata !DIExpression()), !dbg !4031
  %inc666 = add i32 %159, 1, !dbg !4621
  call void @llvm.dbg.value(metadata i32 %inc666, metadata !3920, metadata !DIExpression()), !dbg !4031
  br label %for.cond652, !dbg !4622, !llvm.loop !4623

if.end668.loopexit:                               ; preds = %for.cond652
  br label %if.end668, !dbg !4625

if.end668:                                        ; preds = %if.end668.loopexit, %if.end645
  %bf.load669 = load i32, i32* %8, align 8, !dbg !4625
  %bf.clear670 = and i32 %bf.load669, 65535, !dbg !4625
  %cmp671 = icmp eq i32 %bf.clear670, 9, !dbg !4625
  br i1 %cmp671, label %land.lhs.true673, label %if.end682, !dbg !4627

land.lhs.true673:                                 ; preds = %if.end668
  %call674 = call fastcc zeroext i8 @sel_sched_p() #7, !dbg !4628
  %tobool676 = icmp eq i8 %call674, 0, !dbg !4628
  br i1 %tobool676, label %if.then681, label %land.lhs.true677, !dbg !4629

land.lhs.true677:                                 ; preds = %land.lhs.true673
  %call678 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %insn) #6, !dbg !4630
  %tobool680 = icmp eq i8 %call678, 0, !dbg !4630
  br i1 %tobool680, label %if.then681, label %if.end682, !dbg !4631

if.then681:                                       ; preds = %land.lhs.true677, %land.lhs.true673
  call fastcc void @flush_pending_lists(%struct.deps* %deps, %struct.rtx_def* %insn, i32 1, i32 1) #7, !dbg !4632
  br label %if.end682, !dbg !4632

if.end682:                                        ; preds = %land.lhs.true677, %if.then681, %if.end668
  %bf.load684 = load i8, i8* %readonly543, align 4, !dbg !4633
  %bf.clear685 = and i8 %bf.load684, 1, !dbg !4633
  %tobool687 = icmp eq i8 %bf.clear685, 0, !dbg !4635
  br i1 %tobool687, label %if.then688, label %if.end690, !dbg !4636

if.then688:                                       ; preds = %if.end682
  %reg_conditional_sets689 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 16, !dbg !4637
  call void @bitmap_clear(%struct.bitmap_head_def* nonnull %reg_conditional_sets689) #6, !dbg !4637
  br label %if.end690, !dbg !4637

if.end690:                                        ; preds = %if.end682, %if.then688
  store i32 0, i32* @reg_pending_barrier, align 4, !dbg !4638
  br label %if.end691, !dbg !4639

if.end691:                                        ; preds = %if.end588, %if.end690
  %in_post_call_group_p = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 11, !dbg !4640
  %160 = load i32, i32* %in_post_call_group_p, align 8, !dbg !4640
  %tobool692 = icmp eq i32 %160, 0, !dbg !4641
  br i1 %tobool692, label %debug_dont_end_call_group, label %if.then693, !dbg !4642

if.then693:                                       ; preds = %if.end691
  %bf.load694 = load i32, i32* %8, align 8, !dbg !4643
  %bf.clear695 = and i32 %bf.load694, 65535, !dbg !4643
  %cmp696 = icmp eq i32 %bf.clear695, 8, !dbg !4643
  br i1 %cmp696, label %cond.true, label %lor.lhs.false698, !dbg !4643

lor.lhs.false698:                                 ; preds = %if.then693
  %cmp701 = icmp eq i32 %bf.clear695, 7, !dbg !4643
  br i1 %cmp701, label %cond.true, label %lor.lhs.false703, !dbg !4643

lor.lhs.false703:                                 ; preds = %lor.lhs.false698
  %cmp706 = icmp eq i32 %bf.clear695, 9, !dbg !4643
  br i1 %cmp706, label %cond.true, label %lor.lhs.false708, !dbg !4643

lor.lhs.false708:                                 ; preds = %lor.lhs.false703
  %cmp711 = icmp eq i32 %bf.clear695, 10, !dbg !4643
  br i1 %cmp711, label %cond.true, label %cond.end733, !dbg !4643

cond.true:                                        ; preds = %lor.lhs.false708, %lor.lhs.false703, %lor.lhs.false698, %if.then693
  %u713 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4643
  %161 = getelementptr inbounds %union.u, %union.u* %u713, i64 1, i32 0, i32 0, i64 0, !dbg !4643
  %162 = bitcast %union.rtunion_def* %161 to i32**, !dbg !4643
  %163 = load i32*, i32** %162, align 8, !dbg !4643
  %bf.load717 = load i32, i32* %163, align 8, !dbg !4643
  %bf.clear718 = and i32 %bf.load717, 65535, !dbg !4643
  %cmp719 = icmp eq i32 %bf.clear718, 23, !dbg !4643
  %164 = bitcast i32* %163 to %struct.rtx_def*, !dbg !4643
  br i1 %cmp719, label %cond.end733, label %cond.false, !dbg !4643

cond.false:                                       ; preds = %cond.true
  %call730 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %164) #6, !dbg !4643
  br label %cond.end733, !dbg !4643

cond.end733:                                      ; preds = %lor.lhs.false708, %cond.false, %cond.true
  %cond734 = phi %struct.rtx_def* [ %call730, %cond.false ], [ %164, %cond.true ], [ null, %lor.lhs.false708 ], !dbg !4643
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond734, metadata !4018, metadata !DIExpression()), !dbg !4644
  %cmp735 = icmp eq %struct.rtx_def* %cond734, null, !dbg !4645
  br i1 %cmp735, label %if.then737, label %if.end744, !dbg !4647

if.then737:                                       ; preds = %cond.end733
  %bf.load738 = load i32, i32* %8, align 8, !dbg !4648
  %bf.clear739 = and i32 %bf.load738, 65535, !dbg !4648
  %cmp740 = icmp eq i32 %bf.clear739, 7, !dbg !4648
  br i1 %cmp740, label %debug_dont_end_call_group, label %end_call_group, !dbg !4651

if.end744:                                        ; preds = %cond.end733
  %arrayidx747 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond734, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4652
  %rt_rtx748 = bitcast %union.rtunion_def* %arrayidx747 to %struct.rtx_def**, !dbg !4652
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx748, align 8, !dbg !4652
  call void @llvm.dbg.value(metadata %struct.rtx_def* %165, metadata !4015, metadata !DIExpression()), !dbg !4644
  %166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i64 0, i32 0, !dbg !4653
  %bf.load749 = load i32, i32* %166, align 8, !dbg !4653
  %bf.clear750 = and i32 %bf.load749, 65535, !dbg !4653
  %cmp751 = icmp eq i32 %bf.clear750, 39, !dbg !4655
  br i1 %cmp751, label %if.then753, label %if.end758, !dbg !4656

if.then753:                                       ; preds = %if.end744
  %arrayidx756 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4657
  %rt_rtx757 = bitcast %union.rtunion_def* %arrayidx756 to %struct.rtx_def**, !dbg !4657
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx757, align 8, !dbg !4657
  call void @llvm.dbg.value(metadata %struct.rtx_def* %167, metadata !4015, metadata !DIExpression()), !dbg !4644
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i64 0, i32 0, !dbg !4658
  %bf.load759.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4660
  br label %if.end758, !dbg !4661

if.end758:                                        ; preds = %if.then753, %if.end744
  %bf.load759 = phi i32 [ %bf.load759.pre, %if.then753 ], [ %bf.load749, %if.end744 ], !dbg !4660
  %tmp.0 = phi %struct.rtx_def* [ %167, %if.then753 ], [ %165, %if.end744 ], !dbg !4644
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0, metadata !4015, metadata !DIExpression()), !dbg !4644
  %bf.clear760 = and i32 %bf.load759, 65535, !dbg !4660
  %cmp761 = icmp eq i32 %bf.clear760, 37, !dbg !4660
  br i1 %cmp761, label %if.then763, label %end_call_group, !dbg !4662

if.then763:                                       ; preds = %if.end758
  %call764 = call fastcc i32 @rhs_regno(%struct.rtx_def* %tmp.0) #7, !dbg !4663
  call void @llvm.dbg.value(metadata i32 %call764, metadata !4020, metadata !DIExpression()), !dbg !4644
  %168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond734, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4664
  %rt_rtx770 = bitcast %union.rtunion_def* %168 to %struct.rtx_def**, !dbg !4664
  %169 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx770, align 8, !dbg !4664
  call void @llvm.dbg.value(metadata %struct.rtx_def* %169, metadata !4015, metadata !DIExpression()), !dbg !4644
  %170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i64 0, i32 0, !dbg !4665
  %bf.load771 = load i32, i32* %170, align 8, !dbg !4665
  %bf.clear772 = and i32 %bf.load771, 65535, !dbg !4665
  %cmp773 = icmp eq i32 %bf.clear772, 39, !dbg !4667
  br i1 %cmp773, label %if.then775, label %if.end780, !dbg !4668

if.then775:                                       ; preds = %if.then763
  %arrayidx778 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4669
  %rt_rtx779 = bitcast %union.rtunion_def* %arrayidx778 to %struct.rtx_def**, !dbg !4669
  %171 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx779, align 8, !dbg !4669
  call void @llvm.dbg.value(metadata %struct.rtx_def* %171, metadata !4015, metadata !DIExpression()), !dbg !4644
  %.phi.trans.insert15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i64 0, i32 0, !dbg !4670
  %bf.load781.pre = load i32, i32* %.phi.trans.insert15, align 8, !dbg !4672
  %.pre19 = and i32 %bf.load781.pre, 65535, !dbg !4672
  br label %if.end780, !dbg !4673

if.end780:                                        ; preds = %if.then775, %if.then763
  %bf.clear782.pre-phi = phi i32 [ %.pre19, %if.then775 ], [ %bf.clear772, %if.then763 ], !dbg !4672
  %bf.load786 = phi i32 [ %bf.load781.pre, %if.then775 ], [ %bf.load771, %if.then763 ], !dbg !4672
  %tmp.1 = phi %struct.rtx_def* [ %171, %if.then775 ], [ %169, %if.then763 ], !dbg !4644
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.1, metadata !4015, metadata !DIExpression()), !dbg !4644
  %172 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp.1, i64 0, i32 0, !dbg !4672
  %cmp783 = icmp eq i32 %bf.clear782.pre-phi, 49, !dbg !4674
  br i1 %cmp783, label %land.lhs.true790, label %lor.lhs.false785, !dbg !4675

lor.lhs.false785:                                 ; preds = %if.end780
  %cmp788 = icmp eq i32 %bf.clear782.pre-phi, 50, !dbg !4676
  br i1 %cmp788, label %land.lhs.true790, label %if.else811, !dbg !4677

land.lhs.true790:                                 ; preds = %lor.lhs.false785, %if.end780
  %arrayidx793 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4678
  %173 = bitcast %union.rtunion_def* %arrayidx793 to i32**, !dbg !4678
  %174 = load i32*, i32** %173, align 8, !dbg !4678
  %bf.load795 = load i32, i32* %174, align 8, !dbg !4678
  %bf.clear796 = and i32 %bf.load795, 65535, !dbg !4678
  %cmp797 = icmp eq i32 %bf.clear796, 37, !dbg !4678
  br i1 %cmp797, label %land.lhs.true799, label %if.else811, !dbg !4679

land.lhs.true799:                                 ; preds = %land.lhs.true790
  %175 = bitcast i32* %174 to %struct.rtx_def*, !dbg !4679
  %call804 = call fastcc i32 @rhs_regno(%struct.rtx_def* %175) #7, !dbg !4680
  %cmp805 = icmp eq i32 %call804, 7, !dbg !4681
  %cmp808 = icmp eq i32 %call764, 7, !dbg !4682
  %or.cond = and i1 %cmp805, %cmp808, !dbg !4683
  br i1 %or.cond, label %if.end820, label %land.lhs.true799.if.else811_crit_edge, !dbg !4683

land.lhs.true799.if.else811_crit_edge:            ; preds = %land.lhs.true799
  %bf.load812.pre = load i32, i32* %172, align 8, !dbg !4684
  br label %if.else811, !dbg !4683

if.else811:                                       ; preds = %land.lhs.true799.if.else811_crit_edge, %land.lhs.true790, %lor.lhs.false785
  %bf.load812 = phi i32 [ %bf.load812.pre, %land.lhs.true799.if.else811_crit_edge ], [ %bf.load786, %land.lhs.true790 ], [ %bf.load786, %lor.lhs.false785 ], !dbg !4684
  %bf.clear813 = and i32 %bf.load812, 65535, !dbg !4684
  %cmp814 = icmp eq i32 %bf.clear813, 37, !dbg !4684
  br i1 %cmp814, label %if.then816, label %end_call_group, !dbg !4686

if.then816:                                       ; preds = %if.else811
  %call817 = call fastcc i32 @rhs_regno(%struct.rtx_def* %tmp.1) #7, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %call817, metadata !4019, metadata !DIExpression()), !dbg !4644
  %phitmp = icmp slt i32 %call817, 53
  br label %if.end820

if.end820:                                        ; preds = %land.lhs.true799, %if.then816
  %src_regno.0 = phi i1 [ %phitmp, %if.then816 ], [ true, %land.lhs.true799 ]
  %cmp824 = icmp slt i32 %call764, 53, !dbg !4688
  %or.cond1 = or i1 %src_regno.0, %cmp824, !dbg !4689
  br i1 %or.cond1, label %if.then826, label %end_call_group, !dbg !4689

if.then826:                                       ; preds = %if.end820
  %bf.load828 = load i8, i8* %readonly543, align 4, !dbg !4690
  %bf.clear829 = and i8 %bf.load828, 1, !dbg !4690
  %tobool831 = icmp eq i8 %bf.clear829, 0, !dbg !4693
  br i1 %tobool831, label %land.lhs.true832, label %if.end838, !dbg !4694

land.lhs.true832:                                 ; preds = %if.then826
  %176 = load i32, i32* %in_post_call_group_p, align 8, !dbg !4695
  %cmp834 = icmp eq i32 %176, 2, !dbg !4696
  br i1 %cmp834, label %if.then836, label %if.end838, !dbg !4697

if.then836:                                       ; preds = %land.lhs.true832
  store i32 1, i32* %in_post_call_group_p, align 8, !dbg !4698
  br label %if.end838, !dbg !4699

if.end838:                                        ; preds = %if.then826, %if.then836, %land.lhs.true832
  %call839 = call fastcc zeroext i8 @sel_sched_p() #7, !dbg !4700
  %tobool840 = icmp eq i8 %call839, 0, !dbg !4700
  %177 = load i32, i32* @sched_emulate_haifa_p, align 4, !dbg !4702
  %tobool842 = icmp ne i32 %177, 0, !dbg !4702
  %or.cond2 = or i1 %tobool840, %tobool842, !dbg !4703
  br i1 %or.cond2, label %if.then843, label %debug_dont_end_call_group, !dbg !4703

if.then843:                                       ; preds = %if.end838
  %bf.load844 = load i32, i32* %8, align 8, !dbg !4704
  %bf.set = or i32 %bf.load844, 268435456, !dbg !4704
  store i32 %bf.set, i32* %8, align 8, !dbg !4704
  %178 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !4706
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %178, i64 0, i32 0, !dbg !4706
  %179 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4706
  %base853 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %179, i64 0, i32 0, !dbg !4706
  %arrayidx859 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4706
  %rt_int = bitcast %union.rtunion_def* %arrayidx859 to i32*, !dbg !4706
  %180 = load i32, i32* %rt_int, align 8, !dbg !4706
  %call860 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base853, i32 %180) #7, !dbg !4706
  %call861 = call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base, i32 %call860) #7, !dbg !4706
  %cant_move = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call861, i64 0, i32 7, !dbg !4706
  %bf.load862 = load i8, i8* %cant_move, align 8, !dbg !4707
  %bf.set864 = or i8 %bf.load862, 1, !dbg !4707
  store i8 %bf.set864, i8* %cant_move, align 8, !dbg !4707
  br label %debug_dont_end_call_group, !dbg !4708

end_call_group:                                   ; preds = %if.end820, %if.else811, %if.end758, %if.then737
  call void @llvm.dbg.label(metadata !4027), !dbg !4709
  %bf.load868 = load i8, i8* %readonly543, align 4, !dbg !4710
  %bf.clear869 = and i8 %bf.load868, 1, !dbg !4710
  %tobool871 = icmp eq i8 %bf.clear869, 0, !dbg !4712
  br i1 %tobool871, label %if.then872, label %debug_dont_end_call_group, !dbg !4713

if.then872:                                       ; preds = %end_call_group
  store i32 0, i32* %in_post_call_group_p, align 8, !dbg !4714
  br label %debug_dont_end_call_group, !dbg !4715

debug_dont_end_call_group:                        ; preds = %end_call_group, %if.end691, %if.then737, %if.then872, %if.then843, %if.end838
  call void @llvm.dbg.label(metadata !4030), !dbg !4716
  %181 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4717
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %181, i64 0, i32 17, !dbg !4718
  %182 = load i32, i32* %flags, align 8, !dbg !4718
  %and880 = and i32 %182, 2, !dbg !4719
  %tobool881 = icmp eq i32 %and880, 0, !dbg !4719
  br i1 %tobool881, label %if.end897, label %land.lhs.true882, !dbg !4720

land.lhs.true882:                                 ; preds = %debug_dont_end_call_group
  %call883 = call zeroext i8 @sched_insn_is_legitimate_for_speculation_p(%struct.rtx_def* %insn, i32 0) #7, !dbg !4721
  %tobool884 = icmp eq i8 %call883, 0, !dbg !4721
  br i1 %tobool884, label %if.then885, label %if.end897, !dbg !4722

if.then885:                                       ; preds = %land.lhs.true882
  %call886 = call fastcc zeroext i8 @sel_sched_p() #7, !dbg !4723
  %tobool887 = icmp eq i8 %call886, 0, !dbg !4723
  br i1 %tobool887, label %if.else889, label %if.then888, !dbg !4724

if.then888:                                       ; preds = %if.then885
  call void @sel_mark_hard_insn(%struct.rtx_def* %insn) #6, !dbg !4725
  br label %if.end897, !dbg !4725

if.else889:                                       ; preds = %if.then885
  %183 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !4726
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %183) #8, !dbg !4726
  %184 = bitcast %struct._dep** %dep to i8*, !dbg !4727
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #8, !dbg !4727
  %185 = bitcast %struct._sd_iterator* %tmp890 to i8*, !dbg !4728
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %185) #8, !dbg !4728
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp890, %struct.rtx_def* %insn, i32 2) #7, !dbg !4728
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %183, i8* nonnull align 8 %185, i64 32, i1 false), !dbg !4728
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #8, !dbg !4728
  br label %for.cond891, !dbg !4730

for.cond891:                                      ; preds = %for.body894, %if.else889
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !4021, metadata !DIExpression(DW_OP_deref)), !dbg !4731
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !4026, metadata !DIExpression(DW_OP_deref)), !dbg !4731
  %call892 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !4732
  %tobool893 = icmp eq i8 %call892, 0, !dbg !4734
  br i1 %tobool893, label %for.end895, label %for.body894, !dbg !4734

for.body894:                                      ; preds = %for.cond891
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !4021, metadata !DIExpression(DW_OP_deref)), !dbg !4731
  call fastcc void @change_spec_dep_to_hard(%struct._sd_iterator* nonnull byval(%struct._sd_iterator) align 8 %sd_it) #7, !dbg !4735
  br label %for.cond891, !dbg !4736, !llvm.loop !4737

for.end895:                                       ; preds = %for.cond891
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #8, !dbg !4739
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %183) #8, !dbg !4739
  br label %if.end897

if.end897:                                        ; preds = %land.lhs.true882, %debug_dont_end_call_group, %if.then888, %for.end895
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !4740
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !4740
  ret void, !dbg !4740
}

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** %listp, i32 %uncond, i32 %dep_type) unnamed_addr #5 !dbg !4741 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !4746, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4747, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata %struct.rtx_def** %listp, metadata !4748, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i32 %uncond, metadata !4749, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i32 %dep_type, metadata !4750, metadata !DIExpression()), !dbg !4753
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !4754
  %bf.load = load i8, i8* %readonly, align 4, !dbg !4754
  %bf.clear = and i8 %bf.load, 1, !dbg !4754
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !4756
  %0 = load %struct.rtx_def*, %struct.rtx_def** %listp, align 8, !dbg !4753
  br i1 %tobool, label %if.end, label %if.then, !dbg !4757

if.then:                                          ; preds = %entry
  tail call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %0, i32 %uncond, i32 %dep_type) #7, !dbg !4758
  br label %cleanup.cont, !dbg !4760

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !4751, metadata !DIExpression()), !dbg !4753
  store %struct.rtx_def* null, %struct.rtx_def** %listp, align 8, !dbg !4761
  %tobool2 = icmp eq i32 %uncond, 0, !dbg !4763
  br i1 %tobool2, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !4767

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %for.cond, !dbg !4767

if.end.split.us:                                  ; preds = %if.end
  br label %for.cond.us, !dbg !4767

for.cond.us:                                      ; preds = %if.end13.us, %if.end.split.us
  %list.0.us = phi %struct.rtx_def* [ %0, %if.end.split.us ], [ %2, %if.end13.us ], !dbg !4768
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list.0.us, metadata !4751, metadata !DIExpression()), !dbg !4753
  %tobool1.us = icmp eq %struct.rtx_def* %list.0.us, null, !dbg !4769
  br i1 %tobool1.us, label %cleanup.cont.loopexit.us-lcssa.us, label %for.body.us, !dbg !4769

for.body.us:                                      ; preds = %for.cond.us
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0.us, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4770
  %rt_rtx.us = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4770
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx.us, align 8, !dbg !4770
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4752, metadata !DIExpression()), !dbg !4753
  %arrayidx5.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0.us, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4771
  %rt_rtx6.us = bitcast %union.rtunion_def* %arrayidx5.us to %struct.rtx_def**, !dbg !4771
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6.us, align 8, !dbg !4771
  %call.us = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn, %struct.rtx_def* %3) #7, !dbg !4772
  %tobool7.us = icmp eq i8 %call.us, 0, !dbg !4772
  br i1 %tobool7.us, label %if.then8.us, label %if.end13.us, !dbg !4773

if.then8.us:                                      ; preds = %for.body.us
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6.us, align 8, !dbg !4774
  tail call void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* %4, i32 %dep_type) #7, !dbg !4775
  br label %if.end13.us, !dbg !4775

if.end13.us:                                      ; preds = %if.then8.us, %for.body.us
  tail call void @free_INSN_LIST_node(%struct.rtx_def* nonnull %list.0.us) #6, !dbg !4776
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4751, metadata !DIExpression()), !dbg !4753
  br label %for.cond.us, !dbg !4777, !llvm.loop !4778

cleanup.cont.loopexit.us-lcssa.us:                ; preds = %for.cond.us
  br label %cleanup.cont.loopexit, !dbg !4780

for.cond:                                         ; preds = %for.body, %if.end.if.end.split_crit_edge
  %list.0 = phi %struct.rtx_def* [ %0, %if.end.if.end.split_crit_edge ], [ %6, %for.body ], !dbg !4768
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list.0, metadata !4751, metadata !DIExpression()), !dbg !4753
  %tobool1 = icmp eq %struct.rtx_def* %list.0, null, !dbg !4769
  br i1 %tobool1, label %cleanup.cont.loopexit.us-lcssa, label %for.body, !dbg !4769

for.body:                                         ; preds = %for.cond
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4770
  %rt_rtx = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !4770
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4770
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !4752, metadata !DIExpression()), !dbg !4753
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4774
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !4774
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !4774
  tail call void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* %7, i32 %dep_type) #7, !dbg !4775
  tail call void @free_INSN_LIST_node(%struct.rtx_def* nonnull %list.0) #6, !dbg !4776
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !4751, metadata !DIExpression()), !dbg !4753
  br label %for.cond, !dbg !4777, !llvm.loop !4778

cleanup.cont.loopexit.us-lcssa:                   ; preds = %for.cond
  br label %cleanup.cont.loopexit, !dbg !4780

cleanup.cont.loopexit:                            ; preds = %cleanup.cont.loopexit.us-lcssa.us, %cleanup.cont.loopexit.us-lcssa
  br label %cleanup.cont, !dbg !4780

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.then
  ret void, !dbg !4780
}

declare dso_local void @free_INSN_LIST_list(%struct.rtx_def**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @call_may_noreturn_p(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !4781 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4785, metadata !DIExpression()), !dbg !4790
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4791
  %bf.load = load i32, i32* %0, align 8, !dbg !4791
  %bf.clear = and i32 %bf.load, 67108864, !dbg !4791
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !4791
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !4791

lor.lhs.false:                                    ; preds = %entry
  %tobool3 = icmp slt i32 %bf.load, 0, !dbg !4791
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !4793

land.lhs.true:                                    ; preds = %entry, %lor.lhs.false
  %bf.clear6 = and i32 %bf.load, 33554432, !dbg !4794
  %tobool7 = icmp eq i32 %bf.clear6, 0, !dbg !4794
  br i1 %tobool7, label %cleanup115, label %if.end, !dbg !4795

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4796
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4796
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4796
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4796
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4786, metadata !DIExpression()), !dbg !4790
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !4797
  %bf.load8 = load i32, i32* %3, align 8, !dbg !4797
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !4797
  %cmp = icmp eq i32 %bf.clear9, 15, !dbg !4799
  br i1 %cmp, label %if.then10, label %if.end15, !dbg !4800

if.then10:                                        ; preds = %if.end
  %arrayidx13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4801
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtvec_def**, !dbg !4801
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4801
  %arrayidx14 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 1, i64 0, !dbg !4801
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx14, align 8, !dbg !4801
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !4786, metadata !DIExpression()), !dbg !4790
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !4802
  %bf.load16.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4804
  br label %if.end15, !dbg !4805

if.end15:                                         ; preds = %if.then10, %if.end
  %bf.load16 = phi i32 [ %bf.load16.pre, %if.then10 ], [ %bf.load8, %if.end ], !dbg !4804
  %call.0 = phi %struct.rtx_def* [ %5, %if.then10 ], [ %2, %if.end ], !dbg !4790
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call.0, metadata !4786, metadata !DIExpression()), !dbg !4790
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !4804
  %cmp18 = icmp eq i32 %bf.clear17, 23, !dbg !4806
  br i1 %cmp18, label %if.then19, label %if.end24, !dbg !4807

if.then19:                                        ; preds = %if.end15
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4808
  %rt_rtx23 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !4808
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !4808
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !4786, metadata !DIExpression()), !dbg !4790
  %.phi.trans.insert4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !4809
  %bf.load25.pre = load i32, i32* %.phi.trans.insert4, align 8, !dbg !4810
  br label %if.end24, !dbg !4811

if.end24:                                         ; preds = %if.then19, %if.end15
  %bf.load25 = phi i32 [ %bf.load25.pre, %if.then19 ], [ %bf.load16, %if.end15 ], !dbg !4810
  %call.1 = phi %struct.rtx_def* [ %7, %if.then19 ], [ %call.0, %if.end15 ], !dbg !4790
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call.1, metadata !4786, metadata !DIExpression()), !dbg !4790
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !4810
  %cmp27 = icmp eq i32 %bf.clear26, 26, !dbg !4812
  br i1 %cmp27, label %land.lhs.true28, label %if.end114, !dbg !4813

land.lhs.true28:                                  ; preds = %if.end24
  %arrayidx31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4814
  %8 = bitcast %union.rtunion_def* %arrayidx31 to i32**, !dbg !4814
  %9 = load i32*, i32** %8, align 8, !dbg !4814
  %bf.load33 = load i32, i32* %9, align 8, !dbg !4814
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !4814
  %cmp35 = icmp eq i32 %bf.clear34, 43, !dbg !4814
  br i1 %cmp35, label %land.lhs.true36, label %if.end114, !dbg !4815

land.lhs.true36:                                  ; preds = %land.lhs.true28
  %arrayidx43 = getelementptr inbounds i32, i32* %9, i64 2, !dbg !4816
  %10 = bitcast i32* %arrayidx43 to i32**, !dbg !4816
  %11 = load i32*, i32** %10, align 8, !dbg !4816
  %bf.load45 = load i32, i32* %11, align 8, !dbg !4816
  %bf.clear46 = and i32 %bf.load45, 65535, !dbg !4816
  %cmp47 = icmp eq i32 %bf.clear46, 45, !dbg !4817
  br i1 %cmp47, label %if.then48, label %if.end114, !dbg !4818

if.then48:                                        ; preds = %land.lhs.true36
  call void @llvm.dbg.value(metadata i32* %11, metadata !4787, metadata !DIExpression()), !dbg !4819
  %bf.clear59 = and i32 %bf.load45, 67108864, !dbg !4820
  %tobool60 = icmp eq i32 %bf.clear59, 0, !dbg !4820
  br i1 %tobool60, label %cond.false, label %if.end113, !dbg !4822

cond.false:                                       ; preds = %if.then48
  %12 = getelementptr inbounds i32, i32* %11, i64 6, !dbg !4820
  %rt_tree = bitcast i32* %12 to %union.tree_node**, !dbg !4820
  %13 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !4820
  %tobool64 = icmp eq %union.tree_node* %13, null, !dbg !4820
  br i1 %tobool64, label %if.end113, label %land.lhs.true65, !dbg !4822

land.lhs.true65:                                  ; preds = %cond.false
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4822
  %bf.load76 = load i64, i64* %14, align 8, !dbg !4823
  %bf.cast2 = and i64 %bf.load76, 65535, !dbg !4824
  %cmp78 = icmp eq i64 %bf.cast2, 29, !dbg !4824
  br i1 %cmp78, label %if.then79, label %if.end113, !dbg !4825

if.then79:                                        ; preds = %land.lhs.true65
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 5, !dbg !4826
  %bf.load92 = load i32, i32* %built_in_class, align 8, !dbg !4826
  %bf.clear94 = and i32 %bf.load92, 6144, !dbg !4826
  %cmp95 = icmp eq i32 %bf.clear94, 6144, !dbg !4829
  br i1 %cmp95, label %if.then96, label %if.end113, !dbg !4830

if.then96:                                        ; preds = %if.then79
  %bf.clear111 = and i32 %bf.load92, 2047, !dbg !4831
  switch i32 %bf.clear111, label %if.end113 [
    i32 324, label %cleanup
    i32 325, label %cleanup
    i32 326, label %cleanup
    i32 327, label %cleanup
    i32 328, label %cleanup
    i32 329, label %cleanup
    i32 330, label %cleanup
    i32 331, label %cleanup
    i32 332, label %cleanup
    i32 333, label %cleanup
    i32 334, label %cleanup
    i32 335, label %cleanup
    i32 336, label %cleanup
    i32 338, label %cleanup
    i32 339, label %cleanup
    i32 340, label %cleanup
    i32 341, label %cleanup
    i32 342, label %cleanup
    i32 345, label %cleanup
    i32 347, label %cleanup
    i32 348, label %cleanup
    i32 349, label %cleanup
    i32 350, label %cleanup
    i32 351, label %cleanup
    i32 352, label %cleanup
    i32 353, label %cleanup
  ], !dbg !4832

if.end113:                                        ; preds = %cond.false, %if.then48, %if.then79, %if.then96, %land.lhs.true65
  br label %cleanup, !dbg !4833

cleanup:                                          ; preds = %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.then96, %if.end113
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end113 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ], [ false, %if.then96 ]
  br i1 %cleanup.dest.slot.0, label %if.end114, label %cleanup115

if.end114:                                        ; preds = %cleanup, %land.lhs.true36, %land.lhs.true28, %if.end24
  br label %cleanup115, !dbg !4834

cleanup115:                                       ; preds = %land.lhs.true, %cleanup, %if.end114
  %retval.1 = phi i8 [ 0, %cleanup ], [ 1, %if.end114 ], [ 0, %land.lhs.true ]
  ret i8 %retval.1, !dbg !4835
}

declare dso_local void @cselib_process_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fixup_sched_groups(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !4836 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4838, metadata !DIExpression()), !dbg !4848
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !4849
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !4849
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !4850
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4850
  %2 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !4851
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !4851
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn, i32 3) #7, !dbg !4851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 32, i1 false), !dbg !4851
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !4851
  br label %for.cond, !dbg !4851

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !4839, metadata !DIExpression(DW_OP_deref)), !dbg !4848
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !4840, metadata !DIExpression(DW_OP_deref)), !dbg !4848
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !4852
  %tobool = icmp eq i8 %call, 0, !dbg !4851
  br i1 %tobool, label %for.end, label %for.body, !dbg !4851

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4842, metadata !DIExpression()), !dbg !4853
  %3 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !4854
  call void @llvm.dbg.value(metadata %struct._dep* %3, metadata !4840, metadata !DIExpression()), !dbg !4848
  %pro1 = getelementptr inbounds %struct._dep, %struct._dep* %3, i64 0, i32 0, !dbg !4854
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pro1, align 8, !dbg !4854
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4846, metadata !DIExpression()), !dbg !4853
  br label %do.body, !dbg !4855

do.body:                                          ; preds = %do.body.backedge, %for.body
  %i.0 = phi %struct.rtx_def* [ %insn, %for.body ], [ %call2, %do.body.backedge ], !dbg !4853
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i.0, metadata !4842, metadata !DIExpression()), !dbg !4853
  %call2 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %i.0) #6, !dbg !4856
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !4842, metadata !DIExpression()), !dbg !4853
  %cmp = icmp eq %struct.rtx_def* %4, %call2, !dbg !4858
  br i1 %cmp, label %for.inc.loopexit, label %do.cond, !dbg !4860

do.cond:                                          ; preds = %do.body
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2, i64 0, i32 0, !dbg !4861
  %bf.load = load i32, i32* %5, align 8, !dbg !4861
  %bf.clear = and i32 %bf.load, 268435456, !dbg !4861
  %tobool3 = icmp eq i32 %bf.clear, 0, !dbg !4861
  br i1 %tobool3, label %lor.rhs, label %do.body.backedge, !dbg !4862

lor.rhs:                                          ; preds = %do.cond
  %bf.clear5 = and i32 %bf.load, 65535, !dbg !4863
  %cmp6 = icmp eq i32 %bf.clear5, 7, !dbg !4863
  br i1 %cmp6, label %do.body.backedge, label %do.end, !dbg !4864

do.body.backedge:                                 ; preds = %lor.rhs, %do.cond
  br label %do.body, !dbg !4853, !llvm.loop !4865

do.end:                                           ; preds = %lor.rhs
  %call2.lcssa3 = phi %struct.rtx_def* [ %call2, %lor.rhs ], !dbg !4856
  %call7 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %call2.lcssa3, %struct.rtx_def* %4) #7, !dbg !4867
  %tobool8 = icmp eq i8 %call7, 0, !dbg !4867
  br i1 %tobool8, label %if.then9, label %for.inc, !dbg !4869

if.then9:                                         ; preds = %do.end
  %6 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !4870
  call void @llvm.dbg.value(metadata %struct._dep* %6, metadata !4840, metadata !DIExpression()), !dbg !4848
  %type = getelementptr inbounds %struct._dep, %struct._dep* %6, i64 0, i32 2, !dbg !4870
  %7 = load i32, i32* %type, align 8, !dbg !4870
  call void @add_dependence(%struct.rtx_def* %call2.lcssa3, %struct.rtx_def* %4, i32 %7) #7, !dbg !4871
  br label %for.inc, !dbg !4871

for.inc.loopexit:                                 ; preds = %do.body
  br label %for.inc, !dbg !4852

for.inc:                                          ; preds = %for.inc.loopexit, %do.end, %if.then9
  call void @llvm.dbg.label(metadata !4847), !dbg !4872
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !4839, metadata !DIExpression(DW_OP_deref)), !dbg !4848
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !4852
  br label %for.cond, !dbg !4852, !llvm.loop !4873

for.end:                                          ; preds = %for.cond
  call fastcc void @delete_all_dependences(%struct.rtx_def* %insn) #7, !dbg !4875
  %call11 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn) #6, !dbg !4876
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call11, metadata !4841, metadata !DIExpression()), !dbg !4848
  br label %while.cond, !dbg !4877

while.cond:                                       ; preds = %while.body, %for.end
  %prev_nonnote.0 = phi %struct.rtx_def* [ %call11, %for.end ], [ %call15, %while.body ], !dbg !4848
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev_nonnote.0, metadata !4841, metadata !DIExpression()), !dbg !4848
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev_nonnote.0, i64 0, i32 0, !dbg !4878
  %bf.load12 = load i32, i32* %8, align 8, !dbg !4878
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !4878
  %cmp14 = icmp eq i32 %bf.clear13, 7, !dbg !4878
  br i1 %cmp14, label %while.body, label %while.end, !dbg !4877

while.body:                                       ; preds = %while.cond
  %call15 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %prev_nonnote.0) #6, !dbg !4879
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15, metadata !4841, metadata !DIExpression()), !dbg !4848
  br label %while.cond, !dbg !4877, !llvm.loop !4880

while.end:                                        ; preds = %while.cond
  %prev_nonnote.0.lcssa = phi %struct.rtx_def* [ %prev_nonnote.0, %while.cond ], !dbg !4848
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev_nonnote.0.lcssa, metadata !4841, metadata !DIExpression()), !dbg !4848
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev_nonnote.0.lcssa, metadata !4841, metadata !DIExpression()), !dbg !4848
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev_nonnote.0.lcssa, metadata !4841, metadata !DIExpression()), !dbg !4848
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4882
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !4882
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4882
  %arrayidx18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev_nonnote.0.lcssa, i64 0, i32 1, i32 0, i32 1, !dbg !4884
  %rt_bb19 = bitcast %struct.object_block** %arrayidx18 to %struct.basic_block_def**, !dbg !4884
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb19, align 8, !dbg !4884
  %cmp20 = icmp eq %struct.basic_block_def* %9, %10, !dbg !4885
  br i1 %cmp20, label %land.lhs.true, label %if.end24, !dbg !4886

land.lhs.true:                                    ; preds = %while.end
  %call21 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn, %struct.rtx_def* %prev_nonnote.0.lcssa) #7, !dbg !4887
  %tobool22 = icmp eq i8 %call21, 0, !dbg !4887
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !4888

if.then23:                                        ; preds = %land.lhs.true
  call void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* %prev_nonnote.0.lcssa, i32 12) #7, !dbg !4889
  br label %if.end24, !dbg !4889

if.end24:                                         ; preds = %land.lhs.true, %if.then23, %while.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4890
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !4890
  ret void, !dbg !4890
}

; Function Attrs: nounwind uwtable
define dso_local void @deps_start_bb(%struct.deps* %deps, %struct.rtx_def* %head) local_unnamed_addr #5 !dbg !4891 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !4893, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !4894, metadata !DIExpression()), !dbg !4898
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !4899
  %bf.load = load i8, i8* %readonly, align 4, !dbg !4899
  %bf.clear = and i8 %bf.load, 1, !dbg !4899
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !4899
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4899

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3362, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4899
  br label %cond.end, !dbg !4899

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load i32, i32* @reload_completed, align 4, !dbg !4900
  %tobool1 = icmp eq i32 %0, 0, !dbg !4900
  br i1 %tobool1, label %land.lhs.true, label %if.end15, !dbg !4901

land.lhs.true:                                    ; preds = %cond.end
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head, i64 0, i32 0, !dbg !4902
  %bf.load2 = load i32, i32* %1, align 8, !dbg !4902
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !4902
  %cmp = icmp eq i32 %bf.clear3, 12, !dbg !4902
  br i1 %cmp, label %if.end15, label %if.then, !dbg !4903

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %head) #6, !dbg !4904
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4895, metadata !DIExpression()), !dbg !4905
  br label %while.cond, !dbg !4906

while.cond:                                       ; preds = %while.body, %if.then
  %insn.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call8, %while.body ], !dbg !4905
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4895, metadata !DIExpression()), !dbg !4905
  %cond = icmp eq %struct.rtx_def* %insn.0, null, !dbg !4907
  br i1 %cond, label %if.end15.loopexit, label %land.rhs, !dbg !4907

land.rhs:                                         ; preds = %while.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4908
  %bf.load5 = load i32, i32* %2, align 8, !dbg !4908
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !4908
  %cmp7 = icmp eq i32 %bf.clear6, 7, !dbg !4908
  br i1 %cmp7, label %while.body, label %while.end, !dbg !4906

while.body:                                       ; preds = %land.rhs
  %call8 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* nonnull %insn.0) #6, !dbg !4909
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call8, metadata !4895, metadata !DIExpression()), !dbg !4905
  br label %while.cond, !dbg !4906, !llvm.loop !4910

while.end:                                        ; preds = %land.rhs
  %bf.clear6.lcssa = phi i32 [ %bf.clear6, %land.rhs ], !dbg !4908
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4895, metadata !DIExpression()), !dbg !4905
  %cmp13 = icmp eq i32 %bf.clear6.lcssa, 10, !dbg !4912
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !4914

if.then14:                                        ; preds = %while.end
  %in_post_call_group_p = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 11, !dbg !4915
  store i32 2, i32* %in_post_call_group_p, align 8, !dbg !4916
  br label %if.end15, !dbg !4917

if.end15.loopexit:                                ; preds = %while.cond
  br label %if.end15, !dbg !4918

if.end15:                                         ; preds = %if.end15.loopexit, %cond.end, %while.end, %if.then14, %land.lhs.true
  ret void, !dbg !4918
}

declare dso_local %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sched_analyze(%struct.deps* %deps, %struct.rtx_def* %head, %struct.rtx_def* %tail) local_unnamed_addr #5 !dbg !4919 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !4921, metadata !DIExpression()), !dbg !4925
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !4922, metadata !DIExpression()), !dbg !4925
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !4923, metadata !DIExpression()), !dbg !4925
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !4926
  %use_cselib = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i64 0, i32 12, !dbg !4928
  %bf.load = load i8, i8* %use_cselib, align 8, !dbg !4928
  %bf.clear = and i8 %bf.load, 1, !dbg !4928
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !4926
  br i1 %tobool, label %if.end, label %if.then, !dbg !4929

if.then:                                          ; preds = %entry
  tail call void @cselib_init(i32 1) #6, !dbg !4930
  br label %if.end, !dbg !4930

if.end:                                           ; preds = %entry, %if.then
  tail call void @deps_start_bb(%struct.deps* %deps, %struct.rtx_def* %head) #7, !dbg !4931
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !4924, metadata !DIExpression()), !dbg !4925
  br label %for.cond, !dbg !4932

for.cond:                                         ; preds = %for.inc, %if.end
  %insn.0 = phi %struct.rtx_def* [ %head, %if.end ], [ %4, %for.inc ], !dbg !4934
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4924, metadata !DIExpression()), !dbg !4925
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4935
  %bf.load1 = load i32, i32* %1, align 8, !dbg !4935
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4935
  %cmp = icmp eq i32 %bf.clear2, 8, !dbg !4935
  br i1 %cmp, label %if.then14, label %lor.lhs.false, !dbg !4935

lor.lhs.false:                                    ; preds = %for.cond
  %cmp5 = icmp eq i32 %bf.clear2, 7, !dbg !4935
  br i1 %cmp5, label %if.then14, label %lor.lhs.false6, !dbg !4935

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp9 = icmp eq i32 %bf.clear2, 9, !dbg !4935
  br i1 %cmp9, label %if.then14, label %lor.lhs.false10, !dbg !4935

lor.lhs.false10:                                  ; preds = %lor.lhs.false6
  %cmp13 = icmp eq i32 %bf.clear2, 10, !dbg !4935
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !4939

if.then14:                                        ; preds = %lor.lhs.false10, %lor.lhs.false6, %lor.lhs.false, %for.cond
  tail call void @sd_init_insn(%struct.rtx_def* %insn.0) #7, !dbg !4940
  br label %if.end15, !dbg !4942

if.end15:                                         ; preds = %if.then14, %lor.lhs.false10
  tail call void @deps_analyze_insn(%struct.deps* %deps, %struct.rtx_def* %insn.0) #7, !dbg !4943
  %cmp16 = icmp eq %struct.rtx_def* %insn.0, %tail, !dbg !4944
  br i1 %cmp16, label %if.then17, label %for.inc, !dbg !4946

if.then17:                                        ; preds = %if.end15
  %2 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !4947
  %use_cselib18 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %2, i64 0, i32 12, !dbg !4950
  %bf.load19 = load i8, i8* %use_cselib18, align 8, !dbg !4950
  %bf.clear20 = and i8 %bf.load19, 1, !dbg !4950
  %tobool22 = icmp eq i8 %bf.clear20, 0, !dbg !4947
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !4951

if.then23:                                        ; preds = %if.then17
  tail call void @cselib_finish() #6, !dbg !4952
  br label %if.end24, !dbg !4952

if.end24:                                         ; preds = %if.then17, %if.then23
  ret void, !dbg !4953

for.inc:                                          ; preds = %if.end15
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4954
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !4954
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4924, metadata !DIExpression()), !dbg !4925
  br label %for.cond, !dbg !4955, !llvm.loop !4956
}

declare dso_local void @cselib_init(i32) local_unnamed_addr #2

declare dso_local void @cselib_finish() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sched_free_deps(%struct.rtx_def* %head, %struct.rtx_def* %tail, i8 zeroext %resolved_p) local_unnamed_addr #5 !dbg !4959 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !4961, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !4962, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i8 %resolved_p, metadata !4963, metadata !DIExpression()), !dbg !4966
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tail, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4967
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !4967
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4967
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4965, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !4964, metadata !DIExpression()), !dbg !4966
  %tobool17 = icmp eq i8 %resolved_p, 0, !dbg !4968
  br i1 %tobool17, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !4974

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !4974

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !4974

for.cond.us:                                      ; preds = %for.inc.us, %entry.split.us
  %insn.0.us = phi %struct.rtx_def* [ %head, %entry.split.us ], [ %10, %for.inc.us ], !dbg !4975
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.us, metadata !4964, metadata !DIExpression()), !dbg !4966
  %cmp.us = icmp eq %struct.rtx_def* %insn.0.us, %1, !dbg !4976
  br i1 %cmp.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !4977

for.body.us:                                      ; preds = %for.cond.us
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 0, !dbg !4978
  %bf.load.us = load i32, i32* %2, align 8, !dbg !4978
  %bf.clear.us = and i32 %bf.load.us, 65535, !dbg !4978
  %cmp1.us = icmp eq i32 %bf.clear.us, 8, !dbg !4978
  br i1 %cmp1.us, label %land.lhs.true.us, label %lor.lhs.false.us, !dbg !4978

lor.lhs.false.us:                                 ; preds = %for.body.us
  %cmp4.us = icmp eq i32 %bf.clear.us, 7, !dbg !4978
  br i1 %cmp4.us, label %land.lhs.true.us, label %lor.lhs.false5.us, !dbg !4978

lor.lhs.false5.us:                                ; preds = %lor.lhs.false.us
  %cmp8.us = icmp eq i32 %bf.clear.us, 9, !dbg !4978
  br i1 %cmp8.us, label %land.lhs.true.us, label %lor.lhs.false9.us, !dbg !4978

lor.lhs.false9.us:                                ; preds = %lor.lhs.false5.us
  %cmp12.us = icmp eq i32 %bf.clear.us, 10, !dbg !4978
  br i1 %cmp12.us, label %land.lhs.true.us, label %for.inc.us, !dbg !4979

land.lhs.true.us:                                 ; preds = %lor.lhs.false9.us, %lor.lhs.false5.us, %lor.lhs.false.us, %for.body.us
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4980
  %base.us = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i64 0, i32 0, !dbg !4980
  %arrayidx15.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4980
  %rt_int.us = bitcast %union.rtunion_def* %arrayidx15.us to i32*, !dbg !4980
  %4 = load i32, i32* %rt_int.us, align 8, !dbg !4980
  %call.us = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base.us, i32 %4) #7, !dbg !4980
  %cmp16.us = icmp sgt i32 %call.us, 0, !dbg !4981
  br i1 %cmp16.us, label %if.then.us, label %for.inc.us, !dbg !4982

if.then.us:                                       ; preds = %land.lhs.true.us
  tail call fastcc void @delete_dep_nodes_in_back_deps(%struct.rtx_def* %insn.0.us, i8 zeroext 0) #7, !dbg !4983
  %5 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !4968
  %base21.us = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %5, i64 0, i32 0, !dbg !4968
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4968
  %base27.us = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !4968
  %7 = load i32, i32* %rt_int.us, align 8, !dbg !4968
  %call35.us = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base27.us, i32 %7) #7, !dbg !4968
  %call36.us = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base21.us, i32 %call35.us) #7, !dbg !4968
  %forw_deps.us = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call36.us, i64 0, i32 4, !dbg !4984
  %8 = load %struct._deps_list*, %struct._deps_list** %forw_deps.us, align 8, !dbg !4984
  tail call fastcc void @clear_deps_list(%struct._deps_list* %8) #7, !dbg !4985
  tail call void @sd_finish_insn(%struct.rtx_def* %insn.0.us) #7, !dbg !4986
  br label %for.inc.us, !dbg !4987

for.inc.us:                                       ; preds = %if.then.us, %land.lhs.true.us, %lor.lhs.false9.us
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4988
  %rt_rtx59.us = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !4988
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx59.us, align 8, !dbg !4988
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !4964, metadata !DIExpression()), !dbg !4966
  br label %for.cond.us, !dbg !4989, !llvm.loop !4990

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !4992

for.cond:                                         ; preds = %for.inc, %entry.entry.split_crit_edge
  %insn.0 = phi %struct.rtx_def* [ %head, %entry.entry.split_crit_edge ], [ %19, %for.inc ], !dbg !4975
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4964, metadata !DIExpression()), !dbg !4966
  %cmp = icmp eq %struct.rtx_def* %insn.0, %1, !dbg !4976
  br i1 %cmp, label %for.end.us-lcssa, label %for.body, !dbg !4977

for.body:                                         ; preds = %for.cond
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4978
  %bf.load = load i32, i32* %11, align 8, !dbg !4978
  %bf.clear = and i32 %bf.load, 65535, !dbg !4978
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !4978
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !4978

lor.lhs.false:                                    ; preds = %for.body
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !4978
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false5, !dbg !4978

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !4978
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false9, !dbg !4978

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 10, !dbg !4978
  br i1 %cmp12, label %land.lhs.true, label %for.inc, !dbg !4979

land.lhs.true:                                    ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %for.body
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4980
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %12, i64 0, i32 0, !dbg !4980
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4980
  %rt_int = bitcast %union.rtunion_def* %arrayidx15 to i32*, !dbg !4980
  %13 = load i32, i32* %rt_int, align 8, !dbg !4980
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %13) #7, !dbg !4980
  %cmp16 = icmp sgt i32 %call, 0, !dbg !4981
  br i1 %cmp16, label %if.then, label %for.inc, !dbg !4982

if.then:                                          ; preds = %land.lhs.true
  tail call fastcc void @delete_dep_nodes_in_back_deps(%struct.rtx_def* %insn.0, i8 zeroext %resolved_p) #7, !dbg !4983
  %14 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !4968
  %base21 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %14, i64 0, i32 0, !dbg !4968
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4968
  %base27 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %15, i64 0, i32 0, !dbg !4968
  %16 = load i32, i32* %rt_int, align 8, !dbg !4968
  %call35 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base27, i32 %16) #7, !dbg !4968
  %call36 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base21, i32 %call35) #7, !dbg !4968
  %resolved_forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call36, i64 0, i32 6, !dbg !4993
  %17 = load %struct._deps_list*, %struct._deps_list** %resolved_forw_deps, align 8, !dbg !4993
  tail call fastcc void @clear_deps_list(%struct._deps_list* %17) #7, !dbg !4994
  tail call void @sd_finish_insn(%struct.rtx_def* %insn.0) #7, !dbg !4986
  br label %for.inc, !dbg !4987

for.inc:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %if.then
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4988
  %rt_rtx59 = bitcast %union.rtunion_def* %18 to %struct.rtx_def**, !dbg !4988
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx59, align 8, !dbg !4988
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !4964, metadata !DIExpression()), !dbg !4966
  br label %for.cond, !dbg !4989, !llvm.loop !4990

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !4992

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  ret void, !dbg !4992
}

; Function Attrs: nounwind uwtable
define internal fastcc void @delete_dep_nodes_in_back_deps(%struct.rtx_def* %insn, i8 zeroext %resolved_p) unnamed_addr #5 !dbg !4995 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  %back_list = alloca %struct._deps_list*, align 8
  %forw_list = alloca %struct._deps_list*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4999, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.value(metadata i8 %resolved_p, metadata !5000, metadata !DIExpression()), !dbg !5011
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !5012
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5012
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !5013
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5013
  %tobool = icmp eq i8 %resolved_p, 0, !dbg !5014
  %. = select i1 %tobool, i32 3, i32 8
  call void @llvm.dbg.value(metadata i32 %., metadata !5003, metadata !DIExpression()), !dbg !5011
  %2 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !5016
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !5016
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn, i32 %.) #7, !dbg !5016
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 32, i1 false), !dbg !5016
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !5016
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %sd_it, i64 0, i32 2, !dbg !5017
  %3 = bitcast %struct._deps_list** %back_list to i8*, !dbg !5017
  %4 = bitcast %struct._deps_list** %forw_list to i8*, !dbg !5017
  br label %for.cond, !dbg !5018

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !5001, metadata !DIExpression(DW_OP_deref)), !dbg !5011
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !5002, metadata !DIExpression(DW_OP_deref)), !dbg !5011
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !5019
  %tobool1 = icmp eq i8 %call, 0, !dbg !5020
  br i1 %tobool1, label %for.end, label %for.body, !dbg !5020

for.body:                                         ; preds = %for.cond
  %5 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !5021
  %6 = load %struct._dep_link*, %struct._dep_link** %5, align 8, !dbg !5022
  call void @llvm.dbg.value(metadata %struct._dep_link* %6, metadata !5004, metadata !DIExpression()), !dbg !5017
  %node2 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %6, i64 0, i32 0, !dbg !5023
  %7 = load %struct._dep_node*, %struct._dep_node** %node2, align 8, !dbg !5023
  call void @llvm.dbg.value(metadata %struct._dep_node* %7, metadata !5008, metadata !DIExpression()), !dbg !5017
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5024
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5025
  %8 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !5026
  call void @llvm.dbg.value(metadata %struct._dep* %8, metadata !5002, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.value(metadata %struct._deps_list** %back_list, metadata !5009, metadata !DIExpression(DW_OP_deref)), !dbg !5017
  call void @llvm.dbg.value(metadata %struct._deps_list** %forw_list, metadata !5010, metadata !DIExpression(DW_OP_deref)), !dbg !5017
  call fastcc void @get_back_and_forw_lists(%struct._dep* %8, i8 zeroext %resolved_p, %struct._deps_list** nonnull %back_list, %struct._deps_list** nonnull %forw_list) #7, !dbg !5027
  %9 = load %struct._deps_list*, %struct._deps_list** %back_list, align 8, !dbg !5028
  call void @llvm.dbg.value(metadata %struct._deps_list* %9, metadata !5009, metadata !DIExpression()), !dbg !5017
  call fastcc void @remove_from_deps_list(%struct._dep_link* %6, %struct._deps_list* %9) #7, !dbg !5029
  call fastcc void @delete_dep_node(%struct._dep_node* %7) #7, !dbg !5030
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5031
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5031
  br label %for.cond, !dbg !5032, !llvm.loop !5033

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5035
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5035
  ret void, !dbg !5035
}

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_deps_list(%struct._deps_list* %l) unnamed_addr #5 !dbg !5036 {
entry:
  call void @llvm.dbg.value(metadata %struct._deps_list* %l, metadata !5038, metadata !DIExpression()), !dbg !5041
  %first = getelementptr inbounds %struct._deps_list, %struct._deps_list* %l, i64 0, i32 0, !dbg !5042
  br label %do.body, !dbg !5043

do.body:                                          ; preds = %cleanup, %entry
  %0 = load %struct._dep_link*, %struct._dep_link** %first, align 8, !dbg !5044
  call void @llvm.dbg.value(metadata %struct._dep_link* %0, metadata !5039, metadata !DIExpression()), !dbg !5042
  %cmp = icmp eq %struct._dep_link* %0, null, !dbg !5045
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5047

if.end:                                           ; preds = %do.body
  tail call fastcc void @remove_from_deps_list(%struct._dep_link* nonnull %0, %struct._deps_list* %l) #7, !dbg !5048
  br label %cleanup, !dbg !5049

cleanup:                                          ; preds = %do.body, %if.end
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %do.body ]
  br i1 %cleanup.dest.slot.0, label %do.body, label %do.end

do.end:                                           ; preds = %cleanup
  ret void, !dbg !5050
}

; Function Attrs: nounwind uwtable
define dso_local void @init_deps(%struct.deps* %deps, i8 zeroext %lazy_reg_last) local_unnamed_addr #5 !dbg !5051 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !5055, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i8 %lazy_reg_last, metadata !5056, metadata !DIExpression()), !dbg !5058
  %0 = load i32, i32* @reload_completed, align 4, !dbg !5059
  %tobool = icmp eq i32 %0, 0, !dbg !5059
  br i1 %tobool, label %cond.false, label %cond.end, !dbg !5059

cond.false:                                       ; preds = %entry
  %call = tail call i32 @max_reg_num() #6, !dbg !5060
  br label %cond.end, !dbg !5059

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i32 [ %call, %cond.false ], [ 53, %entry ], !dbg !5059
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5057, metadata !DIExpression()), !dbg !5058
  %max_reg1 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 13, !dbg !5061
  store i32 %cond, i32* %max_reg1, align 8, !dbg !5062
  %tobool2 = icmp eq i8 %lazy_reg_last, 0, !dbg !5063
  br i1 %tobool2, label %if.else, label %if.then, !dbg !5065

if.then:                                          ; preds = %cond.end
  %reg_last = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 14, !dbg !5066
  store %struct.deps_reg* null, %struct.deps_reg** %reg_last, align 8, !dbg !5067
  br label %if.end, !dbg !5068

if.else:                                          ; preds = %cond.end
  %conv = sext i32 %cond to i64, !dbg !5069
  %call3 = tail call i8* @xcalloc(i64 %conv, i64 40) #6, !dbg !5069
  %reg_last4 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 14, !dbg !5070
  %1 = bitcast %struct.deps_reg** %reg_last4 to i8**, !dbg !5071
  store i8* %call3, i8** %1, align 8, !dbg !5071
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %reg_last_in_use = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 15, !dbg !5072
  tail call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* nonnull %reg_last_in_use, %struct.bitmap_obstack* nonnull @reg_obstack) #7, !dbg !5072
  %reg_conditional_sets = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 16, !dbg !5073
  tail call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* nonnull %reg_conditional_sets, %struct.bitmap_obstack* nonnull @reg_obstack) #7, !dbg !5073
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 0, !dbg !5074
  store %struct.rtx_def* null, %struct.rtx_def** %pending_read_insns, align 8, !dbg !5075
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 1, !dbg !5076
  store %struct.rtx_def* null, %struct.rtx_def** %pending_read_mems, align 8, !dbg !5077
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 2, !dbg !5078
  store %struct.rtx_def* null, %struct.rtx_def** %pending_write_insns, align 8, !dbg !5079
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 3, !dbg !5080
  store %struct.rtx_def* null, %struct.rtx_def** %pending_write_mems, align 8, !dbg !5081
  %pending_read_list_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 4, !dbg !5082
  store i32 0, i32* %pending_read_list_length, align 8, !dbg !5083
  %pending_write_list_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 5, !dbg !5084
  store i32 0, i32* %pending_write_list_length, align 4, !dbg !5085
  %pending_flush_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 6, !dbg !5086
  store i32 0, i32* %pending_flush_length, align 8, !dbg !5087
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 7, !dbg !5088
  store %struct.rtx_def* null, %struct.rtx_def** %last_pending_memory_flush, align 8, !dbg !5089
  %last_function_call = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 8, !dbg !5090
  store %struct.rtx_def* null, %struct.rtx_def** %last_function_call, align 8, !dbg !5091
  %last_function_call_may_noreturn = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 9, !dbg !5092
  store %struct.rtx_def* null, %struct.rtx_def** %last_function_call_may_noreturn, align 8, !dbg !5093
  %sched_before_next_call = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 10, !dbg !5094
  store %struct.rtx_def* null, %struct.rtx_def** %sched_before_next_call, align 8, !dbg !5095
  %in_post_call_group_p = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 11, !dbg !5096
  store i32 0, i32* %in_post_call_group_p, align 8, !dbg !5097
  %last_debug_insn = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 12, !dbg !5098
  store %struct.rtx_def* null, %struct.rtx_def** %last_debug_insn, align 8, !dbg !5099
  %last_reg_pending_barrier = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 17, !dbg !5100
  store i32 0, i32* %last_reg_pending_barrier, align 8, !dbg !5101
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !5102
  %bf.load = load i8, i8* %readonly, align 4, !dbg !5103
  %bf.clear = and i8 %bf.load, -2, !dbg !5103
  store i8 %bf.clear, i8* %readonly, align 4, !dbg !5103
  ret void, !dbg !5104
}

declare dso_local i32 @max_reg_num() local_unnamed_addr #2

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %head, %struct.bitmap_obstack* %obstack) unnamed_addr #0 !dbg !5105 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %head, metadata !5109, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata %struct.bitmap_obstack* %obstack, metadata !5110, metadata !DIExpression()), !dbg !5111
  %current = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 1, !dbg !5112
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %current, align 8, !dbg !5113
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 0, !dbg !5114
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %first, align 8, !dbg !5115
  %obstack1 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 3, !dbg !5116
  store %struct.bitmap_obstack* %obstack, %struct.bitmap_obstack** %obstack1, align 8, !dbg !5117
  ret void, !dbg !5118
}

; Function Attrs: nounwind uwtable
define dso_local void @init_deps_reg_last(%struct.deps* %deps) local_unnamed_addr #5 !dbg !5119 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !5123, metadata !DIExpression()), !dbg !5124
  %tobool = icmp eq %struct.deps* %deps, null, !dbg !5125
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !5125

land.lhs.true:                                    ; preds = %entry
  %max_reg = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 13, !dbg !5125
  %0 = load i32, i32* %max_reg, align 8, !dbg !5125
  %cmp = icmp sgt i32 %0, 0, !dbg !5125
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5125

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3503, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5125
  br label %cond.end, !dbg !5125

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %reg_last = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 14, !dbg !5126
  %1 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !5126
  %cmp1 = icmp eq %struct.deps_reg* %1, null, !dbg !5126
  br i1 %cmp1, label %cond.end4, label %cond.true2, !dbg !5126

cond.true2:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3504, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5126
  br label %cond.end4, !dbg !5126

cond.end4:                                        ; preds = %cond.end, %cond.true2
  %max_reg6 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 13, !dbg !5127
  %2 = load i32, i32* %max_reg6, align 8, !dbg !5127
  %conv = sext i32 %2 to i64, !dbg !5127
  %call = tail call i8* @xcalloc(i64 %conv, i64 40) #6, !dbg !5127
  %3 = bitcast %struct.deps_reg** %reg_last to i8**, !dbg !5128
  store i8* %call, i8** %3, align 8, !dbg !5128
  ret void, !dbg !5129
}

; Function Attrs: nounwind uwtable
define dso_local void @free_deps(%struct.deps* %deps) local_unnamed_addr #5 !dbg !5130 {
entry:
  %i = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !5132, metadata !DIExpression()), !dbg !5139
  %0 = bitcast i32* %i to i8*, !dbg !5140
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5140
  %1 = bitcast %struct.bitmap_iterator* %rsi to i8*, !dbg !5141
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5141
  %max_reg = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 13, !dbg !5142
  %2 = load i32, i32* %max_reg, align 8, !dbg !5142
  %cmp = icmp eq i32 %2, 0, !dbg !5144
  br i1 %cmp, label %if.then, label %if.end, !dbg !5145

if.then:                                          ; preds = %entry
  %reg_last = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 14, !dbg !5146
  %3 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !5146
  %cmp1 = icmp eq %struct.deps_reg* %3, null, !dbg !5146
  br i1 %cmp1, label %cleanup, label %cond.true, !dbg !5146

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3521, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5146
  br label %cleanup, !dbg !5146

if.end:                                           ; preds = %entry
  store i32 0, i32* %max_reg, align 8, !dbg !5148
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 0, !dbg !5149
  tail call void @free_INSN_LIST_list(%struct.rtx_def** %pending_read_insns) #6, !dbg !5150
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 1, !dbg !5151
  tail call void @free_EXPR_LIST_list(%struct.rtx_def** nonnull %pending_read_mems) #6, !dbg !5152
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 2, !dbg !5153
  tail call void @free_INSN_LIST_list(%struct.rtx_def** nonnull %pending_write_insns) #6, !dbg !5154
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 3, !dbg !5155
  tail call void @free_EXPR_LIST_list(%struct.rtx_def** nonnull %pending_write_mems) #6, !dbg !5156
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 7, !dbg !5157
  tail call void @free_INSN_LIST_list(%struct.rtx_def** nonnull %last_pending_memory_flush) #6, !dbg !5158
  %reg_last_in_use = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 15, !dbg !5159
  call void @llvm.dbg.value(metadata i32* %i, metadata !5133, metadata !DIExpression(DW_OP_deref)), !dbg !5139
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !5134, metadata !DIExpression(DW_OP_deref)), !dbg !5139
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* nonnull %reg_last_in_use, i32 0, i32* nonnull %i) #7, !dbg !5159
  %reg_last4 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 14, !dbg !5160
  br label %for.cond, !dbg !5159

for.cond:                                         ; preds = %for.inc, %if.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !5133, metadata !DIExpression(DW_OP_deref)), !dbg !5139
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !5134, metadata !DIExpression(DW_OP_deref)), !dbg !5139
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !5161
  %tobool = icmp eq i8 %call, 0, !dbg !5159
  br i1 %tobool, label %for.end, label %for.body, !dbg !5159

for.body:                                         ; preds = %for.cond
  %4 = load %struct.deps_reg*, %struct.deps_reg** %reg_last4, align 8, !dbg !5162
  %5 = load i32, i32* %i, align 4, !dbg !5163
  call void @llvm.dbg.value(metadata i32 %5, metadata !5133, metadata !DIExpression()), !dbg !5139
  %idxprom = zext i32 %5 to i64, !dbg !5164
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !5135, metadata !DIExpression()), !dbg !5160
  %uses = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %4, i64 %idxprom, i32 0, !dbg !5165
  %6 = load %struct.rtx_def*, %struct.rtx_def** %uses, align 8, !dbg !5165
  %tobool5 = icmp eq %struct.rtx_def* %6, null, !dbg !5167
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !5168

if.then6:                                         ; preds = %for.body
  call void @free_INSN_LIST_list(%struct.rtx_def** %uses) #6, !dbg !5169
  br label %if.end8, !dbg !5169

if.end8:                                          ; preds = %for.body, %if.then6
  %sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %4, i64 %idxprom, i32 1, !dbg !5170
  %7 = load %struct.rtx_def*, %struct.rtx_def** %sets, align 8, !dbg !5170
  %tobool9 = icmp eq %struct.rtx_def* %7, null, !dbg !5172
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !5173

if.then10:                                        ; preds = %if.end8
  call void @free_INSN_LIST_list(%struct.rtx_def** nonnull %sets) #6, !dbg !5174
  br label %if.end12, !dbg !5174

if.end12:                                         ; preds = %if.end8, %if.then10
  %implicit_sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %4, i64 %idxprom, i32 2, !dbg !5175
  %8 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets, align 8, !dbg !5175
  %tobool13 = icmp eq %struct.rtx_def* %8, null, !dbg !5177
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !5178

if.then14:                                        ; preds = %if.end12
  call void @free_INSN_LIST_list(%struct.rtx_def** nonnull %implicit_sets) #6, !dbg !5179
  br label %if.end16, !dbg !5179

if.end16:                                         ; preds = %if.end12, %if.then14
  %clobbers = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %4, i64 %idxprom, i32 3, !dbg !5180
  %9 = load %struct.rtx_def*, %struct.rtx_def** %clobbers, align 8, !dbg !5180
  %tobool17 = icmp eq %struct.rtx_def* %9, null, !dbg !5182
  br i1 %tobool17, label %for.inc, label %if.then18, !dbg !5183

if.then18:                                        ; preds = %if.end16
  call void @free_INSN_LIST_list(%struct.rtx_def** nonnull %clobbers) #6, !dbg !5184
  br label %for.inc, !dbg !5184

for.inc:                                          ; preds = %if.end16, %if.then18
  call void @llvm.dbg.value(metadata i32* %i, metadata !5133, metadata !DIExpression(DW_OP_deref)), !dbg !5139
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !5134, metadata !DIExpression(DW_OP_deref)), !dbg !5139
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !5161
  br label %for.cond, !dbg !5161, !llvm.loop !5185

for.end:                                          ; preds = %for.cond
  call void @bitmap_clear(%struct.bitmap_head_def* nonnull %reg_last_in_use) #6, !dbg !5187
  %reg_conditional_sets = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 16, !dbg !5188
  call void @bitmap_clear(%struct.bitmap_head_def* nonnull %reg_conditional_sets) #6, !dbg !5188
  %10 = load %struct.deps_reg*, %struct.deps_reg** %reg_last4, align 8, !dbg !5189
  %tobool23 = icmp eq %struct.deps_reg* %10, null, !dbg !5191
  br i1 %tobool23, label %if.end26, label %if.then24, !dbg !5192

if.then24:                                        ; preds = %for.end
  %11 = bitcast %struct.deps_reg* %10 to i8*, !dbg !5192
  call void @free(i8* nonnull %11) #6, !dbg !5193
  br label %if.end26, !dbg !5193

if.end26:                                         ; preds = %for.end, %if.then24
  store %struct.deps_reg* null, %struct.deps_reg** %reg_last4, align 8, !dbg !5194
  call void @llvm.dbg.value(metadata %struct.deps* null, metadata !5132, metadata !DIExpression()), !dbg !5139
  br label %cleanup, !dbg !5195

cleanup:                                          ; preds = %cond.true, %if.then, %if.end26
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5195
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5195
  ret void, !dbg !5195
}

declare dso_local void @free_EXPR_LIST_list(%struct.rtx_def**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !5196 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5205, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !5206, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.value(metadata i32 0, metadata !5207, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !5208, metadata !DIExpression()), !dbg !5209
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !5210
  %1 = load i64, i64* %0, align 8, !dbg !5210
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !5211
  store i64 %1, i64* %2, align 8, !dbg !5211
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !5212
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !5213
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !5214
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !5217
  br label %while.body, !dbg !5217

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !5218
  br i1 %tobool, label %if.then, label %if.end, !dbg !5219

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !5220
  br label %while.end, !dbg !5222

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !5223

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !5217, !llvm.loop !5224

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !5226

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !5226
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !5228
  %7 = load i32, i32* %indx9, align 8, !dbg !5228
  %cmp11 = icmp eq i32 %7, 0, !dbg !5229
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !5230

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !5231
  %8 = load i32, i32* %indx14, align 8, !dbg !5231
  %mul = shl i32 %8, 7, !dbg !5232
  call void @llvm.dbg.value(metadata i32 %mul, metadata !5207, metadata !DIExpression()), !dbg !5209
  br label %if.end15, !dbg !5233

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !5207, metadata !DIExpression()), !dbg !5209
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !5234
  store i32 0, i32* %word_no, align 8, !dbg !5235
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !5236
  %9 = load i64, i64* %arrayidx, align 8, !dbg !5236
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !5237
  store i64 %9, i64* %bits21, align 8, !dbg !5238
  %tobool23 = icmp eq i64 %9, 0, !dbg !5239
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !5239
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !5240
  call void @llvm.dbg.value(metadata i32 %add, metadata !5207, metadata !DIExpression()), !dbg !5209
  store i32 %add, i32* %bit_no, align 4, !dbg !5241
  ret void, !dbg !5242
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !5243 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5247, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !5248, metadata !DIExpression()), !dbg !5252
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !5253
  %0 = load i64, i64* %bits, align 8, !dbg !5253
  %tobool = icmp eq i64 %0, 0, !dbg !5254
  br i1 %tobool, label %if.end, label %next_bit, !dbg !5255

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !5256
  br label %next_bit, !dbg !5259

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !5249), !dbg !5260
  br label %while.cond, !dbg !5259

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !5261
  %and = and i64 %2, 1, !dbg !5262
  %tobool2 = icmp eq i64 %and, 0, !dbg !5263
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !5259

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !5264
  store i64 %shr, i64* %bits, align 8, !dbg !5264
  %3 = load i32, i32* %bit_no, align 4, !dbg !5266
  %add = add i32 %3, 1, !dbg !5266
  store i32 %add, i32* %bit_no, align 4, !dbg !5266
  %.pre = load i64, i64* %bits, align 8, !dbg !5261
  br label %while.cond, !dbg !5259, !llvm.loop !5267

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !5269
  %sub = add i32 %4, 63, !dbg !5270
  %div = and i32 %sub, -64, !dbg !5271
  store i32 %div, i32* %bit_no, align 4, !dbg !5272
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !5273
  %5 = load i32, i32* %word_no, align 8, !dbg !5274
  %inc = add i32 %5, 1, !dbg !5274
  store i32 %inc, i32* %word_no, align 8, !dbg !5274
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !5275
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !5275
  br label %while.body6, !dbg !5276

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !5277

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !5278
  %cmp = icmp eq i32 %8, 2, !dbg !5279
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !5275
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !5277

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !5256
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !5256
  %10 = load i64, i64* %arrayidx, align 8, !dbg !5256
  store i64 %10, i64* %bits, align 8, !dbg !5280
  %tobool14 = icmp eq i64 %10, 0, !dbg !5281
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !5283

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !5284
  %add17 = add i32 %11, 64, !dbg !5284
  store i32 %add17, i32* %bit_no, align 4, !dbg !5284
  %12 = load i32, i32* %word_no, align 8, !dbg !5285
  %inc19 = add i32 %12, 1, !dbg !5285
  store i32 %inc19, i32* %word_no, align 8, !dbg !5285
  br label %while.cond7, !dbg !5277, !llvm.loop !5286

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !5275
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !5288
  %14 = load i64, i64* %13, align 8, !dbg !5288
  store i64 %14, i64* %6, align 8, !dbg !5289
  %tobool24 = icmp eq i64 %14, 0, !dbg !5290
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !5292

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !5292
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !5293
  %16 = load i32, i32* %indx, align 8, !dbg !5293
  %mul28 = shl i32 %16, 7, !dbg !5294
  store i32 %mul28, i32* %bit_no, align 4, !dbg !5295
  store i32 0, i32* %word_no, align 8, !dbg !5296
  br label %while.body6, !dbg !5276, !llvm.loop !5297

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !5299

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !5299

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !5252
  ret i8 %retval.0, !dbg !5299
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !5300 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5304, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !5305, metadata !DIExpression()), !dbg !5306
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !5307
  %0 = load i64, i64* %bits, align 8, !dbg !5308
  %shr = lshr i64 %0, 1, !dbg !5308
  store i64 %shr, i64* %bits, align 8, !dbg !5308
  %1 = load i32, i32* %bit_no, align 4, !dbg !5309
  %add = add i32 %1, 1, !dbg !5309
  store i32 %add, i32* %bit_no, align 4, !dbg !5309
  ret void, !dbg !5310
}

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @remove_from_deps(%struct.deps* %deps, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5311 {
entry:
  %i = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !5313, metadata !DIExpression()), !dbg !5322
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5314, metadata !DIExpression()), !dbg !5322
  %0 = bitcast i32* %i to i8*, !dbg !5323
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5323
  %1 = bitcast %struct.bitmap_iterator* %rsi to i8*, !dbg !5324
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5324
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 0, !dbg !5325
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 1, !dbg !5326
  %call = tail call fastcc i32 @remove_from_both_dependence_lists(%struct.rtx_def* %insn, %struct.rtx_def** %pending_read_insns, %struct.rtx_def** nonnull %pending_read_mems) #7, !dbg !5327
  call void @llvm.dbg.value(metadata i32 %call, metadata !5315, metadata !DIExpression()), !dbg !5322
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5328
  %bf.load = load i32, i32* %2, align 8, !dbg !5328
  %bf.clear = and i32 %bf.load, 65535, !dbg !5328
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !5328
  br i1 %cmp, label %if.end, label %if.then, !dbg !5330

if.then:                                          ; preds = %entry
  %pending_read_list_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 4, !dbg !5331
  %3 = load i32, i32* %pending_read_list_length, align 8, !dbg !5332
  %sub = sub nsw i32 %3, %call, !dbg !5332
  store i32 %sub, i32* %pending_read_list_length, align 8, !dbg !5332
  br label %if.end, !dbg !5333

if.end:                                           ; preds = %if.then, %entry
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 2, !dbg !5334
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 3, !dbg !5335
  %call1 = tail call fastcc i32 @remove_from_both_dependence_lists(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %pending_write_insns, %struct.rtx_def** nonnull %pending_write_mems) #7, !dbg !5336
  call void @llvm.dbg.value(metadata i32 %call1, metadata !5315, metadata !DIExpression()), !dbg !5322
  %pending_write_list_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 5, !dbg !5337
  %4 = load i32, i32* %pending_write_list_length, align 4, !dbg !5338
  %sub2 = sub nsw i32 %4, %call1, !dbg !5338
  store i32 %sub2, i32* %pending_write_list_length, align 4, !dbg !5338
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 7, !dbg !5339
  %call3 = tail call fastcc i32 @remove_from_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %last_pending_memory_flush) #7, !dbg !5340
  call void @llvm.dbg.value(metadata i32 %call3, metadata !5315, metadata !DIExpression()), !dbg !5322
  %pending_flush_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 6, !dbg !5341
  %5 = load i32, i32* %pending_flush_length, align 8, !dbg !5342
  %sub4 = sub nsw i32 %5, %call3, !dbg !5342
  store i32 %sub4, i32* %pending_flush_length, align 8, !dbg !5342
  %reg_last_in_use = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 15, !dbg !5343
  call void @llvm.dbg.value(metadata i32* %i, metadata !5316, metadata !DIExpression(DW_OP_deref)), !dbg !5322
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !5317, metadata !DIExpression(DW_OP_deref)), !dbg !5322
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* nonnull %reg_last_in_use, i32 0, i32* nonnull %i) #7, !dbg !5343
  %reg_last6 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 14, !dbg !5344
  br label %for.cond, !dbg !5343

for.cond:                                         ; preds = %for.inc, %if.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !5316, metadata !DIExpression(DW_OP_deref)), !dbg !5322
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !5317, metadata !DIExpression(DW_OP_deref)), !dbg !5322
  %call5 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !5345
  %tobool = icmp eq i8 %call5, 0, !dbg !5343
  br i1 %tobool, label %for.end, label %for.body, !dbg !5343

for.body:                                         ; preds = %for.cond
  %6 = load %struct.deps_reg*, %struct.deps_reg** %reg_last6, align 8, !dbg !5346
  %7 = load i32, i32* %i, align 4, !dbg !5347
  call void @llvm.dbg.value(metadata i32 %7, metadata !5316, metadata !DIExpression()), !dbg !5322
  %idxprom = zext i32 %7 to i64, !dbg !5348
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !5318, metadata !DIExpression()), !dbg !5344
  %uses = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %6, i64 %idxprom, i32 0, !dbg !5349
  %8 = load %struct.rtx_def*, %struct.rtx_def** %uses, align 8, !dbg !5349
  %tobool7 = icmp eq %struct.rtx_def* %8, null, !dbg !5351
  br i1 %tobool7, label %if.end11, label %if.then8, !dbg !5352

if.then8:                                         ; preds = %for.body
  %call10 = call fastcc i32 @remove_from_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def** %uses) #7, !dbg !5353
  br label %if.end11, !dbg !5353

if.end11:                                         ; preds = %for.body, %if.then8
  %sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %6, i64 %idxprom, i32 1, !dbg !5354
  %9 = load %struct.rtx_def*, %struct.rtx_def** %sets, align 8, !dbg !5354
  %tobool12 = icmp eq %struct.rtx_def* %9, null, !dbg !5356
  br i1 %tobool12, label %if.end16, label %if.then13, !dbg !5357

if.then13:                                        ; preds = %if.end11
  %call15 = call fastcc i32 @remove_from_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %sets) #7, !dbg !5358
  br label %if.end16, !dbg !5358

if.end16:                                         ; preds = %if.end11, %if.then13
  %implicit_sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %6, i64 %idxprom, i32 2, !dbg !5359
  %10 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets, align 8, !dbg !5359
  %tobool17 = icmp eq %struct.rtx_def* %10, null, !dbg !5361
  br i1 %tobool17, label %if.end21, label %if.then18, !dbg !5362

if.then18:                                        ; preds = %if.end16
  %call20 = call fastcc i32 @remove_from_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %implicit_sets) #7, !dbg !5363
  br label %if.end21, !dbg !5363

if.end21:                                         ; preds = %if.end16, %if.then18
  %clobbers = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %6, i64 %idxprom, i32 3, !dbg !5364
  %11 = load %struct.rtx_def*, %struct.rtx_def** %clobbers, align 8, !dbg !5364
  %tobool22 = icmp eq %struct.rtx_def* %11, null, !dbg !5366
  br i1 %tobool22, label %if.end26, label %if.then23, !dbg !5367

if.then23:                                        ; preds = %if.end21
  %call25 = call fastcc i32 @remove_from_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %clobbers) #7, !dbg !5368
  br label %if.end26, !dbg !5368

if.end26:                                         ; preds = %if.end21, %if.then23
  %12 = load %struct.rtx_def*, %struct.rtx_def** %uses, align 8, !dbg !5369
  %tobool28 = icmp eq %struct.rtx_def* %12, null, !dbg !5371
  br i1 %tobool28, label %land.lhs.true, label %for.inc, !dbg !5372

land.lhs.true:                                    ; preds = %if.end26
  %13 = load %struct.rtx_def*, %struct.rtx_def** %sets, align 8, !dbg !5373
  %tobool30 = icmp eq %struct.rtx_def* %13, null, !dbg !5374
  br i1 %tobool30, label %land.lhs.true31, label %for.inc, !dbg !5375

land.lhs.true31:                                  ; preds = %land.lhs.true
  %14 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets, align 8, !dbg !5376
  %tobool33 = icmp eq %struct.rtx_def* %14, null, !dbg !5377
  br i1 %tobool33, label %land.lhs.true34, label %for.inc, !dbg !5378

land.lhs.true34:                                  ; preds = %land.lhs.true31
  %15 = load %struct.rtx_def*, %struct.rtx_def** %clobbers, align 8, !dbg !5379
  %tobool36 = icmp eq %struct.rtx_def* %15, null, !dbg !5380
  br i1 %tobool36, label %if.then37, label %for.inc, !dbg !5381

if.then37:                                        ; preds = %land.lhs.true34
  %16 = load i32, i32* %i, align 4, !dbg !5382
  call void @llvm.dbg.value(metadata i32 %16, metadata !5316, metadata !DIExpression()), !dbg !5322
  %call39 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* nonnull %reg_last_in_use, i32 %16) #6, !dbg !5382
  br label %for.inc, !dbg !5382

for.inc:                                          ; preds = %land.lhs.true34, %land.lhs.true31, %land.lhs.true, %if.end26, %if.then37
  call void @llvm.dbg.value(metadata i32* %i, metadata !5316, metadata !DIExpression(DW_OP_deref)), !dbg !5322
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !5317, metadata !DIExpression(DW_OP_deref)), !dbg !5322
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !5345
  br label %for.cond, !dbg !5345, !llvm.loop !5383

for.end:                                          ; preds = %for.cond
  %bf.load41 = load i32, i32* %2, align 8, !dbg !5385
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !5385
  %cmp43 = icmp eq i32 %bf.clear42, 10, !dbg !5385
  br i1 %cmp43, label %if.then44, label %if.end47, !dbg !5387

if.then44:                                        ; preds = %for.end
  %last_function_call = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 8, !dbg !5388
  %call45 = call fastcc i32 @remove_from_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %last_function_call) #7, !dbg !5390
  %last_function_call_may_noreturn = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 9, !dbg !5391
  %call46 = call fastcc i32 @remove_from_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %last_function_call_may_noreturn) #7, !dbg !5392
  br label %if.end47, !dbg !5393

if.end47:                                         ; preds = %if.then44, %for.end
  %sched_before_next_call = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 10, !dbg !5394
  %call48 = call fastcc i32 @remove_from_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %sched_before_next_call) #7, !dbg !5395
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5396
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5396
  ret void, !dbg !5396
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @remove_from_both_dependence_lists(%struct.rtx_def* %insn, %struct.rtx_def** %listp, %struct.rtx_def** %exprp) unnamed_addr #5 !dbg !5397 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5401, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata %struct.rtx_def** %listp, metadata !5402, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata %struct.rtx_def** %exprp, metadata !5403, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata i32 0, metadata !5404, metadata !DIExpression()), !dbg !5405
  br label %while.cond.outer, !dbg !5406

while.cond.outer:                                 ; preds = %if.end, %entry
  %exprp.addr.0.ph = phi %struct.rtx_def** [ %rt_rtx9, %if.end ], [ %exprp, %entry ]
  %listp.addr.0.ph = phi %struct.rtx_def** [ %rt_rtx5, %if.end ], [ %listp, %entry ]
  %removed.0.ph = phi i32 [ %removed.0.lcssa5, %if.end ], [ 0, %entry ]
  br label %while.cond, !dbg !5406

while.cond:                                       ; preds = %while.cond.outer, %if.then
  %removed.0 = phi i32 [ %inc, %if.then ], [ %removed.0.ph, %while.cond.outer ], !dbg !5405
  call void @llvm.dbg.value(metadata i32 %removed.0, metadata !5404, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata %struct.rtx_def** %listp.addr.0.ph, metadata !5402, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata %struct.rtx_def** %exprp.addr.0.ph, metadata !5403, metadata !DIExpression()), !dbg !5405
  %0 = load %struct.rtx_def*, %struct.rtx_def** %listp.addr.0.ph, align 8, !dbg !5407
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !5406
  br i1 %tobool, label %while.end, label %while.body, !dbg !5406

while.body:                                       ; preds = %while.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5408
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5408
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5408
  %cmp = icmp eq %struct.rtx_def* %1, %insn, !dbg !5411
  br i1 %cmp, label %if.then, label %if.end, !dbg !5412

if.then:                                          ; preds = %while.body
  %call = tail call %struct.rtx_def* @remove_free_INSN_LIST_node(%struct.rtx_def** %listp.addr.0.ph) #6, !dbg !5413
  %call1 = tail call %struct.rtx_def* @remove_free_EXPR_LIST_node(%struct.rtx_def** %exprp.addr.0.ph) #6, !dbg !5415
  %inc = add nsw i32 %removed.0, 1, !dbg !5416
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5404, metadata !DIExpression()), !dbg !5405
  br label %while.cond, !dbg !5417, !llvm.loop !5418

if.end:                                           ; preds = %while.body
  %removed.0.lcssa5 = phi i32 [ %removed.0, %while.body ], !dbg !5405
  %.lcssa4 = phi %struct.rtx_def* [ %0, %while.body ], !dbg !5407
  call void @llvm.dbg.value(metadata i32 %removed.0.lcssa5, metadata !5404, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata i32 %removed.0.lcssa5, metadata !5404, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata i32 %removed.0.lcssa5, metadata !5404, metadata !DIExpression()), !dbg !5405
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5420
  %rt_rtx5 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5420
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx5, metadata !5402, metadata !DIExpression()), !dbg !5405
  %3 = load %struct.rtx_def*, %struct.rtx_def** %exprp.addr.0.ph, align 8, !dbg !5421
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5421
  %rt_rtx9 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !5421
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx9, metadata !5403, metadata !DIExpression()), !dbg !5405
  br label %while.cond.outer, !dbg !5406, !llvm.loop !5418

while.end:                                        ; preds = %while.cond
  %removed.0.lcssa = phi i32 [ %removed.0, %while.cond ], !dbg !5405
  call void @llvm.dbg.value(metadata i32 %removed.0.lcssa, metadata !5404, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata i32 %removed.0.lcssa, metadata !5404, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata i32 %removed.0.lcssa, metadata !5404, metadata !DIExpression()), !dbg !5405
  ret i32 %removed.0.lcssa, !dbg !5422
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @remove_from_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def** %listp) unnamed_addr #5 !dbg !5423 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5427, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata %struct.rtx_def** %listp, metadata !5428, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata i32 0, metadata !5429, metadata !DIExpression()), !dbg !5430
  br label %while.cond.outer, !dbg !5431

while.cond.outer:                                 ; preds = %if.end, %entry
  %listp.addr.0.ph = phi %struct.rtx_def** [ %rt_rtx4, %if.end ], [ %listp, %entry ]
  %removed.0.ph = phi i32 [ %removed.0.lcssa5, %if.end ], [ 0, %entry ]
  br label %while.cond, !dbg !5431

while.cond:                                       ; preds = %while.cond.outer, %if.then
  %removed.0 = phi i32 [ %inc, %if.then ], [ %removed.0.ph, %while.cond.outer ], !dbg !5430
  call void @llvm.dbg.value(metadata i32 %removed.0, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata %struct.rtx_def** %listp.addr.0.ph, metadata !5428, metadata !DIExpression()), !dbg !5430
  %0 = load %struct.rtx_def*, %struct.rtx_def** %listp.addr.0.ph, align 8, !dbg !5432
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !5431
  br i1 %tobool, label %while.end, label %while.body, !dbg !5431

while.body:                                       ; preds = %while.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5433
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5433
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5433
  %cmp = icmp eq %struct.rtx_def* %1, %insn, !dbg !5436
  br i1 %cmp, label %if.then, label %if.end, !dbg !5437

if.then:                                          ; preds = %while.body
  %call = tail call %struct.rtx_def* @remove_free_INSN_LIST_node(%struct.rtx_def** %listp.addr.0.ph) #6, !dbg !5438
  %inc = add nsw i32 %removed.0, 1, !dbg !5440
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5429, metadata !DIExpression()), !dbg !5430
  br label %while.cond, !dbg !5441, !llvm.loop !5442

if.end:                                           ; preds = %while.body
  %removed.0.lcssa5 = phi i32 [ %removed.0, %while.body ], !dbg !5430
  %.lcssa4 = phi %struct.rtx_def* [ %0, %while.body ], !dbg !5432
  call void @llvm.dbg.value(metadata i32 %removed.0.lcssa5, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata i32 %removed.0.lcssa5, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata i32 %removed.0.lcssa5, metadata !5429, metadata !DIExpression()), !dbg !5430
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5444
  %rt_rtx4 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5444
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx4, metadata !5428, metadata !DIExpression()), !dbg !5430
  br label %while.cond.outer, !dbg !5431, !llvm.loop !5442

while.end:                                        ; preds = %while.cond
  %removed.0.lcssa = phi i32 [ %removed.0, %while.cond ], !dbg !5430
  call void @llvm.dbg.value(metadata i32 %removed.0.lcssa, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata i32 %removed.0.lcssa, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata i32 %removed.0.lcssa, metadata !5429, metadata !DIExpression()), !dbg !5430
  ret i32 %removed.0.lcssa, !dbg !5445
}

; Function Attrs: nounwind uwtable
define dso_local void @sched_deps_init(i8 zeroext %global_p) local_unnamed_addr #5 !dbg !5446 {
entry:
  call void @llvm.dbg.value(metadata i8 %global_p, metadata !5450, metadata !DIExpression()), !dbg !5452
  %0 = load i32, i32* @sched_max_luid, align 4, !dbg !5453
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5454
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !5454
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5454
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 3, !dbg !5454
  %3 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !5454
  %div = sdiv i32 %0, %3, !dbg !5455
  %add = add nsw i32 %div, 1, !dbg !5456
  call void @llvm.dbg.value(metadata i32 %add, metadata !5451, metadata !DIExpression()), !dbg !5452
  tail call fastcc void @init_deps_data_vector() #7, !dbg !5457
  %call = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !5458
  %tobool = icmp eq i8 %call, 0, !dbg !5458
  %tobool1 = icmp ne i8 %global_p, 0, !dbg !5460
  %or.cond = and i1 %tobool, %tobool1, !dbg !5461
  %cmp = icmp sgt i32 %div, 499, !dbg !5462
  %or.cond1 = and i1 %or.cond, %cmp, !dbg !5461
  br i1 %or.cond1, label %if.then, label %if.end, !dbg !5461

if.then:                                          ; preds = %entry
  store i32 0, i32* @cache_size, align 4, !dbg !5463
  %4 = load i32, i32* @sched_max_luid, align 4, !dbg !5465
  tail call void @extend_dependency_caches(i32 %4, i8 zeroext 1) #7, !dbg !5466
  br label %if.end, !dbg !5467

if.end:                                           ; preds = %entry, %if.then
  %tobool4 = icmp eq i8 %global_p, 0, !dbg !5468
  br i1 %tobool4, label %if.end10, label %if.then5, !dbg !5470

if.then5:                                         ; preds = %if.end
  %conv6 = sext i32 %add to i64, !dbg !5471
  %call7 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 16, i64 %conv6) #6, !dbg !5473
  store %struct.alloc_pool_def* %call7, %struct.alloc_pool_def** @dl_pool, align 8, !dbg !5474
  %mul = mul nsw i32 %add, 5, !dbg !5475
  %conv8 = sext i32 %mul to i64, !dbg !5476
  %call9 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i64 72, i64 %conv8) #6, !dbg !5477
  store %struct.alloc_pool_def* %call9, %struct.alloc_pool_def** @dn_pool, align 8, !dbg !5478
  br label %if.end10, !dbg !5479

if.end10:                                         ; preds = %if.end, %if.then5
  ret void, !dbg !5480
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_deps_data_vector() unnamed_addr #5 !dbg !5481 {
entry:
  %0 = load i32, i32* @sched_max_luid, align 4, !dbg !5484
  %add = add nsw i32 %0, 1, !dbg !5485
  %1 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !5486
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %1, i64 0, i32 0, !dbg !5486
  %call = tail call fastcc i32 @VEC_haifa_deps_insn_data_def_base_length(%struct.VEC_haifa_deps_insn_data_def_base* %base) #7, !dbg !5486
  %sub = sub i32 %add, %call, !dbg !5487
  call void @llvm.dbg.value(metadata i32 %sub, metadata !5483, metadata !DIExpression()), !dbg !5488
  %cmp = icmp sgt i32 %sub, 0, !dbg !5489
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5491

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !5492
  %base3 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %2, i64 0, i32 0, !dbg !5492
  %call7 = tail call fastcc i32 @VEC_haifa_deps_insn_data_def_base_space(%struct.VEC_haifa_deps_insn_data_def_base* %base3, i32 %sub) #7, !dbg !5492
  %tobool8 = icmp eq i32 %call7, 0, !dbg !5492
  br i1 %tobool8, label %if.then, label %if.end, !dbg !5493

if.then:                                          ; preds = %land.lhs.true
  %3 = load i32, i32* @sched_max_luid, align 4, !dbg !5494
  %mul = mul nsw i32 %3, 3, !dbg !5494
  %div = sdiv i32 %mul, 2, !dbg !5494
  tail call fastcc void @VEC_haifa_deps_insn_data_def_heap_safe_grow_cleared(%struct.VEC_haifa_deps_insn_data_def_heap** nonnull @h_d_i_d, i32 %div) #7, !dbg !5494
  br label %if.end, !dbg !5494

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  ret void, !dbg !5495
}

; Function Attrs: nounwind uwtable
define dso_local void @extend_dependency_caches(i32 %n, i8 zeroext %create_p) local_unnamed_addr #5 !dbg !5496 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, metadata !5500, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i8 %create_p, metadata !5501, metadata !DIExpression()), !dbg !5506
  %tobool = icmp ne i8 %create_p, 0, !dbg !5507
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !5508
  %tobool1 = icmp ne %struct.bitmap_head_def* %0, null, !dbg !5508
  %or.cond = or i1 %tobool, %tobool1, !dbg !5509
  br i1 %or.cond, label %if.then, label %if.end26, !dbg !5509

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.bitmap_head_def* %0 to i8*, !dbg !5509
  %2 = load i32, i32* @cache_size, align 4, !dbg !5510
  %add = add nsw i32 %2, %n, !dbg !5511
  call void @llvm.dbg.value(metadata i32 %add, metadata !5505, metadata !DIExpression()), !dbg !5512
  %conv2 = sext i32 %add to i64, !dbg !5513
  %mul = shl nsw i64 %conv2, 5, !dbg !5513
  %call = tail call i8* @xrealloc(i8* %1, i64 %mul) #6, !dbg !5513
  store i8* %call, i8** bitcast (%struct.bitmap_head_def** @true_dependency_cache to i8**), align 8, !dbg !5514
  %3 = load i8*, i8** bitcast (%struct.bitmap_head_def** @output_dependency_cache to i8**), align 8, !dbg !5515
  %call5 = tail call i8* @xrealloc(i8* %3, i64 %mul) #6, !dbg !5515
  store i8* %call5, i8** bitcast (%struct.bitmap_head_def** @output_dependency_cache to i8**), align 8, !dbg !5516
  %4 = load i8*, i8** bitcast (%struct.bitmap_head_def** @anti_dependency_cache to i8**), align 8, !dbg !5517
  %call8 = tail call i8* @xrealloc(i8* %4, i64 %mul) #6, !dbg !5517
  store i8* %call8, i8** bitcast (%struct.bitmap_head_def** @anti_dependency_cache to i8**), align 8, !dbg !5518
  %5 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !5519
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %5, i64 0, i32 17, !dbg !5521
  %6 = load i32, i32* %flags, align 8, !dbg !5521
  %and = and i32 %6, 2, !dbg !5522
  %tobool9 = icmp eq i32 %and, 0, !dbg !5522
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !5523

if.then10:                                        ; preds = %if.then
  %7 = load i8*, i8** bitcast (%struct.bitmap_head_def** @spec_dependency_cache to i8**), align 8, !dbg !5524
  %call13 = tail call i8* @xrealloc(i8* %7, i64 %mul) #6, !dbg !5524
  store i8* %call13, i8** bitcast (%struct.bitmap_head_def** @spec_dependency_cache to i8**), align 8, !dbg !5525
  br label %if.end, !dbg !5526

if.end:                                           ; preds = %if.then, %if.then10
  %8 = load i32, i32* @cache_size, align 4, !dbg !5527
  call void @llvm.dbg.value(metadata i32 %8, metadata !5502, metadata !DIExpression()), !dbg !5512
  %9 = sext i32 %8 to i64, !dbg !5529
  %10 = sext i32 %add to i64, !dbg !5529
  br label %for.cond, !dbg !5529

for.cond:                                         ; preds = %for.inc, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %9, %if.end ], !dbg !5530
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5502, metadata !DIExpression()), !dbg !5512
  %cmp = icmp slt i64 %indvars.iv, %10, !dbg !5531
  br i1 %cmp, label %for.body, label %for.end, !dbg !5533

for.body:                                         ; preds = %for.cond
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !5534
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %11, i64 %indvars.iv, !dbg !5534
  tail call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %arrayidx, %struct.bitmap_obstack* null) #7, !dbg !5534
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !5536
  %arrayidx16 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %12, i64 %indvars.iv, !dbg !5536
  tail call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %arrayidx16, %struct.bitmap_obstack* null) #7, !dbg !5536
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !5537
  %arrayidx18 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %13, i64 %indvars.iv, !dbg !5537
  tail call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %arrayidx18, %struct.bitmap_obstack* null) #7, !dbg !5537
  %14 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !5538
  %flags19 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %14, i64 0, i32 17, !dbg !5540
  %15 = load i32, i32* %flags19, align 8, !dbg !5540
  %and20 = and i32 %15, 2, !dbg !5541
  %tobool21 = icmp eq i32 %and20, 0, !dbg !5541
  br i1 %tobool21, label %for.inc, label %if.then22, !dbg !5542

if.then22:                                        ; preds = %for.body
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !5543
  %arrayidx24 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %16, i64 %indvars.iv, !dbg !5543
  tail call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %arrayidx24, %struct.bitmap_obstack* null) #7, !dbg !5543
  br label %for.inc, !dbg !5543

for.inc:                                          ; preds = %for.body, %if.then22
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !5544
  call void @llvm.dbg.value(metadata i32 undef, metadata !5502, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5512
  br label %for.cond, !dbg !5545, !llvm.loop !5546

for.end:                                          ; preds = %for.cond
  store i32 %add, i32* @cache_size, align 4, !dbg !5548
  br label %if.end26, !dbg !5549

if.end26:                                         ; preds = %entry, %for.end
  ret void, !dbg !5550
}

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) local_unnamed_addr #2

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sched_deps_finish() local_unnamed_addr #5 !dbg !5551 {
entry:
  %call = tail call zeroext i8 @deps_pools_are_empty_p() #7, !dbg !5556
  %tobool = icmp eq i8 %call, 0, !dbg !5556
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5556

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3691, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5556
  br label %cond.end, !dbg !5556

cond.end:                                         ; preds = %entry, %cond.true
  tail call void @free_alloc_pool_if_empty(%struct.alloc_pool_def** nonnull @dn_pool) #6, !dbg !5557
  tail call void @free_alloc_pool_if_empty(%struct.alloc_pool_def** nonnull @dl_pool) #6, !dbg !5558
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @dn_pool, align 8, !dbg !5559
  %cmp = icmp eq %struct.alloc_pool_def* %0, null, !dbg !5559
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @dl_pool, align 8, !dbg !5559
  %cmp1 = icmp eq %struct.alloc_pool_def* %1, null, !dbg !5559
  %or.cond = and i1 %cmp, %cmp1, !dbg !5559
  br i1 %or.cond, label %cond.end4, label %cond.true2, !dbg !5559

cond.true2:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3694, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5559
  br label %cond.end4, !dbg !5559

cond.end4:                                        ; preds = %cond.end, %cond.true2
  tail call fastcc void @VEC_haifa_deps_insn_data_def_heap_free(%struct.VEC_haifa_deps_insn_data_def_heap** nonnull @h_d_i_d) #7, !dbg !5560
  store i32 0, i32* @cache_size, align 4, !dbg !5561
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !5562
  %tobool6 = icmp eq %struct.bitmap_head_def* %2, null, !dbg !5562
  br i1 %tobool6, label %if.end24, label %for.cond.preheader, !dbg !5563

for.cond.preheader:                               ; preds = %cond.end4
  br label %for.cond, !dbg !5564

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !5566
  %3 = phi %struct.bitmap_head_def* [ %2, %for.cond.preheader ], [ %.pre1, %for.inc ], !dbg !5566
  %4 = phi i32 [ 0, %for.cond.preheader ], [ %.pre, %for.inc ], !dbg !5567
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5553, metadata !DIExpression()), !dbg !5566
  %5 = sext i32 %4 to i64, !dbg !5569
  %cmp7 = icmp slt i64 %indvars.iv, %5, !dbg !5569
  br i1 %cmp7, label %for.body, label %for.end, !dbg !5564

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %3, i64 %indvars.iv, !dbg !5570
  tail call void @bitmap_clear(%struct.bitmap_head_def* %arrayidx) #6, !dbg !5572
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !5573
  %arrayidx9 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %6, i64 %indvars.iv, !dbg !5573
  tail call void @bitmap_clear(%struct.bitmap_head_def* %arrayidx9) #6, !dbg !5574
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !5575
  %arrayidx11 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %7, i64 %indvars.iv, !dbg !5575
  tail call void @bitmap_clear(%struct.bitmap_head_def* %arrayidx11) #6, !dbg !5576
  %8 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !5577
  %generate_spec_deps = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %8, i64 0, i32 12, !dbg !5579
  %bf.load = load i8, i8* %generate_spec_deps, align 8, !dbg !5579
  %bf.clear = and i8 %bf.load, 4, !dbg !5579
  %tobool12 = icmp eq i8 %bf.clear, 0, !dbg !5577
  br i1 %tobool12, label %for.inc, label %if.then13, !dbg !5580

if.then13:                                        ; preds = %for.body
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !5581
  %arrayidx15 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %9, i64 %indvars.iv, !dbg !5581
  tail call void @bitmap_clear(%struct.bitmap_head_def* %arrayidx15) #6, !dbg !5582
  br label %for.inc, !dbg !5582

for.inc:                                          ; preds = %for.body, %if.then13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5583
  call void @llvm.dbg.value(metadata i32 undef, metadata !5553, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5566
  %.pre = load i32, i32* @cache_size, align 4, !dbg !5567
  %.pre1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !5566
  br label %for.cond, !dbg !5584, !llvm.loop !5585

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.bitmap_head_def* [ %3, %for.cond ], !dbg !5566
  %10 = bitcast %struct.bitmap_head_def* %.lcssa to i8*, !dbg !5587
  tail call void @free(i8* %10) #6, !dbg !5588
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !5589
  %11 = load i8*, i8** bitcast (%struct.bitmap_head_def** @output_dependency_cache to i8**), align 8, !dbg !5590
  tail call void @free(i8* %11) #6, !dbg !5591
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !5592
  %12 = load i8*, i8** bitcast (%struct.bitmap_head_def** @anti_dependency_cache to i8**), align 8, !dbg !5593
  tail call void @free(i8* %12) #6, !dbg !5594
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !5595
  %13 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !5596
  %generate_spec_deps16 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %13, i64 0, i32 12, !dbg !5598
  %bf.load17 = load i8, i8* %generate_spec_deps16, align 8, !dbg !5598
  %bf.clear19 = and i8 %bf.load17, 4, !dbg !5598
  %tobool21 = icmp eq i8 %bf.clear19, 0, !dbg !5596
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !5599

if.then22:                                        ; preds = %for.end
  %14 = load i8*, i8** bitcast (%struct.bitmap_head_def** @spec_dependency_cache to i8**), align 8, !dbg !5600
  tail call void @free(i8* %14) #6, !dbg !5602
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !5603
  br label %if.end24, !dbg !5604

if.end24:                                         ; preds = %for.end, %cond.end4, %if.then22
  ret void, !dbg !5605
}

declare dso_local void @free_alloc_pool_if_empty(%struct.alloc_pool_def**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_haifa_deps_insn_data_def_heap_free(%struct.VEC_haifa_deps_insn_data_def_heap** %vec_) unnamed_addr #0 !dbg !5606 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, metadata !5611, metadata !DIExpression()), !dbg !5612
  %0 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !5613
  %tobool = icmp eq %struct.VEC_haifa_deps_insn_data_def_heap* %0, null, !dbg !5613
  br i1 %tobool, label %if.end, label %if.then, !dbg !5615

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_haifa_deps_insn_data_def_heap* %0 to i8*, !dbg !5615
  tail call void @free(i8* nonnull %1) #6, !dbg !5613
  br label %if.end, !dbg !5613

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_haifa_deps_insn_data_def_heap* null, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !5615
  ret void, !dbg !5615
}

; Function Attrs: nounwind uwtable
define dso_local void @init_deps_global() local_unnamed_addr #5 !dbg !5616 {
entry:
  store i64 0, i64* @implicit_reg_pending_clobbers, align 8, !dbg !5617
  store i64 0, i64* @implicit_reg_pending_uses, align 8, !dbg !5618
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @reg_obstack) #6, !dbg !5619
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !5620
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @reg_obstack) #6, !dbg !5621
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !5622
  %call2 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @reg_obstack) #6, !dbg !5623
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !5624
  store i32 0, i32* @reg_pending_barrier, align 4, !dbg !5625
  %call3 = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !5626
  %tobool = icmp eq i8 %call3, 0, !dbg !5626
  %0 = load i32, i32* @sched_emulate_haifa_p, align 4, !dbg !5628
  %tobool4 = icmp ne i32 %0, 0, !dbg !5628
  %or.cond = or i1 %tobool, %tobool4, !dbg !5629
  br i1 %or.cond, label %if.then, label %if.end, !dbg !5629

if.then:                                          ; preds = %entry
  %1 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !5630
  %start_insn = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %1, i64 0, i32 1, !dbg !5632
  store void (%struct.rtx_def*)* @haifa_start_insn, void (%struct.rtx_def*)** %start_insn, align 8, !dbg !5633
  %finish_insn = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %1, i64 0, i32 2, !dbg !5634
  store void ()* @haifa_finish_insn, void ()** %finish_insn, align 8, !dbg !5635
  %note_reg_set = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %1, i64 0, i32 7, !dbg !5636
  store void (i32)* @haifa_note_reg_set, void (i32)** %note_reg_set, align 8, !dbg !5637
  %note_reg_clobber = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %1, i64 0, i32 8, !dbg !5638
  store void (i32)* @haifa_note_reg_clobber, void (i32)** %note_reg_clobber, align 8, !dbg !5639
  %note_reg_use = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %1, i64 0, i32 9, !dbg !5640
  store void (i32)* @haifa_note_reg_use, void (i32)** %note_reg_use, align 8, !dbg !5641
  %note_mem_dep = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %1, i64 0, i32 10, !dbg !5642
  store void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* @haifa_note_mem_dep, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)** %note_mem_dep, align 8, !dbg !5643
  %note_dep = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %1, i64 0, i32 11, !dbg !5644
  store void (%struct.rtx_def*, i32)* @haifa_note_dep, void (%struct.rtx_def*, i32)** %note_dep, align 8, !dbg !5645
  br label %if.end, !dbg !5646

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !5647
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @haifa_start_insn(%struct.rtx_def* %insn) #5 !dbg !5648 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5650, metadata !DIExpression()), !dbg !5651
  %tobool = icmp eq %struct.rtx_def* %insn, null, !dbg !5652
  %0 = load %struct.rtx_def*, %struct.rtx_def** @cur_insn, align 8, !dbg !5652
  %tobool1 = icmp ne %struct.rtx_def* %0, null, !dbg !5652
  %or.cond = or i1 %tobool, %tobool1, !dbg !5652
  br i1 %or.cond, label %cond.true, label %cond.end, !dbg !5652

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1621, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5652
  br label %cond.end, !dbg !5652

cond.end:                                         ; preds = %entry, %cond.true
  store %struct.rtx_def* %insn, %struct.rtx_def** @cur_insn, align 8, !dbg !5653
  ret void, !dbg !5654
}

; Function Attrs: nounwind uwtable
define internal void @haifa_finish_insn() #5 !dbg !5655 {
entry:
  store %struct.rtx_def* null, %struct.rtx_def** @cur_insn, align 8, !dbg !5656
  ret void, !dbg !5657
}

; Function Attrs: nounwind uwtable
define internal void @haifa_note_mem_dep(%struct.rtx_def* %mem, %struct.rtx_def* %pending_mem, %struct.rtx_def* %pending_insn, i32 %ds) #5 !dbg !5658 {
entry:
  %_dep = alloca %struct._dep, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !5660, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending_mem, metadata !5661, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending_insn, metadata !5662, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.value(metadata i32 %ds, metadata !5663, metadata !DIExpression()), !dbg !5667
  %and = and i32 %ds, 16777215, !dbg !5668
  %tobool = icmp eq i32 %and, 0, !dbg !5668
  br i1 %tobool, label %if.end, label %if.else, !dbg !5670

if.else:                                          ; preds = %entry
  %and1 = and i32 %ds, 63, !dbg !5671
  %tobool2 = icmp eq i32 %and1, 0, !dbg !5671
  br i1 %tobool2, label %cond.true, label %if.end, !dbg !5671

cond.true:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1659, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5671
  br label %if.end, !dbg !5671

if.end:                                           ; preds = %if.else, %entry, %cond.true
  %pending_mem.addr.0 = phi %struct.rtx_def* [ null, %entry ], [ %pending_mem, %if.else ], [ %pending_mem, %cond.true ]
  %mem.addr.0 = phi %struct.rtx_def* [ null, %entry ], [ %mem, %if.else ], [ %mem, %cond.true ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem.addr.0, metadata !5660, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending_mem.addr.0, metadata !5661, metadata !DIExpression()), !dbg !5667
  %0 = bitcast %struct._dep* %_dep to i8*, !dbg !5672
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5672
  call void @llvm.dbg.value(metadata %struct._dep* %_dep, metadata !5666, metadata !DIExpression()), !dbg !5673
  %1 = load %struct.rtx_def*, %struct.rtx_def** @cur_insn, align 8, !dbg !5674
  %call = tail call i32 @ds_to_dt(i32 %ds) #7, !dbg !5675
  %2 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !5676
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %2, i64 0, i32 17, !dbg !5677
  %3 = load i32, i32* %flags, align 8, !dbg !5677
  %and3 = and i32 %3, 1, !dbg !5678
  %tobool4 = icmp eq i32 %and3, 0, !dbg !5678
  %ds. = select i1 %tobool4, i32 -1, i32 %ds, !dbg !5676
  call void @llvm.dbg.value(metadata %struct._dep* %_dep, metadata !5664, metadata !DIExpression(DW_OP_deref)), !dbg !5673
  call void @init_dep_1(%struct._dep* nonnull %_dep, %struct.rtx_def* %pending_insn, %struct.rtx_def* %1, i32 %call, i32 %ds.) #7, !dbg !5679
  call void @llvm.dbg.value(metadata %struct._dep* %_dep, metadata !5664, metadata !DIExpression(DW_OP_deref)), !dbg !5673
  %call9 = call fastcc i32 @maybe_add_or_update_dep_1(%struct._dep* nonnull %_dep, i8 zeroext 0, %struct.rtx_def* %pending_mem.addr.0, %struct.rtx_def* %mem.addr.0) #7, !dbg !5680
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5681
  ret void, !dbg !5682
}

; Function Attrs: nounwind uwtable
define internal void @haifa_note_dep(%struct.rtx_def* %elem, i32 %ds) #5 !dbg !5683 {
entry:
  %_dep = alloca %struct._dep, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %elem, metadata !5685, metadata !DIExpression()), !dbg !5689
  call void @llvm.dbg.value(metadata i32 %ds, metadata !5686, metadata !DIExpression()), !dbg !5689
  %0 = bitcast %struct._dep* %_dep to i8*, !dbg !5690
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5690
  call void @llvm.dbg.value(metadata %struct._dep* %_dep, metadata !5688, metadata !DIExpression()), !dbg !5689
  %1 = load %struct.rtx_def*, %struct.rtx_def** @cur_insn, align 8, !dbg !5691
  %call = tail call i32 @ds_to_dt(i32 %ds) #7, !dbg !5692
  call void @llvm.dbg.value(metadata %struct._dep* %_dep, metadata !5687, metadata !DIExpression(DW_OP_deref)), !dbg !5689
  call void @init_dep(%struct._dep* nonnull %_dep, %struct.rtx_def* %elem, %struct.rtx_def* %1, i32 %call) #7, !dbg !5693
  call void @llvm.dbg.value(metadata %struct._dep* %_dep, metadata !5687, metadata !DIExpression(DW_OP_deref)), !dbg !5689
  %call1 = call fastcc i32 @maybe_add_or_update_dep_1(%struct._dep* nonnull %_dep, i8 zeroext 0, %struct.rtx_def* null, %struct.rtx_def* null) #7, !dbg !5694
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5695
  ret void, !dbg !5695
}

; Function Attrs: nounwind uwtable
define dso_local void @finish_deps_global() local_unnamed_addr #5 !dbg !5696 {
entry:
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !5697
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %0) #6, !dbg !5697
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !5697
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !5698
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !5698
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !5698
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !5699
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !5699
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !5699
  ret void, !dbg !5700
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @estimate_dep_weak(%struct.rtx_def* %mem1, %struct.rtx_def* %mem2) local_unnamed_addr #5 !dbg !5701 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem1, metadata !5705, metadata !DIExpression()), !dbg !5709
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem2, metadata !5706, metadata !DIExpression()), !dbg !5709
  %cmp = icmp eq %struct.rtx_def* %mem1, %mem2, !dbg !5710
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5712

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5713
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5713
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5713
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5707, metadata !DIExpression()), !dbg !5709
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5714
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !5714
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !5714
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5708, metadata !DIExpression()), !dbg !5709
  %cmp5 = icmp eq %struct.rtx_def* %0, %1, !dbg !5715
  br i1 %cmp5, label %cleanup, label %lor.lhs.false, !dbg !5717

lor.lhs.false:                                    ; preds = %if.end
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !5718
  %bf.load = load i32, i32* %2, align 8, !dbg !5718
  %bf.clear = and i32 %bf.load, 65535, !dbg !5718
  %cmp6 = icmp eq i32 %bf.clear, 37, !dbg !5718
  br i1 %cmp6, label %land.lhs.true, label %if.else, !dbg !5719

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5720
  %bf.load7 = load i32, i32* %3, align 8, !dbg !5720
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !5720
  %cmp9 = icmp eq i32 %bf.clear8, 37, !dbg !5720
  br i1 %cmp9, label %land.lhs.true10, label %if.else, !dbg !5721

land.lhs.true10:                                  ; preds = %land.lhs.true
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %0) #7, !dbg !5722
  %call11 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !5723
  %cmp12 = icmp eq i32 %call, %call11, !dbg !5724
  br i1 %cmp12, label %cleanup, label %land.lhs.true10.if.else_crit_edge, !dbg !5725

land.lhs.true10.if.else_crit_edge:                ; preds = %land.lhs.true10
  %bf.load14.pre = load i32, i32* %2, align 8, !dbg !5726
  br label %if.else, !dbg !5725

if.else:                                          ; preds = %land.lhs.true10.if.else_crit_edge, %land.lhs.true, %lor.lhs.false
  %bf.load22 = phi i32 [ %bf.load14.pre, %land.lhs.true10.if.else_crit_edge ], [ %bf.load, %land.lhs.true ], [ %bf.load, %lor.lhs.false ], !dbg !5726
  %bf.clear15 = and i32 %bf.load22, 65535, !dbg !5726
  %cmp16 = icmp eq i32 %bf.clear15, 37, !dbg !5726
  br i1 %cmp16, label %land.lhs.true17, label %lor.lhs.false21, !dbg !5728

land.lhs.true17:                                  ; preds = %if.else
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5729
  %bf.load18 = load i32, i32* %4, align 8, !dbg !5729
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !5729
  %cmp20 = icmp eq i32 %bf.clear19, 37, !dbg !5729
  br i1 %cmp20, label %lor.lhs.false21, label %cleanup, !dbg !5730

lor.lhs.false21:                                  ; preds = %land.lhs.true17, %if.else
  br i1 %cmp16, label %if.else30, label %land.lhs.true25, !dbg !5731

land.lhs.true25:                                  ; preds = %lor.lhs.false21
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5732
  %bf.load26 = load i32, i32* %5, align 8, !dbg !5732
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !5732
  %cmp28 = icmp eq i32 %bf.clear27, 37, !dbg !5732
  br i1 %cmp28, label %cleanup, label %if.else30, !dbg !5733

if.else30:                                        ; preds = %land.lhs.true25, %lor.lhs.false21
  br label %cleanup, !dbg !5734

cleanup:                                          ; preds = %land.lhs.true17, %land.lhs.true25, %if.end, %land.lhs.true10, %entry, %if.else30
  %retval.0 = phi i32 [ 47, %if.else30 ], [ 1, %entry ], [ 1, %land.lhs.true10 ], [ 1, %if.end ], [ 55, %land.lhs.true25 ], [ 55, %land.lhs.true17 ], !dbg !5709
  ret i32 %retval.0, !dbg !5735
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !5736 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5740, metadata !DIExpression()), !dbg !5741
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5742
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5742
  %0 = load i32, i32* %rt_uint, align 8, !dbg !5742
  ret i32 %0, !dbg !5743
}

; Function Attrs: nounwind uwtable
define dso_local void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* %elem, i32 %dep_type) local_unnamed_addr #5 !dbg !5744 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5748, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.value(metadata %struct.rtx_def* %elem, metadata !5749, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.value(metadata i32 %dep_type, metadata !5750, metadata !DIExpression()), !dbg !5753
  switch i32 %dep_type, label %cond.true [
    i32 0, label %if.end5
    i32 11, label %if.end
    i32 12, label %cond.end
  ], !dbg !5754

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3808, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5755
  br label %cond.end, !dbg !5755

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata i32 67108864, metadata !5751, metadata !DIExpression()), !dbg !5753
  br label %if.end

if.end:                                           ; preds = %entry, %cond.end
  %ds.0 = phi i32 [ 67108864, %cond.end ], [ 33554432, %entry ], !dbg !5759
  call void @llvm.dbg.value(metadata i32 %ds.0, metadata !5751, metadata !DIExpression()), !dbg !5753
  br label %if.end5

if.end5:                                          ; preds = %entry, %if.end
  %ds.1 = phi i32 [ %ds.0, %if.end ], [ 16777216, %entry ], !dbg !5760
  call void @llvm.dbg.value(metadata i32 %ds.1, metadata !5751, metadata !DIExpression()), !dbg !5753
  %0 = load %struct.rtx_def*, %struct.rtx_def** @cur_insn, align 8, !dbg !5761
  %cmp6 = icmp ne %struct.rtx_def* %0, null, !dbg !5762
  call void @llvm.dbg.value(metadata i1 %cmp6, metadata !5752, metadata !DIExpression()), !dbg !5753
  br i1 %cmp6, label %if.then8, label %if.else15, !dbg !5763

if.then8:                                         ; preds = %if.end5
  %cmp9 = icmp eq %struct.rtx_def* %0, %insn, !dbg !5764
  br i1 %cmp9, label %if.end16, label %cond.true11, !dbg !5764

cond.true11:                                      ; preds = %if.then8
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3816, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5764
  br label %if.end16, !dbg !5764

if.else15:                                        ; preds = %if.end5
  store %struct.rtx_def* %insn, %struct.rtx_def** @cur_insn, align 8, !dbg !5766
  br label %if.end16

if.end16:                                         ; preds = %cond.true11, %if.then8, %if.else15
  tail call fastcc void @note_dep(%struct.rtx_def* %elem, i32 %ds.1) #7, !dbg !5767
  br i1 %cmp6, label %if.end19, label %if.then18, !dbg !5768

if.then18:                                        ; preds = %if.end16
  store %struct.rtx_def* null, %struct.rtx_def** @cur_insn, align 8, !dbg !5769
  br label %if.end19, !dbg !5771

if.end19:                                         ; preds = %if.then18, %if.end16
  ret void, !dbg !5772
}

; Function Attrs: nounwind uwtable
define internal fastcc void @note_dep(%struct.rtx_def* %e, i32 %ds) unnamed_addr #5 !dbg !5773 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %e, metadata !5775, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.value(metadata i32 %ds, metadata !5776, metadata !DIExpression()), !dbg !5777
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !5778
  %note_dep = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i64 0, i32 11, !dbg !5780
  %1 = load void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)** %note_dep, align 8, !dbg !5780
  %tobool = icmp eq void (%struct.rtx_def*, i32)* %1, null, !dbg !5778
  br i1 %tobool, label %if.end, label %if.then, !dbg !5781

if.then:                                          ; preds = %entry
  tail call void %1(%struct.rtx_def* %e, i32 %ds) #6, !dbg !5782
  br label %if.end, !dbg !5782

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !5783
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_dep_weak_1(i32 %ds, i32 %type) local_unnamed_addr #5 !dbg !5784 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds, metadata !5788, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata i32 %type, metadata !5789, metadata !DIExpression()), !dbg !5790
  %and = and i32 %ds, %type, !dbg !5791
  call void @llvm.dbg.value(metadata i32 %and, metadata !5788, metadata !DIExpression()), !dbg !5790
  switch i32 %type, label %sw.default [
    i32 63, label %sw.bb
    i32 4032, label %sw.bb1
    i32 258048, label %sw.bb3
    i32 16515072, label %sw.bb5
  ], !dbg !5792

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %and, metadata !5788, metadata !DIExpression()), !dbg !5790
  br label %sw.epilog, !dbg !5793

sw.bb1:                                           ; preds = %entry
  %shr2 = ashr i32 %and, 6, !dbg !5795
  call void @llvm.dbg.value(metadata i32 %shr2, metadata !5788, metadata !DIExpression()), !dbg !5790
  br label %sw.epilog, !dbg !5796

sw.bb3:                                           ; preds = %entry
  %shr4 = ashr i32 %and, 12, !dbg !5797
  call void @llvm.dbg.value(metadata i32 %shr4, metadata !5788, metadata !DIExpression()), !dbg !5790
  br label %sw.epilog, !dbg !5798

sw.bb5:                                           ; preds = %entry
  %shr6 = ashr i32 %and, 18, !dbg !5799
  call void @llvm.dbg.value(metadata i32 %shr6, metadata !5788, metadata !DIExpression()), !dbg !5790
  br label %sw.epilog, !dbg !5800

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3837, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5801
  br label %sw.epilog, !dbg !5802

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %ds.addr.0 = phi i32 [ %and, %sw.default ], [ %shr6, %sw.bb5 ], [ %shr4, %sw.bb3 ], [ %shr2, %sw.bb1 ], [ %and, %sw.bb ], !dbg !5790
  call void @llvm.dbg.value(metadata i32 %ds.addr.0, metadata !5788, metadata !DIExpression()), !dbg !5790
  ret i32 %ds.addr.0, !dbg !5803
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_dep_weak(i32 %ds, i32 %type) local_unnamed_addr #5 !dbg !5804 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds, metadata !5806, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i32 %type, metadata !5807, metadata !DIExpression()), !dbg !5809
  %call = tail call i32 @get_dep_weak_1(i32 %ds, i32 %type) #7, !dbg !5810
  call void @llvm.dbg.value(metadata i32 %call, metadata !5808, metadata !DIExpression()), !dbg !5809
  %call.off = add i32 %call, -1, !dbg !5811
  %0 = icmp ult i32 %call.off, 62, !dbg !5811
  br i1 %0, label %cond.end, label %cond.true, !dbg !5811

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3848, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5811
  br label %cond.end, !dbg !5811

cond.end:                                         ; preds = %entry, %cond.true
  ret i32 %call, !dbg !5812
}

; Function Attrs: nounwind uwtable
define dso_local i32 @set_dep_weak(i32 %ds, i32 %type, i32 %dw) local_unnamed_addr #5 !dbg !5813 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds, metadata !5817, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %type, metadata !5818, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %dw, metadata !5819, metadata !DIExpression()), !dbg !5820
  %dw.off = add i32 %dw, -1, !dbg !5821
  %0 = icmp ult i32 %dw.off, 62, !dbg !5821
  br i1 %0, label %cond.end, label %cond.true, !dbg !5821

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3857, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5821
  br label %cond.end, !dbg !5821

cond.end:                                         ; preds = %entry, %cond.true
  %neg = xor i32 %type, -1, !dbg !5822
  %and = and i32 %neg, %ds, !dbg !5823
  call void @llvm.dbg.value(metadata i32 %and, metadata !5817, metadata !DIExpression()), !dbg !5820
  switch i32 %type, label %sw.default [
    i32 63, label %sw.bb
    i32 4032, label %sw.bb2
    i32 258048, label %sw.bb5
    i32 16515072, label %sw.bb8
  ], !dbg !5824

sw.bb:                                            ; preds = %cond.end
  %or = or i32 %and, %dw, !dbg !5825
  call void @llvm.dbg.value(metadata i32 %or, metadata !5817, metadata !DIExpression()), !dbg !5820
  br label %sw.epilog, !dbg !5827

sw.bb2:                                           ; preds = %cond.end
  %shl3 = shl i32 %dw, 6, !dbg !5828
  %or4 = or i32 %and, %shl3, !dbg !5829
  call void @llvm.dbg.value(metadata i32 %or4, metadata !5817, metadata !DIExpression()), !dbg !5820
  br label %sw.epilog, !dbg !5830

sw.bb5:                                           ; preds = %cond.end
  %shl6 = shl i32 %dw, 12, !dbg !5831
  %or7 = or i32 %and, %shl6, !dbg !5832
  call void @llvm.dbg.value(metadata i32 %or7, metadata !5817, metadata !DIExpression()), !dbg !5820
  br label %sw.epilog, !dbg !5833

sw.bb8:                                           ; preds = %cond.end
  %shl9 = shl i32 %dw, 18, !dbg !5834
  %or10 = or i32 %and, %shl9, !dbg !5835
  call void @llvm.dbg.value(metadata i32 %or10, metadata !5817, metadata !DIExpression()), !dbg !5820
  br label %sw.epilog, !dbg !5836

sw.default:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3866, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5837
  br label %sw.epilog, !dbg !5838

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb5, %sw.bb2, %sw.bb
  %ds.addr.0 = phi i32 [ %and, %sw.default ], [ %or10, %sw.bb8 ], [ %or7, %sw.bb5 ], [ %or4, %sw.bb2 ], [ %or, %sw.bb ], !dbg !5820
  call void @llvm.dbg.value(metadata i32 %ds.addr.0, metadata !5817, metadata !DIExpression()), !dbg !5820
  ret i32 %ds.addr.0, !dbg !5839
}

; Function Attrs: nounwind uwtable
define dso_local i32 @ds_merge(i32 %ds1, i32 %ds2) local_unnamed_addr #5 !dbg !5840 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds1, metadata !5844, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i32 %ds2, metadata !5845, metadata !DIExpression()), !dbg !5846
  %call = tail call fastcc i32 @ds_merge_1(i32 %ds1, i32 %ds2, i8 zeroext 0) #7, !dbg !5847
  ret i32 %call, !dbg !5848
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @ds_merge_1(i32 %ds1, i32 %ds2, i8 zeroext %max_p) unnamed_addr #5 !dbg !5849 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds1, metadata !5853, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i32 %ds2, metadata !5854, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i8 %max_p, metadata !5855, metadata !DIExpression()), !dbg !5866
  %and = and i32 %ds1, 16777215, !dbg !5867
  %tobool = icmp ne i32 %and, 0, !dbg !5867
  %and1 = and i32 %ds2, 16777215, !dbg !5867
  %tobool2 = icmp ne i32 %and1, 0, !dbg !5867
  %or.cond = and i1 %tobool, %tobool2, !dbg !5867
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !5867

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3880, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5867
  br label %cond.end, !dbg !5867

cond.end:                                         ; preds = %entry, %cond.true
  %and34 = or i32 %ds1, %ds2, !dbg !5868
  %or = and i32 %and34, 117440512, !dbg !5868
  call void @llvm.dbg.value(metadata i32 %or, metadata !5856, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i32 63, metadata !5857, metadata !DIExpression()), !dbg !5866
  %tobool28 = icmp eq i8 %max_p, 0, !dbg !5869
  br i1 %tobool28, label %cond.end.split.us, label %cond.end.cond.end.split_crit_edge, !dbg !5871

cond.end.cond.end.split_crit_edge:                ; preds = %cond.end
  br label %do.body, !dbg !5871

cond.end.split.us:                                ; preds = %cond.end
  br label %do.body.us, !dbg !5871

do.body.us:                                       ; preds = %if.end43.us, %cond.end.split.us
  %ds.0.us = phi i32 [ %or, %cond.end.split.us ], [ %ds.3.us, %if.end43.us ], !dbg !5866
  %t.0.us = phi i32 [ 63, %cond.end.split.us ], [ %shl.us, %if.end43.us ], !dbg !5866
  call void @llvm.dbg.value(metadata i32 %t.0.us, metadata !5857, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i32 %ds.0.us, metadata !5856, metadata !DIExpression()), !dbg !5866
  %and5.us = and i32 %t.0.us, %ds1, !dbg !5872
  %tobool6.us = icmp eq i32 %and5.us, 0, !dbg !5872
  %and8.us = and i32 %t.0.us, %ds2, !dbg !5873
  %tobool9.us = icmp ne i32 %and8.us, 0, !dbg !5873
  %or.cond1.us = or i1 %tobool6.us, %tobool9.us, !dbg !5874
  br i1 %or.cond1.us, label %if.else.us, label %if.then.us, !dbg !5874

if.then.us:                                       ; preds = %do.body.us
  %or11.us = or i32 %ds.0.us, %and5.us, !dbg !5875
  call void @llvm.dbg.value(metadata i32 %or11.us, metadata !5856, metadata !DIExpression()), !dbg !5866
  br label %if.end40.us, !dbg !5876

if.else.us:                                       ; preds = %do.body.us
  %or.cond2.us = and i1 %tobool6.us, %tobool9.us, !dbg !5877
  br i1 %or.cond2.us, label %if.then17.us, label %if.else20.us, !dbg !5877

if.else20.us:                                     ; preds = %if.else.us
  %tobool22.us = icmp ne i32 %and5.us, 0, !dbg !5878
  %or.cond3.us = and i1 %tobool22.us, %tobool9.us, !dbg !5879
  br i1 %or.cond3.us, label %if.then26.us, label %if.end40.us, !dbg !5879

if.then26.us:                                     ; preds = %if.else20.us
  %call.us = tail call i32 @get_dep_weak(i32 %ds1, i32 %t.0.us) #7, !dbg !5880
  call void @llvm.dbg.value(metadata i32 %call.us, metadata !5858, metadata !DIExpression()), !dbg !5881
  %call27.us = tail call i32 @get_dep_weak(i32 %ds2, i32 %t.0.us) #7, !dbg !5882
  call void @llvm.dbg.value(metadata i32 %call27.us, metadata !5864, metadata !DIExpression()), !dbg !5881
  %mul.us = mul nsw i32 %call.us, %call27.us, !dbg !5883
  call void @llvm.dbg.value(metadata i32 %mul.us, metadata !5865, metadata !DIExpression()), !dbg !5881
  %div.us = sdiv i32 %mul.us, 62, !dbg !5885
  call void @llvm.dbg.value(metadata i32 %div.us, metadata !5865, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 undef, metadata !5865, metadata !DIExpression()), !dbg !5881
  %0 = icmp sgt i32 %div.us, 1, !dbg !5886
  %spec.select.us = select i1 %0, i32 %div.us, i32 1, !dbg !5886
  call void @llvm.dbg.value(metadata i32 %spec.select.us, metadata !5865, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 %spec.select.us, metadata !5865, metadata !DIExpression()), !dbg !5881
  %call37.us = tail call i32 @set_dep_weak(i32 %ds.0.us, i32 %t.0.us, i32 %spec.select.us) #7, !dbg !5887
  call void @llvm.dbg.value(metadata i32 %call37.us, metadata !5856, metadata !DIExpression()), !dbg !5866
  br label %if.end40.us, !dbg !5888

if.then17.us:                                     ; preds = %if.else.us
  %or19.us = or i32 %ds.0.us, %and8.us, !dbg !5889
  call void @llvm.dbg.value(metadata i32 %or19.us, metadata !5856, metadata !DIExpression()), !dbg !5866
  br label %if.end40.us, !dbg !5890

if.end40.us:                                      ; preds = %if.then17.us, %if.then26.us, %if.else20.us, %if.then.us
  %ds.3.us = phi i32 [ %or11.us, %if.then.us ], [ %or19.us, %if.then17.us ], [ %call37.us, %if.then26.us ], [ %ds.0.us, %if.else20.us ], !dbg !5891
  call void @llvm.dbg.value(metadata i32 %ds.3.us, metadata !5856, metadata !DIExpression()), !dbg !5866
  %cmp41.us = icmp eq i32 %t.0.us, 16515072, !dbg !5892
  br i1 %cmp41.us, label %do.end.us-lcssa.us, label %if.end43.us, !dbg !5894

if.end43.us:                                      ; preds = %if.end40.us
  %shl.us = shl i32 %t.0.us, 6, !dbg !5895
  call void @llvm.dbg.value(metadata i32 %shl.us, metadata !5857, metadata !DIExpression()), !dbg !5866
  br label %do.body.us, !dbg !5896

do.end.us-lcssa.us:                               ; preds = %if.end40.us
  %ds.3.us.lcssa = phi i32 [ %ds.3.us, %if.end40.us ], !dbg !5891
  call void @llvm.dbg.value(metadata i32 %ds.3.us.lcssa, metadata !5856, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i32 %ds.3.us.lcssa, metadata !5856, metadata !DIExpression()), !dbg !5866
  br label %do.end, !dbg !5897

do.body:                                          ; preds = %if.end43, %cond.end.cond.end.split_crit_edge
  %ds.0 = phi i32 [ %or, %cond.end.cond.end.split_crit_edge ], [ %ds.3, %if.end43 ], !dbg !5866
  %t.0 = phi i32 [ 63, %cond.end.cond.end.split_crit_edge ], [ %shl, %if.end43 ], !dbg !5866
  call void @llvm.dbg.value(metadata i32 %t.0, metadata !5857, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i32 %ds.0, metadata !5856, metadata !DIExpression()), !dbg !5866
  %and5 = and i32 %t.0, %ds1, !dbg !5872
  %tobool6 = icmp eq i32 %and5, 0, !dbg !5872
  %and8 = and i32 %t.0, %ds2, !dbg !5873
  %tobool9 = icmp ne i32 %and8, 0, !dbg !5873
  %or.cond1 = or i1 %tobool6, %tobool9, !dbg !5874
  br i1 %or.cond1, label %if.else, label %if.then, !dbg !5874

if.then:                                          ; preds = %do.body
  %or11 = or i32 %ds.0, %and5, !dbg !5875
  call void @llvm.dbg.value(metadata i32 %or11, metadata !5856, metadata !DIExpression()), !dbg !5866
  br label %if.end40, !dbg !5876

if.else:                                          ; preds = %do.body
  %or.cond2 = and i1 %tobool6, %tobool9, !dbg !5877
  br i1 %or.cond2, label %if.then17, label %if.else20, !dbg !5877

if.then17:                                        ; preds = %if.else
  %or19 = or i32 %ds.0, %and8, !dbg !5889
  call void @llvm.dbg.value(metadata i32 %or19, metadata !5856, metadata !DIExpression()), !dbg !5866
  br label %if.end40, !dbg !5890

if.else20:                                        ; preds = %if.else
  %tobool22 = icmp ne i32 %and5, 0, !dbg !5878
  %or.cond3 = and i1 %tobool22, %tobool9, !dbg !5879
  br i1 %or.cond3, label %if.then26, label %if.end40, !dbg !5879

if.then26:                                        ; preds = %if.else20
  %call = tail call i32 @get_dep_weak(i32 %ds1, i32 %t.0) #7, !dbg !5880
  call void @llvm.dbg.value(metadata i32 %call, metadata !5858, metadata !DIExpression()), !dbg !5881
  %call27 = tail call i32 @get_dep_weak(i32 %ds2, i32 %t.0) #7, !dbg !5882
  call void @llvm.dbg.value(metadata i32 %call27, metadata !5864, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 undef, metadata !5865, metadata !DIExpression()), !dbg !5881
  %cmp32 = icmp slt i32 %call, %call27, !dbg !5898
  %call.call27 = select i1 %cmp32, i32 %call27, i32 %call
  call void @llvm.dbg.value(metadata i32 %call.call27, metadata !5865, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 %call.call27, metadata !5865, metadata !DIExpression()), !dbg !5881
  %call37 = tail call i32 @set_dep_weak(i32 %ds.0, i32 %t.0, i32 %call.call27) #7, !dbg !5887
  call void @llvm.dbg.value(metadata i32 %call37, metadata !5856, metadata !DIExpression()), !dbg !5866
  br label %if.end40, !dbg !5888

if.end40:                                         ; preds = %if.then17, %if.then26, %if.else20, %if.then
  %ds.3 = phi i32 [ %or11, %if.then ], [ %or19, %if.then17 ], [ %call37, %if.then26 ], [ %ds.0, %if.else20 ], !dbg !5891
  call void @llvm.dbg.value(metadata i32 %ds.3, metadata !5856, metadata !DIExpression()), !dbg !5866
  %cmp41 = icmp eq i32 %t.0, 16515072, !dbg !5892
  br i1 %cmp41, label %do.end.us-lcssa, label %if.end43, !dbg !5894

if.end43:                                         ; preds = %if.end40
  %shl = shl i32 %t.0, 6, !dbg !5895
  call void @llvm.dbg.value(metadata i32 %shl, metadata !5857, metadata !DIExpression()), !dbg !5866
  br label %do.body, !dbg !5896

do.end.us-lcssa:                                  ; preds = %if.end40
  %ds.3.lcssa6 = phi i32 [ %ds.3, %if.end40 ], !dbg !5891
  call void @llvm.dbg.value(metadata i32 %ds.3.lcssa6, metadata !5856, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i32 %ds.3.lcssa6, metadata !5856, metadata !DIExpression()), !dbg !5866
  br label %do.end, !dbg !5897

do.end:                                           ; preds = %do.end.us-lcssa.us, %do.end.us-lcssa
  %ds.3.lcssa = phi i32 [ %ds.3.lcssa6, %do.end.us-lcssa ], [ %ds.3.us.lcssa, %do.end.us-lcssa.us ], !dbg !5891
  call void @llvm.dbg.value(metadata i32 %ds.3.lcssa, metadata !5856, metadata !DIExpression()), !dbg !5866
  ret i32 %ds.3.lcssa, !dbg !5897
}

; Function Attrs: nounwind uwtable
define dso_local i32 @ds_full_merge(i32 %ds, i32 %ds2, %struct.rtx_def* %mem1, %struct.rtx_def* %mem2) local_unnamed_addr #5 !dbg !5901 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds, metadata !5905, metadata !DIExpression()), !dbg !5917
  call void @llvm.dbg.value(metadata i32 %ds2, metadata !5906, metadata !DIExpression()), !dbg !5917
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem1, metadata !5907, metadata !DIExpression()), !dbg !5917
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem2, metadata !5908, metadata !DIExpression()), !dbg !5917
  %or = or i32 %ds, %ds2, !dbg !5918
  call void @llvm.dbg.value(metadata i32 %or, metadata !5909, metadata !DIExpression()), !dbg !5917
  %and = and i32 %or, 16777215, !dbg !5919
  %tobool = icmp eq i32 %and, 0, !dbg !5919
  br i1 %tobool, label %if.end23, label %if.then, !dbg !5920

if.then:                                          ; preds = %entry
  %tobool1 = icmp eq i32 %ds, 0, !dbg !5921
  %and2 = and i32 %ds, 16777215, !dbg !5922
  %tobool3 = icmp ne i32 %and2, 0, !dbg !5922
  %or.cond = or i1 %tobool1, %tobool3, !dbg !5923
  br i1 %or.cond, label %lor.lhs.false, label %if.then8, !dbg !5923

lor.lhs.false:                                    ; preds = %if.then
  %tobool4 = icmp eq i32 %ds2, 0, !dbg !5924
  %and6 = and i32 %ds2, 16777215, !dbg !5925
  %tobool7 = icmp ne i32 %and6, 0, !dbg !5925
  %or.cond1 = or i1 %tobool4, %tobool7, !dbg !5926
  br i1 %or.cond1, label %if.else, label %if.then8, !dbg !5926

if.then8:                                         ; preds = %lor.lhs.false, %if.then
  %and9 = and i32 %or, -16777216, !dbg !5927
  call void @llvm.dbg.value(metadata i32 %and9, metadata !5909, metadata !DIExpression()), !dbg !5917
  br label %if.end23, !dbg !5928

if.else:                                          ; preds = %lor.lhs.false
  %tobool10 = icmp eq %struct.rtx_def* %mem1, null, !dbg !5929
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !5930

if.then11:                                        ; preds = %if.else
  %call = tail call i32 @estimate_dep_weak(%struct.rtx_def* nonnull %mem1, %struct.rtx_def* %mem2) #7, !dbg !5931
  call void @llvm.dbg.value(metadata i32 %call, metadata !5910, metadata !DIExpression()), !dbg !5932
  %call12 = tail call i32 @set_dep_weak(i32 %ds, i32 63, i32 %call) #7, !dbg !5933
  call void @llvm.dbg.value(metadata i32 %call12, metadata !5905, metadata !DIExpression()), !dbg !5917
  br label %if.end, !dbg !5934

if.end:                                           ; preds = %if.else, %if.then11
  %ds.addr.0 = phi i32 [ %call12, %if.then11 ], [ %ds, %if.else ]
  call void @llvm.dbg.value(metadata i32 %ds.addr.0, metadata !5905, metadata !DIExpression()), !dbg !5917
  %tobool13 = icmp eq i32 %ds.addr.0, 0, !dbg !5935
  br i1 %tobool13, label %if.end23, label %if.else15, !dbg !5937

if.else15:                                        ; preds = %if.end
  br i1 %tobool4, label %if.end23, label %if.else18, !dbg !5938

if.else18:                                        ; preds = %if.else15
  %call19 = tail call i32 @ds_merge(i32 %ds2, i32 %ds.addr.0) #7, !dbg !5939
  call void @llvm.dbg.value(metadata i32 %call19, metadata !5909, metadata !DIExpression()), !dbg !5917
  br label %if.end23

if.end23:                                         ; preds = %if.else15, %if.end, %entry, %if.then8, %if.else18
  %new_status.3 = phi i32 [ %or, %entry ], [ %and9, %if.then8 ], [ %ds2, %if.end ], [ %call19, %if.else18 ], [ %ds.addr.0, %if.else15 ], !dbg !5917
  call void @llvm.dbg.value(metadata i32 %new_status.3, metadata !5909, metadata !DIExpression()), !dbg !5917
  ret i32 %new_status.3, !dbg !5941
}

; Function Attrs: nounwind uwtable
define dso_local i32 @ds_max_merge(i32 %ds1, i32 %ds2) local_unnamed_addr #5 !dbg !5942 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds1, metadata !5944, metadata !DIExpression()), !dbg !5946
  call void @llvm.dbg.value(metadata i32 %ds2, metadata !5945, metadata !DIExpression()), !dbg !5946
  %0 = or i32 %ds1, %ds2, !dbg !5947
  %1 = icmp eq i32 %0, 0, !dbg !5947
  br i1 %1, label %return, label %if.end, !dbg !5947

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %ds1, 0, !dbg !5949
  %cmp4 = icmp ne i32 %ds2, 0, !dbg !5951
  %or.cond1 = and i1 %cmp2, %cmp4, !dbg !5952
  br i1 %or.cond1, label %return, label %if.end6, !dbg !5952

if.end6:                                          ; preds = %if.end
  %cmp7 = icmp ne i32 %ds1, 0, !dbg !5953
  %cmp9 = icmp eq i32 %ds2, 0, !dbg !5955
  %or.cond2 = and i1 %cmp7, %cmp9, !dbg !5956
  br i1 %or.cond2, label %return, label %if.end11, !dbg !5956

if.end11:                                         ; preds = %if.end6
  %call = tail call fastcc i32 @ds_merge_1(i32 %ds1, i32 %ds2, i8 zeroext 1) #7, !dbg !5957
  br label %return, !dbg !5958

return:                                           ; preds = %if.end6, %if.end, %entry, %if.end11
  %retval.0 = phi i32 [ %call, %if.end11 ], [ 0, %entry ], [ %ds2, %if.end ], [ %ds1, %if.end6 ], !dbg !5946
  ret i32 %retval.0, !dbg !5959
}

; Function Attrs: nounwind uwtable
define dso_local i32 @ds_weak(i32 %ds) local_unnamed_addr #5 !dbg !5960 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds, metadata !5964, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 1, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 0, metadata !5967, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 63, metadata !5966, metadata !DIExpression()), !dbg !5968
  br label %do.body, !dbg !5969

do.body:                                          ; preds = %if.end2, %entry
  %dt.0 = phi i32 [ 63, %entry ], [ %shl, %if.end2 ], !dbg !5968
  %res.0 = phi i32 [ 1, %entry ], [ %res.1, %if.end2 ], !dbg !5968
  %n.0 = phi i32 [ 0, %entry ], [ %n.1, %if.end2 ], !dbg !5968
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !5967, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %res.0, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %dt.0, metadata !5966, metadata !DIExpression()), !dbg !5968
  %and = and i32 %dt.0, %ds, !dbg !5970
  %tobool = icmp eq i32 %and, 0, !dbg !5970
  br i1 %tobool, label %if.end, label %if.then, !dbg !5973

if.then:                                          ; preds = %do.body
  %call = tail call i32 @get_dep_weak(i32 %ds, i32 %dt.0) #7, !dbg !5974
  %mul = mul nsw i32 %res.0, %call, !dbg !5976
  call void @llvm.dbg.value(metadata i32 %mul, metadata !5965, metadata !DIExpression()), !dbg !5968
  %inc = add nsw i32 %n.0, 1, !dbg !5977
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5967, metadata !DIExpression()), !dbg !5968
  br label %if.end, !dbg !5978

if.end:                                           ; preds = %do.body, %if.then
  %res.1 = phi i32 [ %mul, %if.then ], [ %res.0, %do.body ], !dbg !5968
  %n.1 = phi i32 [ %inc, %if.then ], [ %n.0, %do.body ], !dbg !5968
  call void @llvm.dbg.value(metadata i32 %n.1, metadata !5967, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %res.1, metadata !5965, metadata !DIExpression()), !dbg !5968
  %cmp = icmp eq i32 %dt.0, 16515072, !dbg !5979
  br i1 %cmp, label %do.end, label %if.end2, !dbg !5981

if.end2:                                          ; preds = %if.end
  %shl = shl i32 %dt.0, 6, !dbg !5982
  call void @llvm.dbg.value(metadata i32 %shl, metadata !5966, metadata !DIExpression()), !dbg !5968
  br label %do.body, !dbg !5983

do.end:                                           ; preds = %if.end
  %res.1.lcssa = phi i32 [ %res.1, %if.end ], !dbg !5968
  %n.1.lcssa = phi i32 [ %n.1, %if.end ], !dbg !5968
  call void @llvm.dbg.value(metadata i32 %res.1.lcssa, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %n.1.lcssa, metadata !5967, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %res.1.lcssa, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %n.1.lcssa, metadata !5967, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %res.1.lcssa, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %n.1.lcssa, metadata !5967, metadata !DIExpression()), !dbg !5968
  %tobool3 = icmp eq i32 %n.1.lcssa, 0, !dbg !5984
  br i1 %tobool3, label %cond.true, label %cond.end, !dbg !5984

cond.true:                                        ; preds = %do.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 4007, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5984
  br label %cond.end, !dbg !5984

cond.end:                                         ; preds = %do.end, %cond.true
  br label %while.cond, !dbg !5985

while.cond:                                       ; preds = %while.body, %cond.end
  %res.2 = phi i32 [ %res.1.lcssa, %cond.end ], [ %div, %while.body ], !dbg !5968
  %n.2 = phi i32 [ %n.1.lcssa, %cond.end ], [ %dec, %while.body ], !dbg !5968
  call void @llvm.dbg.value(metadata i32 %n.2, metadata !5967, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %res.2, metadata !5965, metadata !DIExpression()), !dbg !5968
  %dec = add nsw i32 %n.2, -1, !dbg !5986
  call void @llvm.dbg.value(metadata i32 %dec, metadata !5967, metadata !DIExpression()), !dbg !5968
  %tobool4 = icmp eq i32 %dec, 0, !dbg !5985
  br i1 %tobool4, label %while.end, label %while.body, !dbg !5985

while.body:                                       ; preds = %while.cond
  %div = sdiv i32 %res.2, 62, !dbg !5987
  call void @llvm.dbg.value(metadata i32 %div, metadata !5965, metadata !DIExpression()), !dbg !5968
  br label %while.cond, !dbg !5985, !llvm.loop !5988

while.end:                                        ; preds = %while.cond
  %res.2.lcssa = phi i32 [ %res.2, %while.cond ], !dbg !5968
  call void @llvm.dbg.value(metadata i32 %res.2.lcssa, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %res.2.lcssa, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %res.2.lcssa, metadata !5965, metadata !DIExpression()), !dbg !5968
  %0 = icmp sgt i32 %res.2.lcssa, 1, !dbg !5990
  %spec.select = select i1 %0, i32 %res.2.lcssa, i32 1, !dbg !5990
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5965, metadata !DIExpression()), !dbg !5968
  %cmp8 = icmp slt i32 %spec.select, 63, !dbg !5991
  br i1 %cmp8, label %cond.end11, label %cond.true9, !dbg !5991

cond.true9:                                       ; preds = %while.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 4014, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5991
  br label %cond.end11, !dbg !5991

cond.end11:                                       ; preds = %while.end, %cond.true9
  ret i32 %spec.select, !dbg !5992
}

; Function Attrs: nounwind uwtable
define dso_local i32 @ds_get_speculation_types(i32 %ds) local_unnamed_addr #5 !dbg !5993 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds, metadata !5997, metadata !DIExpression()), !dbg !5998
  %and = and i32 %ds, 63, !dbg !5999
  %tobool = icmp eq i32 %and, 0, !dbg !5999
  %or = or i32 %ds, 63, !dbg !6001
  %spec.select = select i1 %tobool, i32 %ds, i32 %or, !dbg !6002
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5997, metadata !DIExpression()), !dbg !5998
  %and1 = and i32 %spec.select, 4032, !dbg !6003
  %tobool2 = icmp eq i32 %and1, 0, !dbg !6003
  %or4 = or i32 %spec.select, 4032, !dbg !6005
  %ds.addr.1 = select i1 %tobool2, i32 %spec.select, i32 %or4, !dbg !6005
  call void @llvm.dbg.value(metadata i32 %ds.addr.1, metadata !5997, metadata !DIExpression()), !dbg !5998
  %and6 = and i32 %ds.addr.1, 258048, !dbg !6006
  %tobool7 = icmp eq i32 %and6, 0, !dbg !6006
  %or9 = or i32 %ds.addr.1, 258048, !dbg !6008
  %spec.select1 = select i1 %tobool7, i32 %ds.addr.1, i32 %or9, !dbg !6009
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !5997, metadata !DIExpression()), !dbg !5998
  %and11 = and i32 %spec.select1, 16515072, !dbg !6010
  %tobool12 = icmp eq i32 %and11, 0, !dbg !6010
  %or14 = or i32 %spec.select1, 16515072, !dbg !6012
  %ds.addr.3 = select i1 %tobool12, i32 %spec.select1, i32 %or14, !dbg !6012
  call void @llvm.dbg.value(metadata i32 %ds.addr.3, metadata !5997, metadata !DIExpression()), !dbg !5998
  %and16 = and i32 %ds.addr.3, 16777215, !dbg !6013
  ret i32 %and16, !dbg !6014
}

; Function Attrs: nounwind uwtable
define dso_local i32 @ds_get_max_dep_weak(i32 %ds) local_unnamed_addr #5 !dbg !6015 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds, metadata !6017, metadata !DIExpression()), !dbg !6018
  %and = and i32 %ds, 63, !dbg !6019
  %tobool = icmp eq i32 %and, 0, !dbg !6019
  br i1 %tobool, label %if.end, label %if.then, !dbg !6021

if.then:                                          ; preds = %entry
  %call = tail call i32 @set_dep_weak(i32 %ds, i32 63, i32 62) #7, !dbg !6022
  call void @llvm.dbg.value(metadata i32 %call, metadata !6017, metadata !DIExpression()), !dbg !6018
  br label %if.end, !dbg !6023

if.end:                                           ; preds = %entry, %if.then
  %ds.addr.0 = phi i32 [ %call, %if.then ], [ %ds, %entry ]
  call void @llvm.dbg.value(metadata i32 %ds.addr.0, metadata !6017, metadata !DIExpression()), !dbg !6018
  %and1 = and i32 %ds.addr.0, 4032, !dbg !6024
  %tobool2 = icmp eq i32 %and1, 0, !dbg !6024
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !6026

if.then3:                                         ; preds = %if.end
  %call4 = tail call i32 @set_dep_weak(i32 %ds.addr.0, i32 4032, i32 62) #7, !dbg !6027
  call void @llvm.dbg.value(metadata i32 %call4, metadata !6017, metadata !DIExpression()), !dbg !6018
  br label %if.end5, !dbg !6028

if.end5:                                          ; preds = %if.end, %if.then3
  %ds.addr.1 = phi i32 [ %call4, %if.then3 ], [ %ds.addr.0, %if.end ], !dbg !6018
  call void @llvm.dbg.value(metadata i32 %ds.addr.1, metadata !6017, metadata !DIExpression()), !dbg !6018
  %and6 = and i32 %ds.addr.1, 258048, !dbg !6029
  %tobool7 = icmp eq i32 %and6, 0, !dbg !6029
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !6031

if.then8:                                         ; preds = %if.end5
  %call9 = tail call i32 @set_dep_weak(i32 %ds.addr.1, i32 258048, i32 62) #7, !dbg !6032
  call void @llvm.dbg.value(metadata i32 %call9, metadata !6017, metadata !DIExpression()), !dbg !6018
  br label %if.end10, !dbg !6033

if.end10:                                         ; preds = %if.end5, %if.then8
  %ds.addr.2 = phi i32 [ %call9, %if.then8 ], [ %ds.addr.1, %if.end5 ], !dbg !6018
  call void @llvm.dbg.value(metadata i32 %ds.addr.2, metadata !6017, metadata !DIExpression()), !dbg !6018
  %and11 = and i32 %ds.addr.2, 16515072, !dbg !6034
  %tobool12 = icmp eq i32 %and11, 0, !dbg !6034
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !6036

if.then13:                                        ; preds = %if.end10
  %call14 = tail call i32 @set_dep_weak(i32 %ds.addr.2, i32 16515072, i32 62) #7, !dbg !6037
  call void @llvm.dbg.value(metadata i32 %call14, metadata !6017, metadata !DIExpression()), !dbg !6018
  br label %if.end15, !dbg !6038

if.end15:                                         ; preds = %if.end10, %if.then13
  %ds.addr.3 = phi i32 [ %call14, %if.then13 ], [ %ds.addr.2, %if.end10 ], !dbg !6018
  call void @llvm.dbg.value(metadata i32 %ds.addr.3, metadata !6017, metadata !DIExpression()), !dbg !6018
  ret i32 %ds.addr.3, !dbg !6039
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_ds(i32 %s) local_unnamed_addr #5 !dbg !6040 {
entry:
  call void @llvm.dbg.value(metadata i32 %s, metadata !6044, metadata !DIExpression()), !dbg !6045
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6046
  tail call fastcc void @dump_ds(%struct._IO_FILE* %0, i32 %s) #7, !dbg !6047
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6048
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6049
  ret void, !dbg !6050
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_ds(%struct._IO_FILE* %f, i32 %s) unnamed_addr #5 !dbg !6051 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !6055, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata i32 %s, metadata !6056, metadata !DIExpression()), !dbg !6057
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !6058
  %and = and i32 %s, 63, !dbg !6059
  %tobool = icmp eq i32 %and, 0, !dbg !6059
  br i1 %tobool, label %if.end, label %if.then, !dbg !6061

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @get_dep_weak_1(i32 %s, i32 63) #7, !dbg !6062
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i32 %call1) #6, !dbg !6063
  br label %if.end, !dbg !6063

if.end:                                           ; preds = %entry, %if.then
  %and3 = and i32 %s, 4032, !dbg !6064
  %tobool4 = icmp eq i32 %and3, 0, !dbg !6064
  br i1 %tobool4, label %if.end8, label %if.then5, !dbg !6066

if.then5:                                         ; preds = %if.end
  %call6 = tail call i32 @get_dep_weak_1(i32 %s, i32 4032) #7, !dbg !6067
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i32 %call6) #6, !dbg !6068
  br label %if.end8, !dbg !6068

if.end8:                                          ; preds = %if.end, %if.then5
  %and9 = and i32 %s, 258048, !dbg !6069
  %tobool10 = icmp eq i32 %and9, 0, !dbg !6069
  br i1 %tobool10, label %if.end14, label %if.then11, !dbg !6071

if.then11:                                        ; preds = %if.end8
  %call12 = tail call i32 @get_dep_weak_1(i32 %s, i32 258048) #7, !dbg !6072
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i32 %call12) #6, !dbg !6073
  br label %if.end14, !dbg !6073

if.end14:                                         ; preds = %if.end8, %if.then11
  %and15 = and i32 %s, 16515072, !dbg !6074
  %tobool16 = icmp eq i32 %and15, 0, !dbg !6074
  br i1 %tobool16, label %if.end20, label %if.then17, !dbg !6076

if.then17:                                        ; preds = %if.end14
  %call18 = tail call i32 @get_dep_weak_1(i32 %s, i32 16515072) #7, !dbg !6077
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0), i32 %call18) #6, !dbg !6078
  br label %if.end20, !dbg !6078

if.end20:                                         ; preds = %if.end14, %if.then17
  %and21 = and i32 %s, 134217728, !dbg !6079
  %tobool22 = icmp eq i32 %and21, 0, !dbg !6079
  br i1 %tobool22, label %if.end25, label %if.then23, !dbg !6081

if.then23:                                        ; preds = %if.end20
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !6082
  br label %if.end25, !dbg !6082

if.end25:                                         ; preds = %if.end20, %if.then23
  %and26 = and i32 %s, 16777216, !dbg !6083
  %tobool27 = icmp eq i32 %and26, 0, !dbg !6083
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !6085

if.then28:                                        ; preds = %if.end25
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !6086
  br label %if.end30, !dbg !6086

if.end30:                                         ; preds = %if.end25, %if.then28
  %and31 = and i32 %s, 67108864, !dbg !6087
  %tobool32 = icmp eq i32 %and31, 0, !dbg !6087
  br i1 %tobool32, label %if.end35, label %if.then33, !dbg !6089

if.then33:                                        ; preds = %if.end30
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !6090
  br label %if.end35, !dbg !6090

if.end35:                                         ; preds = %if.end30, %if.then33
  %and36 = and i32 %s, 33554432, !dbg !6091
  %tobool37 = icmp eq i32 %and36, 0, !dbg !6091
  br i1 %tobool37, label %if.end40, label %if.then38, !dbg !6093

if.then38:                                        ; preds = %if.end35
  %call39 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !6094
  br label %if.end40, !dbg !6094

if.end40:                                         ; preds = %if.end35, %if.then38
  %call41 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !6095
  ret void, !dbg !6096
}

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @onlyjump_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @pc_set(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @attach_dep_link(%struct._dep_link* %l, %struct._dep_link** %prev_nextp) unnamed_addr #5 !dbg !6097 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep_link* %l, metadata !6101, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata %struct._dep_link** %prev_nextp, metadata !6102, metadata !DIExpression()), !dbg !6104
  %0 = load %struct._dep_link*, %struct._dep_link** %prev_nextp, align 8, !dbg !6105
  call void @llvm.dbg.value(metadata %struct._dep_link* %0, metadata !6103, metadata !DIExpression()), !dbg !6104
  %prev_nextp1 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %l, i64 0, i32 2, !dbg !6106
  %1 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp1, align 8, !dbg !6106
  %cmp = icmp eq %struct._dep_link** %1, null, !dbg !6106
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !6106

land.lhs.true:                                    ; preds = %entry
  %next2 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %l, i64 0, i32 1, !dbg !6106
  %2 = load %struct._dep_link*, %struct._dep_link** %next2, align 8, !dbg !6106
  %cmp3 = icmp eq %struct._dep_link* %2, null, !dbg !6106
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !6106

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 236, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6106
  br label %cond.end, !dbg !6106

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  store %struct._dep_link** %prev_nextp, %struct._dep_link*** %prev_nextp1, align 8, !dbg !6107
  %next5 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %l, i64 0, i32 1, !dbg !6108
  store %struct._dep_link* %0, %struct._dep_link** %next5, align 8, !dbg !6109
  %cmp6 = icmp eq %struct._dep_link* %0, null, !dbg !6110
  br i1 %cmp6, label %if.end, label %if.then, !dbg !6112

if.then:                                          ; preds = %cond.end
  %prev_nextp7 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %0, i64 0, i32 2, !dbg !6113
  %3 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp7, align 8, !dbg !6113
  %cmp8 = icmp eq %struct._dep_link** %3, %prev_nextp, !dbg !6113
  br i1 %cmp8, label %cond.end11, label %cond.true9, !dbg !6113

cond.true9:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 245, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6113
  br label %cond.end11, !dbg !6113

cond.end11:                                       ; preds = %if.then, %cond.true9
  store %struct._dep_link** %next5, %struct._dep_link*** %prev_nextp7, align 8, !dbg !6115
  br label %if.end, !dbg !6116

if.end:                                           ; preds = %cond.end, %cond.end11
  store %struct._dep_link* %l, %struct._dep_link** %prev_nextp, align 8, !dbg !6117
  ret void, !dbg !6118
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @depl_on_debug_p(%struct._dep_link* %dep) unnamed_addr #0 !dbg !6119 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep_link* %dep, metadata !6123, metadata !DIExpression()), !dbg !6124
  %node = getelementptr inbounds %struct._dep_link, %struct._dep_link* %dep, i64 0, i32 0, !dbg !6125
  %0 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !6125
  %pro = getelementptr inbounds %struct._dep_node, %struct._dep_node* %0, i64 0, i32 1, i32 0, !dbg !6125
  %1 = bitcast %struct.rtx_def** %pro to i32**, !dbg !6125
  %2 = load i32*, i32** %1, align 8, !dbg !6125
  %bf.load = load i32, i32* %2, align 8, !dbg !6125
  %bf.clear = and i32 %bf.load, 65535, !dbg !6125
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !6125
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6126

land.rhs:                                         ; preds = %entry
  %con = getelementptr inbounds %struct._dep_node, %struct._dep_node* %0, i64 0, i32 1, i32 1, !dbg !6127
  %3 = bitcast %struct.rtx_def** %con to i32**, !dbg !6127
  %4 = load i32*, i32** %3, align 8, !dbg !6127
  %bf.load4 = load i32, i32* %4, align 8, !dbg !6127
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !6127
  %cmp6 = icmp ne i32 %bf.clear5, 7, !dbg !6127
  %phitmp = zext i1 %cmp6 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %5, !dbg !6128
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @ask_dependency_caches(%struct._dep* %dep) unnamed_addr #5 !dbg !6129 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !6133, metadata !DIExpression()), !dbg !6141
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6142
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !6142
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 0, !dbg !6142
  %1 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !6142
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6142
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6142
  %2 = load i32, i32* %rt_int, align 8, !dbg !6142
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %2) #7, !dbg !6142
  call void @llvm.dbg.value(metadata i32 %call, metadata !6134, metadata !DIExpression()), !dbg !6141
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6143
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i64 0, i32 0, !dbg !6143
  %con = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 1, !dbg !6143
  %4 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !6143
  %arrayidx9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6143
  %rt_int10 = bitcast %union.rtunion_def* %arrayidx9 to i32*, !dbg !6143
  %5 = load i32, i32* %rt_int10, align 8, !dbg !6143
  %call11 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %5) #7, !dbg !6143
  call void @llvm.dbg.value(metadata i32 %call11, metadata !6135, metadata !DIExpression()), !dbg !6141
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !6144
  %cmp = icmp ne %struct.bitmap_head_def* %6, null, !dbg !6144
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !6144
  %cmp12 = icmp ne %struct.bitmap_head_def* %7, null, !dbg !6144
  %or.cond = and i1 %cmp, %cmp12, !dbg !6144
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !6144
  %cmp14 = icmp ne %struct.bitmap_head_def* %8, null, !dbg !6144
  %or.cond3 = and i1 %or.cond, %cmp14, !dbg !6144
  br i1 %or.cond3, label %cond.end17, label %cond.true15, !dbg !6144

cond.true15:                                      ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6144
  %.pre = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !6145
  br label %cond.end17, !dbg !6144

cond.end17:                                       ; preds = %entry, %cond.true15
  %9 = phi %struct.bitmap_head_def* [ %6, %entry ], [ %.pre, %cond.true15 ], !dbg !6145
  %10 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6146
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %10, i64 0, i32 17, !dbg !6147
  %11 = load i32, i32* %flags, align 8, !dbg !6147
  %and = and i32 %11, 1, !dbg !6148
  %tobool19 = icmp eq i32 %and, 0, !dbg !6148
  %idxprom42 = sext i32 %call11 to i64, !dbg !6145
  %arrayidx43 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %9, i64 %idxprom42, !dbg !6145
  %call44 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx43, i32 %call) #6, !dbg !6145
  %tobool45 = icmp ne i32 %call44, 0, !dbg !6145
  br i1 %tobool19, label %if.then, label %if.else41, !dbg !6149

if.then:                                          ; preds = %cond.end17
  br i1 %tobool45, label %if.end37, label %if.else, !dbg !6150

if.else:                                          ; preds = %if.then
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !6151
  %arrayidx25 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %12, i64 %idxprom42, !dbg !6151
  %call26 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx25, i32 %call) #6, !dbg !6154
  %tobool27 = icmp eq i32 %call26, 0, !dbg !6154
  br i1 %tobool27, label %if.else29, label %if.end37, !dbg !6155

if.else29:                                        ; preds = %if.else
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !6156
  %arrayidx31 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %13, i64 %idxprom42, !dbg !6156
  %call32 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx31, i32 %call) #6, !dbg !6158
  %tobool33 = icmp eq i32 %call32, 0, !dbg !6158
  br i1 %tobool33, label %cleanup, label %if.end37, !dbg !6159

if.end37:                                         ; preds = %if.else29, %if.else, %if.then
  %present_dep_type.1 = phi i32 [ 0, %if.then ], [ 11, %if.else ], [ 12, %if.else29 ], !dbg !6160
  call void @llvm.dbg.value(metadata i32 %present_dep_type.1, metadata !6136, metadata !DIExpression()), !dbg !6161
  %type = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 2, !dbg !6162
  %14 = load i32, i32* %type, align 8, !dbg !6162
  %cmp38 = icmp slt i32 %14, %present_dep_type.1, !dbg !6164
  br label %cleanup, !dbg !6145

cleanup:                                          ; preds = %if.else29, %if.end37
  %cleanup.dest.slot.0 = phi i1 [ false, %if.else29 ], [ %cmp38, %if.end37 ]
  %retval.0 = phi i32 [ 3, %if.else29 ], [ 1, %if.end37 ]
  br i1 %cleanup.dest.slot.0, label %if.end89, label %cleanup90

if.else41:                                        ; preds = %cond.end17
  call void @llvm.dbg.value(metadata i32 0, metadata !6139, metadata !DIExpression()), !dbg !6165
  %spec.select = select i1 %tobool45, i32 16777216, i32 0, !dbg !6166
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6139, metadata !DIExpression()), !dbg !6165
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !6167
  %arrayidx49 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %15, i64 %idxprom42, !dbg !6167
  %call50 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx49, i32 %call) #6, !dbg !6169
  %tobool51 = icmp eq i32 %call50, 0, !dbg !6169
  %or53 = or i32 %spec.select, 33554432, !dbg !6170
  %present_dep_types.1 = select i1 %tobool51, i32 %spec.select, i32 %or53, !dbg !6170
  call void @llvm.dbg.value(metadata i32 %present_dep_types.1, metadata !6139, metadata !DIExpression()), !dbg !6165
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !6171
  %arrayidx56 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %16, i64 %idxprom42, !dbg !6171
  %call57 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx56, i32 %call) #6, !dbg !6173
  %tobool58 = icmp eq i32 %call57, 0, !dbg !6173
  %or60 = or i32 %present_dep_types.1, 67108864, !dbg !6174
  %spec.select5 = select i1 %tobool58, i32 %present_dep_types.1, i32 %or60, !dbg !6175
  call void @llvm.dbg.value(metadata i32 %spec.select5, metadata !6139, metadata !DIExpression()), !dbg !6165
  %cmp62 = icmp eq i32 %spec.select5, 0, !dbg !6176
  br i1 %cmp62, label %cleanup86, label %if.end64, !dbg !6178

if.end64:                                         ; preds = %if.else41
  %17 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6179
  %flags65 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %17, i64 0, i32 17, !dbg !6181
  %18 = load i32, i32* %flags65, align 8, !dbg !6181
  %and66 = and i32 %18, 2, !dbg !6182
  %tobool67 = icmp eq i32 %and66, 0, !dbg !6182
  br i1 %tobool67, label %if.then72, label %lor.lhs.false, !dbg !6183

lor.lhs.false:                                    ; preds = %if.end64
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !6184
  %arrayidx69 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %19, i64 %idxprom42, !dbg !6184
  %call70 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx69, i32 %call) #6, !dbg !6185
  %tobool71 = icmp eq i32 %call70, 0, !dbg !6185
  br i1 %tobool71, label %if.then72, label %if.else78, !dbg !6186

if.then72:                                        ; preds = %lor.lhs.false, %if.end64
  %status = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 3, !dbg !6187
  %20 = load i32, i32* %status, align 4, !dbg !6187
  %and73 = and i32 %20, 117440512, !dbg !6190
  %or74 = or i32 %spec.select5, %and73, !dbg !6191
  %cmp75 = icmp eq i32 %or74, %spec.select5, !dbg !6192
  br i1 %cmp75, label %cleanup86, label %if.end85, !dbg !6193

if.else78:                                        ; preds = %lor.lhs.false
  %and79 = and i32 %spec.select5, 83886080, !dbg !6194
  %cmp80 = icmp eq i32 %and79, %spec.select5, !dbg !6194
  br i1 %cmp80, label %if.end85, label %cond.true81, !dbg !6194

cond.true81:                                      ; preds = %if.else78
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 927, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6194
  br label %if.end85, !dbg !6194

if.end85:                                         ; preds = %cond.true81, %if.else78, %if.then72
  br label %cleanup86, !dbg !6196

cleanup86:                                        ; preds = %if.then72, %if.else41, %if.end85
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end85 ], [ false, %if.else41 ], [ false, %if.then72 ]
  %retval.1 = phi i32 [ undef, %if.end85 ], [ 3, %if.else41 ], [ 1, %if.then72 ]
  br i1 %cleanup.dest.slot.1, label %if.end89, label %cleanup90

if.end89:                                         ; preds = %cleanup86, %cleanup
  br label %cleanup90, !dbg !6197

cleanup90:                                        ; preds = %cleanup86, %cleanup, %if.end89
  %retval.2 = phi i32 [ %retval.1, %cleanup86 ], [ 2, %if.end89 ], [ %retval.0, %cleanup ], !dbg !6141
  ret i32 %retval.2, !dbg !6198
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @update_dep(%struct._dep* %dep, %struct._dep* %new_dep, %struct._sd_iterator* byval(%struct._sd_iterator) align 8 %sd_it, %struct.rtx_def* %mem1, %struct.rtx_def* %mem2) unnamed_addr #5 !dbg !6199 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !6203, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata %struct._dep* %new_dep, metadata !6204, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !6205, metadata !DIExpression()), !dbg !6223
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem1, metadata !6206, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem2, metadata !6207, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i32 1, metadata !6208, metadata !DIExpression()), !dbg !6222
  %type = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 2, !dbg !6224
  %0 = load i32, i32* %type, align 8, !dbg !6224
  call void @llvm.dbg.value(metadata i32 %0, metadata !6209, metadata !DIExpression()), !dbg !6222
  %type1 = getelementptr inbounds %struct._dep, %struct._dep* %new_dep, i64 0, i32 2, !dbg !6225
  %1 = load i32, i32* %type1, align 8, !dbg !6225
  %cmp = icmp slt i32 %1, %0, !dbg !6227
  br i1 %cmp, label %if.then, label %if.end, !dbg !6228

if.then:                                          ; preds = %entry
  store i32 %1, i32* %type, align 8, !dbg !6229
  call void @llvm.dbg.value(metadata i32 2, metadata !6208, metadata !DIExpression()), !dbg !6222
  br label %if.end, !dbg !6231

if.end:                                           ; preds = %if.then, %entry
  %res.0 = phi i32 [ 2, %if.then ], [ 1, %entry ], !dbg !6222
  call void @llvm.dbg.value(metadata i32 %res.0, metadata !6208, metadata !DIExpression()), !dbg !6222
  %2 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6232
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %2, i64 0, i32 17, !dbg !6233
  %3 = load i32, i32* %flags, align 8, !dbg !6233
  %and = and i32 %3, 1, !dbg !6234
  %tobool = icmp eq i32 %and, 0, !dbg !6234
  br i1 %tobool, label %if.end30, label %if.then4, !dbg !6235

if.then4:                                         ; preds = %if.end
  %status = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 3, !dbg !6236
  %4 = load i32, i32* %status, align 4, !dbg !6236
  call void @llvm.dbg.value(metadata i32 %4, metadata !6210, metadata !DIExpression()), !dbg !6237
  %status5 = getelementptr inbounds %struct._dep, %struct._dep* %new_dep, i64 0, i32 3, !dbg !6238
  %5 = load i32, i32* %status5, align 4, !dbg !6238
  call void @llvm.dbg.value(metadata i32 %5, metadata !6213, metadata !DIExpression()), !dbg !6237
  %or = or i32 %5, %4, !dbg !6239
  call void @llvm.dbg.value(metadata i32 %or, metadata !6214, metadata !DIExpression()), !dbg !6237
  %and6 = and i32 %or, 16777215, !dbg !6240
  %tobool7 = icmp eq i32 %and6, 0, !dbg !6240
  br i1 %tobool7, label %if.end25, label %if.then8, !dbg !6241

if.then8:                                         ; preds = %if.then4
  %and9 = and i32 %5, 16777215, !dbg !6242
  %tobool10 = icmp ne i32 %and9, 0, !dbg !6242
  %and11 = and i32 %4, 16777215, !dbg !6243
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6243
  %or.cond = and i1 %tobool10, %tobool12, !dbg !6244
  br i1 %or.cond, label %if.else, label %if.then13, !dbg !6244

if.then13:                                        ; preds = %if.then8
  %and14 = and i32 %or, -16777216, !dbg !6245
  call void @llvm.dbg.value(metadata i32 %and14, metadata !6214, metadata !DIExpression()), !dbg !6237
  %tobool16 = icmp eq i32 %and11, 0, !dbg !6247
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !6249

if.then17:                                        ; preds = %if.then13
  tail call fastcc void @change_spec_dep_to_hard(%struct._sd_iterator* nonnull byval(%struct._sd_iterator) align 8 %sd_it) #7, !dbg !6250
  br label %if.end25, !dbg !6250

if.else:                                          ; preds = %if.then8
  %cmp19 = icmp eq %struct.rtx_def* %mem1, null, !dbg !6251
  br i1 %cmp19, label %if.end22, label %if.then20, !dbg !6252

if.then20:                                        ; preds = %if.else
  %call = tail call i32 @estimate_dep_weak(%struct.rtx_def* nonnull %mem1, %struct.rtx_def* %mem2) #7, !dbg !6253
  call void @llvm.dbg.value(metadata i32 %call, metadata !6215, metadata !DIExpression()), !dbg !6254
  %call21 = tail call i32 @set_dep_weak(i32 %5, i32 63, i32 %call) #7, !dbg !6255
  call void @llvm.dbg.value(metadata i32 %call21, metadata !6213, metadata !DIExpression()), !dbg !6237
  br label %if.end22, !dbg !6256

if.end22:                                         ; preds = %if.else, %if.then20
  %ds.0 = phi i32 [ %call21, %if.then20 ], [ %5, %if.else ], !dbg !6237
  call void @llvm.dbg.value(metadata i32 %ds.0, metadata !6213, metadata !DIExpression()), !dbg !6237
  %call23 = tail call i32 @ds_merge(i32 %4, i32 %ds.0) #7, !dbg !6257
  call void @llvm.dbg.value(metadata i32 %call23, metadata !6214, metadata !DIExpression()), !dbg !6237
  br label %if.end25

if.end25:                                         ; preds = %if.then13, %if.then4, %if.end22, %if.then17
  %new_status.1 = phi i32 [ %or, %if.then4 ], [ %call23, %if.end22 ], [ %and14, %if.then17 ], [ %and14, %if.then13 ], !dbg !6237
  call void @llvm.dbg.value(metadata i32 %new_status.1, metadata !6214, metadata !DIExpression()), !dbg !6237
  call void @llvm.dbg.value(metadata i32 %new_status.1, metadata !6213, metadata !DIExpression()), !dbg !6237
  %cmp26 = icmp eq i32 %4, %new_status.1, !dbg !6258
  br i1 %cmp26, label %if.end30, label %if.then27, !dbg !6260

if.then27:                                        ; preds = %if.end25
  store i32 %new_status.1, i32* %status, align 4, !dbg !6261
  call void @llvm.dbg.value(metadata i32 2, metadata !6208, metadata !DIExpression()), !dbg !6222
  br label %if.end30, !dbg !6263

if.end30:                                         ; preds = %if.end25, %if.end, %if.then27
  %res.2 = phi i32 [ %res.0, %if.end ], [ 2, %if.then27 ], [ %res.0, %if.end25 ], !dbg !6222
  call void @llvm.dbg.value(metadata i32 %res.2, metadata !6208, metadata !DIExpression()), !dbg !6222
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !6264
  %cmp31 = icmp ne %struct.bitmap_head_def* %6, null, !dbg !6266
  %cmp32 = icmp eq i32 %res.2, 2, !dbg !6267
  %or.cond1 = and i1 %cmp31, %cmp32, !dbg !6268
  br i1 %or.cond1, label %if.then33, label %if.end34, !dbg !6268

if.then33:                                        ; preds = %if.end30
  tail call fastcc void @update_dependency_caches(%struct._dep* %dep, i32 %0) #7, !dbg !6269
  br label %if.end34, !dbg !6269

if.end34:                                         ; preds = %if.then33, %if.end30
  ret i32 %res.2, !dbg !6270
}

; Function Attrs: nounwind uwtable
define internal fastcc void @change_spec_dep_to_hard(%struct._sd_iterator* byval(%struct._sd_iterator) align 8 %sd_it) unnamed_addr #5 !dbg !6271 {
entry:
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !6273, metadata !DIExpression()), !dbg !6279
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %sd_it, i64 0, i32 2, !dbg !6280
  %0 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !6280
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !6280
  %node1 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i64 0, i32 0, !dbg !6280
  %2 = load %struct._dep_node*, %struct._dep_node** %node1, align 8, !dbg !6280
  call void @llvm.dbg.value(metadata %struct._dep_node* %2, metadata !6274, metadata !DIExpression()), !dbg !6281
  %back = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 0, !dbg !6282
  call void @llvm.dbg.value(metadata %struct._dep_link* %back, metadata !6275, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.value(metadata %struct._dep_node* %2, metadata !6276, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !6281
  %pro = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 1, i32 0, !dbg !6283
  %3 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !6283
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !6277, metadata !DIExpression()), !dbg !6281
  %con = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 1, i32 1, !dbg !6284
  %4 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !6284
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6278, metadata !DIExpression()), !dbg !6281
  %5 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6285
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %5, i64 0, i32 0, !dbg !6285
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6285
  %base5 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !6285
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6285
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6285
  %7 = load i32, i32* %rt_int, align 8, !dbg !6285
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base5, i32 %7) #7, !dbg !6285
  %call9 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base, i32 %call) #7, !dbg !6285
  %spec_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call9, i64 0, i32 3, !dbg !6285
  %8 = load %struct._deps_list*, %struct._deps_list** %spec_back_deps, align 8, !dbg !6285
  %9 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6286
  %base12 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %9, i64 0, i32 0, !dbg !6286
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6286
  %base18 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !6286
  %11 = load i32, i32* %rt_int, align 8, !dbg !6286
  %call26 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base18, i32 %11) #7, !dbg !6286
  %call27 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base12, i32 %call26) #7, !dbg !6286
  %hard_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call27, i64 0, i32 2, !dbg !6286
  %12 = load %struct._deps_list*, %struct._deps_list** %hard_back_deps, align 8, !dbg !6286
  tail call fastcc void @move_dep_link(%struct._dep_link* %back, %struct._deps_list* %8, %struct._deps_list* %12) #7, !dbg !6287
  %status = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 1, i32 3, !dbg !6288
  %13 = load i32, i32* %status, align 4, !dbg !6289
  %and = and i32 %13, -16777216, !dbg !6289
  store i32 %and, i32* %status, align 4, !dbg !6289
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !6290
  %cmp = icmp eq %struct.bitmap_head_def* %14, null, !dbg !6292
  br i1 %cmp, label %if.end, label %if.then, !dbg !6293

if.then:                                          ; preds = %entry
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !6294
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6295
  %base30 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i64 0, i32 0, !dbg !6295
  %17 = load i32, i32* %rt_int, align 8, !dbg !6295
  %call38 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base30, i32 %17) #7, !dbg !6295
  %idxprom = sext i32 %call38 to i64, !dbg !6294
  %arrayidx39 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %15, i64 %idxprom, !dbg !6294
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6296
  %base42 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i64 0, i32 0, !dbg !6296
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6296
  %rt_int49 = bitcast %union.rtunion_def* %arrayidx48 to i32*, !dbg !6296
  %19 = load i32, i32* %rt_int49, align 8, !dbg !6296
  %call50 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base42, i32 %19) #7, !dbg !6296
  %call51 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx39, i32 %call50) #6, !dbg !6297
  br label %if.end, !dbg !6297

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !6298
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_dependency_caches(%struct._dep* %dep, i32 %old_type) unnamed_addr #5 !dbg !6299 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !6303, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.value(metadata i32 %old_type, metadata !6304, metadata !DIExpression()), !dbg !6307
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6308
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !6308
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 0, !dbg !6308
  %1 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !6308
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6308
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6308
  %2 = load i32, i32* %rt_int, align 8, !dbg !6308
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %2) #7, !dbg !6308
  call void @llvm.dbg.value(metadata i32 %call, metadata !6305, metadata !DIExpression()), !dbg !6307
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6309
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i64 0, i32 0, !dbg !6309
  %con = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 1, !dbg !6309
  %4 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !6309
  %arrayidx9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6309
  %rt_int10 = bitcast %union.rtunion_def* %arrayidx9 to i32*, !dbg !6309
  %5 = load i32, i32* %rt_int10, align 8, !dbg !6309
  %call11 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %5) #7, !dbg !6309
  call void @llvm.dbg.value(metadata i32 %call11, metadata !6306, metadata !DIExpression()), !dbg !6307
  %6 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6310
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %6, i64 0, i32 17, !dbg !6312
  %7 = load i32, i32* %flags, align 8, !dbg !6312
  %and = and i32 %7, 1, !dbg !6313
  %tobool12 = icmp eq i32 %and, 0, !dbg !6313
  br i1 %tobool12, label %if.then, label %if.end, !dbg !6314

if.then:                                          ; preds = %entry
  switch i32 %old_type, label %sw.default [
    i32 11, label %sw.bb
    i32 12, label %sw.bb15
  ], !dbg !6315

sw.bb:                                            ; preds = %if.then
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !6317
  %idxprom = sext i32 %call11 to i64, !dbg !6317
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %8, i64 %idxprom, !dbg !6317
  %call14 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx13, i32 %call) #6, !dbg !6319
  br label %if.end, !dbg !6320

sw.bb15:                                          ; preds = %if.then
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !6321
  %idxprom16 = sext i32 %call11 to i64, !dbg !6321
  %arrayidx17 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %9, i64 %idxprom16, !dbg !6321
  %call18 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx17, i32 %call) #6, !dbg !6322
  br label %if.end, !dbg !6323

sw.default:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1008, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6324
  br label %if.end, !dbg !6325

if.end:                                           ; preds = %entry, %sw.bb, %sw.bb15, %sw.default
  tail call fastcc void @set_dependency_caches(%struct._dep* %dep) #7, !dbg !6326
  ret void, !dbg !6327
}

; Function Attrs: nounwind uwtable
define internal fastcc void @detach_dep_link(%struct._dep_link* %l) unnamed_addr #5 !dbg !6328 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep_link* %l, metadata !6332, metadata !DIExpression()), !dbg !6335
  %prev_nextp1 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %l, i64 0, i32 2, !dbg !6336
  %0 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp1, align 8, !dbg !6336
  call void @llvm.dbg.value(metadata %struct._dep_link** %0, metadata !6333, metadata !DIExpression()), !dbg !6335
  %next2 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %l, i64 0, i32 1, !dbg !6337
  %1 = load %struct._dep_link*, %struct._dep_link** %next2, align 8, !dbg !6337
  call void @llvm.dbg.value(metadata %struct._dep_link* %1, metadata !6334, metadata !DIExpression()), !dbg !6335
  store %struct._dep_link* %1, %struct._dep_link** %0, align 8, !dbg !6338
  %cmp = icmp eq %struct._dep_link* %1, null, !dbg !6339
  br i1 %cmp, label %if.end, label %if.then, !dbg !6341

if.then:                                          ; preds = %entry
  %prev_nextp3 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i64 0, i32 2, !dbg !6342
  store %struct._dep_link** %0, %struct._dep_link*** %prev_nextp3, align 8, !dbg !6343
  br label %if.end, !dbg !6342

if.end:                                           ; preds = %entry, %if.then
  store %struct._dep_link** null, %struct._dep_link*** %prev_nextp1, align 8, !dbg !6344
  store %struct._dep_link* null, %struct._dep_link** %next2, align 8, !dbg !6345
  ret void, !dbg !6346
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @dep_link_is_detached_p(%struct._dep_link* %link) unnamed_addr #5 !dbg !6347 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep_link* %link, metadata !6349, metadata !DIExpression()), !dbg !6350
  %prev_nextp = getelementptr inbounds %struct._dep_link, %struct._dep_link* %link, i64 0, i32 2, !dbg !6351
  %0 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp, align 8, !dbg !6351
  %cmp = icmp eq %struct._dep_link** %0, null, !dbg !6352
  %conv1 = zext i1 %cmp to i8, !dbg !6351
  ret i8 %conv1, !dbg !6353
}

declare dso_local void @extract_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @preprocess_constraints() local_unnamed_addr #2

declare dso_local void @ira_implicitly_set_insn_hard_regs(i64*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %list, i32 %uncond, i32 %dep_type) unnamed_addr #5 !dbg !6354 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6358, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list, metadata !6359, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %uncond, metadata !6360, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %dep_type, metadata !6361, metadata !DIExpression()), !dbg !6362
  %tobool1 = icmp eq i32 %uncond, 0, !dbg !6363
  br i1 %tobool1, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !6368

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !6368

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !6368

for.cond.us:                                      ; preds = %for.inc.us, %entry.split.us
  %list.addr.0.us = phi %struct.rtx_def* [ %list, %entry.split.us ], [ %3, %for.inc.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list.addr.0.us, metadata !6359, metadata !DIExpression()), !dbg !6362
  %tobool.us = icmp eq %struct.rtx_def* %list.addr.0.us, null, !dbg !6369
  br i1 %tobool.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !6369

for.body.us:                                      ; preds = %for.cond.us
  %arrayidx.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.addr.0.us, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6370
  %rt_rtx.us = bitcast %union.rtunion_def* %arrayidx.us to %struct.rtx_def**, !dbg !6370
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx.us, align 8, !dbg !6370
  %call.us = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn, %struct.rtx_def* %0) #7, !dbg !6371
  %tobool2.us = icmp eq i8 %call.us, 0, !dbg !6371
  br i1 %tobool2.us, label %if.then.us, label %for.inc.us, !dbg !6372

if.then.us:                                       ; preds = %for.body.us
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx.us, align 8, !dbg !6373
  tail call void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* %1, i32 %dep_type) #7, !dbg !6374
  br label %for.inc.us, !dbg !6374

for.inc.us:                                       ; preds = %if.then.us, %for.body.us
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.addr.0.us, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6375
  %rt_rtx10.us = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !6375
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx10.us, align 8, !dbg !6375
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !6359, metadata !DIExpression()), !dbg !6362
  br label %for.cond.us, !dbg !6376, !llvm.loop !6377

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !6379

for.cond:                                         ; preds = %for.body, %entry.entry.split_crit_edge
  %list.addr.0 = phi %struct.rtx_def* [ %list, %entry.entry.split_crit_edge ], [ %6, %for.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list.addr.0, metadata !6359, metadata !DIExpression()), !dbg !6362
  %tobool = icmp eq %struct.rtx_def* %list.addr.0, null, !dbg !6369
  br i1 %tobool, label %for.end.us-lcssa, label %for.body, !dbg !6369

for.body:                                         ; preds = %for.cond
  %arrayidx5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6373
  %rt_rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !6373
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !6373
  tail call void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* %4, i32 %dep_type) #7, !dbg !6374
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6375
  %rt_rtx10 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !6375
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx10, align 8, !dbg !6375
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !6359, metadata !DIExpression()), !dbg !6362
  br label %for.cond, !dbg !6376, !llvm.loop !6377

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !6379

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  ret void, !dbg !6379
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %x, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !6380 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !6382, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6383, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6384, metadata !DIExpression()), !dbg !6413
  %0 = load i8, i8* @can_start_lhs_rhs_p, align 1, !dbg !6414
  call void @llvm.dbg.value(metadata i8 %0, metadata !6389, metadata !DIExpression()), !dbg !6413
  store i8 0, i8* @can_start_lhs_rhs_p, align 1, !dbg !6415
  %cond = icmp eq %struct.rtx_def* %x, null, !dbg !6416
  br i1 %cond, label %cond.true, label %if.end, !dbg !6416

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2371, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6416
  br label %cleanup.cont, !dbg !6417

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq i8 %0, 0, !dbg !6418
  br i1 %tobool1, label %if.end5, label %land.lhs.true, !dbg !6420

land.lhs.true:                                    ; preds = %if.end
  %1 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6421
  %start_rhs = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %1, i64 0, i32 5, !dbg !6422
  %2 = load void (%struct.rtx_def*)*, void (%struct.rtx_def*)** %start_rhs, align 8, !dbg !6422
  %tobool2 = icmp eq void (%struct.rtx_def*)* %2, null, !dbg !6421
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !6423

if.then3:                                         ; preds = %land.lhs.true
  tail call void %2(%struct.rtx_def* nonnull %x) #6, !dbg !6424
  br label %if.end5, !dbg !6424

if.end5:                                          ; preds = %land.lhs.true, %if.end, %if.then3
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6425
  %bf.load = load i32, i32* %3, align 8, !dbg !6425
  %bf.clear = and i32 %bf.load, 65535, !dbg !6425
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6387, metadata !DIExpression()), !dbg !6413
  %trunc = trunc i32 %bf.load to i16, !dbg !6426
  switch i16 %trunc, label %sw.epilog [
    i16 30, label %sw.bb
    i16 32, label %sw.bb
    i16 31, label %sw.bb
    i16 33, label %sw.bb
    i16 45, label %sw.bb
    i16 35, label %sw.bb
    i16 44, label %sw.bb
    i16 37, label %sw.bb13
    i16 43, label %sw.bb35
    i16 29, label %sw.bb214
    i16 22, label %sw.bb215
    i16 19, label %sw.bb222
    i16 78, label %sw.bb271
    i16 79, label %sw.bb271
    i16 74, label %sw.bb258
    i16 76, label %sw.bb258
    i16 75, label %sw.bb258
    i16 77, label %sw.bb258
    i16 17, label %lor.lhs.false
    i16 16, label %if.then230
  ], !dbg !6426

sw.bb:                                            ; preds = %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5
  br i1 %tobool1, label %cleanup.cont, label %land.lhs.true8, !dbg !6427

land.lhs.true8:                                   ; preds = %sw.bb
  %4 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6429
  %finish_rhs = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %4, i64 0, i32 6, !dbg !6430
  %5 = load void ()*, void ()** %finish_rhs, align 8, !dbg !6430
  %tobool9 = icmp eq void ()* %5, null, !dbg !6429
  br i1 %tobool9, label %cleanup.cont, label %if.then10, !dbg !6431

if.then10:                                        ; preds = %land.lhs.true8
  tail call void %5() #6, !dbg !6432
  br label %cleanup.cont, !dbg !6432

sw.bb13:                                          ; preds = %if.end5
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %x) #7, !dbg !6433
  call void @llvm.dbg.value(metadata i32 %call, metadata !6390, metadata !DIExpression()), !dbg !6434
  %bf.load14 = load i32, i32* %3, align 8, !dbg !6435
  %bf.lshr = lshr i32 %bf.load14, 16, !dbg !6435
  %bf.clear15 = and i32 %bf.lshr, 255, !dbg !6435
  call void @llvm.dbg.value(metadata i32 %bf.clear15, metadata !6393, metadata !DIExpression()), !dbg !6434
  tail call fastcc void @sched_analyze_reg(%struct.deps* %deps, i32 %call, i32 %bf.clear15, i32 24, %struct.rtx_def* %insn) #7, !dbg !6436
  %6 = and i32 %call, -8, !dbg !6437
  %7 = icmp eq i32 %6, 8, !dbg !6437
  br i1 %7, label %if.then21, label %if.end26, !dbg !6437

if.then21:                                        ; preds = %sw.bb13
  %cmp22 = icmp eq i32 %call, 8, !dbg !6439
  br i1 %cmp22, label %if.end25, label %if.then24, !dbg !6442

if.then24:                                        ; preds = %if.then21
  tail call fastcc void @sched_analyze_reg(%struct.deps* %deps, i32 8, i32 %bf.clear15, i32 24, %struct.rtx_def* %insn) #7, !dbg !6443
  br label %if.end25, !dbg !6443

if.end25:                                         ; preds = %if.then21, %if.then24
  tail call fastcc void @sched_analyze_reg(%struct.deps* %deps, i32 8, i32 %bf.clear15, i32 23, %struct.rtx_def* %insn) #7, !dbg !6444
  br label %if.end26, !dbg !6445

if.end26:                                         ; preds = %if.end25, %sw.bb13
  br i1 %tobool1, label %cleanup.cont, label %land.lhs.true29, !dbg !6446

land.lhs.true29:                                  ; preds = %if.end26
  %8 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6448
  %finish_rhs30 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %8, i64 0, i32 6, !dbg !6449
  %9 = load void ()*, void ()** %finish_rhs30, align 8, !dbg !6449
  %tobool31 = icmp eq void ()* %9, null, !dbg !6448
  br i1 %tobool31, label %cleanup.cont, label %if.then32, !dbg !6450

if.then32:                                        ; preds = %land.lhs.true29
  tail call void %9() #6, !dbg !6451
  br label %cleanup.cont, !dbg !6451

sw.bb35:                                          ; preds = %if.end5
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6398, metadata !DIExpression()), !dbg !6452
  %10 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6453
  %use_cselib = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %10, i64 0, i32 12, !dbg !6454
  %bf.load36 = load i8, i8* %use_cselib, align 8, !dbg !6454
  %bf.clear37 = and i8 %bf.load36, 1, !dbg !6454
  %tobool38 = icmp eq i8 %bf.clear37, 0, !dbg !6453
  br i1 %tobool38, label %if.end68, label %if.then39, !dbg !6455

if.then39:                                        ; preds = %sw.bb35
  %11 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !6456
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6457
  %rt_mem = bitcast %union.rtunion_def* %12 to %struct.mem_attrs**, !dbg !6457
  %13 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !6457
  %cmp41 = icmp eq %struct.mem_attrs* %13, null, !dbg !6457
  br i1 %cmp41, label %cond.end50, label %cond.false44, !dbg !6457

cond.false44:                                     ; preds = %if.then39
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %13, i64 0, i32 5, !dbg !6457
  %14 = load i8, i8* %addrspace, align 8, !dbg !6457
  br label %cond.end50, !dbg !6457

cond.end50:                                       ; preds = %if.then39, %cond.false44
  %cond51 = phi i8 [ %14, %cond.false44 ], [ 0, %if.then39 ]
  %call53 = tail call i32 %11(i8 zeroext %cond51) #6, !dbg !6458
  call void @llvm.dbg.value(metadata i32 %call53, metadata !6399, metadata !DIExpression()), !dbg !6459
  %call54 = tail call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* nonnull %x) #6, !dbg !6460
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call54, metadata !6398, metadata !DIExpression()), !dbg !6452
  %arrayidx57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call54, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6461
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !6461
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6461
  %call58 = tail call %struct.cselib_val_struct* @cselib_lookup_from_insn(%struct.rtx_def* %15, i32 %call53, i32 1, %struct.rtx_def* %insn) #6, !dbg !6462
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6463
  %call63 = tail call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %16) #6, !dbg !6464
  store %struct.rtx_def* %call63, %struct.rtx_def** %rt_rtx, align 8, !dbg !6465
  br label %if.end68, !dbg !6466

if.end68:                                         ; preds = %sw.bb35, %cond.end50
  %t.0 = phi %struct.rtx_def* [ %call54, %cond.end50 ], [ %x, %sw.bb35 ], !dbg !6452
  call void @llvm.dbg.value(metadata %struct.rtx_def* %t.0, metadata !6398, metadata !DIExpression()), !dbg !6452
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6467
  %bf.load69 = load i32, i32* %17, align 8, !dbg !6467
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !6467
  %cmp71 = icmp eq i32 %bf.clear70, 7, !dbg !6467
  br i1 %cmp71, label %if.end195, label %if.then73, !dbg !6468

if.then73:                                        ; preds = %if.end68
  %call74 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %t.0) #6, !dbg !6469
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call74, metadata !6398, metadata !DIExpression()), !dbg !6452
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 0, !dbg !6470
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 1, !dbg !6471
  br label %while.cond, !dbg !6472

while.cond:                                       ; preds = %if.end98, %if.then73
  %pending.0.in = phi %struct.rtx_def** [ %pending_read_insns, %if.then73 ], [ %rt_rtx102, %if.end98 ]
  %pending_mem.0.in = phi %struct.rtx_def** [ %pending_read_mems, %if.then73 ], [ %rt_rtx106, %if.end98 ]
  %pending_mem.0 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem.0.in, align 8, !dbg !6473
  %pending.0 = load %struct.rtx_def*, %struct.rtx_def** %pending.0.in, align 8, !dbg !6473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending_mem.0, metadata !6397, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending.0, metadata !6396, metadata !DIExpression()), !dbg !6452
  %tobool75 = icmp eq %struct.rtx_def* %pending.0, null, !dbg !6472
  br i1 %tobool75, label %while.end, label %while.body, !dbg !6472

while.body:                                       ; preds = %while.cond
  %arrayidx78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending_mem.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6474
  %rt_rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**, !dbg !6474
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !6474
  %call80 = tail call i32 @read_dependence(%struct.rtx_def* %18, %struct.rtx_def* %call74) #6, !dbg !6477
  %tobool81 = icmp eq i32 %call80, 0, !dbg !6477
  br i1 %tobool81, label %if.end98, label %land.lhs.true82, !dbg !6478

land.lhs.true82:                                  ; preds = %while.body
  %arrayidx85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6479
  %rt_rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**, !dbg !6479
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !6479
  %call87 = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn, %struct.rtx_def* %19) #7, !dbg !6480
  %tobool88 = icmp eq i8 %call87, 0, !dbg !6480
  br i1 %tobool88, label %if.then89, label %if.end98, !dbg !6481

if.then89:                                        ; preds = %land.lhs.true82
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !6482
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !6483
  tail call fastcc void @note_mem_dep(%struct.rtx_def* %call74, %struct.rtx_def* %20, %struct.rtx_def* %21, i32 67108864) #7, !dbg !6484
  br label %if.end98, !dbg !6484

if.end98:                                         ; preds = %land.lhs.true82, %while.body, %if.then89
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6485
  %rt_rtx102 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !6485
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending_mem.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6486
  %rt_rtx106 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !6486
  br label %while.cond, !dbg !6472, !llvm.loop !6487

while.end:                                        ; preds = %while.cond
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 2, !dbg !6489
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 3, !dbg !6490
  br label %while.cond107, !dbg !6491

while.cond107:                                    ; preds = %if.end138, %while.end
  %pending.1.in = phi %struct.rtx_def** [ %pending_write_insns, %while.end ], [ %rt_rtx142, %if.end138 ]
  %pending_mem.1.in = phi %struct.rtx_def** [ %pending_write_mems, %while.end ], [ %rt_rtx146, %if.end138 ]
  %pending_mem.1 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem.1.in, align 8, !dbg !6473
  %pending.1 = load %struct.rtx_def*, %struct.rtx_def** %pending.1.in, align 8, !dbg !6473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending_mem.1, metadata !6397, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending.1, metadata !6396, metadata !DIExpression()), !dbg !6452
  %tobool108 = icmp eq %struct.rtx_def* %pending.1, null, !dbg !6491
  br i1 %tobool108, label %while.end147, label %while.body109, !dbg !6491

while.body109:                                    ; preds = %while.cond107
  %arrayidx112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending_mem.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6492
  %rt_rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**, !dbg !6492
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx113, align 8, !dbg !6492
  %call114 = tail call i32 @true_dependence(%struct.rtx_def* %24, i32 0, %struct.rtx_def* %call74, i8 (%struct.rtx_def*, i8)* nonnull @rtx_varies_p) #6, !dbg !6495
  %tobool115 = icmp eq i32 %call114, 0, !dbg !6495
  br i1 %tobool115, label %if.end138, label %land.lhs.true116, !dbg !6496

land.lhs.true116:                                 ; preds = %while.body109
  %arrayidx119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6497
  %rt_rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**, !dbg !6497
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx120, align 8, !dbg !6497
  %call121 = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn, %struct.rtx_def* %25) #7, !dbg !6498
  %tobool122 = icmp eq i8 %call121, 0, !dbg !6498
  br i1 %tobool122, label %if.then123, label %if.end138, !dbg !6499

if.then123:                                       ; preds = %land.lhs.true116
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx113, align 8, !dbg !6500
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx120, align 8, !dbg !6501
  %28 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6502
  %generate_spec_deps = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %28, i64 0, i32 12, !dbg !6503
  %bf.load132 = load i8, i8* %generate_spec_deps, align 8, !dbg !6503
  %bf.clear134 = and i8 %bf.load132, 4, !dbg !6503
  %tobool136 = icmp eq i8 %bf.clear134, 0, !dbg !6502
  %cond137 = select i1 %tobool136, i32 16777216, i32 16777279, !dbg !6502
  tail call fastcc void @note_mem_dep(%struct.rtx_def* %call74, %struct.rtx_def* %26, %struct.rtx_def* %27, i32 %cond137) #7, !dbg !6504
  br label %if.end138, !dbg !6504

if.end138:                                        ; preds = %land.lhs.true116, %while.body109, %if.then123
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6505
  %rt_rtx142 = bitcast %union.rtunion_def* %29 to %struct.rtx_def**, !dbg !6505
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending_mem.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6506
  %rt_rtx146 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**, !dbg !6506
  br label %while.cond107, !dbg !6491, !llvm.loop !6507

while.end147:                                     ; preds = %while.cond107
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 7, !dbg !6509
  br label %for.cond, !dbg !6510

for.cond:                                         ; preds = %for.inc, %while.end147
  %u.0.in = phi %struct.rtx_def** [ %last_pending_memory_flush, %while.end147 ], [ %rt_rtx194, %for.inc ]
  %u.0 = load %struct.rtx_def*, %struct.rtx_def** %u.0.in, align 8, !dbg !6511
  call void @llvm.dbg.value(metadata %struct.rtx_def* %u.0, metadata !6394, metadata !DIExpression()), !dbg !6452
  %tobool148 = icmp eq %struct.rtx_def* %u.0, null, !dbg !6512
  br i1 %tobool148, label %if.end195.loopexit, label %for.body, !dbg !6512

for.body:                                         ; preds = %for.cond
  %arrayidx151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %u.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6513
  %31 = bitcast %union.rtunion_def* %arrayidx151 to i32**, !dbg !6513
  %32 = load i32*, i32** %31, align 8, !dbg !6513
  %bf.load153 = load i32, i32* %32, align 8, !dbg !6513
  %bf.clear154 = and i32 %bf.load153, 65535, !dbg !6513
  %cmp155 = icmp eq i32 %bf.clear154, 9, !dbg !6513
  br i1 %cmp155, label %if.else, label %if.then157, !dbg !6514

if.then157:                                       ; preds = %for.body
  %33 = bitcast i32* %32 to %struct.rtx_def*, !dbg !6514
  tail call void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* %33, i32 12) #7, !dbg !6515
  br label %for.inc, !dbg !6515

if.else:                                          ; preds = %for.body
  %call162 = tail call fastcc i32 @deps_may_trap_p(%struct.rtx_def* nonnull %x) #7, !dbg !6516
  %tobool163 = icmp eq i32 %call162, 0, !dbg !6516
  br i1 %tobool163, label %for.inc, label %if.then164, !dbg !6517

if.then164:                                       ; preds = %if.else
  %34 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6518
  %generate_spec_deps165 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %34, i64 0, i32 12, !dbg !6519
  %bf.load166 = load i8, i8* %generate_spec_deps165, align 8, !dbg !6519
  %bf.clear168 = and i8 %bf.load166, 4, !dbg !6519
  %tobool170 = icmp eq i8 %bf.clear168, 0, !dbg !6520
  br i1 %tobool170, label %if.else183, label %land.lhs.true171, !dbg !6521

land.lhs.true171:                                 ; preds = %if.then164
  %call172 = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !6522
  %tobool174 = icmp eq i8 %call172, 0, !dbg !6522
  br i1 %tobool174, label %if.else183, label %land.lhs.true175, !dbg !6523

land.lhs.true175:                                 ; preds = %land.lhs.true171
  %35 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6524
  %mask = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %35, i64 0, i32 0, !dbg !6525
  %36 = load i32, i32* %mask, align 8, !dbg !6525
  %and = and i32 %36, 258048, !dbg !6526
  %tobool176 = icmp eq i32 %and, 0, !dbg !6526
  br i1 %tobool176, label %if.else183, label %if.then177, !dbg !6527

if.then177:                                       ; preds = %land.lhs.true175
  %call178 = tail call i32 @set_dep_weak(i32 67108864, i32 258048, i32 62) #7, !dbg !6528
  call void @llvm.dbg.value(metadata i32 %call178, metadata !6402, metadata !DIExpression()), !dbg !6529
  %rt_rtx182 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**, !dbg !6530
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx182, align 8, !dbg !6530
  tail call fastcc void @note_dep(%struct.rtx_def* %37, i32 %call178) #7, !dbg !6531
  br label %for.inc, !dbg !6532

if.else183:                                       ; preds = %land.lhs.true175, %land.lhs.true171, %if.then164
  %rt_rtx187 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**, !dbg !6533
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx187, align 8, !dbg !6533
  tail call void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* %38, i32 12) #7, !dbg !6534
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.then157, %if.then177, %if.else183
  %39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %u.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6535
  %rt_rtx194 = bitcast %union.rtunion_def* %39 to %struct.rtx_def**, !dbg !6535
  br label %for.cond, !dbg !6536, !llvm.loop !6537

if.end195.loopexit:                               ; preds = %for.cond
  br label %if.end195, !dbg !6539

if.end195:                                        ; preds = %if.end195.loopexit, %if.end68
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !6539
  %bf.load196 = load i8, i8* %readonly, align 4, !dbg !6539
  %bf.clear197 = and i8 %bf.load196, 1, !dbg !6539
  %tobool199 = icmp eq i8 %bf.clear197, 0, !dbg !6541
  br i1 %tobool199, label %if.then200, label %if.end201, !dbg !6542

if.then200:                                       ; preds = %if.end195
  tail call fastcc void @add_insn_mem_dependence(%struct.deps* %deps, i8 zeroext 1, %struct.rtx_def* %insn, %struct.rtx_def* nonnull %x) #7, !dbg !6543
  br label %if.end201, !dbg !6543

if.end201:                                        ; preds = %if.end195, %if.then200
  %arrayidx204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6544
  %rt_rtx205 = bitcast %union.rtunion_def* %arrayidx204 to %struct.rtx_def**, !dbg !6544
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx205, align 8, !dbg !6544
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %40, %struct.rtx_def* %insn) #7, !dbg !6545
  br i1 %tobool1, label %cleanup.cont, label %land.lhs.true208, !dbg !6546

land.lhs.true208:                                 ; preds = %if.end201
  %41 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6548
  %finish_rhs209 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %41, i64 0, i32 6, !dbg !6549
  %42 = load void ()*, void ()** %finish_rhs209, align 8, !dbg !6549
  %tobool210 = icmp eq void ()* %42, null, !dbg !6548
  br i1 %tobool210, label %cleanup.cont, label %if.then211, !dbg !6550

if.then211:                                       ; preds = %land.lhs.true208
  tail call void %42() #6, !dbg !6551
  br label %cleanup.cont, !dbg !6551

sw.bb214:                                         ; preds = %if.end5
  tail call fastcc void @flush_pending_lists(%struct.deps* %deps, %struct.rtx_def* %insn, i32 1, i32 0) #7, !dbg !6552
  br label %sw.epilog, !dbg !6553

sw.bb215:                                         ; preds = %if.end5
  %bf.clear218 = and i32 %bf.load, 134217728, !dbg !6554
  %tobool219 = icmp eq i32 %bf.clear218, 0, !dbg !6554
  br i1 %tobool219, label %sw.epilog, label %if.then220, !dbg !6556

if.then220:                                       ; preds = %sw.bb215
  store i32 2, i32* @reg_pending_barrier, align 4, !dbg !6557
  br label %sw.epilog, !dbg !6558

sw.bb222:                                         ; preds = %if.end5
  tail call fastcc void @flush_pending_lists(%struct.deps* %deps, %struct.rtx_def* %insn, i32 1, i32 1) #7, !dbg !6559
  br label %if.then230, !dbg !6560

lor.lhs.false:                                    ; preds = %if.end5
  %bf.clear228 = and i32 %bf.load, 134217728, !dbg !6563
  %tobool229 = icmp eq i32 %bf.clear228, 0, !dbg !6563
  br i1 %tobool229, label %if.end231, label %if.then230, !dbg !6564

if.then230:                                       ; preds = %lor.lhs.false, %sw.bb222, %if.end5
  store i32 2, i32* @reg_pending_barrier, align 4, !dbg !6565
  br label %if.end231, !dbg !6566

if.end231:                                        ; preds = %lor.lhs.false, %if.then230
  %cmp232 = icmp eq i32 %bf.clear, 17, !dbg !6567
  br i1 %cmp232, label %for.cond235.preheader, label %sw.epilog, !dbg !6569

for.cond235.preheader:                            ; preds = %if.end231
  %arrayidx238 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 1, !dbg !6570
  %rt_rtvec = bitcast %struct.object_block** %arrayidx238 to %struct.rtvec_def**, !dbg !6570
  br label %for.cond235, !dbg !6574

for.cond235:                                      ; preds = %for.cond235.preheader, %for.body241
  %indvars.iv3 = phi i64 [ 0, %for.cond235.preheader ], [ %indvars.iv.next4, %for.body241 ], !dbg !6575
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !6386, metadata !DIExpression()), !dbg !6413
  %43 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6576
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %43, i64 0, i32 0, !dbg !6576
  %44 = load i32, i32* %num_elem, align 8, !dbg !6576
  %45 = sext i32 %44 to i64, !dbg !6577
  %cmp239 = icmp slt i64 %indvars.iv3, %45, !dbg !6577
  br i1 %cmp239, label %for.body241, label %for.end248, !dbg !6574

for.body241:                                      ; preds = %for.cond235
  %arrayidx246 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %43, i64 0, i32 1, i64 %indvars.iv3, !dbg !6578
  %46 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx246, align 8, !dbg !6578
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %46, %struct.rtx_def* %insn) #7, !dbg !6579
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !6580
  call void @llvm.dbg.value(metadata i32 undef, metadata !6386, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6413
  br label %for.cond235, !dbg !6581, !llvm.loop !6582

for.end248:                                       ; preds = %for.cond235
  br i1 %tobool1, label %cleanup.cont, label %land.lhs.true251, !dbg !6584

land.lhs.true251:                                 ; preds = %for.end248
  %47 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6586
  %finish_rhs252 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %47, i64 0, i32 6, !dbg !6587
  %48 = load void ()*, void ()** %finish_rhs252, align 8, !dbg !6587
  %tobool253 = icmp eq void ()* %48, null, !dbg !6586
  br i1 %tobool253, label %cleanup.cont, label %if.then254, !dbg !6588

if.then254:                                       ; preds = %land.lhs.true251
  tail call void %48() #6, !dbg !6589
  br label %cleanup.cont, !dbg !6589

sw.bb258:                                         ; preds = %if.end5, %if.end5, %if.end5, %if.end5
  %arrayidx261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6590
  %rt_rtx262 = bitcast %union.rtunion_def* %arrayidx261 to %struct.rtx_def**, !dbg !6590
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx262, align 8, !dbg !6590
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %49, %struct.rtx_def* %insn) #7, !dbg !6591
  tail call fastcc void @sched_analyze_1(%struct.deps* %deps, %struct.rtx_def* nonnull %x, %struct.rtx_def* %insn) #7, !dbg !6592
  br i1 %tobool1, label %cleanup.cont, label %land.lhs.true265, !dbg !6593

land.lhs.true265:                                 ; preds = %sw.bb258
  %50 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6595
  %finish_rhs266 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %50, i64 0, i32 6, !dbg !6596
  %51 = load void ()*, void ()** %finish_rhs266, align 8, !dbg !6596
  %tobool267 = icmp eq void ()* %51, null, !dbg !6595
  br i1 %tobool267, label %cleanup.cont, label %if.then268, !dbg !6597

if.then268:                                       ; preds = %land.lhs.true265
  tail call void %51() #6, !dbg !6598
  br label %cleanup.cont, !dbg !6598

sw.bb271:                                         ; preds = %if.end5, %if.end5
  %arrayidx274 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6599
  %rt_rtx275 = bitcast %union.rtunion_def* %arrayidx274 to %struct.rtx_def**, !dbg !6599
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx275, align 8, !dbg !6599
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %52, %struct.rtx_def* %insn) #7, !dbg !6600
  %53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6601
  %rt_rtx279 = bitcast %union.rtunion_def* %53 to %struct.rtx_def**, !dbg !6601
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx279, align 8, !dbg !6601
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %54, %struct.rtx_def* %insn) #7, !dbg !6602
  tail call fastcc void @sched_analyze_1(%struct.deps* %deps, %struct.rtx_def* nonnull %x, %struct.rtx_def* %insn) #7, !dbg !6603
  br i1 %tobool1, label %cleanup.cont, label %land.lhs.true282, !dbg !6604

land.lhs.true282:                                 ; preds = %sw.bb271
  %55 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6606
  %finish_rhs283 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %55, i64 0, i32 6, !dbg !6607
  %56 = load void ()*, void ()** %finish_rhs283, align 8, !dbg !6607
  %tobool284 = icmp eq void ()* %56, null, !dbg !6606
  br i1 %tobool284, label %cleanup.cont, label %if.then285, !dbg !6608

if.then285:                                       ; preds = %land.lhs.true282
  tail call void %56() #6, !dbg !6609
  br label %cleanup.cont, !dbg !6609

sw.epilog:                                        ; preds = %sw.bb215, %if.end5, %if.end231, %if.then220, %sw.bb214
  %idxprom288 = zext i32 %bf.clear to i64, !dbg !6610
  %arrayidx289 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom288, !dbg !6610
  %57 = load i8*, i8** %arrayidx289, align 8, !dbg !6610
  call void @llvm.dbg.value(metadata i8* %57, metadata !6388, metadata !DIExpression()), !dbg !6413
  %arrayidx291 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom288, !dbg !6611
  %58 = load i8, i8* %arrayidx291, align 1, !dbg !6611
  call void @llvm.dbg.value(metadata i8 %58, metadata !6385, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6413
  %u316 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !6613
  %fld317 = bitcast %union.u* %u316 to [1 x %union.rtunion_def]*, !dbg !6613
  %59 = zext i8 %58 to i64, !dbg !6620
  br label %for.cond293, !dbg !6620

for.cond293:                                      ; preds = %for.inc338, %sw.epilog
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc338 ], [ %59, %sw.epilog ]
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !6621
  call void @llvm.dbg.value(metadata i32 undef, metadata !6385, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6413
  %cmp294 = icmp sgt i64 %indvars.iv1, 0, !dbg !6622
  br i1 %cmp294, label %for.body296, label %for.end339, !dbg !6623

for.body296:                                      ; preds = %for.cond293
  %arrayidx298 = getelementptr inbounds i8, i8* %57, i64 %indvars.iv.next2, !dbg !6624
  %60 = load i8, i8* %arrayidx298, align 1, !dbg !6624
  %cmp300 = icmp eq i8 %60, 101, !dbg !6625
  br i1 %cmp300, label %if.then302, label %if.else308, !dbg !6626

if.then302:                                       ; preds = %for.body296
  %arrayidx306 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld317, i64 0, i64 %indvars.iv.next2, !dbg !6627
  %rt_rtx307 = bitcast %union.rtunion_def* %arrayidx306 to %struct.rtx_def**, !dbg !6627
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx307, align 8, !dbg !6627
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %61, %struct.rtx_def* %insn) #7, !dbg !6628
  br label %for.inc338, !dbg !6628

if.else308:                                       ; preds = %for.body296
  %cmp312 = icmp eq i8 %60, 69, !dbg !6629
  br i1 %cmp312, label %for.cond315.preheader, label %for.inc338, !dbg !6630

for.cond315.preheader:                            ; preds = %if.else308
  %arrayidx319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld317, i64 0, i64 %indvars.iv.next2, !dbg !6613
  %rt_rtvec320 = bitcast %union.rtunion_def* %arrayidx319 to %struct.rtvec_def**, !dbg !6613
  br label %for.cond315, !dbg !6631

for.cond315:                                      ; preds = %for.cond315.preheader, %for.body324
  %indvars.iv = phi i64 [ 0, %for.cond315.preheader ], [ %indvars.iv.next, %for.body324 ], !dbg !6632
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6386, metadata !DIExpression()), !dbg !6413
  %62 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec320, align 8, !dbg !6633
  %num_elem321 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %62, i64 0, i32 0, !dbg !6633
  %63 = load i32, i32* %num_elem321, align 8, !dbg !6633
  %64 = sext i32 %63 to i64, !dbg !6634
  %cmp322 = icmp slt i64 %indvars.iv, %64, !dbg !6634
  br i1 %cmp322, label %for.body324, label %for.inc338.loopexit, !dbg !6631

for.body324:                                      ; preds = %for.cond315
  %arrayidx332 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %62, i64 0, i32 1, i64 %indvars.iv, !dbg !6635
  %65 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx332, align 8, !dbg !6635
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %65, %struct.rtx_def* %insn) #7, !dbg !6636
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6637
  call void @llvm.dbg.value(metadata i32 undef, metadata !6386, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6413
  br label %for.cond315, !dbg !6638, !llvm.loop !6639

for.inc338.loopexit:                              ; preds = %for.cond315
  br label %for.inc338, !dbg !6641

for.inc338:                                       ; preds = %for.inc338.loopexit, %if.then302, %if.else308
  call void @llvm.dbg.value(metadata i32 undef, metadata !6385, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6413
  br label %for.cond293, !dbg !6641, !llvm.loop !6642

for.end339:                                       ; preds = %for.cond293
  br i1 %tobool1, label %cleanup.cont, label %land.lhs.true342, !dbg !6644

land.lhs.true342:                                 ; preds = %for.end339
  %66 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6646
  %finish_rhs343 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %66, i64 0, i32 6, !dbg !6647
  %67 = load void ()*, void ()** %finish_rhs343, align 8, !dbg !6647
  %tobool344 = icmp eq void ()* %67, null, !dbg !6646
  br i1 %tobool344, label %cleanup.cont, label %if.then345, !dbg !6648

if.then345:                                       ; preds = %land.lhs.true342
  tail call void %67() #6, !dbg !6649
  br label %cleanup.cont, !dbg !6649

cleanup.cont:                                     ; preds = %land.lhs.true8, %sw.bb, %land.lhs.true29, %if.end26, %land.lhs.true208, %if.end201, %land.lhs.true282, %sw.bb271, %land.lhs.true265, %sw.bb258, %land.lhs.true251, %for.end248, %land.lhs.true342, %for.end339, %cond.true, %if.then10, %if.then32, %if.then211, %if.then254, %if.then268, %if.then285, %if.then345
  ret void, !dbg !6650
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sched_analyze_1(%struct.deps* %deps, %struct.rtx_def* %x, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !6651 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !6653, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6654, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6655, metadata !DIExpression()), !dbg !6679
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6680
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6680
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6680
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !6656, metadata !DIExpression()), !dbg !6679
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6681
  %bf.load = load i32, i32* %1, align 8, !dbg !6681
  %bf.clear = and i32 %bf.load, 65535, !dbg !6681
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6657, metadata !DIExpression()), !dbg !6679
  %2 = load i8, i8* @can_start_lhs_rhs_p, align 1, !dbg !6682
  call void @llvm.dbg.value(metadata i8 %2, metadata !6658, metadata !DIExpression()), !dbg !6679
  store i8 0, i8* @can_start_lhs_rhs_p, align 1, !dbg !6683
  %cond = icmp eq %struct.rtx_def* %0, null, !dbg !6684
  br i1 %cond, label %cond.true, label %if.end, !dbg !6684

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2197, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6684
  br label %cleanup.cont, !dbg !6685

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq i8 %2, 0, !dbg !6686
  br i1 %tobool1, label %if.end5, label %land.lhs.true, !dbg !6688

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6689
  %start_lhs = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %3, i64 0, i32 3, !dbg !6690
  %4 = load void (%struct.rtx_def*)*, void (%struct.rtx_def*)** %start_lhs, align 8, !dbg !6690
  %tobool2 = icmp eq void (%struct.rtx_def*)* %4, null, !dbg !6689
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !6691

if.then3:                                         ; preds = %land.lhs.true
  tail call void %4(%struct.rtx_def* nonnull %0) #6, !dbg !6692
  br label %if.end5, !dbg !6692

if.end5:                                          ; preds = %land.lhs.true, %if.end, %if.then3
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !6693
  %bf.load6 = load i32, i32* %5, align 8, !dbg !6693
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !6693
  %cmp8 = icmp eq i32 %bf.clear7, 15, !dbg !6694
  br i1 %cmp8, label %if.then10, label %while.cond.preheader, !dbg !6695

while.cond.preheader:                             ; preds = %if.end5
  br label %while.cond, !dbg !6696

if.then10:                                        ; preds = %if.end5
  %arrayidx13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6697
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtvec_def**, !dbg !6697
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6697
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !6697
  %7 = load i32, i32* %num_elem, align 8, !dbg !6697
  call void @llvm.dbg.value(metadata i32 %7, metadata !6659, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6699
  %8 = sext i32 %7 to i64, !dbg !6700
  br label %for.cond, !dbg !6700

for.cond:                                         ; preds = %for.inc, %if.then10
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %8, %if.then10 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6701
  call void @llvm.dbg.value(metadata i32 undef, metadata !6659, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6699
  %cmp14 = icmp sgt i64 %indvars.iv, 0, !dbg !6702
  br i1 %cmp14, label %for.body, label %for.end, !dbg !6704

for.body:                                         ; preds = %for.cond
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6705
  %arrayidx20 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv.next, !dbg !6705
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx20, align 8, !dbg !6705
  %arrayidx23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6705
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !6705
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !6705
  %cmp25 = icmp eq %struct.rtx_def* %11, null, !dbg !6707
  br i1 %cmp25, label %for.inc, label %if.then27, !dbg !6708

if.then27:                                        ; preds = %for.body
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* nonnull %11) #6, !dbg !6709
  tail call fastcc void @sched_analyze_1(%struct.deps* %deps, %struct.rtx_def* %call, %struct.rtx_def* %insn) #7, !dbg !6710
  br label %for.inc, !dbg !6710

for.inc:                                          ; preds = %for.body, %if.then27
  call void @llvm.dbg.value(metadata i32 undef, metadata !6659, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6699
  br label %for.cond, !dbg !6711, !llvm.loop !6712

for.end:                                          ; preds = %for.cond
  br i1 %tobool1, label %if.end46, label %land.lhs.true42, !dbg !6714

land.lhs.true42:                                  ; preds = %for.end
  %12 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6716
  %finish_lhs = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %12, i64 0, i32 4, !dbg !6717
  %13 = load void ()*, void ()** %finish_lhs, align 8, !dbg !6717
  %tobool43 = icmp eq void ()* %13, null, !dbg !6716
  br i1 %tobool43, label %if.end46, label %if.then44, !dbg !6718

if.then44:                                        ; preds = %land.lhs.true42
  tail call void %13() #6, !dbg !6719
  br label %if.end46, !dbg !6719

if.end46:                                         ; preds = %land.lhs.true42, %for.end, %if.then44
  %cmp47 = icmp eq i32 %bf.clear, 23, !dbg !6720
  br i1 %cmp47, label %if.then49, label %cleanup.cont, !dbg !6722

if.then49:                                        ; preds = %if.end46
  store i8 %2, i8* @can_start_lhs_rhs_p, align 1, !dbg !6723
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6725
  %rt_rtx53 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !6725
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !6725
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %15, %struct.rtx_def* %insn) #7, !dbg !6726
  store i8 0, i8* @can_start_lhs_rhs_p, align 1, !dbg !6727
  br label %cleanup.cont, !dbg !6728

while.cond:                                       ; preds = %while.cond.preheader, %if.end100
  %bf.load73 = phi i32 [ %bf.load56.pre, %if.end100 ], [ %bf.load6, %while.cond.preheader ], !dbg !6729
  %dest.0 = phi %struct.rtx_def* [ %23, %if.end100 ], [ %0, %while.cond.preheader ], !dbg !6679
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0, metadata !6656, metadata !DIExpression()), !dbg !6679
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0, i64 0, i32 0, !dbg !6729
  %bf.clear57 = and i32 %bf.load73, 65535, !dbg !6729
  %cmp58 = icmp eq i32 %bf.clear57, 40, !dbg !6730
  br i1 %cmp58, label %lor.end, label %lor.lhs.false, !dbg !6731

lor.lhs.false:                                    ; preds = %while.cond
  %cmp62 = icmp eq i32 %bf.clear57, 39, !dbg !6732
  br i1 %cmp62, label %lor.end, label %lor.rhs, !dbg !6733

lor.rhs:                                          ; preds = %lor.lhs.false
  %cmp66 = icmp eq i32 %bf.clear57, 120, !dbg !6734
  br label %lor.end, !dbg !6733

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %while.cond
  %17 = phi i1 [ true, %lor.lhs.false ], [ true, %while.cond ], [ %cmp66, %lor.rhs ]
  br i1 %17, label %while.body, label %while.end, !dbg !6696

while.body:                                       ; preds = %lor.end
  br i1 %cmp58, label %if.then81, label %lor.lhs.false72, !dbg !6735

lor.lhs.false72:                                  ; preds = %while.body
  %cmp75 = icmp eq i32 %bf.clear57, 120, !dbg !6738
  br i1 %cmp75, label %if.then81, label %lor.lhs.false77, !dbg !6739

lor.lhs.false77:                                  ; preds = %lor.lhs.false72
  %call78 = tail call zeroext i8 @df_read_modify_subreg_p(%struct.rtx_def* %dest.0) #6, !dbg !6740
  %tobool80 = icmp eq i8 %call78, 0, !dbg !6740
  br i1 %tobool80, label %if.end86, label %if.then81, !dbg !6741

if.then81:                                        ; preds = %lor.lhs.false77, %lor.lhs.false72, %while.body
  %arrayidx84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6742
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !6742
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !6742
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %18, %struct.rtx_def* %insn) #7, !dbg !6744
  br label %if.end86, !dbg !6745

if.end86:                                         ; preds = %lor.lhs.false77, %if.then81
  %bf.load87 = load i32, i32* %16, align 8, !dbg !6746
  %bf.clear88 = and i32 %bf.load87, 65535, !dbg !6746
  %cmp89 = icmp eq i32 %bf.clear88, 120, !dbg !6748
  br i1 %cmp89, label %if.then91, label %if.end100, !dbg !6749

if.then91:                                        ; preds = %if.end86
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6750
  %rt_rtx95 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !6750
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !6750
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %20, %struct.rtx_def* %insn) #7, !dbg !6752
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6753
  %rt_rtx99 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !6753
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !6753
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %22, %struct.rtx_def* %insn) #7, !dbg !6754
  br label %if.end100, !dbg !6755

if.end100:                                        ; preds = %if.then91, %if.end86
  %arrayidx103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6756
  %rt_rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**, !dbg !6756
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx104, align 8, !dbg !6756
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !6656, metadata !DIExpression()), !dbg !6679
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 0, !dbg !6679
  %bf.load56.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !6729
  br label %while.cond, !dbg !6696, !llvm.loop !6757

while.end:                                        ; preds = %lor.end
  %dest.0.lcssa = phi %struct.rtx_def* [ %dest.0, %lor.end ], !dbg !6679
  %.lcssa = phi i32* [ %16, %lor.end ], !dbg !6729
  %bf.clear57.lcssa = phi i32 [ %bf.clear57, %lor.end ], !dbg !6729
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0.lcssa, metadata !6656, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0.lcssa, metadata !6656, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0.lcssa, metadata !6656, metadata !DIExpression()), !dbg !6679
  %cmp107 = icmp eq i32 %bf.clear57.lcssa, 37, !dbg !6759
  br i1 %cmp107, label %if.then109, label %if.else, !dbg !6760

if.then109:                                       ; preds = %while.end
  %call110 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %dest.0.lcssa) #7, !dbg !6761
  call void @llvm.dbg.value(metadata i32 %call110, metadata !6662, metadata !DIExpression()), !dbg !6762
  %bf.load111 = load i32, i32* %.lcssa, align 8, !dbg !6763
  %bf.lshr = lshr i32 %bf.load111, 16, !dbg !6763
  %bf.clear112 = and i32 %bf.lshr, 255, !dbg !6763
  call void @llvm.dbg.value(metadata i32 %bf.clear112, metadata !6665, metadata !DIExpression()), !dbg !6762
  tail call fastcc void @sched_analyze_reg(%struct.deps* %deps, i32 %call110, i32 %bf.clear112, i32 %bf.clear, %struct.rtx_def* %insn) #7, !dbg !6764
  %24 = and i32 %call110, -8, !dbg !6765
  %25 = icmp eq i32 %24, 8, !dbg !6765
  br i1 %25, label %if.then118, label %if.end269, !dbg !6765

if.then118:                                       ; preds = %if.then109
  %cmp119 = icmp eq i32 %call110, 8, !dbg !6766
  br i1 %cmp119, label %if.end122, label %if.then121, !dbg !6768

if.then121:                                       ; preds = %if.then118
  tail call fastcc void @sched_analyze_reg(%struct.deps* %deps, i32 8, i32 %bf.clear112, i32 %bf.clear, %struct.rtx_def* %insn) #7, !dbg !6769
  br label %if.end122, !dbg !6769

if.end122:                                        ; preds = %if.then118, %if.then121
  %idxprom123 = zext i32 %bf.clear112 to i64, !dbg !6770
  %arrayidx124 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 8, i64 %idxprom123, !dbg !6770
  %26 = load i8, i8* %arrayidx124, align 1, !dbg !6770
  call void @llvm.dbg.value(metadata i8 %26, metadata !6666, metadata !DIExpression()), !dbg !6771
  %27 = zext i8 %26 to i64, !dbg !6772
  br label %while.cond126, !dbg !6772

while.cond126:                                    ; preds = %while.body130, %if.end122
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %while.body130 ], [ %27, %if.end122 ], !dbg !6771
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !6666, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !6666, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6771
  %cmp128 = icmp sgt i64 %indvars.iv2, 0, !dbg !6773
  br i1 %cmp128, label %while.body130, label %if.end269.loopexit, !dbg !6772

while.body130:                                    ; preds = %while.cond126
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !6774
  call void @llvm.dbg.value(metadata i32 undef, metadata !6666, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6771
  %28 = add nsw i64 %indvars.iv2, 7, !dbg !6775
  %shl = shl i64 1, %28, !dbg !6775
  %29 = load i64, i64* @implicit_reg_pending_uses, align 8, !dbg !6775
  %or = or i64 %29, %shl, !dbg !6775
  store i64 %or, i64* @implicit_reg_pending_uses, align 8, !dbg !6775
  br label %while.cond126, !dbg !6772, !llvm.loop !6776

if.else:                                          ; preds = %while.end
  %cmp135 = icmp eq i32 %bf.clear57.lcssa, 43, !dbg !6777
  br i1 %cmp135, label %if.then137, label %if.end269, !dbg !6778

if.then137:                                       ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0.lcssa, metadata !6669, metadata !DIExpression()), !dbg !6779
  %30 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6780
  %use_cselib = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %30, i64 0, i32 12, !dbg !6781
  %bf.load138 = load i8, i8* %use_cselib, align 8, !dbg !6781
  %bf.clear139 = and i8 %bf.load138, 1, !dbg !6781
  %tobool140 = icmp eq i8 %bf.clear139, 0, !dbg !6780
  br i1 %tobool140, label %if.end173, label %if.then141, !dbg !6782

if.then141:                                       ; preds = %if.then137
  %31 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !6783
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6784
  %rt_mem = bitcast %union.rtunion_def* %32 to %struct.mem_attrs**, !dbg !6784
  %33 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !6784
  %cmp145 = icmp eq %struct.mem_attrs* %33, null, !dbg !6784
  br i1 %cmp145, label %cond.end154, label %cond.false148, !dbg !6784

cond.false148:                                    ; preds = %if.then141
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %33, i64 0, i32 5, !dbg !6784
  %34 = load i8, i8* %addrspace, align 8, !dbg !6784
  br label %cond.end154, !dbg !6784

cond.end154:                                      ; preds = %if.then141, %cond.false148
  %cond155 = phi i8 [ %34, %cond.false148 ], [ 0, %if.then141 ]
  %call157 = tail call i32 %31(i8 zeroext %cond155) #6, !dbg !6785
  call void @llvm.dbg.value(metadata i32 %call157, metadata !6672, metadata !DIExpression()), !dbg !6786
  %call158 = tail call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %dest.0.lcssa) #6, !dbg !6787
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call158, metadata !6669, metadata !DIExpression()), !dbg !6779
  %arrayidx161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call158, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6788
  %rt_rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**, !dbg !6788
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx162, align 8, !dbg !6788
  %call163 = tail call %struct.cselib_val_struct* @cselib_lookup_from_insn(%struct.rtx_def* %35, i32 %call157, i32 1, %struct.rtx_def* %insn) #6, !dbg !6789
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx162, align 8, !dbg !6790
  %call168 = tail call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %36) #6, !dbg !6791
  store %struct.rtx_def* %call168, %struct.rtx_def** %rt_rtx162, align 8, !dbg !6792
  br label %if.end173, !dbg !6793

if.end173:                                        ; preds = %if.then137, %cond.end154
  %t.0 = phi %struct.rtx_def* [ %call158, %cond.end154 ], [ %dest.0.lcssa, %if.then137 ], !dbg !6779
  call void @llvm.dbg.value(metadata %struct.rtx_def* %t.0, metadata !6669, metadata !DIExpression()), !dbg !6779
  %call174 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %t.0) #6, !dbg !6794
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call174, metadata !6669, metadata !DIExpression()), !dbg !6779
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !6795
  %bf.load175 = load i8, i8* %readonly, align 4, !dbg !6795
  %bf.clear176 = and i8 %bf.load175, 1, !dbg !6795
  %tobool178 = icmp eq i8 %bf.clear176, 0, !dbg !6796
  br i1 %tobool178, label %land.lhs.true179, label %if.else185, !dbg !6797

land.lhs.true179:                                 ; preds = %if.end173
  %pending_read_list_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 4, !dbg !6798
  %37 = load i32, i32* %pending_read_list_length, align 8, !dbg !6798
  %pending_write_list_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 5, !dbg !6799
  %38 = load i32, i32* %pending_write_list_length, align 4, !dbg !6799
  %add180 = add nsw i32 %37, %38, !dbg !6800
  %39 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !6801
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %39, i64 14, i32 1, !dbg !6801
  %40 = load i32, i32* %value, align 8, !dbg !6801
  %cmp182 = icmp sgt i32 %add180, %40, !dbg !6802
  br i1 %cmp182, label %if.then184, label %if.else185, !dbg !6803

if.then184:                                       ; preds = %land.lhs.true179
  tail call fastcc void @flush_pending_lists(%struct.deps* %deps, %struct.rtx_def* %insn, i32 0, i32 1) #7, !dbg !6804
  br label %if.end263, !dbg !6806

if.else185:                                       ; preds = %if.end173, %land.lhs.true179
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 0, !dbg !6807
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 1, !dbg !6808
  br label %while.cond186, !dbg !6809

while.cond186:                                    ; preds = %if.end211, %if.else185
  %pending.0.in = phi %struct.rtx_def** [ %pending_read_insns, %if.else185 ], [ %rt_rtx215, %if.end211 ]
  %pending_mem.0.in = phi %struct.rtx_def** [ %pending_read_mems, %if.else185 ], [ %rt_rtx219, %if.end211 ]
  %pending_mem.0 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem.0.in, align 8, !dbg !6810
  %pending.0 = load %struct.rtx_def*, %struct.rtx_def** %pending.0.in, align 8, !dbg !6810
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending_mem.0, metadata !6678, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending.0, metadata !6675, metadata !DIExpression()), !dbg !6810
  %tobool187 = icmp eq %struct.rtx_def* %pending.0, null, !dbg !6809
  br i1 %tobool187, label %while.end220, label %while.body188, !dbg !6809

while.body188:                                    ; preds = %while.cond186
  %arrayidx191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending_mem.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6811
  %rt_rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**, !dbg !6811
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx192, align 8, !dbg !6811
  %call193 = tail call i32 @anti_dependence(%struct.rtx_def* %41, %struct.rtx_def* %call174) #6, !dbg !6814
  %tobool194 = icmp eq i32 %call193, 0, !dbg !6814
  br i1 %tobool194, label %if.end211, label %land.lhs.true195, !dbg !6815

land.lhs.true195:                                 ; preds = %while.body188
  %arrayidx198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6816
  %rt_rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**, !dbg !6816
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx199, align 8, !dbg !6816
  %call200 = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn, %struct.rtx_def* %42) #7, !dbg !6817
  %tobool201 = icmp eq i8 %call200, 0, !dbg !6817
  br i1 %tobool201, label %if.then202, label %if.end211, !dbg !6818

if.then202:                                       ; preds = %land.lhs.true195
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx192, align 8, !dbg !6819
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx199, align 8, !dbg !6820
  tail call fastcc void @note_mem_dep(%struct.rtx_def* %call174, %struct.rtx_def* %43, %struct.rtx_def* %44, i32 67108864) #7, !dbg !6821
  br label %if.end211, !dbg !6821

if.end211:                                        ; preds = %land.lhs.true195, %while.body188, %if.then202
  %45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6822
  %rt_rtx215 = bitcast %union.rtunion_def* %45 to %struct.rtx_def**, !dbg !6822
  %46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending_mem.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6823
  %rt_rtx219 = bitcast %union.rtunion_def* %46 to %struct.rtx_def**, !dbg !6823
  br label %while.cond186, !dbg !6809, !llvm.loop !6824

while.end220:                                     ; preds = %while.cond186
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 2, !dbg !6826
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 3, !dbg !6827
  br label %while.cond221, !dbg !6828

while.cond221:                                    ; preds = %if.end246, %while.end220
  %pending.1.in = phi %struct.rtx_def** [ %pending_write_insns, %while.end220 ], [ %rt_rtx250, %if.end246 ]
  %pending_mem.1.in = phi %struct.rtx_def** [ %pending_write_mems, %while.end220 ], [ %rt_rtx254, %if.end246 ]
  %pending_mem.1 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem.1.in, align 8, !dbg !6810
  %pending.1 = load %struct.rtx_def*, %struct.rtx_def** %pending.1.in, align 8, !dbg !6810
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending_mem.1, metadata !6678, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending.1, metadata !6675, metadata !DIExpression()), !dbg !6810
  %tobool222 = icmp eq %struct.rtx_def* %pending.1, null, !dbg !6828
  br i1 %tobool222, label %while.end255, label %while.body223, !dbg !6828

while.body223:                                    ; preds = %while.cond221
  %arrayidx226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending_mem.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6829
  %rt_rtx227 = bitcast %union.rtunion_def* %arrayidx226 to %struct.rtx_def**, !dbg !6829
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx227, align 8, !dbg !6829
  %call228 = tail call i32 @output_dependence(%struct.rtx_def* %47, %struct.rtx_def* %call174) #6, !dbg !6832
  %tobool229 = icmp eq i32 %call228, 0, !dbg !6832
  br i1 %tobool229, label %if.end246, label %land.lhs.true230, !dbg !6833

land.lhs.true230:                                 ; preds = %while.body223
  %arrayidx233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6834
  %rt_rtx234 = bitcast %union.rtunion_def* %arrayidx233 to %struct.rtx_def**, !dbg !6834
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx234, align 8, !dbg !6834
  %call235 = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn, %struct.rtx_def* %48) #7, !dbg !6835
  %tobool236 = icmp eq i8 %call235, 0, !dbg !6835
  br i1 %tobool236, label %if.then237, label %if.end246, !dbg !6836

if.then237:                                       ; preds = %land.lhs.true230
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx227, align 8, !dbg !6837
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx234, align 8, !dbg !6838
  tail call fastcc void @note_mem_dep(%struct.rtx_def* %call174, %struct.rtx_def* %49, %struct.rtx_def* %50, i32 33554432) #7, !dbg !6839
  br label %if.end246, !dbg !6839

if.end246:                                        ; preds = %land.lhs.true230, %while.body223, %if.then237
  %51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6840
  %rt_rtx250 = bitcast %union.rtunion_def* %51 to %struct.rtx_def**, !dbg !6840
  %52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pending_mem.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6841
  %rt_rtx254 = bitcast %union.rtunion_def* %52 to %struct.rtx_def**, !dbg !6841
  br label %while.cond221, !dbg !6828, !llvm.loop !6842

while.end255:                                     ; preds = %while.cond221
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 7, !dbg !6844
  %53 = load %struct.rtx_def*, %struct.rtx_def** %last_pending_memory_flush, align 8, !dbg !6844
  tail call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %53, i32 1, i32 12) #7, !dbg !6845
  %bf.load257 = load i8, i8* %readonly, align 4, !dbg !6846
  %bf.clear258 = and i8 %bf.load257, 1, !dbg !6846
  %tobool260 = icmp eq i8 %bf.clear258, 0, !dbg !6848
  br i1 %tobool260, label %if.then261, label %if.end263, !dbg !6849

if.then261:                                       ; preds = %while.end255
  tail call fastcc void @add_insn_mem_dependence(%struct.deps* %deps, i8 zeroext 0, %struct.rtx_def* %insn, %struct.rtx_def* %dest.0.lcssa) #7, !dbg !6850
  br label %if.end263, !dbg !6850

if.end263:                                        ; preds = %while.end255, %if.then261, %if.then184
  %arrayidx266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6851
  %rt_rtx267 = bitcast %union.rtunion_def* %arrayidx266 to %struct.rtx_def**, !dbg !6851
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx267, align 8, !dbg !6851
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %54, %struct.rtx_def* %insn) #7, !dbg !6852
  br label %if.end269, !dbg !6853

if.end269.loopexit:                               ; preds = %while.cond126
  br label %if.end269, !dbg !6854

if.end269:                                        ; preds = %if.end269.loopexit, %if.else, %if.end263, %if.then109
  br i1 %tobool1, label %if.end277, label %land.lhs.true272, !dbg !6856

land.lhs.true272:                                 ; preds = %if.end269
  %55 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6857
  %finish_lhs273 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %55, i64 0, i32 4, !dbg !6858
  %56 = load void ()*, void ()** %finish_lhs273, align 8, !dbg !6858
  %tobool274 = icmp eq void ()* %56, null, !dbg !6857
  br i1 %tobool274, label %if.end277, label %if.then275, !dbg !6859

if.then275:                                       ; preds = %land.lhs.true272
  tail call void %56() #6, !dbg !6860
  br label %if.end277, !dbg !6860

if.end277:                                        ; preds = %land.lhs.true272, %if.end269, %if.then275
  %bf.load278 = load i32, i32* %1, align 8, !dbg !6861
  %bf.clear279 = and i32 %bf.load278, 65535, !dbg !6861
  %cmp280 = icmp eq i32 %bf.clear279, 23, !dbg !6863
  br i1 %cmp280, label %if.then282, label %cleanup.cont, !dbg !6864

if.then282:                                       ; preds = %if.end277
  store i8 %2, i8* @can_start_lhs_rhs_p, align 1, !dbg !6865
  %57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6867
  %rt_rtx286 = bitcast %union.rtunion_def* %57 to %struct.rtx_def**, !dbg !6867
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx286, align 8, !dbg !6867
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %58, %struct.rtx_def* %insn) #7, !dbg !6868
  store i8 0, i8* @can_start_lhs_rhs_p, align 1, !dbg !6869
  br label %cleanup.cont, !dbg !6870

cleanup.cont:                                     ; preds = %cond.true, %if.then49, %if.end46, %if.then282, %if.end277
  ret void, !dbg !6871
}

declare dso_local %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @can_throw_internal(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @control_flow_insn_p(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_insn_reg_uses(%struct.deps* %deps, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !6872 {
entry:
  %i = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !6874, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6875, metadata !DIExpression()), !dbg !6883
  %0 = bitcast i32* %i to i8*, !dbg !6884
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6884
  %1 = bitcast %struct.bitmap_iterator* %rsi to i8*, !dbg !6885
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6885
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !6886
  call void @llvm.dbg.value(metadata i32* %i, metadata !6876, metadata !DIExpression(DW_OP_deref)), !dbg !6883
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !6877, metadata !DIExpression(DW_OP_deref)), !dbg !6883
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* %2, i32 0, i32* nonnull %i) #7, !dbg !6886
  %reg_last13 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 14, !dbg !6888
  br label %for.cond, !dbg !6886

for.cond:                                         ; preds = %for.inc26, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !6876, metadata !DIExpression(DW_OP_deref)), !dbg !6883
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !6877, metadata !DIExpression(DW_OP_deref)), !dbg !6883
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !6891
  %tobool = icmp eq i8 %call, 0, !dbg !6886
  br i1 %tobool, label %for.end27, label %for.body, !dbg !6886

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !6892
  call void @llvm.dbg.value(metadata i32 %3, metadata !6876, metadata !DIExpression()), !dbg !6883
  %cmp = icmp ult i32 %3, 53, !dbg !6894
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6895

land.lhs.true:                                    ; preds = %for.body
  %4 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !6896
  call void @llvm.dbg.value(metadata i32 %3, metadata !6876, metadata !DIExpression()), !dbg !6883
  %sh_prom = zext i32 %3 to i64, !dbg !6896
  %shl = shl i64 1, %sh_prom, !dbg !6896
  %and = and i64 %4, %shl, !dbg !6896
  %tobool1 = icmp eq i64 %and, 0, !dbg !6896
  br i1 %tobool1, label %if.end, label %for.inc26, !dbg !6897

if.end:                                           ; preds = %land.lhs.true, %for.body
  call void @llvm.dbg.value(metadata i32 %3, metadata !6876, metadata !DIExpression()), !dbg !6883
  %call2 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %3) #6, !dbg !6898
  %cmp3 = icmp eq %struct.rtx_def* %call2, null, !dbg !6900
  br i1 %cmp3, label %land.lhs.true4, label %if.end11, !dbg !6901

land.lhs.true4:                                   ; preds = %if.end
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !6902
  %6 = load i32, i32* %i, align 4, !dbg !6902
  call void @llvm.dbg.value(metadata i32 %6, metadata !6876, metadata !DIExpression()), !dbg !6883
  %call5 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %5, i32 %6) #6, !dbg !6902
  %tobool6 = icmp eq i32 %call5, 0, !dbg !6902
  br i1 %tobool6, label %land.lhs.true7, label %if.end11, !dbg !6903

land.lhs.true7:                                   ; preds = %land.lhs.true4
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !6904
  %8 = load i32, i32* %i, align 4, !dbg !6904
  call void @llvm.dbg.value(metadata i32 %8, metadata !6876, metadata !DIExpression()), !dbg !6883
  %call8 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %7, i32 %8) #6, !dbg !6904
  %tobool9 = icmp eq i32 %call8, 0, !dbg !6904
  br i1 %tobool9, label %for.inc26, label %if.end11, !dbg !6905

if.end11:                                         ; preds = %land.lhs.true7, %land.lhs.true4, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !6906
  call void @llvm.dbg.value(metadata i32 %9, metadata !6876, metadata !DIExpression()), !dbg !6883
  %call12 = call fastcc %struct.reg_use_data* @create_insn_reg_use(i32 %9, %struct.rtx_def* %insn) #7, !dbg !6907
  call void @llvm.dbg.value(metadata %struct.reg_use_data* %call12, metadata !6879, metadata !DIExpression()), !dbg !6883
  %next_regno_use = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %call12, i64 0, i32 2, !dbg !6908
  store %struct.reg_use_data* %call12, %struct.reg_use_data** %next_regno_use, align 8, !dbg !6909
  %10 = load %struct.deps_reg*, %struct.deps_reg** %reg_last13, align 8, !dbg !6910
  %11 = load i32, i32* %i, align 4, !dbg !6911
  call void @llvm.dbg.value(metadata i32 %11, metadata !6876, metadata !DIExpression()), !dbg !6883
  %idxprom = zext i32 %11 to i64, !dbg !6912
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !6882, metadata !DIExpression()), !dbg !6883
  %uses = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %10, i64 %idxprom, i32 0, !dbg !6913
  %12 = bitcast %struct.reg_use_data** %next_regno_use to i64*, !dbg !6915
  br label %for.cond14, !dbg !6918

for.cond14:                                       ; preds = %for.body16, %if.end11
  %list.0.in = phi %struct.rtx_def** [ %uses, %if.end11 ], [ %rt_rtx25, %for.body16 ]
  %list.0 = load %struct.rtx_def*, %struct.rtx_def** %list.0.in, align 8, !dbg !6919
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list.0, metadata !6878, metadata !DIExpression()), !dbg !6883
  %tobool15 = icmp eq %struct.rtx_def* %list.0, null, !dbg !6920
  br i1 %tobool15, label %for.inc26.loopexit, label %for.body16, !dbg !6920

for.body16:                                       ; preds = %for.cond14
  %13 = load i32, i32* %i, align 4, !dbg !6921
  call void @llvm.dbg.value(metadata i32 %13, metadata !6876, metadata !DIExpression()), !dbg !6883
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6922
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !6922
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6922
  %call18 = call fastcc %struct.reg_use_data* @create_insn_reg_use(i32 %13, %struct.rtx_def* %14) #7, !dbg !6923
  call void @llvm.dbg.value(metadata %struct.reg_use_data* %call18, metadata !6880, metadata !DIExpression()), !dbg !6883
  %15 = load i64, i64* %12, align 8, !dbg !6924
  store %struct.reg_use_data* %call18, %struct.reg_use_data** %next_regno_use, align 8, !dbg !6925
  %next_regno_use21 = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %call18, i64 0, i32 2, !dbg !6926
  %16 = bitcast %struct.reg_use_data** %next_regno_use21 to i64*, !dbg !6927
  store i64 %15, i64* %16, align 8, !dbg !6927
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6928
  %rt_rtx25 = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !6928
  br label %for.cond14, !dbg !6929, !llvm.loop !6930

for.inc26.loopexit:                               ; preds = %for.cond14
  br label %for.inc26, !dbg !6891

for.inc26:                                        ; preds = %for.inc26.loopexit, %land.lhs.true, %land.lhs.true7
  call void @llvm.dbg.value(metadata i32* %i, metadata !6876, metadata !DIExpression(DW_OP_deref)), !dbg !6883
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !6877, metadata !DIExpression(DW_OP_deref)), !dbg !6883
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #7, !dbg !6891
  br label %for.cond, !dbg !6891, !llvm.loop !6932

for.end27:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6934
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6934
  ret void, !dbg !6934
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_insn_reg_pressure_info(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !1991 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !1993, metadata !DIExpression()), !dbg !6935
  %0 = load i8, i8* @sched_pressure_p, align 1, !dbg !6936
  %tobool = icmp eq i8 %0, 0, !dbg !6936
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6936

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2005, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6936
  br label %cond.end, !dbg !6936

cond.end:                                         ; preds = %entry, %cond.true
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6937
  %bf.load = load i32, i32* %1, align 8, !dbg !6937
  %bf.clear = and i32 %bf.load, 65535, !dbg !6937
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !6937
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !6937

lor.lhs.false:                                    ; preds = %cond.end
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !6937
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !6937

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !6937
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !6937

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !6937
  br i1 %cmp11, label %if.end, label %cleanup.cont, !dbg !6939

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %cond.end
  call void @llvm.dbg.value(metadata i32 0, metadata !1994, metadata !DIExpression()), !dbg !6935
  %2 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !6940
  %3 = sext i32 %2 to i64, !dbg !6943
  br label %for.cond, !dbg !6943

for.cond:                                         ; preds = %for.body, %if.end
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body ], [ 0, %if.end ], !dbg !6944
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !1994, metadata !DIExpression()), !dbg !6935
  %cmp12 = icmp slt i64 %indvars.iv1, %3, !dbg !6945
  br i1 %cmp12, label %for.body, label %for.end, !dbg !6946

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv1, !dbg !6947
  %4 = load i32, i32* %arrayidx, align 4, !dbg !6947
  call void @llvm.dbg.value(metadata i32 %4, metadata !1996, metadata !DIExpression()), !dbg !6935
  %idxprom13 = zext i32 %4 to i64, !dbg !6949
  %5 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom13, i32 0, !dbg !6950
  store i32 0, i32* %5, align 4, !dbg !6951
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !6952
  call void @llvm.dbg.value(metadata i32 undef, metadata !1994, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6935
  br label %for.cond, !dbg !6953, !llvm.loop !6954

for.end:                                          ; preds = %for.cond
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6956
  %6 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6956
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !6956
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6956
  %8 = bitcast %struct.rtx_def* %insn to i8*, !dbg !6957
  tail call void @note_stores(%struct.rtx_def* %7, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @mark_insn_reg_clobber, i8* %8) #6, !dbg !6958
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6959
  tail call void @note_stores(%struct.rtx_def* %9, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @mark_insn_reg_store, i8* %8) #6, !dbg !6960
  %10 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !6961
  br label %for.cond38, !dbg !6963

for.cond38:                                       ; preds = %for.inc50, %for.end
  %link.0.in.in = phi %union.rtunion_def* [ %10, %for.end ], [ %13, %for.inc50 ]
  %link.0.in = bitcast %union.rtunion_def* %link.0.in.in to %struct.rtx_def**, !dbg !6964
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !6964
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !1997, metadata !DIExpression()), !dbg !6935
  %tobool39 = icmp eq %struct.rtx_def* %link.0, null, !dbg !6965
  br i1 %tobool39, label %for.end55, label %for.body40, !dbg !6965

for.body40:                                       ; preds = %for.cond38
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 0, !dbg !6966
  %bf.load41 = load i32, i32* %11, align 8, !dbg !6966
  %bf.clear42 = and i32 %bf.load41, 16711680, !dbg !6966
  %cmp43 = icmp eq i32 %bf.clear42, 65536, !dbg !6969
  br i1 %cmp43, label %if.then44, label %for.inc50, !dbg !6970

if.then44:                                        ; preds = %for.body40
  %arrayidx47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6971
  %rt_rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**, !dbg !6971
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx48, align 8, !dbg !6971
  tail call fastcc void @mark_reg_death(%struct.rtx_def* %12) #7, !dbg !6972
  br label %for.inc50, !dbg !6972

for.inc50:                                        ; preds = %for.body40, %if.then44
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6973
  br label %for.cond38, !dbg !6974, !llvm.loop !6975

for.end55:                                        ; preds = %for.cond38
  %14 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !6977
  %mul = shl i32 %14, 2, !dbg !6978
  call void @llvm.dbg.value(metadata i32 %mul, metadata !1995, metadata !DIExpression()), !dbg !6935
  %conv57 = sext i32 %mul to i64, !dbg !6979
  %call = tail call i8* @xmalloc(i64 %conv57) #6, !dbg !6980
  %15 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6981
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %15, i64 0, i32 0, !dbg !6981
  %arrayidx65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6981
  %rt_int = bitcast %union.rtunion_def* %arrayidx65 to i32*, !dbg !6981
  %16 = load i32, i32* %rt_int, align 8, !dbg !6981
  %call66 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %16) #7, !dbg !6981
  %reg_pressure = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call66, i64 0, i32 13, !dbg !6981
  %17 = bitcast %struct.reg_pressure_data** %reg_pressure to i8**, !dbg !6982
  store i8* %call, i8** %17, align 8, !dbg !6982
  store i8* %call, i8** bitcast (%struct.reg_pressure_data** @setup_insn_reg_pressure_info.pressure_info to i8**), align 8, !dbg !6983
  %18 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !6984
  %conv67 = sext i32 %18 to i64, !dbg !6984
  %mul68 = shl nsw i64 %conv67, 2, !dbg !6985
  %call69 = tail call i8* @xcalloc(i64 %mul68, i64 1) #6, !dbg !6986
  %19 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6987
  %base72 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %19, i64 0, i32 0, !dbg !6987
  %20 = load i32, i32* %rt_int, align 8, !dbg !6987
  %call80 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base72, i32 %20) #7, !dbg !6987
  %max_reg_pressure = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call80, i64 0, i32 14, !dbg !6987
  %21 = bitcast i32** %max_reg_pressure to i8**, !dbg !6988
  store i8* %call69, i8** %21, align 8, !dbg !6988
  call void @llvm.dbg.value(metadata i32 0, metadata !1994, metadata !DIExpression()), !dbg !6935
  br label %for.cond81, !dbg !6989

for.cond81:                                       ; preds = %for.body84, %for.end55
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body84 ], [ 0, %for.end55 ], !dbg !6991
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1994, metadata !DIExpression()), !dbg !6935
  %22 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !6992
  %23 = sext i32 %22 to i64, !dbg !6994
  %cmp82 = icmp slt i64 %indvars.iv, %23, !dbg !6994
  br i1 %cmp82, label %for.body84, label %cleanup.cont.loopexit, !dbg !6995

for.body84:                                       ; preds = %for.cond81
  %arrayidx86 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !6996
  %24 = load i32, i32* %arrayidx86, align 4, !dbg !6996
  call void @llvm.dbg.value(metadata i32 %24, metadata !1996, metadata !DIExpression()), !dbg !6935
  %idxprom87 = zext i32 %24 to i64, !dbg !6998
  %25 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom87, i32 0, !dbg !6999
  %bf.load89 = load i32, i32* %25, align 4, !dbg !6999
  %bf.clear90 = and i32 %bf.load89, 255, !dbg !6999
  %26 = load %struct.reg_pressure_data*, %struct.reg_pressure_data** @setup_insn_reg_pressure_info.pressure_info, align 8, !dbg !7000
  %27 = getelementptr inbounds %struct.reg_pressure_data, %struct.reg_pressure_data* %26, i64 %indvars.iv, i32 0, !dbg !7001
  %bf.load93 = load i32, i32* %27, align 4, !dbg !7002
  %bf.clear94 = and i32 %bf.load93, -256, !dbg !7002
  %bf.set = or i32 %bf.clear94, %bf.clear90, !dbg !7002
  store i32 %bf.set, i32* %27, align 4, !dbg !7002
  %bf.load97 = load i32, i32* %25, align 4, !dbg !7003
  %bf.clear99 = and i32 %bf.load97, 65280, !dbg !7003
  %28 = load %struct.reg_pressure_data*, %struct.reg_pressure_data** @setup_insn_reg_pressure_info.pressure_info, align 8, !dbg !7004
  %29 = getelementptr inbounds %struct.reg_pressure_data, %struct.reg_pressure_data* %28, i64 %indvars.iv, i32 0, !dbg !7005
  %bf.load102 = load i32, i32* %29, align 4, !dbg !7006
  %bf.clear104 = and i32 %bf.load102, -65281, !dbg !7006
  %bf.set105 = or i32 %bf.clear104, %bf.clear99, !dbg !7006
  store i32 %bf.set105, i32* %29, align 4, !dbg !7006
  %bf.load108 = load i32, i32* %25, align 4, !dbg !7007
  %bf.clear110 = and i32 %bf.load108, 16711680, !dbg !7007
  %30 = load %struct.reg_pressure_data*, %struct.reg_pressure_data** @setup_insn_reg_pressure_info.pressure_info, align 8, !dbg !7008
  %31 = getelementptr inbounds %struct.reg_pressure_data, %struct.reg_pressure_data* %30, i64 %indvars.iv, i32 0, !dbg !7009
  %bf.load113 = load i32, i32* %31, align 4, !dbg !7010
  %bf.clear116 = and i32 %bf.load113, -16711681, !dbg !7010
  %bf.set117 = or i32 %bf.clear116, %bf.clear110, !dbg !7010
  store i32 %bf.set117, i32* %31, align 4, !dbg !7010
  %bf.load120 = load i32, i32* %25, align 4, !dbg !7011
  %32 = load %struct.reg_pressure_data*, %struct.reg_pressure_data** @setup_insn_reg_pressure_info.pressure_info, align 8, !dbg !7012
  %33 = getelementptr inbounds %struct.reg_pressure_data, %struct.reg_pressure_data* %32, i64 %indvars.iv, i32 0, !dbg !7013
  %bf.load123 = load i32, i32* %33, align 4, !dbg !7014
  %bf.shl125 = and i32 %bf.load120, -16777216, !dbg !7014
  %bf.clear126 = and i32 %bf.load123, 16777215, !dbg !7014
  %bf.set127 = or i32 %bf.clear126, %bf.shl125, !dbg !7014
  store i32 %bf.set127, i32* %33, align 4, !dbg !7014
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7015
  call void @llvm.dbg.value(metadata i32 undef, metadata !1994, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6935
  br label %for.cond81, !dbg !7016, !llvm.loop !7017

cleanup.cont.loopexit:                            ; preds = %for.cond81
  br label %cleanup.cont, !dbg !7019

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %lor.lhs.false8
  ret void, !dbg !7019
}

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local void @sel_mark_hard_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @sched_analyze_reg(%struct.deps* %deps, i32 %regno, i32 %mode, i32 %ref, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !7020 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !7024, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7025, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7026, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata i32 %ref, metadata !7027, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7028, metadata !DIExpression()), !dbg !7039
  %0 = load i32, i32* @reload_completed, align 4, !dbg !7040
  %tobool = icmp eq i32 %0, 0, !dbg !7040
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7042

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !7043
  %tobool1 = icmp eq i8 %call, 0, !dbg !7043
  br i1 %tobool1, label %if.end, label %land.lhs.true2, !dbg !7044

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = tail call i32 @max_reg_num() #6, !dbg !7045
  %sub = add nsw i32 %call3, -1, !dbg !7046
  %cmp = icmp sgt i32 %sub, %regno, !dbg !7047
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !7048

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %max_reg = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 13, !dbg !7049
  %1 = load i32, i32* %max_reg, align 8, !dbg !7049
  %cmp5 = icmp sgt i32 %1, %regno, !dbg !7050
  br i1 %cmp5, label %if.end, label %if.then, !dbg !7051

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true2
  tail call fastcc void @extend_deps_reg_info(%struct.deps* %deps, i32 %regno) #7, !dbg !7052
  br label %if.end, !dbg !7052

if.end:                                           ; preds = %lor.lhs.false, %land.lhs.true, %entry, %if.then
  tail call void @maybe_extend_reg_info_p() #7, !dbg !7053
  %cmp7 = icmp slt i32 %regno, 53, !dbg !7054
  br i1 %cmp7, label %if.then9, label %if.else38, !dbg !7055

if.then9:                                         ; preds = %if.end
  %idxprom = sext i32 %regno to i64, !dbg !7056
  %idxprom10 = zext i32 %mode to i64, !dbg !7056
  %arrayidx11 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom10, !dbg !7056
  %2 = load i8, i8* %arrayidx11, align 1, !dbg !7056
  %conv12 = zext i8 %2 to i32, !dbg !7056
  call void @llvm.dbg.value(metadata i32 %conv12, metadata !7029, metadata !DIExpression()), !dbg !7057
  switch i32 %ref, label %while.cond29.preheader [
    i32 23, label %while.cond.preheader
    i32 24, label %while.cond21.preheader
  ], !dbg !7058

while.cond21.preheader:                           ; preds = %if.then9
  br label %while.cond21, !dbg !7059

while.cond.preheader:                             ; preds = %if.then9
  br label %while.cond, !dbg !7063

while.cond29.preheader:                           ; preds = %if.then9
  br label %while.cond29, !dbg !7065

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %i.0 = phi i32 [ %dec, %while.body ], [ %conv12, %while.cond.preheader ], !dbg !7057
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7029, metadata !DIExpression()), !dbg !7057
  %dec = add nsw i32 %i.0, -1, !dbg !7067
  call void @llvm.dbg.value(metadata i32 %dec, metadata !7029, metadata !DIExpression()), !dbg !7057
  %cmp16 = icmp sgt i32 %i.0, 0, !dbg !7068
  br i1 %cmp16, label %while.body, label %if.end101.loopexit1, !dbg !7063

while.body:                                       ; preds = %while.cond
  %add = add nsw i32 %dec, %regno, !dbg !7069
  tail call fastcc void @note_reg_set(i32 %add) #7, !dbg !7070
  br label %while.cond, !dbg !7063, !llvm.loop !7071

while.cond21:                                     ; preds = %while.cond21.preheader, %while.body25
  %i.1 = phi i32 [ %dec22, %while.body25 ], [ %conv12, %while.cond21.preheader ], !dbg !7057
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !7029, metadata !DIExpression()), !dbg !7057
  %dec22 = add nsw i32 %i.1, -1, !dbg !7073
  call void @llvm.dbg.value(metadata i32 %dec22, metadata !7029, metadata !DIExpression()), !dbg !7057
  %cmp23 = icmp sgt i32 %i.1, 0, !dbg !7074
  br i1 %cmp23, label %while.body25, label %if.end101.loopexit2, !dbg !7059

while.body25:                                     ; preds = %while.cond21
  %add26 = add nsw i32 %dec22, %regno, !dbg !7075
  tail call fastcc void @note_reg_use(i32 %add26) #7, !dbg !7076
  br label %while.cond21, !dbg !7059, !llvm.loop !7077

while.cond29:                                     ; preds = %while.cond29.preheader, %while.body33
  %i.2 = phi i32 [ %dec30, %while.body33 ], [ %conv12, %while.cond29.preheader ], !dbg !7057
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !7029, metadata !DIExpression()), !dbg !7057
  %dec30 = add nsw i32 %i.2, -1, !dbg !7079
  call void @llvm.dbg.value(metadata i32 %dec30, metadata !7029, metadata !DIExpression()), !dbg !7057
  %cmp31 = icmp sgt i32 %i.2, 0, !dbg !7080
  br i1 %cmp31, label %while.body33, label %if.end101.loopexit, !dbg !7065

while.body33:                                     ; preds = %while.cond29
  %add34 = add nsw i32 %dec30, %regno, !dbg !7081
  tail call fastcc void @note_reg_clobber(i32 %add34) #7, !dbg !7082
  br label %while.cond29, !dbg !7065, !llvm.loop !7083

if.else38:                                        ; preds = %if.end
  %max_reg39 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 13, !dbg !7085
  %3 = load i32, i32* %max_reg39, align 8, !dbg !7085
  %cmp40 = icmp sgt i32 %3, %regno, !dbg !7086
  br i1 %cmp40, label %if.else49, label %if.then42, !dbg !7087

if.then42:                                        ; preds = %if.else38
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7088
  %4 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !7088
  %5 = bitcast %union.rtunion_def* %4 to i32**, !dbg !7088
  %6 = load i32*, i32** %5, align 8, !dbg !7088
  %bf.load = load i32, i32* %6, align 8, !dbg !7088
  %bf.clear = and i32 %bf.load, 65534, !dbg !7088
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7032, metadata !DIExpression()), !dbg !7089
  %switch = icmp eq i32 %bf.clear, 24, !dbg !7090
  br i1 %switch, label %if.end101, label %cond.true, !dbg !7090

cond.true:                                        ; preds = %if.then42
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2148, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7090
  br label %if.end101, !dbg !7090

if.else49:                                        ; preds = %if.else38
  switch i32 %ref, label %if.else57 [
    i32 23, label %if.then52
    i32 24, label %if.then56
  ], !dbg !7091

if.then52:                                        ; preds = %if.else49
  tail call fastcc void @note_reg_set(i32 %regno) #7, !dbg !7092
  br label %if.end59, !dbg !7092

if.then56:                                        ; preds = %if.else49
  tail call fastcc void @note_reg_use(i32 %regno) #7, !dbg !7094
  br label %if.end59, !dbg !7094

if.else57:                                        ; preds = %if.else49
  tail call fastcc void @note_reg_clobber(i32 %regno) #7, !dbg !7096
  br label %if.end59

if.end59:                                         ; preds = %if.then56, %if.else57, %if.then52
  %7 = load i32, i32* @reload_completed, align 4, !dbg !7097
  %tobool60 = icmp eq i32 %7, 0, !dbg !7097
  br i1 %tobool60, label %land.lhs.true61, label %if.end77, !dbg !7098

land.lhs.true61:                                  ; preds = %if.end59
  %call62 = tail call zeroext i8 @get_reg_known_equiv_p(i32 %regno) #6, !dbg !7099
  %tobool64 = icmp eq i8 %call62, 0, !dbg !7099
  br i1 %tobool64, label %if.end77, label %if.then65, !dbg !7100

if.then65:                                        ; preds = %land.lhs.true61
  %call66 = tail call %struct.rtx_def* @get_reg_known_value(i32 %regno) #6, !dbg !7101
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call66, metadata !7035, metadata !DIExpression()), !dbg !7102
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call66, i64 0, i32 0, !dbg !7103
  %bf.load67 = load i32, i32* %8, align 8, !dbg !7103
  %bf.clear68 = and i32 %bf.load67, 65535, !dbg !7103
  %cmp69 = icmp eq i32 %bf.clear68, 43, !dbg !7103
  br i1 %cmp69, label %if.then71, label %if.end77, !dbg !7105

if.then71:                                        ; preds = %if.then65
  %arrayidx74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call66, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7106
  %rt_rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**, !dbg !7106
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !7106
  tail call fastcc void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %9, %struct.rtx_def* %insn) #7, !dbg !7107
  br label %if.end77, !dbg !7107

if.end77:                                         ; preds = %land.lhs.true61, %if.end59, %if.then65, %if.then71
  %10 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !7108
  %idxprom78 = sext i32 %regno to i64, !dbg !7108
  %calls_crossed = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %10, i64 %idxprom78, i32 3, !dbg !7108
  %11 = load i32, i32* %calls_crossed, align 4, !dbg !7108
  %cmp80 = icmp eq i32 %11, 0, !dbg !7110
  br i1 %cmp80, label %if.then82, label %if.end101, !dbg !7111

if.then82:                                        ; preds = %if.end77
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !7112
  %bf.load83 = load i8, i8* %readonly, align 4, !dbg !7112
  %bf.clear84 = and i8 %bf.load83, 1, !dbg !7112
  %tobool85 = icmp eq i8 %bf.clear84, 0, !dbg !7115
  %cmp87 = icmp eq i32 %ref, 24, !dbg !7116
  %or.cond = and i1 %tobool85, %cmp87, !dbg !7117
  br i1 %or.cond, label %land.lhs.true89, label %if.else97, !dbg !7117

land.lhs.true89:                                  ; preds = %if.then82
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !7118
  %bf.load90 = load i32, i32* %12, align 8, !dbg !7118
  %bf.clear91 = and i32 %bf.load90, 65535, !dbg !7118
  %cmp92 = icmp eq i32 %bf.clear91, 7, !dbg !7118
  br i1 %cmp92, label %if.else97, label %if.then94, !dbg !7119

if.then94:                                        ; preds = %land.lhs.true89
  %sched_before_next_call = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 10, !dbg !7120
  %13 = load %struct.rtx_def*, %struct.rtx_def** %sched_before_next_call, align 8, !dbg !7120
  %call95 = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %13) #6, !dbg !7121
  store %struct.rtx_def* %call95, %struct.rtx_def** %sched_before_next_call, align 8, !dbg !7122
  br label %if.end101, !dbg !7123

if.else97:                                        ; preds = %if.then82, %land.lhs.true89
  %last_function_call = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 8, !dbg !7124
  %14 = load %struct.rtx_def*, %struct.rtx_def** %last_function_call, align 8, !dbg !7124
  tail call fastcc void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %14, i32 1, i32 12) #7, !dbg !7125
  br label %if.end101

if.end101.loopexit:                               ; preds = %while.cond29
  br label %if.end101, !dbg !7126

if.end101.loopexit1:                              ; preds = %while.cond
  br label %if.end101, !dbg !7126

if.end101.loopexit2:                              ; preds = %while.cond21
  br label %if.end101, !dbg !7126

if.end101:                                        ; preds = %if.end101.loopexit2, %if.end101.loopexit1, %if.end101.loopexit, %if.then42, %cond.true, %if.then94, %if.else97, %if.end77
  ret void, !dbg !7126
}

declare dso_local %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.cselib_val_struct* @cselib_lookup_from_insn(%struct.rtx_def*, i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @canon_rtx(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @read_dependence(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @note_mem_dep(%struct.rtx_def* %m1, %struct.rtx_def* %m2, %struct.rtx_def* %e, i32 %ds) unnamed_addr #5 !dbg !7127 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %m1, metadata !7129, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata %struct.rtx_def* %m2, metadata !7130, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata %struct.rtx_def* %e, metadata !7131, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata i32 %ds, metadata !7132, metadata !DIExpression()), !dbg !7133
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7134
  %note_mem_dep = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i64 0, i32 10, !dbg !7136
  %1 = load void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)** %note_mem_dep, align 8, !dbg !7136
  %tobool = icmp eq void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* %1, null, !dbg !7134
  br i1 %tobool, label %if.end, label %if.then, !dbg !7137

if.then:                                          ; preds = %entry
  tail call void %1(%struct.rtx_def* %m1, %struct.rtx_def* %m2, %struct.rtx_def* %e, i32 %ds) #6, !dbg !7138
  br label %if.end, !dbg !7138

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7139
}

declare dso_local i32 @true_dependence(%struct.rtx_def*, i32, %struct.rtx_def*, i8 (%struct.rtx_def*, i8)*) local_unnamed_addr #2

declare dso_local zeroext i8 @rtx_varies_p(%struct.rtx_def*, i8 zeroext) #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @deps_may_trap_p(%struct.rtx_def* %mem) unnamed_addr #5 !dbg !7140 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !7144, metadata !DIExpression()), !dbg !7149
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7150
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7150
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !7145, metadata !DIExpression()), !dbg !7149
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !7151
  %bf.load = load i32, i32* %1, align 8, !dbg !7151
  %bf.clear = and i32 %bf.load, 65535, !dbg !7151
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !7151
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !7152

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %0) #7, !dbg !7153
  %cmp1 = icmp ugt i32 %call, 52, !dbg !7154
  br i1 %cmp1, label %if.then, label %if.end5, !dbg !7155

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %0) #7, !dbg !7156
  %call3 = tail call %struct.rtx_def* @get_reg_known_value(i32 %call2) #6, !dbg !7157
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !7146, metadata !DIExpression()), !dbg !7158
  %tobool = icmp eq %struct.rtx_def* %call3, null, !dbg !7159
  %spec.select = select i1 %tobool, %struct.rtx_def* %0, %struct.rtx_def* %call3, !dbg !7161
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !7145, metadata !DIExpression()), !dbg !7149
  br label %if.end5, !dbg !7162

if.end5:                                          ; preds = %if.then, %land.lhs.true, %entry
  %addr.1 = phi %struct.rtx_def* [ %spec.select, %if.then ], [ %0, %land.lhs.true ], [ %0, %entry ], !dbg !7149
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.1, metadata !7145, metadata !DIExpression()), !dbg !7149
  %call6 = tail call i32 @rtx_addr_can_trap_p(%struct.rtx_def* %addr.1) #6, !dbg !7163
  ret i32 %call6, !dbg !7164
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_insn_mem_dependence(%struct.deps* %deps, i8 zeroext %read_p, %struct.rtx_def* %insn, %struct.rtx_def* %mem) unnamed_addr #5 !dbg !7165 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !7169, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata i8 %read_p, metadata !7170, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7171, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !7172, metadata !DIExpression()), !dbg !7176
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !7177
  %bf.load = load i8, i8* %readonly, align 4, !dbg !7177
  %bf.clear = and i8 %bf.load, 1, !dbg !7177
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !7177
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7177

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1551, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7177
  br label %cond.end, !dbg !7177

cond.end:                                         ; preds = %entry, %cond.true
  %tobool1 = icmp eq i8 %read_p, 0, !dbg !7178
  br i1 %tobool1, label %if.else, label %if.then, !dbg !7180

if.then:                                          ; preds = %cond.end
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 0, !dbg !7181
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pending_read_insns, metadata !7173, metadata !DIExpression()), !dbg !7176
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 1, !dbg !7183
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pending_read_mems, metadata !7174, metadata !DIExpression()), !dbg !7176
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !7184
  %bf.load2 = load i32, i32* %0, align 8, !dbg !7184
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !7184
  %cmp = icmp eq i32 %bf.clear3, 7, !dbg !7184
  br i1 %cmp, label %if.end6, label %if.then4, !dbg !7186

if.then4:                                         ; preds = %if.then
  %pending_read_list_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 4, !dbg !7187
  %1 = load i32, i32* %pending_read_list_length, align 8, !dbg !7188
  %inc = add nsw i32 %1, 1, !dbg !7188
  store i32 %inc, i32* %pending_read_list_length, align 8, !dbg !7188
  br label %if.end6, !dbg !7189

if.else:                                          ; preds = %cond.end
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 2, !dbg !7190
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pending_write_insns, metadata !7173, metadata !DIExpression()), !dbg !7176
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 3, !dbg !7192
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pending_write_mems, metadata !7174, metadata !DIExpression()), !dbg !7176
  %pending_write_list_length = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 5, !dbg !7193
  %2 = load i32, i32* %pending_write_list_length, align 4, !dbg !7194
  %inc5 = add nsw i32 %2, 1, !dbg !7194
  store i32 %inc5, i32* %pending_write_list_length, align 4, !dbg !7194
  br label %if.end6

if.end6:                                          ; preds = %if.then, %if.then4, %if.else
  %insn_list.0 = phi %struct.rtx_def** [ %pending_write_insns, %if.else ], [ %pending_read_insns, %if.then4 ], [ %pending_read_insns, %if.then ], !dbg !7195
  %mem_list.0 = phi %struct.rtx_def** [ %pending_write_mems, %if.else ], [ %pending_read_mems, %if.then4 ], [ %pending_read_mems, %if.then ], !dbg !7195
  call void @llvm.dbg.value(metadata %struct.rtx_def** %mem_list.0, metadata !7174, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn_list.0, metadata !7173, metadata !DIExpression()), !dbg !7176
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn_list.0, align 8, !dbg !7196
  %call = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %3) #6, !dbg !7197
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7175, metadata !DIExpression()), !dbg !7176
  store %struct.rtx_def* %call, %struct.rtx_def** %insn_list.0, align 8, !dbg !7198
  %4 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7199
  %use_cselib = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %4, i64 0, i32 12, !dbg !7201
  %bf.load7 = load i8, i8* %use_cselib, align 8, !dbg !7201
  %bf.clear8 = and i8 %bf.load7, 1, !dbg !7201
  %tobool10 = icmp eq i8 %bf.clear8, 0, !dbg !7199
  br i1 %tobool10, label %if.end18, label %if.then11, !dbg !7202

if.then11:                                        ; preds = %if.end6
  %call12 = tail call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %mem) #6, !dbg !7203
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call12, metadata !7172, metadata !DIExpression()), !dbg !7176
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call12, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7205
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7205
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7205
  %call13 = tail call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %5) #6, !dbg !7206
  store %struct.rtx_def* %call13, %struct.rtx_def** %rt_rtx, align 8, !dbg !7207
  br label %if.end18, !dbg !7208

if.end18:                                         ; preds = %if.end6, %if.then11
  %mem.addr.0 = phi %struct.rtx_def* [ %call12, %if.then11 ], [ %mem, %if.end6 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem.addr.0, metadata !7172, metadata !DIExpression()), !dbg !7176
  %call19 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %mem.addr.0) #6, !dbg !7209
  %6 = load %struct.rtx_def*, %struct.rtx_def** %mem_list.0, align 8, !dbg !7210
  %call20 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call19, %struct.rtx_def* %6) #6, !dbg !7211
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call20, metadata !7175, metadata !DIExpression()), !dbg !7176
  store %struct.rtx_def* %call20, %struct.rtx_def** %mem_list.0, align 8, !dbg !7212
  ret void, !dbg !7213
}

; Function Attrs: nounwind uwtable
define internal fastcc void @extend_deps_reg_info(%struct.deps* %deps, i32 %regno) unnamed_addr #5 !dbg !7214 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %deps, metadata !7218, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7219, metadata !DIExpression()), !dbg !7221
  %add = add nsw i32 %regno, 1, !dbg !7222
  call void @llvm.dbg.value(metadata i32 %add, metadata !7220, metadata !DIExpression()), !dbg !7221
  %0 = load i32, i32* @reload_completed, align 4, !dbg !7223
  %tobool = icmp eq i32 %0, 0, !dbg !7223
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7223

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2065, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7223
  %.pre = load i32, i32* @reload_completed, align 4, !dbg !7224
  %phitmp = icmp eq i32 %.pre, 0, !dbg !7223
  br label %cond.end, !dbg !7223

cond.end:                                         ; preds = %entry, %cond.true
  %1 = phi i1 [ true, %entry ], [ %phitmp, %cond.true ]
  br i1 %1, label %if.end, label %land.lhs.true, !dbg !7226

land.lhs.true:                                    ; preds = %cond.end
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 18, !dbg !7227
  %bf.load = load i8, i8* %readonly, align 4, !dbg !7227
  %bf.clear = and i8 %bf.load, 1, !dbg !7227
  %tobool2 = icmp eq i8 %bf.clear, 0, !dbg !7228
  br i1 %tobool2, label %if.end, label %if.then, !dbg !7229

if.then:                                          ; preds = %land.lhs.true
  %max_reg = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 13, !dbg !7230
  store i32 %add, i32* %max_reg, align 8, !dbg !7232
  br label %cleanup.cont, !dbg !7233

if.end:                                           ; preds = %land.lhs.true, %cond.end
  %max_reg3 = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 13, !dbg !7234
  %2 = load i32, i32* %max_reg3, align 8, !dbg !7234
  %cmp = icmp sgt i32 %2, %regno, !dbg !7236
  br i1 %cmp, label %cleanup.cont, label %if.then4, !dbg !7237

if.then4:                                         ; preds = %if.end
  %reg_last = getelementptr inbounds %struct.deps, %struct.deps* %deps, i64 0, i32 14, !dbg !7238
  %3 = bitcast %struct.deps_reg** %reg_last to i8**, !dbg !7238
  %4 = load i8*, i8** %3, align 8, !dbg !7238
  %conv = sext i32 %add to i64, !dbg !7238
  %mul = mul nsw i64 %conv, 40, !dbg !7238
  %call = tail call i8* @xrealloc(i8* %4, i64 %mul) #6, !dbg !7238
  store i8* %call, i8** %3, align 8, !dbg !7240
  %.cast = bitcast i8* %call to %struct.deps_reg*, !dbg !7241
  %5 = load i32, i32* %max_reg3, align 8, !dbg !7242
  %idxprom = sext i32 %5 to i64, !dbg !7243
  %arrayidx = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %.cast, i64 %idxprom, !dbg !7243
  %6 = bitcast %struct.deps_reg* %arrayidx to i8*, !dbg !7244
  %sub = sub nsw i32 %add, %5, !dbg !7245
  %conv9 = sext i32 %sub to i64, !dbg !7246
  %mul10 = mul nsw i64 %conv9, 40, !dbg !7247
  %call11 = tail call i8* @memset(i8* %6, i32 0, i64 %mul10) #6, !dbg !7248
  store i32 %add, i32* %max_reg3, align 8, !dbg !7249
  br label %cleanup.cont, !dbg !7250

cleanup.cont:                                     ; preds = %if.end, %if.then, %if.then4
  ret void, !dbg !7251
}

; Function Attrs: nounwind uwtable
define internal fastcc void @note_reg_set(i32 %r) unnamed_addr #5 !dbg !7252 {
entry:
  call void @llvm.dbg.value(metadata i32 %r, metadata !7254, metadata !DIExpression()), !dbg !7255
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7256
  %note_reg_set = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i64 0, i32 7, !dbg !7258
  %1 = load void (i32)*, void (i32)** %note_reg_set, align 8, !dbg !7258
  %tobool = icmp eq void (i32)* %1, null, !dbg !7256
  br i1 %tobool, label %if.end, label %if.then, !dbg !7259

if.then:                                          ; preds = %entry
  tail call void %1(i32 %r) #6, !dbg !7260
  br label %if.end, !dbg !7260

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7261
}

; Function Attrs: nounwind uwtable
define internal fastcc void @note_reg_use(i32 %r) unnamed_addr #5 !dbg !7262 {
entry:
  call void @llvm.dbg.value(metadata i32 %r, metadata !7264, metadata !DIExpression()), !dbg !7265
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7266
  %note_reg_use = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i64 0, i32 9, !dbg !7268
  %1 = load void (i32)*, void (i32)** %note_reg_use, align 8, !dbg !7268
  %tobool = icmp eq void (i32)* %1, null, !dbg !7266
  br i1 %tobool, label %if.end, label %if.then, !dbg !7269

if.then:                                          ; preds = %entry
  tail call void %1(i32 %r) #6, !dbg !7270
  br label %if.end, !dbg !7270

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7271
}

; Function Attrs: nounwind uwtable
define internal fastcc void @note_reg_clobber(i32 %r) unnamed_addr #5 !dbg !7272 {
entry:
  call void @llvm.dbg.value(metadata i32 %r, metadata !7274, metadata !DIExpression()), !dbg !7275
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7276
  %note_reg_clobber = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i64 0, i32 8, !dbg !7278
  %1 = load void (i32)*, void (i32)** %note_reg_clobber, align 8, !dbg !7278
  %tobool = icmp eq void (i32)* %1, null, !dbg !7276
  br i1 %tobool, label %if.end, label %if.then, !dbg !7279

if.then:                                          ; preds = %entry
  tail call void %1(i32 %r) #6, !dbg !7280
  br label %if.end, !dbg !7280

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7281
}

declare dso_local zeroext i8 @get_reg_known_equiv_p(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_reg_known_value(i32) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local i32 @rtx_addr_can_trap_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @df_read_modify_subreg_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @anti_dependence(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @output_dependence(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.reg_use_data* @create_insn_reg_use(i32 %regno, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !7282 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7286, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7287, metadata !DIExpression()), !dbg !7289
  %call = tail call i8* @xmalloc(i64 32) #6, !dbg !7290
  %0 = bitcast i8* %call to %struct.reg_use_data*, !dbg !7291
  call void @llvm.dbg.value(metadata %struct.reg_use_data* %0, metadata !7288, metadata !DIExpression()), !dbg !7289
  %regno1 = bitcast i8* %call to i32*, !dbg !7292
  store i32 %regno, i32* %regno1, align 8, !dbg !7293
  %insn2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !7294
  %1 = bitcast i8* %insn2 to %struct.rtx_def**, !dbg !7294
  store %struct.rtx_def* %insn, %struct.rtx_def** %1, align 8, !dbg !7295
  %2 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7296
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %2, i64 0, i32 0, !dbg !7296
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7296
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7296
  %3 = load i32, i32* %rt_int, align 8, !dbg !7296
  %call3 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %3) #7, !dbg !7296
  %reg_use_list = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call3, i64 0, i32 15, !dbg !7296
  %4 = bitcast %struct.reg_use_data** %reg_use_list to i64*, !dbg !7296
  %5 = load i64, i64* %4, align 8, !dbg !7296
  %next_insn_use = getelementptr inbounds i8, i8* %call, i64 24, !dbg !7297
  %6 = bitcast i8* %next_insn_use to i64*, !dbg !7298
  store i64 %5, i64* %6, align 8, !dbg !7298
  %7 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7299
  %base6 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %7, i64 0, i32 0, !dbg !7299
  %8 = load i32, i32* %rt_int, align 8, !dbg !7299
  %call14 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base6, i32 %8) #7, !dbg !7299
  %reg_use_list15 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call14, i64 0, i32 15, !dbg !7299
  %9 = bitcast %struct.reg_use_data** %reg_use_list15 to i8**, !dbg !7300
  store i8* %call, i8** %9, align 8, !dbg !7300
  ret %struct.reg_use_data* %0, !dbg !7301
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @mark_insn_reg_clobber(%struct.rtx_def* %reg, %struct.rtx_def* %setter, i8* %data) #5 !dbg !7302 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !7306, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setter, metadata !7307, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata i8* %data, metadata !7308, metadata !DIExpression()), !dbg !7309
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %setter, i64 0, i32 0, !dbg !7310
  %bf.load = load i32, i32* %0, align 8, !dbg !7310
  %bf.clear = and i32 %bf.load, 65535, !dbg !7310
  %cmp = icmp eq i32 %bf.clear, 25, !dbg !7312
  br i1 %cmp, label %if.then, label %if.end, !dbg !7313

if.then:                                          ; preds = %entry
  %1 = bitcast i8* %data to %struct.rtx_def*, !dbg !7314
  tail call fastcc void @mark_insn_reg_birth(%struct.rtx_def* %1, %struct.rtx_def* %reg, i8 zeroext 1, i8 zeroext 0) #7, !dbg !7315
  br label %if.end, !dbg !7315

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7316
}

; Function Attrs: nounwind uwtable
define internal void @mark_insn_reg_store(%struct.rtx_def* %reg, %struct.rtx_def* %setter, i8* %data) #5 !dbg !7317 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !7319, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setter, metadata !7320, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %data, metadata !7321, metadata !DIExpression()), !dbg !7322
  %cmp = icmp eq %struct.rtx_def* %setter, null, !dbg !7323
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !7325

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %setter, i64 0, i32 0, !dbg !7326
  %bf.load = load i32, i32* %0, align 8, !dbg !7326
  %bf.clear = and i32 %bf.load, 65535, !dbg !7326
  %cmp1 = icmp eq i32 %bf.clear, 23, !dbg !7327
  br i1 %cmp1, label %if.end, label %return, !dbg !7328

if.end:                                           ; preds = %land.lhs.true, %entry
  %1 = bitcast i8* %data to %struct.rtx_def*, !dbg !7329
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1, i32 6, %struct.rtx_def* %reg) #6, !dbg !7330
  %cmp2 = icmp ne %struct.rtx_def* %call, null, !dbg !7331
  %conv3 = zext i1 %cmp2 to i8, !dbg !7330
  tail call fastcc void @mark_insn_reg_birth(%struct.rtx_def* %1, %struct.rtx_def* %reg, i8 zeroext 0, i8 zeroext %conv3) #7, !dbg !7332
  br label %return, !dbg !7333

return:                                           ; preds = %land.lhs.true, %if.end
  ret void, !dbg !7333
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_reg_death(%struct.rtx_def* %reg) unnamed_addr #5 !dbg !7334 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !7336, metadata !DIExpression()), !dbg !7338
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !7339
  %bf.load = load i32, i32* %0, align 8, !dbg !7339
  %bf.clear = and i32 %bf.load, 65535, !dbg !7339
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !7341
  br i1 %cmp, label %if.then, label %if.end, !dbg !7342

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7343
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7343
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7343
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7336, metadata !DIExpression()), !dbg !7338
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !7344
  %bf.load1.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !7346
  br label %if.end, !dbg !7347

if.end:                                           ; preds = %if.then, %entry
  %bf.load1 = phi i32 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ], !dbg !7346
  %reg.addr.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %reg, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.addr.0, metadata !7336, metadata !DIExpression()), !dbg !7338
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg.addr.0, i64 0, i32 0, !dbg !7346
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !7346
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !7346
  br i1 %cmp3, label %if.end5, label %cleanup.cont, !dbg !7348

if.end5:                                          ; preds = %if.end
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg.addr.0) #7, !dbg !7349
  call void @llvm.dbg.value(metadata i32 %call, metadata !7337, metadata !DIExpression()), !dbg !7338
  %cmp6 = icmp slt i32 %call, 53, !dbg !7350
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !7352

if.then7:                                         ; preds = %if.end5
  %idxprom = sext i32 %call to i64, !dbg !7353
  %bf.load9 = load i32, i32* %2, align 8, !dbg !7354
  %bf.lshr = lshr i32 %bf.load9, 16, !dbg !7354
  %bf.clear10 = and i32 %bf.lshr, 255, !dbg !7354
  %idxprom11 = zext i32 %bf.clear10 to i64, !dbg !7353
  %arrayidx12 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom11, !dbg !7353
  %3 = load i8, i8* %arrayidx12, align 1, !dbg !7353
  %conv = zext i8 %3 to i32, !dbg !7353
  tail call fastcc void @mark_hard_regno_death(i32 %call, i32 %conv) #7, !dbg !7355
  br label %cleanup.cont, !dbg !7355

if.else:                                          ; preds = %if.end5
  tail call fastcc void @mark_pseudo_death(i32 %call) #7, !dbg !7356
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end, %if.else, %if.then7
  ret void, !dbg !7357
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_insn_reg_birth(%struct.rtx_def* %insn, %struct.rtx_def* %reg, i8 zeroext %clobber_p, i8 zeroext %unused_p) unnamed_addr #5 !dbg !7358 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7362, metadata !DIExpression()), !dbg !7367
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !7363, metadata !DIExpression()), !dbg !7367
  call void @llvm.dbg.value(metadata i8 %clobber_p, metadata !7364, metadata !DIExpression()), !dbg !7367
  call void @llvm.dbg.value(metadata i8 %unused_p, metadata !7365, metadata !DIExpression()), !dbg !7367
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !7368
  %bf.load = load i32, i32* %0, align 8, !dbg !7368
  %bf.clear = and i32 %bf.load, 65535, !dbg !7368
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !7370
  br i1 %cmp, label %if.then, label %if.end, !dbg !7371

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7372
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7372
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7372
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7363, metadata !DIExpression()), !dbg !7367
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !7373
  %bf.load1.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !7375
  br label %if.end, !dbg !7376

if.end:                                           ; preds = %if.then, %entry
  %bf.load1 = phi i32 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ], !dbg !7375
  %reg.addr.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %reg, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.addr.0, metadata !7363, metadata !DIExpression()), !dbg !7367
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg.addr.0, i64 0, i32 0, !dbg !7375
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !7375
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !7375
  br i1 %cmp3, label %if.end5, label %cleanup.cont, !dbg !7377

if.end5:                                          ; preds = %if.end
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg.addr.0) #7, !dbg !7378
  call void @llvm.dbg.value(metadata i32 %call, metadata !7366, metadata !DIExpression()), !dbg !7367
  %cmp6 = icmp slt i32 %call, 53, !dbg !7379
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !7381

if.then7:                                         ; preds = %if.end5
  %idxprom = sext i32 %call to i64, !dbg !7382
  %bf.load9 = load i32, i32* %2, align 8, !dbg !7383
  %bf.lshr = lshr i32 %bf.load9, 16, !dbg !7383
  %bf.clear10 = and i32 %bf.lshr, 255, !dbg !7383
  %idxprom11 = zext i32 %bf.clear10 to i64, !dbg !7382
  %arrayidx12 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom11, !dbg !7382
  %3 = load i8, i8* %arrayidx12, align 1, !dbg !7382
  %conv = zext i8 %3 to i32, !dbg !7382
  tail call fastcc void @mark_insn_hard_regno_birth(%struct.rtx_def* %insn, i32 %call, i32 %conv, i8 zeroext %clobber_p, i8 zeroext %unused_p) #7, !dbg !7384
  br label %cleanup.cont, !dbg !7384

if.else:                                          ; preds = %if.end5
  tail call fastcc void @mark_insn_pseudo_birth(%struct.rtx_def* %insn, i32 %call, i8 zeroext %clobber_p, i8 zeroext %unused_p) #7, !dbg !7385
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end, %if.else, %if.then7
  ret void, !dbg !7386
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_insn_hard_regno_birth(%struct.rtx_def* %insn, i32 %regno, i32 %nregs, i8 zeroext %clobber_p, i8 zeroext %unused_p) unnamed_addr #5 !dbg !7387 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7391, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7392, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.value(metadata i32 %nregs, metadata !7393, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.value(metadata i8 %clobber_p, metadata !7394, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.value(metadata i8 %unused_p, metadata !7395, metadata !DIExpression()), !dbg !7399
  %add = add nsw i32 %regno, %nregs, !dbg !7400
  call void @llvm.dbg.value(metadata i32 %add, metadata !7398, metadata !DIExpression()), !dbg !7399
  %tobool4 = icmp eq i8 %clobber_p, 0, !dbg !7401
  %tobool13 = icmp eq i8 %unused_p, 0, !dbg !7408
  br i1 %tobool4, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !7410

entry.entry.split_crit_edge:                      ; preds = %entry
  %0 = sext i32 %regno to i64, !dbg !7410
  %1 = sext i32 %add to i64, !dbg !7410
  br label %while.cond, !dbg !7410

entry.split.us:                                   ; preds = %entry
  %2 = sext i32 %regno to i64, !dbg !7410
  %3 = sext i32 %add to i64, !dbg !7410
  br label %while.cond.us, !dbg !7410

while.cond.us:                                    ; preds = %if.end60.us, %entry.split.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end60.us ], [ %2, %entry.split.us ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7392, metadata !DIExpression()), !dbg !7399
  %cmp.us = icmp slt i64 %indvars.iv, %3, !dbg !7411
  br i1 %cmp.us, label %while.body.us, label %while.end.us-lcssa.us, !dbg !7410

while.body.us:                                    ; preds = %while.cond.us
  %cmp1.us = icmp slt i64 %indvars.iv, 53, !dbg !7412
  br i1 %cmp1.us, label %cond.end.us, label %cond.true.us, !dbg !7412

cond.true.us:                                     ; preds = %while.body.us
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1864, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7412
  br label %cond.end.us, !dbg !7412

cond.end.us:                                      ; preds = %cond.true.us, %while.body.us
  %4 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !7413
  %sh_prom.us = and i64 %indvars.iv, 4294967295, !dbg !7413
  %shl.us = shl i64 1, %sh_prom.us, !dbg !7413
  %and.us = and i64 %4, %shl.us, !dbg !7413
  %tobool.us = icmp eq i64 %and.us, 0, !dbg !7413
  br i1 %tobool.us, label %if.then.us, label %if.end60.us, !dbg !7414

if.then.us:                                       ; preds = %cond.end.us
  %5 = load i32*, i32** @sched_regno_cover_class, align 8, !dbg !7415
  %arrayidx.us = getelementptr inbounds i32, i32* %5, i64 %indvars.iv, !dbg !7415
  %6 = load i32, i32* %arrayidx.us, align 4, !dbg !7415
  call void @llvm.dbg.value(metadata i32 %6, metadata !7396, metadata !DIExpression()), !dbg !7399
  %cmp2.us = icmp eq i32 %6, 0, !dbg !7416
  br i1 %cmp2.us, label %if.end60.us, label %if.then3.us, !dbg !7417

if.then3.us:                                      ; preds = %if.then.us
  %idxprom15.us = zext i32 %6 to i64, !dbg !7408
  %7 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom15.us, i32 0, !dbg !7408
  %bf.load17.us = load i32, i32* %7, align 4, !dbg !7408
  br i1 %tobool13, label %if.else26.us, label %if.then14.us, !dbg !7418

if.then14.us:                                     ; preds = %if.then3.us
  %bf.lshr.us = lshr i32 %bf.load17.us, 16, !dbg !7419
  %bf.clear18.us = and i32 %bf.lshr.us, 255, !dbg !7419
  %add19.us = add nuw nsw i32 %bf.clear18.us, 1, !dbg !7421
  call void @llvm.dbg.value(metadata i32 %add19.us, metadata !7397, metadata !DIExpression()), !dbg !7399
  %bf.value23.us = shl nuw nsw i32 %add19.us, 16, !dbg !7422
  %bf.shl.us = and i32 %bf.value23.us, 16711680, !dbg !7422
  %bf.clear24.us = and i32 %bf.load17.us, -16711681, !dbg !7422
  %bf.set25.us = or i32 %bf.clear24.us, %bf.shl.us, !dbg !7422
  store i32 %bf.set25.us, i32* %7, align 4, !dbg !7422
  br label %if.end53.us, !dbg !7423

if.else26.us:                                     ; preds = %if.then3.us
  %bf.lshr30.us = lshr i32 %bf.load17.us, 8, !dbg !7424
  %bf.clear31.us = and i32 %bf.lshr30.us, 255, !dbg !7424
  %add32.us = add nuw nsw i32 %bf.clear31.us, 1, !dbg !7426
  call void @llvm.dbg.value(metadata i32 %add32.us, metadata !7397, metadata !DIExpression()), !dbg !7399
  %bf.value36.us = shl nuw nsw i32 %add32.us, 8, !dbg !7427
  %bf.shl37.us = and i32 %bf.value36.us, 65280, !dbg !7427
  %bf.clear38.us = and i32 %bf.load17.us, -65281, !dbg !7427
  %bf.set39.us = or i32 %bf.clear38.us, %bf.shl37.us, !dbg !7427
  store i32 %bf.set39.us, i32* %7, align 4, !dbg !7427
  %8 = trunc i64 %indvars.iv to i32, !dbg !7428
  %call.us = tail call fastcc zeroext i8 @insn_use_p(%struct.rtx_def* %insn, i32 %8) #7, !dbg !7428
  %tobool40.us = icmp eq i8 %call.us, 0, !dbg !7428
  br i1 %tobool40.us, label %if.then41.us, label %if.end.us, !dbg !7430

if.then41.us:                                     ; preds = %if.else26.us
  %bf.load44.us = load i32, i32* %7, align 4, !dbg !7431
  %9 = add i32 %bf.load44.us, 16777216, !dbg !7431
  store i32 %9, i32* %7, align 4, !dbg !7431
  br label %if.end.us, !dbg !7432

if.end.us:                                        ; preds = %if.then41.us, %if.else26.us
  %10 = trunc i64 %indvars.iv to i32, !dbg !7433
  %call51.us = tail call fastcc %struct.reg_set_data* @create_insn_reg_set(i32 %10, %struct.rtx_def* %insn) #7, !dbg !7433
  br label %if.end53.us

if.end53.us:                                      ; preds = %if.end.us, %if.then14.us
  %new_incr.1.us = phi i32 [ %add19.us, %if.then14.us ], [ %add32.us, %if.end.us ], !dbg !7401
  call void @llvm.dbg.value(metadata i32 %new_incr.1.us, metadata !7397, metadata !DIExpression()), !dbg !7399
  %cmp54.us = icmp slt i32 %new_incr.1.us, 256, !dbg !7434
  br i1 %cmp54.us, label %if.end60.us, label %cond.true55.us, !dbg !7434

cond.true55.us:                                   ; preds = %if.end53.us
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1888, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7434
  br label %if.end60.us, !dbg !7434

if.end60.us:                                      ; preds = %cond.true55.us, %if.end53.us, %if.then.us, %cond.end.us
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !7435
  call void @llvm.dbg.value(metadata i32 undef, metadata !7392, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7399
  br label %while.cond.us, !dbg !7410, !llvm.loop !7436

while.end.us-lcssa.us:                            ; preds = %while.cond.us
  br label %while.end, !dbg !7438

while.cond:                                       ; preds = %if.end60, %entry.entry.split_crit_edge
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %if.end60 ], [ %0, %entry.entry.split_crit_edge ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !7392, metadata !DIExpression()), !dbg !7399
  %cmp = icmp slt i64 %indvars.iv2, %1, !dbg !7411
  br i1 %cmp, label %while.body, label %while.end.us-lcssa, !dbg !7410

while.body:                                       ; preds = %while.cond
  %cmp1 = icmp slt i64 %indvars.iv2, 53, !dbg !7412
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !7412

cond.true:                                        ; preds = %while.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1864, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7412
  br label %cond.end, !dbg !7412

cond.end:                                         ; preds = %while.body, %cond.true
  %11 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !7413
  %sh_prom = and i64 %indvars.iv2, 4294967295, !dbg !7413
  %shl = shl i64 1, %sh_prom, !dbg !7413
  %and = and i64 %11, %shl, !dbg !7413
  %tobool = icmp eq i64 %and, 0, !dbg !7413
  br i1 %tobool, label %if.then, label %if.end60, !dbg !7414

if.then:                                          ; preds = %cond.end
  %12 = load i32*, i32** @sched_regno_cover_class, align 8, !dbg !7415
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %indvars.iv2, !dbg !7415
  %13 = load i32, i32* %arrayidx, align 4, !dbg !7415
  call void @llvm.dbg.value(metadata i32 %13, metadata !7396, metadata !DIExpression()), !dbg !7399
  %cmp2 = icmp eq i32 %13, 0, !dbg !7416
  br i1 %cmp2, label %if.end60, label %if.then3, !dbg !7417

if.then3:                                         ; preds = %if.then
  %idxprom6 = zext i32 %13 to i64, !dbg !7439
  %14 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom6, i32 0, !dbg !7441
  %bf.load = load i32, i32* %14, align 4, !dbg !7441
  %bf.clear = and i32 %bf.load, 255, !dbg !7441
  %add8 = add nuw nsw i32 %bf.clear, 1, !dbg !7442
  call void @llvm.dbg.value(metadata i32 %add8, metadata !7397, metadata !DIExpression()), !dbg !7399
  %bf.value = and i32 %add8, 255, !dbg !7443
  %bf.clear12 = and i32 %bf.load, -256, !dbg !7443
  %bf.set = or i32 %bf.clear12, %bf.value, !dbg !7443
  store i32 %bf.set, i32* %14, align 4, !dbg !7443
  call void @llvm.dbg.value(metadata i32 %add8, metadata !7397, metadata !DIExpression()), !dbg !7399
  %cmp54 = icmp ult i32 %add8, 256, !dbg !7434
  br i1 %cmp54, label %if.end60, label %cond.true55, !dbg !7434

cond.true55:                                      ; preds = %if.then3
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1888, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7434
  br label %if.end60, !dbg !7434

if.end60:                                         ; preds = %if.then, %cond.end, %if.then3, %cond.true55
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, 1, !dbg !7435
  call void @llvm.dbg.value(metadata i32 undef, metadata !7392, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7399
  br label %while.cond, !dbg !7410, !llvm.loop !7436

while.end.us-lcssa:                               ; preds = %while.cond
  br label %while.end, !dbg !7438

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  ret void, !dbg !7438
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_insn_pseudo_birth(%struct.rtx_def* %insn, i32 %regno, i8 zeroext %clobber_p, i8 zeroext %unused_p) unnamed_addr #5 !dbg !7444 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7448, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7449, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata i8 %clobber_p, metadata !7450, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata i8 %unused_p, metadata !7451, metadata !DIExpression()), !dbg !7455
  %cmp = icmp sgt i32 %regno, 52, !dbg !7456
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7456

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1826, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7456
  br label %cond.end, !dbg !7456

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load i32*, i32** @sched_regno_cover_class, align 8, !dbg !7457
  %idxprom = sext i32 %regno to i64, !dbg !7457
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !7457
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7457
  call void @llvm.dbg.value(metadata i32 %1, metadata !7454, metadata !DIExpression()), !dbg !7455
  %cmp1 = icmp eq i32 %1, 0, !dbg !7458
  br i1 %cmp1, label %if.end64, label %if.then, !dbg !7460

if.then:                                          ; preds = %cond.end
  %idxprom2 = zext i32 %1 to i64, !dbg !7461
  %2 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !7463
  %arrayidx5 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %idxprom, !dbg !7463
  %3 = bitcast %struct.rtx_def** %arrayidx5 to i32**, !dbg !7463
  %4 = load i32*, i32** %3, align 8, !dbg !7463
  %bf.load = load i32, i32* %4, align 8, !dbg !7463
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7463
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7463
  %idxprom6 = zext i32 %bf.clear to i64, !dbg !7461
  %arrayidx7 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom2, i64 %idxprom6, !dbg !7461
  %5 = load i32, i32* %arrayidx7, align 4, !dbg !7461
  call void @llvm.dbg.value(metadata i32 %5, metadata !7452, metadata !DIExpression()), !dbg !7455
  %tobool = icmp eq i8 %clobber_p, 0, !dbg !7464
  br i1 %tobool, label %if.else, label %if.then8, !dbg !7466

if.then8:                                         ; preds = %if.then
  %6 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom2, i32 0, !dbg !7467
  %bf.load11 = load i32, i32* %6, align 4, !dbg !7467
  %bf.clear12 = and i32 %bf.load11, 255, !dbg !7467
  %add = add nsw i32 %bf.clear12, %5, !dbg !7469
  call void @llvm.dbg.value(metadata i32 %add, metadata !7453, metadata !DIExpression()), !dbg !7455
  %bf.value = and i32 %add, 255, !dbg !7470
  %bf.clear16 = and i32 %bf.load11, -256, !dbg !7470
  %bf.set = or i32 %bf.clear16, %bf.value, !dbg !7470
  store i32 %bf.set, i32* %6, align 4, !dbg !7470
  br label %if.end58, !dbg !7471

if.else:                                          ; preds = %if.then
  %tobool17 = icmp eq i8 %unused_p, 0, !dbg !7472
  %7 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom2, i32 0, !dbg !7474
  %bf.load21 = load i32, i32* %7, align 4, !dbg !7474
  br i1 %tobool17, label %if.else31, label %if.then18, !dbg !7475

if.then18:                                        ; preds = %if.else
  %bf.lshr22 = lshr i32 %bf.load21, 16, !dbg !7476
  %bf.clear23 = and i32 %bf.lshr22, 255, !dbg !7476
  %add24 = add nsw i32 %bf.clear23, %5, !dbg !7478
  call void @llvm.dbg.value(metadata i32 %add24, metadata !7453, metadata !DIExpression()), !dbg !7455
  %bf.value28 = shl i32 %add24, 16, !dbg !7479
  %bf.shl = and i32 %bf.value28, 16711680, !dbg !7479
  %bf.clear29 = and i32 %bf.load21, -16711681, !dbg !7479
  %bf.set30 = or i32 %bf.clear29, %bf.shl, !dbg !7479
  store i32 %bf.set30, i32* %7, align 4, !dbg !7479
  br label %if.end58, !dbg !7480

if.else31:                                        ; preds = %if.else
  %bf.lshr35 = lshr i32 %bf.load21, 8, !dbg !7481
  %bf.clear36 = and i32 %bf.lshr35, 255, !dbg !7481
  %add37 = add nsw i32 %bf.clear36, %5, !dbg !7483
  call void @llvm.dbg.value(metadata i32 %add37, metadata !7453, metadata !DIExpression()), !dbg !7455
  %bf.value41 = shl i32 %add37, 8, !dbg !7484
  %bf.shl42 = and i32 %bf.value41, 65280, !dbg !7484
  %bf.clear43 = and i32 %bf.load21, -65281, !dbg !7484
  %bf.set44 = or i32 %bf.clear43, %bf.shl42, !dbg !7484
  store i32 %bf.set44, i32* %7, align 4, !dbg !7484
  %call = tail call fastcc zeroext i8 @insn_use_p(%struct.rtx_def* %insn, i32 %regno) #7, !dbg !7485
  %tobool45 = icmp eq i8 %call, 0, !dbg !7485
  br i1 %tobool45, label %if.then46, label %if.end, !dbg !7487

if.then46:                                        ; preds = %if.else31
  %bf.load49 = load i32, i32* %7, align 4, !dbg !7488
  %add501 = shl i32 %5, 24, !dbg !7488
  %8 = add i32 %bf.load49, %add501, !dbg !7488
  store i32 %8, i32* %7, align 4, !dbg !7488
  br label %if.end, !dbg !7489

if.end:                                           ; preds = %if.else31, %if.then46
  %call56 = tail call fastcc %struct.reg_set_data* @create_insn_reg_set(i32 %regno, %struct.rtx_def* %insn) #7, !dbg !7490
  br label %if.end58

if.end58:                                         ; preds = %if.then18, %if.end, %if.then8
  %new_incr.1 = phi i32 [ %add, %if.then8 ], [ %add24, %if.then18 ], [ %add37, %if.end ], !dbg !7491
  call void @llvm.dbg.value(metadata i32 %new_incr.1, metadata !7453, metadata !DIExpression()), !dbg !7455
  %cmp59 = icmp slt i32 %new_incr.1, 256, !dbg !7492
  br i1 %cmp59, label %if.end64, label %cond.true60, !dbg !7492

cond.true60:                                      ; preds = %if.end58
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1849, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7492
  br label %if.end64, !dbg !7492

if.end64:                                         ; preds = %cond.end, %cond.true60, %if.end58
  ret void, !dbg !7493
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @insn_use_p(%struct.rtx_def* %insn, i32 %regno) unnamed_addr #5 !dbg !7494 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7498, metadata !DIExpression()), !dbg !7501
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7499, metadata !DIExpression()), !dbg !7501
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7502
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !7502
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7502
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7502
  %1 = load i32, i32* %rt_int, align 8, !dbg !7502
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %1) #7, !dbg !7502
  %reg_use_list = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 15, !dbg !7502
  br label %for.cond, !dbg !7504

for.cond:                                         ; preds = %for.inc, %entry
  %use.0.in = phi %struct.reg_use_data** [ %reg_use_list, %entry ], [ %next_insn_use, %for.inc ]
  %use.0 = load %struct.reg_use_data*, %struct.reg_use_data** %use.0.in, align 8, !dbg !7505
  call void @llvm.dbg.value(metadata %struct.reg_use_data* %use.0, metadata !7500, metadata !DIExpression()), !dbg !7501
  %cmp = icmp eq %struct.reg_use_data* %use.0, null, !dbg !7506
  br i1 %cmp, label %cleanup, label %for.body, !dbg !7508

for.body:                                         ; preds = %for.cond
  %regno1 = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %use.0, i64 0, i32 0, !dbg !7509
  %2 = load i32, i32* %regno1, align 8, !dbg !7509
  %cmp2 = icmp eq i32 %2, %regno, !dbg !7511
  br i1 %cmp2, label %cleanup, label %for.inc, !dbg !7512

for.inc:                                          ; preds = %for.body
  %next_insn_use = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %use.0, i64 0, i32 3, !dbg !7513
  br label %for.cond, !dbg !7514, !llvm.loop !7515

cleanup:                                          ; preds = %for.cond, %for.body
  %retval.0 = phi i8 [ 1, %for.body ], [ 0, %for.cond ], !dbg !7501
  ret i8 %retval.0, !dbg !7517
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.reg_set_data* @create_insn_reg_set(i32 %regno, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !7518 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7522, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7523, metadata !DIExpression()), !dbg !7525
  %call = tail call i8* @xmalloc(i64 24) #6, !dbg !7526
  %0 = bitcast i8* %call to %struct.reg_set_data*, !dbg !7527
  call void @llvm.dbg.value(metadata %struct.reg_set_data* %0, metadata !7524, metadata !DIExpression()), !dbg !7525
  %regno1 = bitcast i8* %call to i32*, !dbg !7528
  store i32 %regno, i32* %regno1, align 8, !dbg !7529
  %insn2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !7530
  %1 = bitcast i8* %insn2 to %struct.rtx_def**, !dbg !7530
  store %struct.rtx_def* %insn, %struct.rtx_def** %1, align 8, !dbg !7531
  %2 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7532
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %2, i64 0, i32 0, !dbg !7532
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7532
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7532
  %3 = load i32, i32* %rt_int, align 8, !dbg !7532
  %call3 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %3) #7, !dbg !7532
  %reg_set_list = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call3, i64 0, i32 16, !dbg !7532
  %4 = bitcast %struct.reg_set_data** %reg_set_list to i64*, !dbg !7532
  %5 = load i64, i64* %4, align 8, !dbg !7532
  %next_insn_set = getelementptr inbounds i8, i8* %call, i64 16, !dbg !7533
  %6 = bitcast i8* %next_insn_set to i64*, !dbg !7534
  store i64 %5, i64* %6, align 8, !dbg !7534
  %7 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7535
  %base6 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %7, i64 0, i32 0, !dbg !7535
  %8 = load i32, i32* %rt_int, align 8, !dbg !7535
  %call14 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base6, i32 %8) #7, !dbg !7535
  %reg_set_list15 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call14, i64 0, i32 16, !dbg !7535
  %9 = bitcast %struct.reg_set_data** %reg_set_list15 to i8**, !dbg !7536
  store i8* %call, i8** %9, align 8, !dbg !7536
  ret %struct.reg_set_data* %0, !dbg !7537
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_hard_regno_death(i32 %regno, i32 %nregs) unnamed_addr #5 !dbg !7538 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7542, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.value(metadata i32 %nregs, metadata !7543, metadata !DIExpression()), !dbg !7546
  %add = add nsw i32 %regno, %nregs, !dbg !7547
  call void @llvm.dbg.value(metadata i32 %add, metadata !7545, metadata !DIExpression()), !dbg !7546
  %0 = sext i32 %regno to i64, !dbg !7548
  %1 = sext i32 %add to i64, !dbg !7548
  br label %while.cond, !dbg !7548

while.cond:                                       ; preds = %if.end7, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end7 ], [ %0, %entry ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7542, metadata !DIExpression()), !dbg !7546
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !7549
  br i1 %cmp, label %while.body, label %while.end, !dbg !7548

while.body:                                       ; preds = %while.cond
  %cmp1 = icmp slt i64 %indvars.iv, 53, !dbg !7550
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !7550

cond.true:                                        ; preds = %while.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1946, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7550
  br label %cond.end, !dbg !7550

cond.end:                                         ; preds = %while.body, %cond.true
  %2 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !7552
  %sh_prom = and i64 %indvars.iv, 4294967295, !dbg !7552
  %shl = shl i64 1, %sh_prom, !dbg !7552
  %and = and i64 %2, %shl, !dbg !7552
  %tobool = icmp eq i64 %and, 0, !dbg !7552
  br i1 %tobool, label %if.then, label %if.end7, !dbg !7554

if.then:                                          ; preds = %cond.end
  %3 = load i32*, i32** @sched_regno_cover_class, align 8, !dbg !7555
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %indvars.iv, !dbg !7555
  %4 = load i32, i32* %arrayidx, align 4, !dbg !7555
  call void @llvm.dbg.value(metadata i32 %4, metadata !7544, metadata !DIExpression()), !dbg !7546
  %cmp2 = icmp eq i32 %4, 0, !dbg !7557
  br i1 %cmp2, label %if.end7, label %if.then3, !dbg !7559

if.then3:                                         ; preds = %if.then
  %idxprom4 = zext i32 %4 to i64, !dbg !7560
  %5 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom4, i32 0, !dbg !7561
  %bf.load = load i32, i32* %5, align 4, !dbg !7562
  %6 = add i32 %bf.load, -16777216, !dbg !7562
  store i32 %6, i32* %5, align 4, !dbg !7562
  br label %if.end7, !dbg !7560

if.end7:                                          ; preds = %if.then, %cond.end, %if.then3
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !7563
  call void @llvm.dbg.value(metadata i32 undef, metadata !7542, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7546
  br label %while.cond, !dbg !7548, !llvm.loop !7564

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7566
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_pseudo_death(i32 %regno) unnamed_addr #5 !dbg !7567 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7569, metadata !DIExpression()), !dbg !7572
  %cmp = icmp sgt i32 %regno, 52, !dbg !7573
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7573

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1927, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7573
  br label %cond.end, !dbg !7573

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load i32*, i32** @sched_regno_cover_class, align 8, !dbg !7574
  %idxprom = sext i32 %regno to i64, !dbg !7574
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !7574
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7574
  call void @llvm.dbg.value(metadata i32 %1, metadata !7571, metadata !DIExpression()), !dbg !7572
  %cmp1 = icmp eq i32 %1, 0, !dbg !7575
  br i1 %cmp1, label %if.end, label %if.then, !dbg !7577

if.then:                                          ; preds = %cond.end
  %idxprom2 = zext i32 %1 to i64, !dbg !7578
  %2 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !7580
  %arrayidx5 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %idxprom, !dbg !7580
  %3 = bitcast %struct.rtx_def** %arrayidx5 to i32**, !dbg !7580
  %4 = load i32*, i32** %3, align 8, !dbg !7580
  %bf.load = load i32, i32* %4, align 8, !dbg !7580
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7580
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7580
  %idxprom6 = zext i32 %bf.clear to i64, !dbg !7578
  %arrayidx7 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom2, i64 %idxprom6, !dbg !7578
  %5 = load i32, i32* %arrayidx7, align 4, !dbg !7578
  call void @llvm.dbg.value(metadata i32 %5, metadata !7570, metadata !DIExpression()), !dbg !7572
  %6 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom2, i32 0, !dbg !7581
  %bf.load10 = load i32, i32* %6, align 4, !dbg !7582
  %sub1 = shl i32 %5, 24, !dbg !7582
  %7 = sub i32 %bf.load10, %sub1, !dbg !7582
  %bf.shl = and i32 %7, -16777216, !dbg !7582
  %bf.clear12 = and i32 %bf.load10, 16777215, !dbg !7582
  %bf.set = or i32 %bf.clear12, %bf.shl, !dbg !7582
  store i32 %bf.set, i32* %6, align 4, !dbg !7582
  br label %if.end, !dbg !7583

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !7584
}

declare dso_local void @free_INSN_LIST_node(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @delete_all_dependences(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !7585 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7587, metadata !DIExpression()), !dbg !7590
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !7591
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !7591
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !7592
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7592
  %2 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !7593
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !7593
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn, i32 3) #7, !dbg !7593
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 32, i1 false), !dbg !7593
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !7593
  br label %for.cond, !dbg !7595

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !7588, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !7589, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !7596
  %tobool = icmp eq i8 %call, 0, !dbg !7598
  br i1 %tobool, label %for.end, label %for.body, !dbg !7598

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !7588, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @sd_delete_dep(%struct._sd_iterator* nonnull byval(%struct._sd_iterator) align 8 %sd_it) #7, !dbg !7599
  br label %for.cond, !dbg !7600, !llvm.loop !7601

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7603
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !7603
  ret void, !dbg !7603
}

declare dso_local %struct.rtx_def* @remove_free_INSN_LIST_node(%struct.rtx_def**) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @remove_free_EXPR_LIST_node(%struct.rtx_def**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_haifa_deps_insn_data_def_base_length(%struct.VEC_haifa_deps_insn_data_def_base* %vec_) unnamed_addr #0 !dbg !7604 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_deps_insn_data_def_base* %vec_, metadata !7610, metadata !DIExpression()), !dbg !7611
  %tobool = icmp eq %struct.VEC_haifa_deps_insn_data_def_base* %vec_, null, !dbg !7612
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7612

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %vec_, i64 0, i32 0, !dbg !7612
  %0 = load i32, i32* %num, align 8, !dbg !7612
  br label %cond.end, !dbg !7612

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !7612
  ret i32 %cond, !dbg !7612
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_haifa_deps_insn_data_def_base_space(%struct.VEC_haifa_deps_insn_data_def_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7613 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_deps_insn_data_def_base* %vec_, metadata !7617, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !7618, metadata !DIExpression()), !dbg !7619
  %tobool = icmp eq %struct.VEC_haifa_deps_insn_data_def_base* %vec_, null, !dbg !7620
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7620

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %vec_, i64 0, i32 1, !dbg !7620
  %0 = load i32, i32* %alloc, align 4, !dbg !7620
  %num = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %vec_, i64 0, i32 0, !dbg !7620
  %1 = load i32, i32* %num, align 8, !dbg !7620
  %sub = sub i32 %0, %1, !dbg !7620
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !7620
  br label %cond.end, !dbg !7620

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !7620
  br label %cond.end, !dbg !7620

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !7620
  ret i32 %cond, !dbg !7620
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_haifa_deps_insn_data_def_heap_safe_grow_cleared(%struct.VEC_haifa_deps_insn_data_def_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !7621 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, metadata !7625, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i32 %size_, metadata !7626, metadata !DIExpression()), !dbg !7628
  %0 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !7629
  %tobool = icmp eq %struct.VEC_haifa_deps_insn_data_def_heap* %0, null, !dbg !7629
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7629

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %0, i64 0, i32 0, !dbg !7629
  br label %cond.end, !dbg !7629

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7629
  %call = tail call fastcc i32 @VEC_haifa_deps_insn_data_def_base_length(%struct.VEC_haifa_deps_insn_data_def_base* %cond) #7, !dbg !7629
  call void @llvm.dbg.value(metadata i32 %call, metadata !7627, metadata !DIExpression()), !dbg !7628
  tail call fastcc void @VEC_haifa_deps_insn_data_def_heap_safe_grow(%struct.VEC_haifa_deps_insn_data_def_heap** nonnull @h_d_i_d, i32 %size_) #7, !dbg !7629
  %1 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !7629
  %tobool1 = icmp eq %struct.VEC_haifa_deps_insn_data_def_heap* %1, null, !dbg !7629
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !7629

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %1, i64 0, i32 0, !dbg !7629
  br label %cond.end5, !dbg !7629

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !7629
  %call7 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_address(%struct.VEC_haifa_deps_insn_data_def_base* %cond6) #7, !dbg !7629
  %idxprom = sext i32 %call to i64, !dbg !7629
  %arrayidx = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call7, i64 %idxprom, !dbg !7629
  %2 = bitcast %struct._haifa_deps_insn_data* %arrayidx to i8*, !dbg !7629
  %sub = sub nsw i32 %size_, %call, !dbg !7629
  %conv = sext i32 %sub to i64, !dbg !7629
  %mul = mul nsw i64 %conv, 56, !dbg !7629
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !7629
  ret void, !dbg !7629
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_haifa_deps_insn_data_def_heap_safe_grow(%struct.VEC_haifa_deps_insn_data_def_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !7630 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, metadata !7632, metadata !DIExpression()), !dbg !7634
  call void @llvm.dbg.value(metadata i32 %size_, metadata !7633, metadata !DIExpression()), !dbg !7634
  %cmp = icmp sgt i32 %size_, -1, !dbg !7635
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7635

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !7635
  %tobool = icmp eq %struct.VEC_haifa_deps_insn_data_def_heap* %0, null, !dbg !7635
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7635

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %0, i64 0, i32 0, !dbg !7635
  br label %cond.end, !dbg !7635

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !7635
  %call = tail call fastcc i32 @VEC_haifa_deps_insn_data_def_base_length(%struct.VEC_haifa_deps_insn_data_def_base* %cond) #7, !dbg !7635
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !7635
  %tobool2 = icmp eq %struct.VEC_haifa_deps_insn_data_def_heap* %1, null, !dbg !7635
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !7635

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %1, i64 0, i32 0, i32 0, !dbg !7635
  %2 = load i32, i32* %num, align 8, !dbg !7635
  br label %cond.end11, !dbg !7635

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !7635
  %sub = sub nsw i32 %size_, %cond12, !dbg !7635
  %call13 = tail call fastcc i32 @VEC_haifa_deps_insn_data_def_heap_reserve_exact(%struct.VEC_haifa_deps_insn_data_def_heap** nonnull @h_d_i_d, i32 %sub) #7, !dbg !7635
  %3 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !7635
  %num20 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %3, i64 0, i32 0, i32 0, !dbg !7635
  store i32 %size_, i32* %num20, align 8, !dbg !7635
  ret void, !dbg !7635
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_address(%struct.VEC_haifa_deps_insn_data_def_base* %vec_) unnamed_addr #0 !dbg !7636 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_deps_insn_data_def_base* %vec_, metadata !7640, metadata !DIExpression()), !dbg !7641
  %tobool = icmp eq %struct.VEC_haifa_deps_insn_data_def_base* %vec_, null, !dbg !7642
  %arraydecay = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %vec_, i64 0, i32 2, i64 0, !dbg !7642
  %cond = select i1 %tobool, %struct._haifa_deps_insn_data* null, %struct._haifa_deps_insn_data* %arraydecay, !dbg !7642
  ret %struct._haifa_deps_insn_data* %cond, !dbg !7642
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_haifa_deps_insn_data_def_heap_reserve_exact(%struct.VEC_haifa_deps_insn_data_def_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7643 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, metadata !7647, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !7648, metadata !DIExpression()), !dbg !7650
  %0 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !7651
  %tobool = icmp eq %struct.VEC_haifa_deps_insn_data_def_heap* %0, null, !dbg !7651
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7651

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %0, i64 0, i32 0, !dbg !7651
  br label %cond.end, !dbg !7651

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7651
  %call = tail call fastcc i32 @VEC_haifa_deps_insn_data_def_base_space(%struct.VEC_haifa_deps_insn_data_def_base* %cond, i32 %alloc_) #7, !dbg !7651
  %tobool1 = icmp eq i32 %call, 0, !dbg !7651
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7651
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7649, metadata !DIExpression()), !dbg !7650
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7651

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d to i8**), align 8, !dbg !7652
  %call3 = tail call i8* @vec_heap_o_reserve_exact(i8* %1, i32 %alloc_, i64 8, i64 56) #6, !dbg !7652
  store i8* %call3, i8** bitcast (%struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d to i8**), align 8, !dbg !7652
  br label %if.end, !dbg !7652

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7651
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @maybe_add_or_update_dep_1(%struct._dep* %dep, i8 zeroext %resolved_p, %struct.rtx_def* %mem1, %struct.rtx_def* %mem2) unnamed_addr #5 !dbg !7654 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !7656, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.value(metadata i8 0, metadata !7657, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem1, metadata !7658, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem2, metadata !7659, metadata !DIExpression()), !dbg !7662
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 0, !dbg !7663
  %0 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !7663
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !7660, metadata !DIExpression()), !dbg !7662
  %con = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 1, !dbg !7664
  %1 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !7664
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7661, metadata !DIExpression()), !dbg !7662
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !7665
  %bf.load = load i32, i32* %2, align 8, !dbg !7665
  %bf.clear = and i32 %bf.load, 65535, !dbg !7665
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !7665
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !7665

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !7665
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !7665

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !7665
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !7665

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !7665
  br i1 %cmp11, label %land.lhs.true, label %cond.true, !dbg !7665

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !7665
  %bf.load12 = load i32, i32* %3, align 8, !dbg !7665
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !7665
  %cmp14 = icmp eq i32 %bf.clear13, 8, !dbg !7665
  br i1 %cmp14, label %cond.end, label %lor.lhs.false15, !dbg !7665

lor.lhs.false15:                                  ; preds = %land.lhs.true
  %cmp18 = icmp eq i32 %bf.clear13, 7, !dbg !7665
  br i1 %cmp18, label %cond.end, label %lor.lhs.false19, !dbg !7665

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %cmp22 = icmp eq i32 %bf.clear13, 9, !dbg !7665
  br i1 %cmp22, label %cond.end, label %lor.lhs.false23, !dbg !7665

lor.lhs.false23:                                  ; preds = %lor.lhs.false19
  %cmp26 = icmp eq i32 %bf.clear13, 10, !dbg !7665
  br i1 %cmp26, label %cond.end, label %cond.true, !dbg !7665

cond.true:                                        ; preds = %lor.lhs.false23, %lor.lhs.false8
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 849, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7665
  br label %cond.end, !dbg !7665

cond.end:                                         ; preds = %land.lhs.true, %lor.lhs.false15, %lor.lhs.false19, %lor.lhs.false23, %cond.true
  %cmp27 = icmp eq %struct.rtx_def* %1, %0, !dbg !7666
  br i1 %cmp27, label %if.then, label %if.end43, !dbg !7668

if.then:                                          ; preds = %cond.end
  %4 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7669
  %generate_spec_deps = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %4, i64 0, i32 12, !dbg !7672
  %bf.load28 = load i8, i8* %generate_spec_deps, align 8, !dbg !7672
  %bf.clear29 = and i8 %bf.load28, 4, !dbg !7672
  %tobool = icmp eq i8 %bf.clear29, 0, !dbg !7669
  br i1 %tobool, label %cleanup, label %if.then30, !dbg !7673

if.then30:                                        ; preds = %if.then
  %5 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !7674
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %5, i64 0, i32 0, !dbg !7674
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7674
  %base38 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !7674
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7674
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7674
  %7 = load i32, i32* %rt_int, align 8, !dbg !7674
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base38, i32 %7) #7, !dbg !7674
  %call42 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base, i32 %call) #7, !dbg !7674
  %has_internal_dep = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call42, i64 0, i32 1, !dbg !7674
  store i32 1, i32* %has_internal_dep, align 4, !dbg !7675
  br label %cleanup, !dbg !7674

if.end43:                                         ; preds = %cond.end
  %call44 = tail call fastcc i32 @add_or_update_dep_1(%struct._dep* %dep, i8 zeroext 0, %struct.rtx_def* %mem1, %struct.rtx_def* %mem2) #7, !dbg !7676
  br label %cleanup, !dbg !7677

cleanup:                                          ; preds = %if.then, %if.then30, %if.end43
  %retval.0 = phi i32 [ %call44, %if.end43 ], [ 0, %if.then30 ], [ 0, %if.then ], !dbg !7662
  ret i32 %retval.0, !dbg !7678
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2005, !2006, !2007}
!llvm.ident = !{!2008}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "h_d_i_d", scope: !2, file: !3, line: 59, type: !1853, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !608, globals: !1876, nameTableKind: None)
!3 = !DIFile(filename: "sched-deps.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !147, !152, !157, !176, !183, !190, !384, !419, !561, !568, !573, !578}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !142, line: 363, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146}
!144 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !142, line: 355, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !153, line: 474, baseType: !7, size: 32, elements: !154)
!153 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!154 = !{!155, !156}
!155 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !158, line: 280, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175}
!160 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !158, line: 1817, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !158, line: 1805, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !158, line: 39, baseType: !7, size: 32, elements: !191)
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!192 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!281 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!282 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!283 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!284 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!285 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!286 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!287 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!288 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!289 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!290 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!291 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!292 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!293 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!294 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!295 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!296 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!297 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!298 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!299 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!300 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!301 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!302 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!303 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!304 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!305 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!307 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!308 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!309 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!310 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!311 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!312 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!313 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!314 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!315 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!316 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!317 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!318 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!319 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!320 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!321 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!322 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!323 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!324 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!325 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!326 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!327 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!328 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!329 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!330 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!331 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!332 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!333 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!334 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!335 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!336 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!337 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!338 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!339 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!340 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!341 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!342 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!343 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!344 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!356 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!357 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!358 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!359 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!360 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!361 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!377 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!378 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!379 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!380 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!381 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!382 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!383 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !385, line: 836, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418}
!387 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!397 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!398 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!399 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!400 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!401 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!402 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!403 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!404 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!405 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!406 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!407 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!408 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!409 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!410 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!411 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!412 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!413 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!414 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!415 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!416 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!417 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!418 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!419 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !385, line: 45, baseType: !7, size: 32, elements: !420)
!420 = !{!421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560}
!421 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!422 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!423 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!424 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!425 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!426 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!427 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!428 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!429 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!430 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!431 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!432 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!433 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!434 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!435 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!436 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!437 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!438 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!439 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!440 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!441 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!442 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!443 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!444 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!445 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!446 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!447 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!448 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!449 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!450 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!451 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!452 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!453 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!454 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!455 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!456 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!457 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!458 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!459 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!460 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!461 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!462 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!463 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!464 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!465 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!466 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!467 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!468 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!469 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!470 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!471 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!472 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!473 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!474 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!475 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!476 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!477 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!478 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!479 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!480 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!481 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!482 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!483 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!484 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!485 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!486 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!487 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!488 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!489 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!490 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!491 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!492 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!493 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!494 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!495 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!496 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!497 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!498 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!499 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!500 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!501 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!502 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!503 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!504 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!505 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!506 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!507 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!508 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!509 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!510 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!511 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!512 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!513 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!514 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!515 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!516 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!517 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!518 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!519 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!520 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!521 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!522 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!523 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!524 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!525 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!526 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!527 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!528 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!529 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!530 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!531 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!532 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!533 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!534 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!535 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!536 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!537 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!538 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!539 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!540 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!541 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!542 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!543 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!544 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!545 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!546 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!547 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!548 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!549 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!550 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!551 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!552 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!553 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!554 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!555 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!556 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!557 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!558 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!559 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!560 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!561 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DEPS_ADJUST_RESULT", file: !562, line: 1016, baseType: !7, size: 32, elements: !563)
!562 = !DIFile(filename: "./sched-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!563 = !{!564, !565, !566, !567}
!564 = !DIEnumerator(name: "DEP_NODEP", value: 0, isUnsigned: true)
!565 = !DIEnumerator(name: "DEP_PRESENT", value: 1, isUnsigned: true)
!566 = !DIEnumerator(name: "DEP_CHANGED", value: 2, isUnsigned: true)
!567 = !DIEnumerator(name: "DEP_CREATED", value: 3, isUnsigned: true)
!568 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "post_call_group", file: !562, line: 432, baseType: !7, size: 32, elements: !569)
!569 = !{!570, !571, !572}
!570 = !DIEnumerator(name: "not_post_call", value: 0, isUnsigned: true)
!571 = !DIEnumerator(name: "post_call", value: 1, isUnsigned: true)
!572 = !DIEnumerator(name: "post_call_initial", value: 2, isUnsigned: true)
!573 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_pending_barrier_mode", file: !562, line: 424, baseType: !7, size: 32, elements: !574)
!574 = !{!575, !576, !577}
!575 = !DIEnumerator(name: "NOT_A_BARRIER", value: 0, isUnsigned: true)
!576 = !DIEnumerator(name: "MOVE_BARRIER", value: 1, isUnsigned: true)
!577 = !DIEnumerator(name: "TRUE_BARRIER", value: 2, isUnsigned: true)
!578 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_class", file: !153, line: 1188, baseType: !7, size: 32, elements: !579)
!579 = !{!580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607}
!580 = !DIEnumerator(name: "NO_REGS", value: 0, isUnsigned: true)
!581 = !DIEnumerator(name: "AREG", value: 1, isUnsigned: true)
!582 = !DIEnumerator(name: "DREG", value: 2, isUnsigned: true)
!583 = !DIEnumerator(name: "CREG", value: 3, isUnsigned: true)
!584 = !DIEnumerator(name: "BREG", value: 4, isUnsigned: true)
!585 = !DIEnumerator(name: "SIREG", value: 5, isUnsigned: true)
!586 = !DIEnumerator(name: "DIREG", value: 6, isUnsigned: true)
!587 = !DIEnumerator(name: "AD_REGS", value: 7, isUnsigned: true)
!588 = !DIEnumerator(name: "CLOBBERED_REGS", value: 8, isUnsigned: true)
!589 = !DIEnumerator(name: "Q_REGS", value: 9, isUnsigned: true)
!590 = !DIEnumerator(name: "NON_Q_REGS", value: 10, isUnsigned: true)
!591 = !DIEnumerator(name: "INDEX_REGS", value: 11, isUnsigned: true)
!592 = !DIEnumerator(name: "LEGACY_REGS", value: 12, isUnsigned: true)
!593 = !DIEnumerator(name: "GENERAL_REGS", value: 13, isUnsigned: true)
!594 = !DIEnumerator(name: "FP_TOP_REG", value: 14, isUnsigned: true)
!595 = !DIEnumerator(name: "FP_SECOND_REG", value: 15, isUnsigned: true)
!596 = !DIEnumerator(name: "FLOAT_REGS", value: 16, isUnsigned: true)
!597 = !DIEnumerator(name: "SSE_FIRST_REG", value: 17, isUnsigned: true)
!598 = !DIEnumerator(name: "SSE_REGS", value: 18, isUnsigned: true)
!599 = !DIEnumerator(name: "MMX_REGS", value: 19, isUnsigned: true)
!600 = !DIEnumerator(name: "FP_TOP_SSE_REGS", value: 20, isUnsigned: true)
!601 = !DIEnumerator(name: "FP_SECOND_SSE_REGS", value: 21, isUnsigned: true)
!602 = !DIEnumerator(name: "FLOAT_SSE_REGS", value: 22, isUnsigned: true)
!603 = !DIEnumerator(name: "FLOAT_INT_REGS", value: 23, isUnsigned: true)
!604 = !DIEnumerator(name: "INT_SSE_REGS", value: 24, isUnsigned: true)
!605 = !DIEnumerator(name: "FLOAT_INT_SSE_REGS", value: 25, isUnsigned: true)
!606 = !DIEnumerator(name: "ALL_REGS", value: 26, isUnsigned: true)
!607 = !DIEnumerator(name: "LIM_REG_CLASSES", value: 27, isUnsigned: true)
!608 = !{!609, !610, !611, !612, !615, !616, !618, !419, !619, !1776, !644, !7, !1778, !1789, !1791, !1800, !1802, !1803, !1804, !1814, !5, !1831, !384, !1838, !1845, !1846, !1852, !190, !1853}
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!611 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !614)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "ds_t", file: !562, line: 218, baseType: !611)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !385, line: 240, size: 384, elements: !621)
!621 = !{!622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !620, file: !385, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !620, file: !385, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !620, file: !385, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !620, file: !385, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !620, file: !385, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !620, file: !385, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !620, file: !385, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !620, file: !385, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !620, file: !385, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !620, file: !385, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !620, file: !385, line: 321, baseType: !633, size: 320, offset: 64)
!633 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !385, line: 315, size: 320, elements: !634)
!634 = !{!635, !1743, !1745, !1774, !1775}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !633, file: !385, line: 316, baseType: !636, size: 64)
!636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 64, elements: !654)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !385, line: 183, baseType: !638)
!638 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !385, line: 166, size: 64, elements: !639)
!639 = !{!640, !641, !642, !643, !646, !656, !657, !669, !693, !755, !1721, !1722, !1733, !1740}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !638, file: !385, line: 168, baseType: !611, size: 32)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !638, file: !385, line: 169, baseType: !7, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !638, file: !385, line: 170, baseType: !616, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !638, file: !385, line: 171, baseType: !644, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !645, line: 50, baseType: !619)
!645 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!646 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !638, file: !385, line: 172, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !645, line: 53, baseType: !648)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !385, line: 359, size: 128, elements: !650)
!650 = !{!651, !652}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !649, file: !385, line: 360, baseType: !611, size: 32)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !649, file: !385, line: 361, baseType: !653, size: 64, offset: 64)
!653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !644, size: 64, elements: !654)
!654 = !{!655}
!655 = !DISubrange(count: 1)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !638, file: !385, line: 173, baseType: !5, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !638, file: !385, line: 174, baseType: !658, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !385, line: 133, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !385, line: 115, size: 32, elements: !660)
!660 = !{!661, !662, !663, !664, !665, !666, !667, !668}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !659, file: !385, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !659, file: !385, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !659, file: !385, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !659, file: !385, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !659, file: !385, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !659, file: !385, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !659, file: !385, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !659, file: !385, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !638, file: !385, line: 175, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !672, line: 23, size: 320, elements: !673)
!672 = !DIFile(filename: "./cselib.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!673 = !{!674, !675, !676, !677, !684, !692}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !671, file: !672, line: 25, baseType: !7, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !671, file: !672, line: 28, baseType: !611, size: 32, offset: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "val_rtx", scope: !671, file: !672, line: 31, baseType: !644, size: 64, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "locs", scope: !671, file: !672, line: 35, baseType: !678, size: 64, offset: 128)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_loc_list", file: !672, line: 45, size: 192, elements: !680)
!680 = !{!681, !682, !683}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !679, file: !672, line: 47, baseType: !678, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !679, file: !672, line: 49, baseType: !644, size: 64, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "setting_insn", scope: !679, file: !672, line: 51, baseType: !644, size: 64, offset: 128)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !671, file: !672, line: 39, baseType: !685, size: 64, offset: 192)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_list", file: !672, line: 55, size: 128, elements: !687)
!687 = !{!688, !689}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !686, file: !672, line: 56, baseType: !685, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "elt", scope: !686, file: !672, line: 57, baseType: !690, size: 64, offset: 64)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "cselib_val", file: !672, line: 42, baseType: !671)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "next_containing_mem", scope: !671, file: !672, line: 41, baseType: !670, size: 64, offset: 256)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !638, file: !385, line: 176, baseType: !694, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !696, line: 75, size: 256, elements: !697)
!696 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!697 = !{!698, !713, !714, !715}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !695, file: !696, line: 76, baseType: !699, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !696, line: 68, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !696, line: 63, size: 320, elements: !702)
!702 = !{!703, !705, !706, !707}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !701, file: !696, line: 64, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !701, file: !696, line: 65, baseType: !704, size: 64, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !701, file: !696, line: 66, baseType: !7, size: 32, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !701, file: !696, line: 67, baseType: !708, size: 128, offset: 192)
!708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 128, elements: !711)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !696, line: 29, baseType: !710)
!710 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!711 = !{!712}
!712 = !DISubrange(count: 2)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !695, file: !696, line: 77, baseType: !699, size: 64, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !695, file: !696, line: 78, baseType: !7, size: 32, offset: 128)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !695, file: !696, line: 79, baseType: !716, size: 64, offset: 192)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !696, line: 49, baseType: !718)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !696, line: 45, size: 832, elements: !719)
!719 = !{!720, !721, !722}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !718, file: !696, line: 46, baseType: !704, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !718, file: !696, line: 47, baseType: !694, size: 64, offset: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !718, file: !696, line: 48, baseType: !723, size: 704, offset: 128)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !724, line: 164, size: 704, elements: !725)
!724 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!725 = !{!726, !728, !738, !739, !740, !741, !742, !743, !747, !751, !752, !753, !754}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !723, file: !724, line: 166, baseType: !727, size: 64)
!727 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !723, file: !724, line: 167, baseType: !729, size: 64, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !724, line: 157, size: 192, elements: !731)
!731 = !{!732, !733, !734}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !730, file: !724, line: 159, baseType: !613, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !730, file: !724, line: 160, baseType: !729, size: 64, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !730, file: !724, line: 161, baseType: !735, size: 32, offset: 128)
!735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 32, elements: !736)
!736 = !{!737}
!737 = !DISubrange(count: 4)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !723, file: !724, line: 168, baseType: !613, size: 64, offset: 128)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !723, file: !724, line: 169, baseType: !613, size: 64, offset: 192)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !723, file: !724, line: 170, baseType: !613, size: 64, offset: 256)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !723, file: !724, line: 171, baseType: !727, size: 64, offset: 320)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !723, file: !724, line: 172, baseType: !611, size: 32, offset: 384)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !723, file: !724, line: 176, baseType: !744, size: 64, offset: 448)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{!729, !615, !727}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !723, file: !724, line: 177, baseType: !748, size: 64, offset: 512)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DISubroutineType(types: !750)
!750 = !{null, !615, !729}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !723, file: !724, line: 178, baseType: !615, size: 64, offset: 576)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !723, file: !724, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !723, file: !724, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !723, file: !724, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !638, file: !385, line: 177, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !645, line: 56, baseType: !757)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !158, line: 3371, size: 1792, elements: !759)
!759 = !{!760, !793, !799, !810, !829, !840, !845, !852, !858, !871, !883, !921, !926, !954, !962, !963, !968, !977, !983, !988, !992, !996, !1357, !1406, !1412, !1418, !1425, !1451, !1465, !1482, !1494, !1516, !1531, !1703}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !758, file: !158, line: 3372, baseType: !761, size: 64)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !158, line: 360, size: 64, elements: !762)
!762 = !{!763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !761, file: !158, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !761, file: !158, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !761, file: !158, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !761, file: !158, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !761, file: !158, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !761, file: !158, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !761, file: !158, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !761, file: !158, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !761, file: !158, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !761, file: !158, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !761, file: !158, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !761, file: !158, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !761, file: !158, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !761, file: !158, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !761, file: !158, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !761, file: !158, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !761, file: !158, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !761, file: !158, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !761, file: !158, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !761, file: !158, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !761, file: !158, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !761, file: !158, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !761, file: !158, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !761, file: !158, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !761, file: !158, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !761, file: !158, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !761, file: !158, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !761, file: !158, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !761, file: !158, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !761, file: !158, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !758, file: !158, line: 3373, baseType: !794, size: 192)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !158, line: 402, size: 192, elements: !795)
!795 = !{!796, !797, !798}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !794, file: !158, line: 403, baseType: !761, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !794, file: !158, line: 404, baseType: !756, size: 64, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !794, file: !158, line: 405, baseType: !756, size: 64, offset: 128)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !758, file: !158, line: 3374, baseType: !800, size: 320)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !158, line: 1384, size: 320, elements: !801)
!801 = !{!802, !803}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !800, file: !158, line: 1385, baseType: !794, size: 192)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !800, file: !158, line: 1386, baseType: !804, size: 128, offset: 192)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !805, line: 58, baseType: !806)
!805 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !805, line: 54, size: 128, elements: !807)
!807 = !{!808, !809}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !806, file: !805, line: 56, baseType: !710, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !806, file: !805, line: 57, baseType: !727, size: 64, offset: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !758, file: !158, line: 3375, baseType: !811, size: 256)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !158, line: 1397, size: 256, elements: !812)
!812 = !{!813, !814}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !811, file: !158, line: 1398, baseType: !794, size: 192)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !811, file: !158, line: 1399, baseType: !815, size: 64, offset: 192)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !817, line: 52, size: 256, elements: !818)
!817 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!818 = !{!819, !820, !821, !822, !823, !824, !825}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !816, file: !817, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !816, file: !817, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !816, file: !817, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !816, file: !817, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !816, file: !817, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !816, file: !817, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !816, file: !817, line: 62, baseType: !826, size: 192, offset: 64)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !710, size: 192, elements: !827)
!827 = !{!828}
!828 = !DISubrange(count: 3)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !758, file: !158, line: 3376, baseType: !830, size: 256)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !158, line: 1408, size: 256, elements: !831)
!831 = !{!832, !833}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !830, file: !158, line: 1409, baseType: !794, size: 192)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !830, file: !158, line: 1410, baseType: !834, size: 64, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !836, line: 27, size: 192, elements: !837)
!836 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!837 = !{!838, !839}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !835, file: !836, line: 29, baseType: !804, size: 128)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !835, file: !836, line: 30, baseType: !5, size: 32, offset: 128)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !758, file: !158, line: 3377, baseType: !841, size: 256)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !158, line: 1437, size: 256, elements: !842)
!842 = !{!843, !844}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !841, file: !158, line: 1438, baseType: !794, size: 192)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !841, file: !158, line: 1439, baseType: !756, size: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !758, file: !158, line: 3378, baseType: !846, size: 256)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !158, line: 1418, size: 256, elements: !847)
!847 = !{!848, !849, !850}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !846, file: !158, line: 1419, baseType: !794, size: 192)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !846, file: !158, line: 1420, baseType: !611, size: 32, offset: 192)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !846, file: !158, line: 1421, baseType: !851, size: 8, offset: 224)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 8, elements: !654)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !758, file: !158, line: 3379, baseType: !853, size: 320)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !158, line: 1428, size: 320, elements: !854)
!854 = !{!855, !856, !857}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !853, file: !158, line: 1429, baseType: !794, size: 192)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !853, file: !158, line: 1430, baseType: !756, size: 64, offset: 192)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !853, file: !158, line: 1431, baseType: !756, size: 64, offset: 256)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !758, file: !158, line: 3380, baseType: !859, size: 320)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !158, line: 1460, size: 320, elements: !860)
!860 = !{!861, !862}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !859, file: !158, line: 1461, baseType: !794, size: 192)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !859, file: !158, line: 1462, baseType: !863, size: 128, offset: 192)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !864, line: 31, size: 128, elements: !865)
!864 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!865 = !{!866, !869, !870}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !863, file: !864, line: 32, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !610)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !863, file: !864, line: 33, baseType: !7, size: 32, offset: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !863, file: !864, line: 34, baseType: !7, size: 32, offset: 96)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !758, file: !158, line: 3381, baseType: !872, size: 384)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !158, line: 2507, size: 384, elements: !873)
!873 = !{!874, !875, !880, !881, !882}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !872, file: !158, line: 2508, baseType: !794, size: 192)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !872, file: !158, line: 2509, baseType: !876, size: 32, offset: 192)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !877, line: 58, baseType: !878)
!877 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !879, line: 44, baseType: !7)
!879 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!880 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !872, file: !158, line: 2510, baseType: !7, size: 32, offset: 224)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !872, file: !158, line: 2511, baseType: !756, size: 64, offset: 256)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !872, file: !158, line: 2512, baseType: !756, size: 64, offset: 320)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !758, file: !158, line: 3382, baseType: !884, size: 896)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !158, line: 2652, size: 896, elements: !885)
!885 = !{!886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !884, file: !158, line: 2653, baseType: !872, size: 384)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !884, file: !158, line: 2654, baseType: !756, size: 64, offset: 384)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !884, file: !158, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !884, file: !158, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !884, file: !158, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !884, file: !158, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !884, file: !158, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !884, file: !158, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !884, file: !158, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !884, file: !158, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !884, file: !158, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !884, file: !158, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !884, file: !158, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !884, file: !158, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !884, file: !158, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !884, file: !158, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !884, file: !158, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !884, file: !158, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !884, file: !158, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !884, file: !158, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !884, file: !158, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !884, file: !158, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !884, file: !158, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !884, file: !158, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !884, file: !158, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !884, file: !158, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !884, file: !158, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !884, file: !158, line: 2703, baseType: !7, size: 32, offset: 512)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !884, file: !158, line: 2705, baseType: !756, size: 64, offset: 576)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !884, file: !158, line: 2706, baseType: !756, size: 64, offset: 640)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !884, file: !158, line: 2707, baseType: !756, size: 64, offset: 704)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !884, file: !158, line: 2708, baseType: !756, size: 64, offset: 768)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !884, file: !158, line: 2711, baseType: !919, size: 64, offset: 832)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !158, line: 2711, flags: DIFlagFwdDecl)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !758, file: !158, line: 3383, baseType: !922, size: 960)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !158, line: 2756, size: 960, elements: !923)
!923 = !{!924, !925}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !922, file: !158, line: 2757, baseType: !884, size: 896)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !922, file: !158, line: 2758, baseType: !644, size: 64, offset: 896)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !758, file: !158, line: 3384, baseType: !927, size: 1472)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !158, line: 3114, size: 1472, elements: !928)
!928 = !{!929, !950, !951, !952, !953}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !927, file: !158, line: 3115, baseType: !930, size: 1216)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !158, line: 2984, size: 1216, elements: !931)
!931 = !{!932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !930, file: !158, line: 2985, baseType: !922, size: 960)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !930, file: !158, line: 2986, baseType: !756, size: 64, offset: 960)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !930, file: !158, line: 2987, baseType: !756, size: 64, offset: 1024)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !930, file: !158, line: 2988, baseType: !756, size: 64, offset: 1088)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !930, file: !158, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !930, file: !158, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !930, file: !158, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !930, file: !158, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !930, file: !158, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !930, file: !158, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !930, file: !158, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !930, file: !158, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !930, file: !158, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !930, file: !158, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !930, file: !158, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !930, file: !158, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !930, file: !158, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !930, file: !158, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !927, file: !158, line: 3117, baseType: !756, size: 64, offset: 1216)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !927, file: !158, line: 3119, baseType: !756, size: 64, offset: 1280)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !927, file: !158, line: 3121, baseType: !756, size: 64, offset: 1344)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !927, file: !158, line: 3123, baseType: !756, size: 64, offset: 1408)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !758, file: !158, line: 3385, baseType: !955, size: 1088)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !158, line: 2874, size: 1088, elements: !956)
!956 = !{!957, !958, !959}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !955, file: !158, line: 2875, baseType: !922, size: 960)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !955, file: !158, line: 2876, baseType: !644, size: 64, offset: 960)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !955, file: !158, line: 2877, baseType: !960, size: 64, offset: 1024)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !158, line: 2856, flags: DIFlagFwdDecl)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !758, file: !158, line: 3386, baseType: !930, size: 1216)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !758, file: !158, line: 3387, baseType: !964, size: 1280)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !158, line: 3093, size: 1280, elements: !965)
!965 = !{!966, !967}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !964, file: !158, line: 3094, baseType: !930, size: 1216)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !964, file: !158, line: 3095, baseType: !960, size: 64, offset: 1216)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !758, file: !158, line: 3388, baseType: !969, size: 1216)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !158, line: 2824, size: 1216, elements: !970)
!970 = !{!971, !972, !973, !974, !975, !976}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !969, file: !158, line: 2825, baseType: !884, size: 896)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !969, file: !158, line: 2827, baseType: !756, size: 64, offset: 896)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !969, file: !158, line: 2828, baseType: !756, size: 64, offset: 960)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !969, file: !158, line: 2829, baseType: !756, size: 64, offset: 1024)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !969, file: !158, line: 2830, baseType: !756, size: 64, offset: 1088)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !969, file: !158, line: 2831, baseType: !756, size: 64, offset: 1152)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !758, file: !158, line: 3389, baseType: !978, size: 1024)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !158, line: 2850, size: 1024, elements: !979)
!979 = !{!980, !981, !982}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !978, file: !158, line: 2851, baseType: !922, size: 960)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !978, file: !158, line: 2852, baseType: !611, size: 32, offset: 960)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !978, file: !158, line: 2853, baseType: !611, size: 32, offset: 992)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !758, file: !158, line: 3390, baseType: !984, size: 1024)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !158, line: 2857, size: 1024, elements: !985)
!985 = !{!986, !987}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !984, file: !158, line: 2858, baseType: !922, size: 960)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !984, file: !158, line: 2859, baseType: !960, size: 64, offset: 960)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !758, file: !158, line: 3391, baseType: !989, size: 960)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !158, line: 2862, size: 960, elements: !990)
!990 = !{!991}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !989, file: !158, line: 2863, baseType: !922, size: 960)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !758, file: !158, line: 3392, baseType: !993, size: 1472)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !158, line: 3304, size: 1472, elements: !994)
!994 = !{!995}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !993, file: !158, line: 3305, baseType: !927, size: 1472)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !758, file: !158, line: 3393, baseType: !997, size: 1792)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !158, line: 3248, size: 1792, elements: !998)
!998 = !{!999, !1000, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !997, file: !158, line: 3249, baseType: !927, size: 1472)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !997, file: !158, line: 3251, baseType: !1001, size: 64, offset: 1472)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1003, line: 463, size: 1152, elements: !1004)
!1003 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1004 = !{!1005, !1169, !1273, !1274, !1277, !1280, !1281, !1282, !1283, !1284, !1285, !1309, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1002, file: !1003, line: 464, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1008)
!1008 = !{!1009, !1058, !1071, !1085, !1137, !1150}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1007, file: !135, line: 197, baseType: !1010, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1011)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1013)
!1013 = !{!1014, !1015, !1016, !1017, !1018, !1019, !1046, !1055, !1056, !1057}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1012, file: !135, line: 119, baseType: !1011, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1012, file: !135, line: 122, baseType: !1011, size: 64, offset: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1012, file: !135, line: 123, baseType: !1011, size: 64, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1012, file: !135, line: 126, baseType: !611, size: 32, offset: 192)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1012, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1012, file: !135, line: 165, baseType: !1020, size: 192, offset: 256)
!1020 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1021)
!1021 = !{!1022, !1035, !1041}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1020, file: !135, line: 137, baseType: !1023, size: 128)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1024)
!1024 = !{!1025, !1034}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1023, file: !135, line: 135, baseType: !1026, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1028)
!1028 = !{!1029, !1030, !1031, !1032, !1033}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1027, file: !135, line: 96, baseType: !1026, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1027, file: !135, line: 97, baseType: !1026, size: 64, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1027, file: !135, line: 101, baseType: !756, size: 64, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1027, file: !135, line: 106, baseType: !756, size: 64, offset: 192)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1027, file: !135, line: 111, baseType: !756, size: 64, offset: 256)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1023, file: !135, line: 136, baseType: !1026, size: 64, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1020, file: !135, line: 151, baseType: !1036, size: 192)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1037)
!1037 = !{!1038, !1039, !1040}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1036, file: !135, line: 141, baseType: !756, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1036, file: !135, line: 145, baseType: !756, size: 64, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1036, file: !135, line: 150, baseType: !611, size: 32, offset: 128)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1020, file: !135, line: 164, baseType: !1042, size: 128)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1043)
!1043 = !{!1044, !1045}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1042, file: !135, line: 161, baseType: !756, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1042, file: !135, line: 163, baseType: !876, size: 32, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1012, file: !135, line: 168, baseType: !1047, size: 64, offset: 448)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1049)
!1049 = !{!1050, !1051, !1052, !1053, !1054}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1048, file: !135, line: 70, baseType: !1047, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1048, file: !135, line: 73, baseType: !1011, size: 64, offset: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1048, file: !135, line: 78, baseType: !756, size: 64, offset: 128)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1048, file: !135, line: 85, baseType: !644, size: 64, offset: 192)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1048, file: !135, line: 88, baseType: !611, size: 32, offset: 256)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1012, file: !135, line: 173, baseType: !644, size: 64, offset: 512)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1012, file: !135, line: 173, baseType: !644, size: 64, offset: 576)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1012, file: !135, line: 177, baseType: !610, size: 8, offset: 640)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1007, file: !135, line: 200, baseType: !1059, size: 64, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1061)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1062)
!1062 = !{!1063}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1061, file: !135, line: 185, baseType: !1064, size: 128)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1065)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1066)
!1066 = !{!1067, !1068, !1069}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1065, file: !135, line: 184, baseType: !7, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1065, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1065, file: !135, line: 184, baseType: !1070, size: 64, offset: 64)
!1070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 64, elements: !654)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1007, file: !135, line: 203, baseType: !1072, size: 64, offset: 128)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1074)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1075)
!1075 = !{!1076}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1074, file: !135, line: 189, baseType: !1077, size: 128)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1078)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1079)
!1079 = !{!1080, !1081, !1082}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1078, file: !135, line: 188, baseType: !7, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1078, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1078, file: !135, line: 188, baseType: !1083, size: 64, offset: 64)
!1083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1084, size: 64, elements: !654)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1047)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1007, file: !135, line: 207, baseType: !1086, size: 64, offset: 192)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1087, line: 144, baseType: !1088)
!1087 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1087, line: 100, size: 896, elements: !1090)
!1090 = !{!1091, !1099, !1104, !1109, !1111, !1114, !1115, !1116, !1117, !1118, !1123, !1125, !1126, !1131, !1136}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1089, file: !1087, line: 102, baseType: !1092, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1087, line: 52, baseType: !1093)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!1096, !1097}
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1087, line: 47, baseType: !7)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1089, file: !1087, line: 105, baseType: !1100, size: 64, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1087, line: 59, baseType: !1101)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!611, !1097, !1097}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1089, file: !1087, line: 108, baseType: !1105, size: 64, offset: 128)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1087, line: 63, baseType: !1106)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{null, !615}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1089, file: !1087, line: 111, baseType: !1110, size: 64, offset: 192)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1089, file: !1087, line: 114, baseType: !1112, size: 64, offset: 256)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1113, line: 46, baseType: !710)
!1113 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1089, file: !1087, line: 117, baseType: !1112, size: 64, offset: 320)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1089, file: !1087, line: 120, baseType: !1112, size: 64, offset: 384)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1089, file: !1087, line: 124, baseType: !7, size: 32, offset: 448)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1089, file: !1087, line: 128, baseType: !7, size: 32, offset: 480)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1089, file: !1087, line: 131, baseType: !1119, size: 64, offset: 512)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1087, line: 75, baseType: !1120)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!615, !1112, !1112}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1089, file: !1087, line: 132, baseType: !1124, size: 64, offset: 576)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1087, line: 78, baseType: !1106)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1089, file: !1087, line: 135, baseType: !615, size: 64, offset: 640)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1089, file: !1087, line: 136, baseType: !1127, size: 64, offset: 704)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1087, line: 82, baseType: !1128)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{!615, !615, !1112, !1112}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1089, file: !1087, line: 137, baseType: !1132, size: 64, offset: 768)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1087, line: 83, baseType: !1133)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{null, !615, !615}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1089, file: !1087, line: 141, baseType: !7, size: 32, offset: 832)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1007, file: !135, line: 211, baseType: !1138, size: 64, offset: 256)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !158, line: 183, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !158, line: 183, size: 128, elements: !1141)
!1141 = !{!1142}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1140, file: !158, line: 183, baseType: !1143, size: 128)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !158, line: 182, baseType: !1144)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !158, line: 182, size: 128, elements: !1145)
!1145 = !{!1146, !1147, !1148}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1144, file: !158, line: 182, baseType: !7, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1144, file: !158, line: 182, baseType: !7, size: 32, offset: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1144, file: !158, line: 182, baseType: !1149, size: 64, offset: 64)
!1149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, size: 64, elements: !654)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1007, file: !135, line: 220, baseType: !1151, size: 64, offset: 320)
!1151 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1152)
!1152 = !{!1153, !1154}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1151, file: !135, line: 218, baseType: !1138, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1151, file: !135, line: 219, baseType: !1155, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1157, line: 29, baseType: !1158)
!1157 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1157, line: 29, size: 96, elements: !1159)
!1159 = !{!1160}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1158, file: !1157, line: 29, baseType: !1161, size: 96)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1157, line: 27, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1157, line: 27, size: 96, elements: !1163)
!1163 = !{!1164, !1165, !1166}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1162, file: !1157, line: 27, baseType: !7, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1162, file: !1157, line: 27, baseType: !7, size: 32, offset: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1162, file: !1157, line: 27, baseType: !1167, size: 8, offset: 64)
!1167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1168, size: 8, elements: !654)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1157, line: 26, baseType: !610)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1002, file: !1003, line: 467, baseType: !1170, size: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !142, line: 374, size: 640, elements: !1172)
!1172 = !{!1173, !1248, !1249, !1262, !1263, !1264, !1265, !1266, !1267, !1269, !1271, !1272}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1171, file: !142, line: 377, baseType: !1174, size: 64)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !645, line: 111, baseType: !1175)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !142, line: 217, size: 832, elements: !1177)
!1177 = !{!1178, !1213, !1214, !1215, !1218, !1222, !1223, !1224, !1242, !1243, !1244, !1245, !1246, !1247}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1176, file: !142, line: 219, baseType: !1179, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !142, line: 151, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !142, line: 151, size: 128, elements: !1182)
!1182 = !{!1183}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1181, file: !142, line: 151, baseType: !1184, size: 128)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !142, line: 150, baseType: !1185)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !142, line: 150, size: 128, elements: !1186)
!1186 = !{!1187, !1188, !1189}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1185, file: !142, line: 150, baseType: !7, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1185, file: !142, line: 150, baseType: !7, size: 32, offset: 32)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1185, file: !142, line: 150, baseType: !1190, size: 64, offset: 64)
!1190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1191, size: 64, elements: !654)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !645, line: 108, baseType: !1192)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !142, line: 122, size: 512, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1205, !1206, !1207, !1208, !1209, !1210, !1211}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1193, file: !142, line: 124, baseType: !1175, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1193, file: !142, line: 125, baseType: !1175, size: 64, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1193, file: !142, line: 131, baseType: !1198, size: 64, offset: 128)
!1198 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !142, line: 128, size: 64, elements: !1199)
!1199 = !{!1200, !1204}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1198, file: !142, line: 129, baseType: !1201, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !645, line: 66, baseType: !1202)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !645, line: 65, flags: DIFlagFwdDecl)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1198, file: !142, line: 130, baseType: !644, size: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1193, file: !142, line: 134, baseType: !615, size: 64, offset: 192)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1193, file: !142, line: 137, baseType: !756, size: 64, offset: 256)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1193, file: !142, line: 138, baseType: !876, size: 32, offset: 320)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1193, file: !142, line: 142, baseType: !7, size: 32, offset: 352)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1193, file: !142, line: 144, baseType: !611, size: 32, offset: 384)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1193, file: !142, line: 145, baseType: !611, size: 32, offset: 416)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1193, file: !142, line: 146, baseType: !1212, size: 64, offset: 448)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !142, line: 119, baseType: !727)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1176, file: !142, line: 220, baseType: !1179, size: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1176, file: !142, line: 223, baseType: !615, size: 64, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1176, file: !142, line: 226, baseType: !1216, size: 64, offset: 192)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 185, flags: DIFlagFwdDecl)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1176, file: !142, line: 229, baseType: !1219, size: 128, offset: 256)
!1219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1220, size: 128, elements: !711)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !142, line: 229, flags: DIFlagFwdDecl)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1176, file: !142, line: 232, baseType: !1175, size: 64, offset: 384)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1176, file: !142, line: 233, baseType: !1175, size: 64, offset: 448)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1176, file: !142, line: 238, baseType: !1225, size: 64, offset: 512)
!1225 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !142, line: 235, size: 64, elements: !1226)
!1226 = !{!1227, !1233}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1225, file: !142, line: 236, baseType: !1228, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !142, line: 273, size: 128, elements: !1230)
!1230 = !{!1231, !1232}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1229, file: !142, line: 275, baseType: !1201, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1229, file: !142, line: 278, baseType: !1201, size: 64, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1225, file: !142, line: 237, baseType: !1234, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !142, line: 259, size: 320, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1240, !1241}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1235, file: !142, line: 261, baseType: !644, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1235, file: !142, line: 262, baseType: !644, size: 64, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1235, file: !142, line: 266, baseType: !644, size: 64, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1235, file: !142, line: 267, baseType: !644, size: 64, offset: 192)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1235, file: !142, line: 270, baseType: !611, size: 32, offset: 256)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1176, file: !142, line: 241, baseType: !1212, size: 64, offset: 576)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1176, file: !142, line: 244, baseType: !611, size: 32, offset: 640)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1176, file: !142, line: 247, baseType: !611, size: 32, offset: 672)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1176, file: !142, line: 250, baseType: !611, size: 32, offset: 704)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1176, file: !142, line: 253, baseType: !611, size: 32, offset: 736)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1176, file: !142, line: 256, baseType: !611, size: 32, offset: 768)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1171, file: !142, line: 378, baseType: !1174, size: 64, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1171, file: !142, line: 381, baseType: !1250, size: 64, offset: 128)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !142, line: 282, baseType: !1252)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !142, line: 282, size: 128, elements: !1253)
!1253 = !{!1254}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1252, file: !142, line: 282, baseType: !1255, size: 128)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !142, line: 281, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !142, line: 281, size: 128, elements: !1257)
!1257 = !{!1258, !1259, !1260}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1256, file: !142, line: 281, baseType: !7, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1256, file: !142, line: 281, baseType: !7, size: 32, offset: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1256, file: !142, line: 281, baseType: !1261, size: 64, offset: 64)
!1261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1174, size: 64, elements: !654)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1171, file: !142, line: 384, baseType: !611, size: 32, offset: 192)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1171, file: !142, line: 387, baseType: !611, size: 32, offset: 224)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1171, file: !142, line: 390, baseType: !611, size: 32, offset: 256)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1171, file: !142, line: 394, baseType: !1250, size: 64, offset: 320)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1171, file: !142, line: 396, baseType: !141, size: 32, offset: 384)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1171, file: !142, line: 399, baseType: !1268, size: 64, offset: 416)
!1268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 64, elements: !711)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1171, file: !142, line: 402, baseType: !1270, size: 64, offset: 480)
!1270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !711)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1171, file: !142, line: 406, baseType: !611, size: 32, offset: 544)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1171, file: !142, line: 409, baseType: !611, size: 32, offset: 576)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1002, file: !1003, line: 470, baseType: !1202, size: 64, offset: 128)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1002, file: !1003, line: 473, baseType: !1275, size: 64, offset: 192)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1003, line: 166, flags: DIFlagFwdDecl)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1002, file: !1003, line: 476, baseType: !1278, size: 64, offset: 256)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1003, line: 476, flags: DIFlagFwdDecl)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1002, file: !1003, line: 479, baseType: !1086, size: 64, offset: 320)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1002, file: !1003, line: 484, baseType: !756, size: 64, offset: 384)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1002, file: !1003, line: 488, baseType: !756, size: 64, offset: 448)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1002, file: !1003, line: 493, baseType: !756, size: 64, offset: 512)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1002, file: !1003, line: 496, baseType: !756, size: 64, offset: 576)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1002, file: !1003, line: 501, baseType: !1286, size: 64, offset: 640)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !153, line: 2355, size: 576, elements: !1288)
!1288 = !{!1289, !1292, !1293, !1294, !1295, !1297, !1298, !1303, !1304, !1305, !1306, !1307, !1308}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1287, file: !153, line: 2356, baseType: !1290, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !153, line: 2356, flags: DIFlagFwdDecl)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1287, file: !153, line: 2357, baseType: !616, size: 64, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1287, file: !153, line: 2358, baseType: !611, size: 32, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1287, file: !153, line: 2359, baseType: !611, size: 32, offset: 160)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1287, file: !153, line: 2360, baseType: !1296, size: 128, offset: 192)
!1296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 128, elements: !736)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1287, file: !153, line: 2364, baseType: !611, size: 32, offset: 320)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1287, file: !153, line: 2367, baseType: !1299, size: 128, offset: 384)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !153, line: 2349, size: 128, elements: !1300)
!1300 = !{!1301, !1302}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1299, file: !153, line: 2351, baseType: !644, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1299, file: !153, line: 2352, baseType: !727, size: 64, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1287, file: !153, line: 2371, baseType: !152, size: 32, offset: 512)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1287, file: !153, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1287, file: !153, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1287, file: !153, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1287, file: !153, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1287, file: !153, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1002, file: !1003, line: 504, baseType: !1310, size: 64, offset: 704)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1003, line: 504, flags: DIFlagFwdDecl)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1002, file: !1003, line: 507, baseType: !1086, size: 64, offset: 768)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1002, file: !1003, line: 510, baseType: !611, size: 32, offset: 832)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1002, file: !1003, line: 513, baseType: !611, size: 32, offset: 864)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1002, file: !1003, line: 516, baseType: !876, size: 32, offset: 896)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1002, file: !1003, line: 519, baseType: !876, size: 32, offset: 928)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1002, file: !1003, line: 522, baseType: !7, size: 32, offset: 960)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1002, file: !1003, line: 523, baseType: !7, size: 32, offset: 992)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1002, file: !1003, line: 528, baseType: !616, size: 64, offset: 1024)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1002, file: !1003, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1002, file: !1003, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1002, file: !1003, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1002, file: !1003, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1002, file: !1003, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1002, file: !1003, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1002, file: !1003, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1002, file: !1003, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1002, file: !1003, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1002, file: !1003, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1002, file: !1003, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1002, file: !1003, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1002, file: !1003, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1002, file: !1003, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1002, file: !1003, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1002, file: !1003, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !997, file: !158, line: 3254, baseType: !756, size: 64, offset: 1536)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !997, file: !158, line: 3257, baseType: !756, size: 64, offset: 1600)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !997, file: !158, line: 3258, baseType: !756, size: 64, offset: 1664)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !997, file: !158, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !997, file: !158, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !997, file: !158, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !997, file: !158, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !997, file: !158, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !997, file: !158, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !997, file: !158, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !997, file: !158, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !997, file: !158, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !997, file: !158, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !997, file: !158, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !997, file: !158, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !997, file: !158, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !997, file: !158, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !997, file: !158, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !997, file: !158, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !997, file: !158, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !997, file: !158, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !758, file: !158, line: 3394, baseType: !1358, size: 1344)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !158, line: 2279, size: 1344, elements: !1359)
!1359 = !{!1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1385, !1386, !1387, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1358, file: !158, line: 2280, baseType: !794, size: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1358, file: !158, line: 2281, baseType: !756, size: 64, offset: 192)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1358, file: !158, line: 2282, baseType: !756, size: 64, offset: 256)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1358, file: !158, line: 2283, baseType: !756, size: 64, offset: 320)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1358, file: !158, line: 2284, baseType: !756, size: 64, offset: 384)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1358, file: !158, line: 2285, baseType: !7, size: 32, offset: 448)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1358, file: !158, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1358, file: !158, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1358, file: !158, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1358, file: !158, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1358, file: !158, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1358, file: !158, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1358, file: !158, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1358, file: !158, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1358, file: !158, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1358, file: !158, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1358, file: !158, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1358, file: !158, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1358, file: !158, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1358, file: !158, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1358, file: !158, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1358, file: !158, line: 2305, baseType: !7, size: 32, offset: 512)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1358, file: !158, line: 2306, baseType: !1383, size: 32, offset: 544)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1384, line: 31, baseType: !611)
!1384 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1358, file: !158, line: 2307, baseType: !756, size: 64, offset: 576)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1358, file: !158, line: 2308, baseType: !756, size: 64, offset: 640)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1358, file: !158, line: 2314, baseType: !1388, size: 64, offset: 704)
!1388 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !158, line: 2309, size: 64, elements: !1389)
!1389 = !{!1390, !1391, !1392}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1388, file: !158, line: 2310, baseType: !611, size: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1388, file: !158, line: 2311, baseType: !616, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1388, file: !158, line: 2312, baseType: !1393, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !158, line: 2277, flags: DIFlagFwdDecl)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1358, file: !158, line: 2315, baseType: !756, size: 64, offset: 768)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1358, file: !158, line: 2316, baseType: !756, size: 64, offset: 832)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1358, file: !158, line: 2317, baseType: !756, size: 64, offset: 896)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1358, file: !158, line: 2318, baseType: !756, size: 64, offset: 960)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1358, file: !158, line: 2319, baseType: !756, size: 64, offset: 1024)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1358, file: !158, line: 2320, baseType: !756, size: 64, offset: 1088)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1358, file: !158, line: 2321, baseType: !756, size: 64, offset: 1152)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1358, file: !158, line: 2322, baseType: !756, size: 64, offset: 1216)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1358, file: !158, line: 2324, baseType: !1404, size: 64, offset: 1280)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !158, line: 2324, flags: DIFlagFwdDecl)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !758, file: !158, line: 3395, baseType: !1407, size: 320)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !158, line: 1469, size: 320, elements: !1408)
!1408 = !{!1409, !1410, !1411}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1407, file: !158, line: 1470, baseType: !794, size: 192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1407, file: !158, line: 1471, baseType: !756, size: 64, offset: 192)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1407, file: !158, line: 1472, baseType: !756, size: 64, offset: 256)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !758, file: !158, line: 3396, baseType: !1413, size: 320)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !158, line: 1482, size: 320, elements: !1414)
!1414 = !{!1415, !1416, !1417}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1413, file: !158, line: 1483, baseType: !794, size: 192)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1413, file: !158, line: 1484, baseType: !611, size: 32, offset: 192)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1413, file: !158, line: 1485, baseType: !1149, size: 64, offset: 256)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !758, file: !158, line: 3397, baseType: !1419, size: 384)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !158, line: 1829, size: 384, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1419, file: !158, line: 1830, baseType: !794, size: 192)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1419, file: !158, line: 1831, baseType: !876, size: 32, offset: 192)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1419, file: !158, line: 1832, baseType: !756, size: 64, offset: 256)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1419, file: !158, line: 1835, baseType: !1149, size: 64, offset: 320)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !758, file: !158, line: 3398, baseType: !1426, size: 704)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !158, line: 1898, size: 704, elements: !1427)
!1427 = !{!1428, !1429, !1430, !1434, !1435, !1438}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1426, file: !158, line: 1899, baseType: !794, size: 192)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1426, file: !158, line: 1902, baseType: !756, size: 64, offset: 192)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1426, file: !158, line: 1905, baseType: !1431, size: 64, offset: 256)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !645, line: 58, baseType: !1432)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !645, line: 57, flags: DIFlagFwdDecl)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1426, file: !158, line: 1908, baseType: !7, size: 32, offset: 320)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1426, file: !158, line: 1911, baseType: !1436, size: 64, offset: 384)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !158, line: 1876, flags: DIFlagFwdDecl)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1426, file: !158, line: 1914, baseType: !1439, size: 256, offset: 448)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !158, line: 1883, size: 256, elements: !1440)
!1440 = !{!1441, !1443, !1444, !1449}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1439, file: !158, line: 1884, baseType: !1442, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1439, file: !158, line: 1885, baseType: !1442, size: 64, offset: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1439, file: !158, line: 1891, baseType: !1445, size: 64, offset: 128)
!1445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1439, file: !158, line: 1891, size: 64, elements: !1446)
!1446 = !{!1447, !1448}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1445, file: !158, line: 1891, baseType: !1431, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1445, file: !158, line: 1891, baseType: !756, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1439, file: !158, line: 1892, baseType: !1450, size: 64, offset: 192)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !758, file: !158, line: 3399, baseType: !1452, size: 704)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !158, line: 2008, size: 704, elements: !1453)
!1453 = !{!1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1452, file: !158, line: 2009, baseType: !794, size: 192)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1452, file: !158, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1452, file: !158, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1452, file: !158, line: 2014, baseType: !876, size: 32, offset: 224)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1452, file: !158, line: 2016, baseType: !756, size: 64, offset: 256)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1452, file: !158, line: 2017, baseType: !1138, size: 64, offset: 320)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1452, file: !158, line: 2019, baseType: !756, size: 64, offset: 384)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1452, file: !158, line: 2020, baseType: !756, size: 64, offset: 448)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1452, file: !158, line: 2021, baseType: !756, size: 64, offset: 512)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1452, file: !158, line: 2022, baseType: !756, size: 64, offset: 576)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1452, file: !158, line: 2023, baseType: !756, size: 64, offset: 640)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !758, file: !158, line: 3400, baseType: !1466, size: 832)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !158, line: 2430, size: 832, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1466, file: !158, line: 2431, baseType: !794, size: 192)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1466, file: !158, line: 2433, baseType: !756, size: 64, offset: 192)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1466, file: !158, line: 2434, baseType: !756, size: 64, offset: 256)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1466, file: !158, line: 2435, baseType: !756, size: 64, offset: 320)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1466, file: !158, line: 2436, baseType: !756, size: 64, offset: 384)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1466, file: !158, line: 2437, baseType: !1138, size: 64, offset: 448)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1466, file: !158, line: 2438, baseType: !756, size: 64, offset: 512)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1466, file: !158, line: 2440, baseType: !756, size: 64, offset: 576)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1466, file: !158, line: 2441, baseType: !756, size: 64, offset: 640)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1466, file: !158, line: 2443, baseType: !1478, size: 128, offset: 704)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !158, line: 182, baseType: !1479)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !158, line: 182, size: 128, elements: !1480)
!1480 = !{!1481}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1479, file: !158, line: 182, baseType: !1143, size: 128)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !758, file: !158, line: 3401, baseType: !1483, size: 320)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !158, line: 3327, size: 320, elements: !1484)
!1484 = !{!1485, !1486, !1493}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1483, file: !158, line: 3329, baseType: !794, size: 192)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1483, file: !158, line: 3330, baseType: !1487, size: 64, offset: 192)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !158, line: 3320, size: 192, elements: !1489)
!1489 = !{!1490, !1491, !1492}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1488, file: !158, line: 3322, baseType: !1487, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1488, file: !158, line: 3323, baseType: !1487, size: 64, offset: 64)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1488, file: !158, line: 3324, baseType: !756, size: 64, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1483, file: !158, line: 3331, baseType: !1487, size: 64, offset: 256)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !758, file: !158, line: 3402, baseType: !1495, size: 256)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !158, line: 1540, size: 256, elements: !1496)
!1496 = !{!1497, !1498}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1495, file: !158, line: 1541, baseType: !794, size: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1495, file: !158, line: 1542, baseType: !1499, size: 64, offset: 192)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !158, line: 1538, baseType: !1501)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !158, line: 1538, size: 192, elements: !1502)
!1502 = !{!1503}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1501, file: !158, line: 1538, baseType: !1504, size: 192)
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !158, line: 1537, baseType: !1505)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !158, line: 1537, size: 192, elements: !1506)
!1506 = !{!1507, !1508, !1509}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1505, file: !158, line: 1537, baseType: !7, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1505, file: !158, line: 1537, baseType: !7, size: 32, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1505, file: !158, line: 1537, baseType: !1510, size: 128, offset: 64)
!1510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1511, size: 128, elements: !654)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !158, line: 1535, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !158, line: 1532, size: 128, elements: !1513)
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1512, file: !158, line: 1533, baseType: !756, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1512, file: !158, line: 1534, baseType: !756, size: 64, offset: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !758, file: !158, line: 3403, baseType: !1517, size: 512)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !158, line: 1938, size: 512, elements: !1518)
!1518 = !{!1519, !1520, !1521, !1522, !1528, !1529, !1530}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1517, file: !158, line: 1939, baseType: !794, size: 192)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1517, file: !158, line: 1940, baseType: !876, size: 32, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1517, file: !158, line: 1941, baseType: !157, size: 32, offset: 224)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1517, file: !158, line: 1946, baseType: !1523, size: 32, offset: 256)
!1523 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !158, line: 1942, size: 32, elements: !1524)
!1524 = !{!1525, !1526, !1527}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1523, file: !158, line: 1943, baseType: !176, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1523, file: !158, line: 1944, baseType: !183, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1523, file: !158, line: 1945, baseType: !190, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1517, file: !158, line: 1950, baseType: !1201, size: 64, offset: 320)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1517, file: !158, line: 1951, baseType: !1201, size: 64, offset: 384)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1517, file: !158, line: 1953, baseType: !1149, size: 64, offset: 448)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !758, file: !158, line: 3404, baseType: !1532, size: 1664)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !158, line: 3337, size: 1664, elements: !1533)
!1533 = !{!1534, !1535}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1532, file: !158, line: 3338, baseType: !794, size: 192)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1532, file: !158, line: 3341, baseType: !1536, size: 1472, offset: 192)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1537, line: 410, size: 1472, elements: !1538)
!1537 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1538 = !{!1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1536, file: !1537, line: 412, baseType: !611, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1536, file: !1537, line: 413, baseType: !611, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1536, file: !1537, line: 414, baseType: !611, size: 32, offset: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1536, file: !1537, line: 415, baseType: !611, size: 32, offset: 96)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1536, file: !1537, line: 416, baseType: !611, size: 32, offset: 128)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1536, file: !1537, line: 417, baseType: !611, size: 32, offset: 160)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1536, file: !1537, line: 418, baseType: !610, size: 8, offset: 192)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1536, file: !1537, line: 419, baseType: !610, size: 8, offset: 200)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1536, file: !1537, line: 420, baseType: !1548, size: 8, offset: 208)
!1548 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1536, file: !1537, line: 421, baseType: !1548, size: 8, offset: 216)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1536, file: !1537, line: 422, baseType: !1548, size: 8, offset: 224)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1536, file: !1537, line: 423, baseType: !1548, size: 8, offset: 232)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1536, file: !1537, line: 424, baseType: !1548, size: 8, offset: 240)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1536, file: !1537, line: 425, baseType: !1548, size: 8, offset: 248)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1536, file: !1537, line: 426, baseType: !1548, size: 8, offset: 256)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1536, file: !1537, line: 427, baseType: !1548, size: 8, offset: 264)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1536, file: !1537, line: 428, baseType: !1548, size: 8, offset: 272)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1536, file: !1537, line: 429, baseType: !1548, size: 8, offset: 280)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1536, file: !1537, line: 430, baseType: !1548, size: 8, offset: 288)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1536, file: !1537, line: 431, baseType: !1548, size: 8, offset: 296)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1536, file: !1537, line: 432, baseType: !1548, size: 8, offset: 304)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1536, file: !1537, line: 433, baseType: !1548, size: 8, offset: 312)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1536, file: !1537, line: 434, baseType: !1548, size: 8, offset: 320)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1536, file: !1537, line: 435, baseType: !1548, size: 8, offset: 328)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1536, file: !1537, line: 436, baseType: !1548, size: 8, offset: 336)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1536, file: !1537, line: 437, baseType: !1548, size: 8, offset: 344)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1536, file: !1537, line: 438, baseType: !1548, size: 8, offset: 352)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1536, file: !1537, line: 439, baseType: !1548, size: 8, offset: 360)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1536, file: !1537, line: 440, baseType: !1548, size: 8, offset: 368)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1536, file: !1537, line: 441, baseType: !1548, size: 8, offset: 376)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1536, file: !1537, line: 442, baseType: !1548, size: 8, offset: 384)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1536, file: !1537, line: 443, baseType: !1548, size: 8, offset: 392)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1536, file: !1537, line: 444, baseType: !1548, size: 8, offset: 400)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1536, file: !1537, line: 445, baseType: !1548, size: 8, offset: 408)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1536, file: !1537, line: 446, baseType: !1548, size: 8, offset: 416)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1536, file: !1537, line: 447, baseType: !1548, size: 8, offset: 424)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1536, file: !1537, line: 448, baseType: !1548, size: 8, offset: 432)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1536, file: !1537, line: 449, baseType: !1548, size: 8, offset: 440)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1536, file: !1537, line: 450, baseType: !1548, size: 8, offset: 448)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1536, file: !1537, line: 451, baseType: !1548, size: 8, offset: 456)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1536, file: !1537, line: 452, baseType: !1548, size: 8, offset: 464)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1536, file: !1537, line: 453, baseType: !1548, size: 8, offset: 472)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1536, file: !1537, line: 454, baseType: !1548, size: 8, offset: 480)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1536, file: !1537, line: 455, baseType: !1548, size: 8, offset: 488)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1536, file: !1537, line: 456, baseType: !1548, size: 8, offset: 496)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1536, file: !1537, line: 457, baseType: !1548, size: 8, offset: 504)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1536, file: !1537, line: 458, baseType: !1548, size: 8, offset: 512)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1536, file: !1537, line: 459, baseType: !1548, size: 8, offset: 520)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1536, file: !1537, line: 460, baseType: !1548, size: 8, offset: 528)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1536, file: !1537, line: 461, baseType: !1548, size: 8, offset: 536)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1536, file: !1537, line: 462, baseType: !1548, size: 8, offset: 544)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1536, file: !1537, line: 463, baseType: !1548, size: 8, offset: 552)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1536, file: !1537, line: 464, baseType: !1548, size: 8, offset: 560)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1536, file: !1537, line: 465, baseType: !1548, size: 8, offset: 568)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1536, file: !1537, line: 466, baseType: !1548, size: 8, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1536, file: !1537, line: 467, baseType: !1548, size: 8, offset: 584)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1536, file: !1537, line: 468, baseType: !1548, size: 8, offset: 592)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1536, file: !1537, line: 469, baseType: !1548, size: 8, offset: 600)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1536, file: !1537, line: 470, baseType: !1548, size: 8, offset: 608)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1536, file: !1537, line: 471, baseType: !1548, size: 8, offset: 616)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1536, file: !1537, line: 472, baseType: !1548, size: 8, offset: 624)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1536, file: !1537, line: 473, baseType: !1548, size: 8, offset: 632)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1536, file: !1537, line: 474, baseType: !1548, size: 8, offset: 640)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1536, file: !1537, line: 475, baseType: !1548, size: 8, offset: 648)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1536, file: !1537, line: 476, baseType: !1548, size: 8, offset: 656)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1536, file: !1537, line: 477, baseType: !1548, size: 8, offset: 664)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1536, file: !1537, line: 478, baseType: !1548, size: 8, offset: 672)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1536, file: !1537, line: 479, baseType: !1548, size: 8, offset: 680)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1536, file: !1537, line: 480, baseType: !1548, size: 8, offset: 688)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1536, file: !1537, line: 481, baseType: !1548, size: 8, offset: 696)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1536, file: !1537, line: 482, baseType: !1548, size: 8, offset: 704)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1536, file: !1537, line: 483, baseType: !1548, size: 8, offset: 712)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1536, file: !1537, line: 484, baseType: !1548, size: 8, offset: 720)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1536, file: !1537, line: 485, baseType: !1548, size: 8, offset: 728)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1536, file: !1537, line: 486, baseType: !1548, size: 8, offset: 736)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1536, file: !1537, line: 487, baseType: !1548, size: 8, offset: 744)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1536, file: !1537, line: 488, baseType: !1548, size: 8, offset: 752)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1536, file: !1537, line: 489, baseType: !1548, size: 8, offset: 760)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1536, file: !1537, line: 490, baseType: !1548, size: 8, offset: 768)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1536, file: !1537, line: 491, baseType: !1548, size: 8, offset: 776)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1536, file: !1537, line: 492, baseType: !1548, size: 8, offset: 784)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1536, file: !1537, line: 493, baseType: !1548, size: 8, offset: 792)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1536, file: !1537, line: 494, baseType: !1548, size: 8, offset: 800)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1536, file: !1537, line: 495, baseType: !1548, size: 8, offset: 808)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1536, file: !1537, line: 496, baseType: !1548, size: 8, offset: 816)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1536, file: !1537, line: 497, baseType: !1548, size: 8, offset: 824)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1536, file: !1537, line: 498, baseType: !1548, size: 8, offset: 832)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1536, file: !1537, line: 499, baseType: !1548, size: 8, offset: 840)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1536, file: !1537, line: 500, baseType: !1548, size: 8, offset: 848)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1536, file: !1537, line: 501, baseType: !1548, size: 8, offset: 856)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1536, file: !1537, line: 502, baseType: !1548, size: 8, offset: 864)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1536, file: !1537, line: 503, baseType: !1548, size: 8, offset: 872)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1536, file: !1537, line: 504, baseType: !1548, size: 8, offset: 880)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1536, file: !1537, line: 505, baseType: !1548, size: 8, offset: 888)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1536, file: !1537, line: 506, baseType: !1548, size: 8, offset: 896)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1536, file: !1537, line: 507, baseType: !1548, size: 8, offset: 904)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1536, file: !1537, line: 508, baseType: !1548, size: 8, offset: 912)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1536, file: !1537, line: 509, baseType: !1548, size: 8, offset: 920)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1536, file: !1537, line: 510, baseType: !1548, size: 8, offset: 928)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1536, file: !1537, line: 511, baseType: !1548, size: 8, offset: 936)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1536, file: !1537, line: 512, baseType: !1548, size: 8, offset: 944)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1536, file: !1537, line: 513, baseType: !1548, size: 8, offset: 952)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1536, file: !1537, line: 514, baseType: !1548, size: 8, offset: 960)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1536, file: !1537, line: 515, baseType: !1548, size: 8, offset: 968)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1536, file: !1537, line: 516, baseType: !1548, size: 8, offset: 976)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1536, file: !1537, line: 517, baseType: !1548, size: 8, offset: 984)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1536, file: !1537, line: 518, baseType: !1548, size: 8, offset: 992)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1536, file: !1537, line: 519, baseType: !1548, size: 8, offset: 1000)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1536, file: !1537, line: 520, baseType: !1548, size: 8, offset: 1008)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1536, file: !1537, line: 521, baseType: !1548, size: 8, offset: 1016)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1536, file: !1537, line: 522, baseType: !1548, size: 8, offset: 1024)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1536, file: !1537, line: 523, baseType: !1548, size: 8, offset: 1032)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1536, file: !1537, line: 524, baseType: !1548, size: 8, offset: 1040)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1536, file: !1537, line: 525, baseType: !1548, size: 8, offset: 1048)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1536, file: !1537, line: 526, baseType: !1548, size: 8, offset: 1056)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1536, file: !1537, line: 527, baseType: !1548, size: 8, offset: 1064)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1536, file: !1537, line: 528, baseType: !1548, size: 8, offset: 1072)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1536, file: !1537, line: 529, baseType: !1548, size: 8, offset: 1080)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1536, file: !1537, line: 530, baseType: !1548, size: 8, offset: 1088)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1536, file: !1537, line: 531, baseType: !1548, size: 8, offset: 1096)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1536, file: !1537, line: 532, baseType: !1548, size: 8, offset: 1104)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1536, file: !1537, line: 533, baseType: !1548, size: 8, offset: 1112)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1536, file: !1537, line: 534, baseType: !1548, size: 8, offset: 1120)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1536, file: !1537, line: 535, baseType: !1548, size: 8, offset: 1128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1536, file: !1537, line: 536, baseType: !1548, size: 8, offset: 1136)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1536, file: !1537, line: 537, baseType: !1548, size: 8, offset: 1144)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1536, file: !1537, line: 538, baseType: !1548, size: 8, offset: 1152)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1536, file: !1537, line: 539, baseType: !1548, size: 8, offset: 1160)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1536, file: !1537, line: 540, baseType: !1548, size: 8, offset: 1168)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1536, file: !1537, line: 541, baseType: !1548, size: 8, offset: 1176)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1536, file: !1537, line: 542, baseType: !1548, size: 8, offset: 1184)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1536, file: !1537, line: 543, baseType: !1548, size: 8, offset: 1192)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1536, file: !1537, line: 544, baseType: !1548, size: 8, offset: 1200)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1536, file: !1537, line: 545, baseType: !1548, size: 8, offset: 1208)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1536, file: !1537, line: 546, baseType: !1548, size: 8, offset: 1216)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1536, file: !1537, line: 547, baseType: !1548, size: 8, offset: 1224)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1536, file: !1537, line: 548, baseType: !1548, size: 8, offset: 1232)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1536, file: !1537, line: 549, baseType: !1548, size: 8, offset: 1240)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1536, file: !1537, line: 550, baseType: !1548, size: 8, offset: 1248)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1536, file: !1537, line: 551, baseType: !1548, size: 8, offset: 1256)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1536, file: !1537, line: 552, baseType: !1548, size: 8, offset: 1264)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1536, file: !1537, line: 553, baseType: !1548, size: 8, offset: 1272)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1536, file: !1537, line: 554, baseType: !1548, size: 8, offset: 1280)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1536, file: !1537, line: 555, baseType: !1548, size: 8, offset: 1288)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1536, file: !1537, line: 556, baseType: !1548, size: 8, offset: 1296)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1536, file: !1537, line: 557, baseType: !1548, size: 8, offset: 1304)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1536, file: !1537, line: 558, baseType: !1548, size: 8, offset: 1312)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1536, file: !1537, line: 559, baseType: !1548, size: 8, offset: 1320)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1536, file: !1537, line: 560, baseType: !1548, size: 8, offset: 1328)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1536, file: !1537, line: 561, baseType: !1548, size: 8, offset: 1336)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1536, file: !1537, line: 562, baseType: !1548, size: 8, offset: 1344)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1536, file: !1537, line: 563, baseType: !1548, size: 8, offset: 1352)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1536, file: !1537, line: 564, baseType: !1548, size: 8, offset: 1360)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1536, file: !1537, line: 565, baseType: !1548, size: 8, offset: 1368)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1536, file: !1537, line: 566, baseType: !1548, size: 8, offset: 1376)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1536, file: !1537, line: 567, baseType: !1548, size: 8, offset: 1384)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1536, file: !1537, line: 568, baseType: !1548, size: 8, offset: 1392)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1536, file: !1537, line: 569, baseType: !1548, size: 8, offset: 1400)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1536, file: !1537, line: 570, baseType: !1548, size: 8, offset: 1408)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1536, file: !1537, line: 571, baseType: !1548, size: 8, offset: 1416)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1536, file: !1537, line: 572, baseType: !1548, size: 8, offset: 1424)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1536, file: !1537, line: 573, baseType: !1548, size: 8, offset: 1432)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1536, file: !1537, line: 574, baseType: !1548, size: 8, offset: 1440)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !758, file: !158, line: 3405, baseType: !1704, size: 384)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !158, line: 3352, size: 384, elements: !1705)
!1705 = !{!1706, !1707}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1704, file: !158, line: 3353, baseType: !794, size: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1704, file: !158, line: 3356, baseType: !1708, size: 192, offset: 192)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1537, line: 578, size: 192, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1708, file: !1537, line: 580, baseType: !611, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1708, file: !1537, line: 581, baseType: !611, size: 32, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1708, file: !1537, line: 582, baseType: !611, size: 32, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1708, file: !1537, line: 583, baseType: !611, size: 32, offset: 96)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1708, file: !1537, line: 584, baseType: !610, size: 8, offset: 128)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1708, file: !1537, line: 585, baseType: !610, size: 8, offset: 136)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1708, file: !1537, line: 586, baseType: !610, size: 8, offset: 144)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1708, file: !1537, line: 587, baseType: !610, size: 8, offset: 152)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1708, file: !1537, line: 588, baseType: !610, size: 8, offset: 160)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1708, file: !1537, line: 589, baseType: !610, size: 8, offset: 168)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1708, file: !1537, line: 590, baseType: !610, size: 8, offset: 176)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !638, file: !385, line: 178, baseType: !1175, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !638, file: !385, line: 179, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !385, line: 150, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !385, line: 142, size: 320, elements: !1726)
!1726 = !{!1727, !1728, !1729, !1730, !1731, !1732}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1725, file: !385, line: 144, baseType: !756, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1725, file: !385, line: 145, baseType: !644, size: 64, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1725, file: !385, line: 146, baseType: !644, size: 64, offset: 128)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1725, file: !385, line: 147, baseType: !1383, size: 32, offset: 192)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1725, file: !385, line: 148, baseType: !7, size: 32, offset: 224)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1725, file: !385, line: 149, baseType: !610, size: 8, offset: 256)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !638, file: !385, line: 180, baseType: !1734, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !385, line: 162, baseType: !1736)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !385, line: 159, size: 128, elements: !1737)
!1737 = !{!1738, !1739}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1736, file: !385, line: 160, baseType: !756, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1736, file: !385, line: 161, baseType: !727, size: 64, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !638, file: !385, line: 181, baseType: !1741, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !385, line: 181, flags: DIFlagFwdDecl)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !633, file: !385, line: 317, baseType: !1744, size: 64)
!1744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !727, size: 64, elements: !654)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !633, file: !385, line: 318, baseType: !1746, size: 320)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !385, line: 188, size: 320, elements: !1747)
!1747 = !{!1748, !1750, !1773}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1746, file: !385, line: 190, baseType: !1749, size: 192)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 192, elements: !827)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1746, file: !385, line: 193, baseType: !1751, size: 64, offset: 192)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !385, line: 206, size: 320, elements: !1753)
!1753 = !{!1754, !1758, !1759, !1760, !1772}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1752, file: !385, line: 208, baseType: !1755, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !645, line: 62, baseType: !1757)
!1757 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !645, line: 61, flags: DIFlagFwdDecl)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1752, file: !385, line: 211, baseType: !7, size: 32, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1752, file: !385, line: 214, baseType: !727, size: 64, offset: 128)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1752, file: !385, line: 224, baseType: !1761, size: 64, offset: 192)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !385, line: 202, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !385, line: 202, size: 128, elements: !1764)
!1764 = !{!1765}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1763, file: !385, line: 202, baseType: !1766, size: 128)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !385, line: 200, baseType: !1767)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !385, line: 200, size: 128, elements: !1768)
!1768 = !{!1769, !1770, !1771}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1767, file: !385, line: 200, baseType: !7, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1767, file: !385, line: 200, baseType: !7, size: 32, offset: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1767, file: !385, line: 200, baseType: !653, size: 64, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1752, file: !385, line: 234, baseType: !1761, size: 64, offset: 256)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1746, file: !385, line: 197, baseType: !727, size: 64, offset: 256)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !633, file: !385, line: 319, baseType: !816, size: 256)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !633, file: !385, line: 320, baseType: !835, size: 192)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !620)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_info_t", file: !1780, line: 113, size: 224, elements: !1781)
!1780 = !DIFile(filename: "./regs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1781 = !{!1782, !1783, !1784, !1785, !1786, !1787, !1788}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !1779, file: !1780, line: 115, baseType: !611, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "deaths", scope: !1779, file: !1780, line: 116, baseType: !611, size: 32, offset: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "live_length", scope: !1779, file: !1780, line: 117, baseType: !611, size: 32, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "calls_crossed", scope: !1779, file: !1780, line: 118, baseType: !611, size: 32, offset: 96)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "freq_calls_crossed", scope: !1779, file: !1780, line: 119, baseType: !611, size: 32, offset: 128)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "throw_calls_crossed", scope: !1779, file: !1780, line: 120, baseType: !611, size: 32, offset: 160)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "basic_block", scope: !1779, file: !1780, line: 121, baseType: !611, size: 32, offset: 192)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !1790, line: 42, baseType: !710)
!1790 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deps_reg", file: !562, line: 440, size: 320, elements: !1793)
!1793 = !{!1794, !1795, !1796, !1797, !1798, !1799}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !1792, file: !562, line: 442, baseType: !644, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "sets", scope: !1792, file: !562, line: 443, baseType: !644, size: 64, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "implicit_sets", scope: !1792, file: !562, line: 444, baseType: !644, size: 64, offset: 128)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "clobbers", scope: !1792, file: !562, line: 445, baseType: !644, size: 64, offset: 192)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "uses_length", scope: !1792, file: !562, line: 446, baseType: !611, size: 32, offset: 256)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "clobbers_length", scope: !1792, file: !562, line: 447, baseType: !611, size: 32, offset: 288)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_head", file: !696, line: 84, baseType: !695)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !645, line: 47, baseType: !694)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "dw_t", file: !562, line: 221, baseType: !611)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "deps_list_t", file: !562, line: 305, baseType: !1805)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_deps_list", file: !562, line: 297, size: 128, elements: !1807)
!1807 = !{!1808, !1830}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1806, file: !562, line: 300, baseType: !1809, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_link_t", file: !562, line: 280, baseType: !1810)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep_link", file: !562, line: 265, size: 192, elements: !1812)
!1812 = !{!1813, !1827, !1828}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1811, file: !562, line: 268, baseType: !1814, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_node_t", file: !562, line: 261, baseType: !1815)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep_node", file: !562, line: 405, size: 576, elements: !1817)
!1817 = !{!1818, !1819, !1826}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1816, file: !562, line: 408, baseType: !1811, size: 192)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "dep", scope: !1816, file: !562, line: 411, baseType: !1820, size: 192, offset: 192)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep", file: !562, line: 227, size: 192, elements: !1821)
!1821 = !{!1822, !1823, !1824, !1825}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pro", scope: !1820, file: !562, line: 230, baseType: !644, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "con", scope: !1820, file: !562, line: 233, baseType: !644, size: 64, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1820, file: !562, line: 237, baseType: !384, size: 32, offset: 128)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1820, file: !562, line: 241, baseType: !618, size: 32, offset: 160)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "forw", scope: !1816, file: !562, line: 414, baseType: !1811, size: 192, offset: 384)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1811, file: !562, line: 271, baseType: !1810, size: 64, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "prev_nextp", scope: !1811, file: !562, line: 278, baseType: !1829, size: 64, offset: 128)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "n_links", scope: !1806, file: !562, line: 303, baseType: !611, size: 32, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_use_data", file: !562, line: 726, size: 256, elements: !1833)
!1833 = !{!1834, !1835, !1836, !1837}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !1832, file: !562, line: 729, baseType: !611, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1832, file: !562, line: 731, baseType: !644, size: 64, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "next_regno_use", scope: !1832, file: !562, line: 733, baseType: !1831, size: 64, offset: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "next_insn_use", scope: !1832, file: !562, line: 735, baseType: !1831, size: 64, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_pressure_data", file: !562, line: 711, size: 32, elements: !1840)
!1840 = !{!1841, !1842, !1843, !1844}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "clobber_increase", scope: !1839, file: !562, line: 714, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "set_increase", scope: !1839, file: !562, line: 717, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "unused_set_increase", scope: !1839, file: !562, line: 720, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !1839, file: !562, line: 722, baseType: !611, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_set_data", file: !562, line: 741, size: 192, elements: !1848)
!1848 = !{!1849, !1850, !1851}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !1847, file: !562, line: 744, baseType: !611, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1847, file: !562, line: 746, baseType: !644, size: 64, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "next_insn_set", scope: !1847, file: !562, line: 748, baseType: !1846, size: 64, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !645, line: 51, baseType: !1776)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_deps_insn_data_def_heap", file: !562, line: 847, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_deps_insn_data_def_heap", file: !562, line: 847, size: 512, elements: !1856)
!1856 = !{!1857}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1855, file: !562, line: 847, baseType: !1858, size: 512)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_deps_insn_data_def_base", file: !562, line: 846, baseType: !1859)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_deps_insn_data_def_base", file: !562, line: 846, size: 512, elements: !1860)
!1860 = !{!1861, !1862, !1863}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1859, file: !562, line: 846, baseType: !7, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1859, file: !562, line: 846, baseType: !7, size: 32, offset: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1859, file: !562, line: 846, baseType: !1864, size: 448, offset: 64)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1865, size: 448, elements: !654)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "haifa_deps_insn_data_def", file: !562, line: 843, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_haifa_deps_insn_data", file: !562, line: 663, size: 448, elements: !1867)
!1867 = !{!1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "dep_count", scope: !1866, file: !562, line: 668, baseType: !611, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "has_internal_dep", scope: !1866, file: !562, line: 672, baseType: !7, size: 32, offset: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "hard_back_deps", scope: !1866, file: !562, line: 682, baseType: !1804, size: 64, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "spec_back_deps", scope: !1866, file: !562, line: 686, baseType: !1804, size: 64, offset: 128)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "forw_deps", scope: !1866, file: !562, line: 690, baseType: !1804, size: 64, offset: 192)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_back_deps", scope: !1866, file: !562, line: 694, baseType: !1804, size: 64, offset: 256)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_forw_deps", scope: !1866, file: !562, line: 699, baseType: !1804, size: 64, offset: 320)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "cant_move", scope: !1866, file: !562, line: 702, baseType: !7, size: 1, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!1876 = !{!0, !1877, !1916, !1939, !1941, !1943, !1945, !1947, !1949, !1951, !1953, !1955, !1957, !1959, !1961, !1963, !1965, !1983, !1985, !1987, !1989, !1998, !2003}
!1877 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression())
!1878 = distinct !DIGlobalVariable(name: "sched_deps_info", scope: !2, file: !3, line: 56, type: !1879, isLocal: false, isDefinition: true)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_deps_info_def", file: !562, line: 1149, size: 832, elements: !1881)
!1881 = !{!1882, !1887, !1891, !1895, !1896, !1897, !1898, !1899, !1903, !1904, !1905, !1909, !1913, !1914, !1915}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "compute_jump_reg_dependencies", scope: !1880, file: !562, line: 1154, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DISubroutineType(types: !1885)
!1885 = !{null, !644, !1886, !1886, !1886}
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !142, line: 37, baseType: !1802)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "start_insn", scope: !1880, file: !562, line: 1157, baseType: !1888, size: 64, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{null, !644}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "finish_insn", scope: !1880, file: !562, line: 1160, baseType: !1892, size: 64, offset: 128)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{null}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "start_lhs", scope: !1880, file: !562, line: 1163, baseType: !1888, size: 64, offset: 192)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "finish_lhs", scope: !1880, file: !562, line: 1166, baseType: !1892, size: 64, offset: 256)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "start_rhs", scope: !1880, file: !562, line: 1169, baseType: !1888, size: 64, offset: 320)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "finish_rhs", scope: !1880, file: !562, line: 1172, baseType: !1892, size: 64, offset: 384)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_set", scope: !1880, file: !562, line: 1175, baseType: !1900, size: 64, offset: 448)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{null, !611}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_clobber", scope: !1880, file: !562, line: 1178, baseType: !1900, size: 64, offset: 512)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_use", scope: !1880, file: !562, line: 1181, baseType: !1900, size: 64, offset: 576)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "note_mem_dep", scope: !1880, file: !562, line: 1185, baseType: !1906, size: 64, offset: 640)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{null, !644, !644, !644, !618}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "note_dep", scope: !1880, file: !562, line: 1188, baseType: !1910, size: 64, offset: 704)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{null, !644, !618}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "use_cselib", scope: !1880, file: !562, line: 1194, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "use_deps_list", scope: !1880, file: !562, line: 1198, baseType: !7, size: 1, offset: 769, flags: DIFlagBitField, extraData: i64 768)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "generate_spec_deps", scope: !1880, file: !562, line: 1202, baseType: !7, size: 1, offset: 770, flags: DIFlagBitField, extraData: i64 768)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "dn_pool", scope: !2, file: !3, line: 308, type: !1918, isLocal: true, isDefinition: true)
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !1919, line: 58, baseType: !1920)
!1919 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !1919, line: 32, size: 704, elements: !1922)
!1922 = !{!1923, !1924, !1925, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1921, file: !1919, line: 34, baseType: !616, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !1921, file: !1919, line: 38, baseType: !1112, size: 64, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !1921, file: !1919, line: 41, baseType: !1926, size: 64, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !1919, line: 30, baseType: !1927)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !1919, line: 26, size: 64, elements: !1929)
!1929 = !{!1930}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1928, file: !1919, line: 28, baseType: !1927, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !1921, file: !1919, line: 45, baseType: !613, size: 64, offset: 192)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !1921, file: !1919, line: 49, baseType: !1112, size: 64, offset: 256)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !1921, file: !1919, line: 51, baseType: !1112, size: 64, offset: 320)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !1921, file: !1919, line: 52, baseType: !1112, size: 64, offset: 384)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !1921, file: !1919, line: 53, baseType: !1112, size: 64, offset: 448)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !1921, file: !1919, line: 54, baseType: !1926, size: 64, offset: 512)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1921, file: !1919, line: 55, baseType: !1112, size: 64, offset: 576)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !1921, file: !1919, line: 56, baseType: !1112, size: 64, offset: 640)
!1939 = !DIGlobalVariableExpression(var: !1940, expr: !DIExpression())
!1940 = distinct !DIGlobalVariable(name: "dl_pool", scope: !2, file: !3, line: 347, type: !1918, isLocal: true, isDefinition: true)
!1941 = !DIGlobalVariableExpression(var: !1942, expr: !DIExpression())
!1942 = distinct !DIGlobalVariable(name: "reg_pending_sets", scope: !2, file: !3, line: 410, type: !1886, isLocal: true, isDefinition: true)
!1943 = !DIGlobalVariableExpression(var: !1944, expr: !DIExpression())
!1944 = distinct !DIGlobalVariable(name: "reg_pending_clobbers", scope: !2, file: !3, line: 411, type: !1886, isLocal: true, isDefinition: true)
!1945 = !DIGlobalVariableExpression(var: !1946, expr: !DIExpression())
!1946 = distinct !DIGlobalVariable(name: "reg_pending_uses", scope: !2, file: !3, line: 412, type: !1886, isLocal: true, isDefinition: true)
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "reg_pending_barrier", scope: !2, file: !3, line: 413, type: !573, isLocal: true, isDefinition: true)
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "implicit_reg_pending_clobbers", scope: !2, file: !3, line: 421, type: !1789, isLocal: true, isDefinition: true)
!1951 = !DIGlobalVariableExpression(var: !1952, expr: !DIExpression())
!1952 = distinct !DIGlobalVariable(name: "implicit_reg_pending_uses", scope: !2, file: !3, line: 422, type: !1789, isLocal: true, isDefinition: true)
!1953 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression())
!1954 = distinct !DIGlobalVariable(name: "cache_size", scope: !2, file: !3, line: 441, type: !611, isLocal: true, isDefinition: true)
!1955 = !DIGlobalVariableExpression(var: !1956, expr: !DIExpression())
!1956 = distinct !DIGlobalVariable(name: "dn_pool_diff", scope: !2, file: !3, line: 311, type: !611, isLocal: true, isDefinition: true)
!1957 = !DIGlobalVariableExpression(var: !1958, expr: !DIExpression())
!1958 = distinct !DIGlobalVariable(name: "dl_pool_diff", scope: !2, file: !3, line: 350, type: !611, isLocal: true, isDefinition: true)
!1959 = !DIGlobalVariableExpression(var: !1960, expr: !DIExpression())
!1960 = distinct !DIGlobalVariable(name: "true_dependency_cache", scope: !2, file: !3, line: 437, type: !1800, isLocal: true, isDefinition: true)
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "output_dependency_cache", scope: !2, file: !3, line: 438, type: !1800, isLocal: true, isDefinition: true)
!1963 = !DIGlobalVariableExpression(var: !1964, expr: !DIExpression())
!1964 = distinct !DIGlobalVariable(name: "anti_dependency_cache", scope: !2, file: !3, line: 439, type: !1800, isLocal: true, isDefinition: true)
!1965 = !DIGlobalVariableExpression(var: !1966, expr: !DIExpression())
!1966 = distinct !DIGlobalVariable(name: "null_link", scope: !1967, file: !562, line: 1430, type: !1809, isLocal: true, isDefinition: true)
!1967 = distinct !DISubprogram(name: "sd_iterator_start", scope: !562, file: !562, line: 1427, type: !1968, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1979)
!1968 = !DISubroutineType(types: !1969)
!1969 = !{!1970, !644, !1974}
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_iterator_def", file: !562, line: 1414, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sd_iterator", file: !562, line: 1395, size: 256, elements: !1972)
!1972 = !{!1973, !1975, !1976, !1978}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1971, file: !562, line: 1398, baseType: !1974, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_list_types_def", file: !562, line: 1390, baseType: !611)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1971, file: !562, line: 1401, baseType: !644, size: 64, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "linkp", scope: !1971, file: !562, line: 1408, baseType: !1977, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_p", scope: !1971, file: !562, line: 1411, baseType: !610, size: 8, offset: 192)
!1979 = !{!1980, !1981, !1982}
!1980 = !DILocalVariable(name: "insn", arg: 1, scope: !1967, file: !562, line: 1427, type: !644)
!1981 = !DILocalVariable(name: "types", arg: 2, scope: !1967, file: !562, line: 1427, type: !1974)
!1982 = !DILocalVariable(name: "i", scope: !1967, file: !562, line: 1432, type: !1970)
!1983 = !DIGlobalVariableExpression(var: !1984, expr: !DIExpression())
!1984 = distinct !DIGlobalVariable(name: "spec_dependency_cache", scope: !2, file: !3, line: 440, type: !1800, isLocal: true, isDefinition: true)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "dump_dep_flags", scope: !2, file: !3, line: 205, type: !611, isLocal: true, isDefinition: true)
!1987 = !DIGlobalVariableExpression(var: !1988, expr: !DIExpression())
!1988 = distinct !DIGlobalVariable(name: "can_start_lhs_rhs_p", scope: !2, file: !3, line: 2056, type: !610, isLocal: true, isDefinition: true)
!1989 = !DIGlobalVariableExpression(var: !1990, expr: !DIExpression())
!1990 = distinct !DIGlobalVariable(name: "pressure_info", scope: !1991, file: !3, line: 2002, type: !1838, isLocal: true, isDefinition: true)
!1991 = distinct !DISubprogram(name: "setup_insn_reg_pressure_info", scope: !3, file: !3, line: 1998, type: !1889, scopeLine: 1999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1992)
!1992 = !{!1993, !1994, !1995, !1996, !1997}
!1993 = !DILocalVariable(name: "insn", arg: 1, scope: !1991, file: !3, line: 1998, type: !644)
!1994 = !DILocalVariable(name: "i", scope: !1991, file: !3, line: 2000, type: !611)
!1995 = !DILocalVariable(name: "len", scope: !1991, file: !3, line: 2000, type: !611)
!1996 = !DILocalVariable(name: "cl", scope: !1991, file: !3, line: 2001, type: !578)
!1997 = !DILocalVariable(name: "link", scope: !1991, file: !3, line: 2003, type: !644)
!1998 = !DIGlobalVariableExpression(var: !1999, expr: !DIExpression())
!1999 = distinct !DIGlobalVariable(name: "reg_pressure_info", scope: !2, file: !3, line: 1803, type: !2000, isLocal: true, isDefinition: true)
!2000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1839, size: 864, elements: !2001)
!2001 = !{!2002}
!2002 = !DISubrange(count: 27)
!2003 = !DIGlobalVariableExpression(var: !2004, expr: !DIExpression())
!2004 = distinct !DIGlobalVariable(name: "cur_insn", scope: !2, file: !3, line: 1614, type: !644, isLocal: true, isDefinition: true)
!2005 = !{i32 2, !"Dwarf Version", i32 4}
!2006 = !{i32 2, !"Debug Info Version", i32 3}
!2007 = !{i32 1, !"wchar_size", i32 4}
!2008 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2009 = distinct !DISubprogram(name: "vprintf", scope: !2010, file: !2010, line: 39, type: !2011, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2021)
!2010 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2011 = !DISubroutineType(types: !2012)
!2012 = !{!611, !2013, !2014}
!2013 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !616)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2016)
!2016 = !{!2017, !2018, !2019, !2020}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2015, file: !3, baseType: !7, size: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2015, file: !3, baseType: !7, size: 32, offset: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2015, file: !3, baseType: !615, size: 64, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2015, file: !3, baseType: !615, size: 64, offset: 128)
!2021 = !{!2022, !2023}
!2022 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2009, file: !2010, line: 39, type: !2013)
!2023 = !DILocalVariable(name: "__arg", arg: 2, scope: !2009, file: !2010, line: 39, type: !2014)
!2024 = !DILocation(line: 0, scope: !2009)
!2025 = !DILocation(line: 41, column: 20, scope: !2009)
!2026 = !DILocation(line: 41, column: 10, scope: !2009)
!2027 = !DILocation(line: 41, column: 3, scope: !2009)
!2028 = distinct !DISubprogram(name: "getchar", scope: !2010, file: !2010, line: 47, type: !2029, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2031)
!2029 = !DISubroutineType(types: !2030)
!2030 = !{!611}
!2031 = !{}
!2032 = !DILocation(line: 49, column: 16, scope: !2028)
!2033 = !DILocation(line: 49, column: 10, scope: !2028)
!2034 = !DILocation(line: 49, column: 3, scope: !2028)
!2035 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2010, file: !2010, line: 56, type: !2036, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2089)
!2036 = !DISubroutineType(types: !2037)
!2037 = !{!611, !2038}
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2040, line: 7, baseType: !2041)
!2040 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2042, line: 49, size: 1728, elements: !2043)
!2042 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2043 = !{!2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2059, !2061, !2062, !2063, !2066, !2068, !2069, !2070, !2073, !2075, !2078, !2081, !2082, !2083, !2084, !2085}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2041, file: !2042, line: 51, baseType: !611, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2041, file: !2042, line: 54, baseType: !613, size: 64, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2041, file: !2042, line: 55, baseType: !613, size: 64, offset: 128)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2041, file: !2042, line: 56, baseType: !613, size: 64, offset: 192)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2041, file: !2042, line: 57, baseType: !613, size: 64, offset: 256)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2041, file: !2042, line: 58, baseType: !613, size: 64, offset: 320)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2041, file: !2042, line: 59, baseType: !613, size: 64, offset: 384)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2041, file: !2042, line: 60, baseType: !613, size: 64, offset: 448)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2041, file: !2042, line: 61, baseType: !613, size: 64, offset: 512)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2041, file: !2042, line: 64, baseType: !613, size: 64, offset: 576)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2041, file: !2042, line: 65, baseType: !613, size: 64, offset: 640)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2041, file: !2042, line: 66, baseType: !613, size: 64, offset: 704)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2041, file: !2042, line: 68, baseType: !2057, size: 64, offset: 768)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2042, line: 36, flags: DIFlagFwdDecl)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2041, file: !2042, line: 70, baseType: !2060, size: 64, offset: 832)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2041, file: !2042, line: 72, baseType: !611, size: 32, offset: 896)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2041, file: !2042, line: 73, baseType: !611, size: 32, offset: 928)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2041, file: !2042, line: 74, baseType: !2064, size: 64, offset: 960)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2065, line: 152, baseType: !727)
!2065 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2041, file: !2042, line: 77, baseType: !2067, size: 16, offset: 1024)
!2067 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2041, file: !2042, line: 78, baseType: !1548, size: 8, offset: 1040)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2041, file: !2042, line: 79, baseType: !851, size: 8, offset: 1048)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2041, file: !2042, line: 81, baseType: !2071, size: 64, offset: 1088)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2042, line: 43, baseType: null)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2041, file: !2042, line: 89, baseType: !2074, size: 64, offset: 1152)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2065, line: 153, baseType: !727)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2041, file: !2042, line: 91, baseType: !2076, size: 64, offset: 1216)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2042, line: 37, flags: DIFlagFwdDecl)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2041, file: !2042, line: 92, baseType: !2079, size: 64, offset: 1280)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2042, line: 38, flags: DIFlagFwdDecl)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2041, file: !2042, line: 93, baseType: !2060, size: 64, offset: 1344)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2041, file: !2042, line: 94, baseType: !615, size: 64, offset: 1408)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2041, file: !2042, line: 95, baseType: !1112, size: 64, offset: 1472)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2041, file: !2042, line: 96, baseType: !611, size: 32, offset: 1536)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2041, file: !2042, line: 98, baseType: !2086, size: 160, offset: 1568)
!2086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 160, elements: !2087)
!2087 = !{!2088}
!2088 = !DISubrange(count: 20)
!2089 = !{!2090}
!2090 = !DILocalVariable(name: "__fp", arg: 1, scope: !2035, file: !2010, line: 56, type: !2038)
!2091 = !DILocation(line: 0, scope: !2035)
!2092 = !DILocation(line: 58, column: 10, scope: !2035)
!2093 = !DILocation(line: 58, column: 3, scope: !2035)
!2094 = distinct !DISubprogram(name: "getc_unlocked", scope: !2010, file: !2010, line: 66, type: !2036, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2095)
!2095 = !{!2096}
!2096 = !DILocalVariable(name: "__fp", arg: 1, scope: !2094, file: !2010, line: 66, type: !2038)
!2097 = !DILocation(line: 0, scope: !2094)
!2098 = !DILocation(line: 68, column: 10, scope: !2094)
!2099 = !DILocation(line: 68, column: 3, scope: !2094)
!2100 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2010, file: !2010, line: 73, type: !2029, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2031)
!2101 = !DILocation(line: 75, column: 10, scope: !2100)
!2102 = !DILocation(line: 75, column: 3, scope: !2100)
!2103 = distinct !DISubprogram(name: "putchar", scope: !2010, file: !2010, line: 82, type: !2104, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2106)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!611, !611}
!2106 = !{!2107}
!2107 = !DILocalVariable(name: "__c", arg: 1, scope: !2103, file: !2010, line: 82, type: !611)
!2108 = !DILocation(line: 0, scope: !2103)
!2109 = !DILocation(line: 84, column: 21, scope: !2103)
!2110 = !DILocation(line: 84, column: 10, scope: !2103)
!2111 = !DILocation(line: 84, column: 3, scope: !2103)
!2112 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2010, file: !2010, line: 91, type: !2113, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2115)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{!611, !611, !2038}
!2115 = !{!2116, !2117}
!2116 = !DILocalVariable(name: "__c", arg: 1, scope: !2112, file: !2010, line: 91, type: !611)
!2117 = !DILocalVariable(name: "__stream", arg: 2, scope: !2112, file: !2010, line: 91, type: !2038)
!2118 = !DILocation(line: 0, scope: !2112)
!2119 = !DILocation(line: 93, column: 10, scope: !2112)
!2120 = !DILocation(line: 93, column: 3, scope: !2112)
!2121 = distinct !DISubprogram(name: "putc_unlocked", scope: !2010, file: !2010, line: 101, type: !2113, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2122)
!2122 = !{!2123, !2124}
!2123 = !DILocalVariable(name: "__c", arg: 1, scope: !2121, file: !2010, line: 101, type: !611)
!2124 = !DILocalVariable(name: "__stream", arg: 2, scope: !2121, file: !2010, line: 101, type: !2038)
!2125 = !DILocation(line: 0, scope: !2121)
!2126 = !DILocation(line: 103, column: 10, scope: !2121)
!2127 = !DILocation(line: 103, column: 3, scope: !2121)
!2128 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2010, file: !2010, line: 108, type: !2104, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2129)
!2129 = !{!2130}
!2130 = !DILocalVariable(name: "__c", arg: 1, scope: !2128, file: !2010, line: 108, type: !611)
!2131 = !DILocation(line: 0, scope: !2128)
!2132 = !DILocation(line: 110, column: 10, scope: !2128)
!2133 = !DILocation(line: 110, column: 3, scope: !2128)
!2134 = distinct !DISubprogram(name: "getline", scope: !2010, file: !2010, line: 118, type: !2135, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2139)
!2135 = !DISubroutineType(types: !2136)
!2136 = !{!2137, !612, !2138, !2038}
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2065, line: 193, baseType: !727)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!2139 = !{!2140, !2141, !2142}
!2140 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2134, file: !2010, line: 118, type: !612)
!2141 = !DILocalVariable(name: "__n", arg: 2, scope: !2134, file: !2010, line: 118, type: !2138)
!2142 = !DILocalVariable(name: "__stream", arg: 3, scope: !2134, file: !2010, line: 118, type: !2038)
!2143 = !DILocation(line: 0, scope: !2134)
!2144 = !DILocation(line: 120, column: 10, scope: !2134)
!2145 = !DILocation(line: 120, column: 3, scope: !2134)
!2146 = distinct !DISubprogram(name: "feof_unlocked", scope: !2010, file: !2010, line: 128, type: !2036, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2147)
!2147 = !{!2148}
!2148 = !DILocalVariable(name: "__stream", arg: 1, scope: !2146, file: !2010, line: 128, type: !2038)
!2149 = !DILocation(line: 0, scope: !2146)
!2150 = !DILocation(line: 130, column: 10, scope: !2146)
!2151 = !DILocation(line: 130, column: 3, scope: !2146)
!2152 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2010, file: !2010, line: 135, type: !2036, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2153)
!2153 = !{!2154}
!2154 = !DILocalVariable(name: "__stream", arg: 1, scope: !2152, file: !2010, line: 135, type: !2038)
!2155 = !DILocation(line: 0, scope: !2152)
!2156 = !DILocation(line: 137, column: 10, scope: !2152)
!2157 = !DILocation(line: 137, column: 3, scope: !2152)
!2158 = distinct !DISubprogram(name: "tolower", scope: !2159, file: !2159, line: 207, type: !2104, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2160)
!2159 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2160 = !{!2161}
!2161 = !DILocalVariable(name: "__c", arg: 1, scope: !2158, file: !2159, line: 207, type: !611)
!2162 = !DILocation(line: 0, scope: !2158)
!2163 = !DILocation(line: 209, column: 22, scope: !2158)
!2164 = !DILocation(line: 209, column: 39, scope: !2158)
!2165 = !DILocation(line: 209, column: 38, scope: !2158)
!2166 = !DILocation(line: 209, column: 37, scope: !2158)
!2167 = !DILocation(line: 209, column: 10, scope: !2158)
!2168 = !DILocation(line: 209, column: 3, scope: !2158)
!2169 = distinct !DISubprogram(name: "toupper", scope: !2159, file: !2159, line: 213, type: !2104, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2170)
!2170 = !{!2171}
!2171 = !DILocalVariable(name: "__c", arg: 1, scope: !2169, file: !2159, line: 213, type: !611)
!2172 = !DILocation(line: 0, scope: !2169)
!2173 = !DILocation(line: 215, column: 22, scope: !2169)
!2174 = !DILocation(line: 215, column: 39, scope: !2169)
!2175 = !DILocation(line: 215, column: 38, scope: !2169)
!2176 = !DILocation(line: 215, column: 37, scope: !2169)
!2177 = !DILocation(line: 215, column: 10, scope: !2169)
!2178 = !DILocation(line: 215, column: 3, scope: !2169)
!2179 = distinct !DISubprogram(name: "atoi", scope: !2180, file: !2180, line: 361, type: !2181, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2183)
!2180 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2181 = !DISubroutineType(types: !2182)
!2182 = !{!611, !616}
!2183 = !{!2184}
!2184 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2179, file: !2180, line: 361, type: !616)
!2185 = !DILocation(line: 0, scope: !2179)
!2186 = !DILocation(line: 363, column: 16, scope: !2179)
!2187 = !DILocation(line: 363, column: 10, scope: !2179)
!2188 = !DILocation(line: 363, column: 3, scope: !2179)
!2189 = distinct !DISubprogram(name: "atol", scope: !2180, file: !2180, line: 366, type: !2190, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2192)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!727, !616}
!2192 = !{!2193}
!2193 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2189, file: !2180, line: 366, type: !616)
!2194 = !DILocation(line: 0, scope: !2189)
!2195 = !DILocation(line: 368, column: 10, scope: !2189)
!2196 = !DILocation(line: 368, column: 3, scope: !2189)
!2197 = distinct !DISubprogram(name: "atoll", scope: !2180, file: !2180, line: 373, type: !2198, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2201)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{!2200, !616}
!2200 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2201 = !{!2202}
!2202 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2197, file: !2180, line: 373, type: !616)
!2203 = !DILocation(line: 0, scope: !2197)
!2204 = !DILocation(line: 375, column: 10, scope: !2197)
!2205 = !DILocation(line: 375, column: 3, scope: !2197)
!2206 = distinct !DISubprogram(name: "bsearch", scope: !2207, file: !2207, line: 20, type: !2208, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2211)
!2207 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2208 = !DISubroutineType(types: !2209)
!2209 = !{!615, !1097, !1097, !1112, !1112, !2210}
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2180, line: 808, baseType: !1101)
!2211 = !{!2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221}
!2212 = !DILocalVariable(name: "__key", arg: 1, scope: !2206, file: !2207, line: 20, type: !1097)
!2213 = !DILocalVariable(name: "__base", arg: 2, scope: !2206, file: !2207, line: 20, type: !1097)
!2214 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2206, file: !2207, line: 20, type: !1112)
!2215 = !DILocalVariable(name: "__size", arg: 4, scope: !2206, file: !2207, line: 20, type: !1112)
!2216 = !DILocalVariable(name: "__compar", arg: 5, scope: !2206, file: !2207, line: 21, type: !2210)
!2217 = !DILocalVariable(name: "__l", scope: !2206, file: !2207, line: 23, type: !1112)
!2218 = !DILocalVariable(name: "__u", scope: !2206, file: !2207, line: 23, type: !1112)
!2219 = !DILocalVariable(name: "__idx", scope: !2206, file: !2207, line: 23, type: !1112)
!2220 = !DILocalVariable(name: "__p", scope: !2206, file: !2207, line: 24, type: !1097)
!2221 = !DILocalVariable(name: "__comparison", scope: !2206, file: !2207, line: 25, type: !611)
!2222 = !DILocation(line: 0, scope: !2206)
!2223 = !DILocation(line: 29, column: 3, scope: !2206)
!2224 = !DILocation(line: 27, column: 7, scope: !2206)
!2225 = !DILocation(line: 29, column: 14, scope: !2206)
!2226 = !DILocation(line: 31, column: 20, scope: !2227)
!2227 = distinct !DILexicalBlock(scope: !2206, file: !2207, line: 30, column: 5)
!2228 = !DILocation(line: 31, column: 27, scope: !2227)
!2229 = !DILocation(line: 32, column: 56, scope: !2227)
!2230 = !DILocation(line: 32, column: 47, scope: !2227)
!2231 = !DILocation(line: 33, column: 22, scope: !2227)
!2232 = !DILocation(line: 34, column: 24, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2227, file: !2207, line: 34, column: 11)
!2234 = !DILocation(line: 34, column: 11, scope: !2227)
!2235 = !DILocation(line: 36, column: 29, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2233, file: !2207, line: 36, column: 16)
!2237 = !DILocation(line: 36, column: 16, scope: !2233)
!2238 = !DILocation(line: 37, column: 14, scope: !2236)
!2239 = distinct !{!2239, !2223, !2240}
!2240 = !DILocation(line: 40, column: 5, scope: !2206)
!2241 = !DILocation(line: 43, column: 1, scope: !2206)
!2242 = distinct !DISubprogram(name: "atof", scope: !2243, file: !2243, line: 25, type: !2244, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2247)
!2243 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2244 = !DISubroutineType(types: !2245)
!2245 = !{!2246, !616}
!2246 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2247 = !{!2248}
!2248 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2242, file: !2243, line: 25, type: !616)
!2249 = !DILocation(line: 0, scope: !2242)
!2250 = !DILocation(line: 27, column: 10, scope: !2242)
!2251 = !DILocation(line: 27, column: 3, scope: !2242)
!2252 = distinct !DISubprogram(name: "strtoimax", scope: !2253, file: !2253, line: 324, type: !2254, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2260)
!2253 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2254 = !DISubroutineType(types: !2255)
!2255 = !{!2256, !2013, !2259, !611}
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2257, line: 101, baseType: !2258)
!2257 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2065, line: 72, baseType: !727)
!2259 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !612)
!2260 = !{!2261, !2262, !2263}
!2261 = !DILocalVariable(name: "nptr", arg: 1, scope: !2252, file: !2253, line: 324, type: !2013)
!2262 = !DILocalVariable(name: "endptr", arg: 2, scope: !2252, file: !2253, line: 324, type: !2259)
!2263 = !DILocalVariable(name: "base", arg: 3, scope: !2252, file: !2253, line: 324, type: !611)
!2264 = !DILocation(line: 0, scope: !2252)
!2265 = !DILocation(line: 327, column: 10, scope: !2252)
!2266 = !DILocation(line: 327, column: 3, scope: !2252)
!2267 = distinct !DISubprogram(name: "strtoumax", scope: !2253, file: !2253, line: 336, type: !2268, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2272)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{!2270, !2013, !2259, !611}
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2257, line: 102, baseType: !2271)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2065, line: 73, baseType: !710)
!2272 = !{!2273, !2274, !2275}
!2273 = !DILocalVariable(name: "nptr", arg: 1, scope: !2267, file: !2253, line: 336, type: !2013)
!2274 = !DILocalVariable(name: "endptr", arg: 2, scope: !2267, file: !2253, line: 336, type: !2259)
!2275 = !DILocalVariable(name: "base", arg: 3, scope: !2267, file: !2253, line: 336, type: !611)
!2276 = !DILocation(line: 0, scope: !2267)
!2277 = !DILocation(line: 339, column: 10, scope: !2267)
!2278 = !DILocation(line: 339, column: 3, scope: !2267)
!2279 = distinct !DISubprogram(name: "wcstoimax", scope: !2253, file: !2253, line: 348, type: !2280, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2289)
!2280 = !DISubroutineType(types: !2281)
!2281 = !{!2256, !2282, !2286, !611}
!2282 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2283)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2285)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2253, line: 34, baseType: !611)
!2286 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2287)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2289 = !{!2290, !2291, !2292}
!2290 = !DILocalVariable(name: "nptr", arg: 1, scope: !2279, file: !2253, line: 348, type: !2282)
!2291 = !DILocalVariable(name: "endptr", arg: 2, scope: !2279, file: !2253, line: 348, type: !2286)
!2292 = !DILocalVariable(name: "base", arg: 3, scope: !2279, file: !2253, line: 348, type: !611)
!2293 = !DILocation(line: 0, scope: !2279)
!2294 = !DILocation(line: 351, column: 10, scope: !2279)
!2295 = !DILocation(line: 351, column: 3, scope: !2279)
!2296 = distinct !DISubprogram(name: "wcstoumax", scope: !2253, file: !2253, line: 362, type: !2297, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2299)
!2297 = !DISubroutineType(types: !2298)
!2298 = !{!2270, !2282, !2286, !611}
!2299 = !{!2300, !2301, !2302}
!2300 = !DILocalVariable(name: "nptr", arg: 1, scope: !2296, file: !2253, line: 362, type: !2282)
!2301 = !DILocalVariable(name: "endptr", arg: 2, scope: !2296, file: !2253, line: 362, type: !2286)
!2302 = !DILocalVariable(name: "base", arg: 3, scope: !2296, file: !2253, line: 362, type: !611)
!2303 = !DILocation(line: 0, scope: !2296)
!2304 = !DILocation(line: 365, column: 10, scope: !2296)
!2305 = !DILocation(line: 365, column: 3, scope: !2296)
!2306 = distinct !DISubprogram(name: "stat", scope: !2307, file: !2307, line: 453, type: !2308, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2345)
!2307 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2308 = !DISubroutineType(types: !2309)
!2309 = !{!611, !616, !2310}
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 64)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2312, line: 46, size: 1152, elements: !2313)
!2312 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2313 = !{!2314, !2316, !2318, !2320, !2322, !2324, !2326, !2327, !2328, !2329, !2331, !2333, !2341, !2342, !2343}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2311, file: !2312, line: 48, baseType: !2315, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2065, line: 145, baseType: !710)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2311, file: !2312, line: 53, baseType: !2317, size: 64, offset: 64)
!2317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2065, line: 148, baseType: !710)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2311, file: !2312, line: 61, baseType: !2319, size: 64, offset: 128)
!2319 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2065, line: 151, baseType: !710)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2311, file: !2312, line: 62, baseType: !2321, size: 32, offset: 192)
!2321 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2065, line: 150, baseType: !7)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2311, file: !2312, line: 64, baseType: !2323, size: 32, offset: 224)
!2323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2065, line: 146, baseType: !7)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2311, file: !2312, line: 65, baseType: !2325, size: 32, offset: 256)
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2065, line: 147, baseType: !7)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2311, file: !2312, line: 67, baseType: !611, size: 32, offset: 288)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2311, file: !2312, line: 69, baseType: !2315, size: 64, offset: 320)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2311, file: !2312, line: 74, baseType: !2064, size: 64, offset: 384)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2311, file: !2312, line: 78, baseType: !2330, size: 64, offset: 448)
!2330 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2065, line: 174, baseType: !727)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2311, file: !2312, line: 80, baseType: !2332, size: 64, offset: 512)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2065, line: 179, baseType: !727)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2311, file: !2312, line: 91, baseType: !2334, size: 128, offset: 576)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2335, line: 10, size: 128, elements: !2336)
!2335 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2336 = !{!2337, !2339}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2334, file: !2335, line: 12, baseType: !2338, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2065, line: 160, baseType: !727)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2334, file: !2335, line: 16, baseType: !2340, size: 64, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2065, line: 196, baseType: !727)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2311, file: !2312, line: 92, baseType: !2334, size: 128, offset: 704)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2311, file: !2312, line: 93, baseType: !2334, size: 128, offset: 832)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2311, file: !2312, line: 106, baseType: !2344, size: 192, offset: 960)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2340, size: 192, elements: !827)
!2345 = !{!2346, !2347}
!2346 = !DILocalVariable(name: "__path", arg: 1, scope: !2306, file: !2307, line: 453, type: !616)
!2347 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2306, file: !2307, line: 453, type: !2310)
!2348 = !DILocation(line: 0, scope: !2306)
!2349 = !DILocation(line: 455, column: 10, scope: !2306)
!2350 = !DILocation(line: 455, column: 3, scope: !2306)
!2351 = distinct !DISubprogram(name: "lstat", scope: !2307, file: !2307, line: 460, type: !2308, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2352)
!2352 = !{!2353, !2354}
!2353 = !DILocalVariable(name: "__path", arg: 1, scope: !2351, file: !2307, line: 460, type: !616)
!2354 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2351, file: !2307, line: 460, type: !2310)
!2355 = !DILocation(line: 0, scope: !2351)
!2356 = !DILocation(line: 462, column: 10, scope: !2351)
!2357 = !DILocation(line: 462, column: 3, scope: !2351)
!2358 = distinct !DISubprogram(name: "fstat", scope: !2307, file: !2307, line: 467, type: !2359, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2361)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{!611, !611, !2310}
!2361 = !{!2362, !2363}
!2362 = !DILocalVariable(name: "__fd", arg: 1, scope: !2358, file: !2307, line: 467, type: !611)
!2363 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2358, file: !2307, line: 467, type: !2310)
!2364 = !DILocation(line: 0, scope: !2358)
!2365 = !DILocation(line: 469, column: 10, scope: !2358)
!2366 = !DILocation(line: 469, column: 3, scope: !2358)
!2367 = distinct !DISubprogram(name: "fstatat", scope: !2307, file: !2307, line: 474, type: !2368, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2370)
!2368 = !DISubroutineType(types: !2369)
!2369 = !{!611, !611, !616, !2310, !611}
!2370 = !{!2371, !2372, !2373, !2374}
!2371 = !DILocalVariable(name: "__fd", arg: 1, scope: !2367, file: !2307, line: 474, type: !611)
!2372 = !DILocalVariable(name: "__filename", arg: 2, scope: !2367, file: !2307, line: 474, type: !616)
!2373 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2367, file: !2307, line: 474, type: !2310)
!2374 = !DILocalVariable(name: "__flag", arg: 4, scope: !2367, file: !2307, line: 474, type: !611)
!2375 = !DILocation(line: 0, scope: !2367)
!2376 = !DILocation(line: 477, column: 10, scope: !2367)
!2377 = !DILocation(line: 477, column: 3, scope: !2367)
!2378 = distinct !DISubprogram(name: "mknod", scope: !2307, file: !2307, line: 483, type: !2379, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2381)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{!611, !616, !2321, !2315}
!2381 = !{!2382, !2383, !2384}
!2382 = !DILocalVariable(name: "__path", arg: 1, scope: !2378, file: !2307, line: 483, type: !616)
!2383 = !DILocalVariable(name: "__mode", arg: 2, scope: !2378, file: !2307, line: 483, type: !2321)
!2384 = !DILocalVariable(name: "__dev", arg: 3, scope: !2378, file: !2307, line: 483, type: !2315)
!2385 = !DILocation(line: 0, scope: !2378)
!2386 = !DILocation(line: 485, column: 10, scope: !2378)
!2387 = !DILocation(line: 485, column: 3, scope: !2378)
!2388 = distinct !DISubprogram(name: "mknodat", scope: !2307, file: !2307, line: 491, type: !2389, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2391)
!2389 = !DISubroutineType(types: !2390)
!2390 = !{!611, !611, !616, !2321, !2315}
!2391 = !{!2392, !2393, !2394, !2395}
!2392 = !DILocalVariable(name: "__fd", arg: 1, scope: !2388, file: !2307, line: 491, type: !611)
!2393 = !DILocalVariable(name: "__path", arg: 2, scope: !2388, file: !2307, line: 491, type: !616)
!2394 = !DILocalVariable(name: "__mode", arg: 3, scope: !2388, file: !2307, line: 491, type: !2321)
!2395 = !DILocalVariable(name: "__dev", arg: 4, scope: !2388, file: !2307, line: 491, type: !2315)
!2396 = !DILocation(line: 0, scope: !2388)
!2397 = !DILocation(line: 494, column: 10, scope: !2388)
!2398 = !DILocation(line: 494, column: 3, scope: !2388)
!2399 = distinct !DISubprogram(name: "stat64", scope: !2307, file: !2307, line: 502, type: !2400, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2422)
!2400 = !DISubroutineType(types: !2401)
!2401 = !{!611, !616, !2402}
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2312, line: 119, size: 1152, elements: !2404)
!2404 = !{!2405, !2406, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2418, !2419, !2420, !2421}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2403, file: !2312, line: 121, baseType: !2315, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2403, file: !2312, line: 123, baseType: !2407, size: 64, offset: 64)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2065, line: 149, baseType: !710)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2403, file: !2312, line: 124, baseType: !2319, size: 64, offset: 128)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2403, file: !2312, line: 125, baseType: !2321, size: 32, offset: 192)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2403, file: !2312, line: 132, baseType: !2323, size: 32, offset: 224)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2403, file: !2312, line: 133, baseType: !2325, size: 32, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2403, file: !2312, line: 135, baseType: !611, size: 32, offset: 288)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2403, file: !2312, line: 136, baseType: !2315, size: 64, offset: 320)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2403, file: !2312, line: 137, baseType: !2064, size: 64, offset: 384)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2403, file: !2312, line: 143, baseType: !2330, size: 64, offset: 448)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2403, file: !2312, line: 144, baseType: !2417, size: 64, offset: 512)
!2417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2065, line: 180, baseType: !727)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2403, file: !2312, line: 152, baseType: !2334, size: 128, offset: 576)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2403, file: !2312, line: 153, baseType: !2334, size: 128, offset: 704)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2403, file: !2312, line: 154, baseType: !2334, size: 128, offset: 832)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2403, file: !2312, line: 164, baseType: !2344, size: 192, offset: 960)
!2422 = !{!2423, !2424}
!2423 = !DILocalVariable(name: "__path", arg: 1, scope: !2399, file: !2307, line: 502, type: !616)
!2424 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2399, file: !2307, line: 502, type: !2402)
!2425 = !DILocation(line: 0, scope: !2399)
!2426 = !DILocation(line: 504, column: 10, scope: !2399)
!2427 = !DILocation(line: 504, column: 3, scope: !2399)
!2428 = distinct !DISubprogram(name: "lstat64", scope: !2307, file: !2307, line: 509, type: !2400, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2429)
!2429 = !{!2430, !2431}
!2430 = !DILocalVariable(name: "__path", arg: 1, scope: !2428, file: !2307, line: 509, type: !616)
!2431 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2428, file: !2307, line: 509, type: !2402)
!2432 = !DILocation(line: 0, scope: !2428)
!2433 = !DILocation(line: 511, column: 10, scope: !2428)
!2434 = !DILocation(line: 511, column: 3, scope: !2428)
!2435 = distinct !DISubprogram(name: "fstat64", scope: !2307, file: !2307, line: 516, type: !2436, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2438)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!611, !611, !2402}
!2438 = !{!2439, !2440}
!2439 = !DILocalVariable(name: "__fd", arg: 1, scope: !2435, file: !2307, line: 516, type: !611)
!2440 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2435, file: !2307, line: 516, type: !2402)
!2441 = !DILocation(line: 0, scope: !2435)
!2442 = !DILocation(line: 518, column: 10, scope: !2435)
!2443 = !DILocation(line: 518, column: 3, scope: !2435)
!2444 = distinct !DISubprogram(name: "fstatat64", scope: !2307, file: !2307, line: 523, type: !2445, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2447)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{!611, !611, !616, !2402, !611}
!2447 = !{!2448, !2449, !2450, !2451}
!2448 = !DILocalVariable(name: "__fd", arg: 1, scope: !2444, file: !2307, line: 523, type: !611)
!2449 = !DILocalVariable(name: "__filename", arg: 2, scope: !2444, file: !2307, line: 523, type: !616)
!2450 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2444, file: !2307, line: 523, type: !2402)
!2451 = !DILocalVariable(name: "__flag", arg: 4, scope: !2444, file: !2307, line: 523, type: !611)
!2452 = !DILocation(line: 0, scope: !2444)
!2453 = !DILocation(line: 526, column: 10, scope: !2444)
!2454 = !DILocation(line: 526, column: 3, scope: !2444)
!2455 = distinct !DISubprogram(name: "ds_to_dk", scope: !3, file: !3, line: 63, type: !2456, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2458)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{!384, !618}
!2458 = !{!2459}
!2459 = !DILocalVariable(name: "ds", arg: 1, scope: !2455, file: !3, line: 63, type: !618)
!2460 = !DILocation(line: 0, scope: !2455)
!2461 = !DILocation(line: 65, column: 10, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 65, column: 7)
!2463 = !DILocation(line: 65, column: 7, scope: !2455)
!2464 = !DILocation(line: 68, column: 10, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 68, column: 7)
!2466 = !DILocation(line: 68, column: 7, scope: !2455)
!2467 = !DILocation(line: 71, column: 3, scope: !2455)
!2468 = !DILocation(line: 74, column: 1, scope: !2455)
!2469 = distinct !DISubprogram(name: "dk_to_ds", scope: !3, file: !3, line: 78, type: !2470, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2472)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{!618, !384}
!2472 = !{!2473}
!2473 = !DILocalVariable(name: "dk", arg: 1, scope: !2469, file: !3, line: 78, type: !384)
!2474 = !DILocation(line: 0, scope: !2469)
!2475 = !DILocation(line: 80, column: 3, scope: !2469)
!2476 = !DILocation(line: 86, column: 7, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 81, column: 5)
!2478 = !DILocation(line: 89, column: 7, scope: !2477)
!2479 = !DILocation(line: 90, column: 7, scope: !2477)
!2480 = !DILocation(line: 0, scope: !2477)
!2481 = !DILocation(line: 92, column: 1, scope: !2469)
!2482 = distinct !DISubprogram(name: "init_dep_1", scope: !3, file: !3, line: 98, type: !2483, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2488)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{null, !2485, !644, !644, !384, !618}
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_t", file: !562, line: 245, baseType: !2486)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_def", file: !562, line: 244, baseType: !1820)
!2488 = !{!2489, !2490, !2491, !2492, !2493}
!2489 = !DILocalVariable(name: "dep", arg: 1, scope: !2482, file: !3, line: 98, type: !2485)
!2490 = !DILocalVariable(name: "pro", arg: 2, scope: !2482, file: !3, line: 98, type: !644)
!2491 = !DILocalVariable(name: "con", arg: 3, scope: !2482, file: !3, line: 98, type: !644)
!2492 = !DILocalVariable(name: "type", arg: 4, scope: !2482, file: !3, line: 98, type: !384)
!2493 = !DILocalVariable(name: "ds", arg: 5, scope: !2482, file: !3, line: 98, type: !618)
!2494 = !DILocation(line: 0, scope: !2482)
!2495 = !DILocation(line: 100, column: 3, scope: !2482)
!2496 = !DILocation(line: 100, column: 17, scope: !2482)
!2497 = !DILocation(line: 101, column: 3, scope: !2482)
!2498 = !DILocation(line: 101, column: 17, scope: !2482)
!2499 = !DILocation(line: 102, column: 3, scope: !2482)
!2500 = !DILocation(line: 102, column: 18, scope: !2482)
!2501 = !DILocation(line: 103, column: 3, scope: !2482)
!2502 = !DILocation(line: 103, column: 20, scope: !2482)
!2503 = !DILocation(line: 104, column: 1, scope: !2482)
!2504 = distinct !DISubprogram(name: "init_dep", scope: !3, file: !3, line: 110, type: !2505, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2507)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{null, !2485, !644, !644, !384}
!2507 = !{!2508, !2509, !2510, !2511, !2512}
!2508 = !DILocalVariable(name: "dep", arg: 1, scope: !2504, file: !3, line: 110, type: !2485)
!2509 = !DILocalVariable(name: "pro", arg: 2, scope: !2504, file: !3, line: 110, type: !644)
!2510 = !DILocalVariable(name: "con", arg: 3, scope: !2504, file: !3, line: 110, type: !644)
!2511 = !DILocalVariable(name: "kind", arg: 4, scope: !2504, file: !3, line: 110, type: !384)
!2512 = !DILocalVariable(name: "ds", scope: !2504, file: !3, line: 112, type: !618)
!2513 = !DILocation(line: 0, scope: !2504)
!2514 = !DILocation(line: 114, column: 8, scope: !2515)
!2515 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 114, column: 7)
!2516 = !DILocation(line: 114, column: 28, scope: !2515)
!2517 = !DILocation(line: 114, column: 34, scope: !2515)
!2518 = !DILocation(line: 114, column: 7, scope: !2504)
!2519 = !DILocation(line: 115, column: 10, scope: !2515)
!2520 = !DILocation(line: 115, column: 5, scope: !2515)
!2521 = !DILocation(line: 0, scope: !2515)
!2522 = !DILocation(line: 119, column: 3, scope: !2504)
!2523 = !DILocation(line: 120, column: 1, scope: !2504)
!2524 = distinct !DISubprogram(name: "sd_debug_dep", scope: !3, file: !3, line: 209, type: !2525, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2527)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{null, !2485}
!2527 = !{!2528}
!2528 = !DILocalVariable(name: "dep", arg: 1, scope: !2524, file: !3, line: 209, type: !2485)
!2529 = !DILocation(line: 0, scope: !2524)
!2530 = !DILocation(line: 211, column: 13, scope: !2524)
!2531 = !DILocation(line: 211, column: 3, scope: !2524)
!2532 = !DILocation(line: 212, column: 12, scope: !2524)
!2533 = !DILocation(line: 212, column: 3, scope: !2524)
!2534 = !DILocation(line: 213, column: 1, scope: !2524)
!2535 = distinct !DISubprogram(name: "dump_dep", scope: !3, file: !3, line: 155, type: !2536, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{null, !2038, !2485, !611}
!2538 = !{!2539, !2540, !2541, !2542, !2545}
!2539 = !DILocalVariable(name: "dump", arg: 1, scope: !2535, file: !3, line: 155, type: !2038)
!2540 = !DILocalVariable(name: "dep", arg: 2, scope: !2535, file: !3, line: 155, type: !2485)
!2541 = !DILocalVariable(name: "flags", arg: 3, scope: !2535, file: !3, line: 155, type: !611)
!2542 = !DILocalVariable(name: "t", scope: !2543, file: !3, line: 170, type: !614)
!2543 = distinct !DILexicalBlock(scope: !2544, file: !3, line: 169, column: 5)
!2544 = distinct !DILexicalBlock(scope: !2535, file: !3, line: 168, column: 7)
!2545 = !DILocalVariable(name: "type", scope: !2543, file: !3, line: 171, type: !384)
!2546 = !DILocation(line: 0, scope: !2535)
!2547 = !DILocation(line: 157, column: 13, scope: !2548)
!2548 = distinct !DILexicalBlock(scope: !2535, file: !3, line: 157, column: 7)
!2549 = !DILocation(line: 158, column: 11, scope: !2548)
!2550 = !DILocation(line: 157, column: 7, scope: !2535)
!2551 = !DILocation(line: 160, column: 3, scope: !2535)
!2552 = !DILocation(line: 162, column: 13, scope: !2553)
!2553 = distinct !DILexicalBlock(scope: !2535, file: !3, line: 162, column: 7)
!2554 = !DILocation(line: 162, column: 7, scope: !2535)
!2555 = !DILocation(line: 163, column: 28, scope: !2553)
!2556 = !DILocation(line: 163, column: 5, scope: !2553)
!2557 = !DILocation(line: 165, column: 13, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2535, file: !3, line: 165, column: 7)
!2559 = !DILocation(line: 165, column: 7, scope: !2535)
!2560 = !DILocation(line: 166, column: 28, scope: !2558)
!2561 = !DILocation(line: 166, column: 5, scope: !2558)
!2562 = !DILocation(line: 168, column: 13, scope: !2544)
!2563 = !DILocation(line: 168, column: 7, scope: !2535)
!2564 = !DILocation(line: 171, column: 28, scope: !2543)
!2565 = !DILocation(line: 0, scope: !2543)
!2566 = !DILocation(line: 173, column: 7, scope: !2543)
!2567 = !DILocation(line: 181, column: 4, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2543, file: !3, line: 174, column: 2)
!2569 = !DILocation(line: 185, column: 4, scope: !2568)
!2570 = !DILocation(line: 188, column: 4, scope: !2568)
!2571 = !DILocation(line: 189, column: 4, scope: !2568)
!2572 = !DILocation(line: 192, column: 7, scope: !2543)
!2573 = !DILocation(line: 193, column: 5, scope: !2543)
!2574 = !DILocation(line: 195, column: 13, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2535, file: !3, line: 195, column: 7)
!2576 = !DILocation(line: 195, column: 7, scope: !2535)
!2577 = !DILocation(line: 197, column: 11, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2579, file: !3, line: 197, column: 11)
!2579 = distinct !DILexicalBlock(scope: !2575, file: !3, line: 196, column: 5)
!2580 = !DILocation(line: 197, column: 31, scope: !2578)
!2581 = !DILocation(line: 197, column: 37, scope: !2578)
!2582 = !DILocation(line: 197, column: 11, scope: !2579)
!2583 = !DILocation(line: 198, column: 17, scope: !2578)
!2584 = !DILocation(line: 198, column: 2, scope: !2578)
!2585 = !DILocation(line: 201, column: 3, scope: !2535)
!2586 = !DILocation(line: 202, column: 1, scope: !2535)
!2587 = distinct !DISubprogram(name: "deps_pools_are_empty_p", scope: !3, file: !3, line: 389, type: !2588, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2031)
!2588 = !DISubroutineType(types: !2589)
!2589 = !{!610}
!2590 = !DILocation(line: 391, column: 10, scope: !2587)
!2591 = !DILocation(line: 391, column: 28, scope: !2587)
!2592 = !DILocation(line: 391, column: 3, scope: !2587)
!2593 = distinct !DISubprogram(name: "sched_insns_conditions_mutex_p", scope: !3, file: !3, line: 552, type: !2594, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2596)
!2594 = !DISubroutineType(types: !2595)
!2595 = !{!610, !1852, !1852}
!2596 = !{!2597, !2598, !2599, !2600, !2601, !2602}
!2597 = !DILocalVariable(name: "insn1", arg: 1, scope: !2593, file: !3, line: 552, type: !1852)
!2598 = !DILocalVariable(name: "insn2", arg: 2, scope: !2593, file: !3, line: 552, type: !1852)
!2599 = !DILocalVariable(name: "cond1", scope: !2593, file: !3, line: 554, type: !644)
!2600 = !DILocalVariable(name: "cond2", scope: !2593, file: !3, line: 554, type: !644)
!2601 = !DILocalVariable(name: "rev1", scope: !2593, file: !3, line: 555, type: !610)
!2602 = !DILocalVariable(name: "rev2", scope: !2593, file: !3, line: 555, type: !610)
!2603 = !DILocation(line: 0, scope: !2593)
!2604 = !DILocation(line: 555, column: 3, scope: !2593)
!2605 = !DILocation(line: 555, column: 8, scope: !2593)
!2606 = !DILocation(line: 555, column: 22, scope: !2593)
!2607 = !DILocation(line: 559, column: 8, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2593, file: !3, line: 559, column: 7)
!2609 = !DILocation(line: 559, column: 23, scope: !2608)
!2610 = !DILocation(line: 559, column: 27, scope: !2608)
!2611 = !DILocation(line: 559, column: 7, scope: !2593)
!2612 = !DILocation(line: 561, column: 15, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2608, file: !3, line: 560, column: 5)
!2614 = !DILocation(line: 562, column: 15, scope: !2613)
!2615 = !DILocation(line: 563, column: 11, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2613, file: !3, line: 563, column: 11)
!2617 = !DILocation(line: 563, column: 20, scope: !2616)
!2618 = !DILocation(line: 563, column: 17, scope: !2616)
!2619 = !DILocation(line: 564, column: 41, scope: !2616)
!2620 = !DILocation(line: 564, column: 47, scope: !2616)
!2621 = !DILocation(line: 564, column: 7, scope: !2616)
!2622 = !DILocation(line: 567, column: 4, scope: !2616)
!2623 = !DILocation(line: 567, column: 8, scope: !2616)
!2624 = !DILocation(line: 570, column: 4, scope: !2616)
!2625 = !DILocation(line: 570, column: 8, scope: !2616)
!2626 = !DILocation(line: 563, column: 11, scope: !2613)
!2627 = !DILocation(line: 573, column: 3, scope: !2593)
!2628 = !DILocation(line: 574, column: 1, scope: !2593)
!2629 = distinct !DISubprogram(name: "sched_get_condition_with_rev", scope: !3, file: !3, line: 487, type: !2630, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2632)
!2630 = !DISubroutineType(types: !2631)
!2631 = !{!644, !1852, !609}
!2632 = !{!2633, !2634, !2635, !2636, !2637, !2641}
!2633 = !DILocalVariable(name: "insn", arg: 1, scope: !2629, file: !3, line: 487, type: !1852)
!2634 = !DILocalVariable(name: "rev", arg: 2, scope: !2629, file: !3, line: 487, type: !609)
!2635 = !DILocalVariable(name: "pat", scope: !2629, file: !3, line: 489, type: !644)
!2636 = !DILocalVariable(name: "src", scope: !2629, file: !3, line: 490, type: !644)
!2637 = !DILocalVariable(name: "cond", scope: !2638, file: !3, line: 510, type: !644)
!2638 = distinct !DILexicalBlock(scope: !2639, file: !3, line: 509, column: 5)
!2639 = distinct !DILexicalBlock(scope: !2640, file: !3, line: 508, column: 12)
!2640 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 506, column: 7)
!2641 = !DILocalVariable(name: "revcode", scope: !2638, file: !3, line: 511, type: !419)
!2642 = !DILocation(line: 0, scope: !2629)
!2643 = !DILocation(line: 489, column: 13, scope: !2629)
!2644 = !DILocation(line: 492, column: 11, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 492, column: 7)
!2646 = !DILocation(line: 492, column: 7, scope: !2629)
!2647 = !DILocation(line: 495, column: 7, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 495, column: 7)
!2649 = !DILocation(line: 495, column: 7, scope: !2629)
!2650 = !DILocation(line: 496, column: 10, scope: !2648)
!2651 = !DILocation(line: 496, column: 5, scope: !2648)
!2652 = !DILocation(line: 498, column: 7, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 498, column: 7)
!2654 = !DILocation(line: 498, column: 22, scope: !2653)
!2655 = !DILocation(line: 498, column: 7, scope: !2629)
!2656 = !DILocation(line: 499, column: 12, scope: !2653)
!2657 = !DILocation(line: 499, column: 5, scope: !2653)
!2658 = !DILocation(line: 501, column: 8, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 501, column: 7)
!2660 = !DILocation(line: 501, column: 30, scope: !2659)
!2661 = !DILocation(line: 501, column: 34, scope: !2659)
!2662 = !DILocation(line: 501, column: 7, scope: !2629)
!2663 = !DILocation(line: 504, column: 9, scope: !2629)
!2664 = !DILocation(line: 506, column: 7, scope: !2640)
!2665 = !DILocation(line: 506, column: 24, scope: !2640)
!2666 = !DILocation(line: 506, column: 21, scope: !2640)
!2667 = !DILocation(line: 506, column: 7, scope: !2629)
!2668 = !DILocation(line: 507, column: 12, scope: !2640)
!2669 = !DILocation(line: 507, column: 5, scope: !2640)
!2670 = !DILocation(line: 508, column: 12, scope: !2639)
!2671 = !DILocation(line: 508, column: 26, scope: !2639)
!2672 = !DILocation(line: 508, column: 12, scope: !2640)
!2673 = !DILocation(line: 510, column: 18, scope: !2638)
!2674 = !DILocation(line: 0, scope: !2638)
!2675 = !DILocation(line: 511, column: 31, scope: !2638)
!2676 = !DILocation(line: 513, column: 19, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 513, column: 11)
!2678 = !DILocation(line: 513, column: 11, scope: !2638)
!2679 = !DILocation(line: 516, column: 11, scope: !2638)
!2680 = !DILocation(line: 517, column: 7, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 516, column: 11)
!2682 = !DILocation(line: 517, column: 2, scope: !2681)
!2683 = !DILocation(line: 522, column: 1, scope: !2629)
!2684 = distinct !DISubprogram(name: "conditions_mutex_p", scope: !3, file: !3, line: 535, type: !2685, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2687)
!2685 = !DISubroutineType(types: !2686)
!2686 = !{!611, !1852, !1852, !610, !610}
!2687 = !{!2688, !2689, !2690, !2691}
!2688 = !DILocalVariable(name: "cond1", arg: 1, scope: !2684, file: !3, line: 535, type: !1852)
!2689 = !DILocalVariable(name: "cond2", arg: 2, scope: !2684, file: !3, line: 535, type: !1852)
!2690 = !DILocalVariable(name: "rev1", arg: 3, scope: !2684, file: !3, line: 535, type: !610)
!2691 = !DILocalVariable(name: "rev2", arg: 4, scope: !2684, file: !3, line: 535, type: !610)
!2692 = !DILocation(line: 0, scope: !2684)
!2693 = !DILocation(line: 537, column: 7, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2684, file: !3, line: 537, column: 7)
!2695 = !DILocation(line: 538, column: 7, scope: !2694)
!2696 = !DILocation(line: 538, column: 10, scope: !2694)
!2697 = !DILocation(line: 539, column: 7, scope: !2694)
!2698 = !DILocation(line: 540, column: 9, scope: !2694)
!2699 = !DILocation(line: 540, column: 5, scope: !2694)
!2700 = !DILocation(line: 541, column: 6, scope: !2694)
!2701 = !DILocation(line: 539, column: 27, scope: !2694)
!2702 = !DILocation(line: 543, column: 7, scope: !2694)
!2703 = !DILocation(line: 543, column: 10, scope: !2694)
!2704 = !DILocation(line: 543, column: 29, scope: !2694)
!2705 = !DILocation(line: 543, column: 26, scope: !2694)
!2706 = !DILocation(line: 544, column: 7, scope: !2694)
!2707 = !DILocation(line: 544, column: 10, scope: !2694)
!2708 = !DILocation(line: 544, column: 29, scope: !2694)
!2709 = !DILocation(line: 544, column: 26, scope: !2694)
!2710 = !DILocation(line: 537, column: 7, scope: !2684)
!2711 = !DILocation(line: 546, column: 3, scope: !2684)
!2712 = !DILocation(line: 547, column: 1, scope: !2684)
!2713 = distinct !DISubprogram(name: "sched_insn_is_legitimate_for_speculation_p", scope: !3, file: !3, line: 579, type: !2714, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2716)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!610, !1852, !618}
!2716 = !{!2717, !2718}
!2717 = !DILocalVariable(name: "insn", arg: 1, scope: !2713, file: !3, line: 579, type: !1852)
!2718 = !DILocalVariable(name: "ds", arg: 2, scope: !2713, file: !3, line: 579, type: !618)
!2719 = !DILocation(line: 0, scope: !2713)
!2720 = !DILocation(line: 581, column: 7, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 581, column: 7)
!2722 = !DILocation(line: 581, column: 7, scope: !2713)
!2723 = !DILocation(line: 584, column: 8, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 584, column: 7)
!2725 = !DILocation(line: 584, column: 7, scope: !2713)
!2726 = !DILocation(line: 587, column: 7, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 587, column: 7)
!2728 = !DILocation(line: 587, column: 7, scope: !2713)
!2729 = !DILocation(line: 590, column: 7, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 590, column: 7)
!2731 = !DILocation(line: 590, column: 7, scope: !2713)
!2732 = !DILocation(line: 593, column: 23, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 593, column: 7)
!2734 = !DILocation(line: 593, column: 7, scope: !2733)
!2735 = !DILocation(line: 593, column: 7, scope: !2713)
!2736 = !DILocation(line: 596, column: 10, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 596, column: 7)
!2738 = !DILocation(line: 596, column: 7, scope: !2713)
!2739 = !DILocation(line: 600, column: 23, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 600, column: 11)
!2741 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 599, column: 5)
!2742 = !DILocation(line: 600, column: 11, scope: !2740)
!2743 = !DILocation(line: 600, column: 11, scope: !2741)
!2744 = !DILocation(line: 607, column: 15, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 607, column: 11)
!2746 = !DILocation(line: 608, column: 4, scope: !2745)
!2747 = !DILocation(line: 608, column: 7, scope: !2745)
!2748 = !DILocation(line: 607, column: 11, scope: !2741)
!2749 = !DILocation(line: 614, column: 3, scope: !2713)
!2750 = !DILocation(line: 615, column: 1, scope: !2713)
!2751 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_base_index", scope: !562, file: !562, line: 846, type: !2752, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2756)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!2754, !2755, !7}
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!2756 = !{!2757, !2758}
!2757 = !DILocalVariable(name: "vec_", arg: 1, scope: !2751, file: !562, line: 846, type: !2755)
!2758 = !DILocalVariable(name: "ix_", arg: 2, scope: !2751, file: !562, line: 846, type: !7)
!2759 = !DILocation(line: 0, scope: !2751)
!2760 = !DILocation(line: 846, column: 1, scope: !2751)
!2761 = distinct !DISubprogram(name: "VEC_int_base_index", scope: !1157, file: !1157, line: 31, type: !2762, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2773)
!2762 = !DISubroutineType(types: !2763)
!2763 = !{!611, !2764, !7}
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2766)
!2766 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1157, line: 31, baseType: !2767)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1157, line: 31, size: 96, elements: !2768)
!2768 = !{!2769, !2770, !2771}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2767, file: !1157, line: 31, baseType: !7, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2767, file: !1157, line: 31, baseType: !7, size: 32, offset: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2767, file: !1157, line: 31, baseType: !2772, size: 32, offset: 64)
!2772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 32, elements: !654)
!2773 = !{!2774, !2775}
!2774 = !DILocalVariable(name: "vec_", arg: 1, scope: !2761, file: !1157, line: 31, type: !2764)
!2775 = !DILocalVariable(name: "ix_", arg: 2, scope: !2761, file: !1157, line: 31, type: !7)
!2776 = !DILocation(line: 0, scope: !2761)
!2777 = !DILocation(line: 31, column: 1, scope: !2761)
!2778 = distinct !DISubprogram(name: "sel_sched_p", scope: !562, file: !562, line: 117, type: !2588, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2031)
!2779 = !DILocation(line: 119, column: 10, scope: !2778)
!2780 = !DILocation(line: 119, column: 29, scope: !2778)
!2781 = !DILocation(line: 119, column: 43, scope: !2778)
!2782 = !DILocation(line: 119, column: 3, scope: !2778)
!2783 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_base_index", scope: !562, file: !562, line: 825, type: !2784, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2818)
!2784 = !DISubroutineType(types: !2785)
!2785 = !{!2786, !2810, !7}
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DIDerivedType(tag: DW_TAG_typedef, name: "haifa_insn_data_def", file: !562, line: 822, baseType: !2788)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_haifa_insn_data", file: !562, line: 751, size: 768, elements: !2789)
!2789 = !{!2790, !2791, !2792, !2793, !2794, !2795, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !2788, file: !562, line: 758, baseType: !611, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2788, file: !562, line: 761, baseType: !611, size: 32, offset: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "tick", scope: !2788, file: !562, line: 765, baseType: !611, size: 32, offset: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "inter_tick", scope: !2788, file: !562, line: 769, baseType: !611, size: 32, offset: 96)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !2788, file: !562, line: 772, baseType: !611, size: 32, offset: 128)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2788, file: !562, line: 774, baseType: !2796, size: 16, offset: 160)
!2796 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "fed_by_spec_load", scope: !2788, file: !562, line: 778, baseType: !7, size: 1, offset: 176, flags: DIFlagBitField, extraData: i64 176)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "is_load_insn", scope: !2788, file: !562, line: 779, baseType: !7, size: 1, offset: 177, flags: DIFlagBitField, extraData: i64 176)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "priority_status", scope: !2788, file: !562, line: 784, baseType: !1548, size: 8, offset: 184)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "todo_spec", scope: !2788, file: !562, line: 787, baseType: !618, size: 32, offset: 192)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "done_spec", scope: !2788, file: !562, line: 790, baseType: !618, size: 32, offset: 224)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "check_spec", scope: !2788, file: !562, line: 793, baseType: !618, size: 32, offset: 256)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_block", scope: !2788, file: !562, line: 796, baseType: !1174, size: 64, offset: 320)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pat", scope: !2788, file: !562, line: 799, baseType: !644, size: 64, offset: 384)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure", scope: !2788, file: !562, line: 804, baseType: !1838, size: 64, offset: 448)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg_pressure", scope: !2788, file: !562, line: 810, baseType: !1845, size: 64, offset: 512)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "reg_use_list", scope: !2788, file: !562, line: 813, baseType: !1831, size: 64, offset: 576)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "reg_set_list", scope: !2788, file: !562, line: 816, baseType: !1846, size: 64, offset: 640)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure_excess_cost_change", scope: !2788, file: !562, line: 819, baseType: !611, size: 32, offset: 704)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 64)
!2811 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_insn_data_def_base", file: !562, line: 825, baseType: !2812)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_insn_data_def_base", file: !562, line: 825, size: 832, elements: !2813)
!2813 = !{!2814, !2815, !2816}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2812, file: !562, line: 825, baseType: !7, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2812, file: !562, line: 825, baseType: !7, size: 32, offset: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2812, file: !562, line: 825, baseType: !2817, size: 768, offset: 64)
!2817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2787, size: 768, elements: !654)
!2818 = !{!2819, !2820}
!2819 = !DILocalVariable(name: "vec_", arg: 1, scope: !2783, file: !562, line: 825, type: !2810)
!2820 = !DILocalVariable(name: "ix_", arg: 2, scope: !2783, file: !562, line: 825, type: !7)
!2821 = !DILocation(line: 0, scope: !2783)
!2822 = !DILocation(line: 825, column: 1, scope: !2783)
!2823 = distinct !DISubprogram(name: "sched_has_condition_p", scope: !3, file: !3, line: 526, type: !2824, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2826)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{!610, !1852}
!2826 = !{!2827}
!2827 = !DILocalVariable(name: "insn", arg: 1, scope: !2823, file: !3, line: 526, type: !1852)
!2828 = !DILocation(line: 0, scope: !2823)
!2829 = !DILocation(line: 528, column: 13, scope: !2823)
!2830 = !DILocation(line: 528, column: 11, scope: !2823)
!2831 = !DILocation(line: 528, column: 10, scope: !2823)
!2832 = !DILocation(line: 528, column: 3, scope: !2823)
!2833 = distinct !DISubprogram(name: "sd_next_list", scope: !3, file: !3, line: 623, type: !2834, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2838)
!2834 = !DISubroutineType(types: !2835)
!2835 = !{null, !1852, !2836, !2837, !609}
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!2838 = !{!2839, !2840, !2841, !2842, !2843}
!2839 = !DILocalVariable(name: "insn", arg: 1, scope: !2833, file: !3, line: 623, type: !1852)
!2840 = !DILocalVariable(name: "types_ptr", arg: 2, scope: !2833, file: !3, line: 623, type: !2836)
!2841 = !DILocalVariable(name: "list_ptr", arg: 3, scope: !2833, file: !3, line: 624, type: !2837)
!2842 = !DILocalVariable(name: "resolved_p_ptr", arg: 4, scope: !2833, file: !3, line: 624, type: !609)
!2843 = !DILocalVariable(name: "types", scope: !2833, file: !3, line: 626, type: !1974)
!2844 = !DILocation(line: 0, scope: !2833)
!2845 = !DILocation(line: 626, column: 29, scope: !2833)
!2846 = !DILocation(line: 628, column: 13, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2833, file: !3, line: 628, column: 7)
!2848 = !DILocation(line: 628, column: 7, scope: !2833)
!2849 = !DILocation(line: 630, column: 19, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 629, column: 5)
!2851 = !DILocation(line: 630, column: 17, scope: !2850)
!2852 = !DILocation(line: 631, column: 23, scope: !2850)
!2853 = !DILocation(line: 632, column: 26, scope: !2850)
!2854 = !DILocation(line: 632, column: 18, scope: !2850)
!2855 = !DILocation(line: 633, column: 5, scope: !2850)
!2856 = !DILocation(line: 634, column: 18, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 634, column: 12)
!2858 = !DILocation(line: 634, column: 12, scope: !2847)
!2859 = !DILocation(line: 636, column: 19, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 635, column: 5)
!2861 = !DILocation(line: 636, column: 17, scope: !2860)
!2862 = !DILocation(line: 637, column: 23, scope: !2860)
!2863 = !DILocation(line: 638, column: 26, scope: !2860)
!2864 = !DILocation(line: 638, column: 18, scope: !2860)
!2865 = !DILocation(line: 639, column: 5, scope: !2860)
!2866 = !DILocation(line: 640, column: 18, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 640, column: 12)
!2868 = !DILocation(line: 640, column: 12, scope: !2857)
!2869 = !DILocation(line: 642, column: 19, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2867, file: !3, line: 641, column: 5)
!2871 = !DILocation(line: 642, column: 17, scope: !2870)
!2872 = !DILocation(line: 643, column: 23, scope: !2870)
!2873 = !DILocation(line: 644, column: 26, scope: !2870)
!2874 = !DILocation(line: 644, column: 18, scope: !2870)
!2875 = !DILocation(line: 645, column: 5, scope: !2870)
!2876 = !DILocation(line: 646, column: 18, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2867, file: !3, line: 646, column: 12)
!2878 = !DILocation(line: 646, column: 12, scope: !2867)
!2879 = !DILocation(line: 648, column: 19, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 647, column: 5)
!2881 = !DILocation(line: 648, column: 17, scope: !2880)
!2882 = !DILocation(line: 649, column: 23, scope: !2880)
!2883 = !DILocation(line: 650, column: 26, scope: !2880)
!2884 = !DILocation(line: 650, column: 18, scope: !2880)
!2885 = !DILocation(line: 651, column: 5, scope: !2880)
!2886 = !DILocation(line: 652, column: 18, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 652, column: 12)
!2888 = !DILocation(line: 652, column: 12, scope: !2877)
!2889 = !DILocation(line: 654, column: 19, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 653, column: 5)
!2891 = !DILocation(line: 654, column: 17, scope: !2890)
!2892 = !DILocation(line: 655, column: 23, scope: !2890)
!2893 = !DILocation(line: 656, column: 26, scope: !2890)
!2894 = !DILocation(line: 656, column: 18, scope: !2890)
!2895 = !DILocation(line: 657, column: 5, scope: !2890)
!2896 = !DILocation(line: 660, column: 17, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 659, column: 5)
!2898 = !DILocation(line: 661, column: 23, scope: !2897)
!2899 = !DILocation(line: 662, column: 18, scope: !2897)
!2900 = !DILocation(line: 664, column: 1, scope: !2833)
!2901 = distinct !DISubprogram(name: "sd_lists_size", scope: !3, file: !3, line: 668, type: !2902, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2904)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!611, !1852, !1974}
!2904 = !{!2905, !2906, !2907, !2908, !2910}
!2905 = !DILocalVariable(name: "insn", arg: 1, scope: !2901, file: !3, line: 668, type: !1852)
!2906 = !DILocalVariable(name: "list_types", arg: 2, scope: !2901, file: !3, line: 668, type: !1974)
!2907 = !DILocalVariable(name: "size", scope: !2901, file: !3, line: 670, type: !611)
!2908 = !DILocalVariable(name: "list", scope: !2909, file: !3, line: 674, type: !1804)
!2909 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 673, column: 5)
!2910 = !DILocalVariable(name: "resolved_p", scope: !2909, file: !3, line: 675, type: !610)
!2911 = !DILocation(line: 0, scope: !2901)
!2912 = !DILocation(line: 0, scope: !2909)
!2913 = !DILocation(line: 672, column: 3, scope: !2901)
!2914 = !DILocation(line: 672, column: 10, scope: !2901)
!2915 = !DILocation(line: 672, column: 21, scope: !2901)
!2916 = !DILocation(line: 674, column: 7, scope: !2909)
!2917 = !DILocation(line: 675, column: 7, scope: !2909)
!2918 = !DILocation(line: 677, column: 7, scope: !2909)
!2919 = !DILocation(line: 678, column: 11, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2909, file: !3, line: 678, column: 11)
!2921 = !DILocation(line: 678, column: 11, scope: !2909)
!2922 = !DILocation(line: 679, column: 10, scope: !2920)
!2923 = !DILocation(line: 679, column: 7, scope: !2920)
!2924 = !DILocation(line: 679, column: 2, scope: !2920)
!2925 = !DILocation(line: 680, column: 5, scope: !2901)
!2926 = distinct !{!2926, !2913, !2925}
!2927 = !DILocation(line: 682, column: 3, scope: !2901)
!2928 = distinct !DISubprogram(name: "sd_lists_empty_p", scope: !3, file: !3, line: 688, type: !2929, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2931)
!2929 = !DISubroutineType(types: !2930)
!2930 = !{!610, !1852, !1974}
!2931 = !{!2932, !2933, !2934, !2936}
!2932 = !DILocalVariable(name: "insn", arg: 1, scope: !2928, file: !3, line: 688, type: !1852)
!2933 = !DILocalVariable(name: "list_types", arg: 2, scope: !2928, file: !3, line: 688, type: !1974)
!2934 = !DILocalVariable(name: "list", scope: !2935, file: !3, line: 692, type: !1804)
!2935 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 691, column: 5)
!2936 = !DILocalVariable(name: "resolved_p", scope: !2935, file: !3, line: 693, type: !610)
!2937 = !DILocation(line: 0, scope: !2928)
!2938 = !DILocation(line: 692, column: 7, scope: !2935)
!2939 = !DILocation(line: 690, column: 3, scope: !2928)
!2940 = !DILocation(line: 690, column: 10, scope: !2928)
!2941 = !DILocation(line: 690, column: 21, scope: !2928)
!2942 = !DILocation(line: 0, scope: !2935)
!2943 = !DILocation(line: 693, column: 7, scope: !2935)
!2944 = !DILocation(line: 695, column: 7, scope: !2935)
!2945 = !DILocation(line: 696, column: 31, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 696, column: 11)
!2947 = !DILocation(line: 696, column: 12, scope: !2946)
!2948 = !DILocation(line: 698, column: 5, scope: !2928)
!2949 = !DILocation(line: 701, column: 1, scope: !2928)
!2950 = distinct !DISubprogram(name: "deps_list_empty_p", scope: !3, file: !3, line: 356, type: !2951, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2953)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!610, !1804}
!2953 = !{!2954}
!2954 = !DILocalVariable(name: "l", arg: 1, scope: !2950, file: !3, line: 356, type: !1804)
!2955 = !DILocation(line: 0, scope: !2950)
!2956 = !DILocation(line: 358, column: 10, scope: !2950)
!2957 = !DILocation(line: 358, column: 32, scope: !2950)
!2958 = !DILocation(line: 358, column: 3, scope: !2950)
!2959 = distinct !DISubprogram(name: "sd_init_insn", scope: !3, file: !3, line: 705, type: !1889, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2960)
!2960 = !{!2961}
!2961 = !DILocalVariable(name: "insn", arg: 1, scope: !2959, file: !3, line: 705, type: !644)
!2962 = !DILocation(line: 0, scope: !2959)
!2963 = !DILocation(line: 707, column: 32, scope: !2959)
!2964 = !DILocation(line: 707, column: 3, scope: !2959)
!2965 = !DILocation(line: 707, column: 30, scope: !2959)
!2966 = !DILocation(line: 708, column: 32, scope: !2959)
!2967 = !DILocation(line: 708, column: 3, scope: !2959)
!2968 = !DILocation(line: 708, column: 30, scope: !2959)
!2969 = !DILocation(line: 709, column: 36, scope: !2959)
!2970 = !DILocation(line: 709, column: 3, scope: !2959)
!2971 = !DILocation(line: 709, column: 34, scope: !2959)
!2972 = !DILocation(line: 710, column: 27, scope: !2959)
!2973 = !DILocation(line: 710, column: 3, scope: !2959)
!2974 = !DILocation(line: 710, column: 25, scope: !2959)
!2975 = !DILocation(line: 711, column: 36, scope: !2959)
!2976 = !DILocation(line: 711, column: 3, scope: !2959)
!2977 = !DILocation(line: 711, column: 34, scope: !2959)
!2978 = !DILocation(line: 713, column: 7, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2959, file: !3, line: 713, column: 7)
!2980 = !DILocation(line: 713, column: 7, scope: !2959)
!2981 = !DILocation(line: 714, column: 31, scope: !2979)
!2982 = !DILocation(line: 714, column: 5, scope: !2979)
!2983 = !DILocation(line: 717, column: 1, scope: !2959)
!2984 = distinct !DISubprogram(name: "create_deps_list", scope: !3, file: !3, line: 363, type: !2985, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2987)
!2985 = !DISubroutineType(types: !2986)
!2986 = !{!1804}
!2987 = !{!2988}
!2988 = !DILocalVariable(name: "l", scope: !2984, file: !3, line: 365, type: !1804)
!2989 = !DILocation(line: 365, column: 45, scope: !2984)
!2990 = !DILocation(line: 365, column: 33, scope: !2984)
!2991 = !DILocation(line: 365, column: 19, scope: !2984)
!2992 = !DILocation(line: 0, scope: !2984)
!2993 = !DILocation(line: 367, column: 3, scope: !2984)
!2994 = !DILocation(line: 367, column: 23, scope: !2984)
!2995 = !DILocation(line: 368, column: 3, scope: !2984)
!2996 = !DILocation(line: 368, column: 25, scope: !2984)
!2997 = !DILocation(line: 370, column: 3, scope: !2984)
!2998 = !DILocation(line: 371, column: 3, scope: !2984)
!2999 = distinct !DISubprogram(name: "sd_finish_insn", scope: !3, file: !3, line: 721, type: !1889, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3000)
!3000 = !{!3001}
!3001 = !DILocalVariable(name: "insn", arg: 1, scope: !2999, file: !3, line: 721, type: !644)
!3002 = !DILocation(line: 0, scope: !2999)
!3003 = !DILocation(line: 725, column: 7, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 725, column: 7)
!3005 = !DILocation(line: 725, column: 7, scope: !2999)
!3006 = !DILocation(line: 727, column: 7, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 726, column: 5)
!3008 = !DILocation(line: 728, column: 33, scope: !3007)
!3009 = !DILocation(line: 729, column: 5, scope: !3007)
!3010 = !DILocation(line: 731, column: 19, scope: !2999)
!3011 = !DILocation(line: 731, column: 3, scope: !2999)
!3012 = !DILocation(line: 732, column: 3, scope: !2999)
!3013 = !DILocation(line: 732, column: 30, scope: !2999)
!3014 = !DILocation(line: 734, column: 19, scope: !2999)
!3015 = !DILocation(line: 734, column: 3, scope: !2999)
!3016 = !DILocation(line: 735, column: 3, scope: !2999)
!3017 = !DILocation(line: 735, column: 30, scope: !2999)
!3018 = !DILocation(line: 737, column: 19, scope: !2999)
!3019 = !DILocation(line: 737, column: 3, scope: !2999)
!3020 = !DILocation(line: 738, column: 3, scope: !2999)
!3021 = !DILocation(line: 738, column: 34, scope: !2999)
!3022 = !DILocation(line: 740, column: 19, scope: !2999)
!3023 = !DILocation(line: 740, column: 3, scope: !2999)
!3024 = !DILocation(line: 741, column: 3, scope: !2999)
!3025 = !DILocation(line: 741, column: 25, scope: !2999)
!3026 = !DILocation(line: 743, column: 19, scope: !2999)
!3027 = !DILocation(line: 743, column: 3, scope: !2999)
!3028 = !DILocation(line: 744, column: 3, scope: !2999)
!3029 = !DILocation(line: 744, column: 34, scope: !2999)
!3030 = !DILocation(line: 745, column: 1, scope: !2999)
!3031 = distinct !DISubprogram(name: "free_deps_list", scope: !3, file: !3, line: 376, type: !3032, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3034)
!3032 = !DISubroutineType(types: !3033)
!3033 = !{null, !1804}
!3034 = !{!3035}
!3035 = !DILocalVariable(name: "l", arg: 1, scope: !3031, file: !3, line: 376, type: !1804)
!3036 = !DILocation(line: 0, scope: !3031)
!3037 = !DILocation(line: 378, column: 3, scope: !3031)
!3038 = !DILocation(line: 380, column: 3, scope: !3031)
!3039 = !DILocation(line: 382, column: 14, scope: !3031)
!3040 = !DILocation(line: 382, column: 23, scope: !3031)
!3041 = !DILocation(line: 382, column: 3, scope: !3031)
!3042 = !DILocation(line: 383, column: 1, scope: !3031)
!3043 = distinct !DISubprogram(name: "sd_find_dep_between", scope: !3, file: !3, line: 812, type: !3044, scopeLine: 813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3046)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{!2485, !644, !644, !610}
!3046 = !{!3047, !3048, !3049, !3050, !3053}
!3047 = !DILocalVariable(name: "pro", arg: 1, scope: !3043, file: !3, line: 812, type: !644)
!3048 = !DILocalVariable(name: "con", arg: 2, scope: !3043, file: !3, line: 812, type: !644)
!3049 = !DILocalVariable(name: "resolved_p", arg: 3, scope: !3043, file: !3, line: 812, type: !610)
!3050 = !DILocalVariable(name: "elem_luid", scope: !3051, file: !3, line: 818, type: !611)
!3051 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 817, column: 5)
!3052 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 814, column: 7)
!3053 = !DILocalVariable(name: "insn_luid", scope: !3051, file: !3, line: 819, type: !611)
!3054 = !DILocation(line: 0, scope: !3043)
!3055 = !DILocation(line: 814, column: 7, scope: !3052)
!3056 = !DILocation(line: 814, column: 29, scope: !3052)
!3057 = !DILocation(line: 814, column: 7, scope: !3043)
!3058 = !DILocation(line: 818, column: 23, scope: !3051)
!3059 = !DILocation(line: 0, scope: !3051)
!3060 = !DILocation(line: 819, column: 23, scope: !3051)
!3061 = !DILocation(line: 821, column: 7, scope: !3051)
!3062 = !DILocation(line: 824, column: 27, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 824, column: 11)
!3064 = !DILocation(line: 824, column: 12, scope: !3063)
!3065 = !DILocation(line: 825, column: 4, scope: !3063)
!3066 = !DILocation(line: 825, column: 23, scope: !3063)
!3067 = !DILocation(line: 825, column: 8, scope: !3063)
!3068 = !DILocation(line: 826, column: 4, scope: !3063)
!3069 = !DILocation(line: 826, column: 23, scope: !3063)
!3070 = !DILocation(line: 826, column: 8, scope: !3063)
!3071 = !DILocation(line: 824, column: 11, scope: !3051)
!3072 = !DILocation(line: 828, column: 5, scope: !3052)
!3073 = !DILocation(line: 830, column: 10, scope: !3043)
!3074 = !DILocation(line: 830, column: 3, scope: !3043)
!3075 = !DILocation(line: 831, column: 1, scope: !3043)
!3076 = distinct !DISubprogram(name: "sd_find_dep_between_no_cache", scope: !3, file: !3, line: 753, type: !3077, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3080)
!3077 = !DISubroutineType(types: !3078)
!3078 = !{!2485, !644, !644, !610, !3079}
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!3080 = !{!3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089}
!3081 = !DILocalVariable(name: "pro", arg: 1, scope: !3076, file: !3, line: 753, type: !644)
!3082 = !DILocalVariable(name: "con", arg: 2, scope: !3076, file: !3, line: 753, type: !644)
!3083 = !DILocalVariable(name: "resolved_p", arg: 3, scope: !3076, file: !3, line: 753, type: !610)
!3084 = !DILocalVariable(name: "sd_it_ptr", arg: 4, scope: !3076, file: !3, line: 754, type: !3079)
!3085 = !DILocalVariable(name: "pro_list_type", scope: !3076, file: !3, line: 756, type: !1974)
!3086 = !DILocalVariable(name: "con_list_type", scope: !3076, file: !3, line: 757, type: !1974)
!3087 = !DILocalVariable(name: "sd_it", scope: !3076, file: !3, line: 758, type: !1970)
!3088 = !DILocalVariable(name: "dep", scope: !3076, file: !3, line: 759, type: !2485)
!3089 = !DILocalVariable(name: "found_p", scope: !3076, file: !3, line: 760, type: !610)
!3090 = !DILocation(line: 0, scope: !3076)
!3091 = !DILocation(line: 758, column: 3, scope: !3076)
!3092 = !DILocation(line: 759, column: 3, scope: !3076)
!3093 = !DILocation(line: 762, column: 7, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 762, column: 7)
!3095 = !DILocation(line: 775, column: 7, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 775, column: 7)
!3097 = !DILocation(line: 775, column: 44, scope: !3096)
!3098 = !DILocation(line: 775, column: 42, scope: !3096)
!3099 = !DILocation(line: 775, column: 7, scope: !3076)
!3100 = !DILocation(line: 778, column: 7, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 778, column: 7)
!3102 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 776, column: 5)
!3103 = !DILocation(line: 778, column: 7, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 778, column: 7)
!3105 = !DILocation(line: 779, column: 6, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3104, file: !3, line: 779, column: 6)
!3107 = !DILocation(line: 779, column: 20, scope: !3106)
!3108 = !DILocation(line: 779, column: 6, scope: !3104)
!3109 = distinct !{!3109, !3100, !3110}
!3110 = !DILocation(line: 783, column: 4, scope: !3101)
!3111 = !DILocation(line: 788, column: 7, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3113, file: !3, line: 788, column: 7)
!3113 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 786, column: 5)
!3114 = !DILocation(line: 788, column: 7, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 788, column: 7)
!3116 = !DILocation(line: 789, column: 6, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3115, file: !3, line: 789, column: 6)
!3118 = !DILocation(line: 789, column: 20, scope: !3117)
!3119 = !DILocation(line: 789, column: 6, scope: !3115)
!3120 = distinct !{!3120, !3111, !3121}
!3121 = !DILocation(line: 793, column: 4, scope: !3112)
!3122 = !DILocation(line: 796, column: 7, scope: !3076)
!3123 = !DILocation(line: 798, column: 21, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !3, line: 798, column: 11)
!3125 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 797, column: 5)
!3126 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 796, column: 7)
!3127 = !DILocation(line: 798, column: 11, scope: !3125)
!3128 = !DILocation(line: 799, column: 15, scope: !3124)
!3129 = !DILocation(line: 799, column: 2, scope: !3124)
!3130 = !DILocation(line: 801, column: 14, scope: !3125)
!3131 = !DILocation(line: 801, column: 7, scope: !3125)
!3132 = !DILocation(line: 805, column: 1, scope: !3076)
!3133 = distinct !DISubprogram(name: "sd_add_dep", scope: !3, file: !3, line: 1221, type: !3134, scopeLine: 1222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3136)
!3134 = !DISubroutineType(types: !3135)
!3135 = !{null, !2485, !610}
!3136 = !{!3137, !3138, !3139, !3140, !3141, !3142, !3143}
!3137 = !DILocalVariable(name: "dep", arg: 1, scope: !3133, file: !3, line: 1221, type: !2485)
!3138 = !DILocalVariable(name: "resolved_p", arg: 2, scope: !3133, file: !3, line: 1221, type: !610)
!3139 = !DILocalVariable(name: "n", scope: !3133, file: !3, line: 1223, type: !1814)
!3140 = !DILocalVariable(name: "con_back_deps", scope: !3133, file: !3, line: 1224, type: !1804)
!3141 = !DILocalVariable(name: "pro_forw_deps", scope: !3133, file: !3, line: 1225, type: !1804)
!3142 = !DILocalVariable(name: "elem", scope: !3133, file: !3, line: 1226, type: !644)
!3143 = !DILocalVariable(name: "insn", scope: !3133, file: !3, line: 1227, type: !644)
!3144 = !DILocation(line: 0, scope: !3133)
!3145 = !DILocation(line: 1223, column: 18, scope: !3133)
!3146 = !DILocation(line: 1224, column: 3, scope: !3133)
!3147 = !DILocation(line: 1225, column: 3, scope: !3133)
!3148 = !DILocation(line: 1226, column: 14, scope: !3133)
!3149 = !DILocation(line: 1227, column: 14, scope: !3133)
!3150 = !DILocation(line: 1229, column: 3, scope: !3133)
!3151 = !DILocation(line: 1231, column: 8, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 1231, column: 7)
!3153 = !DILocation(line: 1231, column: 28, scope: !3152)
!3154 = !DILocation(line: 1231, column: 34, scope: !3152)
!3155 = !DILocation(line: 1232, column: 7, scope: !3152)
!3156 = !DILocation(line: 1232, column: 61, scope: !3152)
!3157 = !DILocation(line: 1232, column: 11, scope: !3152)
!3158 = !DILocation(line: 1231, column: 7, scope: !3133)
!3159 = !DILocation(line: 1233, column: 22, scope: !3152)
!3160 = !DILocation(line: 1233, column: 5, scope: !3152)
!3161 = !DILocation(line: 1235, column: 13, scope: !3133)
!3162 = !DILocation(line: 1235, column: 3, scope: !3133)
!3163 = !DILocation(line: 1237, column: 3, scope: !3133)
!3164 = !DILocation(line: 1239, column: 21, scope: !3133)
!3165 = !DILocation(line: 1239, column: 40, scope: !3133)
!3166 = !DILocation(line: 1239, column: 3, scope: !3133)
!3167 = !DILocation(line: 1245, column: 21, scope: !3133)
!3168 = !DILocation(line: 1245, column: 40, scope: !3133)
!3169 = !DILocation(line: 1245, column: 3, scope: !3133)
!3170 = !DILocation(line: 1249, column: 7, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 1249, column: 7)
!3172 = !DILocation(line: 1249, column: 29, scope: !3171)
!3173 = !DILocation(line: 1249, column: 7, scope: !3133)
!3174 = !DILocation(line: 1250, column: 5, scope: !3171)
!3175 = !DILocation(line: 1251, column: 1, scope: !3133)
!3176 = distinct !DISubprogram(name: "create_dep_node", scope: !3, file: !3, line: 315, type: !3177, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3179)
!3177 = !DISubroutineType(types: !3178)
!3178 = !{!1814}
!3179 = !{!3180, !3181, !3182}
!3180 = !DILocalVariable(name: "n", scope: !3176, file: !3, line: 317, type: !1814)
!3181 = !DILocalVariable(name: "back", scope: !3176, file: !3, line: 318, type: !1809)
!3182 = !DILocalVariable(name: "forw", scope: !3176, file: !3, line: 319, type: !1809)
!3183 = !DILocation(line: 317, column: 43, scope: !3176)
!3184 = !DILocation(line: 317, column: 31, scope: !3176)
!3185 = !DILocation(line: 317, column: 18, scope: !3176)
!3186 = !DILocation(line: 0, scope: !3176)
!3187 = !DILocation(line: 319, column: 21, scope: !3176)
!3188 = !DILocation(line: 321, column: 24, scope: !3176)
!3189 = !DILocation(line: 322, column: 3, scope: !3176)
!3190 = !DILocation(line: 322, column: 24, scope: !3176)
!3191 = !DILocation(line: 323, column: 3, scope: !3176)
!3192 = !DILocation(line: 323, column: 30, scope: !3176)
!3193 = !DILocation(line: 325, column: 24, scope: !3176)
!3194 = !DILocation(line: 326, column: 3, scope: !3176)
!3195 = !DILocation(line: 326, column: 24, scope: !3176)
!3196 = !DILocation(line: 327, column: 3, scope: !3176)
!3197 = !DILocation(line: 327, column: 30, scope: !3176)
!3198 = !DILocation(line: 329, column: 3, scope: !3176)
!3199 = !DILocation(line: 331, column: 3, scope: !3176)
!3200 = distinct !DISubprogram(name: "copy_dep", scope: !3, file: !3, line: 124, type: !3201, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3203)
!3201 = !DISubroutineType(types: !3202)
!3202 = !{null, !2485, !2485}
!3203 = !{!3204, !3205}
!3204 = !DILocalVariable(name: "to", arg: 1, scope: !3200, file: !3, line: 124, type: !2485)
!3205 = !DILocalVariable(name: "from", arg: 2, scope: !3200, file: !3, line: 124, type: !2485)
!3206 = !DILocation(line: 0, scope: !3200)
!3207 = !DILocation(line: 126, column: 11, scope: !3200)
!3208 = !DILocation(line: 126, column: 15, scope: !3200)
!3209 = !DILocation(line: 126, column: 3, scope: !3200)
!3210 = !DILocation(line: 127, column: 1, scope: !3200)
!3211 = distinct !DISubprogram(name: "get_back_and_forw_lists", scope: !3, file: !3, line: 1195, type: !3212, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3214)
!3212 = !DISubroutineType(types: !3213)
!3213 = !{null, !2485, !610, !2837, !2837}
!3214 = !{!3215, !3216, !3217, !3218, !3219}
!3215 = !DILocalVariable(name: "dep", arg: 1, scope: !3211, file: !3, line: 1195, type: !2485)
!3216 = !DILocalVariable(name: "resolved_p", arg: 2, scope: !3211, file: !3, line: 1195, type: !610)
!3217 = !DILocalVariable(name: "back_list_ptr", arg: 3, scope: !3211, file: !3, line: 1196, type: !2837)
!3218 = !DILocalVariable(name: "forw_list_ptr", arg: 4, scope: !3211, file: !3, line: 1197, type: !2837)
!3219 = !DILocalVariable(name: "con", scope: !3211, file: !3, line: 1199, type: !644)
!3220 = !DILocation(line: 0, scope: !3211)
!3221 = !DILocation(line: 1199, column: 13, scope: !3211)
!3222 = !DILocation(line: 1201, column: 8, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 1201, column: 7)
!3224 = !DILocation(line: 1201, column: 7, scope: !3211)
!3225 = !DILocation(line: 1203, column: 12, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 1203, column: 11)
!3227 = distinct !DILexicalBlock(scope: !3223, file: !3, line: 1202, column: 5)
!3228 = !DILocation(line: 1203, column: 32, scope: !3226)
!3229 = !DILocation(line: 1203, column: 38, scope: !3226)
!3230 = !DILocation(line: 1204, column: 4, scope: !3226)
!3231 = !DILocation(line: 1204, column: 8, scope: !3226)
!3232 = !DILocation(line: 1204, column: 25, scope: !3226)
!3233 = !DILocation(line: 1203, column: 11, scope: !3227)
!3234 = !DILocation(line: 1205, column: 19, scope: !3226)
!3235 = !DILocation(line: 1205, column: 17, scope: !3226)
!3236 = !DILocation(line: 1205, column: 2, scope: !3226)
!3237 = !DILocation(line: 1207, column: 19, scope: !3226)
!3238 = !DILocation(line: 1207, column: 17, scope: !3226)
!3239 = !DILocation(line: 1209, column: 24, scope: !3227)
!3240 = !DILocation(line: 1209, column: 22, scope: !3227)
!3241 = !DILocation(line: 1210, column: 5, scope: !3227)
!3242 = !DILocation(line: 1213, column: 24, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3223, file: !3, line: 1212, column: 5)
!3244 = !DILocation(line: 1213, column: 22, scope: !3243)
!3245 = !DILocation(line: 1214, column: 24, scope: !3243)
!3246 = !DILocation(line: 1214, column: 22, scope: !3243)
!3247 = !DILocation(line: 1216, column: 1, scope: !3211)
!3248 = distinct !DISubprogram(name: "add_to_deps_list", scope: !3, file: !3, line: 256, type: !3249, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3251)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{null, !1809, !1804}
!3251 = !{!3252, !3253}
!3252 = !DILocalVariable(name: "link", arg: 1, scope: !3248, file: !3, line: 256, type: !1809)
!3253 = !DILocalVariable(name: "l", arg: 2, scope: !3248, file: !3, line: 256, type: !1804)
!3254 = !DILocation(line: 0, scope: !3248)
!3255 = !DILocation(line: 258, column: 27, scope: !3248)
!3256 = !DILocation(line: 258, column: 3, scope: !3248)
!3257 = !DILocation(line: 261, column: 8, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 261, column: 7)
!3259 = !DILocation(line: 261, column: 7, scope: !3248)
!3260 = !DILocation(line: 262, column: 7, scope: !3258)
!3261 = !DILocation(line: 262, column: 5, scope: !3258)
!3262 = !DILocation(line: 263, column: 1, scope: !3248)
!3263 = distinct !DISubprogram(name: "set_dependency_caches", scope: !3, file: !3, line: 941, type: !2525, scopeLine: 942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3264)
!3264 = !{!3265, !3266, !3267, !3268}
!3265 = !DILocalVariable(name: "dep", arg: 1, scope: !3263, file: !3, line: 941, type: !2485)
!3266 = !DILocalVariable(name: "elem_luid", scope: !3263, file: !3, line: 943, type: !611)
!3267 = !DILocalVariable(name: "insn_luid", scope: !3263, file: !3, line: 944, type: !611)
!3268 = !DILocalVariable(name: "ds", scope: !3269, file: !3, line: 968, type: !618)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 967, column: 5)
!3270 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 946, column: 7)
!3271 = !DILocation(line: 0, scope: !3263)
!3272 = !DILocation(line: 943, column: 19, scope: !3263)
!3273 = !DILocation(line: 944, column: 19, scope: !3263)
!3274 = !DILocation(line: 946, column: 9, scope: !3270)
!3275 = !DILocation(line: 946, column: 29, scope: !3270)
!3276 = !DILocation(line: 946, column: 35, scope: !3270)
!3277 = !DILocation(line: 946, column: 7, scope: !3263)
!3278 = !DILocation(line: 948, column: 15, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 947, column: 5)
!3280 = !DILocation(line: 948, column: 7, scope: !3279)
!3281 = !DILocation(line: 951, column: 21, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3279, file: !3, line: 949, column: 2)
!3283 = !DILocation(line: 951, column: 4, scope: !3282)
!3284 = !DILocation(line: 952, column: 4, scope: !3282)
!3285 = !DILocation(line: 955, column: 21, scope: !3282)
!3286 = !DILocation(line: 955, column: 4, scope: !3282)
!3287 = !DILocation(line: 956, column: 4, scope: !3282)
!3288 = !DILocation(line: 959, column: 21, scope: !3282)
!3289 = !DILocation(line: 959, column: 4, scope: !3282)
!3290 = !DILocation(line: 960, column: 4, scope: !3282)
!3291 = !DILocation(line: 963, column: 4, scope: !3282)
!3292 = !DILocation(line: 964, column: 2, scope: !3282)
!3293 = !DILocation(line: 968, column: 17, scope: !3269)
!3294 = !DILocation(line: 0, scope: !3269)
!3295 = !DILocation(line: 970, column: 14, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 970, column: 11)
!3297 = !DILocation(line: 970, column: 11, scope: !3269)
!3298 = !DILocation(line: 971, column: 19, scope: !3296)
!3299 = !DILocation(line: 971, column: 2, scope: !3296)
!3300 = !DILocation(line: 972, column: 14, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 972, column: 11)
!3302 = !DILocation(line: 972, column: 11, scope: !3269)
!3303 = !DILocation(line: 973, column: 19, scope: !3301)
!3304 = !DILocation(line: 973, column: 2, scope: !3301)
!3305 = !DILocation(line: 974, column: 14, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 974, column: 11)
!3307 = !DILocation(line: 974, column: 11, scope: !3269)
!3308 = !DILocation(line: 975, column: 19, scope: !3306)
!3309 = !DILocation(line: 975, column: 2, scope: !3306)
!3310 = !DILocation(line: 977, column: 14, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 977, column: 11)
!3312 = !DILocation(line: 977, column: 11, scope: !3269)
!3313 = !DILocation(line: 979, column: 4, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3311, file: !3, line: 978, column: 2)
!3315 = !DILocation(line: 980, column: 21, scope: !3314)
!3316 = !DILocation(line: 980, column: 4, scope: !3314)
!3317 = !DILocation(line: 981, column: 2, scope: !3314)
!3318 = !DILocation(line: 983, column: 1, scope: !3263)
!3319 = distinct !DISubprogram(name: "sd_add_or_update_dep", scope: !3, file: !3, line: 1257, type: !3320, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3322)
!3320 = !DISubroutineType(types: !3321)
!3321 = !{!561, !2485, !610}
!3322 = !{!3323, !3324}
!3323 = !DILocalVariable(name: "dep", arg: 1, scope: !3319, file: !3, line: 1257, type: !2485)
!3324 = !DILocalVariable(name: "resolved_p", arg: 2, scope: !3319, file: !3, line: 1257, type: !610)
!3325 = !DILocation(line: 0, scope: !3319)
!3326 = !DILocation(line: 1259, column: 10, scope: !3319)
!3327 = !DILocation(line: 1259, column: 3, scope: !3319)
!3328 = distinct !DISubprogram(name: "add_or_update_dep_1", scope: !3, file: !3, line: 1118, type: !3329, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3331)
!3329 = !DISubroutineType(types: !3330)
!3330 = !{!561, !2485, !610, !644, !644}
!3331 = !{!3332, !3333, !3334, !3335, !3336, !3337, !3338, !3341}
!3332 = !DILocalVariable(name: "new_dep", arg: 1, scope: !3328, file: !3, line: 1118, type: !2485)
!3333 = !DILocalVariable(name: "resolved_p", arg: 2, scope: !3328, file: !3, line: 1118, type: !610)
!3334 = !DILocalVariable(name: "mem1", arg: 3, scope: !3328, file: !3, line: 1119, type: !644)
!3335 = !DILocalVariable(name: "mem2", arg: 4, scope: !3328, file: !3, line: 1119, type: !644)
!3336 = !DILocalVariable(name: "maybe_present_p", scope: !3328, file: !3, line: 1121, type: !610)
!3337 = !DILocalVariable(name: "present_p", scope: !3328, file: !3, line: 1122, type: !610)
!3338 = !DILocalVariable(name: "present_dep", scope: !3339, file: !3, line: 1157, type: !2485)
!3339 = distinct !DILexicalBlock(scope: !3340, file: !3, line: 1156, column: 5)
!3340 = distinct !DILexicalBlock(scope: !3328, file: !3, line: 1155, column: 7)
!3341 = !DILocalVariable(name: "sd_it", scope: !3339, file: !3, line: 1158, type: !1970)
!3342 = !DILocation(line: 0, scope: !3328)
!3343 = !DILocation(line: 1124, column: 3, scope: !3328)
!3344 = !DILocation(line: 1131, column: 7, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3328, file: !3, line: 1131, column: 7)
!3346 = !DILocation(line: 1131, column: 29, scope: !3345)
!3347 = !DILocation(line: 1131, column: 7, scope: !3328)
!3348 = !DILocation(line: 1133, column: 15, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 1132, column: 5)
!3350 = !DILocation(line: 1133, column: 7, scope: !3349)
!3351 = !DILocation(line: 1146, column: 4, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3349, file: !3, line: 1134, column: 2)
!3353 = !DILocation(line: 1149, column: 4, scope: !3352)
!3354 = !DILocation(line: 1150, column: 4, scope: !3352)
!3355 = !DILocation(line: 1122, column: 8, scope: !3328)
!3356 = !DILocation(line: 1155, column: 7, scope: !3328)
!3357 = !DILocation(line: 1158, column: 7, scope: !3339)
!3358 = !DILocation(line: 1160, column: 7, scope: !3339)
!3359 = !DILocation(line: 1162, column: 51, scope: !3339)
!3360 = !DILocation(line: 1163, column: 9, scope: !3339)
!3361 = !DILocation(line: 0, scope: !3339)
!3362 = !DILocation(line: 1162, column: 21, scope: !3339)
!3363 = !DILocation(line: 1166, column: 23, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 1166, column: 11)
!3365 = !DILocation(line: 1166, column: 11, scope: !3339)
!3366 = !DILocation(line: 1168, column: 9, scope: !3364)
!3367 = !DILocation(line: 1168, column: 2, scope: !3364)
!3368 = !DILocation(line: 1171, column: 2, scope: !3364)
!3369 = !DILocation(line: 1172, column: 5, scope: !3340)
!3370 = !DILocation(line: 1179, column: 12, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3328, file: !3, line: 1179, column: 7)
!3372 = !DILocation(line: 1179, column: 7, scope: !3328)
!3373 = !DILocation(line: 1181, column: 7, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 1180, column: 5)
!3375 = !DILocation(line: 1182, column: 44, scope: !3374)
!3376 = !DILocation(line: 1183, column: 9, scope: !3374)
!3377 = !DILocation(line: 1182, column: 30, scope: !3374)
!3378 = !DILocation(line: 1182, column: 28, scope: !3374)
!3379 = !DILocation(line: 1184, column: 5, scope: !3374)
!3380 = !DILocation(line: 1186, column: 3, scope: !3328)
!3381 = !DILocation(line: 1188, column: 3, scope: !3328)
!3382 = !DILocation(line: 1189, column: 1, scope: !3328)
!3383 = distinct !DISubprogram(name: "sd_resolve_dep", scope: !3, file: !3, line: 1265, type: !3384, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3386)
!3384 = !DISubroutineType(types: !3385)
!3385 = !{null, !1970}
!3386 = !{!3387, !3388, !3389, !3390, !3391}
!3387 = !DILocalVariable(name: "sd_it", arg: 1, scope: !3383, file: !3, line: 1265, type: !1970)
!3388 = !DILocalVariable(name: "node", scope: !3383, file: !3, line: 1267, type: !1814)
!3389 = !DILocalVariable(name: "dep", scope: !3383, file: !3, line: 1268, type: !2485)
!3390 = !DILocalVariable(name: "pro", scope: !3383, file: !3, line: 1269, type: !644)
!3391 = !DILocalVariable(name: "con", scope: !3383, file: !3, line: 1270, type: !644)
!3392 = !DILocation(line: 1265, column: 33, scope: !3383)
!3393 = !DILocation(line: 1267, column: 21, scope: !3383)
!3394 = !DILocation(line: 0, scope: !3383)
!3395 = !DILocation(line: 1269, column: 13, scope: !3383)
!3396 = !DILocation(line: 1270, column: 13, scope: !3383)
!3397 = !DILocation(line: 1272, column: 8, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 1272, column: 7)
!3399 = !DILocation(line: 1272, column: 28, scope: !3398)
!3400 = !DILocation(line: 1272, column: 34, scope: !3398)
!3401 = !DILocation(line: 1273, column: 7, scope: !3398)
!3402 = !DILocation(line: 1273, column: 11, scope: !3398)
!3403 = !DILocation(line: 1273, column: 28, scope: !3398)
!3404 = !DILocation(line: 1272, column: 7, scope: !3383)
!3405 = !DILocation(line: 1274, column: 20, scope: !3398)
!3406 = !DILocation(line: 1274, column: 42, scope: !3398)
!3407 = !DILocation(line: 1275, column: 6, scope: !3398)
!3408 = !DILocation(line: 1274, column: 5, scope: !3398)
!3409 = !DILocation(line: 1277, column: 20, scope: !3398)
!3410 = !DILocation(line: 1277, column: 42, scope: !3398)
!3411 = !DILocation(line: 1278, column: 6, scope: !3398)
!3412 = !DILocation(line: 1277, column: 5, scope: !3398)
!3413 = !DILocation(line: 1280, column: 18, scope: !3383)
!3414 = !DILocation(line: 1280, column: 40, scope: !3383)
!3415 = !DILocation(line: 1281, column: 4, scope: !3383)
!3416 = !DILocation(line: 1280, column: 3, scope: !3383)
!3417 = !DILocation(line: 1282, column: 1, scope: !3383)
!3418 = distinct !DISubprogram(name: "move_dep_link", scope: !3, file: !3, line: 294, type: !3419, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3421)
!3419 = !DISubroutineType(types: !3420)
!3420 = !{null, !1809, !1804, !1804}
!3421 = !{!3422, !3423, !3424}
!3422 = !DILocalVariable(name: "link", arg: 1, scope: !3418, file: !3, line: 294, type: !1809)
!3423 = !DILocalVariable(name: "from", arg: 2, scope: !3418, file: !3, line: 294, type: !1804)
!3424 = !DILocalVariable(name: "to", arg: 3, scope: !3418, file: !3, line: 294, type: !1804)
!3425 = !DILocation(line: 0, scope: !3418)
!3426 = !DILocation(line: 296, column: 3, scope: !3418)
!3427 = !DILocation(line: 297, column: 3, scope: !3418)
!3428 = !DILocation(line: 298, column: 1, scope: !3418)
!3429 = distinct !DISubprogram(name: "sd_copy_back_deps", scope: !3, file: !3, line: 1287, type: !3430, scopeLine: 1288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3432)
!3430 = !DISubroutineType(types: !3431)
!3431 = !{null, !644, !644, !610}
!3432 = !{!3433, !3434, !3435, !3436, !3437, !3438, !3439, !3443}
!3433 = !DILocalVariable(name: "to", arg: 1, scope: !3429, file: !3, line: 1287, type: !644)
!3434 = !DILocalVariable(name: "from", arg: 2, scope: !3429, file: !3, line: 1287, type: !644)
!3435 = !DILocalVariable(name: "resolved_p", arg: 3, scope: !3429, file: !3, line: 1287, type: !610)
!3436 = !DILocalVariable(name: "list_type", scope: !3429, file: !3, line: 1289, type: !1974)
!3437 = !DILocalVariable(name: "sd_it", scope: !3429, file: !3, line: 1290, type: !1970)
!3438 = !DILocalVariable(name: "dep", scope: !3429, file: !3, line: 1291, type: !2485)
!3439 = !DILocalVariable(name: "_new_dep", scope: !3440, file: !3, line: 1297, type: !2487)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 1296, column: 5)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !3, line: 1295, column: 3)
!3442 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 1295, column: 3)
!3443 = !DILocalVariable(name: "new_dep", scope: !3440, file: !3, line: 1297, type: !2486)
!3444 = !DILocation(line: 0, scope: !3429)
!3445 = !DILocation(line: 1290, column: 3, scope: !3429)
!3446 = !DILocation(line: 1291, column: 3, scope: !3429)
!3447 = !DILocation(line: 1293, column: 15, scope: !3429)
!3448 = !DILocation(line: 1295, column: 3, scope: !3442)
!3449 = !DILocation(line: 0, scope: !3440)
!3450 = !DILocation(line: 1295, column: 3, scope: !3441)
!3451 = !DILocation(line: 1297, column: 7, scope: !3440)
!3452 = !DILocation(line: 1299, column: 26, scope: !3440)
!3453 = !DILocation(line: 1299, column: 7, scope: !3440)
!3454 = !DILocation(line: 1300, column: 25, scope: !3440)
!3455 = !DILocation(line: 1301, column: 7, scope: !3440)
!3456 = !DILocation(line: 1302, column: 5, scope: !3441)
!3457 = distinct !{!3457, !3448, !3458}
!3458 = !DILocation(line: 1302, column: 5, scope: !3442)
!3459 = !DILocation(line: 1303, column: 1, scope: !3429)
!3460 = !DILocation(line: 0, scope: !1967)
!3461 = !DILocation(line: 1432, column: 19, scope: !1967)
!3462 = !DILocation(line: 1434, column: 5, scope: !1967)
!3463 = !DILocation(line: 1434, column: 11, scope: !1967)
!3464 = !DILocation(line: 1435, column: 5, scope: !1967)
!3465 = !DILocation(line: 1435, column: 10, scope: !1967)
!3466 = !DILocation(line: 1436, column: 5, scope: !1967)
!3467 = !DILocation(line: 1436, column: 11, scope: !1967)
!3468 = !DILocation(line: 1439, column: 5, scope: !1967)
!3469 = !DILocation(line: 1439, column: 16, scope: !1967)
!3470 = !DILocation(line: 1441, column: 3, scope: !1967)
!3471 = distinct !DISubprogram(name: "sd_iterator_cond", scope: !562, file: !562, line: 1446, type: !3472, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3475)
!3472 = !DISubroutineType(types: !3473)
!3473 = !{!610, !3079, !3474}
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!3475 = !{!3476, !3477, !3478, !3479, !3482}
!3476 = !DILocalVariable(name: "it_ptr", arg: 1, scope: !3471, file: !562, line: 1446, type: !3079)
!3477 = !DILocalVariable(name: "dep_ptr", arg: 2, scope: !3471, file: !562, line: 1446, type: !3474)
!3478 = !DILocalVariable(name: "link", scope: !3471, file: !562, line: 1448, type: !1809)
!3479 = !DILocalVariable(name: "types", scope: !3480, file: !562, line: 1457, type: !1974)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !562, line: 1456, column: 5)
!3481 = distinct !DILexicalBlock(scope: !3471, file: !562, line: 1450, column: 7)
!3482 = !DILocalVariable(name: "list", scope: !3483, file: !562, line: 1462, type: !1804)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !562, line: 1461, column: 2)
!3484 = distinct !DILexicalBlock(scope: !3480, file: !562, line: 1459, column: 11)
!3485 = !DILocation(line: 0, scope: !3471)
!3486 = !DILocation(line: 1448, column: 30, scope: !3471)
!3487 = !DILocation(line: 1448, column: 21, scope: !3471)
!3488 = !DILocation(line: 1450, column: 12, scope: !3481)
!3489 = !DILocation(line: 1450, column: 7, scope: !3471)
!3490 = !DILocation(line: 1452, column: 18, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3481, file: !562, line: 1451, column: 5)
!3492 = !DILocation(line: 1452, column: 16, scope: !3491)
!3493 = !DILocation(line: 1453, column: 7, scope: !3491)
!3494 = !DILocation(line: 1457, column: 41, scope: !3480)
!3495 = !DILocation(line: 0, scope: !3480)
!3496 = !DILocation(line: 1459, column: 17, scope: !3484)
!3497 = !DILocation(line: 1459, column: 11, scope: !3480)
!3498 = !DILocation(line: 1462, column: 4, scope: !3483)
!3499 = !DILocation(line: 1464, column: 26, scope: !3483)
!3500 = !DILocation(line: 1465, column: 36, scope: !3483)
!3501 = !DILocation(line: 0, scope: !3483)
!3502 = !DILocation(line: 1464, column: 4, scope: !3483)
!3503 = !DILocation(line: 1467, column: 21, scope: !3483)
!3504 = !DILocation(line: 1467, column: 18, scope: !3483)
!3505 = !DILocation(line: 1469, column: 8, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3483, file: !562, line: 1469, column: 8)
!3507 = !DILocation(line: 1469, column: 8, scope: !3483)
!3508 = !DILocation(line: 1470, column: 13, scope: !3506)
!3509 = !DILocation(line: 1470, column: 6, scope: !3506)
!3510 = !DILocation(line: 1471, column: 2, scope: !3484)
!3511 = !DILocation(line: 1473, column: 16, scope: !3480)
!3512 = !DILocation(line: 1474, column: 7, scope: !3480)
!3513 = !DILocation(line: 0, scope: !3481)
!3514 = !DILocation(line: 1476, column: 1, scope: !3471)
!3515 = distinct !DISubprogram(name: "sd_iterator_next", scope: !562, file: !562, line: 1480, type: !3516, scopeLine: 1481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3518)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{null, !3079}
!3518 = !{!3519}
!3519 = !DILocalVariable(name: "it_ptr", arg: 1, scope: !3515, file: !562, line: 1480, type: !3079)
!3520 = !DILocation(line: 0, scope: !3515)
!3521 = !DILocation(line: 1482, column: 20, scope: !3515)
!3522 = !DILocation(line: 1482, column: 17, scope: !3515)
!3523 = !DILocation(line: 1483, column: 1, scope: !3515)
!3524 = distinct !DISubprogram(name: "sd_delete_dep", scope: !3, file: !3, line: 1308, type: !3384, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3525)
!3525 = !{!3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3536}
!3526 = !DILocalVariable(name: "sd_it", arg: 1, scope: !3524, file: !3, line: 1308, type: !1970)
!3527 = !DILocalVariable(name: "n", scope: !3524, file: !3, line: 1310, type: !1814)
!3528 = !DILocalVariable(name: "dep", scope: !3524, file: !3, line: 1311, type: !2485)
!3529 = !DILocalVariable(name: "pro", scope: !3524, file: !3, line: 1312, type: !644)
!3530 = !DILocalVariable(name: "con", scope: !3524, file: !3, line: 1313, type: !644)
!3531 = !DILocalVariable(name: "con_back_deps", scope: !3524, file: !3, line: 1314, type: !1804)
!3532 = !DILocalVariable(name: "pro_forw_deps", scope: !3524, file: !3, line: 1315, type: !1804)
!3533 = !DILocalVariable(name: "elem_luid", scope: !3534, file: !3, line: 1319, type: !611)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 1318, column: 5)
!3535 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 1317, column: 7)
!3536 = !DILocalVariable(name: "insn_luid", scope: !3534, file: !3, line: 1320, type: !611)
!3537 = !DILocation(line: 1308, column: 32, scope: !3524)
!3538 = !DILocation(line: 1310, column: 18, scope: !3524)
!3539 = !DILocation(line: 0, scope: !3524)
!3540 = !DILocation(line: 1311, column: 15, scope: !3524)
!3541 = !DILocation(line: 1312, column: 13, scope: !3524)
!3542 = !DILocation(line: 1313, column: 13, scope: !3524)
!3543 = !DILocation(line: 1314, column: 3, scope: !3524)
!3544 = !DILocation(line: 1315, column: 3, scope: !3524)
!3545 = !DILocation(line: 1317, column: 7, scope: !3535)
!3546 = !DILocation(line: 1317, column: 29, scope: !3535)
!3547 = !DILocation(line: 1317, column: 7, scope: !3524)
!3548 = !DILocation(line: 1319, column: 23, scope: !3534)
!3549 = !DILocation(line: 0, scope: !3534)
!3550 = !DILocation(line: 1320, column: 23, scope: !3534)
!3551 = !DILocation(line: 1322, column: 26, scope: !3534)
!3552 = !DILocation(line: 1322, column: 7, scope: !3534)
!3553 = !DILocation(line: 1323, column: 26, scope: !3534)
!3554 = !DILocation(line: 1323, column: 7, scope: !3534)
!3555 = !DILocation(line: 1324, column: 26, scope: !3534)
!3556 = !DILocation(line: 1324, column: 7, scope: !3534)
!3557 = !DILocation(line: 1326, column: 11, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 1326, column: 11)
!3559 = !DILocation(line: 1326, column: 31, scope: !3558)
!3560 = !DILocation(line: 1326, column: 37, scope: !3558)
!3561 = !DILocation(line: 1326, column: 11, scope: !3534)
!3562 = !DILocation(line: 1327, column: 21, scope: !3558)
!3563 = !DILocation(line: 1327, column: 2, scope: !3558)
!3564 = !DILocation(line: 1330, column: 39, scope: !3524)
!3565 = !DILocation(line: 1330, column: 3, scope: !3524)
!3566 = !DILocation(line: 1333, column: 26, scope: !3524)
!3567 = !DILocation(line: 1333, column: 45, scope: !3524)
!3568 = !DILocation(line: 1333, column: 3, scope: !3524)
!3569 = !DILocation(line: 1334, column: 26, scope: !3524)
!3570 = !DILocation(line: 1334, column: 45, scope: !3524)
!3571 = !DILocation(line: 1334, column: 3, scope: !3524)
!3572 = !DILocation(line: 1336, column: 3, scope: !3524)
!3573 = !DILocation(line: 1337, column: 1, scope: !3524)
!3574 = distinct !DISubprogram(name: "remove_from_deps_list", scope: !3, file: !3, line: 283, type: !3249, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3575)
!3575 = !{!3576, !3577}
!3576 = !DILocalVariable(name: "link", arg: 1, scope: !3574, file: !3, line: 283, type: !1809)
!3577 = !DILocalVariable(name: "list", arg: 2, scope: !3574, file: !3, line: 283, type: !1804)
!3578 = !DILocation(line: 0, scope: !3574)
!3579 = !DILocation(line: 285, column: 3, scope: !3574)
!3580 = !DILocation(line: 288, column: 8, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 288, column: 7)
!3582 = !DILocation(line: 288, column: 7, scope: !3574)
!3583 = !DILocation(line: 289, column: 7, scope: !3581)
!3584 = !DILocation(line: 289, column: 5, scope: !3581)
!3585 = !DILocation(line: 290, column: 1, scope: !3574)
!3586 = distinct !DISubprogram(name: "delete_dep_node", scope: !3, file: !3, line: 336, type: !3587, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3589)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{null, !1814}
!3589 = !{!3590}
!3590 = !DILocalVariable(name: "n", arg: 1, scope: !3586, file: !3, line: 336, type: !1814)
!3591 = !DILocation(line: 0, scope: !3586)
!3592 = !DILocation(line: 338, column: 3, scope: !3586)
!3593 = !DILocation(line: 341, column: 3, scope: !3586)
!3594 = !DILocation(line: 343, column: 14, scope: !3586)
!3595 = !DILocation(line: 343, column: 23, scope: !3586)
!3596 = !DILocation(line: 343, column: 3, scope: !3586)
!3597 = !DILocation(line: 344, column: 1, scope: !3586)
!3598 = distinct !DISubprogram(name: "sd_debug_lists", scope: !3, file: !3, line: 1383, type: !3599, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3601)
!3599 = !DISubroutineType(types: !3600)
!3600 = !{null, !644, !1974}
!3601 = !{!3602, !3603}
!3602 = !DILocalVariable(name: "insn", arg: 1, scope: !3598, file: !3, line: 1383, type: !644)
!3603 = !DILocalVariable(name: "types", arg: 2, scope: !3598, file: !3, line: 1383, type: !1974)
!3604 = !DILocation(line: 0, scope: !3598)
!3605 = !DILocation(line: 1385, column: 15, scope: !3598)
!3606 = !DILocation(line: 1385, column: 3, scope: !3598)
!3607 = !DILocation(line: 1386, column: 12, scope: !3598)
!3608 = !DILocation(line: 1386, column: 3, scope: !3598)
!3609 = !DILocation(line: 1387, column: 1, scope: !3598)
!3610 = distinct !DISubprogram(name: "dump_lists", scope: !3, file: !3, line: 1354, type: !3611, scopeLine: 1355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3613)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{null, !2038, !644, !1974, !611}
!3613 = !{!3614, !3615, !3616, !3617, !3618, !3619, !3620}
!3614 = !DILocalVariable(name: "dump", arg: 1, scope: !3610, file: !3, line: 1354, type: !2038)
!3615 = !DILocalVariable(name: "insn", arg: 2, scope: !3610, file: !3, line: 1354, type: !644)
!3616 = !DILocalVariable(name: "types", arg: 3, scope: !3610, file: !3, line: 1354, type: !1974)
!3617 = !DILocalVariable(name: "flags", arg: 4, scope: !3610, file: !3, line: 1354, type: !611)
!3618 = !DILocalVariable(name: "sd_it", scope: !3610, file: !3, line: 1356, type: !1970)
!3619 = !DILocalVariable(name: "dep", scope: !3610, file: !3, line: 1357, type: !2485)
!3620 = !DILocalVariable(name: "all", scope: !3610, file: !3, line: 1358, type: !611)
!3621 = !DILocation(line: 0, scope: !3610)
!3622 = !DILocation(line: 1356, column: 3, scope: !3610)
!3623 = !DILocation(line: 1357, column: 3, scope: !3610)
!3624 = !DILocation(line: 1365, column: 3, scope: !3610)
!3625 = !DILocation(line: 1367, column: 7, scope: !3610)
!3626 = !DILocation(line: 1368, column: 28, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 1367, column: 7)
!3628 = !DILocation(line: 1368, column: 5, scope: !3627)
!3629 = !DILocation(line: 1370, column: 7, scope: !3610)
!3630 = !DILocation(line: 1372, column: 7, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 1372, column: 7)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !3, line: 1371, column: 5)
!3633 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 1370, column: 7)
!3634 = !DILocation(line: 1372, column: 7, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 1372, column: 7)
!3636 = !DILocation(line: 1374, column: 20, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 1373, column: 2)
!3638 = !DILocation(line: 1374, column: 4, scope: !3637)
!3639 = !DILocation(line: 1375, column: 4, scope: !3637)
!3640 = distinct !{!3640, !3630, !3641}
!3641 = !DILocation(line: 1376, column: 2, scope: !3631)
!3642 = !DILocation(line: 1378, column: 1, scope: !3610)
!3643 = distinct !DISubprogram(name: "haifa_note_reg_set", scope: !3, file: !3, line: 1633, type: !1901, scopeLine: 1634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3644)
!3644 = !{!3645}
!3645 = !DILocalVariable(name: "regno", arg: 1, scope: !3643, file: !3, line: 1633, type: !611)
!3646 = !DILocation(line: 0, scope: !3643)
!3647 = !DILocation(line: 1635, column: 3, scope: !3643)
!3648 = !DILocation(line: 1636, column: 1, scope: !3643)
!3649 = distinct !DISubprogram(name: "haifa_note_reg_clobber", scope: !3, file: !3, line: 1639, type: !1901, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3650)
!3650 = !{!3651}
!3651 = !DILocalVariable(name: "regno", arg: 1, scope: !3649, file: !3, line: 1639, type: !611)
!3652 = !DILocation(line: 0, scope: !3649)
!3653 = !DILocation(line: 1641, column: 3, scope: !3649)
!3654 = !DILocation(line: 1642, column: 1, scope: !3649)
!3655 = distinct !DISubprogram(name: "haifa_note_reg_use", scope: !3, file: !3, line: 1645, type: !1901, scopeLine: 1646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3656)
!3656 = !{!3657}
!3657 = !DILocalVariable(name: "regno", arg: 1, scope: !3655, file: !3, line: 1645, type: !611)
!3658 = !DILocation(line: 0, scope: !3655)
!3659 = !DILocation(line: 1647, column: 3, scope: !3655)
!3660 = !DILocation(line: 1648, column: 1, scope: !3655)
!3661 = distinct !DISubprogram(name: "ds_to_dt", scope: !3, file: !3, line: 1718, type: !2456, scopeLine: 1719, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3662)
!3662 = !{!3663}
!3663 = !DILocalVariable(name: "ds", arg: 1, scope: !3661, file: !3, line: 1718, type: !618)
!3664 = !DILocation(line: 0, scope: !3661)
!3665 = !DILocation(line: 1720, column: 10, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 1720, column: 7)
!3667 = !DILocation(line: 1720, column: 7, scope: !3661)
!3668 = !DILocation(line: 1722, column: 15, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3666, file: !3, line: 1722, column: 12)
!3670 = !DILocation(line: 1722, column: 12, scope: !3666)
!3671 = !DILocation(line: 1726, column: 7, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 1725, column: 5)
!3673 = !DILocation(line: 0, scope: !3666)
!3674 = !DILocation(line: 1729, column: 1, scope: !3661)
!3675 = distinct !DISubprogram(name: "maybe_extend_reg_info_p", scope: !3, file: !3, line: 2088, type: !1893, scopeLine: 2089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3676)
!3676 = !{!3677}
!3677 = !DILocalVariable(name: "new_reg_info_p_size", scope: !3678, file: !3, line: 2093, type: !1112)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 2092, column: 5)
!3679 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 2091, column: 7)
!3680 = !DILocation(line: 2091, column: 21, scope: !3679)
!3681 = !DILocation(line: 2091, column: 31, scope: !3679)
!3682 = !DILocation(line: 2091, column: 7, scope: !3679)
!3683 = !DILocation(line: 2091, column: 38, scope: !3679)
!3684 = !DILocation(line: 2091, column: 35, scope: !3679)
!3685 = !DILocation(line: 2091, column: 7, scope: !3675)
!3686 = !DILocation(line: 2093, column: 46, scope: !3678)
!3687 = !DILocation(line: 2093, column: 36, scope: !3678)
!3688 = !DILocation(line: 0, scope: !3678)
!3689 = !DILocation(line: 2095, column: 7, scope: !3678)
!3690 = !DILocation(line: 2097, column: 53, scope: !3678)
!3691 = !DILocation(line: 2099, column: 53, scope: !3678)
!3692 = !DILocation(line: 2097, column: 42, scope: !3678)
!3693 = !DILocation(line: 2097, column: 18, scope: !3678)
!3694 = !DILocation(line: 2101, column: 23, scope: !3678)
!3695 = !DILocation(line: 2102, column: 5, scope: !3678)
!3696 = !DILocation(line: 2103, column: 1, scope: !3675)
!3697 = distinct !DISubprogram(name: "deps_analyze_insn", scope: !3, file: !3, line: 3227, type: !3698, scopeLine: 3228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3723)
!3698 = !DISubroutineType(types: !3699)
!3699 = !{null, !3700, !644}
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3701, size: 64)
!3701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deps", file: !562, line: 451, size: 1472, elements: !3702)
!3702 = !{!3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3720, !3721, !3722}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_insns", scope: !3701, file: !562, line: 463, baseType: !644, size: 64)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_mems", scope: !3701, file: !562, line: 466, baseType: !644, size: 64, offset: 64)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_insns", scope: !3701, file: !562, line: 469, baseType: !644, size: 64, offset: 128)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_mems", scope: !3701, file: !562, line: 472, baseType: !644, size: 64, offset: 192)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_list_length", scope: !3701, file: !562, line: 480, baseType: !611, size: 32, offset: 256)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_list_length", scope: !3701, file: !562, line: 483, baseType: !611, size: 32, offset: 288)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "pending_flush_length", scope: !3701, file: !562, line: 487, baseType: !611, size: 32, offset: 320)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "last_pending_memory_flush", scope: !3701, file: !562, line: 498, baseType: !644, size: 64, offset: 384)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "last_function_call", scope: !3701, file: !562, line: 503, baseType: !644, size: 64, offset: 448)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "last_function_call_may_noreturn", scope: !3701, file: !562, line: 509, baseType: !644, size: 64, offset: 512)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "sched_before_next_call", scope: !3701, file: !562, line: 515, baseType: !644, size: 64, offset: 576)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "in_post_call_group_p", scope: !3701, file: !562, line: 519, baseType: !568, size: 32, offset: 640)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "last_debug_insn", scope: !3701, file: !562, line: 522, baseType: !644, size: 64, offset: 704)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg", scope: !3701, file: !562, line: 526, baseType: !611, size: 32, offset: 768)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "reg_last", scope: !3701, file: !562, line: 532, baseType: !1791, size: 64, offset: 832)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "reg_last_in_use", scope: !3701, file: !562, line: 536, baseType: !3719, size: 256, offset: 896)
!3719 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset_head", file: !142, line: 34, baseType: !1801)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "reg_conditional_sets", scope: !3701, file: !562, line: 539, baseType: !3719, size: 256, offset: 1152)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "last_reg_pending_barrier", scope: !3701, file: !562, line: 542, baseType: !573, size: 32, offset: 1408)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !3701, file: !562, line: 546, baseType: !7, size: 1, offset: 1440, flags: DIFlagBitField, extraData: i64 1440)
!3723 = !{!3724, !3725, !3726}
!3724 = !DILocalVariable(name: "deps", arg: 1, scope: !3697, file: !3, line: 3227, type: !3700)
!3725 = !DILocalVariable(name: "insn", arg: 2, scope: !3697, file: !3, line: 3227, type: !644)
!3726 = !DILocalVariable(name: "i", scope: !3727, file: !3, line: 3253, type: !611)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 3252, column: 5)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 3251, column: 12)
!3729 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 3232, column: 7)
!3730 = !DILocation(line: 0, scope: !3697)
!3731 = !DILocation(line: 3229, column: 7, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 3229, column: 7)
!3733 = !DILocation(line: 3229, column: 24, scope: !3732)
!3734 = !DILocation(line: 3229, column: 7, scope: !3697)
!3735 = !DILocation(line: 3230, column: 5, scope: !3732)
!3736 = !DILocation(line: 3232, column: 7, scope: !3729)
!3737 = !DILocation(line: 3232, column: 29, scope: !3729)
!3738 = !DILocation(line: 3232, column: 32, scope: !3729)
!3739 = !DILocation(line: 3232, column: 52, scope: !3729)
!3740 = !DILocation(line: 3232, column: 55, scope: !3729)
!3741 = !DILocation(line: 3232, column: 7, scope: !3697)
!3742 = !DILocation(line: 3236, column: 18, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 3236, column: 11)
!3744 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 3233, column: 5)
!3745 = !DILocation(line: 3236, column: 12, scope: !3743)
!3746 = !DILocation(line: 3237, column: 11, scope: !3743)
!3747 = !DILocation(line: 3237, column: 14, scope: !3743)
!3748 = !DILocation(line: 3238, column: 11, scope: !3743)
!3749 = !DILocation(line: 3238, column: 16, scope: !3743)
!3750 = !DILocation(line: 3239, column: 16, scope: !3743)
!3751 = !DILocation(line: 3239, column: 19, scope: !3743)
!3752 = !DILocation(line: 3236, column: 11, scope: !3744)
!3753 = !DILocation(line: 3242, column: 21, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 3242, column: 15)
!3755 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 3240, column: 9)
!3756 = !DILocation(line: 3242, column: 41, scope: !3754)
!3757 = !DILocation(line: 3242, column: 46, scope: !3754)
!3758 = !DILocation(line: 3242, column: 44, scope: !3754)
!3759 = !DILocation(line: 3242, column: 15, scope: !3755)
!3760 = !DILocation(line: 3243, column: 13, scope: !3754)
!3761 = !DILocation(line: 3246, column: 46, scope: !3754)
!3762 = !DILocation(line: 3246, column: 17, scope: !3754)
!3763 = !DILocation(line: 3246, column: 15, scope: !3754)
!3764 = !DILocation(line: 3249, column: 33, scope: !3744)
!3765 = !DILocation(line: 3249, column: 7, scope: !3744)
!3766 = !DILocation(line: 3250, column: 5, scope: !3744)
!3767 = !DILocation(line: 3251, column: 12, scope: !3728)
!3768 = !DILocation(line: 3251, column: 12, scope: !3729)
!3769 = !DILocation(line: 3255, column: 7, scope: !3727)
!3770 = !DILocation(line: 3255, column: 24, scope: !3727)
!3771 = !DILocation(line: 3257, column: 11, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 3257, column: 11)
!3773 = !DILocation(line: 3257, column: 11, scope: !3727)
!3774 = !DILocation(line: 3265, column: 11, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 3265, column: 11)
!3776 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 3264, column: 9)
!3777 = !DILocation(line: 3261, column: 31, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 3258, column: 9)
!3779 = !DILocation(line: 3262, column: 9, scope: !3778)
!3780 = !DILocation(line: 0, scope: !3775)
!3781 = !DILocation(line: 0, scope: !3727)
!3782 = !DILocation(line: 3265, column: 25, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3775, file: !3, line: 3265, column: 11)
!3784 = !DILocation(line: 3267, column: 17, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3783, file: !3, line: 3267, column: 17)
!3786 = !DILocation(line: 3267, column: 17, scope: !3783)
!3787 = !DILocation(line: 3269, column: 17, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 3268, column: 15)
!3789 = !DILocation(line: 3270, column: 17, scope: !3788)
!3790 = !DILocation(line: 3271, column: 15, scope: !3788)
!3791 = !DILocation(line: 3277, column: 25, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 3276, column: 22)
!3793 = !DILocation(line: 3276, column: 22, scope: !3785)
!3794 = !DILocation(line: 3278, column: 15, scope: !3792)
!3795 = !DILocation(line: 3282, column: 22, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 3282, column: 22)
!3797 = !DILocation(line: 3282, column: 22, scope: !3792)
!3798 = !DILocation(line: 3283, column: 8, scope: !3796)
!3799 = !DILocation(line: 3290, column: 22, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 3289, column: 22)
!3801 = !DILocation(line: 3291, column: 32, scope: !3800)
!3802 = !DILocation(line: 3291, column: 49, scope: !3800)
!3803 = !DILocation(line: 3291, column: 52, scope: !3800)
!3804 = !DILocation(line: 3289, column: 22, scope: !3796)
!3805 = !DILocation(line: 3292, column: 8, scope: !3800)
!3806 = !DILocation(line: 3265, column: 51, scope: !3783)
!3807 = !DILocation(line: 3265, column: 11, scope: !3783)
!3808 = distinct !{!3808, !3774, !3809}
!3809 = !DILocation(line: 3292, column: 8, scope: !3775)
!3810 = !DILocation(line: 3298, column: 44, scope: !3727)
!3811 = !DILocation(line: 3297, column: 7, scope: !3727)
!3812 = !DILocation(line: 3301, column: 33, scope: !3727)
!3813 = !DILocation(line: 3301, column: 7, scope: !3727)
!3814 = !DILocation(line: 3310, column: 7, scope: !3727)
!3815 = !DILocation(line: 3316, column: 48, scope: !3727)
!3816 = !DILocation(line: 3316, column: 7, scope: !3727)
!3817 = !DILocation(line: 3318, column: 18, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 3318, column: 11)
!3819 = !DILocation(line: 3318, column: 12, scope: !3818)
!3820 = !DILocation(line: 3318, column: 11, scope: !3727)
!3821 = !DILocation(line: 3321, column: 39, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 3319, column: 9)
!3823 = !DILocation(line: 3321, column: 11, scope: !3822)
!3824 = !DILocation(line: 3322, column: 38, scope: !3822)
!3825 = !DILocation(line: 3322, column: 36, scope: !3822)
!3826 = !DILocation(line: 3324, column: 8, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 3324, column: 8)
!3828 = !DILocation(line: 3324, column: 8, scope: !3822)
!3829 = !DILocation(line: 3328, column: 36, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3827, file: !3, line: 3325, column: 6)
!3831 = !DILocation(line: 3328, column: 8, scope: !3830)
!3832 = !DILocation(line: 3330, column: 5, scope: !3830)
!3833 = !DILocation(line: 3330, column: 3, scope: !3830)
!3834 = !DILocation(line: 3331, column: 6, scope: !3830)
!3835 = !DILocation(line: 3335, column: 17, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 3335, column: 15)
!3837 = !DILocation(line: 3335, column: 15, scope: !3822)
!3838 = !DILocation(line: 3336, column: 19, scope: !3836)
!3839 = !DILocation(line: 3336, column: 40, scope: !3836)
!3840 = !DILocation(line: 3336, column: 13, scope: !3836)
!3841 = !DILocation(line: 3340, column: 7, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 3340, column: 7)
!3843 = !DILocation(line: 3340, column: 24, scope: !3842)
!3844 = !DILocation(line: 3340, column: 7, scope: !3697)
!3845 = !DILocation(line: 3341, column: 5, scope: !3842)
!3846 = !DILocation(line: 3345, column: 7, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 3345, column: 7)
!3848 = !DILocation(line: 3345, column: 7, scope: !3697)
!3849 = !DILocation(line: 3346, column: 5, scope: !3847)
!3850 = !DILocation(line: 3349, column: 7, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 3349, column: 7)
!3852 = !DILocation(line: 3349, column: 24, scope: !3851)
!3853 = !DILocation(line: 3349, column: 7, scope: !3697)
!3854 = !DILocation(line: 3350, column: 5, scope: !3851)
!3855 = !DILocation(line: 3353, column: 8, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 3353, column: 7)
!3857 = !DILocation(line: 3353, column: 30, scope: !3856)
!3858 = !DILocation(line: 3353, column: 33, scope: !3856)
!3859 = !DILocation(line: 3354, column: 7, scope: !3856)
!3860 = !DILocation(line: 3354, column: 10, scope: !3856)
!3861 = !DILocation(line: 3354, column: 31, scope: !3856)
!3862 = !DILocation(line: 3354, column: 35, scope: !3856)
!3863 = !DILocation(line: 3353, column: 7, scope: !3697)
!3864 = !DILocation(line: 3355, column: 5, scope: !3856)
!3865 = !DILocation(line: 3356, column: 1, scope: !3697)
!3866 = distinct !DISubprogram(name: "flush_pending_lists", scope: !3, file: !3, line: 1583, type: !3867, scopeLine: 1585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3869)
!3867 = !DISubroutineType(types: !3868)
!3868 = !{null, !3700, !644, !611, !611}
!3869 = !{!3870, !3871, !3872, !3873}
!3870 = !DILocalVariable(name: "deps", arg: 1, scope: !3866, file: !3, line: 1583, type: !3700)
!3871 = !DILocalVariable(name: "insn", arg: 2, scope: !3866, file: !3, line: 1583, type: !644)
!3872 = !DILocalVariable(name: "for_read", arg: 3, scope: !3866, file: !3, line: 1583, type: !611)
!3873 = !DILocalVariable(name: "for_write", arg: 4, scope: !3866, file: !3, line: 1584, type: !611)
!3874 = !DILocation(line: 0, scope: !3866)
!3875 = !DILocation(line: 1586, column: 7, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 1586, column: 7)
!3877 = !DILocation(line: 1586, column: 7, scope: !3866)
!3878 = !DILocation(line: 1588, column: 56, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 1587, column: 5)
!3880 = !DILocation(line: 1588, column: 7, scope: !3879)
!3881 = !DILocation(line: 1590, column: 18, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3879, file: !3, line: 1590, column: 11)
!3883 = !DILocation(line: 1590, column: 12, scope: !3882)
!3884 = !DILocation(line: 1590, column: 11, scope: !3879)
!3885 = !DILocation(line: 1592, column: 39, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3882, file: !3, line: 1591, column: 9)
!3887 = !DILocation(line: 1592, column: 11, scope: !3886)
!3888 = !DILocation(line: 1593, column: 17, scope: !3886)
!3889 = !DILocation(line: 1593, column: 42, scope: !3886)
!3890 = !DILocation(line: 1594, column: 9, scope: !3886)
!3891 = !DILocation(line: 1597, column: 52, scope: !3866)
!3892 = !DILocation(line: 1598, column: 5, scope: !3866)
!3893 = !DILocation(line: 1597, column: 3, scope: !3866)
!3894 = !DILocation(line: 1601, column: 40, scope: !3866)
!3895 = !DILocation(line: 1600, column: 3, scope: !3866)
!3896 = !DILocation(line: 1603, column: 14, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 1603, column: 7)
!3898 = !DILocation(line: 1603, column: 8, scope: !3897)
!3899 = !DILocation(line: 1603, column: 7, scope: !3866)
!3900 = !DILocation(line: 1605, column: 35, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 1604, column: 5)
!3902 = !DILocation(line: 1605, column: 7, scope: !3901)
!3903 = !DILocation(line: 1606, column: 13, scope: !3901)
!3904 = !DILocation(line: 1606, column: 39, scope: !3901)
!3905 = !DILocation(line: 1608, column: 41, scope: !3901)
!3906 = !DILocation(line: 1608, column: 39, scope: !3901)
!3907 = !DILocation(line: 1609, column: 13, scope: !3901)
!3908 = !DILocation(line: 1609, column: 34, scope: !3901)
!3909 = !DILocation(line: 1610, column: 5, scope: !3901)
!3910 = !DILocation(line: 1611, column: 1, scope: !3866)
!3911 = distinct !DISubprogram(name: "sched_analyze_insn", scope: !3, file: !3, line: 2612, type: !3912, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3914)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{null, !3700, !644, !644}
!3914 = !{!3915, !3916, !3917, !3918, !3919, !3920, !3921, !3930, !3933, !3940, !3943, !3946, !3947, !3950, !3951, !3955, !3958, !3959, !3963, !3968, !3973, !3979, !3983, !3988, !3992, !3997, !4005, !4010, !4015, !4018, !4019, !4020, !4021, !4026, !4027, !4030}
!3915 = !DILocalVariable(name: "deps", arg: 1, scope: !3911, file: !3, line: 2612, type: !3700)
!3916 = !DILocalVariable(name: "x", arg: 2, scope: !3911, file: !3, line: 2612, type: !644)
!3917 = !DILocalVariable(name: "insn", arg: 3, scope: !3911, file: !3, line: 2612, type: !644)
!3918 = !DILocalVariable(name: "code", scope: !3911, file: !3, line: 2614, type: !419)
!3919 = !DILocalVariable(name: "link", scope: !3911, file: !3, line: 2615, type: !644)
!3920 = !DILocalVariable(name: "i", scope: !3911, file: !3, line: 2616, type: !7)
!3921 = !DILocalVariable(name: "rsi", scope: !3911, file: !3, line: 2617, type: !3922)
!3922 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_set_iterator", file: !142, line: 90, baseType: !3923)
!3923 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !696, line: 218, baseType: !3924)
!3924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 203, size: 256, elements: !3925)
!3925 = !{!3926, !3927, !3928, !3929}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !3924, file: !696, line: 206, baseType: !699, size: 64)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !3924, file: !696, line: 209, baseType: !699, size: 64, offset: 64)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !3924, file: !696, line: 212, baseType: !7, size: 32, offset: 128)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !3924, file: !696, line: 217, baseType: !709, size: 64, offset: 192)
!3930 = !DILocalVariable(name: "temp", scope: !3931, file: !3, line: 2621, type: !1789)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 2620, column: 5)
!3932 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2619, column: 7)
!3933 = !DILocalVariable(name: "sub", scope: !3934, file: !3, line: 2663, type: !644)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 2662, column: 2)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 2661, column: 7)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !3, line: 2661, column: 7)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 2660, column: 5)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 2659, column: 12)
!3939 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2648, column: 7)
!3940 = !DILocalVariable(name: "next", scope: !3941, file: !3, line: 2697, type: !644)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !3, line: 2696, column: 5)
!3942 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2695, column: 7)
!3943 = !DILocalVariable(name: "pending", scope: !3944, file: !3, line: 2705, type: !644)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 2704, column: 2)
!3945 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 2701, column: 11)
!3946 = !DILocalVariable(name: "pending_mem", scope: !3944, file: !3, line: 2705, type: !644)
!3947 = !DILocalVariable(name: "tmp_uses", scope: !3948, file: !3, line: 2709, type: !3719)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 2708, column: 13)
!3949 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 2707, column: 15)
!3950 = !DILocalVariable(name: "tmp_sets", scope: !3948, file: !3, line: 2709, type: !3719)
!3951 = !DILocalVariable(name: "reg_last", scope: !3952, file: !3, line: 2718, type: !1791)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 2717, column: 17)
!3953 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 2716, column: 15)
!3954 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 2716, column: 15)
!3955 = !DILocalVariable(name: "prev", scope: !3956, file: !3, line: 2786, type: !644)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 2785, column: 5)
!3957 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2784, column: 7)
!3958 = !DILocalVariable(name: "u", scope: !3956, file: !3, line: 2787, type: !644)
!3959 = !DILocalVariable(name: "reg_last", scope: !3960, file: !3, line: 2805, type: !1791)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 2804, column: 2)
!3961 = distinct !DILexicalBlock(scope: !3962, file: !3, line: 2803, column: 7)
!3962 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 2803, column: 7)
!3963 = !DILocalVariable(name: "reg_last", scope: !3964, file: !3, line: 2830, type: !1791)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !3, line: 2829, column: 2)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 2828, column: 7)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 2828, column: 7)
!3967 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 2827, column: 5)
!3968 = !DILocalVariable(name: "reg_last", scope: !3969, file: !3, line: 2845, type: !1791)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 2844, column: 4)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 2843, column: 6)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 2842, column: 7)
!3972 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 2842, column: 7)
!3973 = !DILocalVariable(name: "reg_last", scope: !3974, file: !3, line: 2864, type: !1791)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 2863, column: 6)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 2862, column: 4)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 2862, column: 4)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 2861, column: 2)
!3978 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 2860, column: 11)
!3979 = !DILocalVariable(name: "reg_last", scope: !3980, file: !3, line: 2879, type: !1791)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !3, line: 2878, column: 6)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 2877, column: 4)
!3982 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 2877, column: 4)
!3983 = !DILocalVariable(name: "reg_last", scope: !3984, file: !3, line: 2897, type: !1791)
!3984 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 2896, column: 6)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 2895, column: 4)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 2895, column: 4)
!3987 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 2894, column: 2)
!3988 = !DILocalVariable(name: "reg_last", scope: !3989, file: !3, line: 2935, type: !1791)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 2934, column: 6)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 2933, column: 4)
!3991 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 2933, column: 4)
!3992 = !DILocalVariable(name: "reg_last", scope: !3993, file: !3, line: 2961, type: !1791)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 2960, column: 7)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 2959, column: 9)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 2958, column: 3)
!3996 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2958, column: 3)
!3997 = !DILocalVariable(name: "reg_last", scope: !3998, file: !3, line: 3000, type: !1791)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 2999, column: 6)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 2998, column: 4)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 2998, column: 4)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 2997, column: 2)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 2996, column: 11)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 2993, column: 5)
!4004 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2992, column: 7)
!4005 = !DILocalVariable(name: "reg_last", scope: !4006, file: !3, line: 3016, type: !1791)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 3015, column: 6)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 3014, column: 4)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 3014, column: 4)
!4009 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 3013, column: 2)
!4010 = !DILocalVariable(name: "reg_last", scope: !4011, file: !3, line: 3040, type: !1791)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 3039, column: 11)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 3038, column: 9)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 3038, column: 9)
!4014 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 3037, column: 11)
!4015 = !DILocalVariable(name: "tmp", scope: !4016, file: !3, line: 3066, type: !644)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !3, line: 3065, column: 5)
!4017 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 3064, column: 7)
!4018 = !DILocalVariable(name: "set", scope: !4016, file: !3, line: 3066, type: !644)
!4019 = !DILocalVariable(name: "src_regno", scope: !4016, file: !3, line: 3067, type: !611)
!4020 = !DILocalVariable(name: "dest_regno", scope: !4016, file: !3, line: 3067, type: !611)
!4021 = !DILocalVariable(name: "sd_it", scope: !4022, file: !3, line: 3148, type: !1970)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 3147, column: 9)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3144, column: 11)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 3143, column: 5)
!4025 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 3139, column: 7)
!4026 = !DILocalVariable(name: "dep", scope: !4022, file: !3, line: 3149, type: !2485)
!4027 = !DILabel(scope: !4028, name: "end_call_group", file: !3, line: 3132)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 3131, column: 2)
!4029 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 3117, column: 11)
!4030 = !DILabel(scope: !3911, name: "debug_dont_end_call_group", file: !3, line: 3138)
!4031 = !DILocation(line: 0, scope: !3911)
!4032 = !DILocation(line: 2614, column: 19, scope: !3911)
!4033 = !DILocation(line: 2616, column: 3, scope: !3911)
!4034 = !DILocation(line: 2617, column: 3, scope: !3911)
!4035 = !DILocation(line: 2619, column: 9, scope: !3932)
!4036 = !DILocation(line: 2619, column: 7, scope: !3911)
!4037 = !DILocation(line: 2621, column: 7, scope: !3931)
!4038 = !DILocation(line: 2623, column: 7, scope: !3931)
!4039 = !DILocation(line: 2624, column: 7, scope: !3931)
!4040 = !DILocation(line: 0, scope: !3931)
!4041 = !DILocation(line: 2625, column: 7, scope: !3931)
!4042 = !DILocation(line: 2626, column: 7, scope: !3931)
!4043 = !DILocation(line: 2627, column: 7, scope: !3931)
!4044 = !DILocation(line: 2628, column: 5, scope: !3932)
!4045 = !DILocation(line: 2628, column: 5, scope: !3931)
!4046 = !DILocation(line: 2630, column: 26, scope: !3911)
!4047 = !DILocation(line: 2631, column: 13, scope: !3911)
!4048 = !DILocation(line: 2631, column: 5, scope: !3911)
!4049 = !DILocation(line: 2630, column: 25, scope: !3911)
!4050 = !DILocation(line: 2630, column: 23, scope: !3911)
!4051 = !DILocation(line: 2633, column: 7, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2633, column: 7)
!4053 = !DILocation(line: 2633, column: 7, scope: !3911)
!4054 = !DILocation(line: 2636, column: 38, scope: !4052)
!4055 = !DILocation(line: 2636, column: 5, scope: !4052)
!4056 = !DILocation(line: 2639, column: 12, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2639, column: 7)
!4058 = !DILocation(line: 2639, column: 7, scope: !3911)
!4059 = !DILocation(line: 2641, column: 30, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 2640, column: 5)
!4061 = !DILocation(line: 2641, column: 7, scope: !4060)
!4062 = !DILocation(line: 2645, column: 11, scope: !4060)
!4063 = !DILocation(line: 2646, column: 14, scope: !4060)
!4064 = !DILocation(line: 2647, column: 5, scope: !4060)
!4065 = !DILocation(line: 2648, column: 19, scope: !3939)
!4066 = !DILocation(line: 2650, column: 7, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 2649, column: 5)
!4068 = !DILocation(line: 2655, column: 16, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 2655, column: 11)
!4070 = !DILocation(line: 2655, column: 11, scope: !4067)
!4071 = !DILocation(line: 2656, column: 35, scope: !4069)
!4072 = !DILocation(line: 2656, column: 2, scope: !4069)
!4073 = !DILocation(line: 2661, column: 16, scope: !3936)
!4074 = !DILocation(line: 2661, column: 14, scope: !3936)
!4075 = !DILocation(line: 2661, column: 12, scope: !3936)
!4076 = !DILocation(line: 2661, column: 33, scope: !3935)
!4077 = !DILocation(line: 2661, column: 7, scope: !3936)
!4078 = !DILocation(line: 2663, column: 14, scope: !3934)
!4079 = !DILocation(line: 0, scope: !3934)
!4080 = !DILocation(line: 2664, column: 11, scope: !3934)
!4081 = !DILocation(line: 2666, column: 13, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !3934, file: !3, line: 2666, column: 8)
!4083 = !DILocation(line: 2666, column: 8, scope: !3934)
!4084 = !DILocation(line: 2668, column: 31, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 2667, column: 6)
!4086 = !DILocation(line: 2668, column: 8, scope: !4085)
!4087 = !DILocation(line: 2669, column: 14, scope: !4085)
!4088 = !DILocation(line: 2670, column: 15, scope: !4085)
!4089 = !DILocation(line: 2671, column: 6, scope: !4085)
!4090 = !DILocation(line: 2672, column: 20, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !3934, file: !3, line: 2672, column: 8)
!4092 = !DILocation(line: 2673, column: 6, scope: !4091)
!4093 = !DILocation(line: 2675, column: 6, scope: !4091)
!4094 = !DILocation(line: 2661, column: 7, scope: !3935)
!4095 = distinct !{!4095, !4077, !4096}
!4096 = !DILocation(line: 2676, column: 2, scope: !3936)
!4097 = !DILocation(line: 2679, column: 5, scope: !3938)
!4098 = !DILocation(line: 2682, column: 7, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2682, column: 7)
!4100 = !DILocation(line: 2682, column: 7, scope: !3911)
!4101 = !DILocation(line: 2684, column: 19, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 2684, column: 7)
!4103 = distinct !DILexicalBlock(scope: !4099, file: !3, line: 2683, column: 5)
!4104 = !DILocation(line: 2684, column: 12, scope: !4102)
!4105 = !DILocation(line: 0, scope: !4102)
!4106 = !DILocation(line: 2684, column: 7, scope: !4102)
!4107 = !DILocation(line: 2686, column: 8, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 2686, column: 8)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 2685, column: 2)
!4110 = distinct !DILexicalBlock(scope: !4102, file: !3, line: 2684, column: 7)
!4111 = !DILocation(line: 2686, column: 34, scope: !4108)
!4112 = !DILocation(line: 0, scope: !4108)
!4113 = !DILocation(line: 2686, column: 8, scope: !4109)
!4114 = !DILocation(line: 2687, column: 6, scope: !4108)
!4115 = !DILocation(line: 2689, column: 6, scope: !4108)
!4116 = !DILocation(line: 2684, column: 65, scope: !4110)
!4117 = !DILocation(line: 2684, column: 7, scope: !4110)
!4118 = distinct !{!4118, !4106, !4119}
!4119 = !DILocation(line: 2690, column: 2, scope: !4102)
!4120 = !DILocation(line: 2691, column: 11, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 2691, column: 11)
!4122 = !DILocation(line: 2691, column: 11, scope: !4103)
!4123 = !DILocation(line: 2692, column: 22, scope: !4121)
!4124 = !DILocation(line: 2692, column: 2, scope: !4121)
!4125 = !DILocation(line: 2695, column: 7, scope: !3942)
!4126 = !DILocation(line: 2695, column: 7, scope: !3911)
!4127 = !DILocation(line: 2698, column: 14, scope: !3941)
!4128 = !DILocation(line: 0, scope: !3941)
!4129 = !DILocation(line: 2699, column: 7, scope: !3941)
!4130 = !DILocation(line: 2699, column: 19, scope: !3941)
!4131 = !DILocation(line: 2699, column: 22, scope: !3941)
!4132 = !DILocation(line: 2700, column: 9, scope: !3941)
!4133 = distinct !{!4133, !4129, !4134}
!4134 = !DILocation(line: 2700, column: 32, scope: !3941)
!4135 = !DILocation(line: 2701, column: 19, scope: !3945)
!4136 = !DILocation(line: 2701, column: 11, scope: !3941)
!4137 = !DILocation(line: 2702, column: 22, scope: !3945)
!4138 = !DILocation(line: 2702, column: 2, scope: !3945)
!4139 = !DILocation(line: 2707, column: 15, scope: !3949)
!4140 = !DILocation(line: 2707, column: 32, scope: !3949)
!4141 = !DILocation(line: 2707, column: 15, scope: !3944)
!4142 = !DILocation(line: 2709, column: 15, scope: !3948)
!4143 = !DILocation(line: 0, scope: !3948)
!4144 = !DILocation(line: 2710, column: 15, scope: !3948)
!4145 = !DILocation(line: 2711, column: 15, scope: !3948)
!4146 = !DILocation(line: 2713, column: 17, scope: !3948)
!4147 = !DILocation(line: 2713, column: 34, scope: !3948)
!4148 = !DILocation(line: 2714, column: 31, scope: !3948)
!4149 = !DILocation(line: 2713, column: 15, scope: !3948)
!4150 = !DILocation(line: 2716, column: 15, scope: !3954)
!4151 = !DILocation(line: 0, scope: !3952)
!4152 = !DILocation(line: 0, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !3952, file: !3, line: 2725, column: 23)
!4154 = !DILocation(line: 2716, column: 15, scope: !3953)
!4155 = !DILocation(line: 2718, column: 54, scope: !3952)
!4156 = !DILocation(line: 2718, column: 63, scope: !3952)
!4157 = !DILocation(line: 2718, column: 48, scope: !3952)
!4158 = !DILocation(line: 2719, column: 56, scope: !3952)
!4159 = !DILocation(line: 2719, column: 19, scope: !3952)
!4160 = !DILocation(line: 2720, column: 56, scope: !3952)
!4161 = !DILocation(line: 2720, column: 19, scope: !3952)
!4162 = !DILocation(line: 2722, column: 56, scope: !3952)
!4163 = !DILocation(line: 2722, column: 19, scope: !3952)
!4164 = !DILocation(line: 2725, column: 30, scope: !4153)
!4165 = !DILocation(line: 2725, column: 24, scope: !4153)
!4166 = !DILocation(line: 2725, column: 23, scope: !3952)
!4167 = !DILocation(line: 2727, column: 33, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 2726, column: 21)
!4169 = !DILocation(line: 2727, column: 44, scope: !4168)
!4170 = !DILocation(line: 2728, column: 73, scope: !4168)
!4171 = !DILocation(line: 2728, column: 40, scope: !4168)
!4172 = !DILocation(line: 2728, column: 38, scope: !4168)
!4173 = !DILocation(line: 2729, column: 21, scope: !4168)
!4174 = distinct !{!4174, !4150, !4175}
!4175 = !DILocation(line: 2730, column: 17, scope: !3954)
!4176 = !DILocation(line: 2731, column: 15, scope: !3948)
!4177 = !DILocation(line: 2733, column: 15, scope: !3948)
!4178 = !DILocation(line: 2734, column: 15, scope: !3948)
!4179 = !DILocation(line: 2735, column: 13, scope: !3949)
!4180 = !DILocation(line: 2735, column: 13, scope: !3948)
!4181 = !DILocation(line: 2741, column: 20, scope: !3944)
!4182 = !DILocation(line: 2743, column: 4, scope: !3944)
!4183 = !DILocation(line: 0, scope: !3944)
!4184 = !DILocation(line: 2745, column: 52, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !3, line: 2745, column: 12)
!4186 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 2744, column: 6)
!4187 = !DILocation(line: 2745, column: 14, scope: !4185)
!4188 = !DILocation(line: 2745, column: 12, scope: !4186)
!4189 = !DILocation(line: 2746, column: 25, scope: !4185)
!4190 = !DILocation(line: 2746, column: 3, scope: !4185)
!4191 = !DILocation(line: 2747, column: 18, scope: !4186)
!4192 = distinct !{!4192, !4182, !4193}
!4193 = !DILocation(line: 2749, column: 6, scope: !3944)
!4194 = !DILocation(line: 2751, column: 20, scope: !3944)
!4195 = !DILocation(line: 2752, column: 24, scope: !3944)
!4196 = !DILocation(line: 2753, column: 4, scope: !3944)
!4197 = !DILocation(line: 2755, column: 12, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 2755, column: 12)
!4199 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 2754, column: 6)
!4200 = !DILocation(line: 2756, column: 5, scope: !4198)
!4201 = !DILocation(line: 2756, column: 48, scope: !4198)
!4202 = !DILocation(line: 2756, column: 10, scope: !4198)
!4203 = !DILocation(line: 2755, column: 12, scope: !4199)
!4204 = !DILocation(line: 2757, column: 25, scope: !4198)
!4205 = !DILocation(line: 2757, column: 3, scope: !4198)
!4206 = !DILocation(line: 2758, column: 18, scope: !4199)
!4207 = !DILocation(line: 2759, column: 22, scope: !4199)
!4208 = distinct !{!4208, !4196, !4209}
!4209 = !DILocation(line: 2760, column: 6, scope: !3944)
!4210 = !DILocation(line: 2762, column: 37, scope: !3944)
!4211 = !DILocation(line: 2762, column: 4, scope: !3944)
!4212 = !DILocation(line: 2773, column: 9, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2773, column: 7)
!4214 = !DILocation(line: 2773, column: 23, scope: !4213)
!4215 = !DILocation(line: 2773, column: 26, scope: !4213)
!4216 = !DILocation(line: 2773, column: 41, scope: !4213)
!4217 = !DILocation(line: 2773, column: 44, scope: !4213)
!4218 = !DILocation(line: 2774, column: 7, scope: !4213)
!4219 = !DILocation(line: 2774, column: 11, scope: !4213)
!4220 = !DILocation(line: 2774, column: 33, scope: !4213)
!4221 = !DILocation(line: 2774, column: 36, scope: !4213)
!4222 = !DILocation(line: 2773, column: 7, scope: !3911)
!4223 = !DILocation(line: 2775, column: 25, scope: !4213)
!4224 = !DILocation(line: 2775, column: 5, scope: !4213)
!4225 = !DILocation(line: 2777, column: 7, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2777, column: 7)
!4227 = !DILocation(line: 2777, column: 7, scope: !3911)
!4228 = !DILocation(line: 2779, column: 7, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 2778, column: 5)
!4230 = !DILocation(line: 2780, column: 7, scope: !4229)
!4231 = !DILocation(line: 2781, column: 5, scope: !4229)
!4232 = !DILocation(line: 2784, column: 7, scope: !3957)
!4233 = !DILocation(line: 2784, column: 7, scope: !3911)
!4234 = !DILocation(line: 2786, column: 24, scope: !3956)
!4235 = !DILocation(line: 0, scope: !3956)
!4236 = !DILocation(line: 2789, column: 18, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 2789, column: 11)
!4238 = !DILocation(line: 2789, column: 12, scope: !4237)
!4239 = !DILocation(line: 2789, column: 11, scope: !3956)
!4240 = !DILocation(line: 2790, column: 24, scope: !4237)
!4241 = !DILocation(line: 2790, column: 2, scope: !4237)
!4242 = !DILocation(line: 2792, column: 11, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 2792, column: 11)
!4244 = !DILocation(line: 2792, column: 11, scope: !3956)
!4245 = !DILocation(line: 2793, column: 2, scope: !4243)
!4246 = !DILocation(line: 2795, column: 40, scope: !3956)
!4247 = !DILocation(line: 2795, column: 7, scope: !3956)
!4248 = !DILocation(line: 2798, column: 22, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 2798, column: 7)
!4250 = !DILocation(line: 2798, column: 12, scope: !4249)
!4251 = !DILocation(line: 0, scope: !4249)
!4252 = !DILocation(line: 2798, column: 7, scope: !4249)
!4253 = !DILocation(line: 2799, column: 8, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 2799, column: 6)
!4255 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 2798, column: 7)
!4256 = !DILocation(line: 2800, column: 6, scope: !4254)
!4257 = !DILocation(line: 2800, column: 10, scope: !4254)
!4258 = !DILocation(line: 2799, column: 6, scope: !4255)
!4259 = !DILocation(line: 0, scope: !4254)
!4260 = !DILocation(line: 2801, column: 26, scope: !4254)
!4261 = !DILocation(line: 2801, column: 4, scope: !4254)
!4262 = !DILocation(line: 2798, column: 56, scope: !4255)
!4263 = !DILocation(line: 2798, column: 7, scope: !4255)
!4264 = distinct !{!4264, !4252, !4265}
!4265 = !DILocation(line: 2801, column: 51, scope: !4249)
!4266 = !DILocation(line: 2803, column: 7, scope: !3962)
!4267 = !DILocation(line: 0, scope: !3960)
!4268 = !DILocation(line: 2803, column: 7, scope: !3961)
!4269 = !DILocation(line: 2805, column: 39, scope: !3960)
!4270 = !DILocation(line: 2805, column: 48, scope: !3960)
!4271 = !DILocation(line: 2805, column: 33, scope: !3960)
!4272 = !DILocation(line: 2806, column: 41, scope: !3960)
!4273 = !DILocation(line: 2806, column: 4, scope: !3960)
!4274 = !DILocation(line: 2807, column: 41, scope: !3960)
!4275 = !DILocation(line: 2807, column: 4, scope: !3960)
!4276 = !DILocation(line: 2809, column: 15, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 2809, column: 8)
!4278 = !DILocation(line: 2809, column: 9, scope: !4277)
!4279 = !DILocation(line: 2809, column: 8, scope: !3960)
!4280 = !DILocation(line: 2810, column: 56, scope: !4277)
!4281 = !DILocation(line: 2810, column: 23, scope: !4277)
!4282 = !DILocation(line: 2810, column: 21, scope: !4277)
!4283 = !DILocation(line: 2810, column: 6, scope: !4277)
!4284 = distinct !{!4284, !4266, !4285}
!4285 = !DILocation(line: 2811, column: 2, scope: !3962)
!4286 = !DILocation(line: 2812, column: 7, scope: !3956)
!4287 = !DILocation(line: 2821, column: 14, scope: !3956)
!4288 = !DILocation(line: 2823, column: 11, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 2823, column: 11)
!4290 = !DILocation(line: 2823, column: 16, scope: !4289)
!4291 = !DILocation(line: 2823, column: 19, scope: !4289)
!4292 = !DILocation(line: 2823, column: 11, scope: !3956)
!4293 = !DILocation(line: 2824, column: 2, scope: !4289)
!4294 = !DILocation(line: 2828, column: 7, scope: !3966)
!4295 = !DILocation(line: 0, scope: !3964)
!4296 = !DILocation(line: 0, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 2835, column: 8)
!4298 = !DILocation(line: 2828, column: 7, scope: !3965)
!4299 = !DILocation(line: 2830, column: 39, scope: !3964)
!4300 = !DILocation(line: 2830, column: 48, scope: !3964)
!4301 = !DILocation(line: 2830, column: 33, scope: !3964)
!4302 = !DILocation(line: 2831, column: 41, scope: !3964)
!4303 = !DILocation(line: 2831, column: 4, scope: !3964)
!4304 = !DILocation(line: 2832, column: 41, scope: !3964)
!4305 = !DILocation(line: 2832, column: 4, scope: !3964)
!4306 = !DILocation(line: 2833, column: 41, scope: !3964)
!4307 = !DILocation(line: 2833, column: 4, scope: !3964)
!4308 = !DILocation(line: 2835, column: 15, scope: !4297)
!4309 = !DILocation(line: 2835, column: 9, scope: !4297)
!4310 = !DILocation(line: 2835, column: 8, scope: !3964)
!4311 = !DILocation(line: 2837, column: 58, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2836, column: 6)
!4313 = !DILocation(line: 2837, column: 25, scope: !4312)
!4314 = !DILocation(line: 2837, column: 23, scope: !4312)
!4315 = !DILocation(line: 2838, column: 18, scope: !4312)
!4316 = !DILocation(line: 2838, column: 29, scope: !4312)
!4317 = !DILocation(line: 2839, column: 6, scope: !4312)
!4318 = distinct !{!4318, !4294, !4319}
!4319 = !DILocation(line: 2840, column: 2, scope: !3966)
!4320 = !DILocation(line: 2842, column: 12, scope: !3972)
!4321 = !DILocation(line: 0, scope: !3972)
!4322 = !DILocation(line: 2842, column: 21, scope: !3971)
!4323 = !DILocation(line: 2842, column: 7, scope: !3972)
!4324 = !DILocation(line: 2843, column: 6, scope: !3970)
!4325 = !DILocation(line: 2843, column: 6, scope: !3971)
!4326 = !DILocation(line: 2845, column: 41, scope: !3969)
!4327 = !DILocation(line: 0, scope: !3969)
!4328 = !DILocation(line: 2846, column: 43, scope: !3969)
!4329 = !DILocation(line: 2846, column: 6, scope: !3969)
!4330 = !DILocation(line: 2847, column: 43, scope: !3969)
!4331 = !DILocation(line: 2847, column: 6, scope: !3969)
!4332 = !DILocation(line: 2849, column: 43, scope: !3969)
!4333 = !DILocation(line: 2849, column: 6, scope: !3969)
!4334 = !DILocation(line: 2851, column: 17, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 2851, column: 10)
!4336 = !DILocation(line: 2851, column: 11, scope: !4335)
!4337 = !DILocation(line: 2851, column: 10, scope: !3969)
!4338 = !DILocation(line: 2853, column: 53, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4335, file: !3, line: 2852, column: 8)
!4340 = !DILocation(line: 2853, column: 20, scope: !4339)
!4341 = !DILocation(line: 2853, column: 18, scope: !4339)
!4342 = !DILocation(line: 2854, column: 13, scope: !4339)
!4343 = !DILocation(line: 2854, column: 24, scope: !4339)
!4344 = !DILocation(line: 2855, column: 8, scope: !4339)
!4345 = !DILocation(line: 2842, column: 47, scope: !3971)
!4346 = !DILocation(line: 2842, column: 7, scope: !3971)
!4347 = distinct !{!4347, !4323, !4348}
!4348 = !DILocation(line: 2856, column: 4, scope: !3972)
!4349 = !DILocation(line: 2860, column: 11, scope: !3978)
!4350 = !DILocation(line: 0, scope: !3978)
!4351 = !DILocation(line: 2860, column: 11, scope: !3967)
!4352 = !DILocation(line: 2862, column: 4, scope: !3976)
!4353 = !DILocation(line: 2895, column: 4, scope: !3986)
!4354 = !DILocation(line: 2862, column: 4, scope: !3975)
!4355 = !DILocation(line: 2864, column: 43, scope: !3974)
!4356 = !DILocation(line: 2864, column: 52, scope: !3974)
!4357 = !DILocation(line: 2864, column: 37, scope: !3974)
!4358 = !DILocation(line: 0, scope: !3974)
!4359 = !DILocation(line: 2865, column: 45, scope: !3974)
!4360 = !DILocation(line: 2865, column: 8, scope: !3974)
!4361 = !DILocation(line: 2866, column: 45, scope: !3974)
!4362 = !DILocation(line: 2866, column: 8, scope: !3974)
!4363 = !DILocation(line: 2868, column: 45, scope: !3974)
!4364 = !DILocation(line: 2868, column: 8, scope: !3974)
!4365 = !DILocation(line: 2870, column: 19, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 2870, column: 12)
!4367 = !DILocation(line: 2870, column: 13, scope: !4366)
!4368 = !DILocation(line: 2870, column: 12, scope: !3974)
!4369 = !DILocation(line: 2873, column: 42, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 2871, column: 3)
!4371 = !DILocation(line: 2873, column: 9, scope: !4370)
!4372 = !DILocation(line: 2873, column: 7, scope: !4370)
!4373 = !DILocation(line: 2874, column: 15, scope: !4370)
!4374 = !DILocation(line: 2874, column: 30, scope: !4370)
!4375 = !DILocation(line: 2875, column: 3, scope: !4370)
!4376 = distinct !{!4376, !4352, !4377}
!4377 = !DILocation(line: 2876, column: 6, scope: !3976)
!4378 = !DILocation(line: 2877, column: 4, scope: !3982)
!4379 = !DILocation(line: 0, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 2887, column: 3)
!4381 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 2886, column: 12)
!4382 = !DILocation(line: 2877, column: 4, scope: !3981)
!4383 = !DILocation(line: 2879, column: 43, scope: !3980)
!4384 = !DILocation(line: 2879, column: 52, scope: !3980)
!4385 = !DILocation(line: 2879, column: 37, scope: !3980)
!4386 = !DILocation(line: 0, scope: !3980)
!4387 = !DILocation(line: 2880, column: 45, scope: !3980)
!4388 = !DILocation(line: 2880, column: 8, scope: !3980)
!4389 = !DILocation(line: 2881, column: 45, scope: !3980)
!4390 = !DILocation(line: 2881, column: 8, scope: !3980)
!4391 = !DILocation(line: 2883, column: 45, scope: !3980)
!4392 = !DILocation(line: 2883, column: 8, scope: !3980)
!4393 = !DILocation(line: 2884, column: 45, scope: !3980)
!4394 = !DILocation(line: 2884, column: 8, scope: !3980)
!4395 = !DILocation(line: 2886, column: 19, scope: !4381)
!4396 = !DILocation(line: 2886, column: 13, scope: !4381)
!4397 = !DILocation(line: 2886, column: 12, scope: !3980)
!4398 = !DILocation(line: 2888, column: 55, scope: !4380)
!4399 = !DILocation(line: 2888, column: 22, scope: !4380)
!4400 = !DILocation(line: 2888, column: 20, scope: !4380)
!4401 = !DILocation(line: 2889, column: 5, scope: !4380)
!4402 = !DILocation(line: 2890, column: 3, scope: !4380)
!4403 = distinct !{!4403, !4378, !4404}
!4404 = !DILocation(line: 2891, column: 6, scope: !3982)
!4405 = !DILocation(line: 2895, column: 4, scope: !3985)
!4406 = !DILocation(line: 2897, column: 43, scope: !3984)
!4407 = !DILocation(line: 2897, column: 52, scope: !3984)
!4408 = !DILocation(line: 2897, column: 37, scope: !3984)
!4409 = !DILocation(line: 0, scope: !3984)
!4410 = !DILocation(line: 2898, column: 22, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 2898, column: 12)
!4412 = !DILocation(line: 2898, column: 36, scope: !4411)
!4413 = !DILocation(line: 2898, column: 34, scope: !4411)
!4414 = !DILocation(line: 2899, column: 5, scope: !4411)
!4415 = !DILocation(line: 2899, column: 18, scope: !4411)
!4416 = !DILocation(line: 2899, column: 34, scope: !4411)
!4417 = !DILocation(line: 2898, column: 12, scope: !3984)
!4418 = !DILocation(line: 2901, column: 58, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 2900, column: 3)
!4420 = !DILocation(line: 2901, column: 5, scope: !4419)
!4421 = !DILocation(line: 2904, column: 18, scope: !4419)
!4422 = !DILocation(line: 2903, column: 5, scope: !4419)
!4423 = !DILocation(line: 2906, column: 58, scope: !4419)
!4424 = !DILocation(line: 2906, column: 5, scope: !4419)
!4425 = !DILocation(line: 2909, column: 31, scope: !4419)
!4426 = !DILocation(line: 2908, column: 5, scope: !4419)
!4427 = !DILocation(line: 2911, column: 16, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 2911, column: 9)
!4429 = !DILocation(line: 2911, column: 10, scope: !4428)
!4430 = !DILocation(line: 2911, column: 9, scope: !4419)
!4431 = !DILocation(line: 2913, column: 59, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 2912, column: 7)
!4433 = !DILocation(line: 2913, column: 26, scope: !4432)
!4434 = !DILocation(line: 2913, column: 24, scope: !4432)
!4435 = !DILocation(line: 2914, column: 19, scope: !4432)
!4436 = !DILocation(line: 2914, column: 35, scope: !4432)
!4437 = !DILocation(line: 2915, column: 31, scope: !4432)
!4438 = !DILocation(line: 2916, column: 7, scope: !4432)
!4439 = !DILocation(line: 2920, column: 42, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 2919, column: 3)
!4441 = !DILocation(line: 2920, column: 5, scope: !4440)
!4442 = !DILocation(line: 2921, column: 42, scope: !4440)
!4443 = !DILocation(line: 2921, column: 5, scope: !4440)
!4444 = !DILocation(line: 2923, column: 42, scope: !4440)
!4445 = !DILocation(line: 2923, column: 5, scope: !4440)
!4446 = !DILocation(line: 2926, column: 19, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 2926, column: 12)
!4448 = !DILocation(line: 2926, column: 13, scope: !4447)
!4449 = !DILocation(line: 2926, column: 12, scope: !3984)
!4450 = !DILocation(line: 2928, column: 15, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4447, file: !3, line: 2927, column: 3)
!4452 = !DILocation(line: 2928, column: 30, scope: !4451)
!4453 = !DILocation(line: 2930, column: 42, scope: !4451)
!4454 = !DILocation(line: 2930, column: 9, scope: !4451)
!4455 = !DILocation(line: 2930, column: 7, scope: !4451)
!4456 = !DILocation(line: 2931, column: 3, scope: !4451)
!4457 = distinct !{!4457, !4353, !4458}
!4458 = !DILocation(line: 2932, column: 6, scope: !3986)
!4459 = !DILocation(line: 2933, column: 4, scope: !3991)
!4460 = !DILocation(line: 0, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 2948, column: 3)
!4462 = distinct !DILexicalBlock(scope: !3989, file: !3, line: 2947, column: 12)
!4463 = !DILocation(line: 2933, column: 4, scope: !3990)
!4464 = !DILocation(line: 2935, column: 43, scope: !3989)
!4465 = !DILocation(line: 2935, column: 52, scope: !3989)
!4466 = !DILocation(line: 2935, column: 37, scope: !3989)
!4467 = !DILocation(line: 0, scope: !3989)
!4468 = !DILocation(line: 2937, column: 61, scope: !3989)
!4469 = !DILocation(line: 2937, column: 8, scope: !3989)
!4470 = !DILocation(line: 2940, column: 21, scope: !3989)
!4471 = !DILocation(line: 2939, column: 8, scope: !3989)
!4472 = !DILocation(line: 2942, column: 61, scope: !3989)
!4473 = !DILocation(line: 2942, column: 8, scope: !3989)
!4474 = !DILocation(line: 2944, column: 61, scope: !3989)
!4475 = !DILocation(line: 2944, column: 8, scope: !3989)
!4476 = !DILocation(line: 2947, column: 19, scope: !4462)
!4477 = !DILocation(line: 2947, column: 13, scope: !4462)
!4478 = !DILocation(line: 2947, column: 12, scope: !3989)
!4479 = !DILocation(line: 2949, column: 55, scope: !4461)
!4480 = !DILocation(line: 2949, column: 22, scope: !4461)
!4481 = !DILocation(line: 2949, column: 20, scope: !4461)
!4482 = !DILocation(line: 2950, column: 15, scope: !4461)
!4483 = !DILocation(line: 2950, column: 27, scope: !4461)
!4484 = !DILocation(line: 2951, column: 15, scope: !4461)
!4485 = !DILocation(line: 2951, column: 31, scope: !4461)
!4486 = !DILocation(line: 2952, column: 5, scope: !4461)
!4487 = !DILocation(line: 2953, column: 3, scope: !4461)
!4488 = distinct !{!4488, !4459, !4489}
!4489 = !DILocation(line: 2954, column: 6, scope: !3991)
!4490 = !DILocation(line: 2958, column: 8, scope: !3996)
!4491 = !DILocation(line: 0, scope: !3993)
!4492 = !DILocation(line: 0, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !3993, file: !3, line: 2966, column: 6)
!4494 = !DILocation(line: 0, scope: !3996)
!4495 = !DILocation(line: 2958, column: 17, scope: !3995)
!4496 = !DILocation(line: 2958, column: 3, scope: !3996)
!4497 = !DILocation(line: 2959, column: 9, scope: !3994)
!4498 = !DILocation(line: 2959, column: 9, scope: !3995)
!4499 = !DILocation(line: 2961, column: 37, scope: !3993)
!4500 = !DILocation(line: 2962, column: 39, scope: !3993)
!4501 = !DILocation(line: 2962, column: 2, scope: !3993)
!4502 = !DILocation(line: 2963, column: 39, scope: !3993)
!4503 = !DILocation(line: 2963, column: 2, scope: !3993)
!4504 = !DILocation(line: 2964, column: 39, scope: !3993)
!4505 = !DILocation(line: 2964, column: 2, scope: !3993)
!4506 = !DILocation(line: 2966, column: 13, scope: !4493)
!4507 = !DILocation(line: 2966, column: 7, scope: !4493)
!4508 = !DILocation(line: 2966, column: 6, scope: !3993)
!4509 = !DILocation(line: 2968, column: 41, scope: !4493)
!4510 = !DILocation(line: 2968, column: 8, scope: !4493)
!4511 = !DILocation(line: 2968, column: 6, scope: !4493)
!4512 = !DILocation(line: 2967, column: 4, scope: !4493)
!4513 = !DILocation(line: 2958, column: 43, scope: !3995)
!4514 = !DILocation(line: 2958, column: 3, scope: !3995)
!4515 = distinct !{!4515, !4496, !4516}
!4516 = !DILocation(line: 2969, column: 7, scope: !3996)
!4517 = !DILocation(line: 2971, column: 14, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2971, column: 7)
!4519 = !DILocation(line: 2971, column: 8, scope: !4518)
!4520 = !DILocation(line: 2971, column: 7, scope: !3911)
!4521 = !DILocation(line: 2973, column: 7, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 2972, column: 5)
!4523 = !DILocation(line: 2974, column: 7, scope: !4522)
!4524 = !DILocation(line: 2975, column: 7, scope: !4522)
!4525 = !DILocation(line: 2976, column: 12, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 2976, column: 7)
!4527 = !DILocation(line: 0, scope: !4526)
!4528 = !DILocation(line: 2976, column: 21, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 2976, column: 7)
!4530 = !DILocation(line: 2976, column: 7, scope: !4526)
!4531 = !DILocation(line: 2977, column: 6, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 2977, column: 6)
!4533 = !DILocation(line: 2978, column: 6, scope: !4532)
!4534 = !DILocation(line: 2978, column: 9, scope: !4532)
!4535 = !DILocation(line: 2977, column: 6, scope: !4529)
!4536 = !DILocation(line: 2979, column: 4, scope: !4532)
!4537 = !DILocation(line: 2976, column: 47, scope: !4529)
!4538 = !DILocation(line: 2976, column: 7, scope: !4529)
!4539 = distinct !{!4539, !4530, !4540}
!4540 = !DILocation(line: 2979, column: 4, scope: !4526)
!4541 = !DILocation(line: 2982, column: 40, scope: !4522)
!4542 = !DILocation(line: 2982, column: 13, scope: !4522)
!4543 = !DILocation(line: 2982, column: 38, scope: !4522)
!4544 = !DILocation(line: 2983, column: 5, scope: !4522)
!4545 = !DILocation(line: 2985, column: 3, scope: !3911)
!4546 = !DILocation(line: 2986, column: 3, scope: !3911)
!4547 = !DILocation(line: 2987, column: 3, scope: !3911)
!4548 = !DILocation(line: 2988, column: 3, scope: !3911)
!4549 = !DILocation(line: 2989, column: 3, scope: !3911)
!4550 = !DILocation(line: 2992, column: 7, scope: !4004)
!4551 = !DILocation(line: 2992, column: 7, scope: !3911)
!4552 = !DILocation(line: 2996, column: 11, scope: !4002)
!4553 = !DILocation(line: 0, scope: !4002)
!4554 = !DILocation(line: 2996, column: 11, scope: !4003)
!4555 = !DILocation(line: 2998, column: 4, scope: !4000)
!4556 = !DILocation(line: 3014, column: 4, scope: !4008)
!4557 = !DILocation(line: 2998, column: 4, scope: !3999)
!4558 = !DILocation(line: 3000, column: 43, scope: !3998)
!4559 = !DILocation(line: 3000, column: 52, scope: !3998)
!4560 = !DILocation(line: 3000, column: 37, scope: !3998)
!4561 = !DILocation(line: 0, scope: !3998)
!4562 = !DILocation(line: 3001, column: 45, scope: !3998)
!4563 = !DILocation(line: 3001, column: 8, scope: !3998)
!4564 = !DILocation(line: 3002, column: 45, scope: !3998)
!4565 = !DILocation(line: 3003, column: 8, scope: !3998)
!4566 = !DILocation(line: 3003, column: 28, scope: !3998)
!4567 = !DILocation(line: 3002, column: 8, scope: !3998)
!4568 = !DILocation(line: 3005, column: 45, scope: !3998)
!4569 = !DILocation(line: 3005, column: 8, scope: !3998)
!4570 = !DILocation(line: 3007, column: 45, scope: !3998)
!4571 = !DILocation(line: 3008, column: 8, scope: !3998)
!4572 = !DILocation(line: 3008, column: 28, scope: !3998)
!4573 = !DILocation(line: 3007, column: 8, scope: !3998)
!4574 = distinct !{!4574, !4555, !4575}
!4575 = !DILocation(line: 3010, column: 6, scope: !4000)
!4576 = !DILocation(line: 3014, column: 4, scope: !4007)
!4577 = !DILocation(line: 3016, column: 43, scope: !4006)
!4578 = !DILocation(line: 3016, column: 52, scope: !4006)
!4579 = !DILocation(line: 3016, column: 37, scope: !4006)
!4580 = !DILocation(line: 0, scope: !4006)
!4581 = !DILocation(line: 3017, column: 61, scope: !4006)
!4582 = !DILocation(line: 3017, column: 8, scope: !4006)
!4583 = !DILocation(line: 3019, column: 61, scope: !4006)
!4584 = !DILocation(line: 3020, column: 10, scope: !4006)
!4585 = !DILocation(line: 3020, column: 30, scope: !4006)
!4586 = !DILocation(line: 3019, column: 8, scope: !4006)
!4587 = !DILocation(line: 3023, column: 21, scope: !4006)
!4588 = !DILocation(line: 3022, column: 8, scope: !4006)
!4589 = !DILocation(line: 3025, column: 61, scope: !4006)
!4590 = !DILocation(line: 3026, column: 10, scope: !4006)
!4591 = !DILocation(line: 3026, column: 30, scope: !4006)
!4592 = !DILocation(line: 3025, column: 8, scope: !4006)
!4593 = !DILocation(line: 3029, column: 26, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 3029, column: 19)
!4595 = !DILocation(line: 3029, column: 20, scope: !4594)
!4596 = !DILocation(line: 3029, column: 19, scope: !4006)
!4597 = !DILocation(line: 3031, column: 29, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 3030, column: 17)
!4599 = !DILocation(line: 3031, column: 41, scope: !4598)
!4600 = !DILocation(line: 3032, column: 29, scope: !4598)
!4601 = !DILocation(line: 3032, column: 45, scope: !4598)
!4602 = !DILocation(line: 3033, column: 17, scope: !4598)
!4603 = distinct !{!4603, !4556, !4604}
!4604 = !DILocation(line: 3034, column: 6, scope: !4008)
!4605 = !DILocation(line: 3037, column: 18, scope: !4014)
!4606 = !DILocation(line: 3037, column: 12, scope: !4014)
!4607 = !DILocation(line: 3037, column: 11, scope: !4003)
!4608 = !DILocation(line: 0, scope: !4012)
!4609 = !DILocation(line: 3038, column: 14, scope: !4013)
!4610 = !DILocation(line: 0, scope: !4013)
!4611 = !DILocation(line: 3038, column: 41, scope: !4012)
!4612 = !DILocation(line: 3038, column: 23, scope: !4012)
!4613 = !DILocation(line: 3038, column: 9, scope: !4013)
!4614 = !DILocation(line: 3040, column: 48, scope: !4011)
!4615 = !DILocation(line: 3040, column: 42, scope: !4011)
!4616 = !DILocation(line: 0, scope: !4011)
!4617 = !DILocation(line: 3041, column: 63, scope: !4011)
!4618 = !DILocation(line: 3041, column: 30, scope: !4011)
!4619 = !DILocation(line: 3041, column: 28, scope: !4011)
!4620 = !DILocation(line: 3042, column: 13, scope: !4011)
!4621 = !DILocation(line: 3038, column: 51, scope: !4012)
!4622 = !DILocation(line: 3038, column: 9, scope: !4012)
!4623 = distinct !{!4623, !4613, !4624}
!4624 = !DILocation(line: 3043, column: 11, scope: !4013)
!4625 = !DILocation(line: 3046, column: 11, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 3046, column: 11)
!4627 = !DILocation(line: 3046, column: 25, scope: !4626)
!4628 = !DILocation(line: 3046, column: 30, scope: !4626)
!4629 = !DILocation(line: 3047, column: 30, scope: !4626)
!4630 = !DILocation(line: 3047, column: 33, scope: !4626)
!4631 = !DILocation(line: 3046, column: 11, scope: !4003)
!4632 = !DILocation(line: 3048, column: 2, scope: !4626)
!4633 = !DILocation(line: 3050, column: 18, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 3050, column: 11)
!4635 = !DILocation(line: 3050, column: 12, scope: !4634)
!4636 = !DILocation(line: 3050, column: 11, scope: !4003)
!4637 = !DILocation(line: 3051, column: 9, scope: !4634)
!4638 = !DILocation(line: 3052, column: 27, scope: !4003)
!4639 = !DILocation(line: 3053, column: 5, scope: !4003)
!4640 = !DILocation(line: 3064, column: 13, scope: !4017)
!4641 = !DILocation(line: 3064, column: 7, scope: !4017)
!4642 = !DILocation(line: 3064, column: 7, scope: !3911)
!4643 = !DILocation(line: 3066, column: 22, scope: !4016)
!4644 = !DILocation(line: 0, scope: !4016)
!4645 = !DILocation(line: 3069, column: 15, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 3069, column: 11)
!4647 = !DILocation(line: 3069, column: 11, scope: !4016)
!4648 = !DILocation(line: 3071, column: 8, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 3071, column: 8)
!4650 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 3070, column: 2)
!4651 = !DILocation(line: 3071, column: 8, scope: !4650)
!4652 = !DILocation(line: 3095, column: 13, scope: !4016)
!4653 = !DILocation(line: 3096, column: 11, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 3096, column: 11)
!4655 = !DILocation(line: 3096, column: 26, scope: !4654)
!4656 = !DILocation(line: 3096, column: 11, scope: !4016)
!4657 = !DILocation(line: 3097, column: 8, scope: !4654)
!4658 = !DILocation(line: 0, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 3098, column: 11)
!4660 = !DILocation(line: 3098, column: 11, scope: !4659)
!4661 = !DILocation(line: 3097, column: 2, scope: !4654)
!4662 = !DILocation(line: 3098, column: 11, scope: !4016)
!4663 = !DILocation(line: 3099, column: 15, scope: !4659)
!4664 = !DILocation(line: 3103, column: 13, scope: !4016)
!4665 = !DILocation(line: 3104, column: 11, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 3104, column: 11)
!4667 = !DILocation(line: 3104, column: 26, scope: !4666)
!4668 = !DILocation(line: 3104, column: 11, scope: !4016)
!4669 = !DILocation(line: 3105, column: 8, scope: !4666)
!4670 = !DILocation(line: 0, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 3106, column: 11)
!4672 = !DILocation(line: 3106, column: 12, scope: !4671)
!4673 = !DILocation(line: 3105, column: 2, scope: !4666)
!4674 = !DILocation(line: 3106, column: 27, scope: !4671)
!4675 = !DILocation(line: 3107, column: 5, scope: !4671)
!4676 = !DILocation(line: 3107, column: 23, scope: !4671)
!4677 = !DILocation(line: 3108, column: 4, scope: !4671)
!4678 = !DILocation(line: 3108, column: 7, scope: !4671)
!4679 = !DILocation(line: 3109, column: 4, scope: !4671)
!4680 = !DILocation(line: 3109, column: 7, scope: !4671)
!4681 = !DILocation(line: 3109, column: 29, scope: !4671)
!4682 = !DILocation(line: 3110, column: 18, scope: !4671)
!4683 = !DILocation(line: 3110, column: 4, scope: !4671)
!4684 = !DILocation(line: 3112, column: 16, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 3112, column: 16)
!4686 = !DILocation(line: 3112, column: 16, scope: !4671)
!4687 = !DILocation(line: 3113, column: 14, scope: !4685)
!4688 = !DILocation(line: 3118, column: 18, scope: !4029)
!4689 = !DILocation(line: 3118, column: 4, scope: !4029)
!4690 = !DILocation(line: 3120, column: 15, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 3120, column: 8)
!4692 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 3119, column: 2)
!4693 = !DILocation(line: 3120, column: 9, scope: !4691)
!4694 = !DILocation(line: 3121, column: 15, scope: !4691)
!4695 = !DILocation(line: 3121, column: 24, scope: !4691)
!4696 = !DILocation(line: 3121, column: 45, scope: !4691)
!4697 = !DILocation(line: 3120, column: 8, scope: !4692)
!4698 = !DILocation(line: 3122, column: 33, scope: !4691)
!4699 = !DILocation(line: 3122, column: 6, scope: !4691)
!4700 = !DILocation(line: 3124, column: 16, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 3124, column: 15)
!4702 = !DILocation(line: 3124, column: 34, scope: !4701)
!4703 = !DILocation(line: 3124, column: 31, scope: !4701)
!4704 = !DILocation(line: 3126, column: 36, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4701, file: !3, line: 3125, column: 13)
!4706 = !DILocation(line: 3127, column: 15, scope: !4705)
!4707 = !DILocation(line: 3127, column: 32, scope: !4705)
!4708 = !DILocation(line: 3128, column: 13, scope: !4705)
!4709 = !DILocation(line: 3132, column: 2, scope: !4028)
!4710 = !DILocation(line: 3133, column: 22, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 3133, column: 15)
!4712 = !DILocation(line: 3133, column: 16, scope: !4711)
!4713 = !DILocation(line: 3133, column: 15, scope: !4028)
!4714 = !DILocation(line: 3134, column: 40, scope: !4711)
!4715 = !DILocation(line: 3134, column: 13, scope: !4711)
!4716 = !DILocation(line: 3138, column: 2, scope: !3911)
!4717 = !DILocation(line: 3139, column: 8, scope: !4025)
!4718 = !DILocation(line: 3139, column: 28, scope: !4025)
!4719 = !DILocation(line: 3139, column: 34, scope: !4025)
!4720 = !DILocation(line: 3140, column: 7, scope: !4025)
!4721 = !DILocation(line: 3140, column: 11, scope: !4025)
!4722 = !DILocation(line: 3139, column: 7, scope: !3911)
!4723 = !DILocation(line: 3144, column: 11, scope: !4023)
!4724 = !DILocation(line: 3144, column: 11, scope: !4024)
!4725 = !DILocation(line: 3145, column: 9, scope: !4023)
!4726 = !DILocation(line: 3148, column: 11, scope: !4022)
!4727 = !DILocation(line: 3149, column: 11, scope: !4022)
!4728 = !DILocation(line: 3151, column: 24, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 3151, column: 11)
!4730 = !DILocation(line: 3151, column: 16, scope: !4729)
!4731 = !DILocation(line: 0, scope: !4022)
!4732 = !DILocation(line: 3152, column: 16, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4729, file: !3, line: 3151, column: 11)
!4734 = !DILocation(line: 3151, column: 11, scope: !4729)
!4735 = !DILocation(line: 3153, column: 13, scope: !4733)
!4736 = !DILocation(line: 3151, column: 11, scope: !4733)
!4737 = distinct !{!4737, !4734, !4738}
!4738 = !DILocation(line: 3153, column: 43, scope: !4729)
!4739 = !DILocation(line: 3154, column: 9, scope: !4023)
!4740 = !DILocation(line: 3156, column: 1, scope: !3911)
!4741 = distinct !DISubprogram(name: "add_dependence_list_and_free", scope: !3, file: !3, line: 1405, type: !4742, scopeLine: 1407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4745)
!4742 = !DISubroutineType(types: !4743)
!4743 = !{null, !3700, !644, !4744, !611, !384}
!4744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!4745 = !{!4746, !4747, !4748, !4749, !4750, !4751, !4752}
!4746 = !DILocalVariable(name: "deps", arg: 1, scope: !4741, file: !3, line: 1405, type: !3700)
!4747 = !DILocalVariable(name: "insn", arg: 2, scope: !4741, file: !3, line: 1405, type: !644)
!4748 = !DILocalVariable(name: "listp", arg: 3, scope: !4741, file: !3, line: 1405, type: !4744)
!4749 = !DILocalVariable(name: "uncond", arg: 4, scope: !4741, file: !3, line: 1406, type: !611)
!4750 = !DILocalVariable(name: "dep_type", arg: 5, scope: !4741, file: !3, line: 1406, type: !384)
!4751 = !DILocalVariable(name: "list", scope: !4741, file: !3, line: 1408, type: !644)
!4752 = !DILocalVariable(name: "next", scope: !4741, file: !3, line: 1408, type: !644)
!4753 = !DILocation(line: 0, scope: !4741)
!4754 = !DILocation(line: 1410, column: 13, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 1410, column: 7)
!4756 = !DILocation(line: 1410, column: 7, scope: !4755)
!4757 = !DILocation(line: 1410, column: 7, scope: !4741)
!4758 = !DILocation(line: 1412, column: 7, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 1411, column: 5)
!4760 = !DILocation(line: 1413, column: 7, scope: !4759)
!4761 = !DILocation(line: 1416, column: 30, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 1416, column: 3)
!4763 = !DILocation(line: 0, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 1419, column: 11)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 1417, column: 5)
!4766 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 1416, column: 3)
!4767 = !DILocation(line: 1416, column: 8, scope: !4762)
!4768 = !DILocation(line: 0, scope: !4762)
!4769 = !DILocation(line: 1416, column: 3, scope: !4762)
!4770 = !DILocation(line: 1418, column: 14, scope: !4765)
!4771 = !DILocation(line: 1419, column: 61, scope: !4764)
!4772 = !DILocation(line: 1419, column: 23, scope: !4764)
!4773 = !DILocation(line: 1419, column: 11, scope: !4765)
!4774 = !DILocation(line: 1420, column: 24, scope: !4764)
!4775 = !DILocation(line: 1420, column: 2, scope: !4764)
!4776 = !DILocation(line: 1421, column: 7, scope: !4765)
!4777 = !DILocation(line: 1416, column: 3, scope: !4766)
!4778 = distinct !{!4778, !4769, !4779}
!4779 = !DILocation(line: 1422, column: 5, scope: !4762)
!4780 = !DILocation(line: 1423, column: 1, scope: !4741)
!4781 = distinct !DISubprogram(name: "call_may_noreturn_p", scope: !3, file: !3, line: 3161, type: !4782, scopeLine: 3162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4784)
!4782 = !DISubroutineType(types: !4783)
!4783 = !{!610, !644}
!4784 = !{!4785, !4786, !4787}
!4785 = !DILocalVariable(name: "insn", arg: 1, scope: !4781, file: !3, line: 3161, type: !644)
!4786 = !DILocalVariable(name: "call", scope: !4781, file: !3, line: 3163, type: !644)
!4787 = !DILocalVariable(name: "symbol", scope: !4788, file: !3, line: 3179, type: !644)
!4788 = distinct !DILexicalBlock(scope: !4789, file: !3, line: 3178, column: 5)
!4789 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 3175, column: 7)
!4790 = !DILocation(line: 0, scope: !4781)
!4791 = !DILocation(line: 3166, column: 7, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 3166, column: 7)
!4793 = !DILocation(line: 3167, column: 7, scope: !4792)
!4794 = !DILocation(line: 3167, column: 11, scope: !4792)
!4795 = !DILocation(line: 3166, column: 7, scope: !4781)
!4796 = !DILocation(line: 3170, column: 10, scope: !4781)
!4797 = !DILocation(line: 3171, column: 7, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 3171, column: 7)
!4799 = !DILocation(line: 3171, column: 23, scope: !4798)
!4800 = !DILocation(line: 3171, column: 7, scope: !4781)
!4801 = !DILocation(line: 3172, column: 12, scope: !4798)
!4802 = !DILocation(line: 0, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 3173, column: 7)
!4804 = !DILocation(line: 3173, column: 7, scope: !4803)
!4805 = !DILocation(line: 3172, column: 5, scope: !4798)
!4806 = !DILocation(line: 3173, column: 23, scope: !4803)
!4807 = !DILocation(line: 3173, column: 7, scope: !4781)
!4808 = !DILocation(line: 3174, column: 12, scope: !4803)
!4809 = !DILocation(line: 0, scope: !4789)
!4810 = !DILocation(line: 3175, column: 7, scope: !4789)
!4811 = !DILocation(line: 3174, column: 5, scope: !4803)
!4812 = !DILocation(line: 3175, column: 23, scope: !4789)
!4813 = !DILocation(line: 3176, column: 7, scope: !4789)
!4814 = !DILocation(line: 3176, column: 10, scope: !4789)
!4815 = !DILocation(line: 3177, column: 7, scope: !4789)
!4816 = !DILocation(line: 3177, column: 10, scope: !4789)
!4817 = !DILocation(line: 3177, column: 46, scope: !4789)
!4818 = !DILocation(line: 3175, column: 7, scope: !4781)
!4819 = !DILocation(line: 0, scope: !4788)
!4820 = !DILocation(line: 3180, column: 11, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4788, file: !3, line: 3180, column: 11)
!4822 = !DILocation(line: 3181, column: 4, scope: !4821)
!4823 = !DILocation(line: 3181, column: 7, scope: !4821)
!4824 = !DILocation(line: 3181, column: 44, scope: !4821)
!4825 = !DILocation(line: 3180, column: 11, scope: !4788)
!4826 = !DILocation(line: 3183, column: 8, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 3183, column: 8)
!4828 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 3182, column: 2)
!4829 = !DILocation(line: 3184, column: 8, scope: !4827)
!4830 = !DILocation(line: 3183, column: 8, scope: !4828)
!4831 = !DILocation(line: 3185, column: 14, scope: !4827)
!4832 = !DILocation(line: 3185, column: 6, scope: !4827)
!4833 = !DILocation(line: 3219, column: 5, scope: !4789)
!4834 = !DILocation(line: 3222, column: 3, scope: !4781)
!4835 = !DILocation(line: 3223, column: 1, scope: !4781)
!4836 = distinct !DISubprogram(name: "fixup_sched_groups", scope: !3, file: !3, line: 1494, type: !1889, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4837)
!4837 = !{!4838, !4839, !4840, !4841, !4842, !4846, !4847}
!4838 = !DILocalVariable(name: "insn", arg: 1, scope: !4836, file: !3, line: 1494, type: !644)
!4839 = !DILocalVariable(name: "sd_it", scope: !4836, file: !3, line: 1496, type: !1970)
!4840 = !DILocalVariable(name: "dep", scope: !4836, file: !3, line: 1497, type: !2485)
!4841 = !DILocalVariable(name: "prev_nonnote", scope: !4836, file: !3, line: 1498, type: !644)
!4842 = !DILocalVariable(name: "i", scope: !4843, file: !3, line: 1502, type: !644)
!4843 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 1501, column: 5)
!4844 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 1500, column: 3)
!4845 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 1500, column: 3)
!4846 = !DILocalVariable(name: "pro", scope: !4843, file: !3, line: 1503, type: !644)
!4847 = !DILabel(scope: !4843, name: "next_link", file: !3, line: 1515)
!4848 = !DILocation(line: 0, scope: !4836)
!4849 = !DILocation(line: 1496, column: 3, scope: !4836)
!4850 = !DILocation(line: 1497, column: 3, scope: !4836)
!4851 = !DILocation(line: 1500, column: 3, scope: !4845)
!4852 = !DILocation(line: 1500, column: 3, scope: !4844)
!4853 = !DILocation(line: 0, scope: !4843)
!4854 = !DILocation(line: 1503, column: 17, scope: !4843)
!4855 = !DILocation(line: 1505, column: 7, scope: !4843)
!4856 = !DILocation(line: 1507, column: 8, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 1506, column: 2)
!4858 = !DILocation(line: 1509, column: 12, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4857, file: !3, line: 1509, column: 8)
!4860 = !DILocation(line: 1509, column: 8, scope: !4857)
!4861 = !DILocation(line: 1511, column: 11, scope: !4843)
!4862 = !DILocation(line: 1511, column: 29, scope: !4843)
!4863 = !DILocation(line: 1511, column: 32, scope: !4843)
!4864 = !DILocation(line: 1511, column: 2, scope: !4857)
!4865 = distinct !{!4865, !4855, !4866}
!4866 = !DILocation(line: 1511, column: 48, scope: !4843)
!4867 = !DILocation(line: 1513, column: 13, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 1513, column: 11)
!4869 = !DILocation(line: 1513, column: 11, scope: !4843)
!4870 = !DILocation(line: 1514, column: 26, scope: !4868)
!4871 = !DILocation(line: 1514, column: 2, scope: !4868)
!4872 = !DILocation(line: 1515, column: 5, scope: !4843)
!4873 = distinct !{!4873, !4851, !4874}
!4874 = !DILocation(line: 1516, column: 5, scope: !4845)
!4875 = !DILocation(line: 1518, column: 3, scope: !4836)
!4876 = !DILocation(line: 1520, column: 18, scope: !4836)
!4877 = !DILocation(line: 1521, column: 3, scope: !4836)
!4878 = !DILocation(line: 1521, column: 10, scope: !4836)
!4879 = !DILocation(line: 1522, column: 20, scope: !4836)
!4880 = distinct !{!4880, !4877, !4881}
!4881 = !DILocation(line: 1522, column: 51, scope: !4836)
!4882 = !DILocation(line: 1523, column: 7, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 1523, column: 7)
!4884 = !DILocation(line: 1523, column: 32, scope: !4883)
!4885 = !DILocation(line: 1523, column: 29, scope: !4883)
!4886 = !DILocation(line: 1524, column: 7, scope: !4883)
!4887 = !DILocation(line: 1524, column: 12, scope: !4883)
!4888 = !DILocation(line: 1523, column: 7, scope: !4836)
!4889 = !DILocation(line: 1525, column: 5, scope: !4883)
!4890 = !DILocation(line: 1526, column: 1, scope: !4836)
!4891 = distinct !DISubprogram(name: "deps_start_bb", scope: !3, file: !3, line: 3360, type: !3698, scopeLine: 3361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4892)
!4892 = !{!4893, !4894, !4895}
!4893 = !DILocalVariable(name: "deps", arg: 1, scope: !4891, file: !3, line: 3360, type: !3700)
!4894 = !DILocalVariable(name: "head", arg: 2, scope: !4891, file: !3, line: 3360, type: !644)
!4895 = !DILocalVariable(name: "insn", scope: !4896, file: !3, line: 3369, type: !644)
!4896 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 3368, column: 5)
!4897 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 3367, column: 7)
!4898 = !DILocation(line: 0, scope: !4891)
!4899 = !DILocation(line: 3362, column: 3, scope: !4891)
!4900 = !DILocation(line: 3367, column: 9, scope: !4897)
!4901 = !DILocation(line: 3367, column: 26, scope: !4897)
!4902 = !DILocation(line: 3367, column: 30, scope: !4897)
!4903 = !DILocation(line: 3367, column: 7, scope: !4891)
!4904 = !DILocation(line: 3369, column: 18, scope: !4896)
!4905 = !DILocation(line: 0, scope: !4896)
!4906 = !DILocation(line: 3371, column: 7, scope: !4896)
!4907 = !DILocation(line: 3371, column: 19, scope: !4896)
!4908 = !DILocation(line: 3371, column: 22, scope: !4896)
!4909 = !DILocation(line: 3372, column: 9, scope: !4896)
!4910 = distinct !{!4910, !4906, !4911}
!4911 = !DILocation(line: 3372, column: 32, scope: !4896)
!4912 = !DILocation(line: 3373, column: 19, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 3373, column: 11)
!4914 = !DILocation(line: 3373, column: 11, scope: !4896)
!4915 = !DILocation(line: 3374, column: 8, scope: !4913)
!4916 = !DILocation(line: 3374, column: 29, scope: !4913)
!4917 = !DILocation(line: 3374, column: 2, scope: !4913)
!4918 = !DILocation(line: 3376, column: 1, scope: !4891)
!4919 = distinct !DISubprogram(name: "sched_analyze", scope: !3, file: !3, line: 3381, type: !3912, scopeLine: 3382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4920)
!4920 = !{!4921, !4922, !4923, !4924}
!4921 = !DILocalVariable(name: "deps", arg: 1, scope: !4919, file: !3, line: 3381, type: !3700)
!4922 = !DILocalVariable(name: "head", arg: 2, scope: !4919, file: !3, line: 3381, type: !644)
!4923 = !DILocalVariable(name: "tail", arg: 3, scope: !4919, file: !3, line: 3381, type: !644)
!4924 = !DILocalVariable(name: "insn", scope: !4919, file: !3, line: 3383, type: !644)
!4925 = !DILocation(line: 0, scope: !4919)
!4926 = !DILocation(line: 3385, column: 7, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 3385, column: 7)
!4928 = !DILocation(line: 3385, column: 24, scope: !4927)
!4929 = !DILocation(line: 3385, column: 7, scope: !4919)
!4930 = !DILocation(line: 3386, column: 5, scope: !4927)
!4931 = !DILocation(line: 3388, column: 3, scope: !4919)
!4932 = !DILocation(line: 3390, column: 8, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 3390, column: 3)
!4934 = !DILocation(line: 0, scope: !4933)
!4935 = !DILocation(line: 3393, column: 11, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 3393, column: 11)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 3391, column: 5)
!4938 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 3390, column: 3)
!4939 = !DILocation(line: 3393, column: 11, scope: !4937)
!4940 = !DILocation(line: 3396, column: 4, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 3394, column: 2)
!4942 = !DILocation(line: 3397, column: 2, scope: !4941)
!4943 = !DILocation(line: 3399, column: 7, scope: !4937)
!4944 = !DILocation(line: 3401, column: 16, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 3401, column: 11)
!4946 = !DILocation(line: 3401, column: 11, scope: !4937)
!4947 = !DILocation(line: 3403, column: 8, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 3403, column: 8)
!4949 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 3402, column: 2)
!4950 = !DILocation(line: 3403, column: 25, scope: !4948)
!4951 = !DILocation(line: 3403, column: 8, scope: !4949)
!4952 = !DILocation(line: 3404, column: 6, scope: !4948)
!4953 = !DILocation(line: 3409, column: 1, scope: !4919)
!4954 = !DILocation(line: 3390, column: 29, scope: !4938)
!4955 = !DILocation(line: 3390, column: 3, scope: !4938)
!4956 = distinct !{!4956, !4957, !4958}
!4957 = !DILocation(line: 3390, column: 3, scope: !4933)
!4958 = !DILocation(line: 3407, column: 5, scope: !4933)
!4959 = distinct !DISubprogram(name: "sched_free_deps", scope: !3, file: !3, line: 3442, type: !3430, scopeLine: 3443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4960)
!4960 = !{!4961, !4962, !4963, !4964, !4965}
!4961 = !DILocalVariable(name: "head", arg: 1, scope: !4959, file: !3, line: 3442, type: !644)
!4962 = !DILocalVariable(name: "tail", arg: 2, scope: !4959, file: !3, line: 3442, type: !644)
!4963 = !DILocalVariable(name: "resolved_p", arg: 3, scope: !4959, file: !3, line: 3442, type: !610)
!4964 = !DILocalVariable(name: "insn", scope: !4959, file: !3, line: 3444, type: !644)
!4965 = !DILocalVariable(name: "next_tail", scope: !4959, file: !3, line: 3445, type: !644)
!4966 = !DILocation(line: 0, scope: !4959)
!4967 = !DILocation(line: 3445, column: 19, scope: !4959)
!4968 = !DILocation(line: 0, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 3455, column: 6)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 3449, column: 7)
!4971 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 3448, column: 9)
!4972 = distinct !DILexicalBlock(scope: !4973, file: !3, line: 3447, column: 3)
!4973 = distinct !DILexicalBlock(scope: !4959, file: !3, line: 3447, column: 3)
!4974 = !DILocation(line: 3447, column: 8, scope: !4973)
!4975 = !DILocation(line: 0, scope: !4973)
!4976 = !DILocation(line: 3447, column: 26, scope: !4972)
!4977 = !DILocation(line: 3447, column: 3, scope: !4973)
!4978 = !DILocation(line: 3448, column: 9, scope: !4971)
!4979 = !DILocation(line: 3448, column: 23, scope: !4971)
!4980 = !DILocation(line: 3448, column: 26, scope: !4971)
!4981 = !DILocation(line: 3448, column: 43, scope: !4971)
!4982 = !DILocation(line: 3448, column: 9, scope: !4972)
!4983 = !DILocation(line: 3451, column: 2, scope: !4970)
!4984 = !DILocation(line: 3458, column: 21, scope: !4969)
!4985 = !DILocation(line: 3458, column: 4, scope: !4969)
!4986 = !DILocation(line: 3460, column: 2, scope: !4970)
!4987 = !DILocation(line: 3461, column: 7, scope: !4970)
!4988 = !DILocation(line: 3447, column: 47, scope: !4972)
!4989 = !DILocation(line: 3447, column: 3, scope: !4972)
!4990 = distinct !{!4990, !4977, !4991}
!4991 = !DILocation(line: 3461, column: 7, scope: !4973)
!4992 = !DILocation(line: 3462, column: 1, scope: !4959)
!4993 = !DILocation(line: 3456, column: 21, scope: !4969)
!4994 = !DILocation(line: 3456, column: 4, scope: !4969)
!4995 = distinct !DISubprogram(name: "delete_dep_nodes_in_back_deps", scope: !3, file: !3, line: 3414, type: !4996, scopeLine: 3415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4998)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{null, !644, !610}
!4998 = !{!4999, !5000, !5001, !5002, !5003, !5004, !5008, !5009, !5010}
!4999 = !DILocalVariable(name: "insn", arg: 1, scope: !4995, file: !3, line: 3414, type: !644)
!5000 = !DILocalVariable(name: "resolved_p", arg: 2, scope: !4995, file: !3, line: 3414, type: !610)
!5001 = !DILocalVariable(name: "sd_it", scope: !4995, file: !3, line: 3416, type: !1970)
!5002 = !DILocalVariable(name: "dep", scope: !4995, file: !3, line: 3417, type: !2485)
!5003 = !DILocalVariable(name: "types", scope: !4995, file: !3, line: 3418, type: !1974)
!5004 = !DILocalVariable(name: "link", scope: !5005, file: !3, line: 3428, type: !1809)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 3427, column: 5)
!5006 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 3425, column: 3)
!5007 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 3425, column: 3)
!5008 = !DILocalVariable(name: "node", scope: !5005, file: !3, line: 3429, type: !1814)
!5009 = !DILocalVariable(name: "back_list", scope: !5005, file: !3, line: 3430, type: !1804)
!5010 = !DILocalVariable(name: "forw_list", scope: !5005, file: !3, line: 3431, type: !1804)
!5011 = !DILocation(line: 0, scope: !4995)
!5012 = !DILocation(line: 3416, column: 3, scope: !4995)
!5013 = !DILocation(line: 3417, column: 3, scope: !4995)
!5014 = !DILocation(line: 3420, column: 7, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 3420, column: 7)
!5016 = !DILocation(line: 3425, column: 16, scope: !5007)
!5017 = !DILocation(line: 0, scope: !5005)
!5018 = !DILocation(line: 3425, column: 8, scope: !5007)
!5019 = !DILocation(line: 3426, column: 8, scope: !5006)
!5020 = !DILocation(line: 3425, column: 3, scope: !5007)
!5021 = !DILocation(line: 3428, column: 32, scope: !5005)
!5022 = !DILocation(line: 3428, column: 25, scope: !5005)
!5023 = !DILocation(line: 3429, column: 25, scope: !5005)
!5024 = !DILocation(line: 3430, column: 7, scope: !5005)
!5025 = !DILocation(line: 3431, column: 7, scope: !5005)
!5026 = !DILocation(line: 3433, column: 32, scope: !5005)
!5027 = !DILocation(line: 3433, column: 7, scope: !5005)
!5028 = !DILocation(line: 3434, column: 36, scope: !5005)
!5029 = !DILocation(line: 3434, column: 7, scope: !5005)
!5030 = !DILocation(line: 3435, column: 7, scope: !5005)
!5031 = !DILocation(line: 3436, column: 5, scope: !5006)
!5032 = !DILocation(line: 3425, column: 3, scope: !5006)
!5033 = distinct !{!5033, !5020, !5034}
!5034 = !DILocation(line: 3436, column: 5, scope: !5007)
!5035 = !DILocation(line: 3437, column: 1, scope: !4995)
!5036 = distinct !DISubprogram(name: "clear_deps_list", scope: !3, file: !3, line: 396, type: !3032, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5037)
!5037 = !{!5038, !5039}
!5038 = !DILocalVariable(name: "l", arg: 1, scope: !5036, file: !3, line: 396, type: !1804)
!5039 = !DILocalVariable(name: "link", scope: !5040, file: !3, line: 400, type: !1809)
!5040 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 399, column: 5)
!5041 = !DILocation(line: 0, scope: !5036)
!5042 = !DILocation(line: 0, scope: !5040)
!5043 = !DILocation(line: 398, column: 3, scope: !5036)
!5044 = !DILocation(line: 400, column: 25, scope: !5040)
!5045 = !DILocation(line: 402, column: 16, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 402, column: 11)
!5047 = !DILocation(line: 402, column: 11, scope: !5040)
!5048 = !DILocation(line: 405, column: 7, scope: !5040)
!5049 = !DILocation(line: 406, column: 5, scope: !5036)
!5050 = !DILocation(line: 408, column: 1, scope: !5036)
!5051 = distinct !DISubprogram(name: "init_deps", scope: !3, file: !3, line: 3469, type: !5052, scopeLine: 3470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5054)
!5052 = !DISubroutineType(types: !5053)
!5053 = !{null, !3700, !610}
!5054 = !{!5055, !5056, !5057}
!5055 = !DILocalVariable(name: "deps", arg: 1, scope: !5051, file: !3, line: 3469, type: !3700)
!5056 = !DILocalVariable(name: "lazy_reg_last", arg: 2, scope: !5051, file: !3, line: 3469, type: !610)
!5057 = !DILocalVariable(name: "max_reg", scope: !5051, file: !3, line: 3471, type: !611)
!5058 = !DILocation(line: 0, scope: !5051)
!5059 = !DILocation(line: 3471, column: 18, scope: !5051)
!5060 = !DILocation(line: 3471, column: 61, scope: !5051)
!5061 = !DILocation(line: 3473, column: 9, scope: !5051)
!5062 = !DILocation(line: 3473, column: 17, scope: !5051)
!5063 = !DILocation(line: 3474, column: 7, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 3474, column: 7)
!5065 = !DILocation(line: 3474, column: 7, scope: !5051)
!5066 = !DILocation(line: 3475, column: 11, scope: !5064)
!5067 = !DILocation(line: 3475, column: 20, scope: !5064)
!5068 = !DILocation(line: 3475, column: 5, scope: !5064)
!5069 = !DILocation(line: 3477, column: 22, scope: !5064)
!5070 = !DILocation(line: 3477, column: 11, scope: !5064)
!5071 = !DILocation(line: 3477, column: 20, scope: !5064)
!5072 = !DILocation(line: 3478, column: 3, scope: !5051)
!5073 = !DILocation(line: 3479, column: 3, scope: !5051)
!5074 = !DILocation(line: 3481, column: 9, scope: !5051)
!5075 = !DILocation(line: 3481, column: 28, scope: !5051)
!5076 = !DILocation(line: 3482, column: 9, scope: !5051)
!5077 = !DILocation(line: 3482, column: 27, scope: !5051)
!5078 = !DILocation(line: 3483, column: 9, scope: !5051)
!5079 = !DILocation(line: 3483, column: 29, scope: !5051)
!5080 = !DILocation(line: 3484, column: 9, scope: !5051)
!5081 = !DILocation(line: 3484, column: 28, scope: !5051)
!5082 = !DILocation(line: 3485, column: 9, scope: !5051)
!5083 = !DILocation(line: 3485, column: 34, scope: !5051)
!5084 = !DILocation(line: 3486, column: 9, scope: !5051)
!5085 = !DILocation(line: 3486, column: 35, scope: !5051)
!5086 = !DILocation(line: 3487, column: 9, scope: !5051)
!5087 = !DILocation(line: 3487, column: 30, scope: !5051)
!5088 = !DILocation(line: 3488, column: 9, scope: !5051)
!5089 = !DILocation(line: 3488, column: 35, scope: !5051)
!5090 = !DILocation(line: 3489, column: 9, scope: !5051)
!5091 = !DILocation(line: 3489, column: 28, scope: !5051)
!5092 = !DILocation(line: 3490, column: 9, scope: !5051)
!5093 = !DILocation(line: 3490, column: 41, scope: !5051)
!5094 = !DILocation(line: 3491, column: 9, scope: !5051)
!5095 = !DILocation(line: 3491, column: 32, scope: !5051)
!5096 = !DILocation(line: 3492, column: 9, scope: !5051)
!5097 = !DILocation(line: 3492, column: 30, scope: !5051)
!5098 = !DILocation(line: 3493, column: 9, scope: !5051)
!5099 = !DILocation(line: 3493, column: 25, scope: !5051)
!5100 = !DILocation(line: 3494, column: 9, scope: !5051)
!5101 = !DILocation(line: 3494, column: 34, scope: !5051)
!5102 = !DILocation(line: 3495, column: 9, scope: !5051)
!5103 = !DILocation(line: 3495, column: 18, scope: !5051)
!5104 = !DILocation(line: 3496, column: 1, scope: !5051)
!5105 = distinct !DISubprogram(name: "bitmap_initialize_stat", scope: !696, file: !696, line: 165, type: !5106, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5108)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{null, !1802, !716}
!5108 = !{!5109, !5110}
!5109 = !DILocalVariable(name: "head", arg: 1, scope: !5105, file: !696, line: 165, type: !1802)
!5110 = !DILocalVariable(name: "obstack", arg: 2, scope: !5105, file: !696, line: 165, type: !716)
!5111 = !DILocation(line: 0, scope: !5105)
!5112 = !DILocation(line: 167, column: 23, scope: !5105)
!5113 = !DILocation(line: 167, column: 31, scope: !5105)
!5114 = !DILocation(line: 167, column: 9, scope: !5105)
!5115 = !DILocation(line: 167, column: 15, scope: !5105)
!5116 = !DILocation(line: 168, column: 9, scope: !5105)
!5117 = !DILocation(line: 168, column: 17, scope: !5105)
!5118 = !DILocation(line: 172, column: 1, scope: !5105)
!5119 = distinct !DISubprogram(name: "init_deps_reg_last", scope: !3, file: !3, line: 3501, type: !5120, scopeLine: 3502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5122)
!5120 = !DISubroutineType(types: !5121)
!5121 = !{null, !3700}
!5122 = !{!5123}
!5123 = !DILocalVariable(name: "deps", arg: 1, scope: !5119, file: !3, line: 3501, type: !3700)
!5124 = !DILocation(line: 0, scope: !5119)
!5125 = !DILocation(line: 3503, column: 3, scope: !5119)
!5126 = !DILocation(line: 3504, column: 3, scope: !5119)
!5127 = !DILocation(line: 3506, column: 20, scope: !5119)
!5128 = !DILocation(line: 3506, column: 18, scope: !5119)
!5129 = !DILocation(line: 3507, column: 1, scope: !5119)
!5130 = distinct !DISubprogram(name: "free_deps", scope: !3, file: !3, line: 3513, type: !5120, scopeLine: 3514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5131)
!5131 = !{!5132, !5133, !5134, !5135}
!5132 = !DILocalVariable(name: "deps", arg: 1, scope: !5130, file: !3, line: 3513, type: !3700)
!5133 = !DILocalVariable(name: "i", scope: !5130, file: !3, line: 3515, type: !7)
!5134 = !DILocalVariable(name: "rsi", scope: !5130, file: !3, line: 3516, type: !3922)
!5135 = !DILocalVariable(name: "reg_last", scope: !5136, file: !3, line: 3537, type: !1791)
!5136 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 3536, column: 5)
!5137 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3535, column: 3)
!5138 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 3535, column: 3)
!5139 = !DILocation(line: 0, scope: !5130)
!5140 = !DILocation(line: 3515, column: 3, scope: !5130)
!5141 = !DILocation(line: 3516, column: 3, scope: !5130)
!5142 = !DILocation(line: 3519, column: 13, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 3519, column: 7)
!5144 = !DILocation(line: 3519, column: 21, scope: !5143)
!5145 = !DILocation(line: 3519, column: 7, scope: !5130)
!5146 = !DILocation(line: 3521, column: 7, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 3520, column: 5)
!5148 = !DILocation(line: 3524, column: 17, scope: !5130)
!5149 = !DILocation(line: 3526, column: 31, scope: !5130)
!5150 = !DILocation(line: 3526, column: 3, scope: !5130)
!5151 = !DILocation(line: 3527, column: 31, scope: !5130)
!5152 = !DILocation(line: 3527, column: 3, scope: !5130)
!5153 = !DILocation(line: 3528, column: 31, scope: !5130)
!5154 = !DILocation(line: 3528, column: 3, scope: !5130)
!5155 = !DILocation(line: 3529, column: 31, scope: !5130)
!5156 = !DILocation(line: 3529, column: 3, scope: !5130)
!5157 = !DILocation(line: 3530, column: 31, scope: !5130)
!5158 = !DILocation(line: 3530, column: 3, scope: !5130)
!5159 = !DILocation(line: 3535, column: 3, scope: !5138)
!5160 = !DILocation(line: 0, scope: !5136)
!5161 = !DILocation(line: 3535, column: 3, scope: !5137)
!5162 = !DILocation(line: 3537, column: 42, scope: !5136)
!5163 = !DILocation(line: 3537, column: 51, scope: !5136)
!5164 = !DILocation(line: 3537, column: 36, scope: !5136)
!5165 = !DILocation(line: 3538, column: 21, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 3538, column: 11)
!5167 = !DILocation(line: 3538, column: 11, scope: !5166)
!5168 = !DILocation(line: 3538, column: 11, scope: !5136)
!5169 = !DILocation(line: 3539, column: 2, scope: !5166)
!5170 = !DILocation(line: 3540, column: 21, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 3540, column: 11)
!5172 = !DILocation(line: 3540, column: 11, scope: !5171)
!5173 = !DILocation(line: 3540, column: 11, scope: !5136)
!5174 = !DILocation(line: 3541, column: 2, scope: !5171)
!5175 = !DILocation(line: 3542, column: 21, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 3542, column: 11)
!5177 = !DILocation(line: 3542, column: 11, scope: !5176)
!5178 = !DILocation(line: 3542, column: 11, scope: !5136)
!5179 = !DILocation(line: 3543, column: 2, scope: !5176)
!5180 = !DILocation(line: 3544, column: 21, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 3544, column: 11)
!5182 = !DILocation(line: 3544, column: 11, scope: !5181)
!5183 = !DILocation(line: 3544, column: 11, scope: !5136)
!5184 = !DILocation(line: 3545, column: 2, scope: !5181)
!5185 = distinct !{!5185, !5159, !5186}
!5186 = !DILocation(line: 3546, column: 5, scope: !5138)
!5187 = !DILocation(line: 3547, column: 3, scope: !5130)
!5188 = !DILocation(line: 3548, column: 3, scope: !5130)
!5189 = !DILocation(line: 3552, column: 13, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 3552, column: 7)
!5191 = !DILocation(line: 3552, column: 7, scope: !5190)
!5192 = !DILocation(line: 3552, column: 7, scope: !5130)
!5193 = !DILocation(line: 3553, column: 5, scope: !5190)
!5194 = !DILocation(line: 3554, column: 18, scope: !5130)
!5195 = !DILocation(line: 3557, column: 1, scope: !5130)
!5196 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !696, file: !696, line: 224, type: !5197, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5204)
!5197 = !DISubroutineType(types: !5198)
!5198 = !{null, !5199, !5200, !7, !5203}
!5199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!5200 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !645, line: 48, baseType: !5201)
!5201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5202, size: 64)
!5202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !695)
!5203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!5204 = !{!5205, !5206, !5207, !5208}
!5205 = !DILocalVariable(name: "bi", arg: 1, scope: !5196, file: !696, line: 224, type: !5199)
!5206 = !DILocalVariable(name: "map", arg: 2, scope: !5196, file: !696, line: 224, type: !5200)
!5207 = !DILocalVariable(name: "start_bit", arg: 3, scope: !5196, file: !696, line: 225, type: !7)
!5208 = !DILocalVariable(name: "bit_no", arg: 4, scope: !5196, file: !696, line: 225, type: !5203)
!5209 = !DILocation(line: 0, scope: !5196)
!5210 = !DILocation(line: 227, column: 19, scope: !5196)
!5211 = !DILocation(line: 227, column: 12, scope: !5196)
!5212 = !DILocation(line: 228, column: 7, scope: !5196)
!5213 = !DILocation(line: 228, column: 12, scope: !5196)
!5214 = !DILocation(line: 0, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !696, line: 233, column: 11)
!5216 = distinct !DILexicalBlock(scope: !5196, file: !696, line: 232, column: 5)
!5217 = !DILocation(line: 231, column: 3, scope: !5196)
!5218 = !DILocation(line: 233, column: 12, scope: !5215)
!5219 = !DILocation(line: 233, column: 11, scope: !5216)
!5220 = !DILocation(line: 235, column: 13, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5215, file: !696, line: 234, column: 2)
!5222 = !DILocation(line: 236, column: 4, scope: !5221)
!5223 = !DILocation(line: 239, column: 11, scope: !5216)
!5224 = distinct !{!5224, !5217, !5225}
!5225 = !DILocation(line: 242, column: 5, scope: !5196)
!5226 = !DILocation(line: 245, column: 11, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5196, file: !696, line: 245, column: 7)
!5228 = !DILocation(line: 245, column: 17, scope: !5227)
!5229 = !DILocation(line: 245, column: 22, scope: !5227)
!5230 = !DILocation(line: 245, column: 7, scope: !5196)
!5231 = !DILocation(line: 246, column: 27, scope: !5227)
!5232 = !DILocation(line: 246, column: 32, scope: !5227)
!5233 = !DILocation(line: 246, column: 5, scope: !5227)
!5234 = !DILocation(line: 249, column: 7, scope: !5196)
!5235 = !DILocation(line: 249, column: 15, scope: !5196)
!5236 = !DILocation(line: 250, column: 14, scope: !5196)
!5237 = !DILocation(line: 251, column: 7, scope: !5196)
!5238 = !DILocation(line: 251, column: 12, scope: !5196)
!5239 = !DILocation(line: 257, column: 16, scope: !5196)
!5240 = !DILocation(line: 257, column: 13, scope: !5196)
!5241 = !DILocation(line: 259, column: 11, scope: !5196)
!5242 = !DILocation(line: 260, column: 1, scope: !5196)
!5243 = distinct !DISubprogram(name: "bmp_iter_set", scope: !696, file: !696, line: 393, type: !5244, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5246)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{!610, !5199, !5203}
!5246 = !{!5247, !5248, !5249}
!5247 = !DILocalVariable(name: "bi", arg: 1, scope: !5243, file: !696, line: 393, type: !5199)
!5248 = !DILocalVariable(name: "bit_no", arg: 2, scope: !5243, file: !696, line: 393, type: !5203)
!5249 = !DILabel(scope: !5250, name: "next_bit", file: !696, line: 398)
!5250 = distinct !DILexicalBlock(scope: !5251, file: !696, line: 397, column: 5)
!5251 = distinct !DILexicalBlock(scope: !5243, file: !696, line: 396, column: 7)
!5252 = !DILocation(line: 0, scope: !5243)
!5253 = !DILocation(line: 396, column: 11, scope: !5251)
!5254 = !DILocation(line: 396, column: 7, scope: !5251)
!5255 = !DILocation(line: 396, column: 7, scope: !5243)
!5256 = !DILocation(line: 419, column: 15, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5258, file: !696, line: 418, column: 2)
!5258 = distinct !DILexicalBlock(scope: !5243, file: !696, line: 415, column: 5)
!5259 = !DILocation(line: 399, column: 7, scope: !5250)
!5260 = !DILocation(line: 398, column: 5, scope: !5250)
!5261 = !DILocation(line: 399, column: 20, scope: !5250)
!5262 = !DILocation(line: 399, column: 25, scope: !5250)
!5263 = !DILocation(line: 399, column: 14, scope: !5250)
!5264 = !DILocation(line: 401, column: 13, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5250, file: !696, line: 400, column: 2)
!5266 = !DILocation(line: 402, column: 12, scope: !5265)
!5267 = distinct !{!5267, !5259, !5268}
!5268 = !DILocation(line: 403, column: 2, scope: !5250)
!5269 = !DILocation(line: 410, column: 15, scope: !5243)
!5270 = !DILocation(line: 410, column: 42, scope: !5243)
!5271 = !DILocation(line: 411, column: 26, scope: !5243)
!5272 = !DILocation(line: 410, column: 11, scope: !5243)
!5273 = !DILocation(line: 412, column: 7, scope: !5243)
!5274 = !DILocation(line: 412, column: 14, scope: !5243)
!5275 = !DILocation(line: 0, scope: !5258)
!5276 = !DILocation(line: 414, column: 3, scope: !5243)
!5277 = !DILocation(line: 417, column: 7, scope: !5258)
!5278 = !DILocation(line: 417, column: 18, scope: !5258)
!5279 = !DILocation(line: 417, column: 26, scope: !5258)
!5280 = !DILocation(line: 419, column: 13, scope: !5257)
!5281 = !DILocation(line: 420, column: 8, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5257, file: !696, line: 420, column: 8)
!5283 = !DILocation(line: 420, column: 8, scope: !5257)
!5284 = !DILocation(line: 422, column: 12, scope: !5257)
!5285 = !DILocation(line: 423, column: 15, scope: !5257)
!5286 = distinct !{!5286, !5277, !5287}
!5287 = !DILocation(line: 424, column: 2, scope: !5258)
!5288 = !DILocation(line: 427, column: 28, scope: !5258)
!5289 = !DILocation(line: 427, column: 16, scope: !5258)
!5290 = !DILocation(line: 428, column: 12, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5258, file: !696, line: 428, column: 11)
!5292 = !DILocation(line: 428, column: 11, scope: !5258)
!5293 = !DILocation(line: 430, column: 27, scope: !5258)
!5294 = !DILocation(line: 430, column: 32, scope: !5258)
!5295 = !DILocation(line: 430, column: 15, scope: !5258)
!5296 = !DILocation(line: 431, column: 19, scope: !5258)
!5297 = distinct !{!5297, !5276, !5298}
!5298 = !DILocation(line: 432, column: 5, scope: !5243)
!5299 = !DILocation(line: 433, column: 1, scope: !5243)
!5300 = distinct !DISubprogram(name: "bmp_iter_next", scope: !696, file: !696, line: 382, type: !5301, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5303)
!5301 = !DISubroutineType(types: !5302)
!5302 = !{null, !5199, !5203}
!5303 = !{!5304, !5305}
!5304 = !DILocalVariable(name: "bi", arg: 1, scope: !5300, file: !696, line: 382, type: !5199)
!5305 = !DILocalVariable(name: "bit_no", arg: 2, scope: !5300, file: !696, line: 382, type: !5203)
!5306 = !DILocation(line: 0, scope: !5300)
!5307 = !DILocation(line: 384, column: 7, scope: !5300)
!5308 = !DILocation(line: 384, column: 12, scope: !5300)
!5309 = !DILocation(line: 385, column: 11, scope: !5300)
!5310 = !DILocation(line: 386, column: 1, scope: !5300)
!5311 = distinct !DISubprogram(name: "remove_from_deps", scope: !3, file: !3, line: 3562, type: !3698, scopeLine: 3563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5312)
!5312 = !{!5313, !5314, !5315, !5316, !5317, !5318}
!5313 = !DILocalVariable(name: "deps", arg: 1, scope: !5311, file: !3, line: 3562, type: !3700)
!5314 = !DILocalVariable(name: "insn", arg: 2, scope: !5311, file: !3, line: 3562, type: !644)
!5315 = !DILocalVariable(name: "removed", scope: !5311, file: !3, line: 3564, type: !611)
!5316 = !DILocalVariable(name: "i", scope: !5311, file: !3, line: 3565, type: !7)
!5317 = !DILocalVariable(name: "rsi", scope: !5311, file: !3, line: 3566, type: !3922)
!5318 = !DILocalVariable(name: "reg_last", scope: !5319, file: !3, line: 3580, type: !1791)
!5319 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 3579, column: 5)
!5320 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 3578, column: 3)
!5321 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 3578, column: 3)
!5322 = !DILocation(line: 0, scope: !5311)
!5323 = !DILocation(line: 3565, column: 3, scope: !5311)
!5324 = !DILocation(line: 3566, column: 3, scope: !5311)
!5325 = !DILocation(line: 3568, column: 61, scope: !5311)
!5326 = !DILocation(line: 3569, column: 55, scope: !5311)
!5327 = !DILocation(line: 3568, column: 13, scope: !5311)
!5328 = !DILocation(line: 3570, column: 8, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 3570, column: 7)
!5330 = !DILocation(line: 3570, column: 7, scope: !5311)
!5331 = !DILocation(line: 3571, column: 11, scope: !5329)
!5332 = !DILocation(line: 3571, column: 36, scope: !5329)
!5333 = !DILocation(line: 3571, column: 5, scope: !5329)
!5334 = !DILocation(line: 3572, column: 61, scope: !5311)
!5335 = !DILocation(line: 3573, column: 55, scope: !5311)
!5336 = !DILocation(line: 3572, column: 13, scope: !5311)
!5337 = !DILocation(line: 3574, column: 9, scope: !5311)
!5338 = !DILocation(line: 3574, column: 35, scope: !5311)
!5339 = !DILocation(line: 3575, column: 55, scope: !5311)
!5340 = !DILocation(line: 3575, column: 13, scope: !5311)
!5341 = !DILocation(line: 3576, column: 9, scope: !5311)
!5342 = !DILocation(line: 3576, column: 30, scope: !5311)
!5343 = !DILocation(line: 3578, column: 3, scope: !5321)
!5344 = !DILocation(line: 0, scope: !5319)
!5345 = !DILocation(line: 3578, column: 3, scope: !5320)
!5346 = !DILocation(line: 3580, column: 42, scope: !5319)
!5347 = !DILocation(line: 3580, column: 51, scope: !5319)
!5348 = !DILocation(line: 3580, column: 36, scope: !5319)
!5349 = !DILocation(line: 3581, column: 21, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 3581, column: 11)
!5351 = !DILocation(line: 3581, column: 11, scope: !5350)
!5352 = !DILocation(line: 3581, column: 11, scope: !5319)
!5353 = !DILocation(line: 3582, column: 2, scope: !5350)
!5354 = !DILocation(line: 3583, column: 21, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 3583, column: 11)
!5356 = !DILocation(line: 3583, column: 11, scope: !5355)
!5357 = !DILocation(line: 3583, column: 11, scope: !5319)
!5358 = !DILocation(line: 3584, column: 2, scope: !5355)
!5359 = !DILocation(line: 3585, column: 21, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 3585, column: 11)
!5361 = !DILocation(line: 3585, column: 11, scope: !5360)
!5362 = !DILocation(line: 3585, column: 11, scope: !5319)
!5363 = !DILocation(line: 3586, column: 2, scope: !5360)
!5364 = !DILocation(line: 3587, column: 21, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 3587, column: 11)
!5366 = !DILocation(line: 3587, column: 11, scope: !5365)
!5367 = !DILocation(line: 3587, column: 11, scope: !5319)
!5368 = !DILocation(line: 3588, column: 2, scope: !5365)
!5369 = !DILocation(line: 3589, column: 22, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 3589, column: 11)
!5371 = !DILocation(line: 3589, column: 12, scope: !5370)
!5372 = !DILocation(line: 3589, column: 27, scope: !5370)
!5373 = !DILocation(line: 3589, column: 41, scope: !5370)
!5374 = !DILocation(line: 3589, column: 31, scope: !5370)
!5375 = !DILocation(line: 3589, column: 46, scope: !5370)
!5376 = !DILocation(line: 3589, column: 60, scope: !5370)
!5377 = !DILocation(line: 3589, column: 50, scope: !5370)
!5378 = !DILocation(line: 3590, column: 4, scope: !5370)
!5379 = !DILocation(line: 3590, column: 18, scope: !5370)
!5380 = !DILocation(line: 3590, column: 8, scope: !5370)
!5381 = !DILocation(line: 3589, column: 11, scope: !5319)
!5382 = !DILocation(line: 3591, column: 9, scope: !5370)
!5383 = distinct !{!5383, !5343, !5384}
!5384 = !DILocation(line: 3592, column: 5, scope: !5321)
!5385 = !DILocation(line: 3594, column: 7, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 3594, column: 7)
!5387 = !DILocation(line: 3594, column: 7, scope: !5311)
!5388 = !DILocation(line: 3596, column: 49, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 3595, column: 5)
!5390 = !DILocation(line: 3596, column: 7, scope: !5389)
!5391 = !DILocation(line: 3598, column: 15, scope: !5389)
!5392 = !DILocation(line: 3597, column: 7, scope: !5389)
!5393 = !DILocation(line: 3599, column: 5, scope: !5389)
!5394 = !DILocation(line: 3600, column: 45, scope: !5311)
!5395 = !DILocation(line: 3600, column: 3, scope: !5311)
!5396 = !DILocation(line: 3601, column: 1, scope: !5311)
!5397 = distinct !DISubprogram(name: "remove_from_both_dependence_lists", scope: !3, file: !3, line: 1450, type: !5398, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5400)
!5398 = !DISubroutineType(types: !5399)
!5399 = !{!611, !644, !4744, !4744}
!5400 = !{!5401, !5402, !5403, !5404}
!5401 = !DILocalVariable(name: "insn", arg: 1, scope: !5397, file: !3, line: 1450, type: !644)
!5402 = !DILocalVariable(name: "listp", arg: 2, scope: !5397, file: !3, line: 1450, type: !4744)
!5403 = !DILocalVariable(name: "exprp", arg: 3, scope: !5397, file: !3, line: 1450, type: !4744)
!5404 = !DILocalVariable(name: "removed", scope: !5397, file: !3, line: 1452, type: !611)
!5405 = !DILocation(line: 0, scope: !5397)
!5406 = !DILocation(line: 1454, column: 3, scope: !5397)
!5407 = !DILocation(line: 1454, column: 10, scope: !5397)
!5408 = !DILocation(line: 1456, column: 11, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 1456, column: 11)
!5410 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 1455, column: 5)
!5411 = !DILocation(line: 1456, column: 28, scope: !5409)
!5412 = !DILocation(line: 1456, column: 11, scope: !5410)
!5413 = !DILocation(line: 1458, column: 11, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 1457, column: 9)
!5415 = !DILocation(line: 1459, column: 11, scope: !5414)
!5416 = !DILocation(line: 1460, column: 18, scope: !5414)
!5417 = !DILocation(line: 1461, column: 11, scope: !5414)
!5418 = distinct !{!5418, !5406, !5419}
!5419 = !DILocation(line: 1466, column: 5, scope: !5397)
!5420 = !DILocation(line: 1464, column: 16, scope: !5410)
!5421 = !DILocation(line: 1465, column: 16, scope: !5410)
!5422 = !DILocation(line: 1468, column: 3, scope: !5397)
!5423 = distinct !DISubprogram(name: "remove_from_dependence_list", scope: !3, file: !3, line: 1429, type: !5424, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5426)
!5424 = !DISubroutineType(types: !5425)
!5425 = !{!611, !644, !4744}
!5426 = !{!5427, !5428, !5429}
!5427 = !DILocalVariable(name: "insn", arg: 1, scope: !5423, file: !3, line: 1429, type: !644)
!5428 = !DILocalVariable(name: "listp", arg: 2, scope: !5423, file: !3, line: 1429, type: !4744)
!5429 = !DILocalVariable(name: "removed", scope: !5423, file: !3, line: 1431, type: !611)
!5430 = !DILocation(line: 0, scope: !5423)
!5431 = !DILocation(line: 1433, column: 3, scope: !5423)
!5432 = !DILocation(line: 1433, column: 10, scope: !5423)
!5433 = !DILocation(line: 1435, column: 11, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 1435, column: 11)
!5435 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 1434, column: 5)
!5436 = !DILocation(line: 1435, column: 28, scope: !5434)
!5437 = !DILocation(line: 1435, column: 11, scope: !5435)
!5438 = !DILocation(line: 1437, column: 11, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 1436, column: 9)
!5440 = !DILocation(line: 1438, column: 18, scope: !5439)
!5441 = !DILocation(line: 1439, column: 11, scope: !5439)
!5442 = distinct !{!5442, !5431, !5443}
!5443 = !DILocation(line: 1443, column: 5, scope: !5423)
!5444 = !DILocation(line: 1442, column: 16, scope: !5435)
!5445 = !DILocation(line: 1445, column: 3, scope: !5423)
!5446 = distinct !DISubprogram(name: "sched_deps_init", scope: !3, file: !3, line: 3618, type: !5447, scopeLine: 3619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5449)
!5447 = !DISubroutineType(types: !5448)
!5448 = !{null, !610}
!5449 = !{!5450, !5451}
!5450 = !DILocalVariable(name: "global_p", arg: 1, scope: !5446, file: !3, line: 3618, type: !610)
!5451 = !DILocalVariable(name: "insns_in_block", scope: !5446, file: !3, line: 3622, type: !611)
!5452 = !DILocation(line: 0, scope: !5446)
!5453 = !DILocation(line: 3622, column: 24, scope: !5446)
!5454 = !DILocation(line: 3622, column: 41, scope: !5446)
!5455 = !DILocation(line: 3622, column: 39, scope: !5446)
!5456 = !DILocation(line: 3622, column: 56, scope: !5446)
!5457 = !DILocation(line: 3624, column: 3, scope: !5446)
!5458 = !DILocation(line: 3628, column: 8, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 3628, column: 7)
!5460 = !DILocation(line: 3628, column: 26, scope: !5459)
!5461 = !DILocation(line: 3628, column: 23, scope: !5459)
!5462 = !DILocation(line: 3628, column: 53, scope: !5459)
!5463 = !DILocation(line: 3636, column: 18, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 3629, column: 5)
!5465 = !DILocation(line: 3637, column: 33, scope: !5464)
!5466 = !DILocation(line: 3637, column: 7, scope: !5464)
!5467 = !DILocation(line: 3638, column: 5, scope: !5464)
!5468 = !DILocation(line: 3640, column: 7, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 3640, column: 7)
!5470 = !DILocation(line: 3640, column: 7, scope: !5446)
!5471 = !DILocation(line: 3644, column: 36, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 3641, column: 5)
!5473 = !DILocation(line: 3642, column: 17, scope: !5472)
!5474 = !DILocation(line: 3642, column: 15, scope: !5472)
!5475 = !DILocation(line: 3649, column: 38, scope: !5472)
!5476 = !DILocation(line: 3649, column: 36, scope: !5472)
!5477 = !DILocation(line: 3645, column: 17, scope: !5472)
!5478 = !DILocation(line: 3645, column: 15, scope: !5472)
!5479 = !DILocation(line: 3650, column: 5, scope: !5472)
!5480 = !DILocation(line: 3651, column: 1, scope: !5446)
!5481 = distinct !DISubprogram(name: "init_deps_data_vector", scope: !3, file: !3, line: 3605, type: !1893, scopeLine: 3606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5482)
!5482 = !{!5483}
!5483 = !DILocalVariable(name: "reserve", scope: !5481, file: !3, line: 3607, type: !611)
!5484 = !DILocation(line: 3607, column: 18, scope: !5481)
!5485 = !DILocation(line: 3607, column: 33, scope: !5481)
!5486 = !DILocation(line: 3608, column: 20, scope: !5481)
!5487 = !DILocation(line: 3608, column: 18, scope: !5481)
!5488 = !DILocation(line: 0, scope: !5481)
!5489 = !DILocation(line: 3609, column: 15, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 3609, column: 7)
!5491 = !DILocation(line: 3610, column: 7, scope: !5490)
!5492 = !DILocation(line: 3610, column: 12, scope: !5490)
!5493 = !DILocation(line: 3609, column: 7, scope: !5481)
!5494 = !DILocation(line: 3611, column: 5, scope: !5490)
!5495 = !DILocation(line: 3613, column: 1, scope: !5481)
!5496 = distinct !DISubprogram(name: "extend_dependency_caches", scope: !3, file: !3, line: 3657, type: !5497, scopeLine: 3658, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5499)
!5497 = !DISubroutineType(types: !5498)
!5498 = !{null, !611, !610}
!5499 = !{!5500, !5501, !5502, !5505}
!5500 = !DILocalVariable(name: "n", arg: 1, scope: !5496, file: !3, line: 3657, type: !611)
!5501 = !DILocalVariable(name: "create_p", arg: 2, scope: !5496, file: !3, line: 3657, type: !610)
!5502 = !DILocalVariable(name: "i", scope: !5503, file: !3, line: 3661, type: !611)
!5503 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 3660, column: 5)
!5504 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 3659, column: 7)
!5505 = !DILocalVariable(name: "luid", scope: !5503, file: !3, line: 3661, type: !611)
!5506 = !DILocation(line: 0, scope: !5496)
!5507 = !DILocation(line: 3659, column: 7, scope: !5504)
!5508 = !DILocation(line: 3659, column: 19, scope: !5504)
!5509 = !DILocation(line: 3659, column: 16, scope: !5504)
!5510 = !DILocation(line: 3661, column: 21, scope: !5503)
!5511 = !DILocation(line: 3661, column: 32, scope: !5503)
!5512 = !DILocation(line: 0, scope: !5503)
!5513 = !DILocation(line: 3663, column: 31, scope: !5503)
!5514 = !DILocation(line: 3663, column: 29, scope: !5503)
!5515 = !DILocation(line: 3665, column: 33, scope: !5503)
!5516 = !DILocation(line: 3665, column: 31, scope: !5503)
!5517 = !DILocation(line: 3667, column: 31, scope: !5503)
!5518 = !DILocation(line: 3667, column: 29, scope: !5503)
!5519 = !DILocation(line: 3670, column: 11, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 3670, column: 11)
!5521 = !DILocation(line: 3670, column: 31, scope: !5520)
!5522 = !DILocation(line: 3670, column: 37, scope: !5520)
!5523 = !DILocation(line: 3670, column: 11, scope: !5503)
!5524 = !DILocation(line: 3671, column: 33, scope: !5520)
!5525 = !DILocation(line: 3671, column: 31, scope: !5520)
!5526 = !DILocation(line: 3671, column: 9, scope: !5520)
!5527 = !DILocation(line: 3674, column: 16, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 3674, column: 7)
!5529 = !DILocation(line: 3674, column: 12, scope: !5528)
!5530 = !DILocation(line: 0, scope: !5528)
!5531 = !DILocation(line: 3674, column: 30, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 3674, column: 7)
!5533 = !DILocation(line: 3674, column: 7, scope: !5528)
!5534 = !DILocation(line: 3676, column: 4, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 3675, column: 2)
!5536 = !DILocation(line: 3677, column: 4, scope: !5535)
!5537 = !DILocation(line: 3678, column: 4, scope: !5535)
!5538 = !DILocation(line: 3680, column: 15, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 3680, column: 15)
!5540 = !DILocation(line: 3680, column: 35, scope: !5539)
!5541 = !DILocation(line: 3680, column: 41, scope: !5539)
!5542 = !DILocation(line: 3680, column: 15, scope: !5535)
!5543 = !DILocation(line: 3681, column: 13, scope: !5539)
!5544 = !DILocation(line: 3674, column: 39, scope: !5532)
!5545 = !DILocation(line: 3674, column: 7, scope: !5532)
!5546 = distinct !{!5546, !5533, !5547}
!5547 = !DILocation(line: 3682, column: 2, scope: !5528)
!5548 = !DILocation(line: 3683, column: 18, scope: !5503)
!5549 = !DILocation(line: 3684, column: 5, scope: !5503)
!5550 = !DILocation(line: 3685, column: 1, scope: !5496)
!5551 = distinct !DISubprogram(name: "sched_deps_finish", scope: !3, file: !3, line: 3689, type: !1893, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5552)
!5552 = !{!5553}
!5553 = !DILocalVariable(name: "i", scope: !5554, file: !3, line: 3701, type: !611)
!5554 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 3700, column: 5)
!5555 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 3699, column: 7)
!5556 = !DILocation(line: 3691, column: 3, scope: !5551)
!5557 = !DILocation(line: 3692, column: 3, scope: !5551)
!5558 = !DILocation(line: 3693, column: 3, scope: !5551)
!5559 = !DILocation(line: 3694, column: 3, scope: !5551)
!5560 = !DILocation(line: 3696, column: 3, scope: !5551)
!5561 = !DILocation(line: 3697, column: 14, scope: !5551)
!5562 = !DILocation(line: 3699, column: 7, scope: !5555)
!5563 = !DILocation(line: 3699, column: 7, scope: !5551)
!5564 = !DILocation(line: 3703, column: 7, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 3703, column: 7)
!5566 = !DILocation(line: 0, scope: !5554)
!5567 = !DILocation(line: 3703, column: 23, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 3703, column: 7)
!5569 = !DILocation(line: 3703, column: 21, scope: !5568)
!5570 = !DILocation(line: 3705, column: 19, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 3704, column: 2)
!5572 = !DILocation(line: 3705, column: 4, scope: !5571)
!5573 = !DILocation(line: 3706, column: 19, scope: !5571)
!5574 = !DILocation(line: 3706, column: 4, scope: !5571)
!5575 = !DILocation(line: 3707, column: 19, scope: !5571)
!5576 = !DILocation(line: 3707, column: 4, scope: !5571)
!5577 = !DILocation(line: 3709, column: 15, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 3709, column: 15)
!5579 = !DILocation(line: 3709, column: 32, scope: !5578)
!5580 = !DILocation(line: 3709, column: 15, scope: !5571)
!5581 = !DILocation(line: 3710, column: 28, scope: !5578)
!5582 = !DILocation(line: 3710, column: 13, scope: !5578)
!5583 = !DILocation(line: 3703, column: 36, scope: !5568)
!5584 = !DILocation(line: 3703, column: 7, scope: !5568)
!5585 = distinct !{!5585, !5564, !5586}
!5586 = !DILocation(line: 3711, column: 2, scope: !5565)
!5587 = !DILocation(line: 3712, column: 13, scope: !5554)
!5588 = !DILocation(line: 3712, column: 7, scope: !5554)
!5589 = !DILocation(line: 3713, column: 29, scope: !5554)
!5590 = !DILocation(line: 3714, column: 13, scope: !5554)
!5591 = !DILocation(line: 3714, column: 7, scope: !5554)
!5592 = !DILocation(line: 3715, column: 31, scope: !5554)
!5593 = !DILocation(line: 3716, column: 13, scope: !5554)
!5594 = !DILocation(line: 3716, column: 7, scope: !5554)
!5595 = !DILocation(line: 3717, column: 29, scope: !5554)
!5596 = !DILocation(line: 3719, column: 11, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 3719, column: 11)
!5598 = !DILocation(line: 3719, column: 28, scope: !5597)
!5599 = !DILocation(line: 3719, column: 11, scope: !5554)
!5600 = !DILocation(line: 3721, column: 17, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 3720, column: 9)
!5602 = !DILocation(line: 3721, column: 11, scope: !5601)
!5603 = !DILocation(line: 3722, column: 33, scope: !5601)
!5604 = !DILocation(line: 3723, column: 9, scope: !5601)
!5605 = !DILocation(line: 3726, column: 1, scope: !5551)
!5606 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_heap_free", scope: !562, file: !562, line: 847, type: !5607, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5610)
!5607 = !DISubroutineType(types: !5608)
!5608 = !{null, !5609}
!5609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!5610 = !{!5611}
!5611 = !DILocalVariable(name: "vec_", arg: 1, scope: !5606, file: !562, line: 847, type: !5609)
!5612 = !DILocation(line: 0, scope: !5606)
!5613 = !DILocation(line: 847, column: 1, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5606, file: !562, line: 847, column: 1)
!5615 = !DILocation(line: 847, column: 1, scope: !5606)
!5616 = distinct !DISubprogram(name: "init_deps_global", scope: !3, file: !3, line: 3732, type: !1893, scopeLine: 3733, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2031)
!5617 = !DILocation(line: 3734, column: 3, scope: !5616)
!5618 = !DILocation(line: 3735, column: 3, scope: !5616)
!5619 = !DILocation(line: 3736, column: 22, scope: !5616)
!5620 = !DILocation(line: 3736, column: 20, scope: !5616)
!5621 = !DILocation(line: 3737, column: 26, scope: !5616)
!5622 = !DILocation(line: 3737, column: 24, scope: !5616)
!5623 = !DILocation(line: 3738, column: 22, scope: !5616)
!5624 = !DILocation(line: 3738, column: 20, scope: !5616)
!5625 = !DILocation(line: 3739, column: 23, scope: !5616)
!5626 = !DILocation(line: 3741, column: 8, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 3741, column: 7)
!5628 = !DILocation(line: 3741, column: 26, scope: !5627)
!5629 = !DILocation(line: 3741, column: 23, scope: !5627)
!5630 = !DILocation(line: 3743, column: 7, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 3742, column: 5)
!5632 = !DILocation(line: 3743, column: 24, scope: !5631)
!5633 = !DILocation(line: 3743, column: 35, scope: !5631)
!5634 = !DILocation(line: 3744, column: 24, scope: !5631)
!5635 = !DILocation(line: 3744, column: 36, scope: !5631)
!5636 = !DILocation(line: 3746, column: 24, scope: !5631)
!5637 = !DILocation(line: 3746, column: 37, scope: !5631)
!5638 = !DILocation(line: 3747, column: 24, scope: !5631)
!5639 = !DILocation(line: 3747, column: 41, scope: !5631)
!5640 = !DILocation(line: 3748, column: 24, scope: !5631)
!5641 = !DILocation(line: 3748, column: 37, scope: !5631)
!5642 = !DILocation(line: 3750, column: 24, scope: !5631)
!5643 = !DILocation(line: 3750, column: 37, scope: !5631)
!5644 = !DILocation(line: 3751, column: 24, scope: !5631)
!5645 = !DILocation(line: 3751, column: 33, scope: !5631)
!5646 = !DILocation(line: 3752, column: 4, scope: !5631)
!5647 = !DILocation(line: 3753, column: 1, scope: !5616)
!5648 = distinct !DISubprogram(name: "haifa_start_insn", scope: !3, file: !3, line: 1619, type: !1889, scopeLine: 1620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5649)
!5649 = !{!5650}
!5650 = !DILocalVariable(name: "insn", arg: 1, scope: !5648, file: !3, line: 1619, type: !644)
!5651 = !DILocation(line: 0, scope: !5648)
!5652 = !DILocation(line: 1621, column: 3, scope: !5648)
!5653 = !DILocation(line: 1623, column: 12, scope: !5648)
!5654 = !DILocation(line: 1624, column: 1, scope: !5648)
!5655 = distinct !DISubprogram(name: "haifa_finish_insn", scope: !3, file: !3, line: 1627, type: !1893, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2031)
!5656 = !DILocation(line: 1629, column: 12, scope: !5655)
!5657 = !DILocation(line: 1630, column: 1, scope: !5655)
!5658 = distinct !DISubprogram(name: "haifa_note_mem_dep", scope: !3, file: !3, line: 1651, type: !1907, scopeLine: 1652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5659)
!5659 = !{!5660, !5661, !5662, !5663, !5664, !5666}
!5660 = !DILocalVariable(name: "mem", arg: 1, scope: !5658, file: !3, line: 1651, type: !644)
!5661 = !DILocalVariable(name: "pending_mem", arg: 2, scope: !5658, file: !3, line: 1651, type: !644)
!5662 = !DILocalVariable(name: "pending_insn", arg: 3, scope: !5658, file: !3, line: 1651, type: !644)
!5663 = !DILocalVariable(name: "ds", arg: 4, scope: !5658, file: !3, line: 1651, type: !618)
!5664 = !DILocalVariable(name: "_dep", scope: !5665, file: !3, line: 1662, type: !2487)
!5665 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 1661, column: 3)
!5666 = !DILocalVariable(name: "dep", scope: !5665, file: !3, line: 1662, type: !2486)
!5667 = !DILocation(line: 0, scope: !5658)
!5668 = !DILocation(line: 1653, column: 12, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 1653, column: 7)
!5670 = !DILocation(line: 1653, column: 7, scope: !5658)
!5671 = !DILocation(line: 1659, column: 5, scope: !5669)
!5672 = !DILocation(line: 1662, column: 5, scope: !5665)
!5673 = !DILocation(line: 0, scope: !5665)
!5674 = !DILocation(line: 1664, column: 36, scope: !5665)
!5675 = !DILocation(line: 1664, column: 46, scope: !5665)
!5676 = !DILocation(line: 1665, column: 17, scope: !5665)
!5677 = !DILocation(line: 1665, column: 37, scope: !5665)
!5678 = !DILocation(line: 1665, column: 43, scope: !5665)
!5679 = !DILocation(line: 1664, column: 5, scope: !5665)
!5680 = !DILocation(line: 1666, column: 5, scope: !5665)
!5681 = !DILocation(line: 1667, column: 3, scope: !5658)
!5682 = !DILocation(line: 1669, column: 1, scope: !5658)
!5683 = distinct !DISubprogram(name: "haifa_note_dep", scope: !3, file: !3, line: 1672, type: !1911, scopeLine: 1673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5684)
!5684 = !{!5685, !5686, !5687, !5688}
!5685 = !DILocalVariable(name: "elem", arg: 1, scope: !5683, file: !3, line: 1672, type: !644)
!5686 = !DILocalVariable(name: "ds", arg: 2, scope: !5683, file: !3, line: 1672, type: !618)
!5687 = !DILocalVariable(name: "_dep", scope: !5683, file: !3, line: 1674, type: !2487)
!5688 = !DILocalVariable(name: "dep", scope: !5683, file: !3, line: 1675, type: !2485)
!5689 = !DILocation(line: 0, scope: !5683)
!5690 = !DILocation(line: 1674, column: 3, scope: !5683)
!5691 = !DILocation(line: 1677, column: 24, scope: !5683)
!5692 = !DILocation(line: 1677, column: 34, scope: !5683)
!5693 = !DILocation(line: 1677, column: 3, scope: !5683)
!5694 = !DILocation(line: 1678, column: 3, scope: !5683)
!5695 = !DILocation(line: 1679, column: 1, scope: !5683)
!5696 = distinct !DISubprogram(name: "finish_deps_global", scope: !3, file: !3, line: 3758, type: !1893, scopeLine: 3759, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2031)
!5697 = !DILocation(line: 3760, column: 3, scope: !5696)
!5698 = !DILocation(line: 3761, column: 3, scope: !5696)
!5699 = !DILocation(line: 3762, column: 3, scope: !5696)
!5700 = !DILocation(line: 3763, column: 1, scope: !5696)
!5701 = distinct !DISubprogram(name: "estimate_dep_weak", scope: !3, file: !3, line: 3767, type: !5702, scopeLine: 3768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5704)
!5702 = !DISubroutineType(types: !5703)
!5703 = !{!1803, !644, !644}
!5704 = !{!5705, !5706, !5707, !5708}
!5705 = !DILocalVariable(name: "mem1", arg: 1, scope: !5701, file: !3, line: 3767, type: !644)
!5706 = !DILocalVariable(name: "mem2", arg: 2, scope: !5701, file: !3, line: 3767, type: !644)
!5707 = !DILocalVariable(name: "r1", scope: !5701, file: !3, line: 3769, type: !644)
!5708 = !DILocalVariable(name: "r2", scope: !5701, file: !3, line: 3769, type: !644)
!5709 = !DILocation(line: 0, scope: !5701)
!5710 = !DILocation(line: 3771, column: 12, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 3771, column: 7)
!5712 = !DILocation(line: 3771, column: 7, scope: !5701)
!5713 = !DILocation(line: 3775, column: 8, scope: !5701)
!5714 = !DILocation(line: 3776, column: 8, scope: !5701)
!5715 = !DILocation(line: 3778, column: 10, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 3778, column: 7)
!5717 = !DILocation(line: 3779, column: 7, scope: !5716)
!5718 = !DILocation(line: 3779, column: 11, scope: !5716)
!5719 = !DILocation(line: 3779, column: 22, scope: !5716)
!5720 = !DILocation(line: 3779, column: 25, scope: !5716)
!5721 = !DILocation(line: 3780, column: 4, scope: !5716)
!5722 = !DILocation(line: 3780, column: 7, scope: !5716)
!5723 = !DILocation(line: 3780, column: 21, scope: !5716)
!5724 = !DILocation(line: 3780, column: 18, scope: !5716)
!5725 = !DILocation(line: 3778, column: 7, scope: !5701)
!5726 = !DILocation(line: 3783, column: 13, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 3783, column: 12)
!5728 = !DILocation(line: 3783, column: 24, scope: !5727)
!5729 = !DILocation(line: 3783, column: 28, scope: !5727)
!5730 = !DILocation(line: 3784, column: 5, scope: !5727)
!5731 = !DILocation(line: 3784, column: 21, scope: !5727)
!5732 = !DILocation(line: 3784, column: 24, scope: !5727)
!5733 = !DILocation(line: 3783, column: 12, scope: !5716)
!5734 = !DILocation(line: 3790, column: 5, scope: !5727)
!5735 = !DILocation(line: 3791, column: 1, scope: !5701)
!5736 = distinct !DISubprogram(name: "rhs_regno", scope: !385, file: !385, line: 1051, type: !5737, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5739)
!5737 = !DISubroutineType(types: !5738)
!5738 = !{!7, !1852}
!5739 = !{!5740}
!5740 = !DILocalVariable(name: "x", arg: 1, scope: !5736, file: !385, line: 1051, type: !1852)
!5741 = !DILocation(line: 0, scope: !5736)
!5742 = !DILocation(line: 1053, column: 10, scope: !5736)
!5743 = !DILocation(line: 1053, column: 3, scope: !5736)
!5744 = distinct !DISubprogram(name: "add_dependence", scope: !3, file: !3, line: 3797, type: !5745, scopeLine: 3798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5747)
!5745 = !DISubroutineType(types: !5746)
!5746 = !{null, !644, !644, !384}
!5747 = !{!5748, !5749, !5750, !5751, !5752}
!5748 = !DILocalVariable(name: "insn", arg: 1, scope: !5744, file: !3, line: 3797, type: !644)
!5749 = !DILocalVariable(name: "elem", arg: 2, scope: !5744, file: !3, line: 3797, type: !644)
!5750 = !DILocalVariable(name: "dep_type", arg: 3, scope: !5744, file: !3, line: 3797, type: !384)
!5751 = !DILocalVariable(name: "ds", scope: !5744, file: !3, line: 3799, type: !618)
!5752 = !DILocalVariable(name: "internal", scope: !5744, file: !3, line: 3800, type: !610)
!5753 = !DILocation(line: 0, scope: !5744)
!5754 = !DILocation(line: 3802, column: 7, scope: !5744)
!5755 = !DILocation(line: 3808, column: 7, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 3807, column: 5)
!5757 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 3804, column: 12)
!5758 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 3802, column: 7)
!5759 = !DILocation(line: 0, scope: !5757)
!5760 = !DILocation(line: 0, scope: !5758)
!5761 = !DILocation(line: 3814, column: 14, scope: !5744)
!5762 = !DILocation(line: 3814, column: 23, scope: !5744)
!5763 = !DILocation(line: 3815, column: 7, scope: !5744)
!5764 = !DILocation(line: 3816, column: 5, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 3815, column: 7)
!5766 = !DILocation(line: 3818, column: 14, scope: !5765)
!5767 = !DILocation(line: 3820, column: 3, scope: !5744)
!5768 = !DILocation(line: 3821, column: 7, scope: !5744)
!5769 = !DILocation(line: 3822, column: 14, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 3821, column: 7)
!5771 = !DILocation(line: 3822, column: 5, scope: !5770)
!5772 = !DILocation(line: 3823, column: 1, scope: !5744)
!5773 = distinct !DISubprogram(name: "note_dep", scope: !3, file: !3, line: 1710, type: !1911, scopeLine: 1711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5774)
!5774 = !{!5775, !5776}
!5775 = !DILocalVariable(name: "e", arg: 1, scope: !5773, file: !3, line: 1710, type: !644)
!5776 = !DILocalVariable(name: "ds", arg: 2, scope: !5773, file: !3, line: 1710, type: !618)
!5777 = !DILocation(line: 0, scope: !5773)
!5778 = !DILocation(line: 1712, column: 7, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 1712, column: 7)
!5780 = !DILocation(line: 1712, column: 24, scope: !5779)
!5781 = !DILocation(line: 1712, column: 7, scope: !5773)
!5782 = !DILocation(line: 1713, column: 5, scope: !5779)
!5783 = !DILocation(line: 1714, column: 1, scope: !5773)
!5784 = distinct !DISubprogram(name: "get_dep_weak_1", scope: !3, file: !3, line: 3827, type: !5785, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5787)
!5785 = !DISubroutineType(types: !5786)
!5786 = !{!1803, !618, !618}
!5787 = !{!5788, !5789}
!5788 = !DILocalVariable(name: "ds", arg: 1, scope: !5784, file: !3, line: 3827, type: !618)
!5789 = !DILocalVariable(name: "type", arg: 2, scope: !5784, file: !3, line: 3827, type: !618)
!5790 = !DILocation(line: 0, scope: !5784)
!5791 = !DILocation(line: 3829, column: 11, scope: !5784)
!5792 = !DILocation(line: 3831, column: 3, scope: !5784)
!5793 = !DILocation(line: 3833, column: 53, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 3832, column: 5)
!5795 = !DILocation(line: 3834, column: 25, scope: !5794)
!5796 = !DILocation(line: 3834, column: 53, scope: !5794)
!5797 = !DILocation(line: 3835, column: 28, scope: !5794)
!5798 = !DILocation(line: 3835, column: 59, scope: !5794)
!5799 = !DILocation(line: 3836, column: 28, scope: !5794)
!5800 = !DILocation(line: 3836, column: 59, scope: !5794)
!5801 = !DILocation(line: 3837, column: 14, scope: !5794)
!5802 = !DILocation(line: 3838, column: 5, scope: !5794)
!5803 = !DILocation(line: 3840, column: 3, scope: !5784)
!5804 = distinct !DISubprogram(name: "get_dep_weak", scope: !3, file: !3, line: 3844, type: !5785, scopeLine: 3845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5805)
!5805 = !{!5806, !5807, !5808}
!5806 = !DILocalVariable(name: "ds", arg: 1, scope: !5804, file: !3, line: 3844, type: !618)
!5807 = !DILocalVariable(name: "type", arg: 2, scope: !5804, file: !3, line: 3844, type: !618)
!5808 = !DILocalVariable(name: "dw", scope: !5804, file: !3, line: 3846, type: !1803)
!5809 = !DILocation(line: 0, scope: !5804)
!5810 = !DILocation(line: 3846, column: 13, scope: !5804)
!5811 = !DILocation(line: 3848, column: 3, scope: !5804)
!5812 = !DILocation(line: 3849, column: 3, scope: !5804)
!5813 = distinct !DISubprogram(name: "set_dep_weak", scope: !3, file: !3, line: 3855, type: !5814, scopeLine: 3856, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5816)
!5814 = !DISubroutineType(types: !5815)
!5815 = !{!618, !618, !618, !1803}
!5816 = !{!5817, !5818, !5819}
!5817 = !DILocalVariable(name: "ds", arg: 1, scope: !5813, file: !3, line: 3855, type: !618)
!5818 = !DILocalVariable(name: "type", arg: 2, scope: !5813, file: !3, line: 3855, type: !618)
!5819 = !DILocalVariable(name: "dw", arg: 3, scope: !5813, file: !3, line: 3855, type: !1803)
!5820 = !DILocation(line: 0, scope: !5813)
!5821 = !DILocation(line: 3857, column: 3, scope: !5813)
!5822 = !DILocation(line: 3859, column: 9, scope: !5813)
!5823 = !DILocation(line: 3859, column: 6, scope: !5813)
!5824 = !DILocation(line: 3860, column: 3, scope: !5813)
!5825 = !DILocation(line: 3862, column: 25, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5813, file: !3, line: 3861, column: 5)
!5827 = !DILocation(line: 3862, column: 67, scope: !5826)
!5828 = !DILocation(line: 3863, column: 40, scope: !5826)
!5829 = !DILocation(line: 3863, column: 25, scope: !5826)
!5830 = !DILocation(line: 3863, column: 67, scope: !5826)
!5831 = !DILocation(line: 3864, column: 43, scope: !5826)
!5832 = !DILocation(line: 3864, column: 28, scope: !5826)
!5833 = !DILocation(line: 3864, column: 73, scope: !5826)
!5834 = !DILocation(line: 3865, column: 43, scope: !5826)
!5835 = !DILocation(line: 3865, column: 28, scope: !5826)
!5836 = !DILocation(line: 3865, column: 73, scope: !5826)
!5837 = !DILocation(line: 3866, column: 14, scope: !5826)
!5838 = !DILocation(line: 3867, column: 5, scope: !5826)
!5839 = !DILocation(line: 3868, column: 3, scope: !5813)
!5840 = distinct !DISubprogram(name: "ds_merge", scope: !3, file: !3, line: 3927, type: !5841, scopeLine: 3928, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5843)
!5841 = !DISubroutineType(types: !5842)
!5842 = !{!618, !618, !618}
!5843 = !{!5844, !5845}
!5844 = !DILocalVariable(name: "ds1", arg: 1, scope: !5840, file: !3, line: 3927, type: !618)
!5845 = !DILocalVariable(name: "ds2", arg: 2, scope: !5840, file: !3, line: 3927, type: !618)
!5846 = !DILocation(line: 0, scope: !5840)
!5847 = !DILocation(line: 3929, column: 10, scope: !5840)
!5848 = !DILocation(line: 3929, column: 3, scope: !5840)
!5849 = distinct !DISubprogram(name: "ds_merge_1", scope: !3, file: !3, line: 3876, type: !5850, scopeLine: 3877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5852)
!5850 = !DISubroutineType(types: !5851)
!5851 = !{!618, !618, !618, !610}
!5852 = !{!5853, !5854, !5855, !5856, !5857, !5858, !5864, !5865}
!5853 = !DILocalVariable(name: "ds1", arg: 1, scope: !5849, file: !3, line: 3876, type: !618)
!5854 = !DILocalVariable(name: "ds2", arg: 2, scope: !5849, file: !3, line: 3876, type: !618)
!5855 = !DILocalVariable(name: "max_p", arg: 3, scope: !5849, file: !3, line: 3876, type: !610)
!5856 = !DILocalVariable(name: "ds", scope: !5849, file: !3, line: 3878, type: !618)
!5857 = !DILocalVariable(name: "t", scope: !5849, file: !3, line: 3878, type: !618)
!5858 = !DILocalVariable(name: "dw1", scope: !5859, file: !3, line: 3893, type: !1803)
!5859 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 3892, column: 2)
!5860 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 3891, column: 16)
!5861 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 3889, column: 16)
!5862 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 3887, column: 11)
!5863 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 3886, column: 5)
!5864 = !DILocalVariable(name: "dw2", scope: !5859, file: !3, line: 3894, type: !1803)
!5865 = !DILocalVariable(name: "dw", scope: !5859, file: !3, line: 3895, type: !618)
!5866 = !DILocation(line: 0, scope: !5849)
!5867 = !DILocation(line: 3880, column: 3, scope: !5849)
!5868 = !DILocation(line: 3882, column: 26, scope: !5849)
!5869 = !DILocation(line: 0, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5859, file: !3, line: 3897, column: 8)
!5871 = !DILocation(line: 3885, column: 3, scope: !5849)
!5872 = !DILocation(line: 3887, column: 16, scope: !5862)
!5873 = !DILocation(line: 3887, column: 30, scope: !5862)
!5874 = !DILocation(line: 3887, column: 21, scope: !5862)
!5875 = !DILocation(line: 3888, column: 5, scope: !5862)
!5876 = !DILocation(line: 3888, column: 2, scope: !5862)
!5877 = !DILocation(line: 3889, column: 27, scope: !5861)
!5878 = !DILocation(line: 3891, column: 21, scope: !5860)
!5879 = !DILocation(line: 3891, column: 26, scope: !5860)
!5880 = !DILocation(line: 3893, column: 15, scope: !5859)
!5881 = !DILocation(line: 0, scope: !5859)
!5882 = !DILocation(line: 3894, column: 15, scope: !5859)
!5883 = !DILocation(line: 3899, column: 26, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 3898, column: 6)
!5885 = !DILocation(line: 3900, column: 11, scope: !5884)
!5886 = !DILocation(line: 3901, column: 12, scope: !5884)
!5887 = !DILocation(line: 3912, column: 9, scope: !5859)
!5888 = !DILocation(line: 3913, column: 2, scope: !5859)
!5889 = !DILocation(line: 3890, column: 5, scope: !5861)
!5890 = !DILocation(line: 3890, column: 2, scope: !5861)
!5891 = !DILocation(line: 0, scope: !5862)
!5892 = !DILocation(line: 3915, column: 13, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 3915, column: 11)
!5894 = !DILocation(line: 3915, column: 11, scope: !5863)
!5895 = !DILocation(line: 3917, column: 9, scope: !5863)
!5896 = !DILocation(line: 3918, column: 5, scope: !5863)
!5897 = !DILocation(line: 3921, column: 3, scope: !5849)
!5898 = !DILocation(line: 3906, column: 16, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3906, column: 12)
!5900 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 3905, column: 6)
!5901 = distinct !DISubprogram(name: "ds_full_merge", scope: !3, file: !3, line: 3934, type: !5902, scopeLine: 3935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5904)
!5902 = !DISubroutineType(types: !5903)
!5903 = !{!618, !618, !618, !644, !644}
!5904 = !{!5905, !5906, !5907, !5908, !5909, !5910}
!5905 = !DILocalVariable(name: "ds", arg: 1, scope: !5901, file: !3, line: 3934, type: !618)
!5906 = !DILocalVariable(name: "ds2", arg: 2, scope: !5901, file: !3, line: 3934, type: !618)
!5907 = !DILocalVariable(name: "mem1", arg: 3, scope: !5901, file: !3, line: 3934, type: !644)
!5908 = !DILocalVariable(name: "mem2", arg: 4, scope: !5901, file: !3, line: 3934, type: !644)
!5909 = !DILocalVariable(name: "new_status", scope: !5901, file: !3, line: 3936, type: !618)
!5910 = !DILocalVariable(name: "dw", scope: !5911, file: !3, line: 3949, type: !1803)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 3948, column: 6)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 3947, column: 8)
!5913 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 3945, column: 2)
!5914 = distinct !DILexicalBlock(scope: !5915, file: !3, line: 3940, column: 11)
!5915 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 3939, column: 5)
!5916 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 3938, column: 7)
!5917 = !DILocation(line: 0, scope: !5901)
!5918 = !DILocation(line: 3936, column: 24, scope: !5901)
!5919 = !DILocation(line: 3938, column: 18, scope: !5916)
!5920 = !DILocation(line: 3938, column: 7, scope: !5901)
!5921 = !DILocation(line: 3940, column: 12, scope: !5914)
!5922 = !DILocation(line: 3940, column: 23, scope: !5914)
!5923 = !DILocation(line: 3940, column: 15, scope: !5914)
!5924 = !DILocation(line: 3941, column: 8, scope: !5914)
!5925 = !DILocation(line: 3941, column: 21, scope: !5914)
!5926 = !DILocation(line: 3941, column: 12, scope: !5914)
!5927 = !DILocation(line: 3943, column: 13, scope: !5914)
!5928 = !DILocation(line: 3943, column: 2, scope: !5914)
!5929 = !DILocation(line: 3947, column: 8, scope: !5912)
!5930 = !DILocation(line: 3947, column: 8, scope: !5913)
!5931 = !DILocation(line: 3951, column: 13, scope: !5911)
!5932 = !DILocation(line: 0, scope: !5911)
!5933 = !DILocation(line: 3952, column: 13, scope: !5911)
!5934 = !DILocation(line: 3953, column: 6, scope: !5911)
!5935 = !DILocation(line: 3955, column: 9, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 3955, column: 8)
!5937 = !DILocation(line: 3955, column: 8, scope: !5913)
!5938 = !DILocation(line: 3957, column: 13, scope: !5936)
!5939 = !DILocation(line: 3960, column: 19, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 3957, column: 13)
!5941 = !DILocation(line: 3964, column: 3, scope: !5901)
!5942 = distinct !DISubprogram(name: "ds_max_merge", scope: !3, file: !3, line: 3970, type: !5841, scopeLine: 3971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5943)
!5943 = !{!5944, !5945}
!5944 = !DILocalVariable(name: "ds1", arg: 1, scope: !5942, file: !3, line: 3970, type: !618)
!5945 = !DILocalVariable(name: "ds2", arg: 2, scope: !5942, file: !3, line: 3970, type: !618)
!5946 = !DILocation(line: 0, scope: !5942)
!5947 = !DILocation(line: 3972, column: 16, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 3972, column: 7)
!5949 = !DILocation(line: 3975, column: 11, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 3975, column: 7)
!5951 = !DILocation(line: 3975, column: 23, scope: !5950)
!5952 = !DILocation(line: 3975, column: 16, scope: !5950)
!5953 = !DILocation(line: 3978, column: 11, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 3978, column: 7)
!5955 = !DILocation(line: 3978, column: 23, scope: !5954)
!5956 = !DILocation(line: 3978, column: 16, scope: !5954)
!5957 = !DILocation(line: 3981, column: 10, scope: !5942)
!5958 = !DILocation(line: 3981, column: 3, scope: !5942)
!5959 = !DILocation(line: 3982, column: 1, scope: !5942)
!5960 = distinct !DISubprogram(name: "ds_weak", scope: !3, file: !3, line: 3987, type: !5961, scopeLine: 3988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5963)
!5961 = !DISubroutineType(types: !5962)
!5962 = !{!1803, !618}
!5963 = !{!5964, !5965, !5966, !5967}
!5964 = !DILocalVariable(name: "ds", arg: 1, scope: !5960, file: !3, line: 3987, type: !618)
!5965 = !DILocalVariable(name: "res", scope: !5960, file: !3, line: 3989, type: !618)
!5966 = !DILocalVariable(name: "dt", scope: !5960, file: !3, line: 3989, type: !618)
!5967 = !DILocalVariable(name: "n", scope: !5960, file: !3, line: 3990, type: !611)
!5968 = !DILocation(line: 0, scope: !5960)
!5969 = !DILocation(line: 3993, column: 3, scope: !5960)
!5970 = !DILocation(line: 3995, column: 14, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 3995, column: 11)
!5972 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3994, column: 5)
!5973 = !DILocation(line: 3995, column: 11, scope: !5972)
!5974 = !DILocation(line: 3997, column: 18, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 3996, column: 2)
!5976 = !DILocation(line: 3997, column: 8, scope: !5975)
!5977 = !DILocation(line: 3998, column: 5, scope: !5975)
!5978 = !DILocation(line: 3999, column: 2, scope: !5975)
!5979 = !DILocation(line: 4001, column: 14, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 4001, column: 11)
!5981 = !DILocation(line: 4001, column: 11, scope: !5972)
!5982 = !DILocation(line: 4003, column: 10, scope: !5972)
!5983 = !DILocation(line: 4004, column: 5, scope: !5972)
!5984 = !DILocation(line: 4007, column: 3, scope: !5960)
!5985 = !DILocation(line: 4008, column: 3, scope: !5960)
!5986 = !DILocation(line: 4008, column: 10, scope: !5960)
!5987 = !DILocation(line: 4009, column: 9, scope: !5960)
!5988 = distinct !{!5988, !5985, !5989}
!5989 = !DILocation(line: 4009, column: 12, scope: !5960)
!5990 = !DILocation(line: 4011, column: 7, scope: !5960)
!5991 = !DILocation(line: 4014, column: 3, scope: !5960)
!5992 = !DILocation(line: 4016, column: 3, scope: !5960)
!5993 = distinct !DISubprogram(name: "ds_get_speculation_types", scope: !3, file: !3, line: 4021, type: !5994, scopeLine: 4022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5996)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{!618, !618}
!5996 = !{!5997}
!5997 = !DILocalVariable(name: "ds", arg: 1, scope: !5993, file: !3, line: 4021, type: !618)
!5998 = !DILocation(line: 0, scope: !5993)
!5999 = !DILocation(line: 4023, column: 10, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 4023, column: 7)
!6001 = !DILocation(line: 4024, column: 8, scope: !6000)
!6002 = !DILocation(line: 4023, column: 7, scope: !5993)
!6003 = !DILocation(line: 4025, column: 10, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 4025, column: 7)
!6005 = !DILocation(line: 4025, column: 7, scope: !5993)
!6006 = !DILocation(line: 4027, column: 10, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 4027, column: 7)
!6008 = !DILocation(line: 4028, column: 8, scope: !6007)
!6009 = !DILocation(line: 4027, column: 7, scope: !5993)
!6010 = !DILocation(line: 4029, column: 10, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 4029, column: 7)
!6012 = !DILocation(line: 4029, column: 7, scope: !5993)
!6013 = !DILocation(line: 4032, column: 13, scope: !5993)
!6014 = !DILocation(line: 4032, column: 3, scope: !5993)
!6015 = distinct !DISubprogram(name: "ds_get_max_dep_weak", scope: !3, file: !3, line: 4038, type: !5994, scopeLine: 4039, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6016)
!6016 = !{!6017}
!6017 = !DILocalVariable(name: "ds", arg: 1, scope: !6015, file: !3, line: 4038, type: !618)
!6018 = !DILocation(line: 0, scope: !6015)
!6019 = !DILocation(line: 4040, column: 10, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 4040, column: 7)
!6021 = !DILocation(line: 4040, column: 7, scope: !6015)
!6022 = !DILocation(line: 4041, column: 10, scope: !6020)
!6023 = !DILocation(line: 4041, column: 5, scope: !6020)
!6024 = !DILocation(line: 4042, column: 10, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 4042, column: 7)
!6026 = !DILocation(line: 4042, column: 7, scope: !6015)
!6027 = !DILocation(line: 4043, column: 10, scope: !6025)
!6028 = !DILocation(line: 4043, column: 5, scope: !6025)
!6029 = !DILocation(line: 4044, column: 10, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 4044, column: 7)
!6031 = !DILocation(line: 4044, column: 7, scope: !6015)
!6032 = !DILocation(line: 4045, column: 10, scope: !6030)
!6033 = !DILocation(line: 4045, column: 5, scope: !6030)
!6034 = !DILocation(line: 4046, column: 10, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 4046, column: 7)
!6036 = !DILocation(line: 4046, column: 7, scope: !6015)
!6037 = !DILocation(line: 4047, column: 10, scope: !6035)
!6038 = !DILocation(line: 4047, column: 5, scope: !6035)
!6039 = !DILocation(line: 4049, column: 3, scope: !6015)
!6040 = distinct !DISubprogram(name: "debug_ds", scope: !3, file: !3, line: 4081, type: !6041, scopeLine: 4082, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6043)
!6041 = !DISubroutineType(types: !6042)
!6042 = !{null, !618}
!6043 = !{!6044}
!6044 = !DILocalVariable(name: "s", arg: 1, scope: !6040, file: !3, line: 4081, type: !618)
!6045 = !DILocation(line: 0, scope: !6040)
!6046 = !DILocation(line: 4083, column: 12, scope: !6040)
!6047 = !DILocation(line: 4083, column: 3, scope: !6040)
!6048 = !DILocation(line: 4084, column: 12, scope: !6040)
!6049 = !DILocation(line: 4084, column: 3, scope: !6040)
!6050 = !DILocation(line: 4085, column: 1, scope: !6040)
!6051 = distinct !DISubprogram(name: "dump_ds", scope: !3, file: !3, line: 4054, type: !6052, scopeLine: 4055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6054)
!6052 = !DISubroutineType(types: !6053)
!6053 = !{null, !2038, !618}
!6054 = !{!6055, !6056}
!6055 = !DILocalVariable(name: "f", arg: 1, scope: !6051, file: !3, line: 4054, type: !2038)
!6056 = !DILocalVariable(name: "s", arg: 2, scope: !6051, file: !3, line: 4054, type: !618)
!6057 = !DILocation(line: 0, scope: !6051)
!6058 = !DILocation(line: 4056, column: 3, scope: !6051)
!6059 = !DILocation(line: 4058, column: 9, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 4058, column: 7)
!6061 = !DILocation(line: 4058, column: 7, scope: !6051)
!6062 = !DILocation(line: 4059, column: 37, scope: !6060)
!6063 = !DILocation(line: 4059, column: 5, scope: !6060)
!6064 = !DILocation(line: 4060, column: 9, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 4060, column: 7)
!6066 = !DILocation(line: 4060, column: 7, scope: !6051)
!6067 = !DILocation(line: 4061, column: 37, scope: !6065)
!6068 = !DILocation(line: 4061, column: 5, scope: !6065)
!6069 = !DILocation(line: 4062, column: 9, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 4062, column: 7)
!6071 = !DILocation(line: 4062, column: 7, scope: !6051)
!6072 = !DILocation(line: 4063, column: 40, scope: !6070)
!6073 = !DILocation(line: 4063, column: 5, scope: !6070)
!6074 = !DILocation(line: 4064, column: 9, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 4064, column: 7)
!6076 = !DILocation(line: 4064, column: 7, scope: !6051)
!6077 = !DILocation(line: 4065, column: 40, scope: !6075)
!6078 = !DILocation(line: 4065, column: 5, scope: !6075)
!6079 = !DILocation(line: 4067, column: 9, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 4067, column: 7)
!6081 = !DILocation(line: 4067, column: 7, scope: !6051)
!6082 = !DILocation(line: 4068, column: 5, scope: !6080)
!6083 = !DILocation(line: 4070, column: 9, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 4070, column: 7)
!6085 = !DILocation(line: 4070, column: 7, scope: !6051)
!6086 = !DILocation(line: 4071, column: 5, scope: !6084)
!6087 = !DILocation(line: 4072, column: 9, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 4072, column: 7)
!6089 = !DILocation(line: 4072, column: 7, scope: !6051)
!6090 = !DILocation(line: 4073, column: 5, scope: !6088)
!6091 = !DILocation(line: 4074, column: 9, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 4074, column: 7)
!6093 = !DILocation(line: 4074, column: 7, scope: !6051)
!6094 = !DILocation(line: 4075, column: 5, scope: !6092)
!6095 = !DILocation(line: 4077, column: 3, scope: !6051)
!6096 = !DILocation(line: 4078, column: 1, scope: !6051)
!6097 = distinct !DISubprogram(name: "attach_dep_link", scope: !3, file: !3, line: 231, type: !6098, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6100)
!6098 = !DISubroutineType(types: !6099)
!6099 = !{null, !1809, !1977}
!6100 = !{!6101, !6102, !6103}
!6101 = !DILocalVariable(name: "l", arg: 1, scope: !6097, file: !3, line: 231, type: !1809)
!6102 = !DILocalVariable(name: "prev_nextp", arg: 2, scope: !6097, file: !3, line: 231, type: !1977)
!6103 = !DILocalVariable(name: "next", scope: !6097, file: !3, line: 233, type: !1809)
!6104 = !DILocation(line: 0, scope: !6097)
!6105 = !DILocation(line: 233, column: 21, scope: !6097)
!6106 = !DILocation(line: 235, column: 3, scope: !6097)
!6107 = !DILocation(line: 239, column: 27, scope: !6097)
!6108 = !DILocation(line: 240, column: 3, scope: !6097)
!6109 = !DILocation(line: 240, column: 21, scope: !6097)
!6110 = !DILocation(line: 243, column: 12, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 243, column: 7)
!6112 = !DILocation(line: 243, column: 7, scope: !6097)
!6113 = !DILocation(line: 245, column: 7, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6111, file: !3, line: 244, column: 5)
!6115 = !DILocation(line: 247, column: 34, scope: !6114)
!6116 = !DILocation(line: 248, column: 5, scope: !6114)
!6117 = !DILocation(line: 251, column: 15, scope: !6097)
!6118 = !DILocation(line: 252, column: 1, scope: !6097)
!6119 = distinct !DISubprogram(name: "depl_on_debug_p", scope: !3, file: !3, line: 219, type: !6120, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6122)
!6120 = !DISubroutineType(types: !6121)
!6121 = !{!610, !1809}
!6122 = !{!6123}
!6123 = !DILocalVariable(name: "dep", arg: 1, scope: !6119, file: !3, line: 219, type: !1809)
!6124 = !DILocation(line: 0, scope: !6119)
!6125 = !DILocation(line: 221, column: 11, scope: !6119)
!6126 = !DILocation(line: 222, column: 4, scope: !6119)
!6127 = !DILocation(line: 222, column: 8, scope: !6119)
!6128 = !DILocation(line: 221, column: 3, scope: !6119)
!6129 = distinct !DISubprogram(name: "ask_dependency_caches", scope: !3, file: !3, line: 872, type: !6130, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6132)
!6130 = !DISubroutineType(types: !6131)
!6131 = !{!561, !2485}
!6132 = !{!6133, !6134, !6135, !6136, !6139}
!6133 = !DILocalVariable(name: "dep", arg: 1, scope: !6129, file: !3, line: 872, type: !2485)
!6134 = !DILocalVariable(name: "elem_luid", scope: !6129, file: !3, line: 874, type: !611)
!6135 = !DILocalVariable(name: "insn_luid", scope: !6129, file: !3, line: 875, type: !611)
!6136 = !DILocalVariable(name: "present_dep_type", scope: !6137, file: !3, line: 883, type: !384)
!6137 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 882, column: 5)
!6138 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 881, column: 7)
!6139 = !DILocalVariable(name: "present_dep_types", scope: !6140, file: !3, line: 901, type: !618)
!6140 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 900, column: 5)
!6141 = !DILocation(line: 0, scope: !6129)
!6142 = !DILocation(line: 874, column: 19, scope: !6129)
!6143 = !DILocation(line: 875, column: 19, scope: !6129)
!6144 = !DILocation(line: 877, column: 3, scope: !6129)
!6145 = !DILocation(line: 0, scope: !6138)
!6146 = !DILocation(line: 881, column: 9, scope: !6138)
!6147 = !DILocation(line: 881, column: 29, scope: !6138)
!6148 = !DILocation(line: 881, column: 35, scope: !6138)
!6149 = !DILocation(line: 881, column: 7, scope: !6129)
!6150 = !DILocation(line: 885, column: 11, scope: !6137)
!6151 = !DILocation(line: 887, column: 31, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 887, column: 16)
!6153 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 885, column: 11)
!6154 = !DILocation(line: 887, column: 16, scope: !6152)
!6155 = !DILocation(line: 887, column: 16, scope: !6153)
!6156 = !DILocation(line: 889, column: 31, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 889, column: 16)
!6158 = !DILocation(line: 889, column: 16, scope: !6157)
!6159 = !DILocation(line: 889, column: 16, scope: !6152)
!6160 = !DILocation(line: 0, scope: !6153)
!6161 = !DILocation(line: 0, scope: !6137)
!6162 = !DILocation(line: 895, column: 17, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 895, column: 11)
!6164 = !DILocation(line: 895, column: 32, scope: !6163)
!6165 = !DILocation(line: 0, scope: !6140)
!6166 = !DILocation(line: 903, column: 11, scope: !6140)
!6167 = !DILocation(line: 905, column: 26, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 905, column: 11)
!6169 = !DILocation(line: 905, column: 11, scope: !6168)
!6170 = !DILocation(line: 905, column: 11, scope: !6140)
!6171 = !DILocation(line: 907, column: 26, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 907, column: 11)
!6173 = !DILocation(line: 907, column: 11, scope: !6172)
!6174 = !DILocation(line: 908, column: 20, scope: !6172)
!6175 = !DILocation(line: 907, column: 11, scope: !6140)
!6176 = !DILocation(line: 910, column: 29, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 910, column: 11)
!6178 = !DILocation(line: 910, column: 11, scope: !6140)
!6179 = !DILocation(line: 914, column: 13, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 914, column: 11)
!6181 = !DILocation(line: 914, column: 33, scope: !6180)
!6182 = !DILocation(line: 914, column: 39, scope: !6180)
!6183 = !DILocation(line: 915, column: 4, scope: !6180)
!6184 = !DILocation(line: 915, column: 23, scope: !6180)
!6185 = !DILocation(line: 915, column: 8, scope: !6180)
!6186 = !DILocation(line: 914, column: 11, scope: !6140)
!6187 = !DILocation(line: 917, column: 30, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 917, column: 8)
!6189 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 916, column: 2)
!6190 = !DILocation(line: 917, column: 47, scope: !6188)
!6191 = !DILocation(line: 917, column: 27, scope: !6188)
!6192 = !DILocation(line: 918, column: 8, scope: !6188)
!6193 = !DILocation(line: 917, column: 8, scope: !6189)
!6194 = !DILocation(line: 926, column: 4, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 923, column: 2)
!6196 = !DILocation(line: 934, column: 5, scope: !6138)
!6197 = !DILocation(line: 936, column: 3, scope: !6129)
!6198 = !DILocation(line: 937, column: 1, scope: !6129)
!6199 = distinct !DISubprogram(name: "update_dep", scope: !3, file: !3, line: 1040, type: !6200, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6202)
!6200 = !DISubroutineType(types: !6201)
!6201 = !{!561, !2485, !2485, !1970, !644, !644}
!6202 = !{!6203, !6204, !6205, !6206, !6207, !6208, !6209, !6210, !6213, !6214, !6215}
!6203 = !DILocalVariable(name: "dep", arg: 1, scope: !6199, file: !3, line: 1040, type: !2485)
!6204 = !DILocalVariable(name: "new_dep", arg: 2, scope: !6199, file: !3, line: 1040, type: !2485)
!6205 = !DILocalVariable(name: "sd_it", arg: 3, scope: !6199, file: !3, line: 1041, type: !1970)
!6206 = !DILocalVariable(name: "mem1", arg: 4, scope: !6199, file: !3, line: 1042, type: !644)
!6207 = !DILocalVariable(name: "mem2", arg: 5, scope: !6199, file: !3, line: 1043, type: !644)
!6208 = !DILocalVariable(name: "res", scope: !6199, file: !3, line: 1045, type: !561)
!6209 = !DILocalVariable(name: "old_type", scope: !6199, file: !3, line: 1046, type: !384)
!6210 = !DILocalVariable(name: "dep_status", scope: !6211, file: !3, line: 1060, type: !618)
!6211 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 1059, column: 5)
!6212 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 1057, column: 7)
!6213 = !DILocalVariable(name: "ds", scope: !6211, file: !3, line: 1061, type: !618)
!6214 = !DILocalVariable(name: "new_status", scope: !6211, file: !3, line: 1062, type: !618)
!6215 = !DILocalVariable(name: "dw", scope: !6216, file: !3, line: 1084, type: !1803)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 1083, column: 3)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 1082, column: 12)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 1080, column: 6)
!6219 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 1068, column: 8)
!6220 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1067, column: 2)
!6221 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 1064, column: 11)
!6222 = !DILocation(line: 0, scope: !6199)
!6223 = !DILocation(line: 1041, column: 22, scope: !6199)
!6224 = !DILocation(line: 1046, column: 28, scope: !6199)
!6225 = !DILocation(line: 1051, column: 13, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 1051, column: 7)
!6227 = !DILocation(line: 1051, column: 32, scope: !6226)
!6228 = !DILocation(line: 1051, column: 7, scope: !6199)
!6229 = !DILocation(line: 1053, column: 22, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 1052, column: 5)
!6231 = !DILocation(line: 1055, column: 5, scope: !6230)
!6232 = !DILocation(line: 1057, column: 7, scope: !6212)
!6233 = !DILocation(line: 1057, column: 27, scope: !6212)
!6234 = !DILocation(line: 1057, column: 33, scope: !6212)
!6235 = !DILocation(line: 1057, column: 7, scope: !6199)
!6236 = !DILocation(line: 1060, column: 25, scope: !6211)
!6237 = !DILocation(line: 0, scope: !6211)
!6238 = !DILocation(line: 1061, column: 17, scope: !6211)
!6239 = !DILocation(line: 1062, column: 28, scope: !6211)
!6240 = !DILocation(line: 1064, column: 22, scope: !6221)
!6241 = !DILocation(line: 1064, column: 11, scope: !6211)
!6242 = !DILocation(line: 1068, column: 13, scope: !6219)
!6243 = !DILocation(line: 1069, column: 24, scope: !6219)
!6244 = !DILocation(line: 1069, column: 8, scope: !6219)
!6245 = !DILocation(line: 1072, column: 19, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 1071, column: 6)
!6247 = !DILocation(line: 1074, column: 23, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 1074, column: 12)
!6249 = !DILocation(line: 1074, column: 12, scope: !6246)
!6250 = !DILocation(line: 1077, column: 3, scope: !6248)
!6251 = !DILocation(line: 1082, column: 17, scope: !6217)
!6252 = !DILocation(line: 1082, column: 12, scope: !6218)
!6253 = !DILocation(line: 1086, column: 10, scope: !6216)
!6254 = !DILocation(line: 0, scope: !6216)
!6255 = !DILocation(line: 1087, column: 10, scope: !6216)
!6256 = !DILocation(line: 1088, column: 3, scope: !6216)
!6257 = !DILocation(line: 1090, column: 21, scope: !6218)
!6258 = !DILocation(line: 1096, column: 22, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 1096, column: 11)
!6260 = !DILocation(line: 1096, column: 11, scope: !6211)
!6261 = !DILocation(line: 1098, column: 21, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 1097, column: 2)
!6263 = !DILocation(line: 1100, column: 2, scope: !6262)
!6264 = !DILocation(line: 1103, column: 7, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 1103, column: 7)
!6266 = !DILocation(line: 1103, column: 29, scope: !6265)
!6267 = !DILocation(line: 1104, column: 14, scope: !6265)
!6268 = !DILocation(line: 1104, column: 7, scope: !6265)
!6269 = !DILocation(line: 1105, column: 5, scope: !6265)
!6270 = !DILocation(line: 1107, column: 3, scope: !6199)
!6271 = distinct !DISubprogram(name: "change_spec_dep_to_hard", scope: !3, file: !3, line: 1017, type: !3384, scopeLine: 1018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6272)
!6272 = !{!6273, !6274, !6275, !6276, !6277, !6278}
!6273 = !DILocalVariable(name: "sd_it", arg: 1, scope: !6271, file: !3, line: 1017, type: !1970)
!6274 = !DILocalVariable(name: "node", scope: !6271, file: !3, line: 1019, type: !1814)
!6275 = !DILocalVariable(name: "link", scope: !6271, file: !3, line: 1020, type: !1809)
!6276 = !DILocalVariable(name: "dep", scope: !6271, file: !3, line: 1021, type: !2485)
!6277 = !DILocalVariable(name: "elem", scope: !6271, file: !3, line: 1022, type: !644)
!6278 = !DILocalVariable(name: "insn", scope: !6271, file: !3, line: 1023, type: !644)
!6279 = !DILocation(line: 1017, column: 42, scope: !6271)
!6280 = !DILocation(line: 1019, column: 21, scope: !6271)
!6281 = !DILocation(line: 0, scope: !6271)
!6282 = !DILocation(line: 1020, column: 21, scope: !6271)
!6283 = !DILocation(line: 1022, column: 14, scope: !6271)
!6284 = !DILocation(line: 1023, column: 14, scope: !6271)
!6285 = !DILocation(line: 1025, column: 24, scope: !6271)
!6286 = !DILocation(line: 1025, column: 52, scope: !6271)
!6287 = !DILocation(line: 1025, column: 3, scope: !6271)
!6288 = !DILocation(line: 1027, column: 3, scope: !6271)
!6289 = !DILocation(line: 1027, column: 20, scope: !6271)
!6290 = !DILocation(line: 1029, column: 7, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 1029, column: 7)
!6292 = !DILocation(line: 1029, column: 29, scope: !6291)
!6293 = !DILocation(line: 1029, column: 7, scope: !6271)
!6294 = !DILocation(line: 1031, column: 24, scope: !6291)
!6295 = !DILocation(line: 1031, column: 46, scope: !6291)
!6296 = !DILocation(line: 1032, column: 9, scope: !6291)
!6297 = !DILocation(line: 1031, column: 5, scope: !6291)
!6298 = !DILocation(line: 1033, column: 1, scope: !6271)
!6299 = distinct !DISubprogram(name: "update_dependency_caches", scope: !3, file: !3, line: 988, type: !6300, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6302)
!6300 = !DISubroutineType(types: !6301)
!6301 = !{null, !2485, !384}
!6302 = !{!6303, !6304, !6305, !6306}
!6303 = !DILocalVariable(name: "dep", arg: 1, scope: !6299, file: !3, line: 988, type: !2485)
!6304 = !DILocalVariable(name: "old_type", arg: 2, scope: !6299, file: !3, line: 988, type: !384)
!6305 = !DILocalVariable(name: "elem_luid", scope: !6299, file: !3, line: 990, type: !611)
!6306 = !DILocalVariable(name: "insn_luid", scope: !6299, file: !3, line: 991, type: !611)
!6307 = !DILocation(line: 0, scope: !6299)
!6308 = !DILocation(line: 990, column: 19, scope: !6299)
!6309 = !DILocation(line: 991, column: 19, scope: !6299)
!6310 = !DILocation(line: 995, column: 9, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 995, column: 7)
!6312 = !DILocation(line: 995, column: 29, scope: !6311)
!6313 = !DILocation(line: 995, column: 35, scope: !6311)
!6314 = !DILocation(line: 995, column: 7, scope: !6299)
!6315 = !DILocation(line: 997, column: 7, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 996, column: 5)
!6317 = !DILocation(line: 1000, column: 23, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 998, column: 2)
!6319 = !DILocation(line: 1000, column: 4, scope: !6318)
!6320 = !DILocation(line: 1001, column: 4, scope: !6318)
!6321 = !DILocation(line: 1004, column: 23, scope: !6318)
!6322 = !DILocation(line: 1004, column: 4, scope: !6318)
!6323 = !DILocation(line: 1005, column: 4, scope: !6318)
!6324 = !DILocation(line: 1008, column: 4, scope: !6318)
!6325 = !DILocation(line: 1009, column: 2, scope: !6318)
!6326 = !DILocation(line: 1012, column: 3, scope: !6299)
!6327 = !DILocation(line: 1013, column: 1, scope: !6299)
!6328 = distinct !DISubprogram(name: "detach_dep_link", scope: !3, file: !3, line: 267, type: !6329, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6331)
!6329 = !DISubroutineType(types: !6330)
!6330 = !{null, !1809}
!6331 = !{!6332, !6333, !6334}
!6332 = !DILocalVariable(name: "l", arg: 1, scope: !6328, file: !3, line: 267, type: !1809)
!6333 = !DILocalVariable(name: "prev_nextp", scope: !6328, file: !3, line: 269, type: !1977)
!6334 = !DILocalVariable(name: "next", scope: !6328, file: !3, line: 270, type: !1809)
!6335 = !DILocation(line: 0, scope: !6328)
!6336 = !DILocation(line: 269, column: 28, scope: !6328)
!6337 = !DILocation(line: 270, column: 21, scope: !6328)
!6338 = !DILocation(line: 272, column: 15, scope: !6328)
!6339 = !DILocation(line: 274, column: 12, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 274, column: 7)
!6341 = !DILocation(line: 274, column: 7, scope: !6328)
!6342 = !DILocation(line: 275, column: 5, scope: !6340)
!6343 = !DILocation(line: 275, column: 32, scope: !6340)
!6344 = !DILocation(line: 277, column: 27, scope: !6328)
!6345 = !DILocation(line: 278, column: 21, scope: !6328)
!6346 = !DILocation(line: 279, column: 1, scope: !6328)
!6347 = distinct !DISubprogram(name: "dep_link_is_detached_p", scope: !3, file: !3, line: 302, type: !6120, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6348)
!6348 = !{!6349}
!6349 = !DILocalVariable(name: "link", arg: 1, scope: !6347, file: !3, line: 302, type: !1809)
!6350 = !DILocation(line: 0, scope: !6347)
!6351 = !DILocation(line: 304, column: 10, scope: !6347)
!6352 = !DILocation(line: 304, column: 37, scope: !6347)
!6353 = !DILocation(line: 304, column: 3, scope: !6347)
!6354 = distinct !DISubprogram(name: "add_dependence_list", scope: !3, file: !3, line: 1392, type: !6355, scopeLine: 1393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6357)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{null, !644, !644, !611, !384}
!6357 = !{!6358, !6359, !6360, !6361}
!6358 = !DILocalVariable(name: "insn", arg: 1, scope: !6354, file: !3, line: 1392, type: !644)
!6359 = !DILocalVariable(name: "list", arg: 2, scope: !6354, file: !3, line: 1392, type: !644)
!6360 = !DILocalVariable(name: "uncond", arg: 3, scope: !6354, file: !3, line: 1392, type: !611)
!6361 = !DILocalVariable(name: "dep_type", arg: 4, scope: !6354, file: !3, line: 1392, type: !384)
!6362 = !DILocation(line: 0, scope: !6354)
!6363 = !DILocation(line: 0, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 1396, column: 11)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 1395, column: 5)
!6366 = distinct !DILexicalBlock(scope: !6367, file: !3, line: 1394, column: 3)
!6367 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 1394, column: 3)
!6368 = !DILocation(line: 1394, column: 3, scope: !6354)
!6369 = !DILocation(line: 1394, column: 3, scope: !6367)
!6370 = !DILocation(line: 1396, column: 61, scope: !6364)
!6371 = !DILocation(line: 1396, column: 23, scope: !6364)
!6372 = !DILocation(line: 1396, column: 11, scope: !6365)
!6373 = !DILocation(line: 1397, column: 24, scope: !6364)
!6374 = !DILocation(line: 1397, column: 2, scope: !6364)
!6375 = !DILocation(line: 1394, column: 23, scope: !6366)
!6376 = !DILocation(line: 1394, column: 3, scope: !6366)
!6377 = distinct !{!6377, !6369, !6378}
!6378 = !DILocation(line: 1398, column: 5, scope: !6367)
!6379 = !DILocation(line: 1399, column: 1, scope: !6354)
!6380 = distinct !DISubprogram(name: "sched_analyze_2", scope: !3, file: !3, line: 2361, type: !3912, scopeLine: 2362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6381)
!6381 = !{!6382, !6383, !6384, !6385, !6386, !6387, !6388, !6389, !6390, !6393, !6394, !6396, !6397, !6398, !6399, !6402}
!6382 = !DILocalVariable(name: "deps", arg: 1, scope: !6380, file: !3, line: 2361, type: !3700)
!6383 = !DILocalVariable(name: "x", arg: 2, scope: !6380, file: !3, line: 2361, type: !644)
!6384 = !DILocalVariable(name: "insn", arg: 3, scope: !6380, file: !3, line: 2361, type: !644)
!6385 = !DILocalVariable(name: "i", scope: !6380, file: !3, line: 2363, type: !611)
!6386 = !DILocalVariable(name: "j", scope: !6380, file: !3, line: 2364, type: !611)
!6387 = !DILocalVariable(name: "code", scope: !6380, file: !3, line: 2365, type: !419)
!6388 = !DILocalVariable(name: "fmt", scope: !6380, file: !3, line: 2366, type: !616)
!6389 = !DILocalVariable(name: "cslr_p", scope: !6380, file: !3, line: 2367, type: !610)
!6390 = !DILocalVariable(name: "regno", scope: !6391, file: !3, line: 2411, type: !611)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2410, column: 7)
!6392 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 2381, column: 5)
!6393 = !DILocalVariable(name: "mode", scope: !6391, file: !3, line: 2412, type: !5)
!6394 = !DILocalVariable(name: "u", scope: !6395, file: !3, line: 2436, type: !644)
!6395 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2434, column: 7)
!6396 = !DILocalVariable(name: "pending", scope: !6395, file: !3, line: 2437, type: !644)
!6397 = !DILocalVariable(name: "pending_mem", scope: !6395, file: !3, line: 2437, type: !644)
!6398 = !DILocalVariable(name: "t", scope: !6395, file: !3, line: 2438, type: !644)
!6399 = !DILocalVariable(name: "address_mode", scope: !6400, file: !3, line: 2442, type: !5)
!6400 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2441, column: 4)
!6401 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 2440, column: 6)
!6402 = !DILocalVariable(name: "ds", scope: !6403, file: !3, line: 2492, type: !618)
!6403 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 2491, column: 9)
!6404 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 2489, column: 11)
!6405 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 2488, column: 5)
!6406 = distinct !DILexicalBlock(scope: !6407, file: !3, line: 2487, column: 12)
!6407 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 2485, column: 7)
!6408 = distinct !DILexicalBlock(scope: !6409, file: !3, line: 2484, column: 8)
!6409 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 2483, column: 6)
!6410 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2483, column: 6)
!6411 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 2451, column: 4)
!6412 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 2450, column: 6)
!6413 = !DILocation(line: 0, scope: !6380)
!6414 = !DILocation(line: 2367, column: 17, scope: !6380)
!6415 = !DILocation(line: 2369, column: 23, scope: !6380)
!6416 = !DILocation(line: 2371, column: 3, scope: !6380)
!6417 = !DILocation(line: 2372, column: 7, scope: !6380)
!6418 = !DILocation(line: 2375, column: 7, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 2375, column: 7)
!6420 = !DILocation(line: 2375, column: 14, scope: !6419)
!6421 = !DILocation(line: 2375, column: 17, scope: !6419)
!6422 = !DILocation(line: 2375, column: 34, scope: !6419)
!6423 = !DILocation(line: 2375, column: 7, scope: !6380)
!6424 = !DILocation(line: 2376, column: 5, scope: !6419)
!6425 = !DILocation(line: 2378, column: 10, scope: !6380)
!6426 = !DILocation(line: 2380, column: 3, scope: !6380)
!6427 = !DILocation(line: 2390, column: 18, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2390, column: 11)
!6429 = !DILocation(line: 2390, column: 21, scope: !6428)
!6430 = !DILocation(line: 2390, column: 38, scope: !6428)
!6431 = !DILocation(line: 2390, column: 11, scope: !6392)
!6432 = !DILocation(line: 2391, column: 2, scope: !6428)
!6433 = !DILocation(line: 2411, column: 14, scope: !6391)
!6434 = !DILocation(line: 0, scope: !6391)
!6435 = !DILocation(line: 2412, column: 27, scope: !6391)
!6436 = !DILocation(line: 2414, column: 2, scope: !6391)
!6437 = !DILocation(line: 2418, column: 36, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2418, column: 11)
!6439 = !DILocation(line: 2421, column: 14, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 2421, column: 8)
!6441 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 2419, column: 2)
!6442 = !DILocation(line: 2421, column: 8, scope: !6441)
!6443 = !DILocation(line: 2422, column: 6, scope: !6440)
!6444 = !DILocation(line: 2423, column: 4, scope: !6441)
!6445 = !DILocation(line: 2424, column: 2, scope: !6441)
!6446 = !DILocation(line: 2427, column: 13, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2427, column: 6)
!6448 = !DILocation(line: 2427, column: 16, scope: !6447)
!6449 = !DILocation(line: 2427, column: 33, scope: !6447)
!6450 = !DILocation(line: 2427, column: 6, scope: !6391)
!6451 = !DILocation(line: 2428, column: 4, scope: !6447)
!6452 = !DILocation(line: 0, scope: !6395)
!6453 = !DILocation(line: 2440, column: 6, scope: !6401)
!6454 = !DILocation(line: 2440, column: 23, scope: !6401)
!6455 = !DILocation(line: 2440, column: 6, scope: !6395)
!6456 = !DILocation(line: 2443, column: 29, scope: !6400)
!6457 = !DILocation(line: 2443, column: 43, scope: !6400)
!6458 = !DILocation(line: 2443, column: 10, scope: !6400)
!6459 = !DILocation(line: 0, scope: !6400)
!6460 = !DILocation(line: 2445, column: 10, scope: !6400)
!6461 = !DILocation(line: 2446, column: 31, scope: !6400)
!6462 = !DILocation(line: 2446, column: 6, scope: !6400)
!6463 = !DILocation(line: 2447, column: 44, scope: !6400)
!6464 = !DILocation(line: 2447, column: 20, scope: !6400)
!6465 = !DILocation(line: 2447, column: 18, scope: !6400)
!6466 = !DILocation(line: 2448, column: 4, scope: !6400)
!6467 = !DILocation(line: 2450, column: 7, scope: !6412)
!6468 = !DILocation(line: 2450, column: 6, scope: !6395)
!6469 = !DILocation(line: 2452, column: 10, scope: !6411)
!6470 = !DILocation(line: 2453, column: 22, scope: !6411)
!6471 = !DILocation(line: 2454, column: 26, scope: !6411)
!6472 = !DILocation(line: 2455, column: 6, scope: !6411)
!6473 = !DILocation(line: 0, scope: !6411)
!6474 = !DILocation(line: 2457, column: 24, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 2457, column: 7)
!6476 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2456, column: 8)
!6477 = !DILocation(line: 2457, column: 7, scope: !6475)
!6478 = !DILocation(line: 2458, column: 7, scope: !6475)
!6479 = !DILocation(line: 2459, column: 9, scope: !6475)
!6480 = !DILocation(line: 2458, column: 12, scope: !6475)
!6481 = !DILocation(line: 2457, column: 7, scope: !6476)
!6482 = !DILocation(line: 2460, column: 22, scope: !6475)
!6483 = !DILocation(line: 2460, column: 45, scope: !6475)
!6484 = !DILocation(line: 2460, column: 5, scope: !6475)
!6485 = !DILocation(line: 2463, column: 13, scope: !6476)
!6486 = !DILocation(line: 2464, column: 17, scope: !6476)
!6487 = distinct !{!6487, !6472, !6488}
!6488 = !DILocation(line: 2465, column: 8, scope: !6411)
!6489 = !DILocation(line: 2467, column: 22, scope: !6411)
!6490 = !DILocation(line: 2468, column: 26, scope: !6411)
!6491 = !DILocation(line: 2469, column: 6, scope: !6411)
!6492 = !DILocation(line: 2471, column: 24, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 2471, column: 7)
!6494 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2470, column: 8)
!6495 = !DILocation(line: 2471, column: 7, scope: !6493)
!6496 = !DILocation(line: 2473, column: 7, scope: !6493)
!6497 = !DILocation(line: 2474, column: 9, scope: !6493)
!6498 = !DILocation(line: 2473, column: 12, scope: !6493)
!6499 = !DILocation(line: 2471, column: 7, scope: !6494)
!6500 = !DILocation(line: 2475, column: 22, scope: !6493)
!6501 = !DILocation(line: 2475, column: 45, scope: !6493)
!6502 = !DILocation(line: 2476, column: 5, scope: !6493)
!6503 = !DILocation(line: 2476, column: 22, scope: !6493)
!6504 = !DILocation(line: 2475, column: 5, scope: !6493)
!6505 = !DILocation(line: 2479, column: 13, scope: !6494)
!6506 = !DILocation(line: 2480, column: 17, scope: !6494)
!6507 = distinct !{!6507, !6491, !6508}
!6508 = !DILocation(line: 2481, column: 8, scope: !6411)
!6509 = !DILocation(line: 2483, column: 21, scope: !6410)
!6510 = !DILocation(line: 2483, column: 11, scope: !6410)
!6511 = !DILocation(line: 0, scope: !6410)
!6512 = !DILocation(line: 2483, column: 6, scope: !6410)
!6513 = !DILocation(line: 2485, column: 9, scope: !6407)
!6514 = !DILocation(line: 2485, column: 7, scope: !6408)
!6515 = !DILocation(line: 2486, column: 5, scope: !6407)
!6516 = !DILocation(line: 2487, column: 12, scope: !6406)
!6517 = !DILocation(line: 2487, column: 12, scope: !6407)
!6518 = !DILocation(line: 2489, column: 12, scope: !6404)
!6519 = !DILocation(line: 2489, column: 29, scope: !6404)
!6520 = !DILocation(line: 2489, column: 11, scope: !6404)
!6521 = !DILocation(line: 2490, column: 4, scope: !6404)
!6522 = !DILocation(line: 2490, column: 7, scope: !6404)
!6523 = !DILocation(line: 2490, column: 22, scope: !6404)
!6524 = !DILocation(line: 2490, column: 26, scope: !6404)
!6525 = !DILocation(line: 2490, column: 37, scope: !6404)
!6526 = !DILocation(line: 2490, column: 42, scope: !6404)
!6527 = !DILocation(line: 2489, column: 11, scope: !6405)
!6528 = !DILocation(line: 2492, column: 14, scope: !6403)
!6529 = !DILocation(line: 0, scope: !6403)
!6530 = !DILocation(line: 2495, column: 14, scope: !6403)
!6531 = !DILocation(line: 2495, column: 4, scope: !6403)
!6532 = !DILocation(line: 2496, column: 9, scope: !6403)
!6533 = !DILocation(line: 2498, column: 31, scope: !6404)
!6534 = !DILocation(line: 2498, column: 9, scope: !6404)
!6535 = !DILocation(line: 2483, column: 55, scope: !6409)
!6536 = !DILocation(line: 2483, column: 6, scope: !6409)
!6537 = distinct !{!6537, !6512, !6538}
!6538 = !DILocation(line: 2500, column: 8, scope: !6410)
!6539 = !DILocation(line: 2505, column: 20, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 2505, column: 13)
!6541 = !DILocation(line: 2505, column: 14, scope: !6540)
!6542 = !DILocation(line: 2505, column: 13, scope: !6395)
!6543 = !DILocation(line: 2506, column: 11, scope: !6540)
!6544 = !DILocation(line: 2508, column: 25, scope: !6395)
!6545 = !DILocation(line: 2508, column: 2, scope: !6395)
!6546 = !DILocation(line: 2510, column: 13, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 2510, column: 6)
!6548 = !DILocation(line: 2510, column: 16, scope: !6547)
!6549 = !DILocation(line: 2510, column: 33, scope: !6547)
!6550 = !DILocation(line: 2510, column: 6, scope: !6395)
!6551 = !DILocation(line: 2511, column: 4, scope: !6547)
!6552 = !DILocation(line: 2518, column: 7, scope: !6392)
!6553 = !DILocation(line: 2519, column: 7, scope: !6392)
!6554 = !DILocation(line: 2522, column: 11, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2522, column: 11)
!6556 = !DILocation(line: 2522, column: 11, scope: !6392)
!6557 = !DILocation(line: 2523, column: 22, scope: !6555)
!6558 = !DILocation(line: 2523, column: 2, scope: !6555)
!6559 = !DILocation(line: 2527, column: 7, scope: !6392)
!6560 = !DILocation(line: 2540, column: 27, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 2540, column: 6)
!6562 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2532, column: 7)
!6563 = !DILocation(line: 2540, column: 30, scope: !6561)
!6564 = !DILocation(line: 2540, column: 6, scope: !6562)
!6565 = !DILocation(line: 2541, column: 24, scope: !6561)
!6566 = !DILocation(line: 2541, column: 4, scope: !6561)
!6567 = !DILocation(line: 2548, column: 11, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 2548, column: 6)
!6569 = !DILocation(line: 2548, column: 6, scope: !6562)
!6570 = !DILocation(line: 0, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 2550, column: 6)
!6572 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 2550, column: 6)
!6573 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 2549, column: 4)
!6574 = !DILocation(line: 2550, column: 6, scope: !6572)
!6575 = !DILocation(line: 0, scope: !6572)
!6576 = !DILocation(line: 2550, column: 22, scope: !6571)
!6577 = !DILocation(line: 2550, column: 20, scope: !6571)
!6578 = !DILocation(line: 2551, column: 31, scope: !6571)
!6579 = !DILocation(line: 2551, column: 8, scope: !6571)
!6580 = !DILocation(line: 2550, column: 54, scope: !6571)
!6581 = !DILocation(line: 2550, column: 6, scope: !6571)
!6582 = distinct !{!6582, !6574, !6583}
!6583 = !DILocation(line: 2551, column: 62, scope: !6572)
!6584 = !DILocation(line: 2553, column: 17, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 2553, column: 10)
!6586 = !DILocation(line: 2553, column: 20, scope: !6585)
!6587 = !DILocation(line: 2553, column: 37, scope: !6585)
!6588 = !DILocation(line: 2553, column: 10, scope: !6573)
!6589 = !DILocation(line: 2554, column: 8, scope: !6585)
!6590 = !DILocation(line: 2571, column: 30, scope: !6392)
!6591 = !DILocation(line: 2571, column: 7, scope: !6392)
!6592 = !DILocation(line: 2572, column: 7, scope: !6392)
!6593 = !DILocation(line: 2574, column: 18, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2574, column: 11)
!6595 = !DILocation(line: 2574, column: 21, scope: !6594)
!6596 = !DILocation(line: 2574, column: 38, scope: !6594)
!6597 = !DILocation(line: 2574, column: 11, scope: !6392)
!6598 = !DILocation(line: 2575, column: 2, scope: !6594)
!6599 = !DILocation(line: 2582, column: 30, scope: !6392)
!6600 = !DILocation(line: 2582, column: 7, scope: !6392)
!6601 = !DILocation(line: 2583, column: 30, scope: !6392)
!6602 = !DILocation(line: 2583, column: 7, scope: !6392)
!6603 = !DILocation(line: 2584, column: 7, scope: !6392)
!6604 = !DILocation(line: 2586, column: 18, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2586, column: 11)
!6606 = !DILocation(line: 2586, column: 21, scope: !6605)
!6607 = !DILocation(line: 2586, column: 38, scope: !6605)
!6608 = !DILocation(line: 2586, column: 11, scope: !6392)
!6609 = !DILocation(line: 2587, column: 2, scope: !6605)
!6610 = !DILocation(line: 2596, column: 9, scope: !6380)
!6611 = !DILocation(line: 2597, column: 12, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 2597, column: 3)
!6613 = !DILocation(line: 0, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 2602, column: 2)
!6615 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 2602, column: 2)
!6616 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 2601, column: 16)
!6617 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 2599, column: 11)
!6618 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 2598, column: 5)
!6619 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 2597, column: 3)
!6620 = !DILocation(line: 2597, column: 8, scope: !6612)
!6621 = !DILocation(line: 0, scope: !6612)
!6622 = !DILocation(line: 2597, column: 41, scope: !6619)
!6623 = !DILocation(line: 2597, column: 3, scope: !6612)
!6624 = !DILocation(line: 2599, column: 11, scope: !6617)
!6625 = !DILocation(line: 2599, column: 18, scope: !6617)
!6626 = !DILocation(line: 2599, column: 11, scope: !6618)
!6627 = !DILocation(line: 2600, column: 25, scope: !6617)
!6628 = !DILocation(line: 2600, column: 2, scope: !6617)
!6629 = !DILocation(line: 2601, column: 23, scope: !6616)
!6630 = !DILocation(line: 2601, column: 16, scope: !6617)
!6631 = !DILocation(line: 2602, column: 2, scope: !6615)
!6632 = !DILocation(line: 0, scope: !6615)
!6633 = !DILocation(line: 2602, column: 18, scope: !6614)
!6634 = !DILocation(line: 2602, column: 16, scope: !6614)
!6635 = !DILocation(line: 2603, column: 27, scope: !6614)
!6636 = !DILocation(line: 2603, column: 4, scope: !6614)
!6637 = !DILocation(line: 2602, column: 35, scope: !6614)
!6638 = !DILocation(line: 2602, column: 2, scope: !6614)
!6639 = distinct !{!6639, !6631, !6640}
!6640 = !DILocation(line: 2603, column: 50, scope: !6615)
!6641 = !DILocation(line: 2597, column: 3, scope: !6619)
!6642 = distinct !{!6642, !6623, !6643}
!6643 = !DILocation(line: 2604, column: 5, scope: !6612)
!6644 = !DILocation(line: 2606, column: 14, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 2606, column: 7)
!6646 = !DILocation(line: 2606, column: 17, scope: !6645)
!6647 = !DILocation(line: 2606, column: 34, scope: !6645)
!6648 = !DILocation(line: 2606, column: 7, scope: !6380)
!6649 = !DILocation(line: 2607, column: 5, scope: !6645)
!6650 = !DILocation(line: 2608, column: 1, scope: !6380)
!6651 = distinct !DISubprogram(name: "sched_analyze_1", scope: !3, file: !3, line: 2189, type: !3912, scopeLine: 2190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6652)
!6652 = !{!6653, !6654, !6655, !6656, !6657, !6658, !6659, !6662, !6665, !6666, !6669, !6672, !6675, !6678}
!6653 = !DILocalVariable(name: "deps", arg: 1, scope: !6651, file: !3, line: 2189, type: !3700)
!6654 = !DILocalVariable(name: "x", arg: 2, scope: !6651, file: !3, line: 2189, type: !644)
!6655 = !DILocalVariable(name: "insn", arg: 3, scope: !6651, file: !3, line: 2189, type: !644)
!6656 = !DILocalVariable(name: "dest", scope: !6651, file: !3, line: 2191, type: !644)
!6657 = !DILocalVariable(name: "code", scope: !6651, file: !3, line: 2192, type: !419)
!6658 = !DILocalVariable(name: "cslr_p", scope: !6651, file: !3, line: 2193, type: !610)
!6659 = !DILocalVariable(name: "i", scope: !6660, file: !3, line: 2206, type: !611)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 2205, column: 5)
!6661 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 2204, column: 7)
!6662 = !DILocalVariable(name: "regno", scope: !6663, file: !3, line: 2256, type: !611)
!6663 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 2255, column: 5)
!6664 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 2254, column: 7)
!6665 = !DILocalVariable(name: "mode", scope: !6663, file: !3, line: 2257, type: !5)
!6666 = !DILocalVariable(name: "nregs", scope: !6667, file: !3, line: 2265, type: !611)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 2264, column: 2)
!6668 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 2263, column: 11)
!6669 = !DILocalVariable(name: "t", scope: !6670, file: !3, line: 2281, type: !644)
!6670 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 2279, column: 5)
!6671 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 2278, column: 12)
!6672 = !DILocalVariable(name: "address_mode", scope: !6673, file: !3, line: 2285, type: !5)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 2284, column: 2)
!6674 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 2283, column: 11)
!6675 = !DILocalVariable(name: "pending", scope: !6676, file: !3, line: 2308, type: !644)
!6676 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 2307, column: 2)
!6677 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 2295, column: 11)
!6678 = !DILocalVariable(name: "pending_mem", scope: !6676, file: !3, line: 2308, type: !644)
!6679 = !DILocation(line: 0, scope: !6651)
!6680 = !DILocation(line: 2191, column: 14, scope: !6651)
!6681 = !DILocation(line: 2192, column: 24, scope: !6651)
!6682 = !DILocation(line: 2193, column: 17, scope: !6651)
!6683 = !DILocation(line: 2195, column: 23, scope: !6651)
!6684 = !DILocation(line: 2197, column: 3, scope: !6651)
!6685 = !DILocation(line: 2198, column: 7, scope: !6651)
!6686 = !DILocation(line: 2201, column: 7, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 2201, column: 7)
!6688 = !DILocation(line: 2201, column: 14, scope: !6687)
!6689 = !DILocation(line: 2201, column: 17, scope: !6687)
!6690 = !DILocation(line: 2201, column: 34, scope: !6687)
!6691 = !DILocation(line: 2201, column: 7, scope: !6651)
!6692 = !DILocation(line: 2202, column: 5, scope: !6687)
!6693 = !DILocation(line: 2204, column: 7, scope: !6661)
!6694 = !DILocation(line: 2204, column: 23, scope: !6661)
!6695 = !DILocation(line: 2204, column: 7, scope: !6651)
!6696 = !DILocation(line: 2230, column: 3, scope: !6651)
!6697 = !DILocation(line: 2208, column: 16, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 2208, column: 7)
!6699 = !DILocation(line: 0, scope: !6660)
!6700 = !DILocation(line: 2208, column: 12, scope: !6698)
!6701 = !DILocation(line: 0, scope: !6698)
!6702 = !DILocation(line: 2208, column: 41, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 2208, column: 7)
!6704 = !DILocation(line: 2208, column: 7, scope: !6698)
!6705 = !DILocation(line: 2209, column: 6, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2209, column: 6)
!6707 = !DILocation(line: 2209, column: 37, scope: !6706)
!6708 = !DILocation(line: 2209, column: 6, scope: !6703)
!6709 = !DILocation(line: 2211, column: 7, scope: !6706)
!6710 = !DILocation(line: 2210, column: 4, scope: !6706)
!6711 = !DILocation(line: 2208, column: 7, scope: !6703)
!6712 = distinct !{!6712, !6704, !6713}
!6713 = !DILocation(line: 2213, column: 11, scope: !6698)
!6714 = !DILocation(line: 2215, column: 18, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 2215, column: 11)
!6716 = !DILocation(line: 2215, column: 21, scope: !6715)
!6717 = !DILocation(line: 2215, column: 38, scope: !6715)
!6718 = !DILocation(line: 2215, column: 11, scope: !6660)
!6719 = !DILocation(line: 2216, column: 2, scope: !6715)
!6720 = !DILocation(line: 2218, column: 16, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 2218, column: 11)
!6722 = !DILocation(line: 2218, column: 11, scope: !6660)
!6723 = !DILocation(line: 2220, column: 24, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 2219, column: 2)
!6725 = !DILocation(line: 2222, column: 27, scope: !6724)
!6726 = !DILocation(line: 2222, column: 4, scope: !6724)
!6727 = !DILocation(line: 2224, column: 24, scope: !6724)
!6728 = !DILocation(line: 2225, column: 2, scope: !6724)
!6729 = !DILocation(line: 2230, column: 10, scope: !6651)
!6730 = !DILocation(line: 2230, column: 26, scope: !6651)
!6731 = !DILocation(line: 2230, column: 45, scope: !6651)
!6732 = !DILocation(line: 2230, column: 64, scope: !6651)
!6733 = !DILocation(line: 2231, column: 3, scope: !6651)
!6734 = !DILocation(line: 2231, column: 22, scope: !6651)
!6735 = !DILocation(line: 2234, column: 3, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2233, column: 11)
!6737 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 2232, column: 5)
!6738 = !DILocation(line: 2234, column: 22, scope: !6736)
!6739 = !DILocation(line: 2235, column: 3, scope: !6736)
!6740 = !DILocation(line: 2235, column: 6, scope: !6736)
!6741 = !DILocation(line: 2233, column: 11, scope: !6737)
!6742 = !DILocation(line: 2243, column: 27, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 2236, column: 9)
!6744 = !DILocation(line: 2243, column: 4, scope: !6743)
!6745 = !DILocation(line: 2244, column: 2, scope: !6743)
!6746 = !DILocation(line: 2245, column: 11, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2245, column: 11)
!6748 = !DILocation(line: 2245, column: 27, scope: !6747)
!6749 = !DILocation(line: 2245, column: 11, scope: !6737)
!6750 = !DILocation(line: 2248, column: 27, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 2246, column: 2)
!6752 = !DILocation(line: 2248, column: 4, scope: !6751)
!6753 = !DILocation(line: 2249, column: 27, scope: !6751)
!6754 = !DILocation(line: 2249, column: 4, scope: !6751)
!6755 = !DILocation(line: 2250, column: 2, scope: !6751)
!6756 = !DILocation(line: 2251, column: 14, scope: !6737)
!6757 = distinct !{!6757, !6696, !6758}
!6758 = !DILocation(line: 2252, column: 5, scope: !6651)
!6759 = !DILocation(line: 2254, column: 7, scope: !6664)
!6760 = !DILocation(line: 2254, column: 7, scope: !6651)
!6761 = !DILocation(line: 2256, column: 19, scope: !6663)
!6762 = !DILocation(line: 0, scope: !6663)
!6763 = !DILocation(line: 2257, column: 32, scope: !6663)
!6764 = !DILocation(line: 2259, column: 7, scope: !6663)
!6765 = !DILocation(line: 2263, column: 36, scope: !6668)
!6766 = !DILocation(line: 2268, column: 14, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6667, file: !3, line: 2268, column: 8)
!6768 = !DILocation(line: 2268, column: 8, scope: !6667)
!6769 = !DILocation(line: 2269, column: 6, scope: !6767)
!6770 = !DILocation(line: 2271, column: 12, scope: !6667)
!6771 = !DILocation(line: 0, scope: !6667)
!6772 = !DILocation(line: 2272, column: 4, scope: !6667)
!6773 = !DILocation(line: 2272, column: 19, scope: !6667)
!6774 = !DILocation(line: 2272, column: 11, scope: !6667)
!6775 = !DILocation(line: 2273, column: 6, scope: !6667)
!6776 = distinct !{!6776, !6772, !6775}
!6777 = !DILocation(line: 2278, column: 12, scope: !6671)
!6778 = !DILocation(line: 2278, column: 12, scope: !6664)
!6779 = !DILocation(line: 0, scope: !6670)
!6780 = !DILocation(line: 2283, column: 11, scope: !6674)
!6781 = !DILocation(line: 2283, column: 28, scope: !6674)
!6782 = !DILocation(line: 2283, column: 11, scope: !6670)
!6783 = !DILocation(line: 2286, column: 27, scope: !6673)
!6784 = !DILocation(line: 2286, column: 41, scope: !6673)
!6785 = !DILocation(line: 2286, column: 8, scope: !6673)
!6786 = !DILocation(line: 0, scope: !6673)
!6787 = !DILocation(line: 2288, column: 8, scope: !6673)
!6788 = !DILocation(line: 2289, column: 29, scope: !6673)
!6789 = !DILocation(line: 2289, column: 4, scope: !6673)
!6790 = !DILocation(line: 2290, column: 42, scope: !6673)
!6791 = !DILocation(line: 2290, column: 18, scope: !6673)
!6792 = !DILocation(line: 2290, column: 16, scope: !6673)
!6793 = !DILocation(line: 2291, column: 2, scope: !6673)
!6794 = !DILocation(line: 2292, column: 11, scope: !6670)
!6795 = !DILocation(line: 2295, column: 18, scope: !6677)
!6796 = !DILocation(line: 2295, column: 12, scope: !6677)
!6797 = !DILocation(line: 2296, column: 11, scope: !6677)
!6798 = !DILocation(line: 2296, column: 22, scope: !6677)
!6799 = !DILocation(line: 2296, column: 55, scope: !6677)
!6800 = !DILocation(line: 2296, column: 47, scope: !6677)
!6801 = !DILocation(line: 2297, column: 17, scope: !6677)
!6802 = !DILocation(line: 2297, column: 15, scope: !6677)
!6803 = !DILocation(line: 2295, column: 11, scope: !6670)
!6804 = !DILocation(line: 2304, column: 4, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 2298, column: 2)
!6806 = !DILocation(line: 2305, column: 2, scope: !6805)
!6807 = !DILocation(line: 2310, column: 20, scope: !6676)
!6808 = !DILocation(line: 2311, column: 24, scope: !6676)
!6809 = !DILocation(line: 2312, column: 4, scope: !6676)
!6810 = !DILocation(line: 0, scope: !6676)
!6811 = !DILocation(line: 2314, column: 29, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 2314, column: 12)
!6813 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 2313, column: 6)
!6814 = !DILocation(line: 2314, column: 12, scope: !6812)
!6815 = !DILocation(line: 2315, column: 5, scope: !6812)
!6816 = !DILocation(line: 2315, column: 48, scope: !6812)
!6817 = !DILocation(line: 2315, column: 10, scope: !6812)
!6818 = !DILocation(line: 2314, column: 12, scope: !6813)
!6819 = !DILocation(line: 2316, column: 20, scope: !6812)
!6820 = !DILocation(line: 2316, column: 43, scope: !6812)
!6821 = !DILocation(line: 2316, column: 3, scope: !6812)
!6822 = !DILocation(line: 2319, column: 18, scope: !6813)
!6823 = !DILocation(line: 2320, column: 22, scope: !6813)
!6824 = distinct !{!6824, !6809, !6825}
!6825 = !DILocation(line: 2321, column: 6, scope: !6676)
!6826 = !DILocation(line: 2323, column: 20, scope: !6676)
!6827 = !DILocation(line: 2324, column: 24, scope: !6676)
!6828 = !DILocation(line: 2325, column: 4, scope: !6676)
!6829 = !DILocation(line: 2327, column: 31, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 2327, column: 12)
!6831 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 2326, column: 6)
!6832 = !DILocation(line: 2327, column: 12, scope: !6830)
!6833 = !DILocation(line: 2328, column: 5, scope: !6830)
!6834 = !DILocation(line: 2328, column: 48, scope: !6830)
!6835 = !DILocation(line: 2328, column: 10, scope: !6830)
!6836 = !DILocation(line: 2327, column: 12, scope: !6831)
!6837 = !DILocation(line: 2329, column: 20, scope: !6830)
!6838 = !DILocation(line: 2329, column: 43, scope: !6830)
!6839 = !DILocation(line: 2329, column: 3, scope: !6830)
!6840 = !DILocation(line: 2332, column: 18, scope: !6831)
!6841 = !DILocation(line: 2333, column: 22, scope: !6831)
!6842 = distinct !{!6842, !6828, !6843}
!6843 = !DILocation(line: 2334, column: 6, scope: !6676)
!6844 = !DILocation(line: 2336, column: 37, scope: !6676)
!6845 = !DILocation(line: 2336, column: 4, scope: !6676)
!6846 = !DILocation(line: 2339, column: 22, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 2339, column: 15)
!6848 = !DILocation(line: 2339, column: 16, scope: !6847)
!6849 = !DILocation(line: 2339, column: 15, scope: !6676)
!6850 = !DILocation(line: 2340, column: 13, scope: !6847)
!6851 = !DILocation(line: 2342, column: 30, scope: !6670)
!6852 = !DILocation(line: 2342, column: 7, scope: !6670)
!6853 = !DILocation(line: 2343, column: 5, scope: !6670)
!6854 = !DILocation(line: 2345, column: 7, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 2345, column: 7)
!6856 = !DILocation(line: 2345, column: 14, scope: !6855)
!6857 = !DILocation(line: 2345, column: 17, scope: !6855)
!6858 = !DILocation(line: 2345, column: 34, scope: !6855)
!6859 = !DILocation(line: 2345, column: 7, scope: !6651)
!6860 = !DILocation(line: 2346, column: 5, scope: !6855)
!6861 = !DILocation(line: 2349, column: 7, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 2349, column: 7)
!6863 = !DILocation(line: 2349, column: 20, scope: !6862)
!6864 = !DILocation(line: 2349, column: 7, scope: !6651)
!6865 = !DILocation(line: 2351, column: 27, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 2350, column: 5)
!6867 = !DILocation(line: 2353, column: 30, scope: !6866)
!6868 = !DILocation(line: 2353, column: 7, scope: !6866)
!6869 = !DILocation(line: 2355, column: 27, scope: !6866)
!6870 = !DILocation(line: 2356, column: 5, scope: !6866)
!6871 = !DILocation(line: 2357, column: 1, scope: !6651)
!6872 = distinct !DISubprogram(name: "setup_insn_reg_uses", scope: !3, file: !3, line: 1767, type: !3698, scopeLine: 1768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6873)
!6873 = !{!6874, !6875, !6876, !6877, !6878, !6879, !6880, !6881, !6882}
!6874 = !DILocalVariable(name: "deps", arg: 1, scope: !6872, file: !3, line: 1767, type: !3700)
!6875 = !DILocalVariable(name: "insn", arg: 2, scope: !6872, file: !3, line: 1767, type: !644)
!6876 = !DILocalVariable(name: "i", scope: !6872, file: !3, line: 1769, type: !7)
!6877 = !DILocalVariable(name: "rsi", scope: !6872, file: !3, line: 1770, type: !3922)
!6878 = !DILocalVariable(name: "list", scope: !6872, file: !3, line: 1771, type: !644)
!6879 = !DILocalVariable(name: "use", scope: !6872, file: !3, line: 1772, type: !1831)
!6880 = !DILocalVariable(name: "use2", scope: !6872, file: !3, line: 1772, type: !1831)
!6881 = !DILocalVariable(name: "next", scope: !6872, file: !3, line: 1772, type: !1831)
!6882 = !DILocalVariable(name: "reg_last", scope: !6872, file: !3, line: 1773, type: !1791)
!6883 = !DILocation(line: 0, scope: !6872)
!6884 = !DILocation(line: 1769, column: 3, scope: !6872)
!6885 = !DILocation(line: 1770, column: 3, scope: !6872)
!6886 = !DILocation(line: 1775, column: 3, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 1775, column: 3)
!6888 = !DILocation(line: 0, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 1776, column: 5)
!6890 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 1775, column: 3)
!6891 = !DILocation(line: 1775, column: 3, scope: !6890)
!6892 = !DILocation(line: 1777, column: 11, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 1777, column: 11)
!6894 = !DILocation(line: 1777, column: 13, scope: !6893)
!6895 = !DILocation(line: 1778, column: 4, scope: !6893)
!6896 = !DILocation(line: 1778, column: 7, scope: !6893)
!6897 = !DILocation(line: 1777, column: 11, scope: !6889)
!6898 = !DILocation(line: 1781, column: 11, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 1781, column: 11)
!6900 = !DILocation(line: 1781, column: 47, scope: !6899)
!6901 = !DILocation(line: 1782, column: 4, scope: !6899)
!6902 = !DILocation(line: 1782, column: 9, scope: !6899)
!6903 = !DILocation(line: 1783, column: 4, scope: !6899)
!6904 = !DILocation(line: 1783, column: 9, scope: !6899)
!6905 = !DILocation(line: 1781, column: 11, scope: !6889)
!6906 = !DILocation(line: 1787, column: 34, scope: !6889)
!6907 = !DILocation(line: 1787, column: 13, scope: !6889)
!6908 = !DILocation(line: 1788, column: 12, scope: !6889)
!6909 = !DILocation(line: 1788, column: 27, scope: !6889)
!6910 = !DILocation(line: 1789, column: 25, scope: !6889)
!6911 = !DILocation(line: 1789, column: 34, scope: !6889)
!6912 = !DILocation(line: 1789, column: 19, scope: !6889)
!6913 = !DILocation(line: 1792, column: 29, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 1792, column: 7)
!6915 = !DILocation(line: 0, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !3, line: 1793, column: 2)
!6917 = distinct !DILexicalBlock(scope: !6914, file: !3, line: 1792, column: 7)
!6918 = !DILocation(line: 1792, column: 12, scope: !6914)
!6919 = !DILocation(line: 0, scope: !6914)
!6920 = !DILocation(line: 1792, column: 7, scope: !6914)
!6921 = !DILocation(line: 1794, column: 32, scope: !6916)
!6922 = !DILocation(line: 1794, column: 35, scope: !6916)
!6923 = !DILocation(line: 1794, column: 11, scope: !6916)
!6924 = !DILocation(line: 1795, column: 16, scope: !6916)
!6925 = !DILocation(line: 1796, column: 24, scope: !6916)
!6926 = !DILocation(line: 1797, column: 10, scope: !6916)
!6927 = !DILocation(line: 1797, column: 25, scope: !6916)
!6928 = !DILocation(line: 1792, column: 48, scope: !6917)
!6929 = !DILocation(line: 1792, column: 7, scope: !6917)
!6930 = distinct !{!6930, !6920, !6931}
!6931 = !DILocation(line: 1798, column: 2, scope: !6914)
!6932 = distinct !{!6932, !6886, !6933}
!6933 = !DILocation(line: 1799, column: 5, scope: !6887)
!6934 = !DILocation(line: 1800, column: 1, scope: !6872)
!6935 = !DILocation(line: 0, scope: !1991)
!6936 = !DILocation(line: 2005, column: 3, scope: !1991)
!6937 = !DILocation(line: 2007, column: 9, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 2007, column: 7)
!6939 = !DILocation(line: 2007, column: 7, scope: !1991)
!6940 = !DILocation(line: 0, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 2010, column: 3)
!6942 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 2010, column: 3)
!6943 = !DILocation(line: 2010, column: 8, scope: !6942)
!6944 = !DILocation(line: 0, scope: !6942)
!6945 = !DILocation(line: 2010, column: 17, scope: !6941)
!6946 = !DILocation(line: 2010, column: 3, scope: !6942)
!6947 = !DILocation(line: 2012, column: 12, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 2011, column: 5)
!6949 = !DILocation(line: 2013, column: 7, scope: !6948)
!6950 = !DILocation(line: 2013, column: 29, scope: !6948)
!6951 = !DILocation(line: 2016, column: 36, scope: !6948)
!6952 = !DILocation(line: 2010, column: 46, scope: !6941)
!6953 = !DILocation(line: 2010, column: 3, scope: !6941)
!6954 = distinct !{!6954, !6946, !6955}
!6955 = !DILocation(line: 2017, column: 5, scope: !6942)
!6956 = !DILocation(line: 2019, column: 16, scope: !1991)
!6957 = !DILocation(line: 2019, column: 55, scope: !1991)
!6958 = !DILocation(line: 2019, column: 3, scope: !1991)
!6959 = !DILocation(line: 2021, column: 16, scope: !1991)
!6960 = !DILocation(line: 2021, column: 3, scope: !1991)
!6961 = !DILocation(line: 2029, column: 15, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 2029, column: 3)
!6963 = !DILocation(line: 2029, column: 8, scope: !6962)
!6964 = !DILocation(line: 0, scope: !6962)
!6965 = !DILocation(line: 2029, column: 3, scope: !6962)
!6966 = !DILocation(line: 2030, column: 9, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 2030, column: 9)
!6968 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 2029, column: 3)
!6969 = !DILocation(line: 2030, column: 30, scope: !6967)
!6970 = !DILocation(line: 2030, column: 9, scope: !6968)
!6971 = !DILocation(line: 2031, column: 23, scope: !6967)
!6972 = !DILocation(line: 2031, column: 7, scope: !6967)
!6973 = !DILocation(line: 2029, column: 46, scope: !6968)
!6974 = !DILocation(line: 2029, column: 3, scope: !6968)
!6975 = distinct !{!6975, !6965, !6976}
!6976 = !DILocation(line: 2031, column: 37, scope: !6962)
!6977 = !DILocation(line: 2033, column: 45, scope: !1991)
!6978 = !DILocation(line: 2033, column: 43, scope: !1991)
!6979 = !DILocation(line: 2035, column: 72, scope: !1991)
!6980 = !DILocation(line: 2035, column: 63, scope: !1991)
!6981 = !DILocation(line: 2035, column: 7, scope: !1991)
!6982 = !DILocation(line: 2035, column: 32, scope: !1991)
!6983 = !DILocation(line: 2035, column: 5, scope: !1991)
!6984 = !DILocation(line: 2036, column: 51, scope: !1991)
!6985 = !DILocation(line: 2037, column: 9, scope: !1991)
!6986 = !DILocation(line: 2036, column: 42, scope: !1991)
!6987 = !DILocation(line: 2036, column: 3, scope: !1991)
!6988 = !DILocation(line: 2036, column: 32, scope: !1991)
!6989 = !DILocation(line: 2038, column: 8, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 2038, column: 3)
!6991 = !DILocation(line: 0, scope: !6990)
!6992 = !DILocation(line: 2038, column: 19, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 2038, column: 3)
!6994 = !DILocation(line: 2038, column: 17, scope: !6993)
!6995 = !DILocation(line: 2038, column: 3, scope: !6990)
!6996 = !DILocation(line: 2040, column: 12, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 2039, column: 5)
!6998 = !DILocation(line: 2042, column: 4, scope: !6997)
!6999 = !DILocation(line: 2042, column: 26, scope: !6997)
!7000 = !DILocation(line: 2041, column: 7, scope: !6997)
!7001 = !DILocation(line: 2041, column: 24, scope: !6997)
!7002 = !DILocation(line: 2042, column: 2, scope: !6997)
!7003 = !DILocation(line: 2043, column: 61, scope: !6997)
!7004 = !DILocation(line: 2043, column: 7, scope: !6997)
!7005 = !DILocation(line: 2043, column: 24, scope: !6997)
!7006 = !DILocation(line: 2043, column: 37, scope: !6997)
!7007 = !DILocation(line: 2045, column: 26, scope: !6997)
!7008 = !DILocation(line: 2044, column: 7, scope: !6997)
!7009 = !DILocation(line: 2044, column: 24, scope: !6997)
!7010 = !DILocation(line: 2045, column: 2, scope: !6997)
!7011 = !DILocation(line: 2046, column: 55, scope: !6997)
!7012 = !DILocation(line: 2046, column: 7, scope: !6997)
!7013 = !DILocation(line: 2046, column: 24, scope: !6997)
!7014 = !DILocation(line: 2046, column: 31, scope: !6997)
!7015 = !DILocation(line: 2038, column: 46, scope: !6993)
!7016 = !DILocation(line: 2038, column: 3, scope: !6993)
!7017 = distinct !{!7017, !6995, !7018}
!7018 = !DILocation(line: 2047, column: 5, scope: !6990)
!7019 = !DILocation(line: 2048, column: 1, scope: !1991)
!7020 = distinct !DISubprogram(name: "sched_analyze_reg", scope: !3, file: !3, line: 2110, type: !7021, scopeLine: 2112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7023)
!7021 = !DISubroutineType(types: !7022)
!7022 = !{null, !3700, !611, !5, !419, !644}
!7023 = !{!7024, !7025, !7026, !7027, !7028, !7029, !7032, !7035}
!7024 = !DILocalVariable(name: "deps", arg: 1, scope: !7020, file: !3, line: 2110, type: !3700)
!7025 = !DILocalVariable(name: "regno", arg: 2, scope: !7020, file: !3, line: 2110, type: !611)
!7026 = !DILocalVariable(name: "mode", arg: 3, scope: !7020, file: !3, line: 2110, type: !5)
!7027 = !DILocalVariable(name: "ref", arg: 4, scope: !7020, file: !3, line: 2111, type: !419)
!7028 = !DILocalVariable(name: "insn", arg: 5, scope: !7020, file: !3, line: 2111, type: !644)
!7029 = !DILocalVariable(name: "i", scope: !7030, file: !3, line: 2124, type: !611)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !3, line: 2123, column: 5)
!7031 = distinct !DILexicalBlock(scope: !7020, file: !3, line: 2122, column: 7)
!7032 = !DILocalVariable(name: "code", scope: !7033, file: !3, line: 2147, type: !419)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 2146, column: 5)
!7034 = distinct !DILexicalBlock(scope: !7031, file: !3, line: 2145, column: 12)
!7035 = !DILocalVariable(name: "t", scope: !7036, file: !3, line: 2165, type: !644)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2164, column: 2)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 2163, column: 11)
!7038 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 2152, column: 5)
!7039 = !DILocation(line: 0, scope: !7020)
!7040 = !DILocation(line: 2114, column: 8, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7020, file: !3, line: 2114, column: 7)
!7042 = !DILocation(line: 2114, column: 25, scope: !7041)
!7043 = !DILocation(line: 2114, column: 28, scope: !7041)
!7044 = !DILocation(line: 2115, column: 7, scope: !7041)
!7045 = !DILocation(line: 2115, column: 20, scope: !7041)
!7046 = !DILocation(line: 2115, column: 35, scope: !7041)
!7047 = !DILocation(line: 2115, column: 17, scope: !7041)
!7048 = !DILocation(line: 2115, column: 39, scope: !7041)
!7049 = !DILocation(line: 2115, column: 57, scope: !7041)
!7050 = !DILocation(line: 2115, column: 48, scope: !7041)
!7051 = !DILocation(line: 2114, column: 7, scope: !7020)
!7052 = !DILocation(line: 2116, column: 5, scope: !7041)
!7053 = !DILocation(line: 2118, column: 3, scope: !7020)
!7054 = !DILocation(line: 2122, column: 13, scope: !7031)
!7055 = !DILocation(line: 2122, column: 7, scope: !7020)
!7056 = !DILocation(line: 2124, column: 15, scope: !7030)
!7057 = !DILocation(line: 0, scope: !7030)
!7058 = !DILocation(line: 2125, column: 11, scope: !7030)
!7059 = !DILocation(line: 2132, column: 4, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 2131, column: 2)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 2130, column: 16)
!7062 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 2125, column: 11)
!7063 = !DILocation(line: 2127, column: 4, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 2126, column: 2)
!7065 = !DILocation(line: 2137, column: 4, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 2136, column: 2)
!7067 = !DILocation(line: 2127, column: 11, scope: !7064)
!7068 = !DILocation(line: 2127, column: 15, scope: !7064)
!7069 = !DILocation(line: 2128, column: 26, scope: !7064)
!7070 = !DILocation(line: 2128, column: 6, scope: !7064)
!7071 = distinct !{!7071, !7063, !7072}
!7072 = !DILocation(line: 2128, column: 29, scope: !7064)
!7073 = !DILocation(line: 2132, column: 11, scope: !7060)
!7074 = !DILocation(line: 2132, column: 15, scope: !7060)
!7075 = !DILocation(line: 2133, column: 26, scope: !7060)
!7076 = !DILocation(line: 2133, column: 6, scope: !7060)
!7077 = distinct !{!7077, !7059, !7078}
!7078 = !DILocation(line: 2133, column: 29, scope: !7060)
!7079 = !DILocation(line: 2137, column: 11, scope: !7066)
!7080 = !DILocation(line: 2137, column: 15, scope: !7066)
!7081 = !DILocation(line: 2138, column: 30, scope: !7066)
!7082 = !DILocation(line: 2138, column: 6, scope: !7066)
!7083 = distinct !{!7083, !7065, !7084}
!7084 = !DILocation(line: 2138, column: 33, scope: !7066)
!7085 = !DILocation(line: 2145, column: 27, scope: !7034)
!7086 = !DILocation(line: 2145, column: 18, scope: !7034)
!7087 = !DILocation(line: 2145, column: 12, scope: !7031)
!7088 = !DILocation(line: 2147, column: 28, scope: !7033)
!7089 = !DILocation(line: 0, scope: !7033)
!7090 = !DILocation(line: 2148, column: 7, scope: !7033)
!7091 = !DILocation(line: 2153, column: 11, scope: !7038)
!7092 = !DILocation(line: 2154, column: 2, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 2153, column: 11)
!7094 = !DILocation(line: 2156, column: 2, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 2155, column: 16)
!7096 = !DILocation(line: 2158, column: 2, scope: !7095)
!7097 = !DILocation(line: 2163, column: 12, scope: !7037)
!7098 = !DILocation(line: 2163, column: 29, scope: !7037)
!7099 = !DILocation(line: 2163, column: 32, scope: !7037)
!7100 = !DILocation(line: 2163, column: 11, scope: !7038)
!7101 = !DILocation(line: 2165, column: 12, scope: !7036)
!7102 = !DILocation(line: 0, scope: !7036)
!7103 = !DILocation(line: 2166, column: 8, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 2166, column: 8)
!7105 = !DILocation(line: 2166, column: 8, scope: !7036)
!7106 = !DILocation(line: 2167, column: 29, scope: !7104)
!7107 = !DILocation(line: 2167, column: 6, scope: !7104)
!7108 = !DILocation(line: 2172, column: 11, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 2172, column: 11)
!7110 = !DILocation(line: 2172, column: 39, scope: !7109)
!7111 = !DILocation(line: 2172, column: 11, scope: !7038)
!7112 = !DILocation(line: 2174, column: 15, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 2174, column: 8)
!7114 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 2173, column: 2)
!7115 = !DILocation(line: 2174, column: 9, scope: !7113)
!7116 = !DILocation(line: 2174, column: 31, scope: !7113)
!7117 = !DILocation(line: 2174, column: 24, scope: !7113)
!7118 = !DILocation(line: 2174, column: 42, scope: !7113)
!7119 = !DILocation(line: 2174, column: 8, scope: !7114)
!7120 = !DILocation(line: 2176, column: 39, scope: !7113)
!7121 = !DILocation(line: 2176, column: 10, scope: !7113)
!7122 = !DILocation(line: 2176, column: 8, scope: !7113)
!7123 = !DILocation(line: 2175, column: 6, scope: !7113)
!7124 = !DILocation(line: 2178, column: 39, scope: !7113)
!7125 = !DILocation(line: 2178, column: 6, scope: !7113)
!7126 = !DILocation(line: 2182, column: 1, scope: !7020)
!7127 = distinct !DISubprogram(name: "note_mem_dep", scope: !3, file: !3, line: 1703, type: !1907, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7128)
!7128 = !{!7129, !7130, !7131, !7132}
!7129 = !DILocalVariable(name: "m1", arg: 1, scope: !7127, file: !3, line: 1703, type: !644)
!7130 = !DILocalVariable(name: "m2", arg: 2, scope: !7127, file: !3, line: 1703, type: !644)
!7131 = !DILocalVariable(name: "e", arg: 3, scope: !7127, file: !3, line: 1703, type: !644)
!7132 = !DILocalVariable(name: "ds", arg: 4, scope: !7127, file: !3, line: 1703, type: !618)
!7133 = !DILocation(line: 0, scope: !7127)
!7134 = !DILocation(line: 1705, column: 7, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 1705, column: 7)
!7136 = !DILocation(line: 1705, column: 24, scope: !7135)
!7137 = !DILocation(line: 1705, column: 7, scope: !7127)
!7138 = !DILocation(line: 1706, column: 5, scope: !7135)
!7139 = !DILocation(line: 1707, column: 1, scope: !7127)
!7140 = distinct !DISubprogram(name: "deps_may_trap_p", scope: !3, file: !3, line: 469, type: !7141, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7143)
!7141 = !DISubroutineType(types: !7142)
!7142 = !{!611, !1852}
!7143 = !{!7144, !7145, !7146}
!7144 = !DILocalVariable(name: "mem", arg: 1, scope: !7140, file: !3, line: 469, type: !1852)
!7145 = !DILocalVariable(name: "addr", scope: !7140, file: !3, line: 471, type: !1852)
!7146 = !DILocalVariable(name: "t", scope: !7147, file: !3, line: 475, type: !1852)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 474, column: 5)
!7148 = distinct !DILexicalBlock(scope: !7140, file: !3, line: 473, column: 7)
!7149 = !DILocation(line: 0, scope: !7140)
!7150 = !DILocation(line: 471, column: 20, scope: !7140)
!7151 = !DILocation(line: 473, column: 7, scope: !7148)
!7152 = !DILocation(line: 473, column: 20, scope: !7148)
!7153 = !DILocation(line: 473, column: 23, scope: !7148)
!7154 = !DILocation(line: 473, column: 36, scope: !7148)
!7155 = !DILocation(line: 473, column: 7, scope: !7140)
!7156 = !DILocation(line: 475, column: 42, scope: !7147)
!7157 = !DILocation(line: 475, column: 21, scope: !7147)
!7158 = !DILocation(line: 0, scope: !7147)
!7159 = !DILocation(line: 476, column: 11, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 476, column: 11)
!7161 = !DILocation(line: 476, column: 11, scope: !7147)
!7162 = !DILocation(line: 478, column: 5, scope: !7147)
!7163 = !DILocation(line: 479, column: 10, scope: !7140)
!7164 = !DILocation(line: 479, column: 3, scope: !7140)
!7165 = distinct !DISubprogram(name: "add_insn_mem_dependence", scope: !3, file: !3, line: 1544, type: !7166, scopeLine: 1546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7168)
!7166 = !DISubroutineType(types: !7167)
!7167 = !{null, !3700, !610, !644, !644}
!7168 = !{!7169, !7170, !7171, !7172, !7173, !7174, !7175}
!7169 = !DILocalVariable(name: "deps", arg: 1, scope: !7165, file: !3, line: 1544, type: !3700)
!7170 = !DILocalVariable(name: "read_p", arg: 2, scope: !7165, file: !3, line: 1544, type: !610)
!7171 = !DILocalVariable(name: "insn", arg: 3, scope: !7165, file: !3, line: 1545, type: !644)
!7172 = !DILocalVariable(name: "mem", arg: 4, scope: !7165, file: !3, line: 1545, type: !644)
!7173 = !DILocalVariable(name: "insn_list", scope: !7165, file: !3, line: 1547, type: !4744)
!7174 = !DILocalVariable(name: "mem_list", scope: !7165, file: !3, line: 1548, type: !4744)
!7175 = !DILocalVariable(name: "link", scope: !7165, file: !3, line: 1549, type: !644)
!7176 = !DILocation(line: 0, scope: !7165)
!7177 = !DILocation(line: 1551, column: 3, scope: !7165)
!7178 = !DILocation(line: 1552, column: 7, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1552, column: 7)
!7180 = !DILocation(line: 1552, column: 7, scope: !7165)
!7181 = !DILocation(line: 1554, column: 26, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 1553, column: 5)
!7183 = !DILocation(line: 1555, column: 25, scope: !7182)
!7184 = !DILocation(line: 1556, column: 12, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 1556, column: 11)
!7186 = !DILocation(line: 1556, column: 11, scope: !7182)
!7187 = !DILocation(line: 1557, column: 8, scope: !7185)
!7188 = !DILocation(line: 1557, column: 32, scope: !7185)
!7189 = !DILocation(line: 1557, column: 2, scope: !7185)
!7190 = !DILocation(line: 1561, column: 26, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 1560, column: 5)
!7192 = !DILocation(line: 1562, column: 25, scope: !7191)
!7193 = !DILocation(line: 1563, column: 13, scope: !7191)
!7194 = !DILocation(line: 1563, column: 38, scope: !7191)
!7195 = !DILocation(line: 0, scope: !7179)
!7196 = !DILocation(line: 1566, column: 33, scope: !7165)
!7197 = !DILocation(line: 1566, column: 10, scope: !7165)
!7198 = !DILocation(line: 1567, column: 14, scope: !7165)
!7199 = !DILocation(line: 1569, column: 7, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1569, column: 7)
!7201 = !DILocation(line: 1569, column: 24, scope: !7200)
!7202 = !DILocation(line: 1569, column: 7, scope: !7165)
!7203 = !DILocation(line: 1571, column: 13, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7200, file: !3, line: 1570, column: 5)
!7205 = !DILocation(line: 1572, column: 47, scope: !7204)
!7206 = !DILocation(line: 1572, column: 23, scope: !7204)
!7207 = !DILocation(line: 1572, column: 21, scope: !7204)
!7208 = !DILocation(line: 1573, column: 5, scope: !7204)
!7209 = !DILocation(line: 1574, column: 37, scope: !7165)
!7210 = !DILocation(line: 1574, column: 54, scope: !7165)
!7211 = !DILocation(line: 1574, column: 10, scope: !7165)
!7212 = !DILocation(line: 1575, column: 13, scope: !7165)
!7213 = !DILocation(line: 1576, column: 1, scope: !7165)
!7214 = distinct !DISubprogram(name: "extend_deps_reg_info", scope: !3, file: !3, line: 2061, type: !7215, scopeLine: 2062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7217)
!7215 = !DISubroutineType(types: !7216)
!7216 = !{null, !3700, !611}
!7217 = !{!7218, !7219, !7220}
!7218 = !DILocalVariable(name: "deps", arg: 1, scope: !7214, file: !3, line: 2061, type: !3700)
!7219 = !DILocalVariable(name: "regno", arg: 2, scope: !7214, file: !3, line: 2061, type: !611)
!7220 = !DILocalVariable(name: "max_regno", scope: !7214, file: !3, line: 2063, type: !611)
!7221 = !DILocation(line: 0, scope: !7214)
!7222 = !DILocation(line: 2063, column: 25, scope: !7214)
!7223 = !DILocation(line: 2065, column: 3, scope: !7214)
!7224 = !DILocation(line: 2069, column: 7, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 2069, column: 7)
!7226 = !DILocation(line: 2069, column: 24, scope: !7225)
!7227 = !DILocation(line: 2069, column: 33, scope: !7225)
!7228 = !DILocation(line: 2069, column: 27, scope: !7225)
!7229 = !DILocation(line: 2069, column: 7, scope: !7214)
!7230 = !DILocation(line: 2071, column: 13, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7225, file: !3, line: 2070, column: 5)
!7232 = !DILocation(line: 2071, column: 21, scope: !7231)
!7233 = !DILocation(line: 2072, column: 7, scope: !7231)
!7234 = !DILocation(line: 2075, column: 25, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 2075, column: 7)
!7236 = !DILocation(line: 2075, column: 17, scope: !7235)
!7237 = !DILocation(line: 2075, column: 7, scope: !7214)
!7238 = !DILocation(line: 2077, column: 24, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 2076, column: 5)
!7240 = !DILocation(line: 2077, column: 22, scope: !7239)
!7241 = !DILocation(line: 2079, column: 22, scope: !7239)
!7242 = !DILocation(line: 2079, column: 37, scope: !7239)
!7243 = !DILocation(line: 2079, column: 16, scope: !7239)
!7244 = !DILocation(line: 2079, column: 15, scope: !7239)
!7245 = !DILocation(line: 2080, column: 29, scope: !7239)
!7246 = !DILocation(line: 2080, column: 18, scope: !7239)
!7247 = !DILocation(line: 2081, column: 15, scope: !7239)
!7248 = !DILocation(line: 2079, column: 7, scope: !7239)
!7249 = !DILocation(line: 2082, column: 21, scope: !7239)
!7250 = !DILocation(line: 2083, column: 5, scope: !7239)
!7251 = !DILocation(line: 2084, column: 1, scope: !7214)
!7252 = distinct !DISubprogram(name: "note_reg_set", scope: !3, file: !3, line: 1689, type: !1901, scopeLine: 1690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7253)
!7253 = !{!7254}
!7254 = !DILocalVariable(name: "r", arg: 1, scope: !7252, file: !3, line: 1689, type: !611)
!7255 = !DILocation(line: 0, scope: !7252)
!7256 = !DILocation(line: 1691, column: 7, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 1691, column: 7)
!7258 = !DILocation(line: 1691, column: 24, scope: !7257)
!7259 = !DILocation(line: 1691, column: 7, scope: !7252)
!7260 = !DILocation(line: 1692, column: 5, scope: !7257)
!7261 = !DILocation(line: 1693, column: 1, scope: !7252)
!7262 = distinct !DISubprogram(name: "note_reg_use", scope: !3, file: !3, line: 1682, type: !1901, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7263)
!7263 = !{!7264}
!7264 = !DILocalVariable(name: "r", arg: 1, scope: !7262, file: !3, line: 1682, type: !611)
!7265 = !DILocation(line: 0, scope: !7262)
!7266 = !DILocation(line: 1684, column: 7, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 1684, column: 7)
!7268 = !DILocation(line: 1684, column: 24, scope: !7267)
!7269 = !DILocation(line: 1684, column: 7, scope: !7262)
!7270 = !DILocation(line: 1685, column: 5, scope: !7267)
!7271 = !DILocation(line: 1686, column: 1, scope: !7262)
!7272 = distinct !DISubprogram(name: "note_reg_clobber", scope: !3, file: !3, line: 1696, type: !1901, scopeLine: 1697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7273)
!7273 = !{!7274}
!7274 = !DILocalVariable(name: "r", arg: 1, scope: !7272, file: !3, line: 1696, type: !611)
!7275 = !DILocation(line: 0, scope: !7272)
!7276 = !DILocation(line: 1698, column: 7, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7272, file: !3, line: 1698, column: 7)
!7278 = !DILocation(line: 1698, column: 24, scope: !7277)
!7279 = !DILocation(line: 1698, column: 7, scope: !7272)
!7280 = !DILocation(line: 1699, column: 5, scope: !7277)
!7281 = !DILocation(line: 1700, column: 1, scope: !7272)
!7282 = distinct !DISubprogram(name: "create_insn_reg_use", scope: !3, file: !3, line: 1739, type: !7283, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7285)
!7283 = !DISubroutineType(types: !7284)
!7284 = !{!1831, !611, !644}
!7285 = !{!7286, !7287, !7288}
!7286 = !DILocalVariable(name: "regno", arg: 1, scope: !7282, file: !3, line: 1739, type: !611)
!7287 = !DILocalVariable(name: "insn", arg: 2, scope: !7282, file: !3, line: 1739, type: !644)
!7288 = !DILocalVariable(name: "use", scope: !7282, file: !3, line: 1741, type: !1831)
!7289 = !DILocation(line: 0, scope: !7282)
!7290 = !DILocation(line: 1743, column: 33, scope: !7282)
!7291 = !DILocation(line: 1743, column: 9, scope: !7282)
!7292 = !DILocation(line: 1744, column: 8, scope: !7282)
!7293 = !DILocation(line: 1744, column: 14, scope: !7282)
!7294 = !DILocation(line: 1745, column: 8, scope: !7282)
!7295 = !DILocation(line: 1745, column: 13, scope: !7282)
!7296 = !DILocation(line: 1746, column: 24, scope: !7282)
!7297 = !DILocation(line: 1746, column: 8, scope: !7282)
!7298 = !DILocation(line: 1746, column: 22, scope: !7282)
!7299 = !DILocation(line: 1747, column: 3, scope: !7282)
!7300 = !DILocation(line: 1747, column: 28, scope: !7282)
!7301 = !DILocation(line: 1748, column: 3, scope: !7282)
!7302 = distinct !DISubprogram(name: "mark_insn_reg_clobber", scope: !3, file: !3, line: 1990, type: !7303, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7305)
!7303 = !DISubroutineType(types: !7304)
!7304 = !{null, !644, !1852, !615}
!7305 = !{!7306, !7307, !7308}
!7306 = !DILocalVariable(name: "reg", arg: 1, scope: !7302, file: !3, line: 1990, type: !644)
!7307 = !DILocalVariable(name: "setter", arg: 2, scope: !7302, file: !3, line: 1990, type: !1852)
!7308 = !DILocalVariable(name: "data", arg: 3, scope: !7302, file: !3, line: 1990, type: !615)
!7309 = !DILocation(line: 0, scope: !7302)
!7310 = !DILocation(line: 1992, column: 7, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 1992, column: 7)
!7312 = !DILocation(line: 1992, column: 25, scope: !7311)
!7313 = !DILocation(line: 1992, column: 7, scope: !7302)
!7314 = !DILocation(line: 1993, column: 26, scope: !7311)
!7315 = !DILocation(line: 1993, column: 5, scope: !7311)
!7316 = !DILocation(line: 1994, column: 1, scope: !7302)
!7317 = distinct !DISubprogram(name: "mark_insn_reg_store", scope: !3, file: !3, line: 1979, type: !7303, scopeLine: 1980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7318)
!7318 = !{!7319, !7320, !7321}
!7319 = !DILocalVariable(name: "reg", arg: 1, scope: !7317, file: !3, line: 1979, type: !644)
!7320 = !DILocalVariable(name: "setter", arg: 2, scope: !7317, file: !3, line: 1979, type: !1852)
!7321 = !DILocalVariable(name: "data", arg: 3, scope: !7317, file: !3, line: 1979, type: !615)
!7322 = !DILocation(line: 0, scope: !7317)
!7323 = !DILocation(line: 1981, column: 14, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 1981, column: 7)
!7325 = !DILocation(line: 1981, column: 26, scope: !7324)
!7326 = !DILocation(line: 1981, column: 29, scope: !7324)
!7327 = !DILocation(line: 1981, column: 47, scope: !7324)
!7328 = !DILocation(line: 1981, column: 7, scope: !7317)
!7329 = !DILocation(line: 1984, column: 6, scope: !7317)
!7330 = !DILocation(line: 1985, column: 6, scope: !7317)
!7331 = !DILocation(line: 1985, column: 56, scope: !7317)
!7332 = !DILocation(line: 1983, column: 3, scope: !7317)
!7333 = !DILocation(line: 1986, column: 1, scope: !7317)
!7334 = distinct !DISubprogram(name: "mark_reg_death", scope: !3, file: !3, line: 1960, type: !1889, scopeLine: 1961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7335)
!7335 = !{!7336, !7337}
!7336 = !DILocalVariable(name: "reg", arg: 1, scope: !7334, file: !3, line: 1960, type: !644)
!7337 = !DILocalVariable(name: "regno", scope: !7334, file: !3, line: 1962, type: !611)
!7338 = !DILocation(line: 0, scope: !7334)
!7339 = !DILocation(line: 1964, column: 7, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1964, column: 7)
!7341 = !DILocation(line: 1964, column: 22, scope: !7340)
!7342 = !DILocation(line: 1964, column: 7, scope: !7334)
!7343 = !DILocation(line: 1965, column: 11, scope: !7340)
!7344 = !DILocation(line: 0, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1967, column: 7)
!7346 = !DILocation(line: 1967, column: 9, scope: !7345)
!7347 = !DILocation(line: 1965, column: 5, scope: !7340)
!7348 = !DILocation(line: 1967, column: 7, scope: !7334)
!7349 = !DILocation(line: 1970, column: 11, scope: !7334)
!7350 = !DILocation(line: 1971, column: 13, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1971, column: 7)
!7352 = !DILocation(line: 1971, column: 7, scope: !7334)
!7353 = !DILocation(line: 1972, column: 35, scope: !7351)
!7354 = !DILocation(line: 1972, column: 59, scope: !7351)
!7355 = !DILocation(line: 1972, column: 5, scope: !7351)
!7356 = !DILocation(line: 1974, column: 5, scope: !7351)
!7357 = !DILocation(line: 1975, column: 1, scope: !7334)
!7358 = distinct !DISubprogram(name: "mark_insn_reg_birth", scope: !3, file: !3, line: 1900, type: !7359, scopeLine: 1901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7361)
!7359 = !DISubroutineType(types: !7360)
!7360 = !{null, !644, !644, !610, !610}
!7361 = !{!7362, !7363, !7364, !7365, !7366}
!7362 = !DILocalVariable(name: "insn", arg: 1, scope: !7358, file: !3, line: 1900, type: !644)
!7363 = !DILocalVariable(name: "reg", arg: 2, scope: !7358, file: !3, line: 1900, type: !644)
!7364 = !DILocalVariable(name: "clobber_p", arg: 3, scope: !7358, file: !3, line: 1900, type: !610)
!7365 = !DILocalVariable(name: "unused_p", arg: 4, scope: !7358, file: !3, line: 1900, type: !610)
!7366 = !DILocalVariable(name: "regno", scope: !7358, file: !3, line: 1902, type: !611)
!7367 = !DILocation(line: 0, scope: !7358)
!7368 = !DILocation(line: 1904, column: 7, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 1904, column: 7)
!7370 = !DILocation(line: 1904, column: 22, scope: !7369)
!7371 = !DILocation(line: 1904, column: 7, scope: !7358)
!7372 = !DILocation(line: 1905, column: 11, scope: !7369)
!7373 = !DILocation(line: 0, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 1907, column: 7)
!7375 = !DILocation(line: 1907, column: 9, scope: !7374)
!7376 = !DILocation(line: 1905, column: 5, scope: !7369)
!7377 = !DILocation(line: 1907, column: 7, scope: !7358)
!7378 = !DILocation(line: 1910, column: 11, scope: !7358)
!7379 = !DILocation(line: 1911, column: 13, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 1911, column: 7)
!7381 = !DILocation(line: 1911, column: 7, scope: !7358)
!7382 = !DILocation(line: 1913, column: 5, scope: !7380)
!7383 = !DILocation(line: 1913, column: 29, scope: !7380)
!7384 = !DILocation(line: 1912, column: 5, scope: !7380)
!7385 = !DILocation(line: 1916, column: 5, scope: !7380)
!7386 = !DILocation(line: 1917, column: 1, scope: !7358)
!7387 = distinct !DISubprogram(name: "mark_insn_hard_regno_birth", scope: !3, file: !3, line: 1856, type: !7388, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7390)
!7388 = !DISubroutineType(types: !7389)
!7389 = !{null, !644, !611, !611, !610, !610}
!7390 = !{!7391, !7392, !7393, !7394, !7395, !7396, !7397, !7398}
!7391 = !DILocalVariable(name: "insn", arg: 1, scope: !7387, file: !3, line: 1856, type: !644)
!7392 = !DILocalVariable(name: "regno", arg: 2, scope: !7387, file: !3, line: 1856, type: !611)
!7393 = !DILocalVariable(name: "nregs", arg: 3, scope: !7387, file: !3, line: 1856, type: !611)
!7394 = !DILocalVariable(name: "clobber_p", arg: 4, scope: !7387, file: !3, line: 1857, type: !610)
!7395 = !DILocalVariable(name: "unused_p", arg: 5, scope: !7387, file: !3, line: 1857, type: !610)
!7396 = !DILocalVariable(name: "cl", scope: !7387, file: !3, line: 1859, type: !578)
!7397 = !DILocalVariable(name: "new_incr", scope: !7387, file: !3, line: 1860, type: !611)
!7398 = !DILocalVariable(name: "last", scope: !7387, file: !3, line: 1860, type: !611)
!7399 = !DILocation(line: 0, scope: !7387)
!7400 = !DILocation(line: 1860, column: 30, scope: !7387)
!7401 = !DILocation(line: 0, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 1870, column: 12)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 1869, column: 6)
!7404 = distinct !DILexicalBlock(scope: !7405, file: !3, line: 1868, column: 8)
!7405 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 1866, column: 2)
!7406 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 1865, column: 11)
!7407 = distinct !DILexicalBlock(scope: !7387, file: !3, line: 1863, column: 5)
!7408 = !DILocation(line: 0, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 1875, column: 17)
!7410 = !DILocation(line: 1862, column: 3, scope: !7387)
!7411 = !DILocation(line: 1862, column: 16, scope: !7387)
!7412 = !DILocation(line: 1864, column: 7, scope: !7407)
!7413 = !DILocation(line: 1865, column: 13, scope: !7406)
!7414 = !DILocation(line: 1865, column: 11, scope: !7407)
!7415 = !DILocation(line: 1867, column: 9, scope: !7405)
!7416 = !DILocation(line: 1868, column: 11, scope: !7404)
!7417 = !DILocation(line: 1868, column: 8, scope: !7405)
!7418 = !DILocation(line: 1875, column: 17, scope: !7402)
!7419 = !DILocation(line: 1877, column: 38, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 1876, column: 3)
!7421 = !DILocation(line: 1877, column: 58, scope: !7420)
!7422 = !DILocation(line: 1878, column: 47, scope: !7420)
!7423 = !DILocation(line: 1879, column: 3, scope: !7420)
!7424 = !DILocation(line: 1882, column: 38, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 1881, column: 3)
!7426 = !DILocation(line: 1882, column: 51, scope: !7425)
!7427 = !DILocation(line: 1883, column: 40, scope: !7425)
!7428 = !DILocation(line: 1884, column: 11, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 1884, column: 9)
!7430 = !DILocation(line: 1884, column: 9, scope: !7425)
!7431 = !DILocation(line: 1885, column: 36, scope: !7429)
!7432 = !DILocation(line: 1885, column: 7, scope: !7429)
!7433 = !DILocation(line: 1886, column: 5, scope: !7425)
!7434 = !DILocation(line: 1888, column: 8, scope: !7403)
!7435 = !DILocation(line: 1891, column: 12, scope: !7407)
!7436 = distinct !{!7436, !7410, !7437}
!7437 = !DILocation(line: 1892, column: 5, scope: !7387)
!7438 = !DILocation(line: 1893, column: 1, scope: !7387)
!7439 = !DILocation(line: 1872, column: 16, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 1871, column: 3)
!7441 = !DILocation(line: 1872, column: 38, scope: !7440)
!7442 = !DILocation(line: 1872, column: 55, scope: !7440)
!7443 = !DILocation(line: 1873, column: 44, scope: !7440)
!7444 = distinct !DISubprogram(name: "mark_insn_pseudo_birth", scope: !3, file: !3, line: 1821, type: !7445, scopeLine: 1822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7447)
!7445 = !DISubroutineType(types: !7446)
!7446 = !{null, !644, !611, !610, !610}
!7447 = !{!7448, !7449, !7450, !7451, !7452, !7453, !7454}
!7448 = !DILocalVariable(name: "insn", arg: 1, scope: !7444, file: !3, line: 1821, type: !644)
!7449 = !DILocalVariable(name: "regno", arg: 2, scope: !7444, file: !3, line: 1821, type: !611)
!7450 = !DILocalVariable(name: "clobber_p", arg: 3, scope: !7444, file: !3, line: 1821, type: !610)
!7451 = !DILocalVariable(name: "unused_p", arg: 4, scope: !7444, file: !3, line: 1821, type: !610)
!7452 = !DILocalVariable(name: "incr", scope: !7444, file: !3, line: 1823, type: !611)
!7453 = !DILocalVariable(name: "new_incr", scope: !7444, file: !3, line: 1823, type: !611)
!7454 = !DILocalVariable(name: "cl", scope: !7444, file: !3, line: 1824, type: !578)
!7455 = !DILocation(line: 0, scope: !7444)
!7456 = !DILocation(line: 1826, column: 3, scope: !7444)
!7457 = !DILocation(line: 1827, column: 8, scope: !7444)
!7458 = !DILocation(line: 1828, column: 10, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 1828, column: 7)
!7460 = !DILocation(line: 1828, column: 7, scope: !7444)
!7461 = !DILocation(line: 1830, column: 14, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7459, file: !3, line: 1829, column: 5)
!7463 = !DILocation(line: 1830, column: 38, scope: !7462)
!7464 = !DILocation(line: 1831, column: 11, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 1831, column: 11)
!7466 = !DILocation(line: 1831, column: 11, scope: !7462)
!7467 = !DILocation(line: 1833, column: 37, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1832, column: 2)
!7469 = !DILocation(line: 1833, column: 54, scope: !7468)
!7470 = !DILocation(line: 1834, column: 43, scope: !7468)
!7471 = !DILocation(line: 1835, column: 2, scope: !7468)
!7472 = !DILocation(line: 1836, column: 16, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1836, column: 16)
!7474 = !DILocation(line: 0, scope: !7473)
!7475 = !DILocation(line: 1836, column: 16, scope: !7465)
!7476 = !DILocation(line: 1838, column: 37, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 1837, column: 2)
!7478 = !DILocation(line: 1838, column: 57, scope: !7477)
!7479 = !DILocation(line: 1839, column: 46, scope: !7477)
!7480 = !DILocation(line: 1840, column: 2, scope: !7477)
!7481 = !DILocation(line: 1843, column: 37, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 1842, column: 2)
!7483 = !DILocation(line: 1843, column: 50, scope: !7482)
!7484 = !DILocation(line: 1844, column: 39, scope: !7482)
!7485 = !DILocation(line: 1845, column: 10, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 1845, column: 8)
!7487 = !DILocation(line: 1845, column: 8, scope: !7482)
!7488 = !DILocation(line: 1846, column: 35, scope: !7486)
!7489 = !DILocation(line: 1846, column: 6, scope: !7486)
!7490 = !DILocation(line: 1847, column: 4, scope: !7482)
!7491 = !DILocation(line: 0, scope: !7465)
!7492 = !DILocation(line: 1849, column: 7, scope: !7462)
!7493 = !DILocation(line: 1851, column: 1, scope: !7444)
!7494 = distinct !DISubprogram(name: "insn_use_p", scope: !3, file: !3, line: 1807, type: !7495, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7497)
!7495 = !DISubroutineType(types: !7496)
!7496 = !{!610, !644, !611}
!7497 = !{!7498, !7499, !7500}
!7498 = !DILocalVariable(name: "insn", arg: 1, scope: !7494, file: !3, line: 1807, type: !644)
!7499 = !DILocalVariable(name: "regno", arg: 2, scope: !7494, file: !3, line: 1807, type: !611)
!7500 = !DILocalVariable(name: "use", scope: !7494, file: !3, line: 1809, type: !1831)
!7501 = !DILocation(line: 0, scope: !7494)
!7502 = !DILocation(line: 1811, column: 14, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 1811, column: 3)
!7504 = !DILocation(line: 1811, column: 8, scope: !7503)
!7505 = !DILocation(line: 0, scope: !7503)
!7506 = !DILocation(line: 1811, column: 44, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7503, file: !3, line: 1811, column: 3)
!7508 = !DILocation(line: 1811, column: 3, scope: !7503)
!7509 = !DILocation(line: 1812, column: 14, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7507, file: !3, line: 1812, column: 9)
!7511 = !DILocation(line: 1812, column: 20, scope: !7510)
!7512 = !DILocation(line: 1812, column: 9, scope: !7507)
!7513 = !DILocation(line: 1811, column: 64, scope: !7507)
!7514 = !DILocation(line: 1811, column: 3, scope: !7507)
!7515 = distinct !{!7515, !7508, !7516}
!7516 = !DILocation(line: 1813, column: 14, scope: !7503)
!7517 = !DILocation(line: 1815, column: 1, scope: !7494)
!7518 = distinct !DISubprogram(name: "create_insn_reg_set", scope: !3, file: !3, line: 1753, type: !7519, scopeLine: 1754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7521)
!7519 = !DISubroutineType(types: !7520)
!7520 = !{!1846, !611, !644}
!7521 = !{!7522, !7523, !7524}
!7522 = !DILocalVariable(name: "regno", arg: 1, scope: !7518, file: !3, line: 1753, type: !611)
!7523 = !DILocalVariable(name: "insn", arg: 2, scope: !7518, file: !3, line: 1753, type: !644)
!7524 = !DILocalVariable(name: "set", scope: !7518, file: !3, line: 1755, type: !1846)
!7525 = !DILocation(line: 0, scope: !7518)
!7526 = !DILocation(line: 1757, column: 33, scope: !7518)
!7527 = !DILocation(line: 1757, column: 9, scope: !7518)
!7528 = !DILocation(line: 1758, column: 8, scope: !7518)
!7529 = !DILocation(line: 1758, column: 14, scope: !7518)
!7530 = !DILocation(line: 1759, column: 8, scope: !7518)
!7531 = !DILocation(line: 1759, column: 13, scope: !7518)
!7532 = !DILocation(line: 1760, column: 24, scope: !7518)
!7533 = !DILocation(line: 1760, column: 8, scope: !7518)
!7534 = !DILocation(line: 1760, column: 22, scope: !7518)
!7535 = !DILocation(line: 1761, column: 3, scope: !7518)
!7536 = !DILocation(line: 1761, column: 28, scope: !7518)
!7537 = !DILocation(line: 1762, column: 3, scope: !7518)
!7538 = distinct !DISubprogram(name: "mark_hard_regno_death", scope: !3, file: !3, line: 1939, type: !7539, scopeLine: 1940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7541)
!7539 = !DISubroutineType(types: !7540)
!7540 = !{null, !611, !611}
!7541 = !{!7542, !7543, !7544, !7545}
!7542 = !DILocalVariable(name: "regno", arg: 1, scope: !7538, file: !3, line: 1939, type: !611)
!7543 = !DILocalVariable(name: "nregs", arg: 2, scope: !7538, file: !3, line: 1939, type: !611)
!7544 = !DILocalVariable(name: "cl", scope: !7538, file: !3, line: 1941, type: !578)
!7545 = !DILocalVariable(name: "last", scope: !7538, file: !3, line: 1942, type: !611)
!7546 = !DILocation(line: 0, scope: !7538)
!7547 = !DILocation(line: 1942, column: 20, scope: !7538)
!7548 = !DILocation(line: 1944, column: 3, scope: !7538)
!7549 = !DILocation(line: 1944, column: 16, scope: !7538)
!7550 = !DILocation(line: 1946, column: 7, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 1945, column: 5)
!7552 = !DILocation(line: 1947, column: 13, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7551, file: !3, line: 1947, column: 11)
!7554 = !DILocation(line: 1947, column: 11, scope: !7551)
!7555 = !DILocation(line: 1949, column: 9, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 1948, column: 2)
!7557 = !DILocation(line: 1950, column: 11, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 1950, column: 8)
!7559 = !DILocation(line: 1950, column: 8, scope: !7556)
!7560 = !DILocation(line: 1951, column: 6, scope: !7558)
!7561 = !DILocation(line: 1951, column: 28, scope: !7558)
!7562 = !DILocation(line: 1951, column: 35, scope: !7558)
!7563 = !DILocation(line: 1953, column: 12, scope: !7551)
!7564 = distinct !{!7564, !7548, !7565}
!7565 = !DILocation(line: 1954, column: 5, scope: !7538)
!7566 = !DILocation(line: 1955, column: 1, scope: !7538)
!7567 = distinct !DISubprogram(name: "mark_pseudo_death", scope: !3, file: !3, line: 1922, type: !1901, scopeLine: 1923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7568)
!7568 = !{!7569, !7570, !7571}
!7569 = !DILocalVariable(name: "regno", arg: 1, scope: !7567, file: !3, line: 1922, type: !611)
!7570 = !DILocalVariable(name: "incr", scope: !7567, file: !3, line: 1924, type: !611)
!7571 = !DILocalVariable(name: "cl", scope: !7567, file: !3, line: 1925, type: !578)
!7572 = !DILocation(line: 0, scope: !7567)
!7573 = !DILocation(line: 1927, column: 3, scope: !7567)
!7574 = !DILocation(line: 1928, column: 8, scope: !7567)
!7575 = !DILocation(line: 1929, column: 10, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 1929, column: 7)
!7577 = !DILocation(line: 1929, column: 7, scope: !7567)
!7578 = !DILocation(line: 1931, column: 14, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 1930, column: 5)
!7580 = !DILocation(line: 1931, column: 38, scope: !7579)
!7581 = !DILocation(line: 1932, column: 29, scope: !7579)
!7582 = !DILocation(line: 1932, column: 36, scope: !7579)
!7583 = !DILocation(line: 1933, column: 5, scope: !7579)
!7584 = !DILocation(line: 1934, column: 1, scope: !7567)
!7585 = distinct !DISubprogram(name: "delete_all_dependences", scope: !3, file: !3, line: 1473, type: !1889, scopeLine: 1474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7586)
!7586 = !{!7587, !7588, !7589}
!7587 = !DILocalVariable(name: "insn", arg: 1, scope: !7585, file: !3, line: 1473, type: !644)
!7588 = !DILocalVariable(name: "sd_it", scope: !7585, file: !3, line: 1475, type: !1970)
!7589 = !DILocalVariable(name: "dep", scope: !7585, file: !3, line: 1476, type: !2485)
!7590 = !DILocation(line: 0, scope: !7585)
!7591 = !DILocation(line: 1475, column: 3, scope: !7585)
!7592 = !DILocation(line: 1476, column: 3, scope: !7585)
!7593 = !DILocation(line: 1482, column: 16, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 1482, column: 3)
!7595 = !DILocation(line: 1482, column: 8, scope: !7594)
!7596 = !DILocation(line: 1483, column: 8, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 1482, column: 3)
!7598 = !DILocation(line: 1482, column: 3, scope: !7594)
!7599 = !DILocation(line: 1484, column: 5, scope: !7597)
!7600 = !DILocation(line: 1482, column: 3, scope: !7597)
!7601 = distinct !{!7601, !7598, !7602}
!7602 = !DILocation(line: 1484, column: 25, scope: !7594)
!7603 = !DILocation(line: 1485, column: 1, scope: !7585)
!7604 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_base_length", scope: !562, file: !562, line: 846, type: !7605, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7609)
!7605 = !DISubroutineType(types: !7606)
!7606 = !{!7, !7607}
!7607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7608, size: 64)
!7608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1858)
!7609 = !{!7610}
!7610 = !DILocalVariable(name: "vec_", arg: 1, scope: !7604, file: !562, line: 846, type: !7607)
!7611 = !DILocation(line: 0, scope: !7604)
!7612 = !DILocation(line: 846, column: 1, scope: !7604)
!7613 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_base_space", scope: !562, file: !562, line: 846, type: !7614, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7616)
!7614 = !DISubroutineType(types: !7615)
!7615 = !{!611, !2755, !611}
!7616 = !{!7617, !7618}
!7617 = !DILocalVariable(name: "vec_", arg: 1, scope: !7613, file: !562, line: 846, type: !2755)
!7618 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7613, file: !562, line: 846, type: !611)
!7619 = !DILocation(line: 0, scope: !7613)
!7620 = !DILocation(line: 846, column: 1, scope: !7613)
!7621 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_heap_safe_grow_cleared", scope: !562, file: !562, line: 847, type: !7622, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7624)
!7622 = !DISubroutineType(types: !7623)
!7623 = !{null, !5609, !611}
!7624 = !{!7625, !7626, !7627}
!7625 = !DILocalVariable(name: "vec_", arg: 1, scope: !7621, file: !562, line: 847, type: !5609)
!7626 = !DILocalVariable(name: "size_", arg: 2, scope: !7621, file: !562, line: 847, type: !611)
!7627 = !DILocalVariable(name: "oldsize", scope: !7621, file: !562, line: 847, type: !611)
!7628 = !DILocation(line: 0, scope: !7621)
!7629 = !DILocation(line: 847, column: 1, scope: !7621)
!7630 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_heap_safe_grow", scope: !562, file: !562, line: 847, type: !7622, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7631)
!7631 = !{!7632, !7633}
!7632 = !DILocalVariable(name: "vec_", arg: 1, scope: !7630, file: !562, line: 847, type: !5609)
!7633 = !DILocalVariable(name: "size_", arg: 2, scope: !7630, file: !562, line: 847, type: !611)
!7634 = !DILocation(line: 0, scope: !7630)
!7635 = !DILocation(line: 847, column: 1, scope: !7630)
!7636 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_base_address", scope: !562, file: !562, line: 846, type: !7637, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7639)
!7637 = !DISubroutineType(types: !7638)
!7638 = !{!2754, !2755}
!7639 = !{!7640}
!7640 = !DILocalVariable(name: "vec_", arg: 1, scope: !7636, file: !562, line: 846, type: !2755)
!7641 = !DILocation(line: 0, scope: !7636)
!7642 = !DILocation(line: 846, column: 1, scope: !7636)
!7643 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_heap_reserve_exact", scope: !562, file: !562, line: 847, type: !7644, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7646)
!7644 = !DISubroutineType(types: !7645)
!7645 = !{!611, !5609, !611}
!7646 = !{!7647, !7648, !7649}
!7647 = !DILocalVariable(name: "vec_", arg: 1, scope: !7643, file: !562, line: 847, type: !5609)
!7648 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7643, file: !562, line: 847, type: !611)
!7649 = !DILocalVariable(name: "extend", scope: !7643, file: !562, line: 847, type: !611)
!7650 = !DILocation(line: 0, scope: !7643)
!7651 = !DILocation(line: 847, column: 1, scope: !7643)
!7652 = !DILocation(line: 847, column: 1, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7643, file: !562, line: 847, column: 1)
!7654 = distinct !DISubprogram(name: "maybe_add_or_update_dep_1", scope: !3, file: !3, line: 844, type: !3329, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7655)
!7655 = !{!7656, !7657, !7658, !7659, !7660, !7661}
!7656 = !DILocalVariable(name: "dep", arg: 1, scope: !7654, file: !3, line: 844, type: !2485)
!7657 = !DILocalVariable(name: "resolved_p", arg: 2, scope: !7654, file: !3, line: 844, type: !610)
!7658 = !DILocalVariable(name: "mem1", arg: 3, scope: !7654, file: !3, line: 844, type: !644)
!7659 = !DILocalVariable(name: "mem2", arg: 4, scope: !7654, file: !3, line: 844, type: !644)
!7660 = !DILocalVariable(name: "elem", scope: !7654, file: !3, line: 846, type: !644)
!7661 = !DILocalVariable(name: "insn", scope: !7654, file: !3, line: 847, type: !644)
!7662 = !DILocation(line: 0, scope: !7654)
!7663 = !DILocation(line: 846, column: 14, scope: !7654)
!7664 = !DILocation(line: 847, column: 14, scope: !7654)
!7665 = !DILocation(line: 849, column: 3, scope: !7654)
!7666 = !DILocation(line: 852, column: 12, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 852, column: 7)
!7668 = !DILocation(line: 852, column: 7, scope: !7654)
!7669 = !DILocation(line: 854, column: 11, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 854, column: 11)
!7671 = distinct !DILexicalBlock(scope: !7667, file: !3, line: 853, column: 5)
!7672 = !DILocation(line: 854, column: 28, scope: !7670)
!7673 = !DILocation(line: 854, column: 11, scope: !7671)
!7674 = !DILocation(line: 856, column: 9, scope: !7670)
!7675 = !DILocation(line: 856, column: 33, scope: !7670)
!7676 = !DILocation(line: 861, column: 10, scope: !7654)
!7677 = !DILocation(line: 861, column: 3, scope: !7654)
!7678 = !DILocation(line: 862, column: 1, scope: !7654)
