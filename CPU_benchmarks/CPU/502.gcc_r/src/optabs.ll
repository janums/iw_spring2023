; ModuleID = 'optabs.bc'
source_filename = "optabs.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.convert_optab_d = type { i32, i8*, void (%struct.convert_optab_d*, i8*, i32, i32)*, [87 x [87 x %struct.optab_handlers]] }
%struct.optab_handlers = type { i32 }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.optab_d = type { i32, i8*, i8, void (%struct.optab_d*, i8*, i8, i32)*, [87 x %struct.optab_handlers] }
%struct.insn_data = type { i8*, %union.anon.0, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%union.anon.0 = type { i8* }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.rtl_hooks = type { %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (i32, %struct.rtx_def*)* }
%struct.real_format = type { void (%struct.real_format*, i64*, %struct.real_value*)*, void (%struct.real_format*, %struct.real_value*, i64*)*, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.real_value = type { i32, [3 x i64] }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.libfunc_entry = type { i64, i32, i32, %struct.rtx_def* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.separate_ops = type { i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.no_conflict_data = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i8*, i32, i32 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@convert_optab_table = common dso_local global [17 x %struct.convert_optab_d] zeroinitializer, align 16, !dbg !0
@libfunc_hash = internal global %struct.htab* null, align 8, !dbg !3301
@optab_table = common dso_local global [159 x %struct.optab_d] zeroinitializer, align 16, !dbg !3261
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@.str = private unnamed_addr constant [9 x i8] c"optabs.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@flag_trapv = external dso_local local_unnamed_addr global i32, align 4
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@insn_data = external dso_local local_unnamed_addr constant [0 x %struct.insn_data], align 8
@code_to_optab = common dso_local local_unnamed_addr global [140 x %struct.optab_d*] zeroinitializer, align 16, !dbg !3288
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@mode_wider = external dso_local local_unnamed_addr constant [87 x i8], align 16
@rtl_hooks = external dso_local local_unnamed_addr global %struct.rtl_hooks, align 8
@word_mode = external dso_local local_unnamed_addr global i32, align 4
@const_tiny_rtx = external dso_local local_unnamed_addr global [3 x [87 x %struct.rtx_def*]], align 16
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@real_format_for_mode = external dso_local local_unnamed_addr global [7 x %struct.real_format*], align 16
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@flag_signed_zeros = external dso_local local_unnamed_addr global i32, align 4
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@ix86_branch_cost = external dso_local local_unnamed_addr global i32, align 4
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@flag_non_call_exceptions = external dso_local local_unnamed_addr global i32, align 4
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@movcc_gen_code = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3294
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@libfunc_decls = internal global %struct.htab* null, align 8, !dbg !3303
@vcond_gen_code = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3297
@vcondu_gen_code = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3299
@movmem_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@cmpstr_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@cmpstrn_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@cmpmem_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@setmem_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_add_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_sub_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_ior_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_and_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_xor_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_nand_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_old_add_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_old_sub_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_old_ior_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_old_and_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_old_xor_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_old_nand_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_new_add_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_new_sub_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_new_ior_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_new_and_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_new_xor_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_new_nand_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_compare_and_swap = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_lock_test_and_set = external dso_local local_unnamed_addr global [87 x i32], align 16
@sync_lock_release = external dso_local local_unnamed_addr global [87 x i32], align 16
@reload_out_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@reload_in_optab = external dso_local local_unnamed_addr global [87 x i32], align 16
@.str.2 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"ssadd\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"usadd\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"sssub\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"ussub\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"mul\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"ssmul\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"usmul\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"div\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"divv\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"ssdiv\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"udiv\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"usdiv\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"divmod\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"udivmod\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"mod\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"umod\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"ftrunc\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"ior\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"xor\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"ashl\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"ssashl\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"usashl\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"ashr\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"lshr\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"umin\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"umax\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"neg\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"ssneg\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"usneg\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"one_cmpl\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"ffs\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"clz\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"ctz\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"popcount\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"parity\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"cmp\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"ucmp\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"eq\00", align 1
@.str.45 = private unnamed_addr constant [3 x i8] c"ne\00", align 1
@.str.46 = private unnamed_addr constant [3 x i8] c"gt\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"ge\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"le\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"unord\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"powi\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"fix\00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"fixuns\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"lrint\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"lround\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"lfloor\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"lceil\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"trunc\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"fract\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"satfract\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"fractuns\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"satfractuns\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"__bswapsi2\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"__bswapdi2\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"cabs\00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"abort\00", align 1
@libfunc_table = common dso_local local_unnamed_addr global [14 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3283
@.str.69 = private unnamed_addr constant [7 x i8] c"memcpy\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"memmove\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c"memcmp\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"memset\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"__setbits\00", align 1
@.str.74 = private unnamed_addr constant [17 x i8] c"__builtin_setjmp\00", align 1
@.str.75 = private unnamed_addr constant [18 x i8] c"__builtin_longjmp\00", align 1
@.str.76 = private unnamed_addr constant [22 x i8] c"_Unwind_SjLj_Register\00", align 1
@.str.77 = private unnamed_addr constant [24 x i8] c"_Unwind_SjLj_Unregister\00", align 1
@.str.78 = private unnamed_addr constant [25 x i8] c"__cyg_profile_func_enter\00", align 1
@.str.79 = private unnamed_addr constant [24 x i8] c"__cyg_profile_func_exit\00", align 1
@.str.80 = private unnamed_addr constant [13 x i8] c"__gcov_flush\00", align 1
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.81 = private unnamed_addr constant [11 x i8] c"%s\09%s:\09%s\0A\00", align 1
@rtx_name = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@mode_name = external dso_local local_unnamed_addr constant [87 x i8*], align 16
@.str.82 = private unnamed_addr constant [14 x i8] c"%s\09%s\09%s:\09%s\0A\00", align 1
@gt_ggc_r_gt_optabs_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.htab** @libfunc_decls to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P9tree_node4htab, void (i8*)* @gt_pch_n_P9tree_node4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @libfunc_hash to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P13libfunc_entry4htab, void (i8*)* @gt_pch_n_P13libfunc_entry4htab }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !3247
@mode_nunits = external dso_local local_unnamed_addr constant [87 x i8], align 16
@optimize = external dso_local local_unnamed_addr global i32, align 4
@class_narrowest_mode = external dso_local local_unnamed_addr constant [18 x i8], align 16
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@const_true_rtx = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@_sch_tolower = external dso_local local_unnamed_addr constant [256 x i8], align 16
@.str.83 = private unnamed_addr constant [5 x i8] c"bid_\00", align 1
@.str.84 = private unnamed_addr constant [9 x i8] c"floatuns\00", align 1
@.str.85 = private unnamed_addr constant [8 x i8] c"floatun\00", align 1
@mode_precision = external dso_local local_unnamed_addr constant [87 x i16], align 16
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !3324 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !3337, metadata !DIExpression()), !dbg !3339
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !3338, metadata !DIExpression()), !dbg !3339
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3340
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !3341
  ret i32 %call, !dbg !3342
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !3343 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3347
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !3348
  ret i32 %call, !dbg !3349
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !3350 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !3404, metadata !DIExpression()), !dbg !3405
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !3406
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3406
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !3406
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !3406
  %cmp = icmp uge i8* %0, %1, !dbg !3406
  %conv1 = zext i1 %cmp to i64, !dbg !3406
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3406
  %tobool = icmp eq i64 %expval, 0, !dbg !3406
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3406

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !3406
  br label %cond.end, !dbg !3406

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3406
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3406
  %2 = load i8, i8* %0, align 1, !dbg !3406
  %conv3 = zext i8 %2 to i32, !dbg !3406
  br label %cond.end, !dbg !3406

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3406
  ret i32 %cond, !dbg !3407
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !3408 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !3410, metadata !DIExpression()), !dbg !3411
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !3412
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3412
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !3412
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !3412
  %cmp = icmp uge i8* %0, %1, !dbg !3412
  %conv1 = zext i1 %cmp to i64, !dbg !3412
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3412
  %tobool = icmp eq i64 %expval, 0, !dbg !3412
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3412

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !3412
  br label %cond.end, !dbg !3412

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3412
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3412
  %2 = load i8, i8* %0, align 1, !dbg !3412
  %conv3 = zext i8 %2 to i32, !dbg !3412
  br label %cond.end, !dbg !3412

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3412
  ret i32 %cond, !dbg !3413
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !3414 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3415
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !3415
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3415
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !3415
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !3415
  %cmp = icmp uge i8* %1, %2, !dbg !3415
  %conv1 = zext i1 %cmp to i64, !dbg !3415
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3415
  %tobool = icmp eq i64 %expval, 0, !dbg !3415
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3415

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !3415
  br label %cond.end, !dbg !3415

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3415
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3415
  %3 = load i8, i8* %1, align 1, !dbg !3415
  %conv3 = zext i8 %3 to i32, !dbg !3415
  br label %cond.end, !dbg !3415

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3415
  ret i32 %cond, !dbg !3416
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !3417 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3421, metadata !DIExpression()), !dbg !3422
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3423
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !3424
  ret i32 %call, !dbg !3425
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3426 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3430, metadata !DIExpression()), !dbg !3432
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3431, metadata !DIExpression()), !dbg !3432
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !3433
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3433
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !3433
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !3433
  %cmp = icmp uge i8* %0, %1, !dbg !3433
  %conv1 = zext i1 %cmp to i64, !dbg !3433
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3433
  %tobool = icmp eq i64 %expval, 0, !dbg !3433
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3433

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3433
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !3433
  br label %cond.end, !dbg !3433

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !3433
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3433
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3433
  store i8 %conv2, i8* %0, align 1, !dbg !3433
  %conv6 = and i32 %__c, 255, !dbg !3433
  br label %cond.end, !dbg !3433

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3433
  ret i32 %cond, !dbg !3434
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3435 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3437, metadata !DIExpression()), !dbg !3439
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3438, metadata !DIExpression()), !dbg !3439
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !3440
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3440
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !3440
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !3440
  %cmp = icmp uge i8* %0, %1, !dbg !3440
  %conv1 = zext i1 %cmp to i64, !dbg !3440
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3440
  %tobool = icmp eq i64 %expval, 0, !dbg !3440
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3440

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3440
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !3440
  br label %cond.end, !dbg !3440

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !3440
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3440
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3440
  store i8 %conv2, i8* %0, align 1, !dbg !3440
  %conv6 = and i32 %__c, 255, !dbg !3440
  br label %cond.end, !dbg !3440

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3440
  ret i32 %cond, !dbg !3441
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !3442 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3444, metadata !DIExpression()), !dbg !3445
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3446
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !3446
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3446
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !3446
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !3446
  %cmp = icmp uge i8* %1, %2, !dbg !3446
  %conv1 = zext i1 %cmp to i64, !dbg !3446
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3446
  %tobool = icmp eq i64 %expval, 0, !dbg !3446
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3446

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3446
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !3446
  br label %cond.end, !dbg !3446

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !3446
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3446
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3446
  store i8 %conv4, i8* %1, align 1, !dbg !3446
  %conv6 = and i32 %__c, 255, !dbg !3446
  br label %cond.end, !dbg !3446

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3446
  ret i32 %cond, !dbg !3447
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3448 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !3454, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i64* %__n, metadata !3455, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3456, metadata !DIExpression()), !dbg !3457
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !3458
  ret i64 %call, !dbg !3459
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3460 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3462, metadata !DIExpression()), !dbg !3463
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !3464
  %0 = load i32, i32* %_flags, align 8, !dbg !3464
  %and = lshr i32 %0, 4, !dbg !3464
  %and.lobit = and i32 %and, 1, !dbg !3464
  ret i32 %and.lobit, !dbg !3465
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3466 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3468, metadata !DIExpression()), !dbg !3469
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !3470
  %0 = load i32, i32* %_flags, align 8, !dbg !3470
  %and = lshr i32 %0, 5, !dbg !3470
  %and.lobit = and i32 %and, 1, !dbg !3470
  ret i32 %and.lobit, !dbg !3471
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !3472 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3475, metadata !DIExpression()), !dbg !3476
  %__c.off = add i32 %__c, 128, !dbg !3477
  %0 = icmp ult i32 %__c.off, 384, !dbg !3477
  br i1 %0, label %cond.true, label %cond.end, !dbg !3477

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !3478
  %1 = load i32*, i32** %call, align 8, !dbg !3479
  %idxprom = sext i32 %__c to i64, !dbg !3480
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !3480
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3480
  br label %cond.end, !dbg !3481

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !3481
  ret i32 %cond, !dbg !3482
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !3483 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3485, metadata !DIExpression()), !dbg !3486
  %__c.off = add i32 %__c, 128, !dbg !3487
  %0 = icmp ult i32 %__c.off, 384, !dbg !3487
  br i1 %0, label %cond.true, label %cond.end, !dbg !3487

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !3488
  %1 = load i32*, i32** %call, align 8, !dbg !3489
  %idxprom = sext i32 %__c to i64, !dbg !3490
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !3490
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3490
  br label %cond.end, !dbg !3491

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !3491
  ret i32 %cond, !dbg !3492
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !3493 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3498, metadata !DIExpression()), !dbg !3499
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !3500
  %conv = trunc i64 %call to i32, !dbg !3501
  ret i32 %conv, !dbg !3502
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !3503 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3507, metadata !DIExpression()), !dbg !3508
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !3509
  ret i64 %call, !dbg !3510
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !3511 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3516, metadata !DIExpression()), !dbg !3517
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !3518
  ret i64 %call, !dbg !3519
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !3520 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !3526, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.value(metadata i8* %__base, metadata !3527, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !3528, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.value(metadata i64 %__size, metadata !3529, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !3530, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.value(metadata i64 0, metadata !3531, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !3532, metadata !DIExpression()), !dbg !3536
  br label %while.cond, !dbg !3537

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !3538
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !3536
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !3532, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !3531, metadata !DIExpression()), !dbg !3536
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !3539
  br i1 %cmp, label %while.body, label %cleanup, !dbg !3537

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !3540
  %div = lshr i64 %add, 1, !dbg !3542
  call void @llvm.dbg.value(metadata i64 %div, metadata !3533, metadata !DIExpression()), !dbg !3536
  %mul = mul i64 %div, %__size, !dbg !3543
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !3544
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !3534, metadata !DIExpression()), !dbg !3536
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !3545
  call void @llvm.dbg.value(metadata i32 %call, metadata !3535, metadata !DIExpression()), !dbg !3536
  %cmp1 = icmp slt i32 %call, 0, !dbg !3546
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !3548

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !3549
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !3551

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !3552
  call void @llvm.dbg.value(metadata i64 %add4, metadata !3531, metadata !DIExpression()), !dbg !3536
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !3536
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !3536
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !3532, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !3531, metadata !DIExpression()), !dbg !3536
  br label %while.cond, !dbg !3537, !llvm.loop !3553

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !3536
  ret i8* %retval.0, !dbg !3555
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !3556 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3562, metadata !DIExpression()), !dbg !3563
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !3564
  ret double %call, !dbg !3565
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3566 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3575, metadata !DIExpression()), !dbg !3578
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3576, metadata !DIExpression()), !dbg !3578
  call void @llvm.dbg.value(metadata i32 %base, metadata !3577, metadata !DIExpression()), !dbg !3578
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !3579
  ret i64 %call, !dbg !3580
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3581 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3587, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3588, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i32 %base, metadata !3589, metadata !DIExpression()), !dbg !3590
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !3591
  ret i64 %call, !dbg !3592
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3593 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3604, metadata !DIExpression()), !dbg !3607
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3605, metadata !DIExpression()), !dbg !3607
  call void @llvm.dbg.value(metadata i32 %base, metadata !3606, metadata !DIExpression()), !dbg !3607
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !3608
  ret i64 %call, !dbg !3609
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3610 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3614, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3615, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 %base, metadata !3616, metadata !DIExpression()), !dbg !3617
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !3618
  ret i64 %call, !dbg !3619
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3620 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3660, metadata !DIExpression()), !dbg !3662
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3661, metadata !DIExpression()), !dbg !3662
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !3663
  ret i32 %call, !dbg !3664
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3665 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3667, metadata !DIExpression()), !dbg !3669
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3668, metadata !DIExpression()), !dbg !3669
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !3670
  ret i32 %call, !dbg !3671
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3672 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3676, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3677, metadata !DIExpression()), !dbg !3678
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !3679
  ret i32 %call, !dbg !3680
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !3681 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3685, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !3686, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3687, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !3688, metadata !DIExpression()), !dbg !3689
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !3690
  ret i32 %call, !dbg !3691
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !3692 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3696, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !3697, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !3698, metadata !DIExpression()), !dbg !3699
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !3698, metadata !DIExpression(DW_OP_deref)), !dbg !3699
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !3700
  ret i32 %call, !dbg !3701
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !3702 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3706, metadata !DIExpression()), !dbg !3710
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3707, metadata !DIExpression()), !dbg !3710
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !3708, metadata !DIExpression()), !dbg !3710
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !3709, metadata !DIExpression()), !dbg !3710
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !3709, metadata !DIExpression(DW_OP_deref)), !dbg !3710
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !3711
  ret i32 %call, !dbg !3712
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3713 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3737, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3738, metadata !DIExpression()), !dbg !3739
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !3740
  ret i32 %call, !dbg !3741
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3742 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3744, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3745, metadata !DIExpression()), !dbg !3746
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !3747
  ret i32 %call, !dbg !3748
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3749 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3753, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3754, metadata !DIExpression()), !dbg !3755
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !3756
  ret i32 %call, !dbg !3757
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !3758 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3762, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !3763, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3764, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !3765, metadata !DIExpression()), !dbg !3766
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !3767
  ret i32 %call, !dbg !3768
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @convert_optab_libfunc(%struct.convert_optab_d* %optab, i32 %mode1, i32 %mode2) local_unnamed_addr #4 !dbg !3769 {
entry:
  %e = alloca %struct.libfunc_entry, align 8
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %optab, metadata !3774, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.value(metadata i32 %mode1, metadata !3775, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.value(metadata i32 %mode2, metadata !3776, metadata !DIExpression()), !dbg !3779
  %0 = bitcast %struct.libfunc_entry* %e to i8*, !dbg !3780
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3780
  %sub.ptr.lhs.cast = ptrtoint %struct.convert_optab_d* %optab to i64, !dbg !3781
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([17 x %struct.convert_optab_d]* @convert_optab_table to i64), !dbg !3781
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 30304, !dbg !3781
  %optab1 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %e, i64 0, i32 0, !dbg !3782
  store i64 %sub.ptr.div, i64* %optab1, align 8, !dbg !3783
  %mode12 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %e, i64 0, i32 1, !dbg !3784
  store i32 %mode1, i32* %mode12, align 8, !dbg !3785
  %mode23 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %e, i64 0, i32 2, !dbg !3786
  store i32 %mode2, i32* %mode23, align 4, !dbg !3787
  %1 = load %struct.htab*, %struct.htab** @libfunc_hash, align 8, !dbg !3788
  %call = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 0) #6, !dbg !3789
  call void @llvm.dbg.value(metadata i8** %call, metadata !3778, metadata !DIExpression()), !dbg !3779
  %tobool = icmp eq i8** %call, null, !dbg !3790
  br i1 %tobool, label %if.then, label %if.end10, !dbg !3792

if.then:                                          ; preds = %entry
  %libcall_gen = getelementptr inbounds %struct.convert_optab_d, %struct.convert_optab_d* %optab, i64 0, i32 2, !dbg !3793
  %2 = load void (%struct.convert_optab_d*, i8*, i32, i32)*, void (%struct.convert_optab_d*, i8*, i32, i32)** %libcall_gen, align 8, !dbg !3793
  %tobool4 = icmp eq void (%struct.convert_optab_d*, i8*, i32, i32)* %2, null, !dbg !3796
  br i1 %tobool4, label %cleanup, label %if.then5, !dbg !3797

if.then5:                                         ; preds = %if.then
  %libcall_basename = getelementptr inbounds %struct.convert_optab_d, %struct.convert_optab_d* %optab, i64 0, i32 1, !dbg !3798
  %3 = load i8*, i8** %libcall_basename, align 8, !dbg !3798
  call void %2(%struct.convert_optab_d* %optab, i8* %3, i32 %mode1, i32 %mode2) #6, !dbg !3800
  %4 = load %struct.htab*, %struct.htab** @libfunc_hash, align 8, !dbg !3801
  %call7 = call i8** @htab_find_slot(%struct.htab* %4, i8* nonnull %0, i32 0) #6, !dbg !3802
  call void @llvm.dbg.value(metadata i8** %call7, metadata !3778, metadata !DIExpression()), !dbg !3779
  %tobool8 = icmp eq i8** %call7, null, !dbg !3803
  br i1 %tobool8, label %cleanup, label %if.then9, !dbg !3805

if.then9:                                         ; preds = %if.then5
  %5 = bitcast i8** %call7 to %struct.libfunc_entry**, !dbg !3806
  call void @llvm.dbg.value(metadata %struct.libfunc_entry** %5, metadata !3778, metadata !DIExpression()), !dbg !3779
  %6 = load %struct.libfunc_entry*, %struct.libfunc_entry** %5, align 8, !dbg !3807
  %libfunc = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %6, i64 0, i32 3, !dbg !3808
  %7 = load %struct.rtx_def*, %struct.rtx_def** %libfunc, align 8, !dbg !3808
  br label %cleanup, !dbg !3809

if.end10:                                         ; preds = %entry
  %8 = bitcast i8** %call to %struct.libfunc_entry**, !dbg !3810
  call void @llvm.dbg.value(metadata %struct.libfunc_entry** %8, metadata !3778, metadata !DIExpression()), !dbg !3779
  %9 = load %struct.libfunc_entry*, %struct.libfunc_entry** %8, align 8, !dbg !3811
  %libfunc11 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %9, i64 0, i32 3, !dbg !3812
  %10 = load %struct.rtx_def*, %struct.rtx_def** %libfunc11, align 8, !dbg !3812
  br label %cleanup, !dbg !3813

cleanup:                                          ; preds = %if.then5, %if.then, %if.end10, %if.then9
  %retval.0 = phi %struct.rtx_def* [ %10, %if.end10 ], [ %7, %if.then9 ], [ null, %if.then5 ], [ null, %if.then ], !dbg !3779
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3814
  ret %struct.rtx_def* %retval.0, !dbg !3814
}

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @optab_libfunc(%struct.optab_d* %optab, i32 %mode) local_unnamed_addr #4 !dbg !3815 {
entry:
  %e = alloca %struct.libfunc_entry, align 8
  call void @llvm.dbg.value(metadata %struct.optab_d* %optab, metadata !3819, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3820, metadata !DIExpression()), !dbg !3823
  %0 = bitcast %struct.libfunc_entry* %e to i8*, !dbg !3824
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3824
  %sub.ptr.lhs.cast = ptrtoint %struct.optab_d* %optab to i64, !dbg !3825
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([159 x %struct.optab_d]* @optab_table to i64), !dbg !3825
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 384, !dbg !3825
  %optab1 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %e, i64 0, i32 0, !dbg !3826
  store i64 %sub.ptr.div, i64* %optab1, align 8, !dbg !3827
  %mode1 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %e, i64 0, i32 1, !dbg !3828
  store i32 %mode, i32* %mode1, align 8, !dbg !3829
  %mode2 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %e, i64 0, i32 2, !dbg !3830
  store i32 0, i32* %mode2, align 4, !dbg !3831
  %1 = load %struct.htab*, %struct.htab** @libfunc_hash, align 8, !dbg !3832
  %call = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 0) #6, !dbg !3833
  call void @llvm.dbg.value(metadata i8** %call, metadata !3822, metadata !DIExpression()), !dbg !3823
  %tobool = icmp eq i8** %call, null, !dbg !3834
  br i1 %tobool, label %if.then, label %if.end8, !dbg !3836

if.then:                                          ; preds = %entry
  %libcall_gen = getelementptr inbounds %struct.optab_d, %struct.optab_d* %optab, i64 0, i32 3, !dbg !3837
  %2 = load void (%struct.optab_d*, i8*, i8, i32)*, void (%struct.optab_d*, i8*, i8, i32)** %libcall_gen, align 8, !dbg !3837
  %tobool2 = icmp eq void (%struct.optab_d*, i8*, i8, i32)* %2, null, !dbg !3840
  br i1 %tobool2, label %cleanup, label %if.then3, !dbg !3841

if.then3:                                         ; preds = %if.then
  %libcall_basename = getelementptr inbounds %struct.optab_d, %struct.optab_d* %optab, i64 0, i32 1, !dbg !3842
  %3 = load i8*, i8** %libcall_basename, align 8, !dbg !3842
  %libcall_suffix = getelementptr inbounds %struct.optab_d, %struct.optab_d* %optab, i64 0, i32 2, !dbg !3844
  %4 = load i8, i8* %libcall_suffix, align 8, !dbg !3844
  call void %2(%struct.optab_d* %optab, i8* %3, i8 signext %4, i32 %mode) #6, !dbg !3845
  %5 = load %struct.htab*, %struct.htab** @libfunc_hash, align 8, !dbg !3846
  %call5 = call i8** @htab_find_slot(%struct.htab* %5, i8* nonnull %0, i32 0) #6, !dbg !3847
  call void @llvm.dbg.value(metadata i8** %call5, metadata !3822, metadata !DIExpression()), !dbg !3823
  %tobool6 = icmp eq i8** %call5, null, !dbg !3848
  br i1 %tobool6, label %cleanup, label %if.then7, !dbg !3850

if.then7:                                         ; preds = %if.then3
  %6 = bitcast i8** %call5 to %struct.libfunc_entry**, !dbg !3851
  call void @llvm.dbg.value(metadata %struct.libfunc_entry** %6, metadata !3822, metadata !DIExpression()), !dbg !3823
  %7 = load %struct.libfunc_entry*, %struct.libfunc_entry** %6, align 8, !dbg !3852
  %libfunc = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %7, i64 0, i32 3, !dbg !3853
  %8 = load %struct.rtx_def*, %struct.rtx_def** %libfunc, align 8, !dbg !3853
  br label %cleanup, !dbg !3854

if.end8:                                          ; preds = %entry
  %9 = bitcast i8** %call to %struct.libfunc_entry**, !dbg !3855
  call void @llvm.dbg.value(metadata %struct.libfunc_entry** %9, metadata !3822, metadata !DIExpression()), !dbg !3823
  %10 = load %struct.libfunc_entry*, %struct.libfunc_entry** %9, align 8, !dbg !3856
  %libfunc9 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %10, i64 0, i32 3, !dbg !3857
  %11 = load %struct.rtx_def*, %struct.rtx_def** %libfunc9, align 8, !dbg !3857
  br label %cleanup, !dbg !3858

cleanup:                                          ; preds = %if.then3, %if.then, %if.end8, %if.then7
  %retval.0 = phi %struct.rtx_def* [ %11, %if.end8 ], [ %8, %if.then7 ], [ null, %if.then3 ], [ null, %if.then ], !dbg !3823
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3859
  ret %struct.rtx_def* %retval.0, !dbg !3859
}

; Function Attrs: nounwind uwtable
define dso_local %struct.optab_d* @optab_for_tree_code(i32 %code, %union.tree_node* %type, i32 %subtype) local_unnamed_addr #4 !dbg !3860 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !3864, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3865, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i32 %subtype, metadata !3866, metadata !DIExpression()), !dbg !3868
  switch i32 %code, label %sw.epilog [
    i32 89, label %cleanup
    i32 87, label %sw.bb1
    i32 90, label %sw.bb2
    i32 88, label %sw.bb3
    i32 71, label %sw.bb4
    i32 72, label %sw.bb4
    i32 73, label %sw.bb4
    i32 74, label %sw.bb4
    i32 75, label %sw.bb5
    i32 67, label %sw.bb5
    i32 68, label %sw.bb5
    i32 69, label %sw.bb5
    i32 70, label %sw.bb5
    i32 76, label %sw.bb5
    i32 83, label %sw.bb26
    i32 84, label %sw.bb181
    i32 85, label %sw.bb339
    i32 86, label %sw.bb483
    i32 81, label %sw.bb627
    i32 80, label %sw.bb635
    i32 151, label %sw.bb643
    i32 168, label %sw.bb644
    i32 167, label %sw.bb652
    i32 164, label %sw.bb660
    i32 165, label %sw.bb668
    i32 166, label %sw.bb676
    i32 170, label %sw.bb684
    i32 171, label %sw.bb685
    i32 172, label %sw.bb686
    i32 173, label %sw.bb694
    i32 174, label %sw.bb702
    i32 175, label %sw.bb710
    i32 176, label %sw.bb718
    i32 177, label %sw.bb726
    i32 178, label %sw.bb734
    i32 179, label %sw.bb735
    i32 180, label %sw.bb743
  ], !dbg !3869

sw.bb1:                                           ; preds = %entry
  br label %cleanup, !dbg !3870

sw.bb2:                                           ; preds = %entry
  br label %cleanup, !dbg !3872

sw.bb3:                                           ; preds = %entry
  br label %cleanup, !dbg !3873

sw.bb4:                                           ; preds = %entry, %entry, %entry, %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3874
  %bf.load = load i64, i64* %0, align 8, !dbg !3874
  %bf.cast47 = and i64 %bf.load, 2097152, !dbg !3874
  %tobool = icmp eq i64 %bf.cast47, 0, !dbg !3874
  %cond = select i1 %tobool, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 36), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 37), !dbg !3874
  br label %cleanup, !dbg !3875

sw.bb5:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3876
  %bf.load7 = load i64, i64* %1, align 8, !dbg !3876
  %2 = trunc i64 %bf.load7 to i32, !dbg !3876
  %tobool11 = icmp slt i32 %2, 0, !dbg !3876
  %bf.cast1646 = and i64 %bf.load7, 2097152, !dbg !3878
  %tobool17 = icmp ne i64 %bf.cast1646, 0, !dbg !3878
  br i1 %tobool11, label %if.then, label %if.end, !dbg !3879

if.then:                                          ; preds = %sw.bb5
  %cond18 = select i1 %tobool17, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 7), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 6), !dbg !3880
  br label %cleanup, !dbg !3881

if.end:                                           ; preds = %sw.bb5
  %cond25 = select i1 %tobool17, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 34), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 31), !dbg !3882
  br label %cleanup, !dbg !3883

sw.bb26:                                          ; preds = %entry
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3884
  %bf.load28 = load i64, i64* %3, align 8, !dbg !3884
  %bf.cast3036 = and i64 %bf.load28, 65535, !dbg !3884
  %cmp = icmp eq i64 %bf.cast3036, 14, !dbg !3884
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3884

cond.true:                                        ; preds = %sw.bb26
  %call = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3884
  br label %cond.end, !dbg !3884

cond.false:                                       ; preds = %sw.bb26
  %type31 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3884
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type31, i64 0, i32 6, !dbg !3884
  %bf.load32 = load i32, i32* %mode, align 4, !dbg !3884
  %bf.lshr33 = lshr i32 %bf.load32, 16, !dbg !3884
  %bf.clear34 = and i32 %bf.lshr33, 255, !dbg !3884
  br label %cond.end, !dbg !3884

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond35 = phi i32 [ %call, %cond.true ], [ %bf.clear34, %cond.false ], !dbg !3884
  %idxprom = zext i32 %cond35 to i64, !dbg !3884
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !3884
  %4 = load i8, i8* %arrayidx, align 1, !dbg !3884
  %cmp36 = icmp eq i8 %4, 12, !dbg !3884
  br i1 %cmp36, label %if.then147, label %lor.lhs.false, !dbg !3884

lor.lhs.false:                                    ; preds = %cond.end
  %bf.load39 = load i64, i64* %3, align 8, !dbg !3884
  %bf.cast4137 = and i64 %bf.load39, 65535, !dbg !3884
  %cmp42 = icmp eq i64 %bf.cast4137, 14, !dbg !3884
  br i1 %cmp42, label %cond.true44, label %cond.false46, !dbg !3884

cond.true44:                                      ; preds = %lor.lhs.false
  %call45 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3884
  br label %cond.end52, !dbg !3884

cond.false46:                                     ; preds = %lor.lhs.false
  %type47 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3884
  %mode48 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type47, i64 0, i32 6, !dbg !3884
  %bf.load49 = load i32, i32* %mode48, align 4, !dbg !3884
  %bf.lshr50 = lshr i32 %bf.load49, 16, !dbg !3884
  %bf.clear51 = and i32 %bf.lshr50, 255, !dbg !3884
  br label %cond.end52, !dbg !3884

cond.end52:                                       ; preds = %cond.false46, %cond.true44
  %cond53 = phi i32 [ %call45, %cond.true44 ], [ %bf.clear51, %cond.false46 ], !dbg !3884
  %idxprom54 = zext i32 %cond53 to i64, !dbg !3884
  %arrayidx55 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom54, !dbg !3884
  %5 = load i8, i8* %arrayidx55, align 1, !dbg !3884
  %cmp57 = icmp eq i8 %5, 17, !dbg !3884
  br i1 %cmp57, label %if.then147, label %lor.lhs.false59, !dbg !3884

lor.lhs.false59:                                  ; preds = %cond.end52
  %bf.load61 = load i64, i64* %3, align 8, !dbg !3884
  %bf.cast6338 = and i64 %bf.load61, 65535, !dbg !3884
  %cmp64 = icmp eq i64 %bf.cast6338, 14, !dbg !3884
  br i1 %cmp64, label %cond.true66, label %cond.false68, !dbg !3884

cond.true66:                                      ; preds = %lor.lhs.false59
  %call67 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3884
  br label %cond.end74, !dbg !3884

cond.false68:                                     ; preds = %lor.lhs.false59
  %type69 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3884
  %mode70 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type69, i64 0, i32 6, !dbg !3884
  %bf.load71 = load i32, i32* %mode70, align 4, !dbg !3884
  %bf.lshr72 = lshr i32 %bf.load71, 16, !dbg !3884
  %bf.clear73 = and i32 %bf.lshr72, 255, !dbg !3884
  br label %cond.end74, !dbg !3884

cond.end74:                                       ; preds = %cond.false68, %cond.true66
  %cond75 = phi i32 [ %call67, %cond.true66 ], [ %bf.clear73, %cond.false68 ], !dbg !3884
  %idxprom76 = zext i32 %cond75 to i64, !dbg !3884
  %arrayidx77 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom76, !dbg !3884
  %6 = load i8, i8* %arrayidx77, align 1, !dbg !3884
  %cmp79 = icmp eq i8 %6, 13, !dbg !3884
  br i1 %cmp79, label %if.then147, label %lor.lhs.false81, !dbg !3884

lor.lhs.false81:                                  ; preds = %cond.end74
  %bf.load83 = load i64, i64* %3, align 8, !dbg !3884
  %bf.cast8539 = and i64 %bf.load83, 65535, !dbg !3884
  %cmp86 = icmp eq i64 %bf.cast8539, 14, !dbg !3884
  br i1 %cmp86, label %cond.true88, label %cond.false90, !dbg !3884

cond.true88:                                      ; preds = %lor.lhs.false81
  %call89 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3884
  br label %cond.end96, !dbg !3884

cond.false90:                                     ; preds = %lor.lhs.false81
  %type91 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3884
  %mode92 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type91, i64 0, i32 6, !dbg !3884
  %bf.load93 = load i32, i32* %mode92, align 4, !dbg !3884
  %bf.lshr94 = lshr i32 %bf.load93, 16, !dbg !3884
  %bf.clear95 = and i32 %bf.lshr94, 255, !dbg !3884
  br label %cond.end96, !dbg !3884

cond.end96:                                       ; preds = %cond.false90, %cond.true88
  %cond97 = phi i32 [ %call89, %cond.true88 ], [ %bf.clear95, %cond.false90 ], !dbg !3884
  %idxprom98 = zext i32 %cond97 to i64, !dbg !3884
  %arrayidx99 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom98, !dbg !3884
  %7 = load i8, i8* %arrayidx99, align 1, !dbg !3884
  %cmp101 = icmp eq i8 %7, 14, !dbg !3884
  br i1 %cmp101, label %if.then147, label %lor.lhs.false103, !dbg !3884

lor.lhs.false103:                                 ; preds = %cond.end96
  %bf.load105 = load i64, i64* %3, align 8, !dbg !3884
  %bf.cast10740 = and i64 %bf.load105, 65535, !dbg !3884
  %cmp108 = icmp eq i64 %bf.cast10740, 14, !dbg !3884
  br i1 %cmp108, label %cond.true110, label %cond.false112, !dbg !3884

cond.true110:                                     ; preds = %lor.lhs.false103
  %call111 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3884
  br label %cond.end118, !dbg !3884

cond.false112:                                    ; preds = %lor.lhs.false103
  %type113 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3884
  %mode114 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type113, i64 0, i32 6, !dbg !3884
  %bf.load115 = load i32, i32* %mode114, align 4, !dbg !3884
  %bf.lshr116 = lshr i32 %bf.load115, 16, !dbg !3884
  %bf.clear117 = and i32 %bf.lshr116, 255, !dbg !3884
  br label %cond.end118, !dbg !3884

cond.end118:                                      ; preds = %cond.false112, %cond.true110
  %cond119 = phi i32 [ %call111, %cond.true110 ], [ %bf.clear117, %cond.false112 ], !dbg !3884
  %idxprom120 = zext i32 %cond119 to i64, !dbg !3884
  %arrayidx121 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom120, !dbg !3884
  %8 = load i8, i8* %arrayidx121, align 1, !dbg !3884
  %cmp123 = icmp eq i8 %8, 15, !dbg !3884
  br i1 %cmp123, label %if.then147, label %lor.lhs.false125, !dbg !3884

lor.lhs.false125:                                 ; preds = %cond.end118
  %bf.load127 = load i64, i64* %3, align 8, !dbg !3884
  %bf.cast12941 = and i64 %bf.load127, 65535, !dbg !3884
  %cmp130 = icmp eq i64 %bf.cast12941, 14, !dbg !3884
  br i1 %cmp130, label %cond.true132, label %cond.false134, !dbg !3884

cond.true132:                                     ; preds = %lor.lhs.false125
  %call133 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3884
  br label %cond.end140, !dbg !3884

cond.false134:                                    ; preds = %lor.lhs.false125
  %type135 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3884
  %mode136 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type135, i64 0, i32 6, !dbg !3884
  %bf.load137 = load i32, i32* %mode136, align 4, !dbg !3884
  %bf.lshr138 = lshr i32 %bf.load137, 16, !dbg !3884
  %bf.clear139 = and i32 %bf.lshr138, 255, !dbg !3884
  br label %cond.end140, !dbg !3884

cond.end140:                                      ; preds = %cond.false134, %cond.true132
  %cond141 = phi i32 [ %call133, %cond.true132 ], [ %bf.clear139, %cond.false134 ], !dbg !3884
  %idxprom142 = zext i32 %cond141 to i64, !dbg !3884
  %arrayidx143 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom142, !dbg !3884
  %9 = load i8, i8* %arrayidx143, align 1, !dbg !3884
  %cmp145 = icmp eq i8 %9, 16, !dbg !3884
  br i1 %cmp145, label %if.then147, label %if.end165, !dbg !3886

if.then147:                                       ; preds = %cond.end140, %cond.end118, %cond.end96, %cond.end74, %cond.end52, %cond.end
  switch i32 %subtype, label %cond.true161 [
    i32 2, label %if.then150
    i32 1, label %if.end165
  ], !dbg !3887

if.then150:                                       ; preds = %if.then147
  %bf.load152 = load i64, i64* %3, align 8, !dbg !3889
  %10 = trunc i64 %bf.load152 to i32, !dbg !3889
  %tobool156 = icmp slt i32 %10, 0, !dbg !3889
  %cond157 = select i1 %tobool156, %struct.optab_d* null, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 49), !dbg !3889
  br label %cleanup, !dbg !3891

cond.true161:                                     ; preds = %if.then147
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 360, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3892
  br label %if.end165, !dbg !3892

if.end165:                                        ; preds = %cond.true161, %if.then147, %cond.end140
  %bf.load167 = load i64, i64* %3, align 8, !dbg !3893
  %11 = trunc i64 %bf.load167 to i32, !dbg !3893
  %tobool171 = icmp slt i32 %11, 0, !dbg !3893
  br i1 %tobool171, label %if.then172, label %cleanup, !dbg !3895

if.then172:                                       ; preds = %if.end165
  %bf.cast17743 = and i64 %bf.load167, 2097152, !dbg !3896
  %tobool178 = icmp eq i64 %bf.cast17743, 0, !dbg !3896
  %cond179 = select i1 %tobool178, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 10), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 11), !dbg !3896
  br label %cleanup, !dbg !3897

sw.bb181:                                         ; preds = %entry
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3898
  %bf.load183 = load i64, i64* %12, align 8, !dbg !3898
  %bf.cast18528 = and i64 %bf.load183, 65535, !dbg !3898
  %cmp186 = icmp eq i64 %bf.cast18528, 14, !dbg !3898
  br i1 %cmp186, label %cond.true188, label %cond.false190, !dbg !3898

cond.true188:                                     ; preds = %sw.bb181
  %call189 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3898
  br label %cond.end196, !dbg !3898

cond.false190:                                    ; preds = %sw.bb181
  %type191 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3898
  %mode192 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type191, i64 0, i32 6, !dbg !3898
  %bf.load193 = load i32, i32* %mode192, align 4, !dbg !3898
  %bf.lshr194 = lshr i32 %bf.load193, 16, !dbg !3898
  %bf.clear195 = and i32 %bf.lshr194, 255, !dbg !3898
  br label %cond.end196, !dbg !3898

cond.end196:                                      ; preds = %cond.false190, %cond.true188
  %cond197 = phi i32 [ %call189, %cond.true188 ], [ %bf.clear195, %cond.false190 ], !dbg !3898
  %idxprom198 = zext i32 %cond197 to i64, !dbg !3898
  %arrayidx199 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom198, !dbg !3898
  %13 = load i8, i8* %arrayidx199, align 1, !dbg !3898
  %cmp201 = icmp eq i8 %13, 12, !dbg !3898
  br i1 %cmp201, label %if.then313, label %lor.lhs.false203, !dbg !3898

lor.lhs.false203:                                 ; preds = %cond.end196
  %bf.load205 = load i64, i64* %12, align 8, !dbg !3898
  %bf.cast20729 = and i64 %bf.load205, 65535, !dbg !3898
  %cmp208 = icmp eq i64 %bf.cast20729, 14, !dbg !3898
  br i1 %cmp208, label %cond.true210, label %cond.false212, !dbg !3898

cond.true210:                                     ; preds = %lor.lhs.false203
  %call211 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3898
  br label %cond.end218, !dbg !3898

cond.false212:                                    ; preds = %lor.lhs.false203
  %type213 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3898
  %mode214 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type213, i64 0, i32 6, !dbg !3898
  %bf.load215 = load i32, i32* %mode214, align 4, !dbg !3898
  %bf.lshr216 = lshr i32 %bf.load215, 16, !dbg !3898
  %bf.clear217 = and i32 %bf.lshr216, 255, !dbg !3898
  br label %cond.end218, !dbg !3898

cond.end218:                                      ; preds = %cond.false212, %cond.true210
  %cond219 = phi i32 [ %call211, %cond.true210 ], [ %bf.clear217, %cond.false212 ], !dbg !3898
  %idxprom220 = zext i32 %cond219 to i64, !dbg !3898
  %arrayidx221 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom220, !dbg !3898
  %14 = load i8, i8* %arrayidx221, align 1, !dbg !3898
  %cmp223 = icmp eq i8 %14, 17, !dbg !3898
  br i1 %cmp223, label %if.then313, label %lor.lhs.false225, !dbg !3898

lor.lhs.false225:                                 ; preds = %cond.end218
  %bf.load227 = load i64, i64* %12, align 8, !dbg !3898
  %bf.cast22930 = and i64 %bf.load227, 65535, !dbg !3898
  %cmp230 = icmp eq i64 %bf.cast22930, 14, !dbg !3898
  br i1 %cmp230, label %cond.true232, label %cond.false234, !dbg !3898

cond.true232:                                     ; preds = %lor.lhs.false225
  %call233 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3898
  br label %cond.end240, !dbg !3898

cond.false234:                                    ; preds = %lor.lhs.false225
  %type235 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3898
  %mode236 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type235, i64 0, i32 6, !dbg !3898
  %bf.load237 = load i32, i32* %mode236, align 4, !dbg !3898
  %bf.lshr238 = lshr i32 %bf.load237, 16, !dbg !3898
  %bf.clear239 = and i32 %bf.lshr238, 255, !dbg !3898
  br label %cond.end240, !dbg !3898

cond.end240:                                      ; preds = %cond.false234, %cond.true232
  %cond241 = phi i32 [ %call233, %cond.true232 ], [ %bf.clear239, %cond.false234 ], !dbg !3898
  %idxprom242 = zext i32 %cond241 to i64, !dbg !3898
  %arrayidx243 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom242, !dbg !3898
  %15 = load i8, i8* %arrayidx243, align 1, !dbg !3898
  %cmp245 = icmp eq i8 %15, 13, !dbg !3898
  br i1 %cmp245, label %if.then313, label %lor.lhs.false247, !dbg !3898

lor.lhs.false247:                                 ; preds = %cond.end240
  %bf.load249 = load i64, i64* %12, align 8, !dbg !3898
  %bf.cast25131 = and i64 %bf.load249, 65535, !dbg !3898
  %cmp252 = icmp eq i64 %bf.cast25131, 14, !dbg !3898
  br i1 %cmp252, label %cond.true254, label %cond.false256, !dbg !3898

cond.true254:                                     ; preds = %lor.lhs.false247
  %call255 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3898
  br label %cond.end262, !dbg !3898

cond.false256:                                    ; preds = %lor.lhs.false247
  %type257 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3898
  %mode258 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type257, i64 0, i32 6, !dbg !3898
  %bf.load259 = load i32, i32* %mode258, align 4, !dbg !3898
  %bf.lshr260 = lshr i32 %bf.load259, 16, !dbg !3898
  %bf.clear261 = and i32 %bf.lshr260, 255, !dbg !3898
  br label %cond.end262, !dbg !3898

cond.end262:                                      ; preds = %cond.false256, %cond.true254
  %cond263 = phi i32 [ %call255, %cond.true254 ], [ %bf.clear261, %cond.false256 ], !dbg !3898
  %idxprom264 = zext i32 %cond263 to i64, !dbg !3898
  %arrayidx265 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom264, !dbg !3898
  %16 = load i8, i8* %arrayidx265, align 1, !dbg !3898
  %cmp267 = icmp eq i8 %16, 14, !dbg !3898
  br i1 %cmp267, label %if.then313, label %lor.lhs.false269, !dbg !3898

lor.lhs.false269:                                 ; preds = %cond.end262
  %bf.load271 = load i64, i64* %12, align 8, !dbg !3898
  %bf.cast27332 = and i64 %bf.load271, 65535, !dbg !3898
  %cmp274 = icmp eq i64 %bf.cast27332, 14, !dbg !3898
  br i1 %cmp274, label %cond.true276, label %cond.false278, !dbg !3898

cond.true276:                                     ; preds = %lor.lhs.false269
  %call277 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3898
  br label %cond.end284, !dbg !3898

cond.false278:                                    ; preds = %lor.lhs.false269
  %type279 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3898
  %mode280 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type279, i64 0, i32 6, !dbg !3898
  %bf.load281 = load i32, i32* %mode280, align 4, !dbg !3898
  %bf.lshr282 = lshr i32 %bf.load281, 16, !dbg !3898
  %bf.clear283 = and i32 %bf.lshr282, 255, !dbg !3898
  br label %cond.end284, !dbg !3898

cond.end284:                                      ; preds = %cond.false278, %cond.true276
  %cond285 = phi i32 [ %call277, %cond.true276 ], [ %bf.clear283, %cond.false278 ], !dbg !3898
  %idxprom286 = zext i32 %cond285 to i64, !dbg !3898
  %arrayidx287 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom286, !dbg !3898
  %17 = load i8, i8* %arrayidx287, align 1, !dbg !3898
  %cmp289 = icmp eq i8 %17, 15, !dbg !3898
  br i1 %cmp289, label %if.then313, label %lor.lhs.false291, !dbg !3898

lor.lhs.false291:                                 ; preds = %cond.end284
  %bf.load293 = load i64, i64* %12, align 8, !dbg !3898
  %bf.cast29533 = and i64 %bf.load293, 65535, !dbg !3898
  %cmp296 = icmp eq i64 %bf.cast29533, 14, !dbg !3898
  br i1 %cmp296, label %cond.true298, label %cond.false300, !dbg !3898

cond.true298:                                     ; preds = %lor.lhs.false291
  %call299 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3898
  br label %cond.end306, !dbg !3898

cond.false300:                                    ; preds = %lor.lhs.false291
  %type301 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3898
  %mode302 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type301, i64 0, i32 6, !dbg !3898
  %bf.load303 = load i32, i32* %mode302, align 4, !dbg !3898
  %bf.lshr304 = lshr i32 %bf.load303, 16, !dbg !3898
  %bf.clear305 = and i32 %bf.lshr304, 255, !dbg !3898
  br label %cond.end306, !dbg !3898

cond.end306:                                      ; preds = %cond.false300, %cond.true298
  %cond307 = phi i32 [ %call299, %cond.true298 ], [ %bf.clear305, %cond.false300 ], !dbg !3898
  %idxprom308 = zext i32 %cond307 to i64, !dbg !3898
  %arrayidx309 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom308, !dbg !3898
  %18 = load i8, i8* %arrayidx309, align 1, !dbg !3898
  %cmp311 = icmp eq i8 %18, 16, !dbg !3898
  br i1 %cmp311, label %if.then313, label %if.end331, !dbg !3900

if.then313:                                       ; preds = %cond.end306, %cond.end284, %cond.end262, %cond.end240, %cond.end218, %cond.end196
  switch i32 %subtype, label %cond.true327 [
    i32 2, label %if.then316
    i32 1, label %if.end331
  ], !dbg !3901

if.then316:                                       ; preds = %if.then313
  %bf.load318 = load i64, i64* %12, align 8, !dbg !3903
  %bf.cast32135 = and i64 %bf.load318, 2097152, !dbg !3903
  %tobool322 = icmp eq i64 %bf.cast32135, 0, !dbg !3903
  %cond323 = select i1 %tobool322, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 51), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 50), !dbg !3903
  br label %cleanup, !dbg !3905

cond.true327:                                     ; preds = %if.then313
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 372, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3906
  br label %if.end331, !dbg !3906

if.end331:                                        ; preds = %cond.true327, %if.then313, %cond.end306
  %bf.load333 = load i64, i64* %12, align 8, !dbg !3907
  %bf.cast33634 = and i64 %bf.load333, 2097152, !dbg !3907
  %tobool337 = icmp eq i64 %bf.cast33634, 0, !dbg !3907
  %cond338 = select i1 %tobool337, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 46), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45), !dbg !3907
  br label %cleanup, !dbg !3908

sw.bb339:                                         ; preds = %entry
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3909
  %bf.load341 = load i64, i64* %19, align 8, !dbg !3909
  %bf.cast34322 = and i64 %bf.load341, 65535, !dbg !3909
  %cmp344 = icmp eq i64 %bf.cast34322, 14, !dbg !3909
  br i1 %cmp344, label %cond.true346, label %cond.false348, !dbg !3909

cond.true346:                                     ; preds = %sw.bb339
  %call347 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3909
  br label %cond.end354, !dbg !3909

cond.false348:                                    ; preds = %sw.bb339
  %type349 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3909
  %mode350 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type349, i64 0, i32 6, !dbg !3909
  %bf.load351 = load i32, i32* %mode350, align 4, !dbg !3909
  %bf.lshr352 = lshr i32 %bf.load351, 16, !dbg !3909
  %bf.clear353 = and i32 %bf.lshr352, 255, !dbg !3909
  br label %cond.end354, !dbg !3909

cond.end354:                                      ; preds = %cond.false348, %cond.true346
  %cond355 = phi i32 [ %call347, %cond.true346 ], [ %bf.clear353, %cond.false348 ], !dbg !3909
  %idxprom356 = zext i32 %cond355 to i64, !dbg !3909
  %arrayidx357 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom356, !dbg !3909
  %20 = load i8, i8* %arrayidx357, align 1, !dbg !3909
  %cmp359 = icmp eq i8 %20, 12, !dbg !3909
  br i1 %cmp359, label %if.then471, label %lor.lhs.false361, !dbg !3909

lor.lhs.false361:                                 ; preds = %cond.end354
  %bf.load363 = load i64, i64* %19, align 8, !dbg !3909
  %bf.cast36523 = and i64 %bf.load363, 65535, !dbg !3909
  %cmp366 = icmp eq i64 %bf.cast36523, 14, !dbg !3909
  br i1 %cmp366, label %cond.true368, label %cond.false370, !dbg !3909

cond.true368:                                     ; preds = %lor.lhs.false361
  %call369 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3909
  br label %cond.end376, !dbg !3909

cond.false370:                                    ; preds = %lor.lhs.false361
  %type371 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3909
  %mode372 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type371, i64 0, i32 6, !dbg !3909
  %bf.load373 = load i32, i32* %mode372, align 4, !dbg !3909
  %bf.lshr374 = lshr i32 %bf.load373, 16, !dbg !3909
  %bf.clear375 = and i32 %bf.lshr374, 255, !dbg !3909
  br label %cond.end376, !dbg !3909

cond.end376:                                      ; preds = %cond.false370, %cond.true368
  %cond377 = phi i32 [ %call369, %cond.true368 ], [ %bf.clear375, %cond.false370 ], !dbg !3909
  %idxprom378 = zext i32 %cond377 to i64, !dbg !3909
  %arrayidx379 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom378, !dbg !3909
  %21 = load i8, i8* %arrayidx379, align 1, !dbg !3909
  %cmp381 = icmp eq i8 %21, 17, !dbg !3909
  br i1 %cmp381, label %if.then471, label %lor.lhs.false383, !dbg !3909

lor.lhs.false383:                                 ; preds = %cond.end376
  %bf.load385 = load i64, i64* %19, align 8, !dbg !3909
  %bf.cast38724 = and i64 %bf.load385, 65535, !dbg !3909
  %cmp388 = icmp eq i64 %bf.cast38724, 14, !dbg !3909
  br i1 %cmp388, label %cond.true390, label %cond.false392, !dbg !3909

cond.true390:                                     ; preds = %lor.lhs.false383
  %call391 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3909
  br label %cond.end398, !dbg !3909

cond.false392:                                    ; preds = %lor.lhs.false383
  %type393 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3909
  %mode394 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type393, i64 0, i32 6, !dbg !3909
  %bf.load395 = load i32, i32* %mode394, align 4, !dbg !3909
  %bf.lshr396 = lshr i32 %bf.load395, 16, !dbg !3909
  %bf.clear397 = and i32 %bf.lshr396, 255, !dbg !3909
  br label %cond.end398, !dbg !3909

cond.end398:                                      ; preds = %cond.false392, %cond.true390
  %cond399 = phi i32 [ %call391, %cond.true390 ], [ %bf.clear397, %cond.false392 ], !dbg !3909
  %idxprom400 = zext i32 %cond399 to i64, !dbg !3909
  %arrayidx401 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom400, !dbg !3909
  %22 = load i8, i8* %arrayidx401, align 1, !dbg !3909
  %cmp403 = icmp eq i8 %22, 13, !dbg !3909
  br i1 %cmp403, label %if.then471, label %lor.lhs.false405, !dbg !3909

lor.lhs.false405:                                 ; preds = %cond.end398
  %bf.load407 = load i64, i64* %19, align 8, !dbg !3909
  %bf.cast40925 = and i64 %bf.load407, 65535, !dbg !3909
  %cmp410 = icmp eq i64 %bf.cast40925, 14, !dbg !3909
  br i1 %cmp410, label %cond.true412, label %cond.false414, !dbg !3909

cond.true412:                                     ; preds = %lor.lhs.false405
  %call413 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3909
  br label %cond.end420, !dbg !3909

cond.false414:                                    ; preds = %lor.lhs.false405
  %type415 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3909
  %mode416 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type415, i64 0, i32 6, !dbg !3909
  %bf.load417 = load i32, i32* %mode416, align 4, !dbg !3909
  %bf.lshr418 = lshr i32 %bf.load417, 16, !dbg !3909
  %bf.clear419 = and i32 %bf.lshr418, 255, !dbg !3909
  br label %cond.end420, !dbg !3909

cond.end420:                                      ; preds = %cond.false414, %cond.true412
  %cond421 = phi i32 [ %call413, %cond.true412 ], [ %bf.clear419, %cond.false414 ], !dbg !3909
  %idxprom422 = zext i32 %cond421 to i64, !dbg !3909
  %arrayidx423 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom422, !dbg !3909
  %23 = load i8, i8* %arrayidx423, align 1, !dbg !3909
  %cmp425 = icmp eq i8 %23, 14, !dbg !3909
  br i1 %cmp425, label %if.then471, label %lor.lhs.false427, !dbg !3909

lor.lhs.false427:                                 ; preds = %cond.end420
  %bf.load429 = load i64, i64* %19, align 8, !dbg !3909
  %bf.cast43126 = and i64 %bf.load429, 65535, !dbg !3909
  %cmp432 = icmp eq i64 %bf.cast43126, 14, !dbg !3909
  br i1 %cmp432, label %cond.true434, label %cond.false436, !dbg !3909

cond.true434:                                     ; preds = %lor.lhs.false427
  %call435 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3909
  br label %cond.end442, !dbg !3909

cond.false436:                                    ; preds = %lor.lhs.false427
  %type437 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3909
  %mode438 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type437, i64 0, i32 6, !dbg !3909
  %bf.load439 = load i32, i32* %mode438, align 4, !dbg !3909
  %bf.lshr440 = lshr i32 %bf.load439, 16, !dbg !3909
  %bf.clear441 = and i32 %bf.lshr440, 255, !dbg !3909
  br label %cond.end442, !dbg !3909

cond.end442:                                      ; preds = %cond.false436, %cond.true434
  %cond443 = phi i32 [ %call435, %cond.true434 ], [ %bf.clear441, %cond.false436 ], !dbg !3909
  %idxprom444 = zext i32 %cond443 to i64, !dbg !3909
  %arrayidx445 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom444, !dbg !3909
  %24 = load i8, i8* %arrayidx445, align 1, !dbg !3909
  %cmp447 = icmp eq i8 %24, 15, !dbg !3909
  br i1 %cmp447, label %if.then471, label %lor.lhs.false449, !dbg !3909

lor.lhs.false449:                                 ; preds = %cond.end442
  %bf.load451 = load i64, i64* %19, align 8, !dbg !3909
  %bf.cast45327 = and i64 %bf.load451, 65535, !dbg !3909
  %cmp454 = icmp eq i64 %bf.cast45327, 14, !dbg !3909
  br i1 %cmp454, label %cond.true456, label %cond.false458, !dbg !3909

cond.true456:                                     ; preds = %lor.lhs.false449
  %call457 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3909
  br label %cond.end464, !dbg !3909

cond.false458:                                    ; preds = %lor.lhs.false449
  %type459 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3909
  %mode460 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type459, i64 0, i32 6, !dbg !3909
  %bf.load461 = load i32, i32* %mode460, align 4, !dbg !3909
  %bf.lshr462 = lshr i32 %bf.load461, 16, !dbg !3909
  %bf.clear463 = and i32 %bf.lshr462, 255, !dbg !3909
  br label %cond.end464, !dbg !3909

cond.end464:                                      ; preds = %cond.false458, %cond.true456
  %cond465 = phi i32 [ %call457, %cond.true456 ], [ %bf.clear463, %cond.false458 ], !dbg !3909
  %idxprom466 = zext i32 %cond465 to i64, !dbg !3909
  %arrayidx467 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom466, !dbg !3909
  %25 = load i8, i8* %arrayidx467, align 1, !dbg !3909
  %cmp469 = icmp eq i8 %25, 16, !dbg !3909
  br i1 %cmp469, label %if.then471, label %if.end482, !dbg !3911

if.then471:                                       ; preds = %cond.end464, %cond.end442, %cond.end420, %cond.end398, %cond.end376, %cond.end354
  switch i32 %subtype, label %cond.true478 [
    i32 2, label %cleanup
    i32 1, label %if.end482
  ], !dbg !3912

cond.true478:                                     ; preds = %if.then471
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 382, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3914
  br label %if.end482, !dbg !3914

if.end482:                                        ; preds = %cond.true478, %if.then471, %cond.end464
  br label %cleanup, !dbg !3915

sw.bb483:                                         ; preds = %entry
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3916
  %bf.load485 = load i64, i64* %26, align 8, !dbg !3916
  %bf.cast48716 = and i64 %bf.load485, 65535, !dbg !3916
  %cmp488 = icmp eq i64 %bf.cast48716, 14, !dbg !3916
  br i1 %cmp488, label %cond.true490, label %cond.false492, !dbg !3916

cond.true490:                                     ; preds = %sw.bb483
  %call491 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3916
  br label %cond.end498, !dbg !3916

cond.false492:                                    ; preds = %sw.bb483
  %type493 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3916
  %mode494 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type493, i64 0, i32 6, !dbg !3916
  %bf.load495 = load i32, i32* %mode494, align 4, !dbg !3916
  %bf.lshr496 = lshr i32 %bf.load495, 16, !dbg !3916
  %bf.clear497 = and i32 %bf.lshr496, 255, !dbg !3916
  br label %cond.end498, !dbg !3916

cond.end498:                                      ; preds = %cond.false492, %cond.true490
  %cond499 = phi i32 [ %call491, %cond.true490 ], [ %bf.clear497, %cond.false492 ], !dbg !3916
  %idxprom500 = zext i32 %cond499 to i64, !dbg !3916
  %arrayidx501 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom500, !dbg !3916
  %27 = load i8, i8* %arrayidx501, align 1, !dbg !3916
  %cmp503 = icmp eq i8 %27, 12, !dbg !3916
  br i1 %cmp503, label %if.then615, label %lor.lhs.false505, !dbg !3916

lor.lhs.false505:                                 ; preds = %cond.end498
  %bf.load507 = load i64, i64* %26, align 8, !dbg !3916
  %bf.cast50917 = and i64 %bf.load507, 65535, !dbg !3916
  %cmp510 = icmp eq i64 %bf.cast50917, 14, !dbg !3916
  br i1 %cmp510, label %cond.true512, label %cond.false514, !dbg !3916

cond.true512:                                     ; preds = %lor.lhs.false505
  %call513 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3916
  br label %cond.end520, !dbg !3916

cond.false514:                                    ; preds = %lor.lhs.false505
  %type515 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3916
  %mode516 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type515, i64 0, i32 6, !dbg !3916
  %bf.load517 = load i32, i32* %mode516, align 4, !dbg !3916
  %bf.lshr518 = lshr i32 %bf.load517, 16, !dbg !3916
  %bf.clear519 = and i32 %bf.lshr518, 255, !dbg !3916
  br label %cond.end520, !dbg !3916

cond.end520:                                      ; preds = %cond.false514, %cond.true512
  %cond521 = phi i32 [ %call513, %cond.true512 ], [ %bf.clear519, %cond.false514 ], !dbg !3916
  %idxprom522 = zext i32 %cond521 to i64, !dbg !3916
  %arrayidx523 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom522, !dbg !3916
  %28 = load i8, i8* %arrayidx523, align 1, !dbg !3916
  %cmp525 = icmp eq i8 %28, 17, !dbg !3916
  br i1 %cmp525, label %if.then615, label %lor.lhs.false527, !dbg !3916

lor.lhs.false527:                                 ; preds = %cond.end520
  %bf.load529 = load i64, i64* %26, align 8, !dbg !3916
  %bf.cast53118 = and i64 %bf.load529, 65535, !dbg !3916
  %cmp532 = icmp eq i64 %bf.cast53118, 14, !dbg !3916
  br i1 %cmp532, label %cond.true534, label %cond.false536, !dbg !3916

cond.true534:                                     ; preds = %lor.lhs.false527
  %call535 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3916
  br label %cond.end542, !dbg !3916

cond.false536:                                    ; preds = %lor.lhs.false527
  %type537 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3916
  %mode538 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type537, i64 0, i32 6, !dbg !3916
  %bf.load539 = load i32, i32* %mode538, align 4, !dbg !3916
  %bf.lshr540 = lshr i32 %bf.load539, 16, !dbg !3916
  %bf.clear541 = and i32 %bf.lshr540, 255, !dbg !3916
  br label %cond.end542, !dbg !3916

cond.end542:                                      ; preds = %cond.false536, %cond.true534
  %cond543 = phi i32 [ %call535, %cond.true534 ], [ %bf.clear541, %cond.false536 ], !dbg !3916
  %idxprom544 = zext i32 %cond543 to i64, !dbg !3916
  %arrayidx545 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom544, !dbg !3916
  %29 = load i8, i8* %arrayidx545, align 1, !dbg !3916
  %cmp547 = icmp eq i8 %29, 13, !dbg !3916
  br i1 %cmp547, label %if.then615, label %lor.lhs.false549, !dbg !3916

lor.lhs.false549:                                 ; preds = %cond.end542
  %bf.load551 = load i64, i64* %26, align 8, !dbg !3916
  %bf.cast55319 = and i64 %bf.load551, 65535, !dbg !3916
  %cmp554 = icmp eq i64 %bf.cast55319, 14, !dbg !3916
  br i1 %cmp554, label %cond.true556, label %cond.false558, !dbg !3916

cond.true556:                                     ; preds = %lor.lhs.false549
  %call557 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3916
  br label %cond.end564, !dbg !3916

cond.false558:                                    ; preds = %lor.lhs.false549
  %type559 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3916
  %mode560 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type559, i64 0, i32 6, !dbg !3916
  %bf.load561 = load i32, i32* %mode560, align 4, !dbg !3916
  %bf.lshr562 = lshr i32 %bf.load561, 16, !dbg !3916
  %bf.clear563 = and i32 %bf.lshr562, 255, !dbg !3916
  br label %cond.end564, !dbg !3916

cond.end564:                                      ; preds = %cond.false558, %cond.true556
  %cond565 = phi i32 [ %call557, %cond.true556 ], [ %bf.clear563, %cond.false558 ], !dbg !3916
  %idxprom566 = zext i32 %cond565 to i64, !dbg !3916
  %arrayidx567 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom566, !dbg !3916
  %30 = load i8, i8* %arrayidx567, align 1, !dbg !3916
  %cmp569 = icmp eq i8 %30, 14, !dbg !3916
  br i1 %cmp569, label %if.then615, label %lor.lhs.false571, !dbg !3916

lor.lhs.false571:                                 ; preds = %cond.end564
  %bf.load573 = load i64, i64* %26, align 8, !dbg !3916
  %bf.cast57520 = and i64 %bf.load573, 65535, !dbg !3916
  %cmp576 = icmp eq i64 %bf.cast57520, 14, !dbg !3916
  br i1 %cmp576, label %cond.true578, label %cond.false580, !dbg !3916

cond.true578:                                     ; preds = %lor.lhs.false571
  %call579 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3916
  br label %cond.end586, !dbg !3916

cond.false580:                                    ; preds = %lor.lhs.false571
  %type581 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3916
  %mode582 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type581, i64 0, i32 6, !dbg !3916
  %bf.load583 = load i32, i32* %mode582, align 4, !dbg !3916
  %bf.lshr584 = lshr i32 %bf.load583, 16, !dbg !3916
  %bf.clear585 = and i32 %bf.lshr584, 255, !dbg !3916
  br label %cond.end586, !dbg !3916

cond.end586:                                      ; preds = %cond.false580, %cond.true578
  %cond587 = phi i32 [ %call579, %cond.true578 ], [ %bf.clear585, %cond.false580 ], !dbg !3916
  %idxprom588 = zext i32 %cond587 to i64, !dbg !3916
  %arrayidx589 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom588, !dbg !3916
  %31 = load i8, i8* %arrayidx589, align 1, !dbg !3916
  %cmp591 = icmp eq i8 %31, 15, !dbg !3916
  br i1 %cmp591, label %if.then615, label %lor.lhs.false593, !dbg !3916

lor.lhs.false593:                                 ; preds = %cond.end586
  %bf.load595 = load i64, i64* %26, align 8, !dbg !3916
  %bf.cast59721 = and i64 %bf.load595, 65535, !dbg !3916
  %cmp598 = icmp eq i64 %bf.cast59721, 14, !dbg !3916
  br i1 %cmp598, label %cond.true600, label %cond.false602, !dbg !3916

cond.true600:                                     ; preds = %lor.lhs.false593
  %call601 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3916
  br label %cond.end608, !dbg !3916

cond.false602:                                    ; preds = %lor.lhs.false593
  %type603 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3916
  %mode604 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type603, i64 0, i32 6, !dbg !3916
  %bf.load605 = load i32, i32* %mode604, align 4, !dbg !3916
  %bf.lshr606 = lshr i32 %bf.load605, 16, !dbg !3916
  %bf.clear607 = and i32 %bf.lshr606, 255, !dbg !3916
  br label %cond.end608, !dbg !3916

cond.end608:                                      ; preds = %cond.false602, %cond.true600
  %cond609 = phi i32 [ %call601, %cond.true600 ], [ %bf.clear607, %cond.false602 ], !dbg !3916
  %idxprom610 = zext i32 %cond609 to i64, !dbg !3916
  %arrayidx611 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom610, !dbg !3916
  %32 = load i8, i8* %arrayidx611, align 1, !dbg !3916
  %cmp613 = icmp eq i8 %32, 16, !dbg !3916
  br i1 %cmp613, label %if.then615, label %if.end626, !dbg !3918

if.then615:                                       ; preds = %cond.end608, %cond.end586, %cond.end564, %cond.end542, %cond.end520, %cond.end498
  switch i32 %subtype, label %cond.true622 [
    i32 2, label %cleanup
    i32 1, label %if.end626
  ], !dbg !3919

cond.true622:                                     ; preds = %if.then615
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 392, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3921
  br label %if.end626, !dbg !3921

if.end626:                                        ; preds = %cond.true622, %if.then615, %cond.end608
  br label %cleanup, !dbg !3922

sw.bb627:                                         ; preds = %entry
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3923
  %bf.load629 = load i64, i64* %33, align 8, !dbg !3923
  %bf.cast63215 = and i64 %bf.load629, 2097152, !dbg !3923
  %tobool633 = icmp eq i64 %bf.cast63215, 0, !dbg !3923
  %cond634 = select i1 %tobool633, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 55), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 57), !dbg !3923
  br label %cleanup, !dbg !3924

sw.bb635:                                         ; preds = %entry
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3925
  %bf.load637 = load i64, i64* %34, align 8, !dbg !3925
  %bf.cast64014 = and i64 %bf.load637, 2097152, !dbg !3925
  %tobool641 = icmp eq i64 %bf.cast64014, 0, !dbg !3925
  %cond642 = select i1 %tobool641, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 54), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 56), !dbg !3925
  br label %cleanup, !dbg !3926

sw.bb643:                                         ; preds = %entry
  br label %cleanup, !dbg !3927

sw.bb644:                                         ; preds = %entry
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3928
  %bf.load646 = load i64, i64* %35, align 8, !dbg !3928
  %bf.cast64913 = and i64 %bf.load646, 2097152, !dbg !3928
  %tobool650 = icmp eq i64 %bf.cast64913, 0, !dbg !3928
  %cond651 = select i1 %tobool650, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 127), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 128), !dbg !3928
  br label %cleanup, !dbg !3929

sw.bb652:                                         ; preds = %entry
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3930
  %bf.load654 = load i64, i64* %36, align 8, !dbg !3930
  %bf.cast65712 = and i64 %bf.load654, 2097152, !dbg !3930
  %tobool658 = icmp eq i64 %bf.cast65712, 0, !dbg !3930
  %cond659 = select i1 %tobool658, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 129), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 130), !dbg !3930
  br label %cleanup, !dbg !3931

sw.bb660:                                         ; preds = %entry
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3932
  %bf.load662 = load i64, i64* %37, align 8, !dbg !3932
  %bf.cast66511 = and i64 %bf.load662, 2097152, !dbg !3932
  %tobool666 = icmp eq i64 %bf.cast66511, 0, !dbg !3932
  %cond667 = select i1 %tobool666, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 121), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 122), !dbg !3932
  br label %cleanup, !dbg !3933

sw.bb668:                                         ; preds = %entry
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3934
  %bf.load670 = load i64, i64* %38, align 8, !dbg !3934
  %bf.cast67310 = and i64 %bf.load670, 2097152, !dbg !3934
  %tobool674 = icmp eq i64 %bf.cast67310, 0, !dbg !3934
  %cond675 = select i1 %tobool674, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 123), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 124), !dbg !3934
  br label %cleanup, !dbg !3935

sw.bb676:                                         ; preds = %entry
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3936
  %bf.load678 = load i64, i64* %39, align 8, !dbg !3936
  %bf.cast6819 = and i64 %bf.load678, 2097152, !dbg !3936
  %tobool682 = icmp eq i64 %bf.cast6819, 0, !dbg !3936
  %cond683 = select i1 %tobool682, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 125), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 126), !dbg !3936
  br label %cleanup, !dbg !3937

sw.bb684:                                         ; preds = %entry
  br label %cleanup, !dbg !3938

sw.bb685:                                         ; preds = %entry
  br label %cleanup, !dbg !3939

sw.bb686:                                         ; preds = %entry
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3940
  %bf.load688 = load i64, i64* %40, align 8, !dbg !3940
  %bf.cast6918 = and i64 %bf.load688, 2097152, !dbg !3940
  %tobool692 = icmp eq i64 %bf.cast6918, 0, !dbg !3940
  %cond693 = select i1 %tobool692, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 143), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 141), !dbg !3940
  br label %cleanup, !dbg !3941

sw.bb694:                                         ; preds = %entry
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3942
  %bf.load696 = load i64, i64* %41, align 8, !dbg !3942
  %bf.cast6997 = and i64 %bf.load696, 2097152, !dbg !3942
  %tobool700 = icmp eq i64 %bf.cast6997, 0, !dbg !3942
  %cond701 = select i1 %tobool700, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 144), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 142), !dbg !3942
  br label %cleanup, !dbg !3943

sw.bb702:                                         ; preds = %entry
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3944
  %bf.load704 = load i64, i64* %42, align 8, !dbg !3944
  %bf.cast7076 = and i64 %bf.load704, 2097152, !dbg !3944
  %tobool708 = icmp eq i64 %bf.cast7076, 0, !dbg !3944
  %cond709 = select i1 %tobool708, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 145), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 147), !dbg !3944
  br label %cleanup, !dbg !3945

sw.bb710:                                         ; preds = %entry
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3946
  %bf.load712 = load i64, i64* %43, align 8, !dbg !3946
  %bf.cast7155 = and i64 %bf.load712, 2097152, !dbg !3946
  %tobool716 = icmp eq i64 %bf.cast7155, 0, !dbg !3946
  %cond717 = select i1 %tobool716, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 146), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 148), !dbg !3946
  br label %cleanup, !dbg !3947

sw.bb718:                                         ; preds = %entry
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3948
  %bf.load720 = load i64, i64* %44, align 8, !dbg !3948
  %bf.cast7234 = and i64 %bf.load720, 2097152, !dbg !3948
  %tobool724 = icmp eq i64 %bf.cast7234, 0, !dbg !3948
  %cond725 = select i1 %tobool724, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 149), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 151), !dbg !3948
  br label %cleanup, !dbg !3949

sw.bb726:                                         ; preds = %entry
  %45 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3950
  %bf.load728 = load i64, i64* %45, align 8, !dbg !3950
  %bf.cast7313 = and i64 %bf.load728, 2097152, !dbg !3950
  %tobool732 = icmp eq i64 %bf.cast7313, 0, !dbg !3950
  %cond733 = select i1 %tobool732, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 150), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 152), !dbg !3950
  br label %cleanup, !dbg !3951

sw.bb734:                                         ; preds = %entry
  br label %cleanup, !dbg !3952

sw.bb735:                                         ; preds = %entry
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3953
  %bf.load737 = load i64, i64* %46, align 8, !dbg !3953
  %bf.cast7402 = and i64 %bf.load737, 2097152, !dbg !3953
  %tobool741 = icmp eq i64 %bf.cast7402, 0, !dbg !3953
  %cond742 = select i1 %tobool741, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 155), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 154), !dbg !3953
  br label %cleanup, !dbg !3954

sw.bb743:                                         ; preds = %entry
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3955
  %bf.load745 = load i64, i64* %47, align 8, !dbg !3955
  %bf.cast7481 = and i64 %bf.load745, 2097152, !dbg !3955
  %tobool749 = icmp eq i64 %bf.cast7481, 0, !dbg !3955
  %cond750 = select i1 %tobool749, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 156), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 157), !dbg !3955
  br label %cleanup, !dbg !3956

sw.epilog:                                        ; preds = %entry
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3957
  %bf.load752 = load i64, i64* %48, align 8, !dbg !3957
  %bf.cast75448 = and i64 %bf.load752, 65535, !dbg !3957
  %cmp755 = icmp eq i64 %bf.cast75448, 6, !dbg !3957
  br i1 %cmp755, label %land.rhs, label %lor.lhs.false757, !dbg !3957

lor.lhs.false757:                                 ; preds = %sw.epilog
  %cmp762 = icmp eq i64 %bf.cast75448, 7, !dbg !3957
  br i1 %cmp762, label %land.rhs, label %lor.lhs.false764, !dbg !3957

lor.lhs.false764:                                 ; preds = %lor.lhs.false757
  %cmp769 = icmp eq i64 %bf.cast75448, 8, !dbg !3957
  br i1 %cmp769, label %land.rhs, label %land.end779, !dbg !3958

land.rhs:                                         ; preds = %lor.lhs.false764, %lor.lhs.false757, %sw.epilog
  %bf.cast77560 = and i64 %bf.load752, 2097152, !dbg !3959
  %tobool776 = icmp eq i64 %bf.cast77560, 0, !dbg !3959
  %49 = load i32, i32* @flag_trapv, align 4, !dbg !3959
  %tobool778 = icmp ne i32 %49, 0, !dbg !3959
  %50 = and i1 %tobool776, %tobool778, !dbg !3959
  %phitmp51 = zext i1 %50 to i32, !dbg !3959
  br label %land.end779, !dbg !3959

land.end779:                                      ; preds = %land.rhs, %lor.lhs.false764
  %51 = phi i32 [ 0, %lor.lhs.false764 ], [ %phitmp51, %land.rhs ]
  switch i32 %code, label %sw.default865 [
    i32 66, label %sw.bb781
    i32 63, label %sw.bb781
    i32 64, label %sw.bb800
    i32 65, label %sw.bb819
    i32 79, label %sw.bb838
    i32 82, label %sw.bb857
    i32 181, label %cleanup
    i32 182, label %sw.bb862
    i32 183, label %sw.bb863
    i32 184, label %sw.bb864
  ], !dbg !3960

sw.bb781:                                         ; preds = %land.end779, %land.end779
  %52 = trunc i64 %bf.load752 to i32, !dbg !3961
  %tobool787 = icmp slt i32 %52, 0, !dbg !3961
  br i1 %tobool787, label %if.then788, label %if.end796, !dbg !3964

if.then788:                                       ; preds = %sw.bb781
  %bf.cast79359 = and i64 %bf.load752, 2097152, !dbg !3965
  %tobool794 = icmp eq i64 %bf.cast79359, 0, !dbg !3965
  %cond795 = select i1 %tobool794, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 0), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 1), !dbg !3965
  br label %cleanup, !dbg !3966

if.end796:                                        ; preds = %sw.bb781
  %tobool798 = icmp eq i32 %51, 0, !dbg !3967
  %cond799 = select i1 %tobool798, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 13), !dbg !3967
  br label %cleanup, !dbg !3968

sw.bb800:                                         ; preds = %land.end779
  %53 = trunc i64 %bf.load752 to i32, !dbg !3969
  %tobool806 = icmp slt i32 %53, 0, !dbg !3969
  br i1 %tobool806, label %if.then807, label %if.end815, !dbg !3971

if.then807:                                       ; preds = %sw.bb800
  %bf.cast81257 = and i64 %bf.load752, 2097152, !dbg !3972
  %tobool813 = icmp eq i64 %bf.cast81257, 0, !dbg !3972
  %cond814 = select i1 %tobool813, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 2), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 3), !dbg !3972
  br label %cleanup, !dbg !3973

if.end815:                                        ; preds = %sw.bb800
  %tobool817 = icmp eq i32 %51, 0, !dbg !3974
  %cond818 = select i1 %tobool817, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 15), !dbg !3974
  br label %cleanup, !dbg !3975

sw.bb819:                                         ; preds = %land.end779
  %54 = trunc i64 %bf.load752 to i32, !dbg !3976
  %tobool825 = icmp slt i32 %54, 0, !dbg !3976
  br i1 %tobool825, label %if.then826, label %if.end834, !dbg !3978

if.then826:                                       ; preds = %sw.bb819
  %bf.cast83155 = and i64 %bf.load752, 2097152, !dbg !3979
  %tobool832 = icmp eq i64 %bf.cast83155, 0, !dbg !3979
  %cond833 = select i1 %tobool832, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 4), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 5), !dbg !3979
  br label %cleanup, !dbg !3980

if.end834:                                        ; preds = %sw.bb819
  %tobool836 = icmp eq i32 %51, 0, !dbg !3981
  %cond837 = select i1 %tobool836, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 17), !dbg !3981
  br label %cleanup, !dbg !3982

sw.bb838:                                         ; preds = %land.end779
  %55 = trunc i64 %bf.load752 to i32, !dbg !3983
  %tobool844 = icmp slt i32 %55, 0, !dbg !3983
  br i1 %tobool844, label %if.then845, label %if.end853, !dbg !3985

if.then845:                                       ; preds = %sw.bb838
  %bf.cast85053 = and i64 %bf.load752, 2097152, !dbg !3986
  %tobool851 = icmp eq i64 %bf.cast85053, 0, !dbg !3986
  %cond852 = select i1 %tobool851, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 8), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 9), !dbg !3986
  br label %cleanup, !dbg !3987

if.end853:                                        ; preds = %sw.bb838
  %tobool855 = icmp eq i32 %51, 0, !dbg !3988
  %cond856 = select i1 %tobool855, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 64), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 65), !dbg !3988
  br label %cleanup, !dbg !3989

sw.bb857:                                         ; preds = %land.end779
  %tobool859 = icmp eq i32 %51, 0, !dbg !3990
  %cond860 = select i1 %tobool859, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 66), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 67), !dbg !3990
  br label %cleanup, !dbg !3991

sw.bb862:                                         ; preds = %land.end779
  br label %cleanup, !dbg !3992

sw.bb863:                                         ; preds = %land.end779
  br label %cleanup, !dbg !3993

sw.bb864:                                         ; preds = %land.end779
  br label %cleanup, !dbg !3994

sw.default865:                                    ; preds = %land.end779
  br label %cleanup, !dbg !3995

cleanup:                                          ; preds = %land.end779, %if.then615, %if.then471, %if.end165, %entry, %sw.default865, %sw.bb864, %sw.bb863, %sw.bb862, %sw.bb857, %if.end853, %if.then845, %if.end834, %if.then826, %if.end815, %if.then807, %if.end796, %if.then788, %sw.bb743, %sw.bb735, %sw.bb734, %sw.bb726, %sw.bb718, %sw.bb710, %sw.bb702, %sw.bb694, %sw.bb686, %sw.bb685, %sw.bb684, %sw.bb676, %sw.bb668, %sw.bb660, %sw.bb652, %sw.bb644, %sw.bb643, %sw.bb635, %sw.bb627, %if.end626, %if.end482, %if.end331, %if.then316, %if.then172, %if.then150, %if.end, %if.then, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1
  %retval.0 = phi %struct.optab_d* [ null, %sw.default865 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 136), %sw.bb864 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 135), %sw.bb863 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 134), %sw.bb862 ], [ %cond860, %sw.bb857 ], [ %cond852, %if.then845 ], [ %cond856, %if.end853 ], [ %cond833, %if.then826 ], [ %cond837, %if.end834 ], [ %cond814, %if.then807 ], [ %cond818, %if.end815 ], [ %cond795, %if.then788 ], [ %cond799, %if.end796 ], [ %cond750, %sw.bb743 ], [ %cond742, %sw.bb735 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 153), %sw.bb734 ], [ %cond733, %sw.bb726 ], [ %cond725, %sw.bb718 ], [ %cond717, %sw.bb710 ], [ %cond709, %sw.bb702 ], [ %cond701, %sw.bb694 ], [ %cond693, %sw.bb686 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 139), %sw.bb685 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 138), %sw.bb684 ], [ %cond683, %sw.bb676 ], [ %cond675, %sw.bb668 ], [ %cond667, %sw.bb660 ], [ %cond659, %sw.bb652 ], [ %cond651, %sw.bb644 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 140), %sw.bb643 ], [ %cond642, %sw.bb635 ], [ %cond634, %sw.bb627 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 48), %if.end626 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 47), %if.end482 ], [ %cond323, %if.then316 ], [ %cond338, %if.end331 ], [ %cond157, %if.then150 ], [ %cond179, %if.then172 ], [ %cond18, %if.then ], [ %cond25, %if.end ], [ %cond, %sw.bb4 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), %sw.bb3 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 69), %sw.bb2 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), %sw.bb1 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %entry ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), %if.end165 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 52), %if.then471 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 53), %if.then615 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 133), %land.end779 ], !dbg !3868
  ret %struct.optab_d* %retval.0, !dbg !3996
}

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_widen_pattern_expr(%struct.separate_ops* %ops, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %wide_op, %struct.rtx_def* %target, i32 %unsignedp) local_unnamed_addr #4 !dbg !3997 {
entry:
  call void @llvm.dbg.value(metadata %struct.separate_ops* %ops, metadata !4011, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !4012, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !4013, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %wide_op, metadata !4014, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !4015, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !4016, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 0, metadata !4020, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 0, metadata !4022, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 0, metadata !4026, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 0, metadata !4027, metadata !DIExpression()), !dbg !4034
  %code = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 0, !dbg !4035
  %0 = load i32, i32* %code, align 8, !dbg !4035
  %idxprom = sext i32 %0 to i64, !dbg !4035
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %idxprom, !dbg !4035
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4035
  call void @llvm.dbg.value(metadata i8 %1, metadata !4033, metadata !DIExpression()), !dbg !4034
  %op01 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 2, !dbg !4036
  %2 = load %union.tree_node*, %union.tree_node** %op01, align 8, !dbg !4036
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4017, metadata !DIExpression()), !dbg !4034
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4037
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !4037
  %4 = load i64*, i64** %3, align 8, !dbg !4037
  %bf.load = load i64, i64* %4, align 8, !dbg !4037
  %bf.cast7 = and i64 %bf.load, 65535, !dbg !4037
  %cmp = icmp eq i64 %bf.cast7, 14, !dbg !4037
  %5 = bitcast i64* %4 to %union.tree_node*, !dbg !4037
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4037

cond.true:                                        ; preds = %entry
  %call = tail call i32 @vector_type_mode(%union.tree_node* %5) #6, !dbg !4037
  %.pre = load i32, i32* %code, align 8, !dbg !4038
  %.pre12 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4039
  br label %cond.end, !dbg !4037

cond.false:                                       ; preds = %entry
  %type7 = bitcast i64* %4 to %struct.tree_type*, !dbg !4037
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7, i64 0, i32 6, !dbg !4037
  %bf.load8 = load i32, i32* %mode, align 4, !dbg !4037
  %bf.lshr = lshr i32 %bf.load8, 16, !dbg !4037
  %bf.clear9 = and i32 %bf.lshr, 255, !dbg !4037
  br label %cond.end, !dbg !4037

cond.end:                                         ; preds = %cond.false, %cond.true
  %6 = phi %union.tree_node* [ %.pre12, %cond.true ], [ %5, %cond.false ], !dbg !4039
  %7 = phi i32 [ %.pre, %cond.true ], [ %0, %cond.false ], !dbg !4038
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear9, %cond.false ], !dbg !4037
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4021, metadata !DIExpression()), !dbg !4034
  %call13 = tail call %struct.optab_d* @optab_for_tree_code(i32 %7, %union.tree_node* %6, i32 0) #8, !dbg !4040
  call void @llvm.dbg.value(metadata %struct.optab_d* %call13, metadata !4023, metadata !DIExpression()), !dbg !4034
  %idxprom14 = sext i32 %cond to i64, !dbg !4041
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %call13, i64 0, i32 4, i64 %idxprom14, i32 0, !dbg !4042
  %8 = load i32, i32* %insn_code, align 4, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %8, metadata !4024, metadata !DIExpression()), !dbg !4034
  %cmp16 = icmp eq i32 %8, 2956, !dbg !4043
  br i1 %cmp16, label %cond.true18, label %cond.end20, !dbg !4043

cond.true18:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 551, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4043
  br label %cond.end20, !dbg !4043

cond.end20:                                       ; preds = %cond.end, %cond.true18
  %idxprom22 = sext i32 %8 to i64, !dbg !4044
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom22, i32 3, !dbg !4045
  %9 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !4045
  %mode25 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 1, i32 2, !dbg !4046
  %bf.load26 = load i16, i16* %mode25, align 8, !dbg !4046
  %bf.cast27 = zext i16 %bf.load26 to i32, !dbg !4046
  call void @llvm.dbg.value(metadata i32 %bf.cast27, metadata !4025, metadata !DIExpression()), !dbg !4034
  %cmp28 = icmp ugt i8 %1, 1, !dbg !4047
  br i1 %cmp28, label %if.then, label %if.end, !dbg !4049

if.then:                                          ; preds = %cond.end20
  %op130 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 3, !dbg !4050
  %10 = load %union.tree_node*, %union.tree_node** %op130, align 8, !dbg !4050
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !4018, metadata !DIExpression()), !dbg !4034
  %type32 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4052
  %11 = bitcast %union.tree_node** %type32 to i64**, !dbg !4052
  %12 = load i64*, i64** %11, align 8, !dbg !4052
  %bf.load34 = load i64, i64* %12, align 8, !dbg !4052
  %bf.cast3610 = and i64 %bf.load34, 65535, !dbg !4052
  %cmp37 = icmp eq i64 %bf.cast3610, 14, !dbg !4052
  br i1 %cmp37, label %cond.true39, label %cond.false43, !dbg !4052

cond.true39:                                      ; preds = %if.then
  %.cast11 = bitcast i64* %12 to %union.tree_node*, !dbg !4052
  %call42 = tail call i32 @vector_type_mode(%union.tree_node* %.cast11) #6, !dbg !4052
  br label %cond.end51, !dbg !4052

cond.false43:                                     ; preds = %if.then
  %type46 = bitcast i64* %12 to %struct.tree_type*, !dbg !4052
  %mode47 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type46, i64 0, i32 6, !dbg !4052
  %bf.load48 = load i32, i32* %mode47, align 4, !dbg !4052
  %bf.lshr49 = lshr i32 %bf.load48, 16, !dbg !4052
  %bf.clear50 = and i32 %bf.lshr49, 255, !dbg !4052
  br label %cond.end51, !dbg !4052

cond.end51:                                       ; preds = %cond.false43, %cond.true39
  %cond52 = phi i32 [ %call42, %cond.true39 ], [ %bf.clear50, %cond.false43 ], !dbg !4052
  call void @llvm.dbg.value(metadata i32 %cond52, metadata !4022, metadata !DIExpression()), !dbg !4034
  %mode57 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 2, i32 2, !dbg !4053
  %bf.load58 = load i16, i16* %mode57, align 8, !dbg !4053
  %bf.cast59 = zext i16 %bf.load58 to i32, !dbg !4053
  call void @llvm.dbg.value(metadata i32 %bf.cast59, metadata !4026, metadata !DIExpression()), !dbg !4034
  br label %if.end, !dbg !4054

if.end:                                           ; preds = %cond.end51, %cond.end20
  %tmode1.0 = phi i32 [ %cond52, %cond.end51 ], [ 0, %cond.end20 ], !dbg !4034
  %xmode1.0 = phi i32 [ %bf.cast59, %cond.end51 ], [ 0, %cond.end20 ], !dbg !4034
  call void @llvm.dbg.value(metadata i32 %xmode1.0, metadata !4026, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %tmode1.0, metadata !4022, metadata !DIExpression()), !dbg !4034
  switch i8 %1, label %if.end105 [
    i8 2, label %if.end106
    i8 3, label %if.then65
  ], !dbg !4055

if.then65:                                        ; preds = %if.end
  %cmp66 = icmp eq i32 %tmode1.0, %cond, !dbg !4056
  br i1 %cmp66, label %cond.end70, label %cond.true68, !dbg !4056

cond.true68:                                      ; preds = %if.then65
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 569, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4056
  br label %cond.end70, !dbg !4056

cond.end70:                                       ; preds = %if.then65, %cond.true68
  %tobool = icmp eq %struct.rtx_def* %op1, null, !dbg !4060
  br i1 %tobool, label %cond.true72, label %cond.end74, !dbg !4060

cond.true72:                                      ; preds = %cond.end70
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 570, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4060
  br label %cond.end74, !dbg !4060

cond.end74:                                       ; preds = %cond.end70, %cond.true72
  %op2 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 4, !dbg !4061
  %13 = load %union.tree_node*, %union.tree_node** %op2, align 8, !dbg !4061
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !4019, metadata !DIExpression()), !dbg !4034
  %type77 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4062
  %14 = bitcast %union.tree_node** %type77 to i64**, !dbg !4062
  %15 = load i64*, i64** %14, align 8, !dbg !4062
  %bf.load79 = load i64, i64* %15, align 8, !dbg !4062
  %bf.cast818 = and i64 %bf.load79, 65535, !dbg !4062
  %cmp82 = icmp eq i64 %bf.cast818, 14, !dbg !4062
  br i1 %cmp82, label %cond.true84, label %cond.false88, !dbg !4062

cond.true84:                                      ; preds = %cond.end74
  %.cast9 = bitcast i64* %15 to %union.tree_node*, !dbg !4062
  %call87 = tail call i32 @vector_type_mode(%union.tree_node* %.cast9) #6, !dbg !4062
  br label %cond.end96, !dbg !4062

cond.false88:                                     ; preds = %cond.end74
  %type91 = bitcast i64* %15 to %struct.tree_type*, !dbg !4062
  %mode92 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type91, i64 0, i32 6, !dbg !4062
  %bf.load93 = load i32, i32* %mode92, align 4, !dbg !4062
  %bf.lshr94 = lshr i32 %bf.load93, 16, !dbg !4062
  %bf.clear95 = and i32 %bf.lshr94, 255, !dbg !4062
  br label %cond.end96, !dbg !4062

cond.end96:                                       ; preds = %cond.false88, %cond.true84
  %cond97 = phi i32 [ %call87, %cond.true84 ], [ %bf.clear95, %cond.false88 ], !dbg !4062
  call void @llvm.dbg.value(metadata i32 %cond97, metadata !4020, metadata !DIExpression()), !dbg !4034
  %mode102 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 3, i32 2, !dbg !4063
  %bf.load103 = load i16, i16* %mode102, align 8, !dbg !4063
  %bf.cast104 = zext i16 %bf.load103 to i32, !dbg !4063
  call void @llvm.dbg.value(metadata i32 %bf.cast104, metadata !4027, metadata !DIExpression()), !dbg !4034
  br label %if.end105, !dbg !4064

if.end105:                                        ; preds = %if.end, %cond.end96
  %wmode.0 = phi i32 [ %cond97, %cond.end96 ], [ 0, %if.end ], !dbg !4034
  %wxmode.0 = phi i32 [ %bf.cast104, %cond.end96 ], [ 0, %if.end ], !dbg !4034
  call void @llvm.dbg.value(metadata i32 %wxmode.0, metadata !4027, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %wmode.0, metadata !4020, metadata !DIExpression()), !dbg !4034
  br label %if.end106

if.end106:                                        ; preds = %if.end, %if.end105
  %wmode.1 = phi i32 [ %wmode.0, %if.end105 ], [ %tmode1.0, %if.end ], !dbg !4065
  %wxmode.1 = phi i32 [ %wxmode.0, %if.end105 ], [ %xmode1.0, %if.end ], !dbg !4065
  call void @llvm.dbg.value(metadata i32 %wxmode.1, metadata !4027, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %wmode.1, metadata !4020, metadata !DIExpression()), !dbg !4034
  %tobool107 = icmp eq %struct.rtx_def* %wide_op, null, !dbg !4066
  br i1 %tobool107, label %if.then108, label %if.end116, !dbg !4068

if.then108:                                       ; preds = %if.end106
  %mode113 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 0, i32 2, !dbg !4069
  %bf.load114 = load i16, i16* %mode113, align 8, !dbg !4069
  %bf.cast115 = zext i16 %bf.load114 to i32, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %bf.cast115, metadata !4027, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %bf.cast115, metadata !4020, metadata !DIExpression()), !dbg !4034
  br label %if.end116, !dbg !4070

if.end116:                                        ; preds = %if.end106, %if.then108
  %wmode.2 = phi i32 [ %wmode.1, %if.end106 ], [ %bf.cast115, %if.then108 ], !dbg !4034
  %wxmode.2 = phi i32 [ %wxmode.1, %if.end106 ], [ %bf.cast115, %if.then108 ], !dbg !4034
  call void @llvm.dbg.value(metadata i32 %wxmode.2, metadata !4027, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %wmode.2, metadata !4020, metadata !DIExpression()), !dbg !4034
  %tobool117 = icmp eq %struct.rtx_def* %target, null, !dbg !4071
  br i1 %tobool117, label %if.then124, label %lor.lhs.false, !dbg !4073

lor.lhs.false:                                    ; preds = %if.end116
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 0, i32 0, !dbg !4074
  %16 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !4074
  %call122 = tail call i32 %16(%struct.rtx_def* nonnull %target, i32 %wmode.2) #6, !dbg !4075
  %tobool123 = icmp eq i32 %call122, 0, !dbg !4075
  br i1 %tobool123, label %if.then124, label %if.end127, !dbg !4076

if.then124:                                       ; preds = %lor.lhs.false, %if.end116
  %call125 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %wmode.2) #6, !dbg !4077
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call125, metadata !4028, metadata !DIExpression()), !dbg !4034
  br label %if.end127, !dbg !4078

if.end127:                                        ; preds = %lor.lhs.false, %if.then124
  %temp.0 = phi %struct.rtx_def* [ %call125, %if.then124 ], [ %target, %lor.lhs.false ], !dbg !4079
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !4028, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !4030, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !4031, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %wide_op, metadata !4032, metadata !DIExpression()), !dbg !4034
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0, i64 0, i32 0, !dbg !4080
  %bf.load128 = load i32, i32* %17, align 8, !dbg !4080
  %bf.lshr129 = lshr i32 %bf.load128, 16, !dbg !4080
  %bf.clear130 = and i32 %bf.lshr129, 255, !dbg !4080
  %cmp131 = icmp ne i32 %bf.clear130, %bf.cast27, !dbg !4082
  %cmp133 = icmp ne i16 %bf.load26, 0, !dbg !4083
  %or.cond = and i1 %cmp131, %cmp133, !dbg !4084
  br i1 %or.cond, label %if.then135, label %if.end149, !dbg !4084

if.then135:                                       ; preds = %if.end127
  %bf.clear138 = and i32 %bf.load128, 16711680, !dbg !4085
  %cmp139 = icmp eq i32 %bf.clear138, 0, !dbg !4086
  br i1 %cmp139, label %cond.end146, label %cond.true141, !dbg !4085

cond.true141:                                     ; preds = %if.then135
  br label %cond.end146, !dbg !4085

cond.end146:                                      ; preds = %if.then135, %cond.true141
  %cond147 = phi i32 [ %bf.clear130, %cond.true141 ], [ %cond, %if.then135 ], !dbg !4085
  %call148 = tail call %struct.rtx_def* @convert_modes(i32 %bf.cast27, i32 %cond147, %struct.rtx_def* %op0, i32 %unsignedp) #6, !dbg !4087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call148, metadata !4030, metadata !DIExpression()), !dbg !4034
  br label %if.end149, !dbg !4088

if.end149:                                        ; preds = %cond.end146, %if.end127
  %xop0.0 = phi %struct.rtx_def* [ %call148, %cond.end146 ], [ %op0, %if.end127 ], !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.0, metadata !4030, metadata !DIExpression()), !dbg !4034
  %tobool150 = icmp eq %struct.rtx_def* %op1, null, !dbg !4089
  br i1 %tobool150, label %if.end175, label %if.then151, !dbg !4091

if.then151:                                       ; preds = %if.end149
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1, i64 0, i32 0, !dbg !4092
  %bf.load152 = load i32, i32* %18, align 8, !dbg !4092
  %bf.lshr153 = lshr i32 %bf.load152, 16, !dbg !4092
  %bf.clear154 = and i32 %bf.lshr153, 255, !dbg !4092
  %cmp155 = icmp ne i32 %bf.clear154, %xmode1.0, !dbg !4094
  %cmp158 = icmp ne i32 %xmode1.0, 0, !dbg !4095
  %or.cond1 = and i1 %cmp155, %cmp158, !dbg !4096
  br i1 %or.cond1, label %if.then160, label %if.end175, !dbg !4096

if.then160:                                       ; preds = %if.then151
  %bf.clear163 = and i32 %bf.load152, 16711680, !dbg !4097
  %cmp164 = icmp eq i32 %bf.clear163, 0, !dbg !4098
  br i1 %cmp164, label %cond.end171, label %cond.true166, !dbg !4097

cond.true166:                                     ; preds = %if.then160
  br label %cond.end171, !dbg !4097

cond.end171:                                      ; preds = %if.then160, %cond.true166
  %cond172 = phi i32 [ %bf.clear154, %cond.true166 ], [ %tmode1.0, %if.then160 ], !dbg !4097
  %call173 = tail call %struct.rtx_def* @convert_modes(i32 %xmode1.0, i32 %cond172, %struct.rtx_def* nonnull %op1, i32 %unsignedp) #6, !dbg !4099
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call173, metadata !4031, metadata !DIExpression()), !dbg !4034
  br label %if.end175, !dbg !4100

if.end175:                                        ; preds = %if.end149, %if.then151, %cond.end171
  %xop1.1 = phi %struct.rtx_def* [ null, %if.end149 ], [ %call173, %cond.end171 ], [ %op1, %if.then151 ], !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop1.1, metadata !4031, metadata !DIExpression()), !dbg !4034
  br i1 %tobool107, label %if.end201, label %if.then177, !dbg !4101

if.then177:                                       ; preds = %if.end175
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %wide_op, i64 0, i32 0, !dbg !4102
  %bf.load178 = load i32, i32* %19, align 8, !dbg !4102
  %bf.lshr179 = lshr i32 %bf.load178, 16, !dbg !4102
  %bf.clear180 = and i32 %bf.lshr179, 255, !dbg !4102
  %cmp181 = icmp ne i32 %bf.clear180, %wxmode.2, !dbg !4105
  %cmp184 = icmp ne i32 %wxmode.2, 0, !dbg !4106
  %or.cond2 = and i1 %cmp181, %cmp184, !dbg !4107
  br i1 %or.cond2, label %if.then186, label %if.end201, !dbg !4107

if.then186:                                       ; preds = %if.then177
  %bf.clear189 = and i32 %bf.load178, 16711680, !dbg !4108
  %cmp190 = icmp eq i32 %bf.clear189, 0, !dbg !4109
  br i1 %cmp190, label %cond.end197, label %cond.true192, !dbg !4108

cond.true192:                                     ; preds = %if.then186
  br label %cond.end197, !dbg !4108

cond.end197:                                      ; preds = %if.then186, %cond.true192
  %cond198 = phi i32 [ %bf.clear180, %cond.true192 ], [ %wmode.2, %if.then186 ], !dbg !4108
  %call199 = tail call %struct.rtx_def* @convert_modes(i32 %wxmode.2, i32 %cond198, %struct.rtx_def* nonnull %wide_op, i32 %unsignedp) #6, !dbg !4110
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call199, metadata !4032, metadata !DIExpression()), !dbg !4034
  br label %if.end201, !dbg !4111

if.end201:                                        ; preds = %if.end175, %if.then177, %cond.end197
  %wxop.1 = phi %struct.rtx_def* [ null, %if.end175 ], [ %call199, %cond.end197 ], [ %wide_op, %if.then177 ], !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %wxop.1, metadata !4032, metadata !DIExpression()), !dbg !4034
  %predicate206 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 1, i32 0, !dbg !4112
  %20 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate206, align 8, !dbg !4112
  %call207 = tail call i32 %20(%struct.rtx_def* %xop0.0, i32 %bf.cast27) #6, !dbg !4114
  %tobool208 = icmp eq i32 %call207, 0, !dbg !4114
  %or.cond3 = and i1 %tobool208, %cmp133, !dbg !4115
  br i1 %or.cond3, label %if.then212, label %if.end214, !dbg !4115

if.then212:                                       ; preds = %if.end201
  %call213 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast27, %struct.rtx_def* %xop0.0) #6, !dbg !4116
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call213, metadata !4030, metadata !DIExpression()), !dbg !4034
  br label %if.end214, !dbg !4117

if.end214:                                        ; preds = %if.end201, %if.then212
  %xop0.1 = phi %struct.rtx_def* [ %xop0.0, %if.end201 ], [ %call213, %if.then212 ], !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.1, metadata !4030, metadata !DIExpression()), !dbg !4034
  br i1 %tobool150, label %if.else254, label %if.then216, !dbg !4118

if.then216:                                       ; preds = %if.end214
  %predicate221 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 2, i32 0, !dbg !4119
  %21 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate221, align 8, !dbg !4119
  %call222 = tail call i32 %21(%struct.rtx_def* %xop1.1, i32 %xmode1.0) #6, !dbg !4123
  %tobool223 = icmp eq i32 %call222, 0, !dbg !4123
  %cmp225 = icmp ne i32 %xmode1.0, 0, !dbg !4124
  %or.cond4 = and i1 %tobool223, %cmp225, !dbg !4125
  br i1 %or.cond4, label %if.then227, label %if.end229, !dbg !4125

if.then227:                                       ; preds = %if.then216
  %call228 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %xmode1.0, %struct.rtx_def* %xop1.1) #6, !dbg !4126
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call228, metadata !4031, metadata !DIExpression()), !dbg !4034
  br label %if.end229, !dbg !4127

if.end229:                                        ; preds = %if.then216, %if.then227
  %xop1.2 = phi %struct.rtx_def* [ %xop1.1, %if.then216 ], [ %call228, %if.then227 ], !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop1.2, metadata !4031, metadata !DIExpression()), !dbg !4034
  br i1 %tobool107, label %if.else248, label %if.then231, !dbg !4128

if.then231:                                       ; preds = %if.end229
  %predicate236 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 3, i32 0, !dbg !4129
  %22 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate236, align 8, !dbg !4129
  %call237 = tail call i32 %22(%struct.rtx_def* %wxop.1, i32 %wxmode.2) #6, !dbg !4133
  %tobool238 = icmp eq i32 %call237, 0, !dbg !4133
  %cmp240 = icmp ne i32 %wxmode.2, 0, !dbg !4134
  %or.cond5 = and i1 %tobool238, %cmp240, !dbg !4135
  br i1 %or.cond5, label %if.then242, label %if.end244, !dbg !4135

if.then242:                                       ; preds = %if.then231
  %call243 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %wxmode.2, %struct.rtx_def* %wxop.1) #6, !dbg !4136
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call243, metadata !4032, metadata !DIExpression()), !dbg !4034
  br label %if.end244, !dbg !4137

if.end244:                                        ; preds = %if.then231, %if.then242
  %wxop.2 = phi %struct.rtx_def* [ %wxop.1, %if.then231 ], [ %call243, %if.then242 ], !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %wxop.2, metadata !4032, metadata !DIExpression()), !dbg !4034
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom22, i32 2, !dbg !4138
  %23 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !4138
  %call247 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %23(%struct.rtx_def* %temp.0, %struct.rtx_def* %xop0.1, %struct.rtx_def* %xop1.2, %struct.rtx_def* %wxop.2) #6, !dbg !4138
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call247, metadata !4029, metadata !DIExpression()), !dbg !4034
  br label %if.end280, !dbg !4139

if.else248:                                       ; preds = %if.end229
  %genfun251 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom22, i32 2, !dbg !4140
  %24 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun251, align 8, !dbg !4140
  %call252 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %24(%struct.rtx_def* %temp.0, %struct.rtx_def* %xop0.1, %struct.rtx_def* %xop1.2) #6, !dbg !4140
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call252, metadata !4029, metadata !DIExpression()), !dbg !4034
  br label %if.end280

if.else254:                                       ; preds = %if.end214
  br i1 %tobool107, label %if.else274, label %if.then256, !dbg !4141

if.then256:                                       ; preds = %if.else254
  %predicate261 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 2, i32 0, !dbg !4143
  %25 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate261, align 8, !dbg !4143
  %call262 = tail call i32 %25(%struct.rtx_def* %wxop.1, i32 %wxmode.2) #6, !dbg !4147
  %tobool263 = icmp eq i32 %call262, 0, !dbg !4147
  %cmp265 = icmp ne i32 %wxmode.2, 0, !dbg !4148
  %or.cond6 = and i1 %tobool263, %cmp265, !dbg !4149
  br i1 %or.cond6, label %if.then267, label %if.end269, !dbg !4149

if.then267:                                       ; preds = %if.then256
  %call268 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %wxmode.2, %struct.rtx_def* %wxop.1) #6, !dbg !4150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call268, metadata !4032, metadata !DIExpression()), !dbg !4034
  br label %if.end269, !dbg !4151

if.end269:                                        ; preds = %if.then256, %if.then267
  %wxop.3 = phi %struct.rtx_def* [ %wxop.1, %if.then256 ], [ %call268, %if.then267 ], !dbg !4034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %wxop.3, metadata !4032, metadata !DIExpression()), !dbg !4034
  %genfun272 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom22, i32 2, !dbg !4152
  %26 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun272, align 8, !dbg !4152
  %call273 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %26(%struct.rtx_def* %temp.0, %struct.rtx_def* %xop0.1, %struct.rtx_def* %wxop.3) #6, !dbg !4152
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call273, metadata !4029, metadata !DIExpression()), !dbg !4034
  br label %if.end280, !dbg !4153

if.else274:                                       ; preds = %if.else254
  %genfun277 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom22, i32 2, !dbg !4154
  %27 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun277, align 8, !dbg !4154
  %call278 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %27(%struct.rtx_def* %temp.0, %struct.rtx_def* %xop0.1) #6, !dbg !4154
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call278, metadata !4029, metadata !DIExpression()), !dbg !4034
  br label %if.end280

if.end280:                                        ; preds = %if.end269, %if.else274, %if.end244, %if.else248
  %pat.2 = phi %struct.rtx_def* [ %call247, %if.end244 ], [ %call252, %if.else248 ], [ %call273, %if.end269 ], [ %call278, %if.else274 ], !dbg !4155
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat.2, metadata !4029, metadata !DIExpression()), !dbg !4034
  %call281 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %pat.2) #6, !dbg !4156
  ret %struct.rtx_def* %temp.0, !dbg !4157
}

declare dso_local %struct.rtx_def* @gen_reg_rtx(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @convert_modes(i32, i32, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @copy_to_mode_reg(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_ternary_op(i32 %mode, %struct.optab_d* %ternary_optab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %op2, %struct.rtx_def* %target, i32 %unsignedp) local_unnamed_addr #4 !dbg !4158 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4162, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata %struct.optab_d* %ternary_optab, metadata !4163, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !4164, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !4165, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2, metadata !4166, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !4167, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !4168, metadata !DIExpression()), !dbg !4178
  %idxprom = sext i32 %mode to i64, !dbg !4179
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %ternary_optab, i64 0, i32 4, i64 %idxprom, i32 0, !dbg !4180
  %0 = load i32, i32* %insn_code, align 4, !dbg !4180
  call void @llvm.dbg.value(metadata i32 %0, metadata !4169, metadata !DIExpression()), !dbg !4178
  %idxprom1 = sext i32 %0 to i64, !dbg !4181
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 3, !dbg !4182
  %1 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !4182
  %mode4 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 1, i32 2, !dbg !4183
  %bf.load = load i16, i16* %mode4, align 8, !dbg !4183
  %bf.cast = zext i16 %bf.load to i32, !dbg !4183
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !4170, metadata !DIExpression()), !dbg !4178
  %mode9 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 2, i32 2, !dbg !4184
  %bf.load10 = load i16, i16* %mode9, align 8, !dbg !4184
  %bf.cast11 = zext i16 %bf.load10 to i32, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %bf.cast11, metadata !4171, metadata !DIExpression()), !dbg !4178
  %mode16 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 3, i32 2, !dbg !4185
  %bf.load17 = load i16, i16* %mode16, align 8, !dbg !4185
  %bf.cast18 = zext i16 %bf.load17 to i32, !dbg !4185
  call void @llvm.dbg.value(metadata i32 %bf.cast18, metadata !4172, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !4175, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !4176, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2, metadata !4177, metadata !DIExpression()), !dbg !4178
  %cmp = icmp eq i32 %0, 2956, !dbg !4186
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4186

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 684, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4186
  br label %cond.end, !dbg !4186

cond.end:                                         ; preds = %entry, %cond.true
  %tobool = icmp eq %struct.rtx_def* %target, null, !dbg !4187
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4189

lor.lhs.false:                                    ; preds = %cond.end
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 0, i32 0, !dbg !4190
  %2 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !4190
  %call = tail call i32 %2(%struct.rtx_def* nonnull %target, i32 %mode) #6, !dbg !4191
  %tobool27 = icmp eq i32 %call, 0, !dbg !4191
  br i1 %tobool27, label %if.then, label %if.end, !dbg !4192

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  %call28 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !4193
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !4173, metadata !DIExpression()), !dbg !4178
  br label %if.end, !dbg !4194

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %temp.0 = phi %struct.rtx_def* [ %call28, %if.then ], [ %target, %lor.lhs.false ], !dbg !4195
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !4173, metadata !DIExpression()), !dbg !4178
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0, i64 0, i32 0, !dbg !4196
  %bf.load29 = load i32, i32* %3, align 8, !dbg !4196
  %bf.lshr = lshr i32 %bf.load29, 16, !dbg !4196
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4196
  %cmp30 = icmp ne i32 %bf.clear, %bf.cast, !dbg !4198
  %cmp31 = icmp ne i16 %bf.load, 0, !dbg !4199
  %or.cond = and i1 %cmp30, %cmp31, !dbg !4200
  br i1 %or.cond, label %if.then32, label %if.end45, !dbg !4200

if.then32:                                        ; preds = %if.end
  %bf.clear35 = and i32 %bf.load29, 16711680, !dbg !4201
  %cmp36 = icmp eq i32 %bf.clear35, 0, !dbg !4202
  br i1 %cmp36, label %cond.end42, label %cond.true37, !dbg !4201

cond.true37:                                      ; preds = %if.then32
  br label %cond.end42, !dbg !4201

cond.end42:                                       ; preds = %if.then32, %cond.true37
  %cond43 = phi i32 [ %bf.clear, %cond.true37 ], [ %mode, %if.then32 ], !dbg !4201
  %call44 = tail call %struct.rtx_def* @convert_modes(i32 %bf.cast, i32 %cond43, %struct.rtx_def* %op0, i32 %unsignedp) #6, !dbg !4203
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !4175, metadata !DIExpression()), !dbg !4178
  br label %if.end45, !dbg !4204

if.end45:                                         ; preds = %cond.end42, %if.end
  %xop0.0 = phi %struct.rtx_def* [ %call44, %cond.end42 ], [ %op0, %if.end ], !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.0, metadata !4175, metadata !DIExpression()), !dbg !4178
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1, i64 0, i32 0, !dbg !4205
  %bf.load46 = load i32, i32* %4, align 8, !dbg !4205
  %bf.lshr47 = lshr i32 %bf.load46, 16, !dbg !4205
  %bf.clear48 = and i32 %bf.lshr47, 255, !dbg !4205
  %cmp49 = icmp ne i32 %bf.clear48, %bf.cast11, !dbg !4207
  %cmp51 = icmp ne i16 %bf.load10, 0, !dbg !4208
  %or.cond1 = and i1 %cmp49, %cmp51, !dbg !4209
  br i1 %or.cond1, label %if.then52, label %if.end65, !dbg !4209

if.then52:                                        ; preds = %if.end45
  %bf.clear55 = and i32 %bf.load46, 16711680, !dbg !4210
  %cmp56 = icmp eq i32 %bf.clear55, 0, !dbg !4211
  br i1 %cmp56, label %cond.end62, label %cond.true57, !dbg !4210

cond.true57:                                      ; preds = %if.then52
  br label %cond.end62, !dbg !4210

cond.end62:                                       ; preds = %if.then52, %cond.true57
  %cond63 = phi i32 [ %bf.clear48, %cond.true57 ], [ %mode, %if.then52 ], !dbg !4210
  %call64 = tail call %struct.rtx_def* @convert_modes(i32 %bf.cast11, i32 %cond63, %struct.rtx_def* %op1, i32 %unsignedp) #6, !dbg !4212
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64, metadata !4176, metadata !DIExpression()), !dbg !4178
  br label %if.end65, !dbg !4213

if.end65:                                         ; preds = %cond.end62, %if.end45
  %xop1.0 = phi %struct.rtx_def* [ %call64, %cond.end62 ], [ %op1, %if.end45 ], !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop1.0, metadata !4176, metadata !DIExpression()), !dbg !4178
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op2, i64 0, i32 0, !dbg !4214
  %bf.load66 = load i32, i32* %5, align 8, !dbg !4214
  %bf.lshr67 = lshr i32 %bf.load66, 16, !dbg !4214
  %bf.clear68 = and i32 %bf.lshr67, 255, !dbg !4214
  %cmp69 = icmp ne i32 %bf.clear68, %bf.cast18, !dbg !4216
  %cmp71 = icmp ne i16 %bf.load17, 0, !dbg !4217
  %or.cond2 = and i1 %cmp69, %cmp71, !dbg !4218
  br i1 %or.cond2, label %if.then72, label %if.end85, !dbg !4218

if.then72:                                        ; preds = %if.end65
  %bf.clear75 = and i32 %bf.load66, 16711680, !dbg !4219
  %cmp76 = icmp eq i32 %bf.clear75, 0, !dbg !4220
  br i1 %cmp76, label %cond.end82, label %cond.true77, !dbg !4219

cond.true77:                                      ; preds = %if.then72
  br label %cond.end82, !dbg !4219

cond.end82:                                       ; preds = %if.then72, %cond.true77
  %cond83 = phi i32 [ %bf.clear68, %cond.true77 ], [ %mode, %if.then72 ], !dbg !4219
  %call84 = tail call %struct.rtx_def* @convert_modes(i32 %bf.cast18, i32 %cond83, %struct.rtx_def* %op2, i32 %unsignedp) #6, !dbg !4221
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call84, metadata !4177, metadata !DIExpression()), !dbg !4178
  br label %if.end85, !dbg !4222

if.end85:                                         ; preds = %cond.end82, %if.end65
  %xop2.0 = phi %struct.rtx_def* [ %call84, %cond.end82 ], [ %op2, %if.end65 ], !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop2.0, metadata !4177, metadata !DIExpression()), !dbg !4178
  %predicate90 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 1, i32 0, !dbg !4223
  %6 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate90, align 8, !dbg !4223
  %call91 = tail call i32 %6(%struct.rtx_def* %xop0.0, i32 %bf.cast) #6, !dbg !4225
  %tobool92 = icmp eq i32 %call91, 0, !dbg !4225
  %or.cond3 = and i1 %tobool92, %cmp31, !dbg !4226
  br i1 %or.cond3, label %if.then95, label %if.end97, !dbg !4226

if.then95:                                        ; preds = %if.end85
  %call96 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %xop0.0) #6, !dbg !4227
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call96, metadata !4175, metadata !DIExpression()), !dbg !4178
  br label %if.end97, !dbg !4228

if.end97:                                         ; preds = %if.end85, %if.then95
  %xop0.1 = phi %struct.rtx_def* [ %xop0.0, %if.end85 ], [ %call96, %if.then95 ], !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.1, metadata !4175, metadata !DIExpression()), !dbg !4178
  %predicate102 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 2, i32 0, !dbg !4229
  %7 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate102, align 8, !dbg !4229
  %call103 = tail call i32 %7(%struct.rtx_def* %xop1.0, i32 %bf.cast11) #6, !dbg !4231
  %tobool104 = icmp eq i32 %call103, 0, !dbg !4231
  %or.cond4 = and i1 %tobool104, %cmp51, !dbg !4232
  br i1 %or.cond4, label %if.then107, label %if.end109, !dbg !4232

if.then107:                                       ; preds = %if.end97
  %call108 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast11, %struct.rtx_def* %xop1.0) #6, !dbg !4233
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call108, metadata !4176, metadata !DIExpression()), !dbg !4178
  br label %if.end109, !dbg !4234

if.end109:                                        ; preds = %if.end97, %if.then107
  %xop1.1 = phi %struct.rtx_def* [ %xop1.0, %if.end97 ], [ %call108, %if.then107 ], !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop1.1, metadata !4176, metadata !DIExpression()), !dbg !4178
  %predicate114 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 3, i32 0, !dbg !4235
  %8 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate114, align 8, !dbg !4235
  %call115 = tail call i32 %8(%struct.rtx_def* %xop2.0, i32 %bf.cast18) #6, !dbg !4237
  %tobool116 = icmp eq i32 %call115, 0, !dbg !4237
  %or.cond5 = and i1 %tobool116, %cmp71, !dbg !4238
  br i1 %or.cond5, label %if.then119, label %if.end121, !dbg !4238

if.then119:                                       ; preds = %if.end109
  %call120 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast18, %struct.rtx_def* %xop2.0) #6, !dbg !4239
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call120, metadata !4177, metadata !DIExpression()), !dbg !4178
  br label %if.end121, !dbg !4240

if.end121:                                        ; preds = %if.end109, %if.then119
  %xop2.1 = phi %struct.rtx_def* [ %xop2.0, %if.end109 ], [ %call120, %if.then119 ], !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop2.1, metadata !4177, metadata !DIExpression()), !dbg !4178
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 2, !dbg !4241
  %9 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !4241
  %call124 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %9(%struct.rtx_def* %temp.0, %struct.rtx_def* %xop0.1, %struct.rtx_def* %xop1.1, %struct.rtx_def* %xop2.1) #6, !dbg !4241
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call124, metadata !4174, metadata !DIExpression()), !dbg !4178
  %call125 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call124) #6, !dbg !4242
  ret %struct.rtx_def* %temp.0, !dbg !4243
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @force_expand_binop(i32 %mode, %struct.optab_d* %binoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) local_unnamed_addr #4 !dbg !4244 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4248, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !4249, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !4250, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !4251, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !4252, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !4253, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i32 %methods, metadata !4254, metadata !DIExpression()), !dbg !4256
  %call = tail call fastcc %struct.rtx_def* @simplify_expand_binop(i32 %mode, %struct.optab_d* %binoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) #8, !dbg !4257
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4255, metadata !DIExpression()), !dbg !4256
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !4258
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4260

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq %struct.rtx_def* %call, %target, !dbg !4261
  br i1 %cmp1, label %cleanup, label %if.then2, !dbg !4263

if.then2:                                         ; preds = %if.end
  %call3 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* nonnull %call) #6, !dbg !4264
  br label %cleanup, !dbg !4264

cleanup:                                          ; preds = %if.end, %if.then2, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %if.then2 ], [ 1, %if.end ], !dbg !4256
  ret i8 %retval.0, !dbg !4265
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @simplify_expand_binop(i32 %mode, %struct.optab_d* %binoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) unnamed_addr #4 !dbg !4266 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4270, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !4271, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !4272, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !4273, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !4274, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !4275, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata i32 %methods, metadata !4276, metadata !DIExpression()), !dbg !4280
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0, i64 0, i32 0, !dbg !4281
  %bf.load = load i32, i32* %0, align 8, !dbg !4281
  %bf.clear = and i32 %bf.load, 65535, !dbg !4281
  %idxprom = zext i32 %bf.clear to i64, !dbg !4281
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4281
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4281
  %cmp = icmp eq i32 %1, 9, !dbg !4281
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !4282

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1, i64 0, i32 0, !dbg !4283
  %bf.load1 = load i32, i32* %2, align 8, !dbg !4283
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4283
  %idxprom3 = zext i32 %bf.clear2 to i64, !dbg !4283
  %arrayidx4 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom3, !dbg !4283
  %3 = load i32, i32* %arrayidx4, align 4, !dbg !4283
  %cmp5 = icmp eq i32 %3, 9, !dbg !4283
  br i1 %cmp5, label %if.then, label %if.end7, !dbg !4284

if.then:                                          ; preds = %land.lhs.true
  %code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab, i64 0, i32 0, !dbg !4285
  %4 = load i32, i32* %code, align 8, !dbg !4285
  %call = tail call %struct.rtx_def* @simplify_binary_operation(i32 %4, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #6, !dbg !4286
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4277, metadata !DIExpression()), !dbg !4287
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !4288
  br i1 %tobool, label %if.end7, label %return

if.end7:                                          ; preds = %if.then, %land.lhs.true, %entry
  %call8 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* %binoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) #8, !dbg !4290
  br label %return, !dbg !4291

return:                                           ; preds = %if.then, %if.end7
  %retval.1 = phi %struct.rtx_def* [ %call, %if.then ], [ %call8, %if.end7 ], !dbg !4280
  ret %struct.rtx_def* %retval.1, !dbg !4292
}

declare dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_vec_shift_expr(%struct.separate_ops* %ops, %struct.rtx_def* %target) local_unnamed_addr #4 !dbg !4293 {
entry:
  call void @llvm.dbg.value(metadata %struct.separate_ops* %ops, metadata !4297, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !4298, metadata !DIExpression()), !dbg !4309
  %type = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 1, !dbg !4310
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !4310
  %1 = load i64*, i64** %0, align 8, !dbg !4310
  %bf.load = load i64, i64* %1, align 8, !dbg !4310
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !4310
  %cmp = icmp eq i64 %bf.cast2, 14, !dbg !4310
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4310

cond.true:                                        ; preds = %entry
  %.cast = bitcast i64* %1 to %union.tree_node*, !dbg !4310
  %call = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !4310
  br label %cond.end, !dbg !4310

cond.false:                                       ; preds = %entry
  %type3 = bitcast i64* %1 to %struct.tree_type*, !dbg !4310
  %mode4 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3, i64 0, i32 6, !dbg !4310
  %bf.load5 = load i32, i32* %mode4, align 4, !dbg !4310
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !4310
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !4310
  br label %cond.end, !dbg !4310

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear6, %cond.false ], !dbg !4310
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4304, metadata !DIExpression()), !dbg !4309
  %op0 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 2, !dbg !4311
  %2 = load %union.tree_node*, %union.tree_node** %op0, align 8, !dbg !4311
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4305, metadata !DIExpression()), !dbg !4309
  %op1 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 3, !dbg !4312
  %3 = load %union.tree_node*, %union.tree_node** %op1, align 8, !dbg !4312
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !4306, metadata !DIExpression()), !dbg !4309
  %code = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 0, !dbg !4313
  %4 = load i32, i32* %code, align 8, !dbg !4313
  switch i32 %4, label %sw.default [
    i32 171, label %sw.epilog
    i32 170, label %sw.bb7
  ], !dbg !4314

sw.bb7:                                           ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 138), metadata !4307, metadata !DIExpression()), !dbg !4309
  br label %sw.epilog, !dbg !4315

sw.default:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 801, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4317
  unreachable, !dbg !4318

sw.epilog:                                        ; preds = %cond.end, %sw.bb7
  %shift_optab.0 = phi %struct.optab_d* [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 138), %sw.bb7 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 139), %cond.end ]
  call void @llvm.dbg.value(metadata %struct.optab_d* %shift_optab.0, metadata !4307, metadata !DIExpression()), !dbg !4309
  %idxprom = sext i32 %cond to i64, !dbg !4319
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %shift_optab.0, i64 0, i32 4, i64 %idxprom, i32 0, !dbg !4320
  %5 = load i32, i32* %insn_code, align 4, !dbg !4320
  call void @llvm.dbg.value(metadata i32 %5, metadata !4299, metadata !DIExpression()), !dbg !4309
  %cmp8 = icmp eq i32 %5, 2956, !dbg !4321
  br i1 %cmp8, label %cond.true9, label %cond.end11, !dbg !4321

cond.true9:                                       ; preds = %sw.epilog
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 805, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4321
  br label %cond.end11, !dbg !4321

cond.end11:                                       ; preds = %sw.epilog, %cond.true9
  %idxprom13 = zext i32 %5 to i64, !dbg !4322
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom13, i32 3, !dbg !4323
  %6 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !4323
  %mode16 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %6, i64 1, i32 2, !dbg !4324
  %bf.load17 = load i16, i16* %mode16, align 8, !dbg !4324
  %bf.cast18 = zext i16 %bf.load17 to i32, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %bf.cast18, metadata !4302, metadata !DIExpression()), !dbg !4309
  %mode23 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %6, i64 2, i32 2, !dbg !4325
  %bf.load24 = load i16, i16* %mode23, align 8, !dbg !4325
  %bf.cast25 = zext i16 %bf.load24 to i32, !dbg !4325
  call void @llvm.dbg.value(metadata i32 %bf.cast25, metadata !4303, metadata !DIExpression()), !dbg !4309
  %call26 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %2) #8, !dbg !4326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call26, metadata !4300, metadata !DIExpression()), !dbg !4309
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %6, i64 1, i32 0, !dbg !4327
  %7 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !4327
  %call31 = tail call i32 %7(%struct.rtx_def* %call26, i32 %bf.cast18) #6, !dbg !4329
  %tobool = icmp eq i32 %call31, 0, !dbg !4329
  %cmp32 = icmp ne i16 %bf.load17, 0, !dbg !4330
  %or.cond = and i1 %tobool, %cmp32, !dbg !4331
  br i1 %or.cond, label %if.then, label %if.end, !dbg !4331

if.then:                                          ; preds = %cond.end11
  %call33 = tail call %struct.rtx_def* @force_reg(i32 %bf.cast18, %struct.rtx_def* %call26) #6, !dbg !4332
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call33, metadata !4300, metadata !DIExpression()), !dbg !4309
  br label %if.end, !dbg !4333

if.end:                                           ; preds = %cond.end11, %if.then
  %rtx_op1.0 = phi %struct.rtx_def* [ %call26, %cond.end11 ], [ %call33, %if.then ], !dbg !4309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rtx_op1.0, metadata !4300, metadata !DIExpression()), !dbg !4309
  %call34 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %3) #8, !dbg !4334
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !4301, metadata !DIExpression()), !dbg !4309
  %predicate39 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %6, i64 2, i32 0, !dbg !4335
  %8 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate39, align 8, !dbg !4335
  %call40 = tail call i32 %8(%struct.rtx_def* %call34, i32 %bf.cast25) #6, !dbg !4337
  %tobool41 = icmp eq i32 %call40, 0, !dbg !4337
  %cmp43 = icmp ne i16 %bf.load24, 0, !dbg !4338
  %or.cond1 = and i1 %tobool41, %cmp43, !dbg !4339
  br i1 %or.cond1, label %if.then44, label %if.end46, !dbg !4339

if.then44:                                        ; preds = %if.end
  %call45 = tail call %struct.rtx_def* @force_reg(i32 %bf.cast25, %struct.rtx_def* %call34) #6, !dbg !4340
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !4301, metadata !DIExpression()), !dbg !4309
  br label %if.end46, !dbg !4341

if.end46:                                         ; preds = %if.end, %if.then44
  %rtx_op2.0 = phi %struct.rtx_def* [ %call34, %if.end ], [ %call45, %if.then44 ], !dbg !4309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rtx_op2.0, metadata !4301, metadata !DIExpression()), !dbg !4309
  %tobool47 = icmp eq %struct.rtx_def* %target, null, !dbg !4342
  br i1 %tobool47, label %if.then55, label %lor.lhs.false, !dbg !4344

lor.lhs.false:                                    ; preds = %if.end46
  %predicate52 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %6, i64 0, i32 0, !dbg !4345
  %9 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate52, align 8, !dbg !4345
  %call53 = tail call i32 %9(%struct.rtx_def* nonnull %target, i32 %cond) #6, !dbg !4346
  %tobool54 = icmp eq i32 %call53, 0, !dbg !4346
  br i1 %tobool54, label %if.then55, label %if.end57, !dbg !4347

if.then55:                                        ; preds = %lor.lhs.false, %if.end46
  %call56 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %cond) #6, !dbg !4348
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call56, metadata !4298, metadata !DIExpression()), !dbg !4309
  br label %if.end57, !dbg !4349

if.end57:                                         ; preds = %lor.lhs.false, %if.then55
  %target.addr.0 = phi %struct.rtx_def* [ %target, %lor.lhs.false ], [ %call56, %if.then55 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !4298, metadata !DIExpression()), !dbg !4309
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom13, i32 2, !dbg !4350
  %10 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !4350
  %call60 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %10(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %rtx_op1.0, %struct.rtx_def* %rtx_op2.0) #6, !dbg !4350
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call60, metadata !4308, metadata !DIExpression()), !dbg !4309
  %tobool61 = icmp eq %struct.rtx_def* %call60, null, !dbg !4351
  br i1 %tobool61, label %cond.true62, label %cond.end64, !dbg !4351

cond.true62:                                      ; preds = %if.end57
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 826, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4351
  br label %cond.end64, !dbg !4351

cond.end64:                                       ; preds = %if.end57, %cond.true62
  %call66 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call60) #6, !dbg !4352
  ret %struct.rtx_def* %target.addr.0, !dbg !4353
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %exp) unnamed_addr #0 !dbg !4354 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4358, metadata !DIExpression()), !dbg !4359
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 0, %struct.rtx_def** null) #6, !dbg !4360
  ret %struct.rtx_def* %call, !dbg !4361
}

declare dso_local %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_simple_binop(i32 %mode, i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) local_unnamed_addr #4 !dbg !4362 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4366, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.value(metadata i32 %code, metadata !4367, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !4368, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !4369, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !4370, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !4371, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.value(metadata i32 %methods, metadata !4372, metadata !DIExpression()), !dbg !4374
  %idxprom = sext i32 %code to i64, !dbg !4375
  %arrayidx = getelementptr inbounds [140 x %struct.optab_d*], [140 x %struct.optab_d*]* @code_to_optab, i64 0, i64 %idxprom, !dbg !4375
  %0 = load %struct.optab_d*, %struct.optab_d** %arrayidx, align 8, !dbg !4375
  call void @llvm.dbg.value(metadata %struct.optab_d* %0, metadata !4373, metadata !DIExpression()), !dbg !4374
  %tobool = icmp eq %struct.optab_d* %0, null, !dbg !4376
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4376

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1322, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4376
  br label %cond.end, !dbg !4376

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* %0, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) #8, !dbg !4377
  ret %struct.rtx_def* %call, !dbg !4378
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* %binoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) local_unnamed_addr #4 !dbg !4379 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4381, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !4382, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !4383, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !4384, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !4385, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !4386, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata i32 %methods, metadata !4387, metadata !DIExpression()), !dbg !4503
  switch i32 %methods, label %cond.false [
    i32 1, label %cond.end
    i32 3, label %cond.end
  ], !dbg !4504

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4505

cond.end:                                         ; preds = %entry, %entry, %cond.false
  %cond = phi i32 [ %methods, %cond.false ], [ 2, %entry ], [ 2, %entry ], !dbg !4505
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4388, metadata !DIExpression()), !dbg !4503
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !4506
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4393, metadata !DIExpression()), !dbg !4503
  %idxprom = zext i32 %mode to i64, !dbg !4507
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4507
  %0 = load i8, i8* %arrayidx, align 1, !dbg !4507
  call void @llvm.dbg.value(metadata i8 %0, metadata !4389, metadata !DIExpression()), !dbg !4503
  %cmp2 = icmp eq %struct.optab_d* %binoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), !dbg !4508
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !4510

land.lhs.true:                                    ; preds = %cond.end
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1, i64 0, i32 0, !dbg !4511
  %bf.load = load i32, i32* %1, align 8, !dbg !4511
  %bf.clear = and i32 %bf.load, 65535, !dbg !4511
  %cmp4 = icmp eq i32 %bf.clear, 30, !dbg !4511
  br i1 %cmp4, label %if.then, label %if.end, !dbg !4512

if.then:                                          ; preds = %land.lhs.true
  %call6 = tail call %struct.rtx_def* @negate_rtx(i32 %mode, %struct.rtx_def* %op1) #6, !dbg !4513
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !4384, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), metadata !4382, metadata !DIExpression()), !dbg !4503
  br label %if.end, !dbg !4515

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  %op1.addr.0 = phi %struct.rtx_def* [ %call6, %if.then ], [ %op1, %land.lhs.true ], [ %op1, %cond.end ]
  %binoptab.addr.0 = phi %struct.optab_d* [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), %if.then ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %land.lhs.true ], [ %binoptab, %cond.end ]
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab.addr.0, metadata !4382, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.0, metadata !4384, metadata !DIExpression()), !dbg !4503
  %call7 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !4516
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !4394, metadata !DIExpression()), !dbg !4503
  %cmp8 = icmp eq i32 %methods, 4, !dbg !4517
  br i1 %cmp8, label %if.end19, label %land.lhs.true10, !dbg !4519

land.lhs.true10:                                  ; preds = %if.end
  %idxprom11 = sext i32 %mode to i64, !dbg !4520
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab.addr.0, i64 0, i32 4, i64 %idxprom11, i32 0, !dbg !4521
  %2 = load i32, i32* %insn_code, align 4, !dbg !4521
  %cmp13 = icmp eq i32 %2, 2956, !dbg !4522
  br i1 %cmp13, label %if.end19, label %if.then15, !dbg !4523

if.then15:                                        ; preds = %land.lhs.true10
  %call16 = tail call fastcc %struct.rtx_def* @expand_binop_directly(i32 %mode, %struct.optab_d* %binoptab.addr.0, %struct.rtx_def* %op0, %struct.rtx_def* %op1.addr.0, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods, %struct.rtx_def* %call7) #8, !dbg !4524
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call16, metadata !4392, metadata !DIExpression()), !dbg !4503
  %tobool = icmp eq %struct.rtx_def* %call16, null, !dbg !4526
  br i1 %tobool, label %if.end19, label %cleanup1043, !dbg !4528

if.end19:                                         ; preds = %if.then15, %land.lhs.true10, %if.end
  %cmp20 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 47), !dbg !4529
  br i1 %cmp20, label %land.lhs.true22, label %lor.lhs.false28, !dbg !4530

land.lhs.true22:                                  ; preds = %if.end19
  %idxprom23 = sext i32 %mode to i64, !dbg !4531
  %insn_code25 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 48, i32 4, i64 %idxprom23, i32 0, !dbg !4532
  %3 = load i32, i32* %insn_code25, align 4, !dbg !4532
  %cmp26 = icmp eq i32 %3, 2956, !dbg !4533
  br i1 %cmp26, label %lor.lhs.false28, label %land.lhs.true37, !dbg !4534

lor.lhs.false28:                                  ; preds = %land.lhs.true22, %if.end19
  %cmp29 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 48), !dbg !4535
  br i1 %cmp29, label %land.lhs.true31, label %if.end82, !dbg !4536

land.lhs.true31:                                  ; preds = %lor.lhs.false28
  %idxprom32 = sext i32 %mode to i64, !dbg !4537
  %insn_code34 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 47, i32 4, i64 %idxprom32, i32 0, !dbg !4538
  %4 = load i32, i32* %insn_code34, align 4, !dbg !4538
  %cmp35 = icmp ne i32 %4, 2956, !dbg !4539
  %cmp38 = icmp eq i8 %0, 2, !dbg !4540
  %or.cond = and i1 %cmp35, %cmp38, !dbg !4541
  br i1 %or.cond, label %if.then40, label %if.end82, !dbg !4541

land.lhs.true37:                                  ; preds = %land.lhs.true22
  %cmp38.old = icmp eq i8 %0, 2, !dbg !4540
  br i1 %cmp38.old, label %if.then40, label %if.end82, !dbg !4542

if.then40:                                        ; preds = %land.lhs.true31, %land.lhs.true37
  %cond43 = select i1 %cmp20, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 48), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 47), !dbg !4543
  call void @llvm.dbg.value(metadata %struct.optab_d* %cond43, metadata !4395, metadata !DIExpression()), !dbg !4544
  %arrayidx45 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4545
  %5 = load i8, i8* %arrayidx45, align 1, !dbg !4545
  %conv47 = zext i8 %5 to i32, !dbg !4545
  %mul = shl nuw nsw i32 %conv47, 3, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %mul, metadata !4399, metadata !DIExpression()), !dbg !4544
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.addr.0, i64 0, i32 0, !dbg !4546
  %bf.load50 = load i32, i32* %6, align 8, !dbg !4546
  %bf.clear51 = and i32 %bf.load50, 65535, !dbg !4546
  %cmp52 = icmp eq i32 %bf.clear51, 30, !dbg !4546
  br i1 %cmp52, label %if.then54, label %if.else, !dbg !4548

if.then54:                                        ; preds = %if.then40
  %conv55 = zext i32 %mul to i64, !dbg !4549
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.addr.0, i64 0, i32 1, !dbg !4549
  %arrayidx56 = bitcast %union.u* %u to i64*, !dbg !4549
  %7 = load i64, i64* %arrayidx56, align 8, !dbg !4549
  %sub = sub nsw i64 %conv55, %7, !dbg !4549
  %call57 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #6, !dbg !4549
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call57, metadata !4398, metadata !DIExpression()), !dbg !4544
  br label %if.end75, !dbg !4550

if.else:                                          ; preds = %if.then40
  %8 = load i64 (i32)*, i64 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 53), align 8, !dbg !4551
  %call58 = tail call i64 %8(i32 %mode) #6, !dbg !4553
  %sub59 = add nsw i32 %mul, -1, !dbg !4554
  %conv60 = zext i32 %sub59 to i64, !dbg !4555
  %cmp61 = icmp eq i64 %call58, %conv60, !dbg !4556
  %bf.load64 = load i32, i32* %6, align 8, !dbg !4557
  %bf.lshr = lshr i32 %bf.load64, 16, !dbg !4557
  %bf.clear65 = and i32 %bf.lshr, 255, !dbg !4557
  br i1 %cmp61, label %if.then63, label %if.else67, !dbg !4558

if.then63:                                        ; preds = %if.else
  %call66 = tail call %struct.rtx_def* @negate_rtx(i32 %bf.clear65, %struct.rtx_def* %op1.addr.0) #6, !dbg !4559
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call66, metadata !4398, metadata !DIExpression()), !dbg !4544
  br label %if.end75, !dbg !4560

if.else67:                                        ; preds = %if.else
  %conv71 = zext i32 %mul to i64, !dbg !4561
  %call72 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv71) #6, !dbg !4561
  %call73 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear65, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.rtx_def* %call72, %struct.rtx_def* %op1.addr.0, %struct.rtx_def* null, i32 %unsignedp, i32 0) #8, !dbg !4562
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call73, metadata !4398, metadata !DIExpression()), !dbg !4544
  br label %if.end75

if.end75:                                         ; preds = %if.then63, %if.else67, %if.then54
  %newop1.1 = phi %struct.rtx_def* [ %call57, %if.then54 ], [ %call66, %if.then63 ], [ %call73, %if.else67 ], !dbg !4563
  call void @llvm.dbg.value(metadata %struct.rtx_def* %newop1.1, metadata !4398, metadata !DIExpression()), !dbg !4544
  %call76 = tail call fastcc %struct.rtx_def* @expand_binop_directly(i32 %mode, %struct.optab_d* %cond43, %struct.rtx_def* %op0, %struct.rtx_def* %newop1.1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods, %struct.rtx_def* %call7) #8, !dbg !4564
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call76, metadata !4392, metadata !DIExpression()), !dbg !4503
  %tobool77 = icmp eq %struct.rtx_def* %call76, null, !dbg !4565
  br i1 %tobool77, label %if.end82, label %cleanup1043

if.end82:                                         ; preds = %if.end75, %land.lhs.true37, %land.lhs.true31, %lor.lhs.false28
  %cmp83 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16), !dbg !4567
  br i1 %cmp83, label %land.lhs.true85, label %if.end123, !dbg !4569

land.lhs.true85:                                  ; preds = %if.end82
  %arrayidx87 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !4570
  %9 = load i8, i8* %arrayidx87, align 1, !dbg !4570
  %cmp89 = icmp eq i8 %9, 0, !dbg !4571
  br i1 %cmp89, label %if.end123, label %land.lhs.true91, !dbg !4572

land.lhs.true91:                                  ; preds = %land.lhs.true85
  %tobool92 = icmp eq i32 %unsignedp, 0, !dbg !4573
  %cond93 = select i1 %tobool92, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 20), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 21), !dbg !4573
  %idxprom98 = zext i8 %9 to i64, !dbg !4573
  %insn_code100 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %cond93, i64 0, i32 4, i64 %idxprom98, i32 0, !dbg !4574
  %10 = load i32, i32* %insn_code100, align 4, !dbg !4574
  %cmp101 = icmp eq i32 %10, 2956, !dbg !4575
  br i1 %cmp101, label %if.end123, label %if.then103, !dbg !4576

if.then103:                                       ; preds = %land.lhs.true91
  %conv106 = zext i8 %9 to i32, !dbg !4577
  %call109 = tail call %struct.rtx_def* @expand_binop(i32 %conv106, %struct.optab_d* %cond93, %struct.rtx_def* %op0, %struct.rtx_def* %op1.addr.0, %struct.rtx_def* null, i32 %unsignedp, i32 0) #8, !dbg !4579
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call109, metadata !4392, metadata !DIExpression()), !dbg !4503
  %cmp110 = icmp eq %struct.rtx_def* %call109, null, !dbg !4580
  br i1 %cmp110, label %if.end123, label %if.then112, !dbg !4582

if.then112:                                       ; preds = %if.then103
  %cmp116 = icmp eq i8 %0, 2, !dbg !4583
  br i1 %cmp116, label %if.then118, label %if.else120, !dbg !4586

if.then118:                                       ; preds = %if.then112
  %11 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !4587
  %call119 = tail call %struct.rtx_def* %11(i32 %mode, %struct.rtx_def* nonnull %call109) #6, !dbg !4587
  br label %cleanup1043, !dbg !4588

if.else120:                                       ; preds = %if.then112
  %call121 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode, %struct.rtx_def* nonnull %call109, i32 %unsignedp) #6, !dbg !4589
  br label %cleanup1043, !dbg !4590

if.end123:                                        ; preds = %if.then103, %land.lhs.true91, %land.lhs.true85, %if.end82
  switch i8 %0, label %if.end249 [
    i8 2, label %land.lhs.true147
    i8 8, label %land.lhs.true147
    i8 9, label %land.lhs.true147
    i8 11, label %land.lhs.true147
    i8 4, label %land.lhs.true147
    i8 5, label %land.lhs.true147
    i8 6, label %land.lhs.true147
    i8 7, label %land.lhs.true147
  ], !dbg !4591

land.lhs.true147:                                 ; preds = %if.end123, %if.end123, %if.end123, %if.end123, %if.end123, %if.end123, %if.end123, %if.end123
  %switch54 = icmp ult i32 %methods, 2, !dbg !4592
  br i1 %switch54, label %if.end249, label %if.then153, !dbg !4592

if.then153:                                       ; preds = %land.lhs.true147
  %tobool175 = icmp eq i32 %unsignedp, 0, !dbg !4593
  %cond176 = select i1 %tobool175, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 20), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 21), !dbg !4593
  %cmp187 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), !dbg !4594
  %cmp190 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), !dbg !4594
  %or.cond12 = or i1 %cmp187, %cmp190, !dbg !4594
  %cmp193 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), !dbg !4594
  %or.cond13 = or i1 %or.cond12, %cmp193, !dbg !4594
  %cmp196 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), !dbg !4594
  %or.cond14 = or i1 %or.cond13, %cmp196, !dbg !4594
  %cmp199 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), !dbg !4594
  %or.cond15 = or i1 %or.cond14, %cmp199, !dbg !4594
  %or.cond16 = or i1 %or.cond15, %cmp83, !dbg !4594
  %cmp205 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), !dbg !4594
  %or.cond17 = or i1 %or.cond16, %cmp205, !dbg !4594
  %cmp208 = icmp eq i8 %0, 2, !dbg !4594
  %or.cond18 = and i1 %or.cond17, %cmp208, !dbg !4594
  %conv211 = trunc i32 %unsignedp to i8, !dbg !4596
  %cmp222 = icmp ne %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), !dbg !4598
  br i1 %cmp83, label %if.then153.split.us, label %if.then153.if.then153.split_crit_edge, !dbg !4599

if.then153.if.then153.split_crit_edge:            ; preds = %if.then153
  br label %for.cond, !dbg !4599

if.then153.split.us:                              ; preds = %if.then153
  br label %for.cond.us, !dbg !4599

for.cond.us:                                      ; preds = %for.inc.us, %if.then153.split.us
  %idxprom154.pn.us = phi i64 [ %idxprom, %if.then153.split.us ], [ %idxprom160.us, %for.inc.us ]
  %target.addr.0.us = phi %struct.rtx_def* [ %target, %if.then153.split.us ], [ %target.addr.3.us, %for.inc.us ]
  %retval.2.us = phi %struct.rtx_def* [ null, %if.then153.split.us ], [ %retval.4.us, %for.inc.us ], !dbg !4503
  %wider_mode.0.in.in.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom154.pn.us, !dbg !4600
  %wider_mode.0.in.us = load i8, i8* %wider_mode.0.in.in.us, align 1, !dbg !4600
  %wider_mode.0.us = zext i8 %wider_mode.0.in.us to i32, !dbg !4600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0.us, metadata !4385, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata i32 %wider_mode.0.us, metadata !4390, metadata !DIExpression()), !dbg !4503
  %cmp157.us = icmp eq i8 %wider_mode.0.in.us, 0, !dbg !4601
  br i1 %cmp157.us, label %if.end249.loopexit.us-lcssa.us, label %for.body.us, !dbg !4602

for.body.us:                                      ; preds = %for.cond.us
  %idxprom160.us = zext i8 %wider_mode.0.in.us to i64, !dbg !4603
  %insn_code162.us = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16, i32 4, i64 %idxprom160.us, i32 0, !dbg !4604
  %12 = load i32, i32* %insn_code162.us, align 4, !dbg !4604
  %cmp163.us = icmp eq i32 %12, 2956, !dbg !4605
  br i1 %cmp163.us, label %lor.lhs.false165.us, label %if.then186.us, !dbg !4606

lor.lhs.false165.us:                              ; preds = %for.body.us
  %arrayidx170.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom160.us, !dbg !4607
  %13 = load i8, i8* %arrayidx170.us, align 1, !dbg !4607
  %cmp172.us = icmp eq i8 %13, 0, !dbg !4608
  br i1 %cmp172.us, label %for.inc.us, label %land.lhs.true174.us, !dbg !4609

land.lhs.true174.us:                              ; preds = %lor.lhs.false165.us
  %idxprom181.us = zext i8 %13 to i64, !dbg !4610
  %insn_code183.us = getelementptr inbounds %struct.optab_d, %struct.optab_d* %cond176, i64 0, i32 4, i64 %idxprom181.us, i32 0, !dbg !4611
  %14 = load i32, i32* %insn_code183.us, align 4, !dbg !4611
  %cmp184.us = icmp eq i32 %14, 2956, !dbg !4612
  br i1 %cmp184.us, label %for.inc.us, label %if.then186.us, !dbg !4613

if.then186.us:                                    ; preds = %land.lhs.true174.us, %for.body.us
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !4400, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.0, metadata !4407, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 0, metadata !4408, metadata !DIExpression()), !dbg !4598
  br i1 %or.cond18, label %if.then210.us, label %if.end219.us, !dbg !4614

if.then210.us:                                    ; preds = %if.then186.us
  call void @llvm.dbg.value(metadata i32 1, metadata !4408, metadata !DIExpression()), !dbg !4598
  %call212.us = tail call fastcc %struct.rtx_def* @avoid_expensive_constant(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16), %struct.rtx_def* %op0, i8 zeroext %conv211) #8, !dbg !4615
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call212.us, metadata !4400, metadata !DIExpression()), !dbg !4598
  br i1 %cmp205, label %if.end219.us, label %if.then215.us, !dbg !4616

if.then215.us:                                    ; preds = %if.then210.us
  %call217.us = tail call fastcc %struct.rtx_def* @avoid_expensive_constant(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16), %struct.rtx_def* %op1.addr.0, i8 zeroext %conv211) #8, !dbg !4617
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call217.us, metadata !4407, metadata !DIExpression()), !dbg !4598
  br label %if.end219.us, !dbg !4619

if.end219.us:                                     ; preds = %if.then215.us, %if.then210.us, %if.then186.us
  %no_extend.0.us = phi i32 [ 0, %if.then186.us ], [ 1, %if.then215.us ], [ 1, %if.then210.us ], !dbg !4598
  %xop1.1.us = phi %struct.rtx_def* [ %op1.addr.0, %if.then186.us ], [ %call217.us, %if.then215.us ], [ %op1.addr.0, %if.then210.us ], !dbg !4598
  %xop0.0.us = phi %struct.rtx_def* [ %op0, %if.then186.us ], [ %call212.us, %if.then215.us ], [ %call212.us, %if.then210.us ], !dbg !4598
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.0.us, metadata !4400, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop1.1.us, metadata !4407, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %no_extend.0.us, metadata !4408, metadata !DIExpression()), !dbg !4598
  %call220.us = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %xop0.0.us, i32 %wider_mode.0.us, i32 %mode, i32 %unsignedp, i32 %no_extend.0.us) #8, !dbg !4620
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call220.us, metadata !4400, metadata !DIExpression()), !dbg !4598
  %tobool221.us = icmp ne i32 %no_extend.0.us, 0, !dbg !4621
  %spec.select.us = and i1 %cmp222, %tobool221.us, !dbg !4622
  %land.ext.us = zext i1 %spec.select.us to i32, !dbg !4622
  %call224.us = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %xop1.1.us, i32 %wider_mode.0.us, i32 %mode, i32 %unsignedp, i32 %land.ext.us) #8, !dbg !4623
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call224.us, metadata !4407, metadata !DIExpression()), !dbg !4598
  %call225.us = tail call %struct.rtx_def* @expand_binop(i32 %wider_mode.0.us, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16), %struct.rtx_def* %call220.us, %struct.rtx_def* %call224.us, %struct.rtx_def* null, i32 %unsignedp, i32 0) #8, !dbg !4624
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call225.us, metadata !4392, metadata !DIExpression()), !dbg !4503
  %tobool226.us = icmp eq %struct.rtx_def* %call225.us, null, !dbg !4625
  br i1 %tobool226.us, label %if.else238.us, label %if.then227.us, !dbg !4627

if.then227.us:                                    ; preds = %if.end219.us
  br i1 %cmp208, label %if.else236.us, label %if.then230.us, !dbg !4628

if.then230.us:                                    ; preds = %if.then227.us
  %cmp231.us = icmp eq %struct.rtx_def* %target.addr.0.us, null, !dbg !4630
  br i1 %cmp231.us, label %if.then233.us, label %if.end235.us, !dbg !4634

if.then233.us:                                    ; preds = %if.then230.us
  %call234.us = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !4635
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call234.us, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %if.end235.us, !dbg !4636

if.end235.us:                                     ; preds = %if.then233.us, %if.then230.us
  %target.addr.1.us = phi %struct.rtx_def* [ %call234.us, %if.then233.us ], [ %target.addr.0.us, %if.then230.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.1.us, metadata !4385, metadata !DIExpression()), !dbg !4503
  tail call void @convert_move(%struct.rtx_def* %target.addr.1.us, %struct.rtx_def* nonnull %call225.us, i32 0) #6, !dbg !4637
  br label %cleanup240.us, !dbg !4638

if.else236.us:                                    ; preds = %if.then227.us
  %15 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !4639
  %call237.us = tail call %struct.rtx_def* %15(i32 %mode, %struct.rtx_def* nonnull %call225.us) #6, !dbg !4639
  br label %cleanup240.us, !dbg !4640

if.else238.us:                                    ; preds = %if.end219.us
  tail call void @delete_insns_since(%struct.rtx_def* %call7) #6, !dbg !4641
  br label %cleanup240.us, !dbg !4642

cleanup240.us:                                    ; preds = %if.else238.us, %if.else236.us, %if.end235.us
  %cleanup.dest.slot.1.us = phi i1 [ false, %if.end235.us ], [ false, %if.else236.us ], [ true, %if.else238.us ]
  %target.addr.2.us = phi %struct.rtx_def* [ %target.addr.1.us, %if.end235.us ], [ %target.addr.0.us, %if.else236.us ], [ %target.addr.0.us, %if.else238.us ]
  %retval.3.us = phi %struct.rtx_def* [ %target.addr.1.us, %if.end235.us ], [ %call237.us, %if.else236.us ], [ %retval.2.us, %if.else238.us ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.2.us, metadata !4385, metadata !DIExpression()), !dbg !4503
  br i1 %cleanup.dest.slot.1.us, label %for.inc.us, label %cleanup1043.loopexit62.us-lcssa.us

for.inc.us:                                       ; preds = %cleanup240.us, %land.lhs.true174.us, %lor.lhs.false165.us
  %target.addr.3.us = phi %struct.rtx_def* [ %target.addr.0.us, %land.lhs.true174.us ], [ %target.addr.0.us, %lor.lhs.false165.us ], [ %target.addr.2.us, %cleanup240.us ]
  %retval.4.us = phi %struct.rtx_def* [ %retval.2.us, %land.lhs.true174.us ], [ %retval.2.us, %lor.lhs.false165.us ], [ %retval.3.us, %cleanup240.us ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.3.us, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %for.cond.us, !dbg !4643, !llvm.loop !4644

if.end249.loopexit.us-lcssa.us:                   ; preds = %for.cond.us
  %target.addr.0.us.lcssa = phi %struct.rtx_def* [ %target.addr.0.us, %for.cond.us ]
  %retval.2.us.lcssa = phi %struct.rtx_def* [ %retval.2.us, %for.cond.us ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0.us.lcssa, metadata !4385, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0.us.lcssa, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %if.end249.loopexit, !dbg !4646

cleanup1043.loopexit62.us-lcssa.us:               ; preds = %cleanup240.us
  %retval.3.us.lcssa = phi %struct.rtx_def* [ %retval.3.us, %cleanup240.us ], !dbg !4503
  br label %cleanup1043.loopexit62, !dbg !4648

for.cond:                                         ; preds = %for.inc, %if.then153.if.then153.split_crit_edge
  %idxprom154.pn = phi i64 [ %idxprom, %if.then153.if.then153.split_crit_edge ], [ %idxprom160, %for.inc ]
  %target.addr.0 = phi %struct.rtx_def* [ %target, %if.then153.if.then153.split_crit_edge ], [ %target.addr.3, %for.inc ]
  %retval.2 = phi %struct.rtx_def* [ null, %if.then153.if.then153.split_crit_edge ], [ %retval.4, %for.inc ], !dbg !4503
  %wider_mode.0.in.in = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom154.pn, !dbg !4600
  %wider_mode.0.in = load i8, i8* %wider_mode.0.in.in, align 1, !dbg !4600
  %wider_mode.0 = zext i8 %wider_mode.0.in to i32, !dbg !4600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !4385, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata i32 %wider_mode.0, metadata !4390, metadata !DIExpression()), !dbg !4503
  %cmp157 = icmp eq i8 %wider_mode.0.in, 0, !dbg !4601
  br i1 %cmp157, label %if.end249.loopexit.us-lcssa, label %for.body, !dbg !4602

for.body:                                         ; preds = %for.cond
  %idxprom160 = zext i8 %wider_mode.0.in to i64, !dbg !4603
  %insn_code162 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab.addr.0, i64 0, i32 4, i64 %idxprom160, i32 0, !dbg !4604
  %16 = load i32, i32* %insn_code162, align 4, !dbg !4604
  %cmp163 = icmp eq i32 %16, 2956, !dbg !4605
  br i1 %cmp163, label %lor.lhs.false165, label %if.then186, !dbg !4606

lor.lhs.false165:                                 ; preds = %for.body
  br label %for.inc, !dbg !4649

if.then186:                                       ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !4400, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.0, metadata !4407, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 0, metadata !4408, metadata !DIExpression()), !dbg !4598
  br i1 %or.cond18, label %if.then210, label %if.end219, !dbg !4614

if.then210:                                       ; preds = %if.then186
  call void @llvm.dbg.value(metadata i32 1, metadata !4408, metadata !DIExpression()), !dbg !4598
  %call212 = tail call fastcc %struct.rtx_def* @avoid_expensive_constant(i32 %mode, %struct.optab_d* %binoptab.addr.0, %struct.rtx_def* %op0, i8 zeroext %conv211) #8, !dbg !4615
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call212, metadata !4400, metadata !DIExpression()), !dbg !4598
  br i1 %cmp205, label %if.end219, label %if.then215, !dbg !4616

if.then215:                                       ; preds = %if.then210
  %call217 = tail call fastcc %struct.rtx_def* @avoid_expensive_constant(i32 %mode, %struct.optab_d* %binoptab.addr.0, %struct.rtx_def* %op1.addr.0, i8 zeroext %conv211) #8, !dbg !4617
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call217, metadata !4407, metadata !DIExpression()), !dbg !4598
  br label %if.end219, !dbg !4619

if.end219:                                        ; preds = %if.then210, %if.then215, %if.then186
  %no_extend.0 = phi i32 [ 0, %if.then186 ], [ 1, %if.then215 ], [ 1, %if.then210 ], !dbg !4598
  %xop1.1 = phi %struct.rtx_def* [ %op1.addr.0, %if.then186 ], [ %call217, %if.then215 ], [ %op1.addr.0, %if.then210 ], !dbg !4598
  %xop0.0 = phi %struct.rtx_def* [ %op0, %if.then186 ], [ %call212, %if.then215 ], [ %call212, %if.then210 ], !dbg !4598
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.0, metadata !4400, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop1.1, metadata !4407, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %no_extend.0, metadata !4408, metadata !DIExpression()), !dbg !4598
  %call220 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %xop0.0, i32 %wider_mode.0, i32 %mode, i32 %unsignedp, i32 %no_extend.0) #8, !dbg !4620
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call220, metadata !4400, metadata !DIExpression()), !dbg !4598
  %tobool221 = icmp ne i32 %no_extend.0, 0, !dbg !4621
  %spec.select = and i1 %cmp222, %tobool221, !dbg !4622
  %land.ext = zext i1 %spec.select to i32, !dbg !4622
  %call224 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %xop1.1, i32 %wider_mode.0, i32 %mode, i32 %unsignedp, i32 %land.ext) #8, !dbg !4623
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call224, metadata !4407, metadata !DIExpression()), !dbg !4598
  %call225 = tail call %struct.rtx_def* @expand_binop(i32 %wider_mode.0, %struct.optab_d* %binoptab.addr.0, %struct.rtx_def* %call220, %struct.rtx_def* %call224, %struct.rtx_def* null, i32 %unsignedp, i32 0) #8, !dbg !4624
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call225, metadata !4392, metadata !DIExpression()), !dbg !4503
  %tobool226 = icmp eq %struct.rtx_def* %call225, null, !dbg !4625
  br i1 %tobool226, label %if.else238, label %if.then227, !dbg !4627

if.then227:                                       ; preds = %if.end219
  br i1 %cmp208, label %if.else236, label %if.then230, !dbg !4628

if.then230:                                       ; preds = %if.then227
  %cmp231 = icmp eq %struct.rtx_def* %target.addr.0, null, !dbg !4630
  br i1 %cmp231, label %if.then233, label %if.end235, !dbg !4634

if.then233:                                       ; preds = %if.then230
  %call234 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !4635
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call234, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %if.end235, !dbg !4636

if.end235:                                        ; preds = %if.then233, %if.then230
  %target.addr.1 = phi %struct.rtx_def* [ %call234, %if.then233 ], [ %target.addr.0, %if.then230 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.1, metadata !4385, metadata !DIExpression()), !dbg !4503
  tail call void @convert_move(%struct.rtx_def* %target.addr.1, %struct.rtx_def* nonnull %call225, i32 0) #6, !dbg !4637
  br label %cleanup240, !dbg !4638

if.else236:                                       ; preds = %if.then227
  %17 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !4639
  %call237 = tail call %struct.rtx_def* %17(i32 %mode, %struct.rtx_def* nonnull %call225) #6, !dbg !4639
  br label %cleanup240, !dbg !4640

if.else238:                                       ; preds = %if.end219
  tail call void @delete_insns_since(%struct.rtx_def* %call7) #6, !dbg !4641
  br label %cleanup240, !dbg !4642

cleanup240:                                       ; preds = %if.else238, %if.else236, %if.end235
  %cleanup.dest.slot.1 = phi i1 [ false, %if.end235 ], [ false, %if.else236 ], [ true, %if.else238 ]
  %target.addr.2 = phi %struct.rtx_def* [ %target.addr.1, %if.end235 ], [ %target.addr.0, %if.else236 ], [ %target.addr.0, %if.else238 ]
  %retval.3 = phi %struct.rtx_def* [ %target.addr.1, %if.end235 ], [ %call237, %if.else236 ], [ %retval.2, %if.else238 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.2, metadata !4385, metadata !DIExpression()), !dbg !4503
  br i1 %cleanup.dest.slot.1, label %for.inc, label %cleanup1043.loopexit62.us-lcssa

for.inc:                                          ; preds = %lor.lhs.false165, %cleanup240
  %target.addr.3 = phi %struct.rtx_def* [ %target.addr.0, %lor.lhs.false165 ], [ %target.addr.2, %cleanup240 ]
  %retval.4 = phi %struct.rtx_def* [ %retval.2, %lor.lhs.false165 ], [ %retval.3, %cleanup240 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.3, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %for.cond, !dbg !4643, !llvm.loop !4644

if.end249.loopexit.us-lcssa:                      ; preds = %for.cond
  %target.addr.0.lcssa79 = phi %struct.rtx_def* [ %target.addr.0, %for.cond ]
  %retval.2.lcssa77 = phi %struct.rtx_def* [ %retval.2, %for.cond ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0.lcssa79, metadata !4385, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0.lcssa79, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %if.end249.loopexit, !dbg !4646

if.end249.loopexit:                               ; preds = %if.end249.loopexit.us-lcssa.us, %if.end249.loopexit.us-lcssa
  %target.addr.0.lcssa = phi %struct.rtx_def* [ %target.addr.0.lcssa79, %if.end249.loopexit.us-lcssa ], [ %target.addr.0.us.lcssa, %if.end249.loopexit.us-lcssa.us ]
  %retval.2.lcssa = phi %struct.rtx_def* [ %retval.2.lcssa77, %if.end249.loopexit.us-lcssa ], [ %retval.2.us.lcssa, %if.end249.loopexit.us-lcssa.us ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0.lcssa, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %if.end249, !dbg !4646

if.end249:                                        ; preds = %if.end249.loopexit, %land.lhs.true147, %if.end123
  %target.addr.4 = phi %struct.rtx_def* [ %target, %if.end123 ], [ %target, %land.lhs.true147 ], [ %target.addr.0.lcssa, %if.end249.loopexit ]
  %retval.5 = phi %struct.rtx_def* [ null, %if.end123 ], [ null, %land.lhs.true147 ], [ %retval.2.lcssa, %if.end249.loopexit ], !dbg !4650
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.4, metadata !4385, metadata !DIExpression()), !dbg !4503
  %call250 = tail call fastcc zeroext i8 @commutative_optab_p(%struct.optab_d* %binoptab.addr.0) #8, !dbg !4646
  %tobool252 = icmp eq i8 %call250, 0, !dbg !4646
  br i1 %tobool252, label %if.end258, label %land.lhs.true253, !dbg !4651

land.lhs.true253:                                 ; preds = %if.end249
  %call254 = tail call fastcc zeroext i8 @swap_commutative_operands_with_target(%struct.rtx_def* %target.addr.4, %struct.rtx_def* %op0, %struct.rtx_def* %op1.addr.0) #8, !dbg !4652
  %tobool256 = icmp ne i8 %call254, 0, !dbg !4652
  %spec.select19 = select i1 %tobool256, %struct.rtx_def* %op0, %struct.rtx_def* %op1.addr.0, !dbg !4653
  %spec.select20 = select i1 %tobool256, %struct.rtx_def* %op1.addr.0, %struct.rtx_def* %op0, !dbg !4653
  br label %if.end258, !dbg !4653

if.end258:                                        ; preds = %if.end249, %land.lhs.true253
  %op1.addr.1 = phi %struct.rtx_def* [ %op1.addr.0, %if.end249 ], [ %spec.select19, %land.lhs.true253 ], !dbg !4503
  %op0.addr.0 = phi %struct.rtx_def* [ %op0, %if.end249 ], [ %spec.select20, %land.lhs.true253 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.addr.0, metadata !4383, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.1, metadata !4384, metadata !DIExpression()), !dbg !4503
  %cmp259 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), !dbg !4654
  %cmp262 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), !dbg !4655
  %or.cond21 = or i1 %cmp259, %cmp262, !dbg !4656
  %cmp265 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), !dbg !4657
  %or.cond22 = or i1 %or.cond21, %cmp265, !dbg !4656
  %cmp268 = icmp eq i8 %0, 2, !dbg !4658
  %or.cond23 = and i1 %or.cond22, %cmp268, !dbg !4656
  br i1 %or.cond23, label %land.lhs.true270, label %if.end344, !dbg !4656

land.lhs.true270:                                 ; preds = %if.end258
  %arrayidx272 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4659
  %18 = load i8, i8* %arrayidx272, align 1, !dbg !4659
  %cmp275 = icmp ugt i8 %18, 4, !dbg !4660
  br i1 %cmp275, label %land.lhs.true277, label %if.end344, !dbg !4661

land.lhs.true277:                                 ; preds = %land.lhs.true270
  %19 = load i32, i32* @word_mode, align 4, !dbg !4662
  %idxprom279 = sext i32 %19 to i64, !dbg !4662
  %insn_code281 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab.addr.0, i64 0, i32 4, i64 %idxprom279, i32 0, !dbg !4663
  %20 = load i32, i32* %insn_code281, align 4, !dbg !4663
  %cmp282 = icmp eq i32 %20, 2956, !dbg !4664
  br i1 %cmp282, label %if.end344, label %if.then284, !dbg !4665

if.then284:                                       ; preds = %land.lhs.true277
  %cmp285 = icmp eq %struct.rtx_def* %target.addr.4, null, !dbg !4666
  %cmp288 = icmp eq %struct.rtx_def* %target.addr.4, %op0.addr.0, !dbg !4668
  %or.cond24 = or i1 %cmp285, %cmp288, !dbg !4669
  %cmp291 = icmp eq %struct.rtx_def* %target.addr.4, %op1.addr.1, !dbg !4670
  %or.cond25 = or i1 %or.cond24, %cmp291, !dbg !4669
  br i1 %or.cond25, label %if.then293, label %if.end295, !dbg !4669

if.then293:                                       ; preds = %if.then284
  %call294 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !4671
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call294, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %if.end295, !dbg !4672

if.end295:                                        ; preds = %if.then284, %if.then293
  %target.addr.5 = phi %struct.rtx_def* [ %call294, %if.then293 ], [ %target.addr.4, %if.then284 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.5, metadata !4385, metadata !DIExpression()), !dbg !4503
  tail call void @start_sequence() #6, !dbg !4673
  call void @llvm.dbg.value(metadata i32 0, metadata !4409, metadata !DIExpression()), !dbg !4674
  br label %for.cond296, !dbg !4675

for.cond296:                                      ; preds = %for.inc324, %if.end295
  %i.0 = phi i32 [ 0, %if.end295 ], [ %inc, %for.inc324 ], !dbg !4676
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4409, metadata !DIExpression()), !dbg !4674
  %21 = load i8, i8* %arrayidx272, align 1, !dbg !4677
  %22 = lshr i8 %21, 2, !dbg !4678
  %div = zext i8 %22 to i32, !dbg !4678
  %cmp304 = icmp ult i32 %i.0, %div, !dbg !4679
  br i1 %cmp304, label %for.body306, label %for.end325, !dbg !4680

for.body306:                                      ; preds = %for.cond296
  %call307 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.5, i32 %i.0, i32 1, i32 %mode) #6, !dbg !4681
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call307, metadata !4413, metadata !DIExpression()), !dbg !4682
  %23 = load i32, i32* @word_mode, align 4, !dbg !4683
  %call308 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.0, i32 %i.0, i32 %mode) #6, !dbg !4684
  %call309 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1.addr.1, i32 %i.0, i32 %mode) #6, !dbg !4685
  %call310 = tail call %struct.rtx_def* @expand_binop(i32 %23, %struct.optab_d* %binoptab.addr.0, %struct.rtx_def* %call308, %struct.rtx_def* %call309, %struct.rtx_def* %call307, i32 %unsignedp, i32 %cond) #8, !dbg !4686
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call310, metadata !4417, metadata !DIExpression()), !dbg !4682
  %cmp311 = icmp eq %struct.rtx_def* %call310, null, !dbg !4687
  br i1 %cmp311, label %cleanup320, label %if.end314, !dbg !4689

if.end314:                                        ; preds = %for.body306
  %cmp315 = icmp eq %struct.rtx_def* %call307, %call310, !dbg !4690
  br i1 %cmp315, label %cleanup320, label %if.then317, !dbg !4692

if.then317:                                       ; preds = %if.end314
  %call318 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call307, %struct.rtx_def* nonnull %call310) #6, !dbg !4693
  br label %cleanup320, !dbg !4693

cleanup320:                                       ; preds = %if.end314, %if.then317, %for.body306
  %cleanup.dest.slot.2 = phi i1 [ false, %for.body306 ], [ true, %if.then317 ], [ true, %if.end314 ]
  br i1 %cleanup.dest.slot.2, label %for.inc324, label %for.end325

for.inc324:                                       ; preds = %cleanup320
  %inc = add nuw nsw i32 %i.0, 1, !dbg !4694
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4409, metadata !DIExpression()), !dbg !4674
  br label %for.cond296, !dbg !4695, !llvm.loop !4696

for.end325:                                       ; preds = %cleanup320, %for.cond296
  %i.0.lcssa = phi i32 [ %i.0, %cleanup320 ], [ %i.0, %for.cond296 ], !dbg !4676
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4409, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4409, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4409, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4409, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4409, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4409, metadata !DIExpression()), !dbg !4674
  %call326 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call326, metadata !4412, metadata !DIExpression()), !dbg !4674
  tail call void @end_sequence() #6, !dbg !4699
  %24 = load i8, i8* %arrayidx272, align 1, !dbg !4700
  %25 = lshr i8 %24, 2, !dbg !4702
  %div334 = zext i8 %25 to i32, !dbg !4702
  %cmp335 = icmp eq i32 %i.0.lcssa, %div334, !dbg !4703
  br i1 %cmp335, label %if.then337, label %cleanup340, !dbg !4704

if.then337:                                       ; preds = %for.end325
  %call338 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call326) #6, !dbg !4705
  br label %cleanup340, !dbg !4707

cleanup340:                                       ; preds = %for.end325, %if.then337
  %cleanup.dest.slot.3 = phi i1 [ false, %if.then337 ], [ true, %for.end325 ]
  %retval.6 = phi %struct.rtx_def* [ %target.addr.5, %if.then337 ], [ %retval.5, %for.end325 ], !dbg !4503
  br i1 %cleanup.dest.slot.3, label %if.end344, label %cleanup1043

if.end344:                                        ; preds = %land.lhs.true277, %cleanup340, %if.end258, %land.lhs.true270
  %target.addr.6 = phi %struct.rtx_def* [ %target.addr.4, %land.lhs.true277 ], [ %target.addr.4, %land.lhs.true270 ], [ %target.addr.4, %if.end258 ], [ %target.addr.5, %cleanup340 ]
  %retval.7 = phi %struct.rtx_def* [ %retval.5, %land.lhs.true277 ], [ %retval.5, %land.lhs.true270 ], [ %retval.5, %if.end258 ], [ %retval.6, %cleanup340 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.6, metadata !4385, metadata !DIExpression()), !dbg !4503
  %cmp345 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45), !dbg !4708
  %cmp348 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), !dbg !4709
  %or.cond26 = or i1 %cmp345, %cmp348, !dbg !4710
  %cmp351 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 46), !dbg !4711
  %or.cond27 = or i1 %or.cond26, %cmp351, !dbg !4710
  %or.cond28 = and i1 %or.cond27, %cmp268, !dbg !4710
  br i1 %or.cond28, label %land.lhs.true356, label %if.end475, !dbg !4710

land.lhs.true356:                                 ; preds = %if.end344
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.addr.1, i64 0, i32 0, !dbg !4712
  %bf.load357 = load i32, i32* %26, align 8, !dbg !4712
  %bf.clear358 = and i32 %bf.load357, 65535, !dbg !4712
  %cmp359 = icmp eq i32 %bf.clear358, 30, !dbg !4712
  br i1 %cmp359, label %land.lhs.true365, label %lor.lhs.false361, !dbg !4713

lor.lhs.false361:                                 ; preds = %land.lhs.true356
  %call362 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !4714
  %tobool364 = icmp eq i8 %call362, 0, !dbg !4714
  br i1 %tobool364, label %if.end475, label %land.lhs.true365, !dbg !4715

land.lhs.true365:                                 ; preds = %lor.lhs.false361, %land.lhs.true356
  %arrayidx367 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4716
  %27 = load i8, i8* %arrayidx367, align 1, !dbg !4716
  %cmp370 = icmp eq i8 %27, 8, !dbg !4717
  br i1 %cmp370, label %land.lhs.true372, label %if.end475, !dbg !4718

land.lhs.true372:                                 ; preds = %land.lhs.true365
  %28 = load i32, i32* @word_mode, align 4, !dbg !4719
  %idxprom374 = sext i32 %28 to i64, !dbg !4719
  %insn_code376 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab.addr.0, i64 0, i32 4, i64 %idxprom374, i32 0, !dbg !4720
  %29 = load i32, i32* %insn_code376, align 4, !dbg !4720
  %cmp377 = icmp eq i32 %29, 2956, !dbg !4721
  br i1 %cmp377, label %if.end475, label %land.lhs.true379, !dbg !4722

land.lhs.true379:                                 ; preds = %land.lhs.true372
  %insn_code382 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44, i32 4, i64 %idxprom374, i32 0, !dbg !4723
  %30 = load i32, i32* %insn_code382, align 4, !dbg !4723
  %cmp383 = icmp eq i32 %30, 2956, !dbg !4724
  br i1 %cmp383, label %if.end475, label %land.lhs.true385, !dbg !4725

land.lhs.true385:                                 ; preds = %land.lhs.true379
  %insn_code388 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45, i32 4, i64 %idxprom374, i32 0, !dbg !4726
  %31 = load i32, i32* %insn_code388, align 4, !dbg !4726
  %cmp389 = icmp eq i32 %31, 2956, !dbg !4727
  br i1 %cmp389, label %if.end475, label %if.then391, !dbg !4728

if.then391:                                       ; preds = %land.lhs.true385
  %32 = load i64 (i32)*, i64 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 53), align 8, !dbg !4729
  %call392 = tail call i64 %32(i32 %mode) #6, !dbg !4730
  call void @llvm.dbg.value(metadata i64 %call392, metadata !4421, metadata !DIExpression()), !dbg !4731
  %33 = load i64 (i32)*, i64 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 53), align 8, !dbg !4732
  %34 = load i32, i32* @word_mode, align 4, !dbg !4733
  %call393 = tail call i64 %33(i32 %34) #6, !dbg !4734
  call void @llvm.dbg.value(metadata i64 %call393, metadata !4418, metadata !DIExpression()), !dbg !4731
  %bf.load394 = load i32, i32* %26, align 8, !dbg !4735
  %bf.clear396 = and i32 %bf.load394, 16711680, !dbg !4735
  %cmp397 = icmp eq i32 %bf.clear396, 0, !dbg !4736
  br i1 %cmp397, label %cond.false403, label %cond.true399, !dbg !4735

cond.true399:                                     ; preds = %if.then391
  %bf.lshr401 = lshr i32 %bf.load394, 16, !dbg !4737
  %bf.clear402 = and i32 %bf.lshr401, 255, !dbg !4737
  br label %cond.end404, !dbg !4735

cond.false403:                                    ; preds = %if.then391
  %35 = load i32, i32* @word_mode, align 4, !dbg !4738
  br label %cond.end404, !dbg !4735

cond.end404:                                      ; preds = %cond.false403, %cond.true399
  %cond405 = phi i32 [ %bf.clear402, %cond.true399 ], [ %35, %cond.false403 ], !dbg !4735
  call void @llvm.dbg.value(metadata i32 %cond405, metadata !4422, metadata !DIExpression()), !dbg !4731
  %cmp406 = icmp eq i64 %call392, 0, !dbg !4739
  br i1 %cmp406, label %if.end418, label %land.lhs.true408, !dbg !4741

land.lhs.true408:                                 ; preds = %cond.end404
  %bf.clear410 = and i32 %bf.load394, 65535, !dbg !4742
  %cmp411 = icmp eq i32 %bf.clear410, 30, !dbg !4742
  br i1 %cmp411, label %if.then413, label %if.end418, !dbg !4743

if.then413:                                       ; preds = %land.lhs.true408
  %u414 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.addr.1, i64 0, i32 1, !dbg !4744
  %arrayidx416 = bitcast %union.u* %u414 to i64*, !dbg !4744
  %36 = load i64, i64* %arrayidx416, align 8, !dbg !4744
  %and = and i64 %36, %call392, !dbg !4744
  %call417 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %and) #6, !dbg !4744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call417, metadata !4384, metadata !DIExpression()), !dbg !4503
  br label %if.end418, !dbg !4745

if.end418:                                        ; preds = %cond.end404, %if.then413, %land.lhs.true408
  %op1.addr.2 = phi %struct.rtx_def* [ %call417, %if.then413 ], [ %op1.addr.1, %land.lhs.true408 ], [ %op1.addr.1, %cond.end404 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.2, metadata !4384, metadata !DIExpression()), !dbg !4503
  %idxprom419 = sext i32 %cond405 to i64, !dbg !4746
  %arrayidx420 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom419, !dbg !4746
  %37 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx420, align 8, !dbg !4746
  %cmp421 = icmp eq %struct.rtx_def* %op1.addr.2, %37, !dbg !4748
  br i1 %cmp421, label %cleanup470, label %if.end424, !dbg !4749

if.end424:                                        ; preds = %if.end418
  br i1 %cmp406, label %if.then433, label %lor.lhs.false427, !dbg !4750

lor.lhs.false427:                                 ; preds = %if.end424
  %cmp428 = icmp eq i64 %call393, 31, !dbg !4751
  %cmp431 = icmp eq i64 %call392, 63, !dbg !4752
  %or.cond29 = and i1 %cmp428, %cmp431, !dbg !4753
  br i1 %or.cond29, label %if.then433, label %if.end469, !dbg !4753

if.then433:                                       ; preds = %lor.lhs.false427, %if.end424
  %cmp435 = icmp eq %struct.rtx_def* %target.addr.6, null, !dbg !4754
  %cmp438 = icmp eq %struct.rtx_def* %target.addr.6, %op0.addr.0, !dbg !4756
  %or.cond30 = or i1 %cmp435, %cmp438, !dbg !4757
  %cmp441 = icmp eq %struct.rtx_def* %target.addr.6, %op1.addr.2, !dbg !4758
  %or.cond31 = or i1 %or.cond30, %cmp441, !dbg !4757
  br i1 %or.cond31, label %if.then443, label %if.end445, !dbg !4757

if.then443:                                       ; preds = %if.then433
  %call444 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !4759
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call444, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %if.end445, !dbg !4760

if.end445:                                        ; preds = %if.then433, %if.then443
  %target.addr.7 = phi %struct.rtx_def* [ %call444, %if.then443 ], [ %target.addr.6, %if.then433 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.7, metadata !4385, metadata !DIExpression()), !dbg !4503
  tail call void @start_sequence() #6, !dbg !4761
  %cmp446 = icmp ne %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), !dbg !4762
  call void @llvm.dbg.value(metadata i1 %cmp446, metadata !4430, metadata !DIExpression()), !dbg !4763
  %xor = zext i1 %cmp446 to i32, !dbg !4764
  call void @llvm.dbg.value(metadata i32 %xor, metadata !4431, metadata !DIExpression()), !dbg !4763
  %call448 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.7, i32 %xor, i32 1, i32 %mode) #6, !dbg !4765
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call448, metadata !4427, metadata !DIExpression()), !dbg !4763
  %not.cmp446 = xor i1 %cmp446, true, !dbg !4766
  %sub449 = zext i1 %not.cmp446 to i32, !dbg !4766
  %call450 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.7, i32 %sub449, i32 1, i32 %mode) #6, !dbg !4767
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call450, metadata !4426, metadata !DIExpression()), !dbg !4763
  %call451 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.0, i32 %xor, i32 %mode) #6, !dbg !4768
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call451, metadata !4429, metadata !DIExpression()), !dbg !4763
  %call453 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.0, i32 %sub449, i32 %mode) #6, !dbg !4769
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call453, metadata !4428, metadata !DIExpression()), !dbg !4763
  %call454 = tail call fastcc zeroext i8 @expand_doubleword_shift(i32 %cond405, %struct.optab_d* %binoptab.addr.0, %struct.rtx_def* %call451, %struct.rtx_def* %call453, %struct.rtx_def* %op1.addr.2, %struct.rtx_def* %call448, %struct.rtx_def* %call450, i32 %unsignedp, i32 %cond, i64 %call393) #8, !dbg !4770
  %tobool455 = icmp eq i8 %call454, 0, !dbg !4770
  br i1 %tobool455, label %if.end459, label %if.then456, !dbg !4772

if.then456:                                       ; preds = %if.end445
  %call457 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call457, metadata !4423, metadata !DIExpression()), !dbg !4763
  tail call void @end_sequence() #6, !dbg !4775
  %call458 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call457) #6, !dbg !4776
  br label %cleanup460, !dbg !4777

if.end459:                                        ; preds = %if.end445
  tail call void @end_sequence() #6, !dbg !4778
  br label %cleanup460, !dbg !4779

cleanup460:                                       ; preds = %if.end459, %if.then456
  %cleanup.dest.slot.4 = phi i32 [ 1, %if.then456 ], [ 0, %if.end459 ]
  %retval.8 = phi %struct.rtx_def* [ %target.addr.7, %if.then456 ], [ %retval.7, %if.end459 ], !dbg !4503
  %cond8 = icmp eq i32 %cleanup.dest.slot.4, 0
  br i1 %cond8, label %if.end469, label %cleanup470

if.end469:                                        ; preds = %cleanup460, %lor.lhs.false427
  %target.addr.8 = phi %struct.rtx_def* [ %target.addr.6, %lor.lhs.false427 ], [ %target.addr.7, %cleanup460 ], !dbg !4503
  %retval.9 = phi %struct.rtx_def* [ %retval.7, %lor.lhs.false427 ], [ %retval.8, %cleanup460 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.8, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %cleanup470, !dbg !4780

cleanup470:                                       ; preds = %if.end418, %cleanup460, %if.end469
  %cleanup.dest.slot.5 = phi i32 [ %cleanup.dest.slot.4, %cleanup460 ], [ 0, %if.end469 ], [ 1, %if.end418 ]
  %target.addr.9 = phi %struct.rtx_def* [ %target.addr.7, %cleanup460 ], [ %target.addr.8, %if.end469 ], [ %target.addr.6, %if.end418 ], !dbg !4503
  %retval.10 = phi %struct.rtx_def* [ %retval.8, %cleanup460 ], [ %retval.9, %if.end469 ], [ %op0.addr.0, %if.end418 ], !dbg !4731
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.9, metadata !4385, metadata !DIExpression()), !dbg !4503
  %cond7 = icmp eq i32 %cleanup.dest.slot.5, 0
  br i1 %cond7, label %if.end475, label %cleanup1043

if.end475:                                        ; preds = %land.lhs.true385, %land.lhs.true379, %land.lhs.true372, %lor.lhs.false361, %cleanup470, %if.end344, %land.lhs.true365
  %target.addr.10 = phi %struct.rtx_def* [ %target.addr.6, %land.lhs.true385 ], [ %target.addr.6, %land.lhs.true379 ], [ %target.addr.6, %land.lhs.true372 ], [ %target.addr.6, %land.lhs.true365 ], [ %target.addr.6, %lor.lhs.false361 ], [ %target.addr.6, %if.end344 ], [ %target.addr.9, %cleanup470 ], !dbg !4781
  %op1.addr.3 = phi %struct.rtx_def* [ %op1.addr.1, %land.lhs.true385 ], [ %op1.addr.1, %land.lhs.true379 ], [ %op1.addr.1, %land.lhs.true372 ], [ %op1.addr.1, %land.lhs.true365 ], [ %op1.addr.1, %lor.lhs.false361 ], [ %op1.addr.1, %if.end344 ], [ %op1.addr.2, %cleanup470 ], !dbg !4503
  %retval.11 = phi %struct.rtx_def* [ %retval.7, %land.lhs.true385 ], [ %retval.7, %land.lhs.true379 ], [ %retval.7, %land.lhs.true372 ], [ %retval.7, %land.lhs.true365 ], [ %retval.7, %lor.lhs.false361 ], [ %retval.7, %if.end344 ], [ %retval.10, %cleanup470 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.3, metadata !4384, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.10, metadata !4385, metadata !DIExpression()), !dbg !4503
  %cmp479 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 48), !dbg !4782
  %or.cond32 = or i1 %cmp20, %cmp479, !dbg !4783
  %or.cond33 = and i1 %or.cond32, %cmp268, !dbg !4783
  br i1 %or.cond33, label %land.lhs.true484, label %if.end635, !dbg !4783

land.lhs.true484:                                 ; preds = %if.end475
  %38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.addr.3, i64 0, i32 0, !dbg !4784
  %bf.load485 = load i32, i32* %38, align 8, !dbg !4784
  %bf.clear486 = and i32 %bf.load485, 65535, !dbg !4784
  %cmp487 = icmp eq i32 %bf.clear486, 30, !dbg !4784
  br i1 %cmp487, label %land.lhs.true489, label %if.end635, !dbg !4785

land.lhs.true489:                                 ; preds = %land.lhs.true484
  %arrayidx491 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4786
  %39 = load i8, i8* %arrayidx491, align 1, !dbg !4786
  %cmp494 = icmp eq i8 %39, 8, !dbg !4787
  br i1 %cmp494, label %land.lhs.true496, label %if.end635, !dbg !4788

land.lhs.true496:                                 ; preds = %land.lhs.true489
  %40 = load i32, i32* @word_mode, align 4, !dbg !4789
  %idxprom497 = sext i32 %40 to i64, !dbg !4789
  %insn_code499 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44, i32 4, i64 %idxprom497, i32 0, !dbg !4790
  %41 = load i32, i32* %insn_code499, align 4, !dbg !4790
  %cmp500 = icmp eq i32 %41, 2956, !dbg !4791
  br i1 %cmp500, label %if.end635, label %land.lhs.true502, !dbg !4792

land.lhs.true502:                                 ; preds = %land.lhs.true496
  %insn_code505 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45, i32 4, i64 %idxprom497, i32 0, !dbg !4793
  %42 = load i32, i32* %insn_code505, align 4, !dbg !4793
  %cmp506 = icmp eq i32 %42, 2956, !dbg !4794
  br i1 %cmp506, label %if.end635, label %if.then508, !dbg !4795

if.then508:                                       ; preds = %land.lhs.true502
  %cmp516 = icmp eq %struct.rtx_def* %target.addr.10, null, !dbg !4796
  %cmp519 = icmp eq %struct.rtx_def* %target.addr.10, %op0.addr.0, !dbg !4798
  %or.cond34 = or i1 %cmp516, %cmp519, !dbg !4799
  %cmp522 = icmp eq %struct.rtx_def* %target.addr.10, %op1.addr.3, !dbg !4800
  %or.cond35 = or i1 %or.cond34, %cmp522, !dbg !4799
  br i1 %or.cond35, label %if.then529, label %lor.lhs.false524, !dbg !4799

lor.lhs.false524:                                 ; preds = %if.then508
  %43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.10, i64 0, i32 0, !dbg !4801
  %bf.load525 = load i32, i32* %43, align 8, !dbg !4801
  %bf.clear526 = and i32 %bf.load525, 65535, !dbg !4801
  %cmp527 = icmp eq i32 %bf.clear526, 37, !dbg !4801
  br i1 %cmp527, label %if.end531, label %if.then529, !dbg !4802

if.then529:                                       ; preds = %lor.lhs.false524, %if.then508
  %call530 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !4803
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call530, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %if.end531, !dbg !4804

if.end531:                                        ; preds = %if.then529, %lor.lhs.false524
  %target.addr.11 = phi %struct.rtx_def* [ %call530, %if.then529 ], [ %target.addr.10, %lor.lhs.false524 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.11, metadata !4385, metadata !DIExpression()), !dbg !4503
  tail call void @start_sequence() #6, !dbg !4805
  %u532 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.addr.3, i64 0, i32 1, !dbg !4806
  %arrayidx534 = bitcast %union.u* %u532 to i64*, !dbg !4806
  %44 = load i64, i64* %arrayidx534, align 8, !dbg !4806
  %conv535 = trunc i64 %44 to i32, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %conv535, metadata !4440, metadata !DIExpression()), !dbg !4807
  %conv537 = zext i1 %cmp20 to i32, !dbg !4808
  call void @llvm.dbg.value(metadata i32 %conv537, metadata !4441, metadata !DIExpression()), !dbg !4807
  %xor538 = xor i32 %conv537, 1, !dbg !4809
  call void @llvm.dbg.value(metadata i32 %xor538, metadata !4442, metadata !DIExpression()), !dbg !4807
  %call539 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.11, i32 %xor538, i32 1, i32 %mode) #6, !dbg !4810
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call539, metadata !4436, metadata !DIExpression()), !dbg !4807
  %call541 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.11, i32 %conv537, i32 1, i32 %mode) #6, !dbg !4811
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call541, metadata !4435, metadata !DIExpression()), !dbg !4807
  %call542 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.0, i32 %xor538, i32 %mode) #6, !dbg !4812
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call542, metadata !4438, metadata !DIExpression()), !dbg !4807
  %call544 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.0, i32 %conv537, i32 %mode) #6, !dbg !4813
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call544, metadata !4437, metadata !DIExpression()), !dbg !4807
  %cmp545 = icmp eq i32 %conv535, 32, !dbg !4814
  br i1 %cmp545, label %if.then547, label %if.else550, !dbg !4815

if.then547:                                       ; preds = %if.end531
  %call548 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call539, %struct.rtx_def* %call544) #6, !dbg !4816
  %call549 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call541, %struct.rtx_def* %call542) #6, !dbg !4818
  %45 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4819
  call void @llvm.dbg.value(metadata %struct.rtx_def* %45, metadata !4439, metadata !DIExpression()), !dbg !4807
  br label %if.end617, !dbg !4820

if.else550:                                       ; preds = %if.end531
  %cmp551 = icmp slt i32 %conv535, 32, !dbg !4821
  %xor55356 = xor i1 %cmp20, %cmp551, !dbg !4822
  %cond555 = select i1 %xor55356, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), !dbg !4823
  call void @llvm.dbg.value(metadata %struct.optab_d* %cond555, metadata !4451, metadata !DIExpression()), !dbg !4824
  %cond560 = select i1 %xor55356, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45), !dbg !4825
  call void @llvm.dbg.value(metadata %struct.optab_d* %cond560, metadata !4452, metadata !DIExpression()), !dbg !4824
  %cmp561 = icmp sgt i32 %conv535, 32, !dbg !4826
  br i1 %cmp561, label %if.then563, label %if.else570, !dbg !4828

if.then563:                                       ; preds = %if.else550
  %sub564 = shl i64 %44, 32, !dbg !4829
  %sext59 = add i64 %sub564, -137438953472, !dbg !4829
  %conv565 = ashr exact i64 %sext59, 32, !dbg !4829
  %call566 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv565) #6, !dbg !4829
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call566, metadata !4449, metadata !DIExpression()), !dbg !4824
  %sext60 = sub i64 274877906944, %sub564, !dbg !4831
  %conv568 = ashr exact i64 %sext60, 32, !dbg !4831
  %call569 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv568) #6, !dbg !4831
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call569, metadata !4450, metadata !DIExpression()), !dbg !4824
  br label %if.end576, !dbg !4832

if.else570:                                       ; preds = %if.else550
  %sub571 = shl i64 %44, 32, !dbg !4833
  %sext = sub i64 137438953472, %sub571, !dbg !4833
  %conv572 = ashr exact i64 %sext, 32, !dbg !4833
  %call573 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv572) #6, !dbg !4833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call573, metadata !4449, metadata !DIExpression()), !dbg !4824
  %conv574 = ashr exact i64 %sub571, 32, !dbg !4835
  %call575 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv574) #6, !dbg !4835
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call575, metadata !4450, metadata !DIExpression()), !dbg !4824
  br label %if.end576

if.end576:                                        ; preds = %if.else570, %if.then563
  %first_shift_count.0 = phi %struct.rtx_def* [ %call566, %if.then563 ], [ %call573, %if.else570 ], !dbg !4836
  %second_shift_count.0 = phi %struct.rtx_def* [ %call569, %if.then563 ], [ %call575, %if.else570 ], !dbg !4836
  call void @llvm.dbg.value(metadata %struct.rtx_def* %second_shift_count.0, metadata !4450, metadata !DIExpression()), !dbg !4824
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_shift_count.0, metadata !4449, metadata !DIExpression()), !dbg !4824
  %46 = load i32, i32* @word_mode, align 4, !dbg !4837
  %call577 = tail call %struct.rtx_def* @expand_binop(i32 %46, %struct.optab_d* %cond560, %struct.rtx_def* %call542, %struct.rtx_def* %first_shift_count.0, %struct.rtx_def* null, i32 %unsignedp, i32 %cond) #8, !dbg !4838
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call577, metadata !4443, metadata !DIExpression()), !dbg !4824
  %47 = load i32, i32* @word_mode, align 4, !dbg !4839
  %call578 = tail call %struct.rtx_def* @expand_binop(i32 %47, %struct.optab_d* %cond555, %struct.rtx_def* %call544, %struct.rtx_def* %second_shift_count.0, %struct.rtx_def* null, i32 %unsignedp, i32 %cond) #8, !dbg !4840
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call578, metadata !4446, metadata !DIExpression()), !dbg !4824
  %cmp579 = icmp ne %struct.rtx_def* %call577, null, !dbg !4841
  %cmp582 = icmp ne %struct.rtx_def* %call578, null, !dbg !4843
  %or.cond36 = and i1 %cmp579, %cmp582, !dbg !4844
  br i1 %or.cond36, label %if.then584, label %if.end587, !dbg !4844

if.then584:                                       ; preds = %if.end576
  %48 = load i32, i32* @word_mode, align 4, !dbg !4845
  %call585 = tail call %struct.rtx_def* @expand_binop(i32 %48, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), %struct.rtx_def* nonnull %call577, %struct.rtx_def* nonnull %call578, %struct.rtx_def* %call541, i32 %unsignedp, i32 %cond) #8, !dbg !4846
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call585, metadata !4439, metadata !DIExpression()), !dbg !4807
  br label %if.end587, !dbg !4847

if.end587:                                        ; preds = %if.end576, %if.then584
  %inter.0 = phi %struct.rtx_def* [ %call585, %if.then584 ], [ null, %if.end576 ], !dbg !4848
  call void @llvm.dbg.value(metadata %struct.rtx_def* %inter.0, metadata !4439, metadata !DIExpression()), !dbg !4807
  %cmp588 = icmp ne %struct.rtx_def* %inter.0, null, !dbg !4849
  %cmp591 = icmp ne %struct.rtx_def* %inter.0, %call541, !dbg !4851
  %or.cond37 = and i1 %cmp588, %cmp591, !dbg !4852
  br i1 %or.cond37, label %if.then593, label %if.end595, !dbg !4852

if.then593:                                       ; preds = %if.end587
  %call594 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call541, %struct.rtx_def* nonnull %inter.0) #6, !dbg !4853
  br label %if.end595, !dbg !4853

if.end595:                                        ; preds = %if.then593, %if.end587
  %49 = load i32, i32* @word_mode, align 4, !dbg !4854
  %call596 = tail call %struct.rtx_def* @expand_binop(i32 %49, %struct.optab_d* %cond560, %struct.rtx_def* %call544, %struct.rtx_def* %first_shift_count.0, %struct.rtx_def* null, i32 %unsignedp, i32 %cond) #8, !dbg !4855
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call596, metadata !4447, metadata !DIExpression()), !dbg !4824
  %50 = load i32, i32* @word_mode, align 4, !dbg !4856
  %call597 = tail call %struct.rtx_def* @expand_binop(i32 %50, %struct.optab_d* %cond555, %struct.rtx_def* %call542, %struct.rtx_def* %second_shift_count.0, %struct.rtx_def* null, i32 %unsignedp, i32 %cond) #8, !dbg !4857
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call597, metadata !4448, metadata !DIExpression()), !dbg !4824
  %cmp601 = icmp ne %struct.rtx_def* %call596, null, !dbg !4858
  %or.cond38 = and i1 %cmp588, %cmp601, !dbg !4860
  %cmp604 = icmp ne %struct.rtx_def* %call597, null, !dbg !4861
  %or.cond39 = and i1 %or.cond38, %cmp604, !dbg !4860
  br i1 %or.cond39, label %if.then606, label %if.end608, !dbg !4860

if.then606:                                       ; preds = %if.end595
  %51 = load i32, i32* @word_mode, align 4, !dbg !4862
  %call607 = tail call %struct.rtx_def* @expand_binop(i32 %51, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), %struct.rtx_def* nonnull %call596, %struct.rtx_def* nonnull %call597, %struct.rtx_def* %call539, i32 %unsignedp, i32 %cond) #8, !dbg !4863
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call607, metadata !4439, metadata !DIExpression()), !dbg !4807
  br label %if.end608, !dbg !4864

if.end608:                                        ; preds = %if.then606, %if.end595
  %inter.1 = phi %struct.rtx_def* [ %call607, %if.then606 ], [ %inter.0, %if.end595 ], !dbg !4824
  call void @llvm.dbg.value(metadata %struct.rtx_def* %inter.1, metadata !4439, metadata !DIExpression()), !dbg !4807
  %cmp609 = icmp ne %struct.rtx_def* %inter.1, null, !dbg !4865
  %cmp612 = icmp ne %struct.rtx_def* %inter.1, %call539, !dbg !4867
  %or.cond40 = and i1 %cmp609, %cmp612, !dbg !4868
  br i1 %or.cond40, label %if.then614, label %if.end617, !dbg !4868

if.then614:                                       ; preds = %if.end608
  %call615 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call539, %struct.rtx_def* nonnull %inter.1) #6, !dbg !4869
  br label %if.end617, !dbg !4869

if.end617:                                        ; preds = %if.end608, %if.then614, %if.then547
  %inter.2 = phi %struct.rtx_def* [ %45, %if.then547 ], [ %inter.1, %if.then614 ], [ %inter.1, %if.end608 ], !dbg !4870
  call void @llvm.dbg.value(metadata %struct.rtx_def* %inter.2, metadata !4439, metadata !DIExpression()), !dbg !4807
  %call618 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4871
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call618, metadata !4432, metadata !DIExpression()), !dbg !4807
  tail call void @end_sequence() #6, !dbg !4872
  %cmp619 = icmp eq %struct.rtx_def* %inter.2, null, !dbg !4873
  br i1 %cmp619, label %cleanup624, label %if.then621, !dbg !4875

if.then621:                                       ; preds = %if.end617
  %call622 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call618) #6, !dbg !4876
  br label %cleanup624, !dbg !4878

cleanup624:                                       ; preds = %if.end617, %if.then621
  %cleanup.dest.slot.6 = phi i1 [ false, %if.then621 ], [ true, %if.end617 ]
  %retval.12 = phi %struct.rtx_def* [ %target.addr.11, %if.then621 ], [ %retval.11, %if.end617 ], !dbg !4503
  br i1 %cleanup.dest.slot.6, label %if.end635, label %cleanup1043

if.end635:                                        ; preds = %land.lhs.true502, %land.lhs.true496, %cleanup624, %if.end475, %land.lhs.true489, %land.lhs.true484
  %target.addr.12 = phi %struct.rtx_def* [ %target.addr.10, %land.lhs.true502 ], [ %target.addr.10, %land.lhs.true496 ], [ %target.addr.10, %land.lhs.true489 ], [ %target.addr.10, %land.lhs.true484 ], [ %target.addr.10, %if.end475 ], [ %target.addr.11, %cleanup624 ], !dbg !4503
  %retval.13 = phi %struct.rtx_def* [ %retval.11, %land.lhs.true502 ], [ %retval.11, %land.lhs.true496 ], [ %retval.11, %land.lhs.true489 ], [ %retval.11, %land.lhs.true484 ], [ %retval.11, %if.end475 ], [ %retval.12, %cleanup624 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.12, metadata !4385, metadata !DIExpression()), !dbg !4503
  %cmp636 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), !dbg !4879
  %cmp639 = icmp eq %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), !dbg !4880
  %or.cond41 = or i1 %cmp636, %cmp639, !dbg !4881
  %or.cond42 = and i1 %or.cond41, %cmp268, !dbg !4881
  br i1 %or.cond42, label %land.lhs.true644, label %if.end806, !dbg !4881

land.lhs.true644:                                 ; preds = %if.end635
  %arrayidx646 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4882
  %52 = load i8, i8* %arrayidx646, align 1, !dbg !4882
  %cmp649 = icmp ugt i8 %52, 7, !dbg !4883
  br i1 %cmp649, label %land.lhs.true651, label %if.end806, !dbg !4884

land.lhs.true651:                                 ; preds = %land.lhs.true644
  %53 = load i32, i32* @word_mode, align 4, !dbg !4885
  %idxprom653 = sext i32 %53 to i64, !dbg !4885
  %insn_code655 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab.addr.0, i64 0, i32 4, i64 %idxprom653, i32 0, !dbg !4886
  %54 = load i32, i32* %insn_code655, align 4, !dbg !4886
  %cmp656 = icmp eq i32 %54, 2956, !dbg !4887
  br i1 %cmp656, label %if.end806, label %if.then658, !dbg !4888

if.then658:                                       ; preds = %land.lhs.true651
  %55 = lshr i8 %52, 2, !dbg !4889
  %div671 = zext i8 %55 to i32, !dbg !4889
  call void @llvm.dbg.value(metadata i32 %div671, metadata !4457, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4459, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4460, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata i32 1, metadata !4464, metadata !DIExpression()), !dbg !4890
  %call674 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op0.addr.0) #6, !dbg !4891
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call674, metadata !4461, metadata !DIExpression()), !dbg !4890
  %call675 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op1.addr.3) #6, !dbg !4892
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call675, metadata !4462, metadata !DIExpression()), !dbg !4890
  %call676 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !4893
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call676, metadata !4463, metadata !DIExpression()), !dbg !4890
  %cmp677 = icmp eq %struct.rtx_def* %target.addr.12, null, !dbg !4894
  br i1 %cmp677, label %if.then684, label %lor.lhs.false679, !dbg !4896

lor.lhs.false679:                                 ; preds = %if.then658
  %56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.12, i64 0, i32 0, !dbg !4897
  %bf.load680 = load i32, i32* %56, align 8, !dbg !4897
  %bf.clear681 = and i32 %bf.load680, 65535, !dbg !4897
  %cmp682 = icmp eq i32 %bf.clear681, 37, !dbg !4897
  br i1 %cmp682, label %if.end685, label %if.then684, !dbg !4898

if.then684:                                       ; preds = %lor.lhs.false679, %if.then658
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call676, metadata !4385, metadata !DIExpression()), !dbg !4503
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call676, i64 0, i32 0, !dbg !4899
  %bf.load686.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4901
  br label %if.end685, !dbg !4902

if.end685:                                        ; preds = %if.then684, %lor.lhs.false679
  %bf.load686 = phi i32 [ %bf.load686.pre, %if.then684 ], [ %bf.load680, %lor.lhs.false679 ], !dbg !4901
  %target.addr.13 = phi %struct.rtx_def* [ %call676, %if.then684 ], [ %target.addr.12, %lor.lhs.false679 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.13, metadata !4385, metadata !DIExpression()), !dbg !4503
  %bf.clear687 = and i32 %bf.load686, 65535, !dbg !4901
  %cmp688 = icmp eq i32 %bf.clear687, 37, !dbg !4901
  br i1 %cmp688, label %if.then690, label %if.end692, !dbg !4903

if.then690:                                       ; preds = %if.end685
  %call691 = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* %call676) #6, !dbg !4904
  br label %if.end692, !dbg !4904

if.end692:                                        ; preds = %if.then690, %if.end685
  call void @llvm.dbg.value(metadata i32 0, metadata !4453, metadata !DIExpression()), !dbg !4890
  %cond713 = select i1 %cmp636, i32 85, i32 83, !dbg !4905
  br label %for.cond693, !dbg !4908

for.cond693:                                      ; preds = %for.inc762, %if.end692
  %i659.0 = phi i32 [ 0, %if.end692 ], [ %inc763, %for.inc762 ], !dbg !4909
  %carry_in.0 = phi %struct.rtx_def* [ null, %if.end692 ], [ %carry_in.1, %for.inc762 ], !dbg !4910
  %carry_out.0 = phi %struct.rtx_def* [ null, %if.end692 ], [ %carry_out.5, %for.inc762 ], !dbg !4911
  call void @llvm.dbg.value(metadata %struct.rtx_def* %carry_out.0, metadata !4460, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %carry_in.0, metadata !4459, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata i32 %i659.0, metadata !4453, metadata !DIExpression()), !dbg !4890
  %exitcond = icmp eq i32 %i659.0, %div671, !dbg !4912
  br i1 %exitcond, label %for.end764, label %for.body696, !dbg !4913

for.body696:                                      ; preds = %for.cond693
  call void @llvm.dbg.value(metadata i32 %i659.0, metadata !4465, metadata !DIExpression()), !dbg !4914
  %call698 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %call676, i32 %i659.0, i32 1, i32 %mode) #6, !dbg !4915
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call698, metadata !4469, metadata !DIExpression()), !dbg !4914
  %call699 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %call674, i32 %i659.0, i32 %mode) #6, !dbg !4916
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call699, metadata !4470, metadata !DIExpression()), !dbg !4914
  %call700 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %call675, i32 %i659.0, i32 %mode) #6, !dbg !4917
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call700, metadata !4471, metadata !DIExpression()), !dbg !4914
  %57 = load i32, i32* @word_mode, align 4, !dbg !4918
  %call702 = tail call %struct.rtx_def* @expand_binop(i32 %57, %struct.optab_d* %binoptab.addr.0, %struct.rtx_def* %call699, %struct.rtx_def* %call700, %struct.rtx_def* %call698, i32 %unsignedp, i32 %cond) #8, !dbg !4919
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call702, metadata !4472, metadata !DIExpression()), !dbg !4914
  %cmp703 = icmp eq %struct.rtx_def* %call702, null, !dbg !4920
  br i1 %cmp703, label %cleanup755, label %if.end706, !dbg !4922

if.end706:                                        ; preds = %for.body696
  %add = add nuw nsw i32 %i659.0, 1, !dbg !4923
  %cmp707 = icmp ult i32 %add, %div671, !dbg !4924
  br i1 %cmp707, label %if.then709, label %if.end715, !dbg !4925

if.then709:                                       ; preds = %if.end706
  %58 = load i32, i32* @word_mode, align 4, !dbg !4926
  %call710 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %58) #6, !dbg !4927
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call710, metadata !4460, metadata !DIExpression()), !dbg !4890
  %59 = load i32, i32* @word_mode, align 4, !dbg !4928
  %call714 = tail call %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def* %call710, i32 %cond713, %struct.rtx_def* nonnull %call702, %struct.rtx_def* %call699, i32 %59, i32 1, i32 1) #6, !dbg !4929
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call714, metadata !4460, metadata !DIExpression()), !dbg !4890
  br label %if.end715, !dbg !4930

if.end715:                                        ; preds = %if.then709, %if.end706
  %carry_out.1 = phi %struct.rtx_def* [ %call714, %if.then709 ], [ %carry_out.0, %if.end706 ], !dbg !4890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %carry_out.1, metadata !4460, metadata !DIExpression()), !dbg !4890
  %cmp716 = icmp eq i32 %i659.0, 0, !dbg !4931
  br i1 %cmp716, label %if.else748, label %if.then718, !dbg !4932

if.then718:                                       ; preds = %if.end715
  %60 = load i32, i32* @word_mode, align 4, !dbg !4933
  %call725 = tail call %struct.rtx_def* @expand_binop(i32 %60, %struct.optab_d* %binoptab.addr.0, %struct.rtx_def* nonnull %call702, %struct.rtx_def* %carry_in.0, %struct.rtx_def* null, i32 1, i32 %cond) #8, !dbg !4934
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call725, metadata !4473, metadata !DIExpression()), !dbg !4935
  br i1 %cmp707, label %if.then729, label %if.end743, !dbg !4936

if.then729:                                       ; preds = %if.then718
  %61 = load i32, i32* @word_mode, align 4, !dbg !4937
  %call730 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %61) #6, !dbg !4938
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call730, metadata !4476, metadata !DIExpression()), !dbg !4939
  %62 = load i32, i32* @word_mode, align 4, !dbg !4940
  %call734 = tail call %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def* %call730, i32 %cond713, %struct.rtx_def* %call725, %struct.rtx_def* nonnull %call702, i32 %62, i32 1, i32 1) #6, !dbg !4941
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call734, metadata !4476, metadata !DIExpression()), !dbg !4939
  %63 = load i32, i32* @word_mode, align 4, !dbg !4942
  %call735 = tail call %struct.rtx_def* @expand_binop(i32 %63, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), %struct.rtx_def* %carry_out.1, %struct.rtx_def* %call734, %struct.rtx_def* %carry_out.1, i32 0, i32 %cond) #8, !dbg !4943
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call735, metadata !4460, metadata !DIExpression()), !dbg !4890
  %cmp736 = icmp eq %struct.rtx_def* %call735, null, !dbg !4944
  %.43 = select i1 %cmp736, i32 8, i32 0, !dbg !4946
  br i1 %cmp736, label %cleanup745, label %if.end743

if.end743:                                        ; preds = %if.then729, %if.then718
  %carry_out.2 = phi %struct.rtx_def* [ %carry_out.1, %if.then718 ], [ %call735, %if.then729 ], !dbg !4914
  call void @llvm.dbg.value(metadata %struct.rtx_def* %carry_out.2, metadata !4460, metadata !DIExpression()), !dbg !4890
  %call744 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call698, %struct.rtx_def* %call725) #6, !dbg !4947
  br label %cleanup745, !dbg !4948

cleanup745:                                       ; preds = %if.then729, %if.end743
  %cleanup.dest.slot.8 = phi i32 [ %.43, %if.then729 ], [ 0, %if.end743 ]
  %carry_out.3 = phi %struct.rtx_def* [ null, %if.then729 ], [ %carry_out.2, %if.end743 ], !dbg !4949
  call void @llvm.dbg.value(metadata %struct.rtx_def* %carry_out.3, metadata !4460, metadata !DIExpression()), !dbg !4890
  %cond4 = icmp eq i32 %cleanup.dest.slot.8, 0
  br i1 %cond4, label %if.end754, label %cleanup755

if.else748:                                       ; preds = %if.end715
  %cmp749 = icmp eq %struct.rtx_def* %call702, %call698, !dbg !4950
  br i1 %cmp749, label %if.end754, label %if.then751, !dbg !4953

if.then751:                                       ; preds = %if.else748
  %call752 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call698, %struct.rtx_def* nonnull %call702) #6, !dbg !4954
  br label %if.end754, !dbg !4954

if.end754:                                        ; preds = %if.else748, %if.then751, %cleanup745
  %carry_out.4 = phi %struct.rtx_def* [ %carry_out.3, %cleanup745 ], [ %carry_out.1, %if.then751 ], [ %carry_out.1, %if.else748 ], !dbg !4914
  call void @llvm.dbg.value(metadata %struct.rtx_def* %carry_out.4, metadata !4460, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %carry_out.4, metadata !4459, metadata !DIExpression()), !dbg !4890
  br label %cleanup755, !dbg !4955

cleanup755:                                       ; preds = %for.body696, %cleanup745, %if.end754
  %carry_in.1 = phi %struct.rtx_def* [ %carry_in.0, %cleanup745 ], [ %carry_out.4, %if.end754 ], [ %carry_in.0, %for.body696 ], !dbg !4890
  %cleanup.dest.slot.9 = phi i32 [ %cleanup.dest.slot.8, %cleanup745 ], [ 0, %if.end754 ], [ 8, %for.body696 ]
  %carry_out.5 = phi %struct.rtx_def* [ %carry_out.3, %cleanup745 ], [ %carry_out.4, %if.end754 ], [ %carry_out.0, %for.body696 ], !dbg !4890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %carry_out.5, metadata !4460, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %carry_in.1, metadata !4459, metadata !DIExpression()), !dbg !4890
  %switch44 = icmp eq i32 %cleanup.dest.slot.9, 0
  br i1 %switch44, label %for.inc762, label %for.end764

for.inc762:                                       ; preds = %cleanup755
  %inc763 = add nuw nsw i32 %i659.0, 1, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %inc763, metadata !4453, metadata !DIExpression()), !dbg !4890
  br label %for.cond693, !dbg !4957, !llvm.loop !4958

for.end764:                                       ; preds = %for.cond693, %cleanup755
  %i659.0.lcssa = phi i32 [ %i659.0, %for.cond693 ], [ %i659.0, %cleanup755 ], !dbg !4909
  call void @llvm.dbg.value(metadata i32 %i659.0.lcssa, metadata !4453, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata i32 %i659.0.lcssa, metadata !4453, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata i32 %i659.0.lcssa, metadata !4453, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata i32 %i659.0.lcssa, metadata !4453, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata i32 %i659.0.lcssa, metadata !4453, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.value(metadata i32 %i659.0.lcssa, metadata !4453, metadata !DIExpression()), !dbg !4890
  %64 = load i8, i8* %arrayidx646, align 1, !dbg !4960
  %65 = lshr i8 %64, 2, !dbg !4961
  %div772 = zext i8 %65 to i32, !dbg !4961
  %cmp773 = icmp eq i32 %i659.0.lcssa, %div772, !dbg !4962
  br i1 %cmp773, label %if.then775, label %if.else793, !dbg !4963

if.then775:                                       ; preds = %for.end764
  %idxprom776 = sext i32 %mode to i64, !dbg !4964
  %insn_code778 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom776, i32 0, !dbg !4965
  %66 = load i32, i32* %insn_code778, align 4, !dbg !4965
  %cmp779 = icmp eq i32 %66, 2956, !dbg !4966
  br i1 %cmp779, label %lor.lhs.false781, label %if.then784, !dbg !4967

lor.lhs.false781:                                 ; preds = %if.then775
  %call782 = tail call i32 @rtx_equal_p(%struct.rtx_def* %target.addr.13, %struct.rtx_def* %call676) #6, !dbg !4968
  %tobool783 = icmp eq i32 %call782, 0, !dbg !4968
  br i1 %tobool783, label %if.then784, label %cleanup795, !dbg !4969

if.then784:                                       ; preds = %lor.lhs.false781, %if.then775
  %call786 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.13, %struct.rtx_def* %call676) #6, !dbg !4970
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call786, metadata !4479, metadata !DIExpression()), !dbg !4971
  %code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab.addr.0, i64 0, i32 0, !dbg !4972
  %67 = load i32, i32* %code, align 8, !dbg !4972
  %call787 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call674) #6, !dbg !4972
  %call788 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call675) #6, !dbg !4972
  %call789 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %67, i32 %mode, %struct.rtx_def* %call787, %struct.rtx_def* %call788) #6, !dbg !4972
  %call790 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call786, i32 4, %struct.rtx_def* %call789) #6, !dbg !4973
  br label %cleanup795, !dbg !4974

if.else793:                                       ; preds = %for.end764
  tail call void @delete_insns_since(%struct.rtx_def* %call7) #6, !dbg !4975
  br label %cleanup795, !dbg !4976

cleanup795:                                       ; preds = %lor.lhs.false781, %if.then784, %if.else793
  %cleanup.dest.slot.10 = phi i1 [ true, %if.else793 ], [ false, %lor.lhs.false781 ], [ false, %if.then784 ]
  %target.addr.15 = phi %struct.rtx_def* [ %target.addr.13, %if.else793 ], [ %call676, %lor.lhs.false781 ], [ %target.addr.13, %if.then784 ], !dbg !4977
  %retval.14 = phi %struct.rtx_def* [ %retval.13, %if.else793 ], [ %call676, %lor.lhs.false781 ], [ %target.addr.13, %if.then784 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.15, metadata !4385, metadata !DIExpression()), !dbg !4503
  br i1 %cleanup.dest.slot.10, label %if.end806, label %cleanup1043

if.end806:                                        ; preds = %land.lhs.true651, %cleanup795, %if.end635, %land.lhs.true644
  %target.addr.16 = phi %struct.rtx_def* [ %target.addr.12, %land.lhs.true651 ], [ %target.addr.12, %land.lhs.true644 ], [ %target.addr.12, %if.end635 ], [ %target.addr.15, %cleanup795 ], !dbg !4503
  %retval.15 = phi %struct.rtx_def* [ %retval.13, %land.lhs.true651 ], [ %retval.13, %land.lhs.true644 ], [ %retval.13, %if.end635 ], [ %retval.14, %cleanup795 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.16, metadata !4385, metadata !DIExpression()), !dbg !4503
  %or.cond45 = and i1 %cmp83, %cmp268, !dbg !4978
  br i1 %or.cond45, label %land.lhs.true812, label %if.end881, !dbg !4978

land.lhs.true812:                                 ; preds = %if.end806
  %arrayidx814 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4979
  %68 = load i8, i8* %arrayidx814, align 1, !dbg !4979
  %cmp817 = icmp eq i8 %68, 8, !dbg !4980
  br i1 %cmp817, label %land.lhs.true819, label %if.end881, !dbg !4981

land.lhs.true819:                                 ; preds = %land.lhs.true812
  %69 = load i32, i32* @word_mode, align 4, !dbg !4982
  %idxprom820 = sext i32 %69 to i64, !dbg !4982
  %insn_code822 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16, i32 4, i64 %idxprom820, i32 0, !dbg !4983
  %70 = load i32, i32* %insn_code822, align 4, !dbg !4983
  %cmp823 = icmp eq i32 %70, 2956, !dbg !4984
  br i1 %cmp823, label %if.end881, label %land.lhs.true825, !dbg !4985

land.lhs.true825:                                 ; preds = %land.lhs.true819
  %insn_code828 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12, i32 4, i64 %idxprom820, i32 0, !dbg !4986
  %71 = load i32, i32* %insn_code828, align 4, !dbg !4986
  %cmp829 = icmp eq i32 %71, 2956, !dbg !4987
  br i1 %cmp829, label %if.end881, label %if.then831, !dbg !4988

if.then831:                                       ; preds = %land.lhs.true825
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4484, metadata !DIExpression()), !dbg !4989
  %idxprom832 = sext i32 %mode to i64, !dbg !4990
  %insn_code834 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 21, i32 4, i64 %idxprom832, i32 0, !dbg !4992
  %72 = load i32, i32* %insn_code834, align 4, !dbg !4992
  %cmp835 = icmp eq i32 %72, 2956, !dbg !4993
  br i1 %cmp835, label %if.end842, label %if.then837, !dbg !4994

if.then837:                                       ; preds = %if.then831
  %call838 = tail call fastcc %struct.rtx_def* @expand_doubleword_mult(i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.3, %struct.rtx_def* %target.addr.16, i8 zeroext 1, i32 %methods) #8, !dbg !4995
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call838, metadata !4484, metadata !DIExpression()), !dbg !4989
  %tobool839 = icmp eq %struct.rtx_def* %call838, null, !dbg !4997
  br i1 %tobool839, label %if.then840, label %if.end842, !dbg !4999

if.then840:                                       ; preds = %if.then837
  tail call void @delete_insns_since(%struct.rtx_def* %call7) #6, !dbg !5000
  br label %if.end842, !dbg !5000

if.end842:                                        ; preds = %if.then837, %if.then831, %if.then840
  %product.0 = phi %struct.rtx_def* [ null, %if.then831 ], [ null, %if.then840 ], [ %call838, %if.then837 ], !dbg !4989
  call void @llvm.dbg.value(metadata %struct.rtx_def* %product.0, metadata !4484, metadata !DIExpression()), !dbg !4989
  %cmp843 = icmp eq %struct.rtx_def* %product.0, null, !dbg !5001
  br i1 %cmp843, label %land.lhs.true845, label %if.end856, !dbg !5003

land.lhs.true845:                                 ; preds = %if.end842
  %insn_code848 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 20, i32 4, i64 %idxprom832, i32 0, !dbg !5004
  %73 = load i32, i32* %insn_code848, align 4, !dbg !5004
  %cmp849 = icmp eq i32 %73, 2956, !dbg !5005
  br i1 %cmp849, label %if.end856, label %if.then851, !dbg !5006

if.then851:                                       ; preds = %land.lhs.true845
  %call852 = tail call fastcc %struct.rtx_def* @expand_doubleword_mult(i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.3, %struct.rtx_def* %target.addr.16, i8 zeroext 0, i32 %methods) #8, !dbg !5007
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call852, metadata !4484, metadata !DIExpression()), !dbg !4989
  %tobool853 = icmp eq %struct.rtx_def* %call852, null, !dbg !5009
  br i1 %tobool853, label %if.then854, label %if.end856, !dbg !5011

if.then854:                                       ; preds = %if.then851
  tail call void @delete_insns_since(%struct.rtx_def* %call7) #6, !dbg !5012
  br label %if.end856, !dbg !5012

if.end856:                                        ; preds = %if.then851, %land.lhs.true845, %if.then854, %if.end842
  %product.1 = phi %struct.rtx_def* [ null, %land.lhs.true845 ], [ %product.0, %if.end842 ], [ null, %if.then854 ], [ %call852, %if.then851 ], !dbg !4989
  call void @llvm.dbg.value(metadata %struct.rtx_def* %product.1, metadata !4484, metadata !DIExpression()), !dbg !4989
  %cmp857 = icmp eq %struct.rtx_def* %product.1, null, !dbg !5013
  br i1 %cmp857, label %cleanup878, label %if.then859, !dbg !5015

if.then859:                                       ; preds = %if.end856
  %insn_code862 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom832, i32 0, !dbg !5016
  %74 = load i32, i32* %insn_code862, align 4, !dbg !5016
  %cmp863 = icmp eq i32 %74, 2956, !dbg !5019
  br i1 %cmp863, label %cleanup878, label %if.then865, !dbg !5020

if.then865:                                       ; preds = %if.then859
  %tobool866 = icmp eq %struct.rtx_def* %target.addr.16, null, !dbg !5021
  %target.addr.16.product.1 = select i1 %tobool866, %struct.rtx_def* %product.1, %struct.rtx_def* %target.addr.16, !dbg !5021
  %call871 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.16.product.1, %struct.rtx_def* nonnull %product.1) #6, !dbg !5023
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call871, metadata !4392, metadata !DIExpression()), !dbg !4503
  %call872 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.addr.0) #6, !dbg !5024
  %call873 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op1.addr.3) #6, !dbg !5024
  %call874 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %mode, %struct.rtx_def* %call872, %struct.rtx_def* %call873) #6, !dbg !5024
  %call875 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call871, i32 4, %struct.rtx_def* %call874) #6, !dbg !5025
  br label %cleanup878, !dbg !5026

cleanup878:                                       ; preds = %if.then859, %if.end856, %if.then865
  %cleanup.dest.slot.11 = phi i1 [ false, %if.then865 ], [ false, %if.then859 ], [ true, %if.end856 ]
  %retval.16 = phi %struct.rtx_def* [ %product.1, %if.then865 ], [ %product.1, %if.then859 ], [ %retval.15, %if.end856 ], !dbg !4503
  br i1 %cleanup.dest.slot.11, label %if.end881, label %cleanup1043

if.end881:                                        ; preds = %land.lhs.true825, %land.lhs.true819, %cleanup878, %land.lhs.true812, %if.end806
  %retval.17 = phi %struct.rtx_def* [ %retval.15, %land.lhs.true825 ], [ %retval.15, %land.lhs.true819 ], [ %retval.15, %land.lhs.true812 ], [ %retval.15, %if.end806 ], [ %retval.16, %cleanup878 ], !dbg !4503
  %call882 = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* %binoptab.addr.0, i32 %mode) #8, !dbg !5027
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call882, metadata !4391, metadata !DIExpression()), !dbg !4503
  %tobool883 = icmp eq %struct.rtx_def* %call882, null, !dbg !5028
  br i1 %tobool883, label %if.end922, label %land.lhs.true884, !dbg !5029

land.lhs.true884:                                 ; preds = %if.end881
  switch i32 %methods, label %if.end922 [
    i32 1, label %if.then890
    i32 3, label %if.then890
  ], !dbg !5030

if.then890:                                       ; preds = %land.lhs.true884, %land.lhs.true884
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.3, metadata !4490, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4491, metadata !DIExpression()), !dbg !5031
  tail call void @start_sequence() #6, !dbg !5032
  %call893 = tail call fastcc zeroext i8 @shift_optab_p(%struct.optab_d* %binoptab.addr.0) #8, !dbg !5033
  %tobool894 = icmp eq i8 %call893, 0, !dbg !5033
  br i1 %tobool894, label %if.end898, label %if.then895, !dbg !5035

if.then895:                                       ; preds = %if.then890
  %75 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 9), align 8, !dbg !5036
  %call896 = tail call i32 %75() #6, !dbg !5038
  call void @llvm.dbg.value(metadata i32 %call896, metadata !4491, metadata !DIExpression()), !dbg !5031
  %call897 = tail call %struct.rtx_def* @convert_to_mode(i32 %call896, %struct.rtx_def* %op1.addr.3, i32 1) #6, !dbg !5039
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call897, metadata !4490, metadata !DIExpression()), !dbg !5031
  br label %if.end898, !dbg !5040

if.end898:                                        ; preds = %if.then890, %if.then895
  %op1x.0 = phi %struct.rtx_def* [ %call897, %if.then895 ], [ %op1.addr.3, %if.then890 ], !dbg !5031
  %op1_mode892.0 = phi i32 [ %call896, %if.then895 ], [ %mode, %if.then890 ], !dbg !5031
  call void @llvm.dbg.value(metadata i32 %op1_mode892.0, metadata !4491, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1x.0, metadata !4490, metadata !DIExpression()), !dbg !5031
  %76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.addr.0, i64 0, i32 0, !dbg !5041
  %bf.load899 = load i32, i32* %76, align 8, !dbg !5041
  %bf.clear901 = and i32 %bf.load899, 16711680, !dbg !5041
  %cmp902 = icmp eq i32 %bf.clear901, 0, !dbg !5043
  br i1 %cmp902, label %if.end912, label %land.lhs.true904, !dbg !5044

land.lhs.true904:                                 ; preds = %if.end898
  %bf.lshr906 = lshr i32 %bf.load899, 16, !dbg !5045
  %bf.clear907 = and i32 %bf.lshr906, 255, !dbg !5045
  %cmp908 = icmp eq i32 %bf.clear907, %mode, !dbg !5046
  br i1 %cmp908, label %if.end912, label %if.then910, !dbg !5047

if.then910:                                       ; preds = %land.lhs.true904
  %call911 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode, %struct.rtx_def* %op0.addr.0, i32 %unsignedp) #6, !dbg !5048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call911, metadata !4383, metadata !DIExpression()), !dbg !4503
  br label %if.end912, !dbg !5049

if.end912:                                        ; preds = %land.lhs.true904, %if.end898, %if.then910
  %op0.addr.1 = phi %struct.rtx_def* [ %call911, %if.then910 ], [ %op0.addr.0, %land.lhs.true904 ], [ %op0.addr.0, %if.end898 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.addr.1, metadata !4383, metadata !DIExpression()), !dbg !4503
  %call913 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) @emit_library_call_value(%struct.rtx_def* nonnull %call882, %struct.rtx_def* null, i32 1, i32 %mode, i32 2, %struct.rtx_def* %op0.addr.1, i32 %mode, %struct.rtx_def* %op1x.0, i32 %op1_mode892.0) #6, !dbg !5050
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call913, metadata !4492, metadata !DIExpression()), !dbg !5031
  %call914 = tail call %struct.rtx_def* @get_insns() #6, !dbg !5051
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call914, metadata !4487, metadata !DIExpression()), !dbg !5031
  tail call void @end_sequence() #6, !dbg !5052
  %call915 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !5053
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call915, metadata !4385, metadata !DIExpression()), !dbg !4503
  %code916 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab.addr.0, i64 0, i32 0, !dbg !5054
  %77 = load i32, i32* %code916, align 8, !dbg !5054
  %call917 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %77, i32 %mode, %struct.rtx_def* %op0.addr.1, %struct.rtx_def* %op1.addr.3) #6, !dbg !5054
  tail call void @emit_libcall_block(%struct.rtx_def* %call914, %struct.rtx_def* %call915, %struct.rtx_def* %call913, %struct.rtx_def* %call917) #8, !dbg !5055
  br label %cleanup1043

if.end922:                                        ; preds = %if.end881, %land.lhs.true884
  tail call void @delete_insns_since(%struct.rtx_def* %call7) #6, !dbg !5056
  %methods.off = add i32 %methods, -2, !dbg !5057
  %switch55 = icmp ult i32 %methods.off, 3, !dbg !5057
  br i1 %switch55, label %if.end932, label %if.then931, !dbg !5057

if.then931:                                       ; preds = %if.end922
  tail call void @delete_insns_since(%struct.rtx_def* %call) #6, !dbg !5059
  br label %cleanup1043, !dbg !5061

if.end932:                                        ; preds = %if.end922
  %cmp933 = icmp eq i32 %methods, 3, !dbg !5062
  %cond935 = zext i1 %cmp933 to i32, !dbg !5063
  call void @llvm.dbg.value(metadata i32 %cond935, metadata !4387, metadata !DIExpression()), !dbg !4503
  switch i8 %0, label %if.end1042 [
    i8 2, label %if.then959
    i8 8, label %if.then959
    i8 9, label %if.then959
    i8 11, label %if.then959
    i8 4, label %if.then959
    i8 5, label %if.then959
    i8 6, label %if.then959
    i8 7, label %if.then959
  ], !dbg !5064

if.then959:                                       ; preds = %if.end932, %if.end932, %if.end932, %if.end932, %if.end932, %if.end932, %if.end932, %if.end932
  %or.cond48 = or i1 %or.cond22, %cmp636, !dbg !5065
  %or.cond49 = or i1 %or.cond48, %cmp639, !dbg !5065
  %or.cond50 = or i1 %or.cond49, %cmp83, !dbg !5065
  %or.cond51 = or i1 %or.cond50, %cmp348, !dbg !5065
  %or.cond52 = and i1 %or.cond51, %cmp268, !dbg !5065
  %no_extend982.0 = zext i1 %or.cond52 to i32, !dbg !5065
  %cmp1011 = icmp ne %struct.optab_d* %binoptab.addr.0, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), !dbg !5067
  %spec.select53 = and i1 %or.cond52, %cmp1011, !dbg !5067
  %land.ext1014 = zext i1 %spec.select53 to i32, !dbg !5067
  br i1 %cmp933, label %if.then959.split.us, label %if.then959.if.then959.split_crit_edge, !dbg !5068

if.then959.if.then959.split_crit_edge:            ; preds = %if.then959
  br label %for.cond963, !dbg !5068

if.then959.split.us:                              ; preds = %if.then959
  br label %for.cond963.us, !dbg !5068

for.cond963.us:                                   ; preds = %for.inc1037.us, %if.then959.split.us
  %idxprom960.pn.us = phi i64 [ %idxprom, %if.then959.split.us ], [ %idxprom968.us, %for.inc1037.us ]
  %target.addr.17.us = phi %struct.rtx_def* [ %target.addr.16, %if.then959.split.us ], [ %target.addr.20.us, %for.inc1037.us ], !dbg !4503
  %retval.18.us = phi %struct.rtx_def* [ %retval.17, %if.then959.split.us ], [ %retval.20.us, %for.inc1037.us ], !dbg !4503
  %wider_mode.1.in.in.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom960.pn.us, !dbg !5069
  %wider_mode.1.in.us = load i8, i8* %wider_mode.1.in.in.us, align 1, !dbg !5069
  %wider_mode.1.us = zext i8 %wider_mode.1.in.us to i32, !dbg !5069
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.17.us, metadata !4385, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata i32 %wider_mode.1.us, metadata !4390, metadata !DIExpression()), !dbg !4503
  %cmp964.us = icmp eq i8 %wider_mode.1.in.us, 0, !dbg !5070
  br i1 %cmp964.us, label %if.end1042.loopexit.us-lcssa.us, label %for.body966.us, !dbg !5071

for.body966.us:                                   ; preds = %for.cond963.us
  %idxprom968.us = zext i8 %wider_mode.1.in.us to i64, !dbg !5072
  %insn_code970.us = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab.addr.0, i64 0, i32 4, i64 %idxprom968.us, i32 0, !dbg !5073
  %78 = load i32, i32* %insn_code970.us, align 4, !dbg !5073
  %cmp971.us = icmp eq i32 %78, 2956, !dbg !5074
  br i1 %cmp971.us, label %lor.lhs.false973.us, label %if.then979.us, !dbg !5075

lor.lhs.false973.us:                              ; preds = %for.body966.us
  %call977.us = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* %binoptab.addr.0, i32 %wider_mode.1.us) #8, !dbg !5076
  %tobool978.us = icmp eq %struct.rtx_def* %call977.us, null, !dbg !5076
  br i1 %tobool978.us, label %for.inc1037.us, label %if.then979.us, !dbg !5077

if.then979.us:                                    ; preds = %lor.lhs.false973.us, %for.body966.us
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.addr.0, metadata !4493, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.3, metadata !4501, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata i32 0, metadata !4502, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata i32 %no_extend982.0, metadata !4502, metadata !DIExpression()), !dbg !5067
  %call1008.us = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0.addr.0, i32 %wider_mode.1.us, i32 %mode, i32 %unsignedp, i32 %no_extend982.0) #8, !dbg !5078
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1008.us, metadata !4493, metadata !DIExpression()), !dbg !5067
  %call1015.us = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op1.addr.3, i32 %wider_mode.1.us, i32 %mode, i32 %unsignedp, i32 %land.ext1014) #8, !dbg !5079
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1015.us, metadata !4501, metadata !DIExpression()), !dbg !5067
  %call1016.us = tail call %struct.rtx_def* @expand_binop(i32 %wider_mode.1.us, %struct.optab_d* %binoptab.addr.0, %struct.rtx_def* %call1008.us, %struct.rtx_def* %call1015.us, %struct.rtx_def* null, i32 %unsignedp, i32 %cond935) #8, !dbg !5080
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1016.us, metadata !4392, metadata !DIExpression()), !dbg !4503
  %tobool1017.us = icmp eq %struct.rtx_def* %call1016.us, null, !dbg !5081
  br i1 %tobool1017.us, label %if.else1029.us, label %if.then1018.us, !dbg !5083

if.then1018.us:                                   ; preds = %if.then979.us
  br i1 %cmp268, label %if.else1027.us, label %if.then1021.us, !dbg !5084

if.then1021.us:                                   ; preds = %if.then1018.us
  %cmp1022.us = icmp eq %struct.rtx_def* %target.addr.17.us, null, !dbg !5086
  br i1 %cmp1022.us, label %if.then1024.us, label %if.end1026.us, !dbg !5090

if.then1024.us:                                   ; preds = %if.then1021.us
  %call1025.us = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !5091
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1025.us, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %if.end1026.us, !dbg !5092

if.end1026.us:                                    ; preds = %if.then1024.us, %if.then1021.us
  %target.addr.18.us = phi %struct.rtx_def* [ %call1025.us, %if.then1024.us ], [ %target.addr.17.us, %if.then1021.us ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.18.us, metadata !4385, metadata !DIExpression()), !dbg !4503
  tail call void @convert_move(%struct.rtx_def* %target.addr.18.us, %struct.rtx_def* nonnull %call1016.us, i32 0) #6, !dbg !5093
  br label %cleanup1031.us, !dbg !5094

if.else1027.us:                                   ; preds = %if.then1018.us
  %79 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !5095
  %call1028.us = tail call %struct.rtx_def* %79(i32 %mode, %struct.rtx_def* nonnull %call1016.us) #6, !dbg !5095
  br label %cleanup1031.us, !dbg !5096

if.else1029.us:                                   ; preds = %if.then979.us
  tail call void @delete_insns_since(%struct.rtx_def* %call7) #6, !dbg !5097
  br label %cleanup1031.us, !dbg !5098

cleanup1031.us:                                   ; preds = %if.else1029.us, %if.else1027.us, %if.end1026.us
  %cleanup.dest.slot.12.us = phi i1 [ false, %if.end1026.us ], [ false, %if.else1027.us ], [ true, %if.else1029.us ]
  %target.addr.19.us = phi %struct.rtx_def* [ %target.addr.18.us, %if.end1026.us ], [ %target.addr.17.us, %if.else1027.us ], [ %target.addr.17.us, %if.else1029.us ], !dbg !4503
  %retval.19.us = phi %struct.rtx_def* [ %target.addr.18.us, %if.end1026.us ], [ %call1028.us, %if.else1027.us ], [ %retval.18.us, %if.else1029.us ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.19.us, metadata !4385, metadata !DIExpression()), !dbg !4503
  br i1 %cleanup.dest.slot.12.us, label %for.inc1037.us, label %cleanup1043.loopexit.us-lcssa.us

for.inc1037.us:                                   ; preds = %cleanup1031.us, %lor.lhs.false973.us
  %target.addr.20.us = phi %struct.rtx_def* [ %target.addr.17.us, %lor.lhs.false973.us ], [ %target.addr.19.us, %cleanup1031.us ], !dbg !4503
  %retval.20.us = phi %struct.rtx_def* [ %retval.18.us, %lor.lhs.false973.us ], [ %retval.19.us, %cleanup1031.us ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.20.us, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %for.cond963.us, !dbg !5099, !llvm.loop !5100

if.end1042.loopexit.us-lcssa.us:                  ; preds = %for.cond963.us
  br label %if.end1042.loopexit, !dbg !5102

cleanup1043.loopexit.us-lcssa.us:                 ; preds = %cleanup1031.us
  %retval.19.us.lcssa = phi %struct.rtx_def* [ %retval.19.us, %cleanup1031.us ], !dbg !4503
  br label %cleanup1043.loopexit, !dbg !4648

for.cond963:                                      ; preds = %for.inc1037, %if.then959.if.then959.split_crit_edge
  %idxprom960.pn = phi i64 [ %idxprom, %if.then959.if.then959.split_crit_edge ], [ %idxprom968, %for.inc1037 ]
  %target.addr.17 = phi %struct.rtx_def* [ %target.addr.16, %if.then959.if.then959.split_crit_edge ], [ %target.addr.20, %for.inc1037 ], !dbg !4503
  %retval.18 = phi %struct.rtx_def* [ %retval.17, %if.then959.if.then959.split_crit_edge ], [ %retval.20, %for.inc1037 ], !dbg !4503
  %wider_mode.1.in.in = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom960.pn, !dbg !5069
  %wider_mode.1.in = load i8, i8* %wider_mode.1.in.in, align 1, !dbg !5069
  %wider_mode.1 = zext i8 %wider_mode.1.in to i32, !dbg !5069
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.17, metadata !4385, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata i32 %wider_mode.1, metadata !4390, metadata !DIExpression()), !dbg !4503
  %cmp964 = icmp eq i8 %wider_mode.1.in, 0, !dbg !5070
  br i1 %cmp964, label %if.end1042.loopexit.us-lcssa, label %for.body966, !dbg !5071

for.body966:                                      ; preds = %for.cond963
  %idxprom968 = zext i8 %wider_mode.1.in to i64, !dbg !5072
  %insn_code970 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab.addr.0, i64 0, i32 4, i64 %idxprom968, i32 0, !dbg !5073
  %80 = load i32, i32* %insn_code970, align 4, !dbg !5073
  %cmp971 = icmp eq i32 %80, 2956, !dbg !5074
  br i1 %cmp971, label %lor.lhs.false973, label %if.then979, !dbg !5075

lor.lhs.false973:                                 ; preds = %for.body966
  br label %for.inc1037, !dbg !5103

if.then979:                                       ; preds = %for.body966
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.addr.0, metadata !4493, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.3, metadata !4501, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata i32 0, metadata !4502, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata i32 %no_extend982.0, metadata !4502, metadata !DIExpression()), !dbg !5067
  %call1008 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0.addr.0, i32 %wider_mode.1, i32 %mode, i32 %unsignedp, i32 %no_extend982.0) #8, !dbg !5078
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1008, metadata !4493, metadata !DIExpression()), !dbg !5067
  %call1015 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op1.addr.3, i32 %wider_mode.1, i32 %mode, i32 %unsignedp, i32 %land.ext1014) #8, !dbg !5079
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1015, metadata !4501, metadata !DIExpression()), !dbg !5067
  %call1016 = tail call %struct.rtx_def* @expand_binop(i32 %wider_mode.1, %struct.optab_d* %binoptab.addr.0, %struct.rtx_def* %call1008, %struct.rtx_def* %call1015, %struct.rtx_def* null, i32 %unsignedp, i32 %cond935) #8, !dbg !5080
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1016, metadata !4392, metadata !DIExpression()), !dbg !4503
  %tobool1017 = icmp eq %struct.rtx_def* %call1016, null, !dbg !5081
  br i1 %tobool1017, label %if.else1029, label %if.then1018, !dbg !5083

if.then1018:                                      ; preds = %if.then979
  br i1 %cmp268, label %if.else1027, label %if.then1021, !dbg !5084

if.then1021:                                      ; preds = %if.then1018
  %cmp1022 = icmp eq %struct.rtx_def* %target.addr.17, null, !dbg !5086
  br i1 %cmp1022, label %if.then1024, label %if.end1026, !dbg !5090

if.then1024:                                      ; preds = %if.then1021
  %call1025 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !5091
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1025, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %if.end1026, !dbg !5092

if.end1026:                                       ; preds = %if.then1024, %if.then1021
  %target.addr.18 = phi %struct.rtx_def* [ %call1025, %if.then1024 ], [ %target.addr.17, %if.then1021 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.18, metadata !4385, metadata !DIExpression()), !dbg !4503
  tail call void @convert_move(%struct.rtx_def* %target.addr.18, %struct.rtx_def* nonnull %call1016, i32 0) #6, !dbg !5093
  br label %cleanup1031, !dbg !5094

if.else1027:                                      ; preds = %if.then1018
  %81 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !5095
  %call1028 = tail call %struct.rtx_def* %81(i32 %mode, %struct.rtx_def* nonnull %call1016) #6, !dbg !5095
  br label %cleanup1031, !dbg !5096

if.else1029:                                      ; preds = %if.then979
  tail call void @delete_insns_since(%struct.rtx_def* %call7) #6, !dbg !5097
  br label %cleanup1031, !dbg !5098

cleanup1031:                                      ; preds = %if.else1029, %if.else1027, %if.end1026
  %cleanup.dest.slot.12 = phi i1 [ false, %if.end1026 ], [ false, %if.else1027 ], [ true, %if.else1029 ]
  %target.addr.19 = phi %struct.rtx_def* [ %target.addr.18, %if.end1026 ], [ %target.addr.17, %if.else1027 ], [ %target.addr.17, %if.else1029 ], !dbg !4503
  %retval.19 = phi %struct.rtx_def* [ %target.addr.18, %if.end1026 ], [ %call1028, %if.else1027 ], [ %retval.18, %if.else1029 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.19, metadata !4385, metadata !DIExpression()), !dbg !4503
  br i1 %cleanup.dest.slot.12, label %for.inc1037, label %cleanup1043.loopexit.us-lcssa

for.inc1037:                                      ; preds = %lor.lhs.false973, %cleanup1031
  %target.addr.20 = phi %struct.rtx_def* [ %target.addr.17, %lor.lhs.false973 ], [ %target.addr.19, %cleanup1031 ], !dbg !4503
  %retval.20 = phi %struct.rtx_def* [ %retval.18, %lor.lhs.false973 ], [ %retval.19, %cleanup1031 ], !dbg !4503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.20, metadata !4385, metadata !DIExpression()), !dbg !4503
  br label %for.cond963, !dbg !5099, !llvm.loop !5100

if.end1042.loopexit.us-lcssa:                     ; preds = %for.cond963
  br label %if.end1042.loopexit, !dbg !5102

if.end1042.loopexit:                              ; preds = %if.end1042.loopexit.us-lcssa.us, %if.end1042.loopexit.us-lcssa
  br label %if.end1042, !dbg !5102

if.end1042:                                       ; preds = %if.end1042.loopexit, %if.end932
  tail call void @delete_insns_since(%struct.rtx_def* %call) #6, !dbg !5102
  br label %cleanup1043, !dbg !5104

cleanup1043.loopexit.us-lcssa:                    ; preds = %cleanup1031
  %retval.19.lcssa74 = phi %struct.rtx_def* [ %retval.19, %cleanup1031 ], !dbg !4503
  br label %cleanup1043.loopexit, !dbg !4648

cleanup1043.loopexit:                             ; preds = %cleanup1043.loopexit.us-lcssa.us, %cleanup1043.loopexit.us-lcssa
  %retval.19.lcssa = phi %struct.rtx_def* [ %retval.19.lcssa74, %cleanup1043.loopexit.us-lcssa ], [ %retval.19.us.lcssa, %cleanup1043.loopexit.us-lcssa.us ], !dbg !4503
  br label %cleanup1043, !dbg !4648

cleanup1043.loopexit62.us-lcssa:                  ; preds = %cleanup240
  %retval.3.lcssa81 = phi %struct.rtx_def* [ %retval.3, %cleanup240 ], !dbg !4503
  br label %cleanup1043.loopexit62, !dbg !4648

cleanup1043.loopexit62:                           ; preds = %cleanup1043.loopexit62.us-lcssa.us, %cleanup1043.loopexit62.us-lcssa
  %retval.3.lcssa = phi %struct.rtx_def* [ %retval.3.lcssa81, %cleanup1043.loopexit62.us-lcssa ], [ %retval.3.us.lcssa, %cleanup1043.loopexit62.us-lcssa.us ], !dbg !4503
  br label %cleanup1043, !dbg !4648

cleanup1043:                                      ; preds = %cleanup1043.loopexit62, %cleanup1043.loopexit, %if.then15, %if.end75, %cleanup340, %cleanup470, %cleanup624, %cleanup795, %cleanup878, %if.end1042, %if.then931, %if.end912, %if.else120, %if.then118
  %retval.21 = phi %struct.rtx_def* [ %call76, %if.end75 ], [ %call119, %if.then118 ], [ %call121, %if.else120 ], [ %retval.6, %cleanup340 ], [ %retval.10, %cleanup470 ], [ %retval.12, %cleanup624 ], [ %retval.14, %cleanup795 ], [ %retval.16, %cleanup878 ], [ %call915, %if.end912 ], [ null, %if.end1042 ], [ null, %if.then931 ], [ %call16, %if.then15 ], [ %retval.19.lcssa, %cleanup1043.loopexit ], [ %retval.3.lcssa, %cleanup1043.loopexit62 ], !dbg !4503
  ret %struct.rtx_def* %retval.21, !dbg !4648
}

declare dso_local %struct.rtx_def* @get_last_insn() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @negate_rtx(i32, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_binop_directly(i32 %mode, %struct.optab_d* %binoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods, %struct.rtx_def* %last) unnamed_addr #4 !dbg !5105 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5109, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !5110, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !5111, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !5112, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !5113, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !5114, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i32 %methods, metadata !5115, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last, metadata !5116, metadata !DIExpression()), !dbg !5127
  %idxprom = sext i32 %mode to i64, !dbg !5128
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab, i64 0, i32 4, i64 %idxprom, i32 0, !dbg !5129
  %0 = load i32, i32* %insn_code, align 4, !dbg !5129
  call void @llvm.dbg.value(metadata i32 %0, metadata !5117, metadata !DIExpression()), !dbg !5127
  %idxprom1 = sext i32 %0 to i64, !dbg !5130
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 3, !dbg !5131
  %1 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !5131
  %mode4 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 1, i32 2, !dbg !5132
  %bf.load = load i16, i16* %mode4, align 8, !dbg !5132
  %bf.cast = zext i16 %bf.load to i32, !dbg !5132
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5118, metadata !DIExpression()), !dbg !5127
  %mode9 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 2, i32 2, !dbg !5133
  %bf.load10 = load i16, i16* %mode9, align 8, !dbg !5133
  %bf.cast11 = zext i16 %bf.load10 to i32, !dbg !5133
  call void @llvm.dbg.value(metadata i32 %bf.cast11, metadata !5119, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !5123, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !5124, metadata !DIExpression()), !dbg !5127
  %tobool = icmp eq %struct.rtx_def* %target, null, !dbg !5134
  br i1 %tobool, label %if.else, label %if.end, !dbg !5136

if.else:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !5137
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5125, metadata !DIExpression()), !dbg !5127
  br label %if.end

if.end:                                           ; preds = %entry, %if.else
  %temp.0 = phi %struct.rtx_def* [ %call, %if.else ], [ %target, %entry ], !dbg !5138
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !5125, metadata !DIExpression()), !dbg !5127
  %call12 = tail call fastcc zeroext i8 @commutative_optab_p(%struct.optab_d* %binoptab) #8, !dbg !5139
  call void @llvm.dbg.value(metadata i8 %call12, metadata !5121, metadata !DIExpression()), !dbg !5127
  %tobool13 = icmp eq i8 %call12, 0, !dbg !5140
  br label %if.end35, !dbg !5142

land.lhs.true:                                    ; No predecessors!
  br label %if.end35, !dbg !5143

land.lhs.true16:                                  ; No predecessors!
  br label %if.end35, !dbg !5144

land.lhs.true22:                                  ; No predecessors!
  br label %if.end35, !dbg !5145

land.lhs.true28:                                  ; No predecessors!
  br label %if.end35, !dbg !5146

if.end35:                                         ; preds = %land.lhs.true22, %land.lhs.true16, %land.lhs.true, %if.end, %land.lhs.true28
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !5124, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !5123, metadata !DIExpression()), !dbg !5127
  %conv36 = trunc i32 %unsignedp to i8, !dbg !5147
  %call37 = tail call fastcc %struct.rtx_def* @avoid_expensive_constant(i32 %bf.cast, %struct.optab_d* %binoptab, %struct.rtx_def* %op0, i8 zeroext %conv36) #8, !dbg !5148
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !5123, metadata !DIExpression()), !dbg !5127
  %call38 = tail call fastcc zeroext i8 @shift_optab_p(%struct.optab_d* %binoptab) #8, !dbg !5149
  %tobool39 = icmp eq i8 %call38, 0, !dbg !5149
  br i1 %tobool39, label %if.then40, label %if.end43, !dbg !5151

if.then40:                                        ; preds = %if.end35
  %call42 = tail call fastcc %struct.rtx_def* @avoid_expensive_constant(i32 %bf.cast11, %struct.optab_d* %binoptab, %struct.rtx_def* %op1, i8 zeroext %conv36) #8, !dbg !5152
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call42, metadata !5124, metadata !DIExpression()), !dbg !5127
  br label %if.end43, !dbg !5153

if.end43:                                         ; preds = %if.end35, %if.then40
  %xop1.1 = phi %struct.rtx_def* [ %op1, %if.end35 ], [ %call42, %if.then40 ], !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop1.1, metadata !5124, metadata !DIExpression()), !dbg !5127
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call37, i64 0, i32 0, !dbg !5154
  %bf.load44 = load i32, i32* %2, align 8, !dbg !5154
  %bf.lshr45 = lshr i32 %bf.load44, 16, !dbg !5154
  %bf.clear46 = and i32 %bf.lshr45, 255, !dbg !5154
  %cmp47 = icmp ne i32 %bf.clear46, %bf.cast, !dbg !5156
  %cmp50 = icmp ne i16 %bf.load, 0, !dbg !5157
  %or.cond = and i1 %cmp47, %cmp50, !dbg !5158
  br i1 %or.cond, label %if.then52, label %if.end62, !dbg !5158

if.then52:                                        ; preds = %if.end43
  %bf.clear55 = and i32 %bf.load44, 16711680, !dbg !5159
  %cmp56 = icmp eq i32 %bf.clear55, 0, !dbg !5160
  br i1 %cmp56, label %cond.end, label %cond.true, !dbg !5159

cond.true:                                        ; preds = %if.then52
  br label %cond.end, !dbg !5159

cond.end:                                         ; preds = %if.then52, %cond.true
  %cond = phi i32 [ %bf.clear46, %cond.true ], [ %mode, %if.then52 ], !dbg !5159
  %call61 = tail call %struct.rtx_def* @convert_modes(i32 %bf.cast, i32 %cond, %struct.rtx_def* %call37, i32 %unsignedp) #6, !dbg !5161
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call61, metadata !5123, metadata !DIExpression()), !dbg !5127
  br label %if.end62, !dbg !5162

if.end62:                                         ; preds = %cond.end, %if.end43
  %xop0.1 = phi %struct.rtx_def* [ %call61, %cond.end ], [ %call37, %if.end43 ], !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.1, metadata !5123, metadata !DIExpression()), !dbg !5127
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %xop1.1, i64 0, i32 0, !dbg !5163
  %bf.load63 = load i32, i32* %3, align 8, !dbg !5163
  %bf.lshr64 = lshr i32 %bf.load63, 16, !dbg !5163
  %bf.clear65 = and i32 %bf.lshr64, 255, !dbg !5163
  %cmp66 = icmp ne i32 %bf.clear65, %bf.cast11, !dbg !5165
  %cmp69 = icmp ne i16 %bf.load10, 0, !dbg !5166
  %or.cond2 = and i1 %cmp66, %cmp69, !dbg !5167
  br i1 %or.cond2, label %if.then71, label %if.end85, !dbg !5167

if.then71:                                        ; preds = %if.end62
  %bf.clear74 = and i32 %bf.load63, 16711680, !dbg !5168
  %cmp75 = icmp eq i32 %bf.clear74, 0, !dbg !5169
  br i1 %cmp75, label %cond.end82, label %cond.true77, !dbg !5168

cond.true77:                                      ; preds = %if.then71
  br label %cond.end82, !dbg !5168

cond.end82:                                       ; preds = %if.then71, %cond.true77
  %cond83 = phi i32 [ %bf.clear65, %cond.true77 ], [ %mode, %if.then71 ], !dbg !5168
  %call84 = tail call %struct.rtx_def* @convert_modes(i32 %bf.cast11, i32 %cond83, %struct.rtx_def* %xop1.1, i32 %unsignedp) #6, !dbg !5170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call84, metadata !5124, metadata !DIExpression()), !dbg !5127
  br label %if.end85, !dbg !5171

if.end85:                                         ; preds = %cond.end82, %if.end62
  %xop1.2 = phi %struct.rtx_def* [ %call84, %cond.end82 ], [ %xop1.1, %if.end62 ], !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop1.2, metadata !5124, metadata !DIExpression()), !dbg !5127
  br i1 %tobool13, label %if.end93, label %land.lhs.true88, !dbg !5172

land.lhs.true88:                                  ; preds = %if.end85
  %call89 = tail call fastcc zeroext i8 @swap_commutative_operands_with_target(%struct.rtx_def* %target, %struct.rtx_def* %xop0.1, %struct.rtx_def* %xop1.2) #8, !dbg !5174
  %tobool91 = icmp ne i8 %call89, 0, !dbg !5174
  %spec.select3 = select i1 %tobool91, %struct.rtx_def* %xop1.2, %struct.rtx_def* %xop0.1, !dbg !5175
  %spec.select4 = select i1 %tobool91, %struct.rtx_def* %xop0.1, %struct.rtx_def* %xop1.2, !dbg !5175
  br label %if.end93, !dbg !5175

if.end93:                                         ; preds = %if.end85, %land.lhs.true88
  %xop0.2 = phi %struct.rtx_def* [ %xop0.1, %if.end85 ], [ %spec.select3, %land.lhs.true88 ], !dbg !5127
  %xop1.3 = phi %struct.rtx_def* [ %xop1.2, %if.end85 ], [ %spec.select4, %land.lhs.true88 ], !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop1.3, metadata !5124, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.2, metadata !5123, metadata !DIExpression()), !dbg !5127
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 1, i32 0, !dbg !5176
  %4 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !5176
  %call98 = tail call i32 %4(%struct.rtx_def* %xop0.2, i32 %bf.cast) #6, !dbg !5178
  %tobool99 = icmp eq i32 %call98, 0, !dbg !5178
  %or.cond5 = and i1 %tobool99, %cmp50, !dbg !5179
  br i1 %or.cond5, label %if.then103, label %if.end105, !dbg !5179

if.then103:                                       ; preds = %if.end93
  %call104 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %xop0.2) #6, !dbg !5180
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call104, metadata !5123, metadata !DIExpression()), !dbg !5127
  br label %if.end105, !dbg !5181

if.end105:                                        ; preds = %if.end93, %if.then103
  %xop0.3 = phi %struct.rtx_def* [ %xop0.2, %if.end93 ], [ %call104, %if.then103 ], !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.3, metadata !5123, metadata !DIExpression()), !dbg !5127
  %predicate110 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 2, i32 0, !dbg !5182
  %5 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate110, align 8, !dbg !5182
  %call111 = tail call i32 %5(%struct.rtx_def* %xop1.3, i32 %bf.cast11) #6, !dbg !5184
  %tobool112 = icmp eq i32 %call111, 0, !dbg !5184
  %or.cond6 = and i1 %tobool112, %cmp69, !dbg !5185
  br i1 %or.cond6, label %if.then116, label %if.end118, !dbg !5185

if.then116:                                       ; preds = %if.end105
  %call117 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast11, %struct.rtx_def* %xop1.3) #6, !dbg !5186
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call117, metadata !5124, metadata !DIExpression()), !dbg !5127
  br label %if.end118, !dbg !5187

if.end118:                                        ; preds = %if.end105, %if.then116
  %xop1.4 = phi %struct.rtx_def* [ %xop1.3, %if.end105 ], [ %call117, %if.then116 ], !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop1.4, metadata !5124, metadata !DIExpression()), !dbg !5127
  %cmp119 = icmp eq %struct.optab_d* %binoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 153), !dbg !5188
  %cmp121 = icmp eq %struct.optab_d* %binoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 154), !dbg !5190
  %or.cond7 = or i1 %cmp119, %cmp121, !dbg !5191
  %cmp124 = icmp eq %struct.optab_d* %binoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 155), !dbg !5192
  %or.cond8 = or i1 %or.cond7, %cmp124, !dbg !5191
  %cmp127 = icmp eq %struct.optab_d* %binoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 157), !dbg !5193
  %or.cond9 = or i1 %or.cond8, %cmp127, !dbg !5191
  %cmp130 = icmp eq %struct.optab_d* %binoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 156), !dbg !5194
  %or.cond10 = or i1 %or.cond9, %cmp130, !dbg !5191
  br i1 %or.cond10, label %if.then132, label %if.end151, !dbg !5191

if.then132:                                       ; preds = %if.end118
  %mode137 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 0, i32 2, !dbg !5195
  %bf.load138 = load i16, i16* %mode137, align 8, !dbg !5195
  %bf.cast139 = zext i16 %bf.load138 to i32, !dbg !5195
  call void @llvm.dbg.value(metadata i32 %bf.cast139, metadata !5120, metadata !DIExpression()), !dbg !5127
  %idxprom140 = zext i16 %bf.load138 to i64, !dbg !5197
  %arrayidx141 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom140, !dbg !5197
  %6 = load i8, i8* %arrayidx141, align 1, !dbg !5197
  %conv142 = zext i8 %6 to i32, !dbg !5197
  %idxprom143 = zext i32 %mode to i64, !dbg !5199
  %arrayidx144 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom143, !dbg !5199
  %7 = load i8, i8* %arrayidx144, align 1, !dbg !5199
  %conv145 = zext i8 %7 to i32, !dbg !5199
  %mul = shl nuw nsw i32 %conv145, 1, !dbg !5200
  %cmp146 = icmp eq i32 %mul, %conv142, !dbg !5201
  br i1 %cmp146, label %if.end151, label %cleanup, !dbg !5202

if.end151:                                        ; preds = %if.then132, %if.end118
  %tmp_mode.0 = phi i32 [ %bf.cast139, %if.then132 ], [ %mode, %if.end118 ], !dbg !5203
  call void @llvm.dbg.value(metadata i32 %tmp_mode.0, metadata !5120, metadata !DIExpression()), !dbg !5127
  %predicate156 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 0, i32 0, !dbg !5204
  %8 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate156, align 8, !dbg !5204
  %call157 = tail call i32 %8(%struct.rtx_def* %temp.0, i32 %tmp_mode.0) #6, !dbg !5206
  %tobool158 = icmp eq i32 %call157, 0, !dbg !5206
  br i1 %tobool158, label %if.then159, label %if.end161, !dbg !5207

if.then159:                                       ; preds = %if.end151
  %call160 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %tmp_mode.0) #6, !dbg !5208
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call160, metadata !5125, metadata !DIExpression()), !dbg !5127
  br label %if.end161, !dbg !5209

if.end161:                                        ; preds = %if.end151, %if.then159
  %temp.1 = phi %struct.rtx_def* [ %temp.0, %if.end151 ], [ %call160, %if.then159 ], !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.1, metadata !5125, metadata !DIExpression()), !dbg !5127
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 2, !dbg !5210
  %9 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !5210
  %call164 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %9(%struct.rtx_def* %temp.1, %struct.rtx_def* %xop0.3, %struct.rtx_def* %xop1.4) #6, !dbg !5210
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call164, metadata !5122, metadata !DIExpression()), !dbg !5127
  %tobool165 = icmp eq %struct.rtx_def* %call164, null, !dbg !5211
  br i1 %tobool165, label %if.end197, label %if.then166, !dbg !5213

if.then166:                                       ; preds = %if.end161
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call164, i64 0, i32 0, !dbg !5214
  %bf.load167 = load i32, i32* %10, align 8, !dbg !5214
  %bf.clear168 = and i32 %bf.load167, 65535, !dbg !5214
  %cmp169 = icmp eq i32 %bf.clear168, 8, !dbg !5214
  br i1 %cmp169, label %land.lhs.true186, label %lor.lhs.false171, !dbg !5214

lor.lhs.false171:                                 ; preds = %if.then166
  %cmp174 = icmp eq i32 %bf.clear168, 7, !dbg !5214
  br i1 %cmp174, label %land.lhs.true186, label %lor.lhs.false176, !dbg !5214

lor.lhs.false176:                                 ; preds = %lor.lhs.false171
  %cmp179 = icmp eq i32 %bf.clear168, 9, !dbg !5214
  br i1 %cmp179, label %land.lhs.true186, label %lor.lhs.false181, !dbg !5214

lor.lhs.false181:                                 ; preds = %lor.lhs.false176
  %cmp184 = icmp eq i32 %bf.clear168, 10, !dbg !5214
  br i1 %cmp184, label %land.lhs.true186, label %if.end195, !dbg !5217

land.lhs.true186:                                 ; preds = %lor.lhs.false181, %lor.lhs.false176, %lor.lhs.false171, %if.then166
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call164, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5218
  %rt_rtx = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !5218
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5218
  %cmp188 = icmp eq %struct.rtx_def* %12, null, !dbg !5219
  br i1 %cmp188, label %if.end195, label %land.lhs.true190, !dbg !5220

land.lhs.true190:                                 ; preds = %land.lhs.true186
  %code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab, i64 0, i32 0, !dbg !5221
  %13 = load i32, i32* %code, align 8, !dbg !5221
  %call191 = tail call fastcc i32 @add_equal_note(%struct.rtx_def* nonnull %call164, %struct.rtx_def* %temp.1, i32 %13, %struct.rtx_def* %xop0.3, %struct.rtx_def* %xop1.4) #8, !dbg !5222
  %tobool192 = icmp eq i32 %call191, 0, !dbg !5222
  br i1 %tobool192, label %if.then193, label %if.end195, !dbg !5223

if.then193:                                       ; preds = %land.lhs.true190
  tail call void @delete_insns_since(%struct.rtx_def* %last) #6, !dbg !5224
  %call194 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* %binoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8, !dbg !5226
  br label %cleanup, !dbg !5227

if.end195:                                        ; preds = %land.lhs.true190, %land.lhs.true186, %lor.lhs.false181
  %call196 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %call164) #6, !dbg !5228
  br label %cleanup, !dbg !5229

if.end197:                                        ; preds = %if.end161
  tail call void @delete_insns_since(%struct.rtx_def* %last) #6, !dbg !5230
  br label %cleanup, !dbg !5231

cleanup:                                          ; preds = %if.then132, %if.end197, %if.end195, %if.then193
  %retval.0 = phi %struct.rtx_def* [ %temp.1, %if.end195 ], [ %call194, %if.then193 ], [ null, %if.end197 ], [ null, %if.then132 ], !dbg !5127
  ret %struct.rtx_def* %retval.0, !dbg !5232
}

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @convert_to_mode(i32, %struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @avoid_expensive_constant(i32 %mode, %struct.optab_d* %binoptab, %struct.rtx_def* %x, i8 zeroext %unsignedp) unnamed_addr #4 !dbg !5233 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5237, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !5238, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5239, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.value(metadata i8 %unsignedp, metadata !5240, metadata !DIExpression()), !dbg !5247
  %call = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !5248
  call void @llvm.dbg.value(metadata i8 %call, metadata !5241, metadata !DIExpression()), !dbg !5247
  %cmp = icmp ne i32 %mode, 0, !dbg !5249
  %0 = load i32, i32* @optimize, align 4, !dbg !5250
  %tobool = icmp ne i32 %0, 0, !dbg !5250
  %or.cond = and i1 %cmp, %tobool, !dbg !5251
  br i1 %or.cond, label %land.lhs.true1, label %if.end22, !dbg !5251

land.lhs.true1:                                   ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5252
  %bf.load = load i32, i32* %1, align 8, !dbg !5252
  %bf.clear = and i32 %bf.load, 65535, !dbg !5252
  %idxprom = zext i32 %bf.clear to i64, !dbg !5252
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5252
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5252
  %cmp2 = icmp eq i32 %2, 9, !dbg !5252
  br i1 %cmp2, label %land.lhs.true3, label %if.end22, !dbg !5253

land.lhs.true3:                                   ; preds = %land.lhs.true1
  %code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab, i64 0, i32 0, !dbg !5254
  %3 = load i32, i32* %code, align 8, !dbg !5254
  %call4 = tail call i32 @rtx_cost(%struct.rtx_def* %x, i32 %3, i8 zeroext %call) #6, !dbg !5255
  %call5 = tail call i32 @rtx_cost(%struct.rtx_def* %x, i32 23, i8 zeroext %call) #6, !dbg !5256
  %cmp6 = icmp sgt i32 %call4, %call5, !dbg !5257
  br i1 %cmp6, label %if.then, label %if.end22, !dbg !5258

if.then:                                          ; preds = %land.lhs.true3
  %bf.load7 = load i32, i32* %1, align 8, !dbg !5259
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !5259
  %cmp9 = icmp eq i32 %bf.clear8, 30, !dbg !5259
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !5260

if.then10:                                        ; preds = %if.then
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !5261
  %arrayidx11 = bitcast %union.u* %u to i64*, !dbg !5261
  %4 = load i64, i64* %arrayidx11, align 8, !dbg !5261
  %call12 = tail call i64 @trunc_int_for_mode(i64 %4, i32 %mode) #6, !dbg !5262
  call void @llvm.dbg.value(metadata i64 %call12, metadata !5242, metadata !DIExpression()), !dbg !5263
  %5 = load i64, i64* %arrayidx11, align 8, !dbg !5264
  %cmp16 = icmp eq i64 %call12, %5, !dbg !5266
  br i1 %cmp16, label %if.end20, label %if.then17, !dbg !5267

if.then17:                                        ; preds = %if.then10
  %call18 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call12) #6, !dbg !5268
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call18, metadata !5239, metadata !DIExpression()), !dbg !5247
  br label %if.end20, !dbg !5269

if.else:                                          ; preds = %if.then
  %conv = zext i8 %unsignedp to i32, !dbg !5270
  %call19 = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 0, %struct.rtx_def* %x, i32 %conv) #6, !dbg !5271
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !5239, metadata !DIExpression()), !dbg !5247
  br label %if.end20

if.end20:                                         ; preds = %if.then10, %if.then17, %if.else
  %x.addr.1 = phi %struct.rtx_def* [ %call19, %if.else ], [ %call18, %if.then17 ], [ %x, %if.then10 ], !dbg !5272
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.1, metadata !5239, metadata !DIExpression()), !dbg !5247
  %call21 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %x.addr.1) #6, !dbg !5273
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !5239, metadata !DIExpression()), !dbg !5247
  br label %if.end22, !dbg !5274

if.end22:                                         ; preds = %if.end20, %land.lhs.true3, %land.lhs.true1, %entry
  %x.addr.2 = phi %struct.rtx_def* [ %call21, %if.end20 ], [ %x, %land.lhs.true3 ], [ %x, %land.lhs.true1 ], [ %x, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2, metadata !5239, metadata !DIExpression()), !dbg !5247
  ret %struct.rtx_def* %x.addr.2, !dbg !5275
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op, i32 %mode, i32 %oldmode, i32 %unsignedp, i32 %no_extend) unnamed_addr #4 !dbg !5276 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !5280, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5281, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.value(metadata i32 %oldmode, metadata !5282, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !5283, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.value(metadata i32 %no_extend, metadata !5284, metadata !DIExpression()), !dbg !5286
  %cond1 = icmp eq i32 %no_extend, 0, !dbg !5287
  br i1 %cond1, label %if.then19, label %land.lhs.true, !dbg !5287

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !5289
  %bf.load = load i32, i32* %0, align 8, !dbg !5289
  %bf.clear = and i32 %bf.load, 16711680, !dbg !5289
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !5290
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5291

if.end:                                           ; preds = %land.lhs.true
  br i1 false, label %if.end.if.then19_crit_edge, label %lor.lhs.false, !dbg !5292

if.end.if.then19_crit_edge:                       ; preds = %if.end
  br label %if.then19, !dbg !5292

lor.lhs.false:                                    ; preds = %if.end
  %bf.clear3 = and i32 %bf.load, 65535, !dbg !5294
  %cmp4 = icmp eq i32 %bf.clear3, 39, !dbg !5295
  br i1 %cmp4, label %land.lhs.true5, label %if.end20, !dbg !5296

land.lhs.true5:                                   ; preds = %lor.lhs.false
  %bf.clear8 = and i32 %bf.load, 268435456, !dbg !5297
  %tobool9 = icmp eq i32 %bf.clear8, 0, !dbg !5297
  br i1 %tobool9, label %if.end20, label %land.lhs.true10, !dbg !5298

land.lhs.true10:                                  ; preds = %land.lhs.true5
  %bf.clear13 = and i32 %bf.load, 134217728, !dbg !5299
  %tobool14 = icmp eq i32 %bf.clear13, 0, !dbg !5299
  br i1 %tobool14, label %cond.false, label %cond.end, !dbg !5299

cond.false:                                       ; preds = %land.lhs.true10
  %bf.lshr16 = lshr i32 %bf.load, 26, !dbg !5299
  %bf.clear17 = and i32 %bf.lshr16, 1, !dbg !5299
  br label %cond.end, !dbg !5299

cond.end:                                         ; preds = %land.lhs.true10, %cond.false
  %cond = phi i32 [ %bf.clear17, %cond.false ], [ -1, %land.lhs.true10 ], !dbg !5299
  %cmp18 = icmp eq i32 %cond, %unsignedp, !dbg !5300
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !5301

if.then19:                                        ; preds = %if.end.if.then19_crit_edge, %entry, %cond.end
  %call = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 %oldmode, %struct.rtx_def* %op, i32 %unsignedp) #6, !dbg !5302
  br label %cleanup, !dbg !5303

if.end20:                                         ; preds = %land.lhs.true5, %cond.end, %lor.lhs.false
  %idxprom = zext i32 %mode to i64, !dbg !5304
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5304
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5304
  %cmp22 = icmp ult i8 %1, 5, !dbg !5306
  br i1 %cmp22, label %if.then24, label %if.end30, !dbg !5307

if.then24:                                        ; preds = %if.end20
  %bf.lshr26 = lshr i32 %bf.load, 16, !dbg !5308
  %bf.clear27 = and i32 %bf.lshr26, 255, !dbg !5308
  %call28 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear27, %struct.rtx_def* %op) #6, !dbg !5309
  %call29 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %mode, %struct.rtx_def* %call28, i32 0) #6, !dbg !5310
  br label %cleanup, !dbg !5311

if.end30:                                         ; preds = %if.end20
  %call31 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !5312
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !5285, metadata !DIExpression()), !dbg !5286
  %call32 = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* %call31) #6, !dbg !5313
  %2 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !5314
  %bf.load33 = load i32, i32* %0, align 8, !dbg !5315
  %bf.lshr34 = lshr i32 %bf.load33, 16, !dbg !5315
  %bf.clear35 = and i32 %bf.lshr34, 255, !dbg !5315
  %call36 = tail call %struct.rtx_def* %2(i32 %bf.clear35, %struct.rtx_def* %call31) #6, !dbg !5314
  %call37 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call36, %struct.rtx_def* %op) #6, !dbg !5316
  br label %cleanup, !dbg !5317

cleanup:                                          ; preds = %land.lhs.true, %if.end30, %if.then24, %if.then19
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then19 ], [ %call29, %if.then24 ], [ %call31, %if.end30 ], [ %op, %land.lhs.true ], !dbg !5286
  ret %struct.rtx_def* %retval.0, !dbg !5318
}

declare dso_local void @convert_move(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local void @delete_insns_since(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @commutative_optab_p(%struct.optab_d* %binoptab) unnamed_addr #4 !dbg !5319 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !5323, metadata !DIExpression()), !dbg !5324
  %code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab, i64 0, i32 0, !dbg !5325
  %0 = load i32, i32* %code, align 8, !dbg !5325
  %idxprom = sext i32 %0 to i64, !dbg !5325
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5325
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5325
  %cmp = icmp eq i32 %1, 3, !dbg !5326
  %cmp1 = icmp eq %struct.optab_d* %binoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 20), !dbg !5327
  %or.cond = or i1 %cmp, %cmp1, !dbg !5328
  %cmp3 = icmp eq %struct.optab_d* %binoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 21), !dbg !5329
  %or.cond1 = or i1 %or.cond, %cmp3, !dbg !5328
  %cmp5 = icmp eq %struct.optab_d* %binoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 18), !dbg !5330
  %or.cond2 = or i1 %or.cond1, %cmp5, !dbg !5328
  %cmp6 = icmp eq %struct.optab_d* %binoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 19), !dbg !5331
  %spec.select = or i1 %or.cond2, %cmp6, !dbg !5328
  %conv = zext i1 %spec.select to i8, !dbg !5332
  ret i8 %conv, !dbg !5333
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @swap_commutative_operands_with_target(%struct.rtx_def* %target, %struct.rtx_def* %op0, %struct.rtx_def* %op1) unnamed_addr #4 !dbg !5334 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !5338, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !5339, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !5340, metadata !DIExpression()), !dbg !5343
  %call = tail call i32 @commutative_operand_precedence(%struct.rtx_def* %op0) #6, !dbg !5344
  call void @llvm.dbg.value(metadata i32 %call, metadata !5341, metadata !DIExpression()), !dbg !5343
  %call1 = tail call i32 @commutative_operand_precedence(%struct.rtx_def* %op1) #6, !dbg !5345
  call void @llvm.dbg.value(metadata i32 %call1, metadata !5342, metadata !DIExpression()), !dbg !5343
  %cmp = icmp slt i32 %call, %call1, !dbg !5346
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5348

if.end:                                           ; preds = %entry
  %cmp2 = icmp sgt i32 %call, %call1, !dbg !5349
  br i1 %cmp2, label %cleanup, label %if.end4, !dbg !5351

if.end4:                                          ; preds = %if.end
  %cmp5 = icmp eq %struct.rtx_def* %target, null, !dbg !5352
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !5354

lor.lhs.false:                                    ; preds = %if.end4
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !5355
  %bf.load = load i32, i32* %0, align 8, !dbg !5355
  %bf.clear = and i32 %bf.load, 65535, !dbg !5355
  %cmp6 = icmp eq i32 %bf.clear, 37, !dbg !5355
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !5356

if.then7:                                         ; preds = %lor.lhs.false, %if.end4
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1, i64 0, i32 0, !dbg !5357
  %bf.load8 = load i32, i32* %1, align 8, !dbg !5357
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !5357
  %cmp10 = icmp eq i32 %bf.clear9, 37, !dbg !5357
  br i1 %cmp10, label %land.lhs.true, label %lor.rhs, !dbg !5358

land.lhs.true:                                    ; preds = %if.then7
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0, i64 0, i32 0, !dbg !5359
  %bf.load11 = load i32, i32* %2, align 8, !dbg !5359
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !5359
  %cmp13 = icmp eq i32 %bf.clear12, 37, !dbg !5359
  br i1 %cmp13, label %lor.rhs, label %lor.end, !dbg !5360

lor.rhs:                                          ; preds = %land.lhs.true, %if.then7
  %cmp14 = icmp eq %struct.rtx_def* %target, %op1, !dbg !5361
  %phitmp = zext i1 %cmp14 to i8, !dbg !5360
  br label %lor.end, !dbg !5360

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true
  %3 = phi i8 [ 1, %land.lhs.true ], [ %phitmp, %lor.rhs ]
  br label %cleanup, !dbg !5362

if.else:                                          ; preds = %lor.lhs.false
  %call15 = tail call i32 @rtx_equal_p(%struct.rtx_def* %op1, %struct.rtx_def* nonnull %target) #6, !dbg !5363
  %conv16 = trunc i32 %call15 to i8, !dbg !5363
  br label %cleanup, !dbg !5364

cleanup:                                          ; preds = %if.end, %entry, %if.else, %lor.end
  %retval.0 = phi i8 [ %3, %lor.end ], [ %conv16, %if.else ], [ 1, %entry ], [ 0, %if.end ], !dbg !5343
  ret i8 %retval.0, !dbg !5365
}

declare dso_local void @start_sequence() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @operand_subword(%struct.rtx_def*, i32, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @operand_subword_force(%struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #1

declare dso_local void @end_sequence() local_unnamed_addr #1

declare dso_local zeroext i8 @optimize_insn_for_speed_p() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @expand_doubleword_shift(i32 %op1_mode, %struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %into_input, %struct.rtx_def* %op1, %struct.rtx_def* %outof_target, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods, i64 %shift_mask) unnamed_addr #4 !dbg !5366 {
entry:
  call void @llvm.dbg.value(metadata i32 %op1_mode, metadata !5370, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !5371, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %outof_input, metadata !5372, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %into_input, metadata !5373, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !5374, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %outof_target, metadata !5375, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %into_target, metadata !5376, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !5377, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i32 %methods, metadata !5378, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i64 %shift_mask, metadata !5379, metadata !DIExpression()), !dbg !5389
  %cmp = icmp ugt i64 %shift_mask, 31, !dbg !5390
  %cmp3 = icmp ne %struct.rtx_def* %outof_target, null, !dbg !5392
  %or.cond = and i1 %cmp, %cmp3, !dbg !5393
  br i1 %or.cond, label %land.lhs.true4, label %if.end11, !dbg !5393

land.lhs.true4:                                   ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1, i64 0, i32 0, !dbg !5394
  %bf.load = load i32, i32* %0, align 8, !dbg !5394
  %bf.clear = and i32 %bf.load, 65535, !dbg !5394
  %idxprom = zext i32 %bf.clear to i64, !dbg !5394
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5394
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5394
  %cmp5 = icmp eq i32 %1, 9, !dbg !5394
  br i1 %cmp5, label %if.end11, label %if.then, !dbg !5395

if.then:                                          ; preds = %land.lhs.true4
  %call = tail call fastcc zeroext i8 @expand_doubleword_shift(i32 %op1_mode, %struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %into_input, %struct.rtx_def* %op1, %struct.rtx_def* null, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods, i64 %shift_mask) #8, !dbg !5396
  %tobool = icmp eq i8 %call, 0, !dbg !5396
  br i1 %tobool, label %cleanup64, label %if.end, !dbg !5399

if.end:                                           ; preds = %if.then
  %2 = load i32, i32* @word_mode, align 4, !dbg !5400
  %call7 = tail call zeroext i8 @force_expand_binop(i32 %2, %struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %op1, %struct.rtx_def* nonnull %outof_target, i32 %unsignedp, i32 %methods) #8, !dbg !5402
  %tobool8 = icmp ne i8 %call7, 0, !dbg !5402
  %. = zext i1 %tobool8 to i8, !dbg !5403
  br label %cleanup64, !dbg !5403

if.end11:                                         ; preds = %land.lhs.true4, %entry
  %call12 = tail call %struct.rtx_def* @immed_double_const(i64 32, i64 0, i32 %op1_mode) #6, !dbg !5404
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call12, metadata !5381, metadata !DIExpression()), !dbg !5389
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1, i64 0, i32 0, !dbg !5405
  %bf.load13 = load i32, i32* %3, align 8, !dbg !5405
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !5405
  %idxprom15 = zext i32 %bf.clear14 to i64, !dbg !5405
  %arrayidx16 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom15, !dbg !5405
  %4 = load i32, i32* %arrayidx16, align 4, !dbg !5405
  %cmp17 = icmp ne i32 %4, 9, !dbg !5405
  %cmp19 = icmp eq i64 %shift_mask, 31, !dbg !5407
  %or.cond1 = and i1 %cmp17, %cmp19, !dbg !5408
  br i1 %or.cond1, label %if.then20, label %if.else, !dbg !5408

if.then20:                                        ; preds = %if.end11
  %call21 = tail call fastcc %struct.rtx_def* @simplify_expand_binop(i32 %op1_mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.rtx_def* %op1, %struct.rtx_def* %call12, %struct.rtx_def* null, i32 1, i32 %methods) #8, !dbg !5409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !5382, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i32 81, metadata !5386, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !5380, metadata !DIExpression()), !dbg !5389
  br label %if.end27, !dbg !5411

if.else:                                          ; preds = %if.end11
  %call24 = tail call fastcc %struct.rtx_def* @simplify_expand_binop(i32 %op1_mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.rtx_def* %op1, %struct.rtx_def* %call12, %struct.rtx_def* null, i32 1, i32 %methods) #8, !dbg !5412
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !5382, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i32 85, metadata !5386, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !5380, metadata !DIExpression()), !dbg !5389
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then20
  %superword_op1.0 = phi %struct.rtx_def* [ %call24, %if.else ], [ %op1, %if.then20 ], !dbg !5414
  %cmp1.0 = phi %struct.rtx_def* [ %call24, %if.else ], [ %call21, %if.then20 ], !dbg !5414
  %cmp_code.0 = phi i32 [ 85, %if.else ], [ 81, %if.then20 ], !dbg !5414
  %idxprom25.pn = sext i32 %op1_mode to i64, !dbg !5414
  %cmp2.0.in = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom25.pn, !dbg !5414
  %cmp2.0 = load %struct.rtx_def*, %struct.rtx_def** %cmp2.0.in, align 8, !dbg !5414
  call void @llvm.dbg.value(metadata i32 %cmp_code.0, metadata !5386, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cmp2.0, metadata !5383, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cmp1.0, metadata !5382, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %superword_op1.0, metadata !5380, metadata !DIExpression()), !dbg !5389
  %cmp28 = icmp eq %struct.rtx_def* %cmp1.0, null, !dbg !5415
  br i1 %cmp28, label %cleanup64, label %if.end30, !dbg !5417

if.end30:                                         ; preds = %if.end27
  %call31 = tail call %struct.rtx_def* @simplify_relational_operation(i32 %cmp_code.0, i32 16, i32 %op1_mode, %struct.rtx_def* nonnull %cmp1.0, %struct.rtx_def* %cmp2.0) #6, !dbg !5418
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !5381, metadata !DIExpression()), !dbg !5389
  %cmp32 = icmp eq %struct.rtx_def* %call31, null, !dbg !5419
  br i1 %cmp32, label %if.end43, label %land.lhs.true33, !dbg !5421

land.lhs.true33:                                  ; preds = %if.end30
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call31, i64 0, i32 0, !dbg !5422
  %bf.load34 = load i32, i32* %5, align 8, !dbg !5422
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !5422
  %cmp36 = icmp eq i32 %bf.clear35, 30, !dbg !5422
  br i1 %cmp36, label %if.then37, label %if.end43, !dbg !5423

if.then37:                                        ; preds = %land.lhs.true33
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5424
  %cmp38 = icmp eq %struct.rtx_def* %call31, %6, !dbg !5427
  br i1 %cmp38, label %if.then39, label %if.else41, !dbg !5428

if.then39:                                        ; preds = %if.then37
  %call40 = tail call fastcc zeroext i8 @expand_superword_shift(%struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %superword_op1.0, %struct.rtx_def* %outof_target, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods) #8, !dbg !5429
  br label %cleanup64, !dbg !5430

if.else41:                                        ; preds = %if.then37
  %call42 = tail call fastcc zeroext i8 @expand_subword_shift(i32 %op1_mode, %struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %into_input, %struct.rtx_def* %op1, %struct.rtx_def* %outof_target, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods, i64 %shift_mask) #8, !dbg !5431
  br label %cleanup64, !dbg !5432

if.end43:                                         ; preds = %if.end30, %land.lhs.true33
  %call44 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !5433
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !5387, metadata !DIExpression()), !dbg !5434
  %call45 = tail call fastcc zeroext i8 @expand_doubleword_shift_condmove(i32 %op1_mode, %struct.optab_d* %binoptab, i32 %cmp_code.0, %struct.rtx_def* nonnull %cmp1.0, %struct.rtx_def* %cmp2.0, %struct.rtx_def* %outof_input, %struct.rtx_def* %into_input, %struct.rtx_def* %op1, %struct.rtx_def* %superword_op1.0, %struct.rtx_def* %outof_target, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods, i64 %shift_mask) #8, !dbg !5435
  %tobool46 = icmp eq i8 %call45, 0, !dbg !5435
  br i1 %tobool46, label %if.end48, label %cleanup, !dbg !5437

if.end48:                                         ; preds = %if.end43
  tail call void @delete_insns_since(%struct.rtx_def* %call44) #6, !dbg !5438
  br label %cleanup, !dbg !5439

cleanup:                                          ; preds = %if.end43, %if.end48
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end48 ], [ false, %if.end43 ]
  br i1 %cleanup.dest.slot.0, label %cleanup.cont, label %cleanup64

cleanup.cont:                                     ; preds = %cleanup
  %call49 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !5440
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !5384, metadata !DIExpression()), !dbg !5389
  %call50 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !5441
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50, metadata !5385, metadata !DIExpression()), !dbg !5389
  %7 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !5442
  %add = add nsw i32 %7, 1, !dbg !5442
  store i32 %add, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !5442
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* nonnull %cmp1.0, %struct.rtx_def* %cmp2.0, i32 %cmp_code.0, i32 0, i32 %op1_mode, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %call49, i32 -1) #6, !dbg !5443
  %8 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !5444
  %sub = add nsw i32 %8, -1, !dbg !5444
  store i32 %sub, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !5444
  %call51 = tail call fastcc zeroext i8 @expand_superword_shift(%struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %superword_op1.0, %struct.rtx_def* %outof_target, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods) #8, !dbg !5445
  %tobool52 = icmp eq i8 %call51, 0, !dbg !5445
  br i1 %tobool52, label %cleanup64, label %if.end54, !dbg !5447

if.end54:                                         ; preds = %cleanup.cont
  %call55 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call50) #6, !dbg !5448
  %call56 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call55) #6, !dbg !5449
  %call57 = tail call %struct.rtx_def* @emit_barrier() #6, !dbg !5450
  %call58 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call49) #6, !dbg !5451
  %call59 = tail call fastcc zeroext i8 @expand_subword_shift(i32 %op1_mode, %struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %into_input, %struct.rtx_def* %op1, %struct.rtx_def* %outof_target, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods, i64 %shift_mask) #8, !dbg !5452
  %tobool60 = icmp eq i8 %call59, 0, !dbg !5452
  br i1 %tobool60, label %cleanup64, label %if.end62, !dbg !5454

if.end62:                                         ; preds = %if.end54
  %call63 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call50) #6, !dbg !5455
  br label %cleanup64, !dbg !5456

cleanup64:                                        ; preds = %if.then, %if.end54, %cleanup.cont, %if.end27, %if.end, %cleanup, %if.end62, %if.else41, %if.then39
  %retval.1 = phi i8 [ %call40, %if.then39 ], [ %call42, %if.else41 ], [ 1, %cleanup ], [ 1, %if.end62 ], [ 0, %if.then ], [ %., %if.end ], [ 0, %if.end27 ], [ 0, %cleanup.cont ], [ 0, %if.end54 ], !dbg !5389
  ret i8 %retval.1, !dbg !5457
}

declare dso_local %struct.rtx_def* @emit_clobber(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32) local_unnamed_addr #1

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_doubleword_mult(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i8 zeroext %umulp, i32 %methods) unnamed_addr #4 !dbg !5458 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5462, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !5463, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !5464, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !5465, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.value(metadata i8 %umulp, metadata !5466, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.value(metadata i32 %methods, metadata !5467, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.value(metadata i32 0, metadata !5468, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.value(metadata i32 1, metadata !5469, metadata !DIExpression()), !dbg !5479
  %tobool = icmp eq i8 %umulp, 0, !dbg !5480
  br i1 %tobool, label %cond.false, label %cond.end, !dbg !5480

cond.false:                                       ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 31) #6, !dbg !5481
  br label %cond.end, !dbg !5480

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %struct.rtx_def* [ %call, %cond.false ], [ null, %entry ], !dbg !5480
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !5470, metadata !DIExpression()), !dbg !5479
  %call1 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 1, i32 %mode) #6, !dbg !5482
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !5475, metadata !DIExpression()), !dbg !5479
  %call2 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 0, i32 %mode) #6, !dbg !5483
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !5476, metadata !DIExpression()), !dbg !5479
  %call3 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1, i32 1, i32 %mode) #6, !dbg !5484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !5477, metadata !DIExpression()), !dbg !5479
  %call4 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1, i32 0, i32 %mode) #6, !dbg !5485
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !5478, metadata !DIExpression()), !dbg !5479
  br i1 %tobool, label %if.then, label %if.end18, !dbg !5486

if.then:                                          ; preds = %cond.end
  %0 = load i32, i32* @word_mode, align 4, !dbg !5487
  %call6 = tail call %struct.rtx_def* @expand_binop(i32 %0, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45), %struct.rtx_def* %call2, %struct.rtx_def* %cond, %struct.rtx_def* null, i32 1, i32 %methods) #8, !dbg !5490
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !5474, metadata !DIExpression()), !dbg !5479
  %tobool7 = icmp eq %struct.rtx_def* %call6, null, !dbg !5491
  %1 = load i32, i32* @word_mode, align 4, !dbg !5493
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !5494

if.then8:                                         ; preds = %if.then
  %call9 = tail call %struct.rtx_def* @expand_binop(i32 %1, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), %struct.rtx_def* %call1, %struct.rtx_def* nonnull %call6, %struct.rtx_def* null, i32 0, i32 0) #8, !dbg !5495
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call9, metadata !5475, metadata !DIExpression()), !dbg !5479
  br label %if.end14, !dbg !5496

if.else:                                          ; preds = %if.then
  %call10 = tail call %struct.rtx_def* @expand_binop(i32 %1, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 46), %struct.rtx_def* %call2, %struct.rtx_def* %cond, %struct.rtx_def* null, i32 0, i32 %methods) #8, !dbg !5497
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !5474, metadata !DIExpression()), !dbg !5479
  %tobool11 = icmp eq %struct.rtx_def* %call10, null, !dbg !5499
  br i1 %tobool11, label %cleanup, label %if.end, !dbg !5501

if.end:                                           ; preds = %if.else
  %2 = load i32, i32* @word_mode, align 4, !dbg !5502
  %call13 = tail call %struct.rtx_def* @expand_binop(i32 %2, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.rtx_def* %call1, %struct.rtx_def* nonnull %call10, %struct.rtx_def* null, i32 0, i32 0) #8, !dbg !5503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !5475, metadata !DIExpression()), !dbg !5479
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then8
  %op0_high.0 = phi %struct.rtx_def* [ %call9, %if.then8 ], [ %call13, %if.end ], !dbg !5493
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0_high.0, metadata !5475, metadata !DIExpression()), !dbg !5479
  %tobool15 = icmp eq %struct.rtx_def* %op0_high.0, null, !dbg !5504
  br i1 %tobool15, label %cleanup, label %if.end18, !dbg !5506

if.end18:                                         ; preds = %if.end14, %cond.end
  %op0_high.1 = phi %struct.rtx_def* [ %call1, %cond.end ], [ %op0_high.0, %if.end14 ], !dbg !5479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0_high.1, metadata !5475, metadata !DIExpression()), !dbg !5479
  %3 = load i32, i32* @word_mode, align 4, !dbg !5507
  %call19 = tail call %struct.rtx_def* @expand_binop(i32 %3, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16), %struct.rtx_def* %op0_high.1, %struct.rtx_def* %call4, %struct.rtx_def* null, i32 0, i32 0) #8, !dbg !5508
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !5472, metadata !DIExpression()), !dbg !5479
  %tobool20 = icmp eq %struct.rtx_def* %call19, null, !dbg !5509
  br i1 %tobool20, label %cleanup, label %if.end22, !dbg !5511

if.end22:                                         ; preds = %if.end18
  br i1 %tobool, label %if.then24, label %if.end39, !dbg !5512

if.then24:                                        ; preds = %if.end22
  %4 = load i32, i32* @word_mode, align 4, !dbg !5513
  %call25 = tail call %struct.rtx_def* @expand_binop(i32 %4, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45), %struct.rtx_def* %call4, %struct.rtx_def* %cond, %struct.rtx_def* null, i32 1, i32 %methods) #8, !dbg !5516
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call25, metadata !5474, metadata !DIExpression()), !dbg !5479
  %tobool26 = icmp eq %struct.rtx_def* %call25, null, !dbg !5517
  %5 = load i32, i32* @word_mode, align 4, !dbg !5519
  br i1 %tobool26, label %if.else29, label %if.then27, !dbg !5520

if.then27:                                        ; preds = %if.then24
  %call28 = tail call %struct.rtx_def* @expand_binop(i32 %5, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), %struct.rtx_def* %call3, %struct.rtx_def* nonnull %call25, %struct.rtx_def* null, i32 0, i32 0) #8, !dbg !5521
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !5477, metadata !DIExpression()), !dbg !5479
  br label %if.end35, !dbg !5522

if.else29:                                        ; preds = %if.then24
  %call30 = tail call %struct.rtx_def* @expand_binop(i32 %5, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 46), %struct.rtx_def* %call4, %struct.rtx_def* %cond, %struct.rtx_def* null, i32 0, i32 %methods) #8, !dbg !5523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call30, metadata !5474, metadata !DIExpression()), !dbg !5479
  %tobool31 = icmp eq %struct.rtx_def* %call30, null, !dbg !5525
  br i1 %tobool31, label %cleanup, label %if.end33, !dbg !5527

if.end33:                                         ; preds = %if.else29
  %6 = load i32, i32* @word_mode, align 4, !dbg !5528
  %call34 = tail call %struct.rtx_def* @expand_binop(i32 %6, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.rtx_def* %call3, %struct.rtx_def* nonnull %call30, %struct.rtx_def* null, i32 0, i32 0) #8, !dbg !5529
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !5477, metadata !DIExpression()), !dbg !5479
  br label %if.end35

if.end35:                                         ; preds = %if.end33, %if.then27
  %op1_high.0 = phi %struct.rtx_def* [ %call28, %if.then27 ], [ %call34, %if.end33 ], !dbg !5519
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1_high.0, metadata !5477, metadata !DIExpression()), !dbg !5479
  %tobool36 = icmp eq %struct.rtx_def* %op1_high.0, null, !dbg !5530
  br i1 %tobool36, label %cleanup, label %if.end39, !dbg !5532

if.end39:                                         ; preds = %if.end35, %if.end22
  %op1_high.1 = phi %struct.rtx_def* [ %call3, %if.end22 ], [ %op1_high.0, %if.end35 ], !dbg !5479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1_high.1, metadata !5477, metadata !DIExpression()), !dbg !5479
  %7 = load i32, i32* @word_mode, align 4, !dbg !5533
  %call40 = tail call %struct.rtx_def* @expand_binop(i32 %7, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16), %struct.rtx_def* %op1_high.1, %struct.rtx_def* %call2, %struct.rtx_def* null, i32 0, i32 0) #8, !dbg !5534
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40, metadata !5474, metadata !DIExpression()), !dbg !5479
  %tobool41 = icmp eq %struct.rtx_def* %call40, null, !dbg !5535
  br i1 %tobool41, label %cleanup, label %if.end43, !dbg !5537

if.end43:                                         ; preds = %if.end39
  %8 = load i32, i32* @word_mode, align 4, !dbg !5538
  %call44 = tail call %struct.rtx_def* @expand_binop(i32 %8, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), %struct.rtx_def* nonnull %call19, %struct.rtx_def* nonnull %call40, %struct.rtx_def* nonnull %call19, i32 0, i32 0) #8, !dbg !5539
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !5472, metadata !DIExpression()), !dbg !5479
  %tobool45 = icmp eq %struct.rtx_def* %target, null, !dbg !5540
  br i1 %tobool45, label %if.end48, label %land.lhs.true, !dbg !5542

land.lhs.true:                                    ; preds = %if.end43
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !5543
  %bf.load = load i32, i32* %9, align 8, !dbg !5543
  %bf.clear = and i32 %bf.load, 65535, !dbg !5543
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5543
  %spec.select = select i1 %cmp, %struct.rtx_def* %target, %struct.rtx_def* null, !dbg !5544
  br label %if.end48, !dbg !5544

if.end48:                                         ; preds = %if.end43, %land.lhs.true
  %target.addr.0 = phi %struct.rtx_def* [ null, %if.end43 ], [ %spec.select, %land.lhs.true ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !5465, metadata !DIExpression()), !dbg !5479
  br i1 %tobool, label %if.else52, label %if.then50, !dbg !5545

if.then50:                                        ; preds = %if.end48
  %call51 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 21), %struct.rtx_def* %call2, %struct.rtx_def* %call4, %struct.rtx_def* %target.addr.0, i32 1, i32 0) #8, !dbg !5546
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call51, metadata !5471, metadata !DIExpression()), !dbg !5479
  br label %if.end54, !dbg !5548

if.else52:                                        ; preds = %if.end48
  %call53 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 20), %struct.rtx_def* %call2, %struct.rtx_def* %call4, %struct.rtx_def* %target.addr.0, i32 1, i32 0) #8, !dbg !5549
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call53, metadata !5471, metadata !DIExpression()), !dbg !5479
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then50
  %product.0 = phi %struct.rtx_def* [ %call51, %if.then50 ], [ %call53, %if.else52 ], !dbg !5550
  call void @llvm.dbg.value(metadata %struct.rtx_def* %product.0, metadata !5471, metadata !DIExpression()), !dbg !5479
  %tobool55 = icmp eq %struct.rtx_def* %product.0, null, !dbg !5551
  br i1 %tobool55, label %cleanup, label %if.end57, !dbg !5553

if.end57:                                         ; preds = %if.end54
  %call58 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* nonnull %product.0, i32 1, i32 1, i32 %mode) #6, !dbg !5554
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call58, metadata !5473, metadata !DIExpression()), !dbg !5479
  %10 = load i32, i32* @word_mode, align 4, !dbg !5555
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call58, i64 0, i32 0, !dbg !5556
  %bf.load59 = load i32, i32* %11, align 8, !dbg !5556
  %bf.clear60 = and i32 %bf.load59, 65535, !dbg !5556
  %cmp61 = icmp eq i32 %bf.clear60, 37, !dbg !5556
  %call58.call44 = select i1 %cmp61, %struct.rtx_def* %call58, %struct.rtx_def* %call44, !dbg !5556
  %call67 = tail call %struct.rtx_def* @expand_binop(i32 %10, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), %struct.rtx_def* %call58, %struct.rtx_def* %call44, %struct.rtx_def* %call58.call44, i32 0, i32 0) #8, !dbg !5557
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call67, metadata !5472, metadata !DIExpression()), !dbg !5479
  %call68 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call58, %struct.rtx_def* %call67) #6, !dbg !5558
  br label %cleanup, !dbg !5559

cleanup:                                          ; preds = %if.end54, %if.end39, %if.end35, %if.else29, %if.end18, %if.end14, %if.else, %if.end57
  %retval.0 = phi %struct.rtx_def* [ %product.0, %if.end57 ], [ null, %if.else ], [ null, %if.end14 ], [ null, %if.end18 ], [ null, %if.else29 ], [ null, %if.end35 ], [ null, %if.end39 ], [ null, %if.end54 ], !dbg !5479
  ret %struct.rtx_def* %retval.0, !dbg !5560
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @shift_optab_p(%struct.optab_d* %binoptab) unnamed_addr #4 !dbg !5561 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !5563, metadata !DIExpression()), !dbg !5564
  %code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab, i64 0, i32 0, !dbg !5565
  %0 = load i32, i32* %code, align 8, !dbg !5565
  switch i32 %0, label %sw.default [
    i32 65, label %return
    i32 133, label %return
    i32 134, label %return
    i32 67, label %return
    i32 68, label %return
    i32 66, label %return
    i32 69, label %return
  ], !dbg !5566

sw.default:                                       ; preds = %entry
  br label %return, !dbg !5567

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !5569
  ret i8 %retval.0, !dbg !5570
}

declare dso_local %struct.rtx_def* @emit_library_call_value(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @emit_libcall_block(%struct.rtx_def* %insns, %struct.rtx_def* %target, %struct.rtx_def* %result, %struct.rtx_def* %equiv) local_unnamed_addr #4 !dbg !5571 {
entry:
  %data = alloca %struct.no_conflict_data, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns, metadata !5575, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !5576, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %result, metadata !5577, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %equiv, metadata !5578, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !5579, metadata !DIExpression()), !dbg !5600
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !5601
  %bf.load = load i32, i32* %0, align 8, !dbg !5601
  %bf.clear = and i32 %bf.load, 65535, !dbg !5601
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5601
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !5603

lor.lhs.false:                                    ; preds = %entry
  %bf.clear2 = and i32 %bf.load, 134217728, !dbg !5604
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !5604
  br i1 %tobool, label %if.end, label %if.then, !dbg !5605

if.then:                                          ; preds = %lor.lhs.false, %entry
  %bf.lshr4 = lshr i32 %bf.load, 16, !dbg !5606
  %bf.clear5 = and i32 %bf.lshr4, 255, !dbg !5606
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear5) #6, !dbg !5607
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5576, metadata !DIExpression()), !dbg !5600
  br label %if.end, !dbg !5608

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %target.addr.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %target, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !5576, metadata !DIExpression()), !dbg !5600
  %1 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !5609
  %tobool6 = icmp eq i32 %1, 0, !dbg !5609
  br i1 %tobool6, label %if.else, label %land.lhs.true, !dbg !5610

land.lhs.true:                                    ; preds = %if.end
  %call7 = tail call i32 @may_trap_p(%struct.rtx_def* %equiv) #6, !dbg !5611
  %tobool8 = icmp eq i32 %call7, 0, !dbg !5611
  br i1 %tobool8, label %if.else, label %for.cond.preheader, !dbg !5612

for.cond.preheader:                               ; preds = %land.lhs.true
  br label %for.cond, !dbg !5613

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %insn.0 = phi %struct.rtx_def* [ %6, %for.inc ], [ %insns, %for.cond.preheader ], !dbg !5614
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5582, metadata !DIExpression()), !dbg !5600
  %tobool10 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5613
  br i1 %tobool10, label %if.end48.loopexit1, label %for.body, !dbg !5613

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5615
  %bf.load11 = load i32, i32* %2, align 8, !dbg !5615
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !5615
  %cmp13 = icmp eq i32 %bf.clear12, 10, !dbg !5615
  br i1 %cmp13, label %if.then14, label %for.inc, !dbg !5616

if.then14:                                        ; preds = %for.body
  %call15 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %insn.0, i32 25, %struct.rtx_def* null) #6, !dbg !5617
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15, metadata !5583, metadata !DIExpression()), !dbg !5618
  %tobool16 = icmp eq %struct.rtx_def* %call15, null, !dbg !5619
  br i1 %tobool16, label %for.inc, label %if.then17, !dbg !5620

if.then17:                                        ; preds = %if.then14
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call15, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5621
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5621
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5621
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, !dbg !5621
  %arrayidx19 = bitcast %union.u* %u18 to i64*, !dbg !5621
  %4 = load i64, i64* %arrayidx19, align 8, !dbg !5621
  %conv = trunc i64 %4 to i32, !dbg !5621
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5590, metadata !DIExpression()), !dbg !5622
  switch i32 %conv, label %for.inc [
    i32 0, label %if.then25
    i32 -2147483648, label %if.then25
  ], !dbg !5623

if.then25:                                        ; preds = %if.then17, %if.then17
  tail call void @remove_note(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* nonnull %call15) #6, !dbg !5625
  br label %for.inc, !dbg !5625

for.inc:                                          ; preds = %if.then14, %for.body, %if.then25, %if.then17
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5626
  %rt_rtx32 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !5626
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !5626
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !5582, metadata !DIExpression()), !dbg !5600
  br label %for.cond, !dbg !5627, !llvm.loop !5628

if.else:                                          ; preds = %land.lhs.true, %if.end
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns, metadata !5582, metadata !DIExpression()), !dbg !5600
  br label %for.cond33, !dbg !5630

for.cond33:                                       ; preds = %for.inc42, %if.else
  %insn.1 = phi %struct.rtx_def* [ %insns, %if.else ], [ %9, %for.inc42 ], !dbg !5633
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !5582, metadata !DIExpression()), !dbg !5600
  %tobool34 = icmp eq %struct.rtx_def* %insn.1, null, !dbg !5634
  br i1 %tobool34, label %if.end48.loopexit, label %for.body35, !dbg !5634

for.body35:                                       ; preds = %for.cond33
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !5635
  %bf.load36 = load i32, i32* %7, align 8, !dbg !5635
  %bf.clear37 = and i32 %bf.load36, 65535, !dbg !5635
  %cmp38 = icmp eq i32 %bf.clear37, 10, !dbg !5635
  br i1 %cmp38, label %if.then40, label %for.inc42, !dbg !5638

if.then40:                                        ; preds = %for.body35
  tail call void @make_reg_eh_region_note_nothrow_nononlocal(%struct.rtx_def* nonnull %insn.1) #6, !dbg !5639
  br label %for.inc42, !dbg !5639

for.inc42:                                        ; preds = %for.body35, %if.then40
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5640
  %rt_rtx46 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !5640
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !5640
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !5582, metadata !DIExpression()), !dbg !5600
  br label %for.cond33, !dbg !5641, !llvm.loop !5642

if.end48.loopexit:                                ; preds = %for.cond33
  br label %if.end48, !dbg !5644

if.end48.loopexit1:                               ; preds = %for.cond
  br label %if.end48, !dbg !5644

if.end48:                                         ; preds = %if.end48.loopexit1, %if.end48.loopexit
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns, metadata !5582, metadata !DIExpression()), !dbg !5600
  %10 = bitcast %struct.no_conflict_data* %data to i8*, !dbg !5645
  %11 = bitcast %struct.no_conflict_data* %data to i64*, !dbg !5645
  %first = getelementptr inbounds %struct.no_conflict_data, %struct.no_conflict_data* %data, i64 0, i32 1, !dbg !5645
  %insn117 = getelementptr inbounds %struct.no_conflict_data, %struct.no_conflict_data* %data, i64 0, i32 2, !dbg !5645
  %must_stay = getelementptr inbounds %struct.no_conflict_data, %struct.no_conflict_data* %data, i64 0, i32 3, !dbg !5645
  br label %for.cond49, !dbg !5644

for.cond49:                                       ; preds = %if.end153, %if.end48
  %insn.2 = phi %struct.rtx_def* [ %insns, %if.end48 ], [ %18, %if.end153 ], !dbg !5646
  %insns.addr.0 = phi %struct.rtx_def* [ %insns, %if.end48 ], [ %insns.addr.3, %if.end153 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns.addr.0, metadata !5575, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2, metadata !5582, metadata !DIExpression()), !dbg !5600
  %tobool50 = icmp eq %struct.rtx_def* %insn.2, null, !dbg !5647
  br i1 %tobool50, label %for.end161, label %for.body51, !dbg !5647

for.body51:                                       ; preds = %for.cond49
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 0, !dbg !5648
  %bf.load52 = load i32, i32* %12, align 8, !dbg !5648
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !5648
  %cmp54 = icmp eq i32 %bf.clear53, 8, !dbg !5648
  br i1 %cmp54, label %cond.true, label %lor.lhs.false56, !dbg !5648

lor.lhs.false56:                                  ; preds = %for.body51
  %cmp59 = icmp eq i32 %bf.clear53, 7, !dbg !5648
  br i1 %cmp59, label %cond.true, label %lor.lhs.false61, !dbg !5648

lor.lhs.false61:                                  ; preds = %lor.lhs.false56
  %cmp64 = icmp eq i32 %bf.clear53, 9, !dbg !5648
  br i1 %cmp64, label %cond.true, label %lor.lhs.false66, !dbg !5648

lor.lhs.false66:                                  ; preds = %lor.lhs.false61
  %cmp69 = icmp eq i32 %bf.clear53, 10, !dbg !5648
  br i1 %cmp69, label %cond.true, label %cond.end90, !dbg !5648

cond.true:                                        ; preds = %lor.lhs.false66, %lor.lhs.false61, %lor.lhs.false56, %for.body51
  %u71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, !dbg !5648
  %13 = getelementptr inbounds %union.u, %union.u* %u71, i64 1, i32 0, i32 0, i64 0, !dbg !5648
  %14 = bitcast %union.rtunion_def* %13 to i32**, !dbg !5648
  %15 = load i32*, i32** %14, align 8, !dbg !5648
  %bf.load75 = load i32, i32* %15, align 8, !dbg !5648
  %bf.clear76 = and i32 %bf.load75, 65535, !dbg !5648
  %cmp77 = icmp eq i32 %bf.clear76, 23, !dbg !5648
  %16 = bitcast i32* %15 to %struct.rtx_def*, !dbg !5648
  br i1 %cmp77, label %cond.end90, label %cond.false, !dbg !5648

cond.false:                                       ; preds = %cond.true
  %call88 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %insn.2, %struct.rtx_def* %16) #6, !dbg !5648
  br label %cond.end90, !dbg !5648

cond.end90:                                       ; preds = %lor.lhs.false66, %cond.false, %cond.true
  %cond91 = phi %struct.rtx_def* [ %call88, %cond.false ], [ %16, %cond.true ], [ null, %lor.lhs.false66 ], !dbg !5648
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond91, metadata !5593, metadata !DIExpression()), !dbg !5649
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5650
  %rt_rtx95 = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !5650
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !5650
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !5580, metadata !DIExpression()), !dbg !5600
  %cmp96 = icmp eq %struct.rtx_def* %cond91, null, !dbg !5651
  br i1 %cmp96, label %if.end153, label %land.lhs.true98, !dbg !5652

land.lhs.true98:                                  ; preds = %cond.end90
  %arrayidx101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond91, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5653
  %19 = bitcast %union.rtunion_def* %arrayidx101 to i32**, !dbg !5653
  %20 = load i32*, i32** %19, align 8, !dbg !5653
  %bf.load103 = load i32, i32* %20, align 8, !dbg !5653
  %bf.clear104 = and i32 %bf.load103, 65535, !dbg !5653
  %cmp105 = icmp eq i32 %bf.clear104, 37, !dbg !5653
  br i1 %cmp105, label %land.lhs.true107, label %if.end153, !dbg !5654

land.lhs.true107:                                 ; preds = %land.lhs.true98
  %21 = bitcast i32* %20 to %struct.rtx_def*, !dbg !5654
  %call112 = call fastcc i32 @rhs_regno(%struct.rtx_def* %21) #8, !dbg !5655
  %cmp113 = icmp ugt i32 %call112, 52, !dbg !5656
  br i1 %cmp113, label %if.then115, label %if.end153, !dbg !5657

if.then115:                                       ; preds = %land.lhs.true107
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #7, !dbg !5658
  %22 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !5659
  store i64 %22, i64* %11, align 8, !dbg !5660
  store %struct.rtx_def* %insns.addr.0, %struct.rtx_def** %first, align 8, !dbg !5661
  store %struct.rtx_def* %insn.2, %struct.rtx_def** %insn117, align 8, !dbg !5662
  store i8 0, i8* %must_stay, align 8, !dbg !5663
  %u118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, !dbg !5664
  %23 = getelementptr inbounds %union.u, %union.u* %u118, i64 1, i32 0, i32 0, i64 0, !dbg !5664
  %rt_rtx121 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !5664
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx121, align 8, !dbg !5664
  call void @note_stores(%struct.rtx_def* %24, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @no_conflict_move_test, i8* nonnull %10) #6, !dbg !5665
  %25 = load i8, i8* %must_stay, align 8, !dbg !5666
  %tobool123 = icmp eq i8 %25, 0, !dbg !5668
  br i1 %tobool123, label %if.then124, label %if.end152, !dbg !5669

if.then124:                                       ; preds = %if.then115
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5670
  %rt_rtx128 = bitcast %union.rtunion_def* %26 to %struct.rtx_def**, !dbg !5670
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx128, align 8, !dbg !5670
  %tobool129 = icmp eq %struct.rtx_def* %27, null, !dbg !5670
  br i1 %tobool129, label %if.end140, label %if.then130, !dbg !5673

if.then130:                                       ; preds = %if.then124
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5674
  %rt_rtx138 = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !5674
  store %struct.rtx_def* %18, %struct.rtx_def** %rt_rtx138, align 8, !dbg !5675
  br label %if.end140, !dbg !5674

if.end140:                                        ; preds = %if.then124, %if.then130
  %insns.addr.1 = phi %struct.rtx_def* [ %insns.addr.0, %if.then130 ], [ %18, %if.then124 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns.addr.1, metadata !5575, metadata !DIExpression()), !dbg !5600
  %tobool141 = icmp eq %struct.rtx_def* %18, null, !dbg !5676
  br i1 %tobool141, label %if.end151, label %if.then142, !dbg !5678

if.then142:                                       ; preds = %if.end140
  %29 = bitcast %union.rtunion_def* %26 to i64*, !dbg !5679
  %30 = load i64, i64* %29, align 8, !dbg !5679
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5680
  %32 = bitcast %union.rtunion_def* %31 to i64*, !dbg !5681
  store i64 %30, i64* %32, align 8, !dbg !5681
  br label %if.end151, !dbg !5680

if.end151:                                        ; preds = %if.end140, %if.then142
  call void @add_insn(%struct.rtx_def* nonnull %insn.2) #6, !dbg !5682
  br label %if.end152, !dbg !5683

if.end152:                                        ; preds = %if.then115, %if.end151
  %insns.addr.2 = phi %struct.rtx_def* [ %insns.addr.0, %if.then115 ], [ %insns.addr.1, %if.end151 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns.addr.2, metadata !5575, metadata !DIExpression()), !dbg !5600
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #7, !dbg !5684
  br label %if.end153, !dbg !5685

if.end153:                                        ; preds = %cond.end90, %if.end152, %land.lhs.true107, %land.lhs.true98
  %insns.addr.3 = phi %struct.rtx_def* [ %insns.addr.2, %if.end152 ], [ %insns.addr.0, %land.lhs.true107 ], [ %insns.addr.0, %land.lhs.true98 ], [ %insns.addr.0, %cond.end90 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns.addr.3, metadata !5575, metadata !DIExpression()), !dbg !5600
  %bf.load154 = load i32, i32* %12, align 8, !dbg !5686
  %bf.clear155 = and i32 %bf.load154, 65535, !dbg !5686
  %cmp156 = icmp eq i32 %bf.clear155, 12, !dbg !5686
  br i1 %cmp156, label %for.end161, label %for.cond49

for.end161:                                       ; preds = %for.cond49, %if.end153
  %insns.addr.4 = phi %struct.rtx_def* [ %insns.addr.3, %if.end153 ], [ %insns.addr.0, %for.cond49 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns.addr.4, metadata !5575, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns.addr.4, metadata !5582, metadata !DIExpression()), !dbg !5600
  br label %for.cond162, !dbg !5688

for.cond162:                                      ; preds = %for.body164, %for.end161
  %insn.3 = phi %struct.rtx_def* [ %insns.addr.4, %for.end161 ], [ %34, %for.body164 ], !dbg !5690
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.3, metadata !5582, metadata !DIExpression()), !dbg !5600
  %tobool163 = icmp eq %struct.rtx_def* %insn.3, null, !dbg !5691
  br i1 %tobool163, label %for.end170, label %for.body164, !dbg !5691

for.body164:                                      ; preds = %for.cond162
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5692
  %rt_rtx168 = bitcast %union.rtunion_def* %33 to %struct.rtx_def**, !dbg !5692
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx168, align 8, !dbg !5692
  call void @llvm.dbg.value(metadata %struct.rtx_def* %34, metadata !5580, metadata !DIExpression()), !dbg !5600
  call void @add_insn(%struct.rtx_def* nonnull %insn.3) #6, !dbg !5695
  call void @llvm.dbg.value(metadata %struct.rtx_def* %34, metadata !5582, metadata !DIExpression()), !dbg !5600
  br label %for.cond162, !dbg !5696, !llvm.loop !5697

for.end170:                                       ; preds = %for.cond162
  %call171 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %result) #6, !dbg !5699
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call171, metadata !5581, metadata !DIExpression()), !dbg !5600
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.0, i64 0, i32 0, !dbg !5700
  %bf.load172 = load i32, i32* %35, align 8, !dbg !5700
  %bf.lshr173 = lshr i32 %bf.load172, 16, !dbg !5700
  %bf.clear174 = and i32 %bf.lshr173, 255, !dbg !5700
  %idxprom = zext i32 %bf.clear174 to i64, !dbg !5700
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom, i32 0, !dbg !5702
  %36 = load i32, i32* %insn_code, align 4, !dbg !5702
  %cmp176 = icmp eq i32 %36, 2956, !dbg !5703
  br i1 %cmp176, label %if.end181, label %if.then178, !dbg !5704

if.then178:                                       ; preds = %for.end170
  %call179 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %equiv) #6, !dbg !5705
  %call180 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call171, i32 4, %struct.rtx_def* %call179) #6, !dbg !5706
  br label %if.end181, !dbg !5706

if.end181:                                        ; preds = %for.end170, %if.then178
  %cmp182 = icmp eq %struct.rtx_def* %target.addr.0, %target, !dbg !5707
  br i1 %cmp182, label %if.end186, label %if.then184, !dbg !5709

if.then184:                                       ; preds = %if.end181
  %call185 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %target.addr.0) #6, !dbg !5710
  br label %if.end186, !dbg !5710

if.end186:                                        ; preds = %if.end181, %if.then184
  ret void, !dbg !5711
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @sign_expand_binop(i32 %mode, %struct.optab_d* %uoptab, %struct.optab_d* %soptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) local_unnamed_addr #4 !dbg !5712 {
entry:
  %wide_soptab = alloca %struct.optab_d, align 8
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5716, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata %struct.optab_d* %uoptab, metadata !5717, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata %struct.optab_d* %soptab, metadata !5718, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !5719, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !5720, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !5721, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !5722, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata i32 %methods, metadata !5723, metadata !DIExpression()), !dbg !5727
  %tobool = icmp eq i32 %unsignedp, 0, !dbg !5728
  %uoptab.soptab = select i1 %tobool, %struct.optab_d* %soptab, %struct.optab_d* %uoptab, !dbg !5728
  call void @llvm.dbg.value(metadata %struct.optab_d* %uoptab.soptab, metadata !5725, metadata !DIExpression()), !dbg !5727
  %0 = bitcast %struct.optab_d* %wide_soptab to i8*, !dbg !5729
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %0) #7, !dbg !5729
  %call = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* %uoptab.soptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 0) #8, !dbg !5730
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5724, metadata !DIExpression()), !dbg !5727
  %tobool1 = icmp ne %struct.rtx_def* %call, null, !dbg !5731
  %cmp = icmp eq i32 %methods, 0, !dbg !5733
  %or.cond = or i1 %tobool1, %cmp, !dbg !5734
  br i1 %or.cond, label %cleanup, label %if.end, !dbg !5734

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.optab_d* %soptab to i8*, !dbg !5735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %1, i64 384, i1 false), !dbg !5735
  %idxprom = sext i32 %mode to i64, !dbg !5736
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %wide_soptab, i64 0, i32 4, i64 %idxprom, i32 0, !dbg !5737
  store i32 2956, i32* %insn_code, align 4, !dbg !5738
  %libcall_gen = getelementptr inbounds %struct.optab_d, %struct.optab_d* %wide_soptab, i64 0, i32 3, !dbg !5739
  store void (%struct.optab_d*, i8*, i8, i32)* null, void (%struct.optab_d*, i8*, i8, i32)** %libcall_gen, align 8, !dbg !5740
  call void @llvm.dbg.value(metadata %struct.optab_d* %wide_soptab, metadata !5726, metadata !DIExpression(DW_OP_deref)), !dbg !5727
  %call2 = call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* nonnull %wide_soptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 2) #8, !dbg !5741
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !5724, metadata !DIExpression()), !dbg !5727
  %cmp3 = icmp eq %struct.rtx_def* %call2, null, !dbg !5742
  %tobool4 = icmp ne i32 %unsignedp, 0, !dbg !5744
  %or.cond1 = and i1 %cmp3, %tobool4, !dbg !5745
  br i1 %or.cond1, label %if.then5, label %if.end7, !dbg !5745

if.then5:                                         ; preds = %if.end
  %call6 = call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* %uoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 2) #8, !dbg !5746
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !5724, metadata !DIExpression()), !dbg !5727
  br label %if.end7, !dbg !5747

if.end7:                                          ; preds = %if.then5, %if.end
  %temp.0 = phi %struct.rtx_def* [ %call6, %if.then5 ], [ %call2, %if.end ], !dbg !5727
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !5724, metadata !DIExpression()), !dbg !5727
  %tobool8 = icmp ne %struct.rtx_def* %temp.0, null, !dbg !5748
  %cmp10 = icmp eq i32 %methods, 2, !dbg !5750
  %or.cond2 = or i1 %tobool8, %cmp10, !dbg !5751
  br i1 %or.cond2, label %cleanup, label %if.end12, !dbg !5751

if.end12:                                         ; preds = %if.end7
  %call13 = call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* %uoptab.soptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 1) #8, !dbg !5752
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !5724, metadata !DIExpression()), !dbg !5727
  %tobool14 = icmp ne %struct.rtx_def* %call13, null, !dbg !5753
  %cmp16 = icmp eq i32 %methods, 1, !dbg !5755
  %or.cond3 = or i1 %tobool14, %cmp16, !dbg !5756
  br i1 %or.cond3, label %cleanup, label %if.end18, !dbg !5756

if.end18:                                         ; preds = %if.end12
  call void @llvm.dbg.value(metadata %struct.optab_d* %wide_soptab, metadata !5726, metadata !DIExpression(DW_OP_deref)), !dbg !5727
  %call19 = call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* nonnull %wide_soptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) #8, !dbg !5757
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !5724, metadata !DIExpression()), !dbg !5727
  %cmp20 = icmp eq %struct.rtx_def* %call19, null, !dbg !5758
  br i1 %cmp20, label %if.end22, label %cleanup, !dbg !5760

if.end22:                                         ; preds = %if.end18
  br i1 %tobool, label %cleanup, label %if.then24, !dbg !5761

if.then24:                                        ; preds = %if.end22
  %call25 = call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* %uoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) #8, !dbg !5762
  br label %cleanup, !dbg !5764

cleanup:                                          ; preds = %if.end22, %if.end18, %if.end12, %if.end7, %entry, %if.then24
  %retval.0 = phi %struct.rtx_def* [ %call25, %if.then24 ], [ %call, %entry ], [ %temp.0, %if.end7 ], [ %call13, %if.end12 ], [ %call19, %if.end18 ], [ null, %if.end22 ], !dbg !5727
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %0) #7, !dbg !5765
  ret %struct.rtx_def* %retval.0, !dbg !5765
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind uwtable
define dso_local i32 @expand_twoval_unop(%struct.optab_d* %unoptab, %struct.rtx_def* %op0, %struct.rtx_def* %targ0, %struct.rtx_def* %targ1, i32 %unsignedp) local_unnamed_addr #4 !dbg !5766 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %unoptab, metadata !5770, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !5771, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata %struct.rtx_def* %targ0, metadata !5772, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata %struct.rtx_def* %targ1, metadata !5773, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !5774, metadata !DIExpression()), !dbg !5796
  %tobool = icmp eq %struct.rtx_def* %targ0, null, !dbg !5797
  %targ0.targ1 = select i1 %tobool, %struct.rtx_def* %targ1, %struct.rtx_def* %targ0, !dbg !5797
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %targ0.targ1, i64 0, i32 0, !dbg !5797
  %bf.load = load i32, i32* %0, align 8, !dbg !5797
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5797
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5797
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5775, metadata !DIExpression()), !dbg !5796
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !5798
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5778, metadata !DIExpression()), !dbg !5796
  %idxprom = zext i32 %bf.clear to i64, !dbg !5799
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5799
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5799
  br i1 %tobool, label %if.then, label %if.end, !dbg !5800

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !5801
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !5772, metadata !DIExpression()), !dbg !5796
  br label %if.end, !dbg !5803

if.end:                                           ; preds = %entry, %if.then
  %targ0.addr.0 = phi %struct.rtx_def* [ %targ0, %entry ], [ %call2, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %targ0.addr.0, metadata !5772, metadata !DIExpression()), !dbg !5796
  %tobool3 = icmp eq %struct.rtx_def* %targ1, null, !dbg !5804
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !5806

if.then4:                                         ; preds = %if.end
  %call5 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !5807
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !5773, metadata !DIExpression()), !dbg !5796
  br label %if.end6, !dbg !5808

if.end6:                                          ; preds = %if.end, %if.then4
  %targ1.addr.0 = phi %struct.rtx_def* [ %targ1, %if.end ], [ %call5, %if.then4 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %targ1.addr.0, metadata !5773, metadata !DIExpression()), !dbg !5796
  %call7 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !5809
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !5779, metadata !DIExpression()), !dbg !5796
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %unoptab, i64 0, i32 4, i64 %idxprom, i32 0, !dbg !5810
  %2 = load i32, i32* %insn_code, align 4, !dbg !5810
  %cmp = icmp eq i32 %2, 2956, !dbg !5811
  br i1 %cmp, label %if.end75, label %if.then11, !dbg !5812

if.then11:                                        ; preds = %if.end6
  call void @llvm.dbg.value(metadata i32 %2, metadata !5780, metadata !DIExpression()), !dbg !5813
  %idxprom16 = sext i32 %2 to i64, !dbg !5814
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom16, i32 3, !dbg !5815
  %3 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !5815
  %mode19 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %3, i64 2, i32 2, !dbg !5816
  %bf.load20 = load i16, i16* %mode19, align 8, !dbg !5816
  %bf.cast = zext i16 %bf.load20 to i32, !dbg !5816
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5783, metadata !DIExpression()), !dbg !5813
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !5785, metadata !DIExpression()), !dbg !5813
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0, i64 0, i32 0, !dbg !5817
  %bf.load21 = load i32, i32* %4, align 8, !dbg !5817
  %bf.clear23 = and i32 %bf.load21, 16711680, !dbg !5817
  %cmp24 = icmp eq i32 %bf.clear23, 0, !dbg !5819
  br i1 %cmp24, label %if.end33, label %land.lhs.true, !dbg !5820

land.lhs.true:                                    ; preds = %if.then11
  %bf.lshr27 = lshr i32 %bf.load21, 16, !dbg !5821
  %bf.clear28 = and i32 %bf.lshr27, 255, !dbg !5821
  %cmp29 = icmp eq i32 %bf.clear28, %bf.cast, !dbg !5822
  br i1 %cmp29, label %if.end33, label %if.then31, !dbg !5823

if.then31:                                        ; preds = %land.lhs.true
  %call32 = tail call %struct.rtx_def* @convert_to_mode(i32 %bf.cast, %struct.rtx_def* %op0, i32 %unsignedp) #6, !dbg !5824
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call32, metadata !5785, metadata !DIExpression()), !dbg !5813
  br label %if.end33, !dbg !5825

if.end33:                                         ; preds = %land.lhs.true, %if.then11, %if.then31
  %xop0.0 = phi %struct.rtx_def* [ %call32, %if.then31 ], [ %op0, %land.lhs.true ], [ %op0, %if.then11 ], !dbg !5813
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.0, metadata !5785, metadata !DIExpression()), !dbg !5813
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %3, i64 2, i32 0, !dbg !5826
  %5 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !5826
  %call38 = tail call i32 %5(%struct.rtx_def* %xop0.0, i32 %bf.cast) #6, !dbg !5828
  %tobool39 = icmp eq i32 %call38, 0, !dbg !5828
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !5829

if.then40:                                        ; preds = %if.end33
  %call41 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %xop0.0) #6, !dbg !5830
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call41, metadata !5785, metadata !DIExpression()), !dbg !5813
  br label %if.end42, !dbg !5831

if.end42:                                         ; preds = %if.end33, %if.then40
  %xop0.1 = phi %struct.rtx_def* [ %xop0.0, %if.end33 ], [ %call41, %if.then40 ], !dbg !5813
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.1, metadata !5785, metadata !DIExpression()), !dbg !5813
  %predicate47 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %3, i64 0, i32 0, !dbg !5832
  %6 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate47, align 8, !dbg !5832
  %call48 = tail call i32 %6(%struct.rtx_def* %targ0.addr.0, i32 %bf.clear) #6, !dbg !5832
  %tobool49 = icmp eq i32 %call48, 0, !dbg !5832
  br i1 %tobool49, label %cond.true50, label %cond.end52, !dbg !5832

cond.true50:                                      ; preds = %if.end42
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2334, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5832
  br label %cond.end52, !dbg !5832

cond.end52:                                       ; preds = %if.end42, %cond.true50
  %predicate58 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %3, i64 1, i32 0, !dbg !5833
  %7 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate58, align 8, !dbg !5833
  %call59 = tail call i32 %7(%struct.rtx_def* %targ1.addr.0, i32 %bf.clear) #6, !dbg !5833
  %tobool60 = icmp eq i32 %call59, 0, !dbg !5833
  br i1 %tobool60, label %cond.true61, label %cond.end63, !dbg !5833

cond.true61:                                      ; preds = %cond.end52
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2335, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5833
  br label %cond.end63, !dbg !5833

cond.end63:                                       ; preds = %cond.end52, %cond.true61
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom16, i32 2, !dbg !5834
  %8 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !5834
  %call67 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %8(%struct.rtx_def* %targ0.addr.0, %struct.rtx_def* %targ1.addr.0, %struct.rtx_def* %xop0.1) #6, !dbg !5834
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call67, metadata !5784, metadata !DIExpression()), !dbg !5813
  %tobool68 = icmp eq %struct.rtx_def* %call67, null, !dbg !5835
  br i1 %tobool68, label %if.else, label %if.then69, !dbg !5837

if.then69:                                        ; preds = %cond.end63
  %call70 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %call67) #6, !dbg !5838
  br label %cleanup, !dbg !5840

if.else:                                          ; preds = %cond.end63
  tail call void @delete_insns_since(%struct.rtx_def* %call7) #6, !dbg !5841
  br label %cleanup, !dbg !5842

cleanup:                                          ; preds = %if.else, %if.then69
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then69 ], [ true, %if.else ]
  br i1 %cleanup.dest.slot.0, label %if.end75, label %cleanup129

if.end75:                                         ; preds = %if.end6, %cleanup
  switch i8 %1, label %if.end128 [
    i8 2, label %if.then98
    i8 8, label %if.then98
    i8 9, label %if.then98
    i8 11, label %if.then98
    i8 4, label %if.then98
    i8 5, label %if.then98
    i8 6, label %if.then98
    i8 7, label %if.then98
  ], !dbg !5843

if.then98:                                        ; preds = %if.end75, %if.end75, %if.end75, %if.end75, %if.end75, %if.end75, %if.end75, %if.end75
  br label %for.cond, !dbg !5844

for.cond:                                         ; preds = %for.inc, %if.then98
  %idxprom99.pn = phi i64 [ %idxprom, %if.then98 ], [ %idxprom105, %for.inc ]
  %wider_mode.0.in.in = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom99.pn, !dbg !5845
  %wider_mode.0.in = load i8, i8* %wider_mode.0.in.in, align 1, !dbg !5845
  %wider_mode.0 = zext i8 %wider_mode.0.in to i32, !dbg !5845
  call void @llvm.dbg.value(metadata i32 %wider_mode.0, metadata !5777, metadata !DIExpression()), !dbg !5796
  %cmp102 = icmp eq i8 %wider_mode.0.in, 0, !dbg !5846
  br i1 %cmp102, label %if.end128.loopexit, label %for.body, !dbg !5847

for.body:                                         ; preds = %for.cond
  %idxprom105 = zext i8 %wider_mode.0.in to i64, !dbg !5848
  %insn_code107 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %unoptab, i64 0, i32 4, i64 %idxprom105, i32 0, !dbg !5849
  %9 = load i32, i32* %insn_code107, align 4, !dbg !5849
  %cmp108 = icmp eq i32 %9, 2956, !dbg !5850
  br i1 %cmp108, label %for.inc, label %if.then110, !dbg !5851

if.then110:                                       ; preds = %for.body
  %call111 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %wider_mode.0) #6, !dbg !5852
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call111, metadata !5786, metadata !DIExpression()), !dbg !5853
  %call112 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %wider_mode.0) #6, !dbg !5854
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call112, metadata !5794, metadata !DIExpression()), !dbg !5853
  %call113 = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.0, i32 %bf.clear, %struct.rtx_def* %op0, i32 %unsignedp) #6, !dbg !5855
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call113, metadata !5795, metadata !DIExpression()), !dbg !5853
  %call114 = tail call i32 @expand_twoval_unop(%struct.optab_d* %unoptab, %struct.rtx_def* %call113, %struct.rtx_def* %call111, %struct.rtx_def* %call112, i32 %unsignedp) #8, !dbg !5856
  %tobool115 = icmp eq i32 %call114, 0, !dbg !5856
  br i1 %tobool115, label %if.else117, label %if.then116, !dbg !5858

if.then116:                                       ; preds = %if.then110
  tail call void @convert_move(%struct.rtx_def* %targ0.addr.0, %struct.rtx_def* %call111, i32 %unsignedp) #6, !dbg !5859
  tail call void @convert_move(%struct.rtx_def* %targ1.addr.0, %struct.rtx_def* %call112, i32 %unsignedp) #6, !dbg !5861
  br label %cleanup119, !dbg !5862

if.else117:                                       ; preds = %if.then110
  tail call void @delete_insns_since(%struct.rtx_def* %call7) #6, !dbg !5863
  br label %cleanup119, !dbg !5864

cleanup119:                                       ; preds = %if.else117, %if.then116
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then116 ], [ true, %if.else117 ]
  br i1 %cleanup.dest.slot.1, label %for.inc, label %cleanup129.loopexit

for.inc:                                          ; preds = %for.body, %cleanup119
  br label %for.cond, !dbg !5865, !llvm.loop !5866

if.end128.loopexit:                               ; preds = %for.cond
  br label %if.end128, !dbg !5868

if.end128:                                        ; preds = %if.end128.loopexit, %if.end75
  tail call void @delete_insns_since(%struct.rtx_def* %call) #6, !dbg !5868
  br label %cleanup129, !dbg !5869

cleanup129.loopexit:                              ; preds = %cleanup119
  br label %cleanup129, !dbg !5870

cleanup129:                                       ; preds = %cleanup129.loopexit, %cleanup, %if.end128
  %retval.5 = phi i32 [ 1, %cleanup ], [ 0, %if.end128 ], [ 1, %cleanup129.loopexit ], !dbg !5796
  ret i32 %retval.5, !dbg !5870
}

; Function Attrs: nounwind uwtable
define dso_local i32 @expand_twoval_binop(%struct.optab_d* %binoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %targ0, %struct.rtx_def* %targ1, i32 %unsignedp) local_unnamed_addr #4 !dbg !5871 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !5875, metadata !DIExpression()), !dbg !5905
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !5876, metadata !DIExpression()), !dbg !5905
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !5877, metadata !DIExpression()), !dbg !5905
  call void @llvm.dbg.value(metadata %struct.rtx_def* %targ0, metadata !5878, metadata !DIExpression()), !dbg !5905
  call void @llvm.dbg.value(metadata %struct.rtx_def* %targ1, metadata !5879, metadata !DIExpression()), !dbg !5905
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !5880, metadata !DIExpression()), !dbg !5905
  %tobool = icmp eq %struct.rtx_def* %targ0, null, !dbg !5906
  %targ0.targ1 = select i1 %tobool, %struct.rtx_def* %targ1, %struct.rtx_def* %targ0, !dbg !5906
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %targ0.targ1, i64 0, i32 0, !dbg !5906
  %bf.load = load i32, i32* %0, align 8, !dbg !5906
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5906
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5906
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5881, metadata !DIExpression()), !dbg !5905
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !5907
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5884, metadata !DIExpression()), !dbg !5905
  %idxprom = zext i32 %bf.clear to i64, !dbg !5908
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5908
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5908
  br i1 %tobool, label %if.then, label %if.end, !dbg !5909

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !5910
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !5878, metadata !DIExpression()), !dbg !5905
  br label %if.end, !dbg !5912

if.end:                                           ; preds = %entry, %if.then
  %targ0.addr.0 = phi %struct.rtx_def* [ %targ0, %entry ], [ %call2, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %targ0.addr.0, metadata !5878, metadata !DIExpression()), !dbg !5905
  %tobool3 = icmp eq %struct.rtx_def* %targ1, null, !dbg !5913
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !5915

if.then4:                                         ; preds = %if.end
  %call5 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !5916
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !5879, metadata !DIExpression()), !dbg !5905
  br label %if.end6, !dbg !5917

if.end6:                                          ; preds = %if.end, %if.then4
  %targ1.addr.0 = phi %struct.rtx_def* [ %targ1, %if.end ], [ %call5, %if.then4 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %targ1.addr.0, metadata !5879, metadata !DIExpression()), !dbg !5905
  %call7 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !5918
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !5885, metadata !DIExpression()), !dbg !5905
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab, i64 0, i32 4, i64 %idxprom, i32 0, !dbg !5919
  %2 = load i32, i32* %insn_code, align 4, !dbg !5919
  %cmp = icmp eq i32 %2, 2956, !dbg !5920
  br i1 %cmp, label %if.end130, label %if.then11, !dbg !5921

if.then11:                                        ; preds = %if.end6
  call void @llvm.dbg.value(metadata i32 %2, metadata !5886, metadata !DIExpression()), !dbg !5922
  %idxprom16 = sext i32 %2 to i64, !dbg !5923
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom16, i32 3, !dbg !5924
  %3 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !5924
  %mode19 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %3, i64 1, i32 2, !dbg !5925
  %bf.load20 = load i16, i16* %mode19, align 8, !dbg !5925
  %bf.cast = zext i16 %bf.load20 to i32, !dbg !5925
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5889, metadata !DIExpression()), !dbg !5922
  %mode25 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %3, i64 2, i32 2, !dbg !5926
  %bf.load26 = load i16, i16* %mode25, align 8, !dbg !5926
  %bf.cast27 = zext i16 %bf.load26 to i32, !dbg !5926
  call void @llvm.dbg.value(metadata i32 %bf.cast27, metadata !5890, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !5892, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !5893, metadata !DIExpression()), !dbg !5922
  %conv28 = trunc i32 %unsignedp to i8, !dbg !5927
  %call29 = tail call fastcc %struct.rtx_def* @avoid_expensive_constant(i32 %bf.cast, %struct.optab_d* %binoptab, %struct.rtx_def* %op0, i8 zeroext %conv28) #8, !dbg !5928
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call29, metadata !5892, metadata !DIExpression()), !dbg !5922
  %call31 = tail call fastcc %struct.rtx_def* @avoid_expensive_constant(i32 %bf.cast27, %struct.optab_d* %binoptab, %struct.rtx_def* %op1, i8 zeroext %conv28) #8, !dbg !5929
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !5893, metadata !DIExpression()), !dbg !5922
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0, i64 0, i32 0, !dbg !5930
  %bf.load32 = load i32, i32* %4, align 8, !dbg !5930
  %bf.lshr33 = lshr i32 %bf.load32, 16, !dbg !5930
  %bf.clear34 = and i32 %bf.lshr33, 255, !dbg !5930
  %cmp35 = icmp ne i32 %bf.clear34, %bf.cast, !dbg !5932
  %cmp37 = icmp ne i16 %bf.load20, 0, !dbg !5933
  %or.cond = and i1 %cmp35, %cmp37, !dbg !5934
  br i1 %or.cond, label %if.then39, label %if.end53, !dbg !5934

if.then39:                                        ; preds = %if.then11
  %bf.clear42 = and i32 %bf.load32, 16711680, !dbg !5935
  %cmp43 = icmp eq i32 %bf.clear42, 0, !dbg !5936
  br i1 %cmp43, label %cond.end50, label %cond.true45, !dbg !5935

cond.true45:                                      ; preds = %if.then39
  br label %cond.end50, !dbg !5935

cond.end50:                                       ; preds = %if.then39, %cond.true45
  %cond51 = phi i32 [ %bf.clear34, %cond.true45 ], [ %bf.clear, %if.then39 ], !dbg !5935
  %call52 = tail call %struct.rtx_def* @convert_modes(i32 %bf.cast, i32 %cond51, %struct.rtx_def* %call29, i32 %unsignedp) #6, !dbg !5937
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call52, metadata !5892, metadata !DIExpression()), !dbg !5922
  br label %if.end53, !dbg !5938

if.end53:                                         ; preds = %cond.end50, %if.then11
  %xop0.0 = phi %struct.rtx_def* [ %call52, %cond.end50 ], [ %call29, %if.then11 ], !dbg !5922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.0, metadata !5892, metadata !DIExpression()), !dbg !5922
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1, i64 0, i32 0, !dbg !5939
  %bf.load54 = load i32, i32* %5, align 8, !dbg !5939
  %bf.lshr55 = lshr i32 %bf.load54, 16, !dbg !5939
  %bf.clear56 = and i32 %bf.lshr55, 255, !dbg !5939
  %cmp57 = icmp ne i32 %bf.clear56, %bf.cast27, !dbg !5941
  %cmp60 = icmp ne i16 %bf.load26, 0, !dbg !5942
  %or.cond3 = and i1 %cmp57, %cmp60, !dbg !5943
  br i1 %or.cond3, label %if.then62, label %if.end76, !dbg !5943

if.then62:                                        ; preds = %if.end53
  %bf.clear65 = and i32 %bf.load54, 16711680, !dbg !5944
  %cmp66 = icmp eq i32 %bf.clear65, 0, !dbg !5945
  br i1 %cmp66, label %cond.end73, label %cond.true68, !dbg !5944

cond.true68:                                      ; preds = %if.then62
  br label %cond.end73, !dbg !5944

cond.end73:                                       ; preds = %if.then62, %cond.true68
  %cond74 = phi i32 [ %bf.clear56, %cond.true68 ], [ %bf.clear, %if.then62 ], !dbg !5944
  %call75 = tail call %struct.rtx_def* @convert_modes(i32 %bf.cast27, i32 %cond74, %struct.rtx_def* %call31, i32 %unsignedp) #6, !dbg !5946
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call75, metadata !5893, metadata !DIExpression()), !dbg !5922
  br label %if.end76, !dbg !5947

if.end76:                                         ; preds = %cond.end73, %if.end53
  %xop1.0 = phi %struct.rtx_def* [ %call75, %cond.end73 ], [ %call31, %if.end53 ], !dbg !5922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop1.0, metadata !5893, metadata !DIExpression()), !dbg !5922
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %3, i64 1, i32 0, !dbg !5948
  %6 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !5948
  %call81 = tail call i32 %6(%struct.rtx_def* %xop0.0, i32 %bf.cast) #6, !dbg !5950
  %tobool82 = icmp eq i32 %call81, 0, !dbg !5950
  br i1 %tobool82, label %if.then83, label %if.end85, !dbg !5951

if.then83:                                        ; preds = %if.end76
  %call84 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %xop0.0) #6, !dbg !5952
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call84, metadata !5892, metadata !DIExpression()), !dbg !5922
  br label %if.end85, !dbg !5953

if.end85:                                         ; preds = %if.end76, %if.then83
  %xop0.1 = phi %struct.rtx_def* [ %xop0.0, %if.end76 ], [ %call84, %if.then83 ], !dbg !5922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.1, metadata !5892, metadata !DIExpression()), !dbg !5922
  %predicate90 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %3, i64 2, i32 0, !dbg !5954
  %7 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate90, align 8, !dbg !5954
  %call91 = tail call i32 %7(%struct.rtx_def* %xop1.0, i32 %bf.cast27) #6, !dbg !5956
  %tobool92 = icmp eq i32 %call91, 0, !dbg !5956
  br i1 %tobool92, label %if.then93, label %if.end95, !dbg !5957

if.then93:                                        ; preds = %if.end85
  %call94 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast27, %struct.rtx_def* %xop1.0) #6, !dbg !5958
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call94, metadata !5893, metadata !DIExpression()), !dbg !5922
  br label %if.end95, !dbg !5959

if.end95:                                         ; preds = %if.end85, %if.then93
  %xop1.1 = phi %struct.rtx_def* [ %xop1.0, %if.end85 ], [ %call94, %if.then93 ], !dbg !5922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop1.1, metadata !5893, metadata !DIExpression()), !dbg !5922
  %predicate100 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %3, i64 0, i32 0, !dbg !5960
  %8 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate100, align 8, !dbg !5960
  %call101 = tail call i32 %8(%struct.rtx_def* %targ0.addr.0, i32 %bf.clear) #6, !dbg !5960
  %tobool102 = icmp eq i32 %call101, 0, !dbg !5960
  br i1 %tobool102, label %cond.true103, label %cond.end105, !dbg !5960

cond.true103:                                     ; preds = %if.end95
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2451, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5960
  br label %cond.end105, !dbg !5960

cond.end105:                                      ; preds = %if.end95, %cond.true103
  %predicate111 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %3, i64 3, i32 0, !dbg !5961
  %9 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate111, align 8, !dbg !5961
  %call112 = tail call i32 %9(%struct.rtx_def* %targ1.addr.0, i32 %bf.clear) #6, !dbg !5961
  %tobool113 = icmp eq i32 %call112, 0, !dbg !5961
  br i1 %tobool113, label %cond.true114, label %cond.end116, !dbg !5961

cond.true114:                                     ; preds = %cond.end105
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2452, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5961
  br label %cond.end116, !dbg !5961

cond.end116:                                      ; preds = %cond.end105, %cond.true114
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom16, i32 2, !dbg !5962
  %10 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !5962
  %call120 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %10(%struct.rtx_def* %targ0.addr.0, %struct.rtx_def* %xop0.1, %struct.rtx_def* %xop1.1, %struct.rtx_def* %targ1.addr.0) #6, !dbg !5962
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call120, metadata !5891, metadata !DIExpression()), !dbg !5922
  %tobool121 = icmp eq %struct.rtx_def* %call120, null, !dbg !5963
  br i1 %tobool121, label %if.else, label %if.then122, !dbg !5965

if.then122:                                       ; preds = %cond.end116
  %call123 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %call120) #6, !dbg !5966
  br label %cleanup, !dbg !5968

if.else:                                          ; preds = %cond.end116
  tail call void @delete_insns_since(%struct.rtx_def* %call7) #6, !dbg !5969
  br label %cleanup, !dbg !5970

cleanup:                                          ; preds = %if.else, %if.then122
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then122 ], [ true, %if.else ]
  br i1 %cleanup.dest.slot.0, label %if.end130, label %cleanup186

if.end130:                                        ; preds = %if.end6, %cleanup
  switch i8 %1, label %if.end185 [
    i8 2, label %if.then153
    i8 8, label %if.then153
    i8 9, label %if.then153
    i8 11, label %if.then153
    i8 4, label %if.then153
    i8 5, label %if.then153
    i8 6, label %if.then153
    i8 7, label %if.then153
  ], !dbg !5971

if.then153:                                       ; preds = %if.end130, %if.end130, %if.end130, %if.end130, %if.end130, %if.end130, %if.end130, %if.end130
  br label %for.cond, !dbg !5972

for.cond:                                         ; preds = %for.inc, %if.then153
  %idxprom154.pn = phi i64 [ %idxprom, %if.then153 ], [ %idxprom160, %for.inc ]
  %wider_mode.0.in.in = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom154.pn, !dbg !5973
  %wider_mode.0.in = load i8, i8* %wider_mode.0.in.in, align 1, !dbg !5973
  %wider_mode.0 = zext i8 %wider_mode.0.in to i32, !dbg !5973
  call void @llvm.dbg.value(metadata i32 %wider_mode.0, metadata !5883, metadata !DIExpression()), !dbg !5905
  %cmp157 = icmp eq i8 %wider_mode.0.in, 0, !dbg !5974
  br i1 %cmp157, label %if.end185.loopexit, label %for.body, !dbg !5975

for.body:                                         ; preds = %for.cond
  %idxprom160 = zext i8 %wider_mode.0.in to i64, !dbg !5976
  %insn_code162 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %binoptab, i64 0, i32 4, i64 %idxprom160, i32 0, !dbg !5977
  %11 = load i32, i32* %insn_code162, align 4, !dbg !5977
  %cmp163 = icmp eq i32 %11, 2956, !dbg !5978
  br i1 %cmp163, label %for.inc, label %if.then165, !dbg !5979

if.then165:                                       ; preds = %for.body
  %call166 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %wider_mode.0) #6, !dbg !5980
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call166, metadata !5894, metadata !DIExpression()), !dbg !5981
  %call167 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %wider_mode.0) #6, !dbg !5982
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call167, metadata !5902, metadata !DIExpression()), !dbg !5981
  %call168 = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.0, i32 %bf.clear, %struct.rtx_def* %op0, i32 %unsignedp) #6, !dbg !5983
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call168, metadata !5903, metadata !DIExpression()), !dbg !5981
  %call169 = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.0, i32 %bf.clear, %struct.rtx_def* %op1, i32 %unsignedp) #6, !dbg !5984
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call169, metadata !5904, metadata !DIExpression()), !dbg !5981
  %call170 = tail call i32 @expand_twoval_binop(%struct.optab_d* %binoptab, %struct.rtx_def* %call168, %struct.rtx_def* %call169, %struct.rtx_def* %call166, %struct.rtx_def* %call167, i32 %unsignedp) #8, !dbg !5985
  %tobool171 = icmp eq i32 %call170, 0, !dbg !5985
  br i1 %tobool171, label %if.else173, label %if.then172, !dbg !5987

if.then172:                                       ; preds = %if.then165
  tail call void @convert_move(%struct.rtx_def* %targ0.addr.0, %struct.rtx_def* %call166, i32 %unsignedp) #6, !dbg !5988
  tail call void @convert_move(%struct.rtx_def* %targ1.addr.0, %struct.rtx_def* %call167, i32 %unsignedp) #6, !dbg !5990
  br label %cleanup175, !dbg !5991

if.else173:                                       ; preds = %if.then165
  tail call void @delete_insns_since(%struct.rtx_def* %call7) #6, !dbg !5992
  br label %cleanup175, !dbg !5993

cleanup175:                                       ; preds = %if.else173, %if.then172
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then172 ], [ true, %if.else173 ]
  br i1 %cleanup.dest.slot.1, label %for.inc, label %cleanup186.loopexit

for.inc:                                          ; preds = %for.body, %cleanup175
  br label %for.cond, !dbg !5994, !llvm.loop !5995

if.end185.loopexit:                               ; preds = %for.cond
  br label %if.end185, !dbg !5997

if.end185:                                        ; preds = %if.end185.loopexit, %if.end130
  tail call void @delete_insns_since(%struct.rtx_def* %call) #6, !dbg !5997
  br label %cleanup186, !dbg !5998

cleanup186.loopexit:                              ; preds = %cleanup175
  br label %cleanup186, !dbg !5999

cleanup186:                                       ; preds = %cleanup186.loopexit, %cleanup, %if.end185
  %retval.5 = phi i32 [ 1, %cleanup ], [ 0, %if.end185 ], [ 1, %cleanup186.loopexit ], !dbg !5905
  ret i32 %retval.5, !dbg !5999
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @expand_twoval_binop_libfunc(%struct.optab_d* %binoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %targ0, %struct.rtx_def* %targ1, i32 %code) local_unnamed_addr #4 !dbg !6000 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !6004, metadata !DIExpression()), !dbg !6015
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6005, metadata !DIExpression()), !dbg !6015
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !6006, metadata !DIExpression()), !dbg !6015
  call void @llvm.dbg.value(metadata %struct.rtx_def* %targ0, metadata !6007, metadata !DIExpression()), !dbg !6015
  call void @llvm.dbg.value(metadata %struct.rtx_def* %targ1, metadata !6008, metadata !DIExpression()), !dbg !6015
  call void @llvm.dbg.value(metadata i32 %code, metadata !6009, metadata !DIExpression()), !dbg !6015
  %tobool = icmp eq %struct.rtx_def* %targ0, null, !dbg !6016
  %tobool1 = icmp eq %struct.rtx_def* %targ1, null, !dbg !6016
  %cmp = xor i1 %tobool, %tobool1, !dbg !6016
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6016

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2517, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6016
  br label %cond.end, !dbg !6016

cond.end:                                         ; preds = %entry, %cond.true
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0, i64 0, i32 0, !dbg !6017
  %bf.load = load i32, i32* %0, align 8, !dbg !6017
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6017
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6010, metadata !DIExpression()), !dbg !6015
  %call = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* %binoptab, i32 %bf.clear) #8, !dbg !6018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6014, metadata !DIExpression()), !dbg !6015
  %tobool4 = icmp eq %struct.rtx_def* %call, null, !dbg !6019
  br i1 %tobool4, label %cleanup, label %if.end, !dbg !6021

if.end:                                           ; preds = %cond.end
  %idxprom = zext i32 %bf.clear to i64, !dbg !6022
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6022
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6022
  %conv5 = zext i8 %1 to i32, !dbg !6022
  %mul8 = shl nuw nsw i32 %conv5, 4, !dbg !6023
  %call9 = tail call i32 @smallest_mode_for_size(i32 %mul8, i32 2) #6, !dbg !6024
  call void @llvm.dbg.value(metadata i32 %call9, metadata !6011, metadata !DIExpression()), !dbg !6015
  tail call void @start_sequence() #6, !dbg !6025
  %call10 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) @emit_library_call_value(%struct.rtx_def* nonnull %call, %struct.rtx_def* null, i32 1, i32 %call9, i32 2, %struct.rtx_def* %op0, i32 %bf.clear, %struct.rtx_def* %op1, i32 %bf.clear) #6, !dbg !6026
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !6012, metadata !DIExpression()), !dbg !6015
  br i1 %tobool, label %cond.false13, label %cond.end18, !dbg !6027

cond.false13:                                     ; preds = %if.end
  %2 = load i8, i8* %arrayidx, align 1, !dbg !6028
  %conv17 = zext i8 %2 to i32, !dbg !6028
  br label %cond.end18, !dbg !6027

cond.end18:                                       ; preds = %if.end, %cond.false13
  %cond19 = phi i32 [ %conv17, %cond.false13 ], [ 0, %if.end ], !dbg !6027
  %call20 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear, %struct.rtx_def* %call10, i32 %call9, i32 %cond19) #6, !dbg !6029
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call20, metadata !6012, metadata !DIExpression()), !dbg !6015
  %call21 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6030
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !6013, metadata !DIExpression()), !dbg !6015
  tail call void @end_sequence() #6, !dbg !6031
  %targ0.targ1 = select i1 %tobool, %struct.rtx_def* %targ1, %struct.rtx_def* %targ0, !dbg !6032
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %code, i32 %bf.clear, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #6, !dbg !6033
  tail call void @emit_libcall_block(%struct.rtx_def* %call21, %struct.rtx_def* %targ0.targ1, %struct.rtx_def* %call20, %struct.rtx_def* %call27) #8, !dbg !6034
  br label %cleanup, !dbg !6035

cleanup:                                          ; preds = %cond.end, %cond.end18
  %retval.0 = phi i8 [ 1, %cond.end18 ], [ 0, %cond.end ], !dbg !6015
  ret i8 %retval.0, !dbg !6036
}

declare dso_local i32 @smallest_mode_for_size(i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_simple_unop(i32 %mode, i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %unsignedp) local_unnamed_addr #4 !dbg !6037 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6041, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i32 %code, metadata !6042, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6043, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6044, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !6045, metadata !DIExpression()), !dbg !6047
  %idxprom = sext i32 %code to i64, !dbg !6048
  %arrayidx = getelementptr inbounds [140 x %struct.optab_d*], [140 x %struct.optab_d*]* @code_to_optab, i64 0, i64 %idxprom, !dbg !6048
  %0 = load %struct.optab_d*, %struct.optab_d** %arrayidx, align 8, !dbg !6048
  call void @llvm.dbg.value(metadata %struct.optab_d* %0, metadata !6046, metadata !DIExpression()), !dbg !6047
  %tobool = icmp eq %struct.optab_d* %0, null, !dbg !6049
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6049

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2554, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6049
  br label %cond.end, !dbg !6049

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab_d* %0, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %unsignedp) #8, !dbg !6050
  ret %struct.rtx_def* %call, !dbg !6051
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab_d* %unoptab, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %unsignedp) local_unnamed_addr #4 !dbg !6052 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6056, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata %struct.optab_d* %unoptab, metadata !6057, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6058, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6059, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !6060, metadata !DIExpression()), !dbg !6101
  %idxprom = zext i32 %mode to i64, !dbg !6102
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !6102
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6102
  call void @llvm.dbg.value(metadata i8 %0, metadata !6061, metadata !DIExpression()), !dbg !6101
  %call = tail call fastcc %struct.rtx_def* @expand_unop_direct(i32 %mode, %struct.optab_d* %unoptab, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %unsignedp) #8, !dbg !6103
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !6104
  br i1 %tobool, label %if.end, label %cleanup608, !dbg !6106

if.end:                                           ; preds = %entry
  %cmp = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71), !dbg !6107
  br i1 %cmp, label %if.then2, label %if.end23, !dbg !6109

if.then2:                                         ; preds = %if.end
  %call3 = tail call fastcc %struct.rtx_def* @widen_clz(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) #8, !dbg !6110
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool4 = icmp eq %struct.rtx_def* %call3, null, !dbg !6112
  br i1 %tobool4, label %if.end6, label %cleanup608, !dbg !6114

if.end6:                                          ; preds = %if.then2
  %arrayidx8 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6115
  %1 = load i8, i8* %arrayidx8, align 1, !dbg !6115
  %cmp11 = icmp eq i8 %1, 8, !dbg !6117
  br i1 %cmp11, label %land.lhs.true, label %try_libcall, !dbg !6118

land.lhs.true:                                    ; preds = %if.end6
  %2 = load i32, i32* @word_mode, align 4, !dbg !6119
  %idxprom13 = sext i32 %2 to i64, !dbg !6119
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71, i32 4, i64 %idxprom13, i32 0, !dbg !6120
  %3 = load i32, i32* %insn_code, align 4, !dbg !6120
  %cmp15 = icmp eq i32 %3, 2956, !dbg !6121
  br i1 %cmp15, label %try_libcall, label %if.then17, !dbg !6122

if.then17:                                        ; preds = %land.lhs.true
  %call18 = tail call fastcc %struct.rtx_def* @expand_doubleword_clz(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) #8, !dbg !6123
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call18, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool19 = icmp eq %struct.rtx_def* %call18, null, !dbg !6125
  br i1 %tobool19, label %try_libcall, label %cleanup608, !dbg !6127

if.end23:                                         ; preds = %if.end
  %cmp24 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 68), !dbg !6128
  br i1 %cmp24, label %if.then26, label %if.end50, !dbg !6130

if.then26:                                        ; preds = %if.end23
  %call27 = tail call fastcc %struct.rtx_def* @widen_bswap(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) #8, !dbg !6131
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call27, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool28 = icmp eq %struct.rtx_def* %call27, null, !dbg !6133
  br i1 %tobool28, label %if.end30, label %cleanup608, !dbg !6135

if.end30:                                         ; preds = %if.then26
  %arrayidx32 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6136
  %4 = load i8, i8* %arrayidx32, align 1, !dbg !6136
  %cmp35 = icmp eq i8 %4, 8, !dbg !6138
  br i1 %cmp35, label %land.lhs.true37, label %try_libcall, !dbg !6139

land.lhs.true37:                                  ; preds = %if.end30
  %5 = load i32, i32* @word_mode, align 4, !dbg !6140
  %idxprom39 = sext i32 %5 to i64, !dbg !6140
  %insn_code41 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 68, i32 4, i64 %idxprom39, i32 0, !dbg !6141
  %6 = load i32, i32* %insn_code41, align 4, !dbg !6141
  %cmp42 = icmp eq i32 %6, 2956, !dbg !6142
  br i1 %cmp42, label %try_libcall, label %if.then44, !dbg !6143

if.then44:                                        ; preds = %land.lhs.true37
  %call45 = tail call fastcc %struct.rtx_def* @expand_doubleword_bswap(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) #8, !dbg !6144
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool46 = icmp eq %struct.rtx_def* %call45, null, !dbg !6146
  br i1 %tobool46, label %try_libcall, label %cleanup608, !dbg !6148

if.end50:                                         ; preds = %if.end23
  switch i8 %0, label %if.end114 [
    i8 2, label %if.then73
    i8 8, label %if.then73
    i8 9, label %if.then73
    i8 11, label %if.then73
    i8 4, label %if.then73
    i8 5, label %if.then73
    i8 6, label %if.then73
    i8 7, label %if.then73
  ], !dbg !6149

if.then73:                                        ; preds = %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50
  %cmp87 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 64), !dbg !6150
  %cmp90 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 69), !dbg !6150
  %or.cond = or i1 %cmp87, %cmp90, !dbg !6150
  %cmp92 = icmp eq i8 %0, 2, !dbg !6150
  %spec.select = and i1 %or.cond, %cmp92, !dbg !6150
  %land.ext = zext i1 %spec.select to i32, !dbg !6150
  br i1 %cmp92, label %if.then73.split.us, label %if.then73.if.then73.split_crit_edge, !dbg !6151

if.then73.if.then73.split_crit_edge:              ; preds = %if.then73
  br label %for.cond, !dbg !6151

if.then73.split.us:                               ; preds = %if.then73
  br label %for.cond.us, !dbg !6151

for.cond.us:                                      ; preds = %for.inc.us, %if.then73.split.us
  %idxprom74.pn.us = phi i64 [ %idxprom, %if.then73.split.us ], [ %idxprom80.us, %for.inc.us ]
  %retval.0.us = phi %struct.rtx_def* [ undef, %if.then73.split.us ], [ %retval.2.us, %for.inc.us ]
  %wider_mode.0.in.in.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom74.pn.us, !dbg !6152
  %wider_mode.0.in.us = load i8, i8* %wider_mode.0.in.in.us, align 1, !dbg !6152
  %wider_mode.0.us = zext i8 %wider_mode.0.in.us to i32, !dbg !6152
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6059, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i32 %wider_mode.0.us, metadata !6062, metadata !DIExpression()), !dbg !6101
  %cmp77.us = icmp eq i8 %wider_mode.0.in.us, 0, !dbg !6153
  br i1 %cmp77.us, label %if.end114.loopexit.us-lcssa.us, label %for.body.us, !dbg !6154

for.body.us:                                      ; preds = %for.cond.us
  %idxprom80.us = zext i8 %wider_mode.0.in.us to i64, !dbg !6155
  %insn_code82.us = getelementptr inbounds %struct.optab_d, %struct.optab_d* %unoptab, i64 0, i32 4, i64 %idxprom80.us, i32 0, !dbg !6156
  %7 = load i32, i32* %insn_code82.us, align 4, !dbg !6156
  %cmp83.us = icmp eq i32 %7, 2956, !dbg !6157
  br i1 %cmp83.us, label %for.inc.us, label %if.then85.us, !dbg !6158

if.then85.us:                                     ; preds = %for.body.us
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6065, metadata !DIExpression()), !dbg !6150
  %call86.us = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6159
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call86.us, metadata !6072, metadata !DIExpression()), !dbg !6150
  %call94.us = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0, i32 %wider_mode.0.us, i32 %mode, i32 %unsignedp, i32 %land.ext) #8, !dbg !6160
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call94.us, metadata !6065, metadata !DIExpression()), !dbg !6150
  %call95.us = tail call %struct.rtx_def* @expand_unop(i32 %wider_mode.0.us, %struct.optab_d* %unoptab, %struct.rtx_def* %call94.us, %struct.rtx_def* null, i32 %unsignedp) #8, !dbg !6161
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call95.us, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool96.us = icmp eq %struct.rtx_def* %call95.us, null, !dbg !6162
  br i1 %tobool96.us, label %if.else107.us, label %if.then97.us, !dbg !6164

if.then97.us:                                     ; preds = %if.then85.us
  %8 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !6165
  %call106.us = tail call %struct.rtx_def* %8(i32 %mode, %struct.rtx_def* nonnull %call95.us) #6, !dbg !6165
  br label %cleanup.us, !dbg !6168

if.else107.us:                                    ; preds = %if.then85.us
  tail call void @delete_insns_since(%struct.rtx_def* %call86.us) #6, !dbg !6169
  br label %cleanup.us, !dbg !6170

cleanup.us:                                       ; preds = %if.else107.us, %if.then97.us
  %cleanup.dest.slot.0.us = phi i1 [ false, %if.then97.us ], [ true, %if.else107.us ]
  %retval.1.us = phi %struct.rtx_def* [ %call106.us, %if.then97.us ], [ %retval.0.us, %if.else107.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6059, metadata !DIExpression()), !dbg !6101
  br i1 %cleanup.dest.slot.0.us, label %for.inc.us, label %cleanup608.loopexit17.us-lcssa.us

for.inc.us:                                       ; preds = %cleanup.us, %for.body.us
  %retval.2.us = phi %struct.rtx_def* [ %retval.0.us, %for.body.us ], [ %retval.1.us, %cleanup.us ]
  br label %for.cond.us, !dbg !6171, !llvm.loop !6172

if.end114.loopexit.us-lcssa.us:                   ; preds = %for.cond.us
  %retval.0.us.lcssa = phi %struct.rtx_def* [ %retval.0.us, %for.cond.us ]
  br label %if.end114.loopexit, !dbg !6174

cleanup608.loopexit17.us-lcssa.us:                ; preds = %cleanup.us
  %retval.1.us.lcssa = phi %struct.rtx_def* [ %retval.1.us, %cleanup.us ]
  br label %cleanup608.loopexit17, !dbg !6175

for.cond:                                         ; preds = %for.inc, %if.then73.if.then73.split_crit_edge
  %idxprom74.pn = phi i64 [ %idxprom, %if.then73.if.then73.split_crit_edge ], [ %idxprom80, %for.inc ]
  %target.addr.0 = phi %struct.rtx_def* [ %target, %if.then73.if.then73.split_crit_edge ], [ %target.addr.3, %for.inc ]
  %retval.0 = phi %struct.rtx_def* [ undef, %if.then73.if.then73.split_crit_edge ], [ %retval.2, %for.inc ]
  %wider_mode.0.in.in = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom74.pn, !dbg !6152
  %wider_mode.0.in = load i8, i8* %wider_mode.0.in.in, align 1, !dbg !6152
  %wider_mode.0 = zext i8 %wider_mode.0.in to i32, !dbg !6152
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !6059, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i32 %wider_mode.0, metadata !6062, metadata !DIExpression()), !dbg !6101
  %cmp77 = icmp eq i8 %wider_mode.0.in, 0, !dbg !6153
  br i1 %cmp77, label %if.end114.loopexit.us-lcssa, label %for.body, !dbg !6154

for.body:                                         ; preds = %for.cond
  %idxprom80 = zext i8 %wider_mode.0.in to i64, !dbg !6155
  %insn_code82 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %unoptab, i64 0, i32 4, i64 %idxprom80, i32 0, !dbg !6156
  %9 = load i32, i32* %insn_code82, align 4, !dbg !6156
  %cmp83 = icmp eq i32 %9, 2956, !dbg !6157
  br i1 %cmp83, label %for.inc, label %if.then85, !dbg !6158

if.then85:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6065, metadata !DIExpression()), !dbg !6150
  %call86 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6159
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call86, metadata !6072, metadata !DIExpression()), !dbg !6150
  %call94 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0, i32 %wider_mode.0, i32 %mode, i32 %unsignedp, i32 %land.ext) #8, !dbg !6160
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call94, metadata !6065, metadata !DIExpression()), !dbg !6150
  %call95 = tail call %struct.rtx_def* @expand_unop(i32 %wider_mode.0, %struct.optab_d* %unoptab, %struct.rtx_def* %call94, %struct.rtx_def* null, i32 %unsignedp) #8, !dbg !6161
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call95, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool96 = icmp eq %struct.rtx_def* %call95, null, !dbg !6162
  br i1 %tobool96, label %if.else107, label %if.then97, !dbg !6164

if.then97:                                        ; preds = %if.then85
  %cmp101 = icmp eq %struct.rtx_def* %target.addr.0, null, !dbg !6176
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !6179

if.then103:                                       ; preds = %if.then97
  %call104 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !6180
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call104, metadata !6059, metadata !DIExpression()), !dbg !6101
  br label %if.end105, !dbg !6181

if.end105:                                        ; preds = %if.then103, %if.then97
  %target.addr.1 = phi %struct.rtx_def* [ %call104, %if.then103 ], [ %target.addr.0, %if.then97 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.1, metadata !6059, metadata !DIExpression()), !dbg !6101
  tail call void @convert_move(%struct.rtx_def* %target.addr.1, %struct.rtx_def* nonnull %call95, i32 0) #6, !dbg !6182
  br label %cleanup, !dbg !6183

if.else107:                                       ; preds = %if.then85
  tail call void @delete_insns_since(%struct.rtx_def* %call86) #6, !dbg !6169
  br label %cleanup, !dbg !6170

cleanup:                                          ; preds = %if.else107, %if.end105
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end105 ], [ true, %if.else107 ]
  %target.addr.2 = phi %struct.rtx_def* [ %target.addr.1, %if.end105 ], [ %target.addr.0, %if.else107 ]
  %retval.1 = phi %struct.rtx_def* [ %target.addr.1, %if.end105 ], [ %retval.0, %if.else107 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.2, metadata !6059, metadata !DIExpression()), !dbg !6101
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup608.loopexit17.us-lcssa

for.inc:                                          ; preds = %for.body, %cleanup
  %target.addr.3 = phi %struct.rtx_def* [ %target.addr.0, %for.body ], [ %target.addr.2, %cleanup ]
  %retval.2 = phi %struct.rtx_def* [ %retval.0, %for.body ], [ %retval.1, %cleanup ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.3, metadata !6059, metadata !DIExpression()), !dbg !6101
  br label %for.cond, !dbg !6171, !llvm.loop !6172

if.end114.loopexit.us-lcssa:                      ; preds = %for.cond
  %target.addr.0.lcssa49 = phi %struct.rtx_def* [ %target.addr.0, %for.cond ]
  %retval.0.lcssa47 = phi %struct.rtx_def* [ %retval.0, %for.cond ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0.lcssa49, metadata !6059, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0.lcssa49, metadata !6059, metadata !DIExpression()), !dbg !6101
  br label %if.end114.loopexit, !dbg !6174

if.end114.loopexit:                               ; preds = %if.end114.loopexit.us-lcssa.us, %if.end114.loopexit.us-lcssa
  %target.addr.0.lcssa = phi %struct.rtx_def* [ %target.addr.0.lcssa49, %if.end114.loopexit.us-lcssa ], [ %target, %if.end114.loopexit.us-lcssa.us ]
  %retval.0.lcssa = phi %struct.rtx_def* [ %retval.0.lcssa47, %if.end114.loopexit.us-lcssa ], [ %retval.0.us.lcssa, %if.end114.loopexit.us-lcssa.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0.lcssa, metadata !6059, metadata !DIExpression()), !dbg !6101
  br label %if.end114, !dbg !6174

if.end114:                                        ; preds = %if.end114.loopexit, %if.end50
  %target.addr.4 = phi %struct.rtx_def* [ %target, %if.end50 ], [ %target.addr.0.lcssa, %if.end114.loopexit ]
  %retval.3 = phi %struct.rtx_def* [ undef, %if.end50 ], [ %retval.0.lcssa, %if.end114.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.4, metadata !6059, metadata !DIExpression()), !dbg !6101
  %cmp115 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 69), !dbg !6174
  %cmp118 = icmp eq i8 %0, 2, !dbg !6184
  %or.cond4 = and i1 %cmp115, %cmp118, !dbg !6185
  br i1 %or.cond4, label %land.lhs.true120, label %if.end167, !dbg !6185

land.lhs.true120:                                 ; preds = %if.end114
  %arrayidx122 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6186
  %10 = load i8, i8* %arrayidx122, align 1, !dbg !6186
  %cmp125 = icmp ugt i8 %10, 4, !dbg !6187
  br i1 %cmp125, label %land.lhs.true127, label %if.end167, !dbg !6188

land.lhs.true127:                                 ; preds = %land.lhs.true120
  %11 = load i32, i32* @word_mode, align 4, !dbg !6189
  %idxprom129 = sext i32 %11 to i64, !dbg !6189
  %insn_code131 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 69, i32 4, i64 %idxprom129, i32 0, !dbg !6190
  %12 = load i32, i32* %insn_code131, align 4, !dbg !6190
  %cmp132 = icmp eq i32 %12, 2956, !dbg !6191
  br i1 %cmp132, label %if.end167, label %if.then134, !dbg !6192

if.then134:                                       ; preds = %land.lhs.true127
  %cmp135 = icmp eq %struct.rtx_def* %target.addr.4, null, !dbg !6193
  %cmp138 = icmp eq %struct.rtx_def* %target.addr.4, %op0, !dbg !6195
  %or.cond5 = or i1 %cmp135, %cmp138, !dbg !6196
  br i1 %or.cond5, label %if.then140, label %if.end142, !dbg !6196

if.then140:                                       ; preds = %if.then134
  %call141 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !6197
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call141, metadata !6059, metadata !DIExpression()), !dbg !6101
  br label %if.end142, !dbg !6198

if.end142:                                        ; preds = %if.then134, %if.then140
  %target.addr.5 = phi %struct.rtx_def* [ %call141, %if.then140 ], [ %target.addr.4, %if.then134 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.5, metadata !6059, metadata !DIExpression()), !dbg !6101
  tail call void @start_sequence() #6, !dbg !6199
  call void @llvm.dbg.value(metadata i32 0, metadata !6073, metadata !DIExpression()), !dbg !6200
  br label %for.cond143, !dbg !6201

for.cond143:                                      ; preds = %for.inc161, %if.end142
  %i.0 = phi i32 [ 0, %if.end142 ], [ %inc, %for.inc161 ], !dbg !6202
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6073, metadata !DIExpression()), !dbg !6200
  %13 = load i8, i8* %arrayidx122, align 1, !dbg !6203
  %14 = lshr i8 %13, 2, !dbg !6204
  %div = zext i8 %14 to i32, !dbg !6204
  %cmp150 = icmp ult i32 %i.0, %div, !dbg !6205
  br i1 %cmp150, label %for.body152, label %for.end162, !dbg !6206

for.body152:                                      ; preds = %for.cond143
  %call153 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.5, i32 %i.0, i32 1, i32 %mode) #6, !dbg !6207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call153, metadata !6077, metadata !DIExpression()), !dbg !6208
  %15 = load i32, i32* @word_mode, align 4, !dbg !6209
  %call154 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 %i.0, i32 %mode) #6, !dbg !6210
  %call155 = tail call %struct.rtx_def* @expand_unop(i32 %15, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 69), %struct.rtx_def* %call154, %struct.rtx_def* %call153, i32 %unsignedp) #8, !dbg !6211
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call155, metadata !6081, metadata !DIExpression()), !dbg !6208
  %cmp156 = icmp eq %struct.rtx_def* %call153, %call155, !dbg !6212
  br i1 %cmp156, label %for.inc161, label %if.then158, !dbg !6214

if.then158:                                       ; preds = %for.body152
  %call159 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call153, %struct.rtx_def* %call155) #6, !dbg !6215
  br label %for.inc161, !dbg !6215

for.inc161:                                       ; preds = %for.body152, %if.then158
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6216
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6073, metadata !DIExpression()), !dbg !6200
  br label %for.cond143, !dbg !6217, !llvm.loop !6218

for.end162:                                       ; preds = %for.cond143
  %call163 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6220
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call163, metadata !6076, metadata !DIExpression()), !dbg !6200
  tail call void @end_sequence() #6, !dbg !6221
  %call164 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call163) #6, !dbg !6222
  br label %cleanup608

if.end167:                                        ; preds = %land.lhs.true127, %land.lhs.true120, %if.end114
  %code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %unoptab, i64 0, i32 0, !dbg !6223
  %16 = load i32, i32* %code, align 8, !dbg !6223
  %cmp168 = icmp eq i32 %16, 51, !dbg !6225
  br i1 %cmp168, label %if.then170, label %if.end289, !dbg !6226

if.then170:                                       ; preds = %if.end167
  %cmp174 = icmp eq i8 %0, 8, !dbg !6227
  br i1 %cmp174, label %if.then182, label %lor.lhs.false176, !dbg !6227

lor.lhs.false176:                                 ; preds = %if.then170
  %cmp180 = icmp eq i8 %0, 9, !dbg !6227
  br i1 %cmp180, label %if.then182, label %if.end187, !dbg !6230

if.then182:                                       ; preds = %lor.lhs.false176, %if.then170
  %call183 = tail call fastcc %struct.rtx_def* @expand_absneg_bit(i32 51, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target.addr.4) #8, !dbg !6231
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call183, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool184 = icmp eq %struct.rtx_def* %call183, null, !dbg !6233
  br i1 %tobool184, label %if.end187, label %cleanup608, !dbg !6235

if.end187:                                        ; preds = %if.then182, %lor.lhs.false176
  br i1 %cmp174, label %land.lhs.true211, label %lor.lhs.false193, !dbg !6236

lor.lhs.false193:                                 ; preds = %if.end187
  %cmp197 = icmp eq i8 %0, 9, !dbg !6236
  br i1 %cmp197, label %land.lhs.true211, label %lor.lhs.false199, !dbg !6236

lor.lhs.false199:                                 ; preds = %lor.lhs.false193
  %cmp203 = icmp eq i8 %0, 11, !dbg !6236
  br i1 %cmp203, label %land.lhs.true211, label %lor.lhs.false205, !dbg !6236

lor.lhs.false205:                                 ; preds = %lor.lhs.false199
  %cmp209 = icmp eq i8 %0, 17, !dbg !6236
  br i1 %cmp209, label %land.lhs.true211, label %if.then278, !dbg !6236

land.lhs.true211:                                 ; preds = %lor.lhs.false205, %lor.lhs.false199, %lor.lhs.false193, %if.end187
  br i1 %cmp174, label %cond.end, label %lor.lhs.false217, !dbg !6236

lor.lhs.false217:                                 ; preds = %land.lhs.true211
  %cmp221 = icmp eq i8 %0, 9, !dbg !6236
  br i1 %cmp221, label %cond.end, label %cond.false, !dbg !6236

cond.false:                                       ; preds = %lor.lhs.false217
  %arrayidx224 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !6236
  %17 = load i8, i8* %arrayidx224, align 1, !dbg !6236
  %.pre = zext i8 %17 to i64, !dbg !6236
  %arrayidx227.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre, !dbg !6238
  %.pre22 = load i8, i8* %arrayidx227.phi.trans.insert, align 1, !dbg !6236
  br label %cond.end, !dbg !6236

cond.end:                                         ; preds = %land.lhs.true211, %lor.lhs.false217, %cond.false
  %18 = phi i8 [ 8, %land.lhs.true211 ], [ 9, %lor.lhs.false217 ], [ %.pre22, %cond.false ], !dbg !6236
  %cmp229 = icmp eq i8 %18, 9, !dbg !6236
  br i1 %cmp229, label %cond.true231, label %cond.false250, !dbg !6236

cond.true231:                                     ; preds = %cond.end
  br i1 %cmp174, label %cond.end248, label %lor.lhs.false237, !dbg !6236

lor.lhs.false237:                                 ; preds = %cond.true231
  %cmp241 = icmp eq i8 %0, 9, !dbg !6236
  br i1 %cmp241, label %cond.end248, label %cond.false244, !dbg !6236

cond.false244:                                    ; preds = %lor.lhs.false237
  %arrayidx246 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !6236
  %19 = load i8, i8* %arrayidx246, align 1, !dbg !6236
  %conv247 = zext i8 %19 to i32, !dbg !6236
  br label %cond.end248, !dbg !6236

cond.end248:                                      ; preds = %cond.true231, %lor.lhs.false237, %cond.false244
  %cond249 = phi i32 [ %conv247, %cond.false244 ], [ %mode, %lor.lhs.false237 ], [ %mode, %cond.true231 ], !dbg !6236
  br label %cond.end270, !dbg !6236

cond.false250:                                    ; preds = %cond.end
  br i1 %cmp174, label %cond.end267, label %lor.lhs.false256, !dbg !6236

lor.lhs.false256:                                 ; preds = %cond.false250
  %cmp260 = icmp eq i8 %0, 9, !dbg !6236
  br i1 %cmp260, label %cond.end267, label %cond.false263, !dbg !6236

cond.false263:                                    ; preds = %lor.lhs.false256
  %arrayidx265 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !6236
  %20 = load i8, i8* %arrayidx265, align 1, !dbg !6236
  %conv266 = zext i8 %20 to i32, !dbg !6236
  br label %cond.end267, !dbg !6236

cond.end267:                                      ; preds = %cond.false250, %lor.lhs.false256, %cond.false263
  %cond268 = phi i32 [ %conv266, %cond.false263 ], [ %mode, %lor.lhs.false256 ], [ %mode, %cond.false250 ], !dbg !6236
  br label %cond.end270, !dbg !6236

cond.end270:                                      ; preds = %cond.end267, %cond.end248
  %cond271.in = phi i32 [ %cond249, %cond.end248 ], [ %cond268, %cond.end267 ]
  %cond271 = add i32 %cond271.in, -38, !dbg !6236
  %idxprom272 = zext i32 %cond271 to i64, !dbg !6236
  %arrayidx273 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom272, !dbg !6236
  %21 = load %struct.real_format*, %struct.real_format** %arrayidx273, align 8, !dbg !6236
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %21, i64 0, i32 14, !dbg !6236
  %22 = load i8, i8* %has_signed_zero, align 1, !dbg !6236
  %tobool275 = icmp ne i8 %22, 0, !dbg !6236
  %23 = load i32, i32* @flag_signed_zeros, align 4, !dbg !6236
  %tobool277 = icmp ne i32 %23, 0, !dbg !6236
  %or.cond6 = and i1 %tobool275, %tobool277, !dbg !6236
  br i1 %or.cond6, label %if.end289, label %if.then278, !dbg !6236

if.then278:                                       ; preds = %cond.end270, %lor.lhs.false205
  %cmp279 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 65), !dbg !6239
  %cond281 = select i1 %cmp279, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 15), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), !dbg !6241
  %idxprom282 = sext i32 %mode to i64, !dbg !6242
  %arrayidx283 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom282, !dbg !6242
  %24 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx283, align 8, !dbg !6242
  %call284 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* %cond281, %struct.rtx_def* %24, %struct.rtx_def* %op0, %struct.rtx_def* %target.addr.4, i32 %unsignedp, i32 0) #8, !dbg !6243
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call284, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool285 = icmp eq %struct.rtx_def* %call284, null, !dbg !6244
  br i1 %tobool285, label %if.end289, label %cleanup608, !dbg !6246

if.end289:                                        ; preds = %if.then278, %cond.end270, %if.end167
  %cmp290 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 74), !dbg !6247
  br i1 %cmp290, label %if.then292, label %if.end297, !dbg !6249

if.then292:                                       ; preds = %if.end289
  %call293 = tail call fastcc %struct.rtx_def* @expand_parity(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target.addr.4) #8, !dbg !6250
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call293, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool294 = icmp eq %struct.rtx_def* %call293, null, !dbg !6252
  br i1 %tobool294, label %if.end297, label %cleanup608, !dbg !6254

if.end297:                                        ; preds = %if.then292, %if.end289
  %cmp298 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 70), !dbg !6255
  br i1 %cmp298, label %if.then300, label %if.end305, !dbg !6257

if.then300:                                       ; preds = %if.end297
  %call301 = tail call fastcc %struct.rtx_def* @expand_ffs(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target.addr.4) #8, !dbg !6258
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call301, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool302 = icmp eq %struct.rtx_def* %call301, null, !dbg !6260
  br i1 %tobool302, label %if.end305, label %cleanup608, !dbg !6262

if.end305:                                        ; preds = %if.then300, %if.end297
  %cmp306 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 72), !dbg !6263
  br i1 %cmp306, label %if.then308, label %try_libcall, !dbg !6265

if.then308:                                       ; preds = %if.end305
  %call309 = tail call fastcc %struct.rtx_def* @expand_ctz(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target.addr.4) #8, !dbg !6266
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call309, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool310 = icmp eq %struct.rtx_def* %call309, null, !dbg !6268
  br i1 %tobool310, label %try_libcall, label %cleanup608, !dbg !6270

try_libcall:                                      ; preds = %if.then17, %land.lhs.true, %if.then44, %land.lhs.true37, %if.then308, %if.end305, %if.end30, %if.end6
  %target.addr.6 = phi %struct.rtx_def* [ %target, %if.then17 ], [ %target, %land.lhs.true ], [ %target, %if.end6 ], [ %target, %if.then44 ], [ %target, %land.lhs.true37 ], [ %target, %if.end30 ], [ %target.addr.4, %if.then308 ], [ %target.addr.4, %if.end305 ]
  %retval.4 = phi %struct.rtx_def* [ undef, %if.then17 ], [ undef, %land.lhs.true ], [ undef, %if.end6 ], [ undef, %if.then44 ], [ undef, %land.lhs.true37 ], [ undef, %if.end30 ], [ %retval.3, %if.then308 ], [ %retval.3, %if.end305 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.6, metadata !6059, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.label(metadata !6100), !dbg !6271
  %call314 = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* %unoptab, i32 %mode) #8, !dbg !6272
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call314, metadata !6064, metadata !DIExpression()), !dbg !6101
  %tobool315 = icmp eq %struct.rtx_def* %call314, null, !dbg !6273
  br i1 %tobool315, label %if.end385, label %if.then316, !dbg !6274

if.then316:                                       ; preds = %try_libcall
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6087, metadata !DIExpression()), !dbg !6275
  %cmp318 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 70), !dbg !6276
  %or.cond7 = or i1 %cmp318, %cmp, !dbg !6278
  %cmp324 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 72), !dbg !6279
  %or.cond8 = or i1 %or.cond7, %cmp324, !dbg !6278
  %cmp327 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 73), !dbg !6280
  %or.cond9 = or i1 %or.cond8, %cmp327, !dbg !6278
  %cmp330 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 74), !dbg !6281
  %or.cond10 = or i1 %or.cond9, %cmp330, !dbg !6278
  br i1 %or.cond10, label %if.then332, label %if.end348, !dbg !6278

if.then332:                                       ; preds = %if.then316
  %25 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64**), align 8, !dbg !6282
  %bf.load = load i64, i64* %25, align 8, !dbg !6282
  %bf.cast16 = and i64 %bf.load, 65535, !dbg !6282
  %cmp333 = icmp eq i64 %bf.cast16, 14, !dbg !6282
  br i1 %cmp333, label %cond.true335, label %cond.false337, !dbg !6282

cond.true335:                                     ; preds = %if.then332
  %.cast = bitcast i64* %25 to %union.tree_node*, !dbg !6282
  %call336 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !6282
  br label %cond.end341, !dbg !6282

cond.false337:                                    ; preds = %if.then332
  %type = bitcast i64* %25 to %struct.tree_type*, !dbg !6282
  %mode338 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !6282
  %bf.load339 = load i32, i32* %mode338, align 4, !dbg !6282
  %bf.lshr = lshr i32 %bf.load339, 16, !dbg !6282
  %bf.clear340 = and i32 %bf.lshr, 255, !dbg !6282
  br label %cond.end341, !dbg !6282

cond.end341:                                      ; preds = %cond.false337, %cond.true335
  %cond342 = phi i32 [ %call336, %cond.true335 ], [ %bf.clear340, %cond.false337 ], !dbg !6282
  %call343 = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* %unoptab, i32 %mode) #8, !dbg !6282
  %call344 = tail call %struct.rtx_def* @hard_libcall_value(i32 %cond342, %struct.rtx_def* %call343) #6, !dbg !6282
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call344, i64 0, i32 0, !dbg !6282
  %bf.load345 = load i32, i32* %26, align 8, !dbg !6282
  %bf.lshr346 = lshr i32 %bf.load345, 16, !dbg !6282
  %bf.clear347 = and i32 %bf.lshr346, 255, !dbg !6282
  call void @llvm.dbg.value(metadata i32 %bf.clear347, metadata !6087, metadata !DIExpression()), !dbg !6275
  %.pre23 = zext i32 %bf.clear347 to i64, !dbg !6283
  br label %if.end348, !dbg !6285

if.end348:                                        ; preds = %if.then316, %cond.end341
  %idxprom354.pre-phi = phi i64 [ %idxprom, %if.then316 ], [ %.pre23, %cond.end341 ], !dbg !6283
  %outmode.0 = phi i32 [ %mode, %if.then316 ], [ %bf.clear347, %cond.end341 ], !dbg !6275
  call void @llvm.dbg.value(metadata i32 %outmode.0, metadata !6087, metadata !DIExpression()), !dbg !6275
  tail call void @start_sequence() #6, !dbg !6286
  %call349 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) @emit_library_call_value(%struct.rtx_def* nonnull %call314, %struct.rtx_def* null, i32 1, i32 %outmode.0, i32 1, %struct.rtx_def* %op0, i32 %mode) #6, !dbg !6287
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call349, metadata !6085, metadata !DIExpression()), !dbg !6275
  %call350 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6288
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call350, metadata !6082, metadata !DIExpression()), !dbg !6275
  tail call void @end_sequence() #6, !dbg !6289
  %call351 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %outmode.0) #6, !dbg !6290
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call351, metadata !6059, metadata !DIExpression()), !dbg !6101
  %code352 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %unoptab, i64 0, i32 0, !dbg !6291
  %27 = load i32, i32* %code352, align 8, !dbg !6291
  %call353 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %27, i32 %mode, %struct.rtx_def* %op0) #6, !dbg !6291
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call353, metadata !6086, metadata !DIExpression()), !dbg !6275
  %arrayidx355 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom354.pre-phi, !dbg !6283
  %28 = load i8, i8* %arrayidx355, align 1, !dbg !6283
  %arrayidx359 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6292
  %29 = load i8, i8* %arrayidx359, align 1, !dbg !6292
  %cmp362 = icmp ult i8 %28, %29, !dbg !6293
  br i1 %cmp362, label %if.then364, label %if.else366, !dbg !6294

if.then364:                                       ; preds = %if.end348
  %call365 = tail call %struct.rtx_def* @simplify_gen_unary(i32 100, i32 %outmode.0, %struct.rtx_def* %call353, i32 %mode) #6, !dbg !6295
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call365, metadata !6086, metadata !DIExpression()), !dbg !6275
  br label %if.end380, !dbg !6296

if.else366:                                       ; preds = %if.end348
  %cmp375 = icmp ugt i8 %28, %29, !dbg !6297
  br i1 %cmp375, label %if.then377, label %if.end380, !dbg !6299

if.then377:                                       ; preds = %if.else366
  %call378 = tail call %struct.rtx_def* @simplify_gen_unary(i32 99, i32 %outmode.0, %struct.rtx_def* %call353, i32 %mode) #6, !dbg !6300
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call378, metadata !6086, metadata !DIExpression()), !dbg !6275
  br label %if.end380, !dbg !6301

if.end380:                                        ; preds = %if.else366, %if.then377, %if.then364
  %eq_value.1 = phi %struct.rtx_def* [ %call365, %if.then364 ], [ %call378, %if.then377 ], [ %call353, %if.else366 ], !dbg !6302
  call void @llvm.dbg.value(metadata %struct.rtx_def* %eq_value.1, metadata !6086, metadata !DIExpression()), !dbg !6275
  tail call void @emit_libcall_block(%struct.rtx_def* %call350, %struct.rtx_def* %call351, %struct.rtx_def* %call349, %struct.rtx_def* %eq_value.1) #8, !dbg !6303
  br label %cleanup608

if.end385:                                        ; preds = %try_libcall
  switch i8 %0, label %if.end491 [
    i8 2, label %if.then409
    i8 8, label %if.then409
    i8 9, label %if.then409
    i8 11, label %if.then409
    i8 4, label %if.then409
    i8 5, label %if.then409
    i8 6, label %if.then409
    i8 7, label %if.then409
  ], !dbg !6304

if.then409:                                       ; preds = %if.end385, %if.end385, %if.end385, %if.end385, %if.end385, %if.end385, %if.end385, %if.end385
  %cmp430 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 64), !dbg !6305
  %cmp433 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 69), !dbg !6305
  %or.cond11 = or i1 %cmp430, %cmp433, !dbg !6305
  %cmp436 = icmp eq i8 %0, 2, !dbg !6305
  %spec.select14 = and i1 %or.cond11, %cmp436, !dbg !6305
  %land.ext439 = zext i1 %spec.select14 to i32, !dbg !6305
  %arrayidx456 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6306
  br i1 %cmp, label %if.then409.split.us, label %if.then409.if.then409.split_crit_edge, !dbg !6308

if.then409.if.then409.split_crit_edge:            ; preds = %if.then409
  br label %for.cond413, !dbg !6308

if.then409.split.us:                              ; preds = %if.then409
  br label %for.cond413.us, !dbg !6308

for.cond413.us:                                   ; preds = %for.inc486.us, %if.then409.split.us
  %idxprom410.pn.us = phi i64 [ %idxprom, %if.then409.split.us ], [ %idxprom418.us, %for.inc486.us ]
  %target.addr.7.us = phi %struct.rtx_def* [ %target.addr.6, %if.then409.split.us ], [ %target.addr.10.us, %for.inc486.us ]
  %retval.5.us = phi %struct.rtx_def* [ %retval.4, %if.then409.split.us ], [ %retval.7.us, %for.inc486.us ]
  %wider_mode.1.in.in.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom410.pn.us, !dbg !6309
  %wider_mode.1.in.us = load i8, i8* %wider_mode.1.in.in.us, align 1, !dbg !6309
  %wider_mode.1.us = zext i8 %wider_mode.1.in.us to i32, !dbg !6309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.7.us, metadata !6059, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i32 %wider_mode.1.us, metadata !6062, metadata !DIExpression()), !dbg !6101
  %cmp414.us = icmp eq i8 %wider_mode.1.in.us, 0, !dbg !6310
  br i1 %cmp414.us, label %if.end491.loopexit.us-lcssa.us, label %for.body416.us, !dbg !6311

for.body416.us:                                   ; preds = %for.cond413.us
  %idxprom418.us = zext i8 %wider_mode.1.in.us to i64, !dbg !6312
  %insn_code420.us = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71, i32 4, i64 %idxprom418.us, i32 0, !dbg !6313
  %30 = load i32, i32* %insn_code420.us, align 4, !dbg !6313
  %cmp421.us = icmp eq i32 %30, 2956, !dbg !6314
  br i1 %cmp421.us, label %lor.lhs.false423.us, label %if.then426.us, !dbg !6315

lor.lhs.false423.us:                              ; preds = %for.body416.us
  %call424.us = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71), i32 %wider_mode.1.us) #8, !dbg !6316
  %tobool425.us = icmp eq %struct.rtx_def* %call424.us, null, !dbg !6316
  br i1 %tobool425.us, label %for.inc486.us, label %if.then426.us, !dbg !6317

if.then426.us:                                    ; preds = %lor.lhs.false423.us, %for.body416.us
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6088, metadata !DIExpression()), !dbg !6305
  %call429.us = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call429.us, metadata !6096, metadata !DIExpression()), !dbg !6305
  %call440.us = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0, i32 %wider_mode.1.us, i32 %mode, i32 %unsignedp, i32 %land.ext439) #8, !dbg !6319
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call440.us, metadata !6088, metadata !DIExpression()), !dbg !6305
  %call441.us = tail call %struct.rtx_def* @expand_unop(i32 %wider_mode.1.us, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71), %struct.rtx_def* %call440.us, %struct.rtx_def* null, i32 %unsignedp) #8, !dbg !6320
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call441.us, metadata !6063, metadata !DIExpression()), !dbg !6101
  %cmp445.us = icmp eq %struct.rtx_def* %call441.us, null, !dbg !6321
  br i1 %cmp445.us, label %if.end466.us, label %if.then447.us, !dbg !6322

if.then447.us:                                    ; preds = %if.then426.us
  %arrayidx449.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom418.us, !dbg !6323
  %31 = load i8, i8* %arrayidx449.us, align 1, !dbg !6323
  %conv451.us = zext i8 %31 to i32, !dbg !6323
  %32 = load i8, i8* %arrayidx456, align 1, !dbg !6323
  %conv458.us = zext i8 %32 to i32, !dbg !6323
  %mul45215.us = sub nsw i32 %conv451.us, %conv458.us, !dbg !6323
  %sub462.us = shl nsw i32 %mul45215.us, 3, !dbg !6323
  %conv463.us = sext i32 %sub462.us to i64, !dbg !6323
  %call464.us = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv463.us) #6, !dbg !6323
  %call465.us = tail call %struct.rtx_def* @expand_binop(i32 %wider_mode.1.us, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.rtx_def* nonnull %call441.us, %struct.rtx_def* %call464.us, %struct.rtx_def* %target.addr.7.us, i32 1, i32 0) #8, !dbg !6324
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call465.us, metadata !6063, metadata !DIExpression()), !dbg !6101
  br label %if.end466.us, !dbg !6325

if.end466.us:                                     ; preds = %if.then426.us, %if.then447.us
  %temp.0.us = phi %struct.rtx_def* [ %call465.us, %if.then447.us ], [ null, %if.then426.us ], !dbg !6305
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0.us, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool467.us = icmp eq %struct.rtx_def* %temp.0.us, null, !dbg !6326
  br i1 %tobool467.us, label %if.else479.us, label %if.then468.us, !dbg !6328

if.then468.us:                                    ; preds = %if.end466.us
  br i1 %cmp436, label %if.else477.us, label %if.then471.us, !dbg !6329

if.then471.us:                                    ; preds = %if.then468.us
  %cmp472.us = icmp eq %struct.rtx_def* %target.addr.7.us, null, !dbg !6331
  br i1 %cmp472.us, label %if.then474.us, label %if.end476.us, !dbg !6335

if.then474.us:                                    ; preds = %if.then471.us
  %call475.us = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !6336
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call475.us, metadata !6059, metadata !DIExpression()), !dbg !6101
  br label %if.end476.us, !dbg !6337

if.end476.us:                                     ; preds = %if.then474.us, %if.then471.us
  %target.addr.8.us = phi %struct.rtx_def* [ %call475.us, %if.then474.us ], [ %target.addr.7.us, %if.then471.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.8.us, metadata !6059, metadata !DIExpression()), !dbg !6101
  tail call void @convert_move(%struct.rtx_def* %target.addr.8.us, %struct.rtx_def* nonnull %temp.0.us, i32 0) #6, !dbg !6338
  br label %cleanup481.us, !dbg !6339

if.else477.us:                                    ; preds = %if.then468.us
  %33 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !6340
  %call478.us = tail call %struct.rtx_def* %33(i32 %mode, %struct.rtx_def* nonnull %temp.0.us) #6, !dbg !6340
  br label %cleanup481.us, !dbg !6341

if.else479.us:                                    ; preds = %if.end466.us
  tail call void @delete_insns_since(%struct.rtx_def* %call429.us) #6, !dbg !6342
  br label %cleanup481.us, !dbg !6343

cleanup481.us:                                    ; preds = %if.else479.us, %if.else477.us, %if.end476.us
  %cleanup.dest.slot.1.us = phi i1 [ false, %if.end476.us ], [ false, %if.else477.us ], [ true, %if.else479.us ]
  %target.addr.9.us = phi %struct.rtx_def* [ %target.addr.8.us, %if.end476.us ], [ %target.addr.7.us, %if.else477.us ], [ %target.addr.7.us, %if.else479.us ]
  %retval.6.us = phi %struct.rtx_def* [ %target.addr.8.us, %if.end476.us ], [ %call478.us, %if.else477.us ], [ %retval.5.us, %if.else479.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.9.us, metadata !6059, metadata !DIExpression()), !dbg !6101
  br i1 %cleanup.dest.slot.1.us, label %for.inc486.us, label %cleanup608.loopexit.us-lcssa.us

for.inc486.us:                                    ; preds = %cleanup481.us, %lor.lhs.false423.us
  %target.addr.10.us = phi %struct.rtx_def* [ %target.addr.7.us, %lor.lhs.false423.us ], [ %target.addr.9.us, %cleanup481.us ]
  %retval.7.us = phi %struct.rtx_def* [ %retval.5.us, %lor.lhs.false423.us ], [ %retval.6.us, %cleanup481.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.10.us, metadata !6059, metadata !DIExpression()), !dbg !6101
  br label %for.cond413.us, !dbg !6344, !llvm.loop !6345

if.end491.loopexit.us-lcssa.us:                   ; preds = %for.cond413.us
  %target.addr.7.us.lcssa = phi %struct.rtx_def* [ %target.addr.7.us, %for.cond413.us ]
  %retval.5.us.lcssa = phi %struct.rtx_def* [ %retval.5.us, %for.cond413.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.7.us.lcssa, metadata !6059, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.7.us.lcssa, metadata !6059, metadata !DIExpression()), !dbg !6101
  br label %if.end491.loopexit, !dbg !6347

cleanup608.loopexit.us-lcssa.us:                  ; preds = %cleanup481.us
  %retval.6.us.lcssa = phi %struct.rtx_def* [ %retval.6.us, %cleanup481.us ]
  br label %cleanup608.loopexit, !dbg !6175

for.cond413:                                      ; preds = %for.inc486, %if.then409.if.then409.split_crit_edge
  %idxprom410.pn = phi i64 [ %idxprom, %if.then409.if.then409.split_crit_edge ], [ %idxprom418, %for.inc486 ]
  %target.addr.7 = phi %struct.rtx_def* [ %target.addr.6, %if.then409.if.then409.split_crit_edge ], [ %target.addr.10, %for.inc486 ]
  %retval.5 = phi %struct.rtx_def* [ %retval.4, %if.then409.if.then409.split_crit_edge ], [ %retval.7, %for.inc486 ]
  %wider_mode.1.in.in = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom410.pn, !dbg !6309
  %wider_mode.1.in = load i8, i8* %wider_mode.1.in.in, align 1, !dbg !6309
  %wider_mode.1 = zext i8 %wider_mode.1.in to i32, !dbg !6309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.7, metadata !6059, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i32 %wider_mode.1, metadata !6062, metadata !DIExpression()), !dbg !6101
  %cmp414 = icmp eq i8 %wider_mode.1.in, 0, !dbg !6310
  br i1 %cmp414, label %if.end491.loopexit.us-lcssa, label %for.body416, !dbg !6311

for.body416:                                      ; preds = %for.cond413
  %idxprom418 = zext i8 %wider_mode.1.in to i64, !dbg !6312
  %insn_code420 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %unoptab, i64 0, i32 4, i64 %idxprom418, i32 0, !dbg !6313
  %34 = load i32, i32* %insn_code420, align 4, !dbg !6313
  %cmp421 = icmp eq i32 %34, 2956, !dbg !6314
  br i1 %cmp421, label %lor.lhs.false423, label %if.then426, !dbg !6315

lor.lhs.false423:                                 ; preds = %for.body416
  %call424 = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* %unoptab, i32 %wider_mode.1) #8, !dbg !6316
  %tobool425 = icmp eq %struct.rtx_def* %call424, null, !dbg !6316
  br i1 %tobool425, label %for.inc486, label %if.then426, !dbg !6317

if.then426:                                       ; preds = %lor.lhs.false423, %for.body416
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6088, metadata !DIExpression()), !dbg !6305
  %call429 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call429, metadata !6096, metadata !DIExpression()), !dbg !6305
  %call440 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0, i32 %wider_mode.1, i32 %mode, i32 %unsignedp, i32 %land.ext439) #8, !dbg !6319
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call440, metadata !6088, metadata !DIExpression()), !dbg !6305
  %call441 = tail call %struct.rtx_def* @expand_unop(i32 %wider_mode.1, %struct.optab_d* %unoptab, %struct.rtx_def* %call440, %struct.rtx_def* null, i32 %unsignedp) #8, !dbg !6320
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call441, metadata !6063, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call441, metadata !6063, metadata !DIExpression()), !dbg !6101
  %tobool467 = icmp eq %struct.rtx_def* %call441, null, !dbg !6326
  br i1 %tobool467, label %if.else479, label %if.then468, !dbg !6328

if.then468:                                       ; preds = %if.then426
  br i1 %cmp436, label %if.else477, label %if.then471, !dbg !6329

if.then471:                                       ; preds = %if.then468
  %cmp472 = icmp eq %struct.rtx_def* %target.addr.7, null, !dbg !6331
  br i1 %cmp472, label %if.then474, label %if.end476, !dbg !6335

if.then474:                                       ; preds = %if.then471
  %call475 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !6336
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call475, metadata !6059, metadata !DIExpression()), !dbg !6101
  br label %if.end476, !dbg !6337

if.end476:                                        ; preds = %if.then474, %if.then471
  %target.addr.8 = phi %struct.rtx_def* [ %call475, %if.then474 ], [ %target.addr.7, %if.then471 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.8, metadata !6059, metadata !DIExpression()), !dbg !6101
  tail call void @convert_move(%struct.rtx_def* %target.addr.8, %struct.rtx_def* nonnull %call441, i32 0) #6, !dbg !6338
  br label %cleanup481, !dbg !6339

if.else477:                                       ; preds = %if.then468
  %35 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !6340
  %call478 = tail call %struct.rtx_def* %35(i32 %mode, %struct.rtx_def* nonnull %call441) #6, !dbg !6340
  br label %cleanup481, !dbg !6341

if.else479:                                       ; preds = %if.then426
  tail call void @delete_insns_since(%struct.rtx_def* %call429) #6, !dbg !6342
  br label %cleanup481, !dbg !6343

cleanup481:                                       ; preds = %if.else479, %if.else477, %if.end476
  %cleanup.dest.slot.1 = phi i1 [ false, %if.end476 ], [ false, %if.else477 ], [ true, %if.else479 ]
  %target.addr.9 = phi %struct.rtx_def* [ %target.addr.8, %if.end476 ], [ %target.addr.7, %if.else477 ], [ %target.addr.7, %if.else479 ]
  %retval.6 = phi %struct.rtx_def* [ %target.addr.8, %if.end476 ], [ %call478, %if.else477 ], [ %retval.5, %if.else479 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.9, metadata !6059, metadata !DIExpression()), !dbg !6101
  br i1 %cleanup.dest.slot.1, label %for.inc486, label %cleanup608.loopexit.us-lcssa

for.inc486:                                       ; preds = %lor.lhs.false423, %cleanup481
  %target.addr.10 = phi %struct.rtx_def* [ %target.addr.7, %lor.lhs.false423 ], [ %target.addr.9, %cleanup481 ]
  %retval.7 = phi %struct.rtx_def* [ %retval.5, %lor.lhs.false423 ], [ %retval.6, %cleanup481 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.10, metadata !6059, metadata !DIExpression()), !dbg !6101
  br label %for.cond413, !dbg !6344, !llvm.loop !6345

if.end491.loopexit.us-lcssa:                      ; preds = %for.cond413
  %target.addr.7.lcssa43 = phi %struct.rtx_def* [ %target.addr.7, %for.cond413 ]
  %retval.5.lcssa41 = phi %struct.rtx_def* [ %retval.5, %for.cond413 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.7.lcssa43, metadata !6059, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.7.lcssa43, metadata !6059, metadata !DIExpression()), !dbg !6101
  br label %if.end491.loopexit, !dbg !6347

if.end491.loopexit:                               ; preds = %if.end491.loopexit.us-lcssa.us, %if.end491.loopexit.us-lcssa
  %target.addr.7.lcssa = phi %struct.rtx_def* [ %target.addr.7.lcssa43, %if.end491.loopexit.us-lcssa ], [ %target.addr.7.us.lcssa, %if.end491.loopexit.us-lcssa.us ]
  %retval.5.lcssa = phi %struct.rtx_def* [ %retval.5.lcssa41, %if.end491.loopexit.us-lcssa ], [ %retval.5.us.lcssa, %if.end491.loopexit.us-lcssa.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.7.lcssa, metadata !6059, metadata !DIExpression()), !dbg !6101
  br label %if.end491, !dbg !6347

if.end491:                                        ; preds = %if.end491.loopexit, %if.end385
  %target.addr.11 = phi %struct.rtx_def* [ %target.addr.6, %if.end385 ], [ %target.addr.7.lcssa, %if.end491.loopexit ]
  %retval.8 = phi %struct.rtx_def* [ %retval.4, %if.end385 ], [ %retval.5.lcssa, %if.end491.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.11, metadata !6059, metadata !DIExpression()), !dbg !6101
  %code492 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %unoptab, i64 0, i32 0, !dbg !6347
  %36 = load i32, i32* %code492, align 8, !dbg !6347
  %cmp493 = icmp eq i32 %36, 51, !dbg !6348
  br i1 %cmp493, label %land.lhs.true495, label %if.end607, !dbg !6349

land.lhs.true495:                                 ; preds = %if.end491
  %cmp499 = icmp eq i8 %0, 8, !dbg !6350
  br i1 %cmp499, label %land.lhs.true519, label %lor.lhs.false501, !dbg !6350

lor.lhs.false501:                                 ; preds = %land.lhs.true495
  %cmp505 = icmp eq i8 %0, 9, !dbg !6350
  br i1 %cmp505, label %land.lhs.true519, label %lor.lhs.false507, !dbg !6350

lor.lhs.false507:                                 ; preds = %lor.lhs.false501
  %cmp511 = icmp eq i8 %0, 11, !dbg !6350
  br i1 %cmp511, label %land.lhs.true519, label %lor.lhs.false513, !dbg !6350

lor.lhs.false513:                                 ; preds = %lor.lhs.false507
  %cmp517 = icmp eq i8 %0, 17, !dbg !6350
  br i1 %cmp517, label %land.lhs.true519, label %if.then593, !dbg !6350

land.lhs.true519:                                 ; preds = %lor.lhs.false513, %lor.lhs.false507, %lor.lhs.false501, %land.lhs.true495
  br i1 %cmp499, label %cond.end536, label %lor.lhs.false525, !dbg !6350

lor.lhs.false525:                                 ; preds = %land.lhs.true519
  %cmp529 = icmp eq i8 %0, 9, !dbg !6350
  br i1 %cmp529, label %cond.end536, label %cond.false532, !dbg !6350

cond.false532:                                    ; preds = %lor.lhs.false525
  %arrayidx534 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !6350
  %37 = load i8, i8* %arrayidx534, align 1, !dbg !6350
  %.pre24 = zext i8 %37 to i64, !dbg !6350
  %arrayidx539.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre24, !dbg !6351
  %.pre25 = load i8, i8* %arrayidx539.phi.trans.insert, align 1, !dbg !6350
  %phitmp = icmp eq i8 %.pre25, 9, !dbg !6350
  br label %cond.end536, !dbg !6350

cond.end536:                                      ; preds = %land.lhs.true519, %lor.lhs.false525, %cond.false532
  %38 = phi i1 [ false, %land.lhs.true519 ], [ true, %lor.lhs.false525 ], [ %phitmp, %cond.false532 ]
  br i1 %38, label %cond.true543, label %cond.false564, !dbg !6350

cond.true543:                                     ; preds = %cond.end536
  br i1 %cmp499, label %cond.end560, label %lor.lhs.false549, !dbg !6350

lor.lhs.false549:                                 ; preds = %cond.true543
  %cmp553 = icmp eq i8 %0, 9, !dbg !6350
  br i1 %cmp553, label %cond.end560, label %cond.false556, !dbg !6350

cond.false556:                                    ; preds = %lor.lhs.false549
  %arrayidx558 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !6350
  %39 = load i8, i8* %arrayidx558, align 1, !dbg !6350
  %conv559 = zext i8 %39 to i32, !dbg !6350
  br label %cond.end560, !dbg !6350

cond.end560:                                      ; preds = %cond.true543, %lor.lhs.false549, %cond.false556
  %cond561 = phi i32 [ %conv559, %cond.false556 ], [ %mode, %lor.lhs.false549 ], [ %mode, %cond.true543 ], !dbg !6350
  br label %cond.end584, !dbg !6350

cond.false564:                                    ; preds = %cond.end536
  br i1 %cmp499, label %cond.end581, label %lor.lhs.false570, !dbg !6350

lor.lhs.false570:                                 ; preds = %cond.false564
  %cmp574 = icmp eq i8 %0, 9, !dbg !6350
  br i1 %cmp574, label %cond.end581, label %cond.false577, !dbg !6350

cond.false577:                                    ; preds = %lor.lhs.false570
  %arrayidx579 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !6350
  %40 = load i8, i8* %arrayidx579, align 1, !dbg !6350
  %conv580 = zext i8 %40 to i32, !dbg !6350
  br label %cond.end581, !dbg !6350

cond.end581:                                      ; preds = %cond.false564, %lor.lhs.false570, %cond.false577
  %cond582 = phi i32 [ %conv580, %cond.false577 ], [ %mode, %lor.lhs.false570 ], [ %mode, %cond.false564 ], !dbg !6350
  br label %cond.end584, !dbg !6350

cond.end584:                                      ; preds = %cond.end581, %cond.end560
  %cond585.in = phi i32 [ %cond561, %cond.end560 ], [ %cond582, %cond.end581 ]
  %cond585 = add i32 %cond585.in, -38, !dbg !6350
  %idxprom586 = zext i32 %cond585 to i64, !dbg !6350
  %arrayidx587 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom586, !dbg !6350
  %41 = load %struct.real_format*, %struct.real_format** %arrayidx587, align 8, !dbg !6350
  %has_signed_zero588 = getelementptr inbounds %struct.real_format, %struct.real_format* %41, i64 0, i32 14, !dbg !6350
  %42 = load i8, i8* %has_signed_zero588, align 1, !dbg !6350
  %tobool590 = icmp ne i8 %42, 0, !dbg !6350
  %43 = load i32, i32* @flag_signed_zeros, align 4, !dbg !6350
  %tobool592 = icmp ne i32 %43, 0, !dbg !6350
  %or.cond13 = and i1 %tobool590, %tobool592, !dbg !6350
  br i1 %or.cond13, label %if.end607, label %if.then593, !dbg !6350

if.then593:                                       ; preds = %cond.end584, %lor.lhs.false513
  %cmp595 = icmp eq %struct.optab_d* %unoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 65), !dbg !6352
  %cond597 = select i1 %cmp595, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 15), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), !dbg !6353
  %idxprom598 = sext i32 %mode to i64, !dbg !6354
  %arrayidx599 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom598, !dbg !6354
  %44 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx599, align 8, !dbg !6354
  %call600 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* %cond597, %struct.rtx_def* %44, %struct.rtx_def* %op0, %struct.rtx_def* %target.addr.11, i32 %unsignedp, i32 3) #8, !dbg !6355
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call600, metadata !6097, metadata !DIExpression()), !dbg !6356
  %tobool601 = icmp ne %struct.rtx_def* %call600, null, !dbg !6357
  %call600.retval.8 = select i1 %tobool601, %struct.rtx_def* %call600, %struct.rtx_def* %retval.8, !dbg !6351
  br i1 %tobool601, label %cleanup608, label %if.end607

if.end607:                                        ; preds = %if.then593, %cond.end584, %if.end491
  br label %cleanup608, !dbg !6359

cleanup608.loopexit.us-lcssa:                     ; preds = %cleanup481
  %retval.6.lcssa45 = phi %struct.rtx_def* [ %retval.6, %cleanup481 ]
  br label %cleanup608.loopexit, !dbg !6175

cleanup608.loopexit:                              ; preds = %cleanup608.loopexit.us-lcssa.us, %cleanup608.loopexit.us-lcssa
  %retval.6.lcssa = phi %struct.rtx_def* [ %retval.6.lcssa45, %cleanup608.loopexit.us-lcssa ], [ %retval.6.us.lcssa, %cleanup608.loopexit.us-lcssa.us ]
  br label %cleanup608, !dbg !6175

cleanup608.loopexit17.us-lcssa:                   ; preds = %cleanup
  %retval.1.lcssa51 = phi %struct.rtx_def* [ %retval.1, %cleanup ]
  br label %cleanup608.loopexit17, !dbg !6175

cleanup608.loopexit17:                            ; preds = %cleanup608.loopexit17.us-lcssa.us, %cleanup608.loopexit17.us-lcssa
  %retval.1.lcssa = phi %struct.rtx_def* [ %retval.1.lcssa51, %cleanup608.loopexit17.us-lcssa ], [ %retval.1.us.lcssa, %cleanup608.loopexit17.us-lcssa.us ]
  br label %cleanup608, !dbg !6175

cleanup608:                                       ; preds = %cleanup608.loopexit17, %cleanup608.loopexit, %if.then17, %if.then2, %if.then44, %if.then26, %if.then182, %if.then278, %if.then292, %if.then300, %if.then308, %if.then593, %entry, %if.end607, %if.end380, %for.end162
  %retval.10 = phi %struct.rtx_def* [ %call351, %if.end380 ], [ null, %if.end607 ], [ %call600.retval.8, %if.then593 ], [ %target.addr.5, %for.end162 ], [ %call, %entry ], [ %call3, %if.then2 ], [ %call18, %if.then17 ], [ %call27, %if.then26 ], [ %call45, %if.then44 ], [ %call183, %if.then182 ], [ %call284, %if.then278 ], [ %call293, %if.then292 ], [ %call301, %if.then300 ], [ %call309, %if.then308 ], [ %retval.6.lcssa, %cleanup608.loopexit ], [ %retval.1.lcssa, %cleanup608.loopexit17 ], !dbg !6101
  ret %struct.rtx_def* %retval.10, !dbg !6175
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_unop_direct(i32 %mode, %struct.optab_d* %unoptab, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %unsignedp) unnamed_addr #4 !dbg !6360 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6362, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata %struct.optab_d* %unoptab, metadata !6363, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6364, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6365, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !6366, metadata !DIExpression()), !dbg !6375
  %idxprom = sext i32 %mode to i64, !dbg !6376
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %unoptab, i64 0, i32 4, i64 %idxprom, i32 0, !dbg !6377
  %0 = load i32, i32* %insn_code, align 4, !dbg !6377
  %cmp = icmp eq i32 %0, 2956, !dbg !6378
  br i1 %cmp, label %if.end75, label %if.then, !dbg !6379

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %0, metadata !6367, metadata !DIExpression()), !dbg !6380
  %idxprom5 = sext i32 %0 to i64, !dbg !6381
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom5, i32 3, !dbg !6382
  %1 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !6382
  %mode8 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 1, i32 2, !dbg !6383
  %bf.load = load i16, i16* %mode8, align 8, !dbg !6383
  %bf.cast = zext i16 %bf.load to i32, !dbg !6383
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !6370, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6371, metadata !DIExpression()), !dbg !6380
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6384
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6372, metadata !DIExpression()), !dbg !6380
  %tobool = icmp eq %struct.rtx_def* %target, null, !dbg !6385
  br i1 %tobool, label %if.else, label %if.end, !dbg !6387

if.else:                                          ; preds = %if.then
  %call10 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !6388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !6374, metadata !DIExpression()), !dbg !6380
  br label %if.end

if.end:                                           ; preds = %if.then, %if.else
  %temp.0 = phi %struct.rtx_def* [ %call10, %if.else ], [ %target, %if.then ], !dbg !6389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !6374, metadata !DIExpression()), !dbg !6380
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0, i64 0, i32 0, !dbg !6390
  %bf.load11 = load i32, i32* %2, align 8, !dbg !6390
  %bf.clear = and i32 %bf.load11, 16711680, !dbg !6390
  %cmp12 = icmp eq i32 %bf.clear, 0, !dbg !6392
  br i1 %cmp12, label %if.end19, label %land.lhs.true, !dbg !6393

land.lhs.true:                                    ; preds = %if.end
  %bf.lshr14 = lshr i32 %bf.load11, 16, !dbg !6394
  %bf.clear15 = and i32 %bf.lshr14, 255, !dbg !6394
  %cmp16 = icmp eq i32 %bf.clear15, %bf.cast, !dbg !6395
  br i1 %cmp16, label %if.end19, label %if.then17, !dbg !6396

if.then17:                                        ; preds = %land.lhs.true
  %call18 = tail call %struct.rtx_def* @convert_to_mode(i32 %bf.cast, %struct.rtx_def* %op0, i32 %unsignedp) #6, !dbg !6397
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call18, metadata !6371, metadata !DIExpression()), !dbg !6380
  br label %if.end19, !dbg !6398

if.end19:                                         ; preds = %land.lhs.true, %if.end, %if.then17
  %xop0.0 = phi %struct.rtx_def* [ %call18, %if.then17 ], [ %op0, %land.lhs.true ], [ %op0, %if.end ], !dbg !6380
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.0, metadata !6371, metadata !DIExpression()), !dbg !6380
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 1, i32 0, !dbg !6399
  %3 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !6399
  %call24 = tail call i32 %3(%struct.rtx_def* %xop0.0, i32 %bf.cast) #6, !dbg !6401
  %tobool25 = icmp eq i32 %call24, 0, !dbg !6401
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !6402

if.then26:                                        ; preds = %if.end19
  %call27 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %xop0.0) #6, !dbg !6403
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call27, metadata !6371, metadata !DIExpression()), !dbg !6380
  br label %if.end28, !dbg !6404

if.end28:                                         ; preds = %if.end19, %if.then26
  %xop0.1 = phi %struct.rtx_def* [ %xop0.0, %if.end19 ], [ %call27, %if.then26 ], !dbg !6380
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xop0.1, metadata !6371, metadata !DIExpression()), !dbg !6380
  %predicate33 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 0, i32 0, !dbg !6405
  %4 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate33, align 8, !dbg !6405
  %call34 = tail call i32 %4(%struct.rtx_def* %temp.0, i32 %mode) #6, !dbg !6407
  %tobool35 = icmp eq i32 %call34, 0, !dbg !6407
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !6408

if.then36:                                        ; preds = %if.end28
  %call37 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !6409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !6374, metadata !DIExpression()), !dbg !6380
  br label %if.end38, !dbg !6410

if.end38:                                         ; preds = %if.end28, %if.then36
  %temp.1 = phi %struct.rtx_def* [ %temp.0, %if.end28 ], [ %call37, %if.then36 ], !dbg !6380
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.1, metadata !6374, metadata !DIExpression()), !dbg !6380
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom5, i32 2, !dbg !6411
  %5 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !6411
  %call41 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %5(%struct.rtx_def* %temp.1, %struct.rtx_def* %xop0.1) #6, !dbg !6411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call41, metadata !6373, metadata !DIExpression()), !dbg !6380
  %tobool42 = icmp eq %struct.rtx_def* %call41, null, !dbg !6412
  br i1 %tobool42, label %if.else68, label %if.then43, !dbg !6414

if.then43:                                        ; preds = %if.end38
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call41, i64 0, i32 0, !dbg !6415
  %bf.load44 = load i32, i32* %6, align 8, !dbg !6415
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !6415
  %cmp46 = icmp eq i32 %bf.clear45, 8, !dbg !6415
  br i1 %cmp46, label %land.lhs.true58, label %lor.lhs.false, !dbg !6415

lor.lhs.false:                                    ; preds = %if.then43
  %cmp49 = icmp eq i32 %bf.clear45, 7, !dbg !6415
  br i1 %cmp49, label %land.lhs.true58, label %lor.lhs.false50, !dbg !6415

lor.lhs.false50:                                  ; preds = %lor.lhs.false
  %cmp53 = icmp eq i32 %bf.clear45, 9, !dbg !6415
  br i1 %cmp53, label %land.lhs.true58, label %lor.lhs.false54, !dbg !6415

lor.lhs.false54:                                  ; preds = %lor.lhs.false50
  %cmp57 = icmp eq i32 %bf.clear45, 10, !dbg !6415
  br i1 %cmp57, label %land.lhs.true58, label %if.end66, !dbg !6418

land.lhs.true58:                                  ; preds = %lor.lhs.false54, %lor.lhs.false50, %lor.lhs.false, %if.then43
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call41, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6419
  %rt_rtx = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !6419
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6419
  %cmp60 = icmp eq %struct.rtx_def* %8, null, !dbg !6420
  br i1 %cmp60, label %if.end66, label %land.lhs.true61, !dbg !6421

land.lhs.true61:                                  ; preds = %land.lhs.true58
  %code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %unoptab, i64 0, i32 0, !dbg !6422
  %9 = load i32, i32* %code, align 8, !dbg !6422
  %call62 = tail call fastcc i32 @add_equal_note(%struct.rtx_def* nonnull %call41, %struct.rtx_def* %temp.1, i32 %9, %struct.rtx_def* %xop0.1, %struct.rtx_def* null) #8, !dbg !6423
  %tobool63 = icmp eq i32 %call62, 0, !dbg !6423
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !6424

if.then64:                                        ; preds = %land.lhs.true61
  tail call void @delete_insns_since(%struct.rtx_def* %call) #6, !dbg !6425
  %call65 = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab_d* %unoptab, %struct.rtx_def* %op0, %struct.rtx_def* null, i32 %unsignedp) #8, !dbg !6427
  br label %cleanup, !dbg !6428

if.end66:                                         ; preds = %land.lhs.true61, %land.lhs.true58, %lor.lhs.false54
  %call67 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %call41) #6, !dbg !6429
  br label %cleanup, !dbg !6430

if.else68:                                        ; preds = %if.end38
  tail call void @delete_insns_since(%struct.rtx_def* %call) #6, !dbg !6431
  br label %cleanup, !dbg !6432

cleanup:                                          ; preds = %if.else68, %if.end66, %if.then64
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end66 ], [ false, %if.then64 ], [ true, %if.else68 ]
  %retval.0 = phi %struct.rtx_def* [ %temp.1, %if.end66 ], [ %call65, %if.then64 ], [ undef, %if.else68 ]
  br i1 %cleanup.dest.slot.0, label %if.end75, label %return

if.end75:                                         ; preds = %entry, %cleanup
  br label %return, !dbg !6433

return:                                           ; preds = %cleanup, %if.end75
  %retval.1 = phi %struct.rtx_def* [ %retval.0, %cleanup ], [ null, %if.end75 ], !dbg !6375
  ret %struct.rtx_def* %retval.1, !dbg !6434
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @widen_clz(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) unnamed_addr #4 !dbg !6435 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6439, metadata !DIExpression()), !dbg !6454
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6440, metadata !DIExpression()), !dbg !6454
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6441, metadata !DIExpression()), !dbg !6454
  %idxprom = zext i32 %mode to i64, !dbg !6455
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !6455
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6455
  switch i8 %0, label %if.end66 [
    i8 2, label %if.then
    i8 8, label %if.then
    i8 9, label %if.then
    i8 11, label %if.then
    i8 4, label %if.then
    i8 5, label %if.then
    i8 6, label %if.then
    i8 7, label %if.then
  ], !dbg !6456

if.then:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %for.cond, !dbg !6457

for.cond:                                         ; preds = %for.inc, %if.then
  %idxprom22.pn = phi i64 [ %idxprom, %if.then ], [ %idxprom27, %for.inc ]
  %wider_mode.0.in.in = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom22.pn, !dbg !6458
  %wider_mode.0.in = load i8, i8* %wider_mode.0.in.in, align 1, !dbg !6458
  %cmp25 = icmp eq i8 %wider_mode.0.in, 0, !dbg !6459
  br i1 %cmp25, label %cleanup.loopexit, label %for.body, !dbg !6460

for.body:                                         ; preds = %for.cond
  %idxprom27 = zext i8 %wider_mode.0.in to i64, !dbg !6461
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71, i32 4, i64 %idxprom27, i32 0, !dbg !6462
  %1 = load i32, i32* %insn_code, align 4, !dbg !6462
  %cmp29 = icmp eq i32 %1, 2956, !dbg !6463
  br i1 %cmp29, label %for.inc, label %if.then31, !dbg !6464

if.then31:                                        ; preds = %for.body
  %idxprom27.lcssa = phi i64 [ %idxprom27, %for.body ], !dbg !6461
  %wider_mode.0.in.lcssa5 = phi i8 [ %wider_mode.0.in, %for.body ], !dbg !6458
  %wider_mode.0.le = zext i8 %wider_mode.0.in.lcssa5 to i32, !dbg !6458
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6465
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6453, metadata !DIExpression()), !dbg !6466
  %cmp32 = icmp eq %struct.rtx_def* %target, null, !dbg !6467
  br i1 %cmp32, label %if.then34, label %if.end, !dbg !6469

if.then34:                                        ; preds = %if.then31
  %call35 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !6470
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call35, metadata !6441, metadata !DIExpression()), !dbg !6454
  br label %if.end, !dbg !6471

if.end:                                           ; preds = %if.then34, %if.then31
  %target.addr.0 = phi %struct.rtx_def* [ %call35, %if.then34 ], [ %target, %if.then31 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !6441, metadata !DIExpression()), !dbg !6454
  %call36 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0, i32 %wider_mode.0.le, i32 %mode, i32 1, i32 0) #8, !dbg !6472
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call36, metadata !6446, metadata !DIExpression()), !dbg !6466
  %call37 = tail call %struct.rtx_def* @expand_unop(i32 %wider_mode.0.le, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71), %struct.rtx_def* %call36, %struct.rtx_def* null, i32 1) #8, !dbg !6473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !6452, metadata !DIExpression()), !dbg !6466
  %cmp38 = icmp eq %struct.rtx_def* %call37, null, !dbg !6474
  br i1 %cmp38, label %if.end57, label %if.then40, !dbg !6476

if.then40:                                        ; preds = %if.end
  %arrayidx42 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom27.lcssa, !dbg !6477
  %2 = load i8, i8* %arrayidx42, align 1, !dbg !6477
  %conv44 = zext i8 %2 to i32, !dbg !6477
  %arrayidx48 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6477
  %3 = load i8, i8* %arrayidx48, align 1, !dbg !6477
  %conv50 = zext i8 %3 to i32, !dbg !6477
  %mul1 = sub nsw i32 %conv44, %conv50, !dbg !6477
  %sub = shl nsw i32 %mul1, 3, !dbg !6477
  %conv54 = sext i32 %sub to i64, !dbg !6477
  %call55 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv54) #6, !dbg !6477
  %call56 = tail call %struct.rtx_def* @expand_binop(i32 %wider_mode.0.le, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.rtx_def* nonnull %call37, %struct.rtx_def* %call55, %struct.rtx_def* %target.addr.0, i32 1, i32 0) #8, !dbg !6478
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call56, metadata !6452, metadata !DIExpression()), !dbg !6466
  br label %if.end57, !dbg !6479

if.end57:                                         ; preds = %if.end, %if.then40
  %temp.0 = phi %struct.rtx_def* [ %call56, %if.then40 ], [ null, %if.end ], !dbg !6466
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !6452, metadata !DIExpression()), !dbg !6466
  %cmp58 = icmp eq %struct.rtx_def* %temp.0, null, !dbg !6480
  br i1 %cmp58, label %if.then60, label %cleanup, !dbg !6482

if.then60:                                        ; preds = %if.end57
  tail call void @delete_insns_since(%struct.rtx_def* %call) #6, !dbg !6483
  br label %cleanup, !dbg !6483

for.inc:                                          ; preds = %for.body
  br label %for.cond, !dbg !6484, !llvm.loop !6485

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.end57, %if.then60
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then60 ], [ false, %if.end57 ], [ true, %cleanup.loopexit ]
  %retval.0 = phi %struct.rtx_def* [ null, %if.then60 ], [ %temp.0, %if.end57 ], [ undef, %cleanup.loopexit ]
  br i1 %cleanup.dest.slot.0, label %if.end66, label %cleanup67

if.end66:                                         ; preds = %cleanup, %entry
  br label %cleanup67, !dbg !6487

cleanup67:                                        ; preds = %cleanup, %if.end66
  %retval.1 = phi %struct.rtx_def* [ %retval.0, %cleanup ], [ null, %if.end66 ], !dbg !6454
  ret %struct.rtx_def* %retval.1, !dbg !6488
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_doubleword_clz(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) unnamed_addr #4 !dbg !6489 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6491, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6492, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6493, metadata !DIExpression()), !dbg !6503
  %call = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op0) #6, !dbg !6504
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6494, metadata !DIExpression()), !dbg !6503
  %0 = load i32, i32* @word_mode, align 4, !dbg !6505
  %call1 = tail call %struct.rtx_def* @gen_highpart(i32 %0, %struct.rtx_def* %call) #6, !dbg !6506
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !6495, metadata !DIExpression()), !dbg !6503
  %1 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !6507
  %2 = load i32, i32* @word_mode, align 4, !dbg !6508
  %call2 = tail call %struct.rtx_def* %1(i32 %2, %struct.rtx_def* %call) #6, !dbg !6507
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !6496, metadata !DIExpression()), !dbg !6503
  %call3 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !6509
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !6497, metadata !DIExpression()), !dbg !6503
  %call4 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !6510
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !6498, metadata !DIExpression()), !dbg !6503
  %tobool = icmp eq %struct.rtx_def* %target, null, !dbg !6511
  br i1 %tobool, label %if.then, label %if.end, !dbg !6513

if.then:                                          ; preds = %entry
  %3 = load i32, i32* @word_mode, align 4, !dbg !6514
  %call5 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %3) #6, !dbg !6515
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !6493, metadata !DIExpression()), !dbg !6503
  br label %if.end, !dbg !6516

if.end:                                           ; preds = %entry, %if.then
  %target.addr.0 = phi %struct.rtx_def* [ %target, %entry ], [ %call5, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !6493, metadata !DIExpression()), !dbg !6503
  %4 = load i32, i32* @word_mode, align 4, !dbg !6517
  %call6 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %4) #6, !dbg !6518
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !6501, metadata !DIExpression()), !dbg !6503
  tail call void @start_sequence() #6, !dbg !6519
  %5 = load i32, i32* @word_mode, align 4, !dbg !6520
  %idxprom = sext i32 %5 to i64, !dbg !6520
  %arrayidx = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom, !dbg !6520
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !6520
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call1, %struct.rtx_def* %6, i32 81, %struct.rtx_def* null, i32 %5, i32 1, %struct.rtx_def* %call3) #8, !dbg !6521
  %7 = load i32, i32* @word_mode, align 4, !dbg !6522
  %call7 = tail call fastcc %struct.rtx_def* @expand_unop_direct(i32 %7, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71), %struct.rtx_def* %call1, %struct.rtx_def* %call6, i32 1) #8, !dbg !6523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !6500, metadata !DIExpression()), !dbg !6503
  %tobool8 = icmp eq %struct.rtx_def* %call7, null, !dbg !6524
  br i1 %tobool8, label %fail, label %if.end10, !dbg !6526

if.end10:                                         ; preds = %if.end
  %cmp = icmp eq %struct.rtx_def* %call7, %call6, !dbg !6527
  br i1 %cmp, label %if.end12, label %if.then11, !dbg !6529

if.then11:                                        ; preds = %if.end10
  tail call void @convert_move(%struct.rtx_def* %call6, %struct.rtx_def* nonnull %call7, i32 1) #6, !dbg !6530
  br label %if.end12, !dbg !6530

if.end12:                                         ; preds = %if.end10, %if.then11
  %call13 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call4) #6, !dbg !6531
  %call14 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call13) #6, !dbg !6532
  %call15 = tail call %struct.rtx_def* @emit_barrier() #6, !dbg !6533
  %call16 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call3) #6, !dbg !6534
  %8 = load i32, i32* @word_mode, align 4, !dbg !6535
  %call17 = tail call fastcc %struct.rtx_def* @expand_unop_direct(i32 %8, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71), %struct.rtx_def* %call2, %struct.rtx_def* null, i32 1) #8, !dbg !6536
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call17, metadata !6500, metadata !DIExpression()), !dbg !6503
  %tobool18 = icmp eq %struct.rtx_def* %call17, null, !dbg !6537
  br i1 %tobool18, label %fail, label %if.end20, !dbg !6539

if.end20:                                         ; preds = %if.end12
  %9 = load i32, i32* @word_mode, align 4, !dbg !6540
  %idxprom21 = zext i32 %9 to i64, !dbg !6541
  %arrayidx22 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom21, !dbg !6541
  %10 = load i8, i8* %arrayidx22, align 1, !dbg !6541
  %conv23 = zext i8 %10 to i64, !dbg !6541
  %mul = shl nuw nsw i64 %conv23, 3, !dbg !6541
  %call26 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %mul) #6, !dbg !6541
  %call27 = tail call %struct.rtx_def* @expand_binop(i32 %9, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), %struct.rtx_def* nonnull %call17, %struct.rtx_def* %call26, %struct.rtx_def* %call6, i32 1, i32 0) #8, !dbg !6542
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call27, metadata !6500, metadata !DIExpression()), !dbg !6503
  %tobool28 = icmp eq %struct.rtx_def* %call27, null, !dbg !6543
  br i1 %tobool28, label %fail, label %if.end30, !dbg !6545

if.end30:                                         ; preds = %if.end20
  %cmp31 = icmp eq %struct.rtx_def* %call27, %call6, !dbg !6546
  br i1 %cmp31, label %if.end34, label %if.then33, !dbg !6548

if.then33:                                        ; preds = %if.end30
  tail call void @convert_move(%struct.rtx_def* %call6, %struct.rtx_def* nonnull %call27, i32 1) #6, !dbg !6549
  br label %if.end34, !dbg !6549

if.end34:                                         ; preds = %if.end30, %if.then33
  %call35 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call4) #6, !dbg !6550
  tail call void @convert_move(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %call6, i32 1) #6, !dbg !6551
  %call36 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call36, metadata !6499, metadata !DIExpression()), !dbg !6503
  tail call void @end_sequence() #6, !dbg !6553
  %call37 = tail call fastcc i32 @add_equal_note(%struct.rtx_def* %call36, %struct.rtx_def* %target.addr.0, i32 115, %struct.rtx_def* %call, %struct.rtx_def* null) #8, !dbg !6554
  %call38 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call36) #6, !dbg !6555
  br label %cleanup, !dbg !6556

fail:                                             ; preds = %if.end20, %if.end12, %if.end
  call void @llvm.dbg.label(metadata !6502), !dbg !6557
  tail call void @end_sequence() #6, !dbg !6558
  br label %cleanup, !dbg !6559

cleanup:                                          ; preds = %fail, %if.end34
  %retval.0 = phi %struct.rtx_def* [ %target.addr.0, %if.end34 ], [ null, %fail ], !dbg !6503
  ret %struct.rtx_def* %retval.0, !dbg !6560
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @widen_bswap(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) unnamed_addr #4 !dbg !6561 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6563, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6564, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6565, metadata !DIExpression()), !dbg !6571
  %idxprom = zext i32 %mode to i64, !dbg !6572
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !6572
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6572
  switch i8 %0, label %cleanup [
    i8 2, label %if.end
    i8 8, label %if.end
    i8 9, label %if.end
    i8 11, label %if.end
    i8 4, label %if.end
    i8 5, label %if.end
    i8 6, label %if.end
    i8 7, label %if.end
  ], !dbg !6573

if.end:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %for.cond, !dbg !6575

for.cond:                                         ; preds = %for.inc, %if.end
  %idxprom22.pn = phi i64 [ %idxprom, %if.end ], [ %idxprom27, %for.inc ]
  %wider_mode.0.in.in = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom22.pn, !dbg !6577
  %wider_mode.0.in = load i8, i8* %wider_mode.0.in.in, align 1, !dbg !6577
  %cmp25 = icmp eq i8 %wider_mode.0.in, 0, !dbg !6578
  br i1 %cmp25, label %cleanup.loopexit, label %for.body, !dbg !6580

for.body:                                         ; preds = %for.cond
  %idxprom27 = zext i8 %wider_mode.0.in to i64, !dbg !6581
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 68, i32 4, i64 %idxprom27, i32 0, !dbg !6583
  %1 = load i32, i32* %insn_code, align 4, !dbg !6583
  %cmp29 = icmp eq i32 %1, 2956, !dbg !6584
  br i1 %cmp29, label %for.inc, label %found, !dbg !6585

for.inc:                                          ; preds = %for.body
  br label %for.cond, !dbg !6586, !llvm.loop !6587

found:                                            ; preds = %for.body
  %idxprom27.lcssa = phi i64 [ %idxprom27, %for.body ], !dbg !6581
  %wider_mode.0.in.lcssa5 = phi i8 [ %wider_mode.0.in, %for.body ], !dbg !6577
  %wider_mode.0.le = zext i8 %wider_mode.0.in.lcssa5 to i32, !dbg !6577
  call void @llvm.dbg.label(metadata !6570), !dbg !6589
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6590
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6569, metadata !DIExpression()), !dbg !6571
  %call36 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0, i32 %wider_mode.0.le, i32 %mode, i32 1, i32 1) #8, !dbg !6591
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call36, metadata !6568, metadata !DIExpression()), !dbg !6571
  %call37 = tail call %struct.rtx_def* @expand_unop(i32 %wider_mode.0.le, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 68), %struct.rtx_def* %call36, %struct.rtx_def* null, i32 1) #8, !dbg !6592
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !6568, metadata !DIExpression()), !dbg !6571
  %cmp38 = icmp eq %struct.rtx_def* %call37, null, !dbg !6593
  br i1 %cmp38, label %if.end57, label %if.then40, !dbg !6595

if.then40:                                        ; preds = %found
  %arrayidx42 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom27.lcssa, !dbg !6596
  %2 = load i8, i8* %arrayidx42, align 1, !dbg !6596
  %conv44 = zext i8 %2 to i32, !dbg !6596
  %arrayidx48 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6596
  %3 = load i8, i8* %arrayidx48, align 1, !dbg !6596
  %conv50 = zext i8 %3 to i32, !dbg !6596
  %mul1 = sub nsw i32 %conv44, %conv50, !dbg !6596
  %sub = shl nsw i32 %mul1, 3, !dbg !6596
  %conv54 = sext i32 %sub to i64, !dbg !6596
  %call55 = tail call %union.tree_node* @size_int_kind(i64 %conv54, i32 0) #6, !dbg !6596
  %call56 = tail call %struct.rtx_def* @expand_shift(i32 84, i32 %wider_mode.0.le, %struct.rtx_def* nonnull %call37, %union.tree_node* %call55, %struct.rtx_def* null, i32 1) #6, !dbg !6597
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call56, metadata !6568, metadata !DIExpression()), !dbg !6571
  br label %if.end57, !dbg !6598

if.end57:                                         ; preds = %found, %if.then40
  %x.0 = phi %struct.rtx_def* [ %call56, %if.then40 ], [ null, %found ], !dbg !6571
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !6568, metadata !DIExpression()), !dbg !6571
  %cmp58 = icmp eq %struct.rtx_def* %x.0, null, !dbg !6599
  br i1 %cmp58, label %if.else, label %if.then60, !dbg !6601

if.then60:                                        ; preds = %if.end57
  %cmp61 = icmp eq %struct.rtx_def* %target, null, !dbg !6602
  br i1 %cmp61, label %if.then63, label %if.end65, !dbg !6605

if.then63:                                        ; preds = %if.then60
  %call64 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !6606
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64, metadata !6565, metadata !DIExpression()), !dbg !6571
  br label %if.end65, !dbg !6607

if.end65:                                         ; preds = %if.then63, %if.then60
  %target.addr.0 = phi %struct.rtx_def* [ %call64, %if.then63 ], [ %target, %if.then60 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !6565, metadata !DIExpression()), !dbg !6571
  %4 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !6608
  %call66 = tail call %struct.rtx_def* %4(i32 %mode, %struct.rtx_def* nonnull %x.0) #6, !dbg !6608
  %call67 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %call66) #6, !dbg !6609
  br label %cleanup, !dbg !6610

if.else:                                          ; preds = %if.end57
  tail call void @delete_insns_since(%struct.rtx_def* %call) #6, !dbg !6611
  br label %cleanup

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !6612

cleanup:                                          ; preds = %cleanup.loopexit, %if.end65, %if.else, %entry
  %retval.0 = phi %struct.rtx_def* [ null, %entry ], [ %target.addr.0, %if.end65 ], [ %target, %if.else ], [ null, %cleanup.loopexit ], !dbg !6571
  ret %struct.rtx_def* %retval.0, !dbg !6612
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_doubleword_bswap(i32 %mode, %struct.rtx_def* %op, %struct.rtx_def* %target) unnamed_addr #4 !dbg !6613 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6615, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !6616, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6617, metadata !DIExpression()), !dbg !6620
  %0 = load i32, i32* @word_mode, align 4, !dbg !6621
  %call = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op, i32 0, i32 %mode) #6, !dbg !6622
  %call1 = tail call %struct.rtx_def* @expand_unop(i32 %0, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 68), %struct.rtx_def* %call, %struct.rtx_def* null, i32 1) #8, !dbg !6623
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !6619, metadata !DIExpression()), !dbg !6620
  %1 = load i32, i32* @word_mode, align 4, !dbg !6624
  %call2 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op, i32 1, i32 %mode) #6, !dbg !6625
  %call3 = tail call %struct.rtx_def* @expand_unop(i32 %1, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 68), %struct.rtx_def* %call2, %struct.rtx_def* null, i32 1) #8, !dbg !6626
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !6618, metadata !DIExpression()), !dbg !6620
  %cmp = icmp eq %struct.rtx_def* %target, null, !dbg !6627
  br i1 %cmp, label %if.then, label %if.end, !dbg !6629

if.then:                                          ; preds = %entry
  %call4 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !6630
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !6617, metadata !DIExpression()), !dbg !6620
  br label %if.end, !dbg !6631

if.end:                                           ; preds = %if.then, %entry
  %target.addr.0 = phi %struct.rtx_def* [ %call4, %if.then ], [ %target, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !6617, metadata !DIExpression()), !dbg !6620
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.0, i64 0, i32 0, !dbg !6632
  %bf.load = load i32, i32* %2, align 8, !dbg !6632
  %bf.clear = and i32 %bf.load, 65535, !dbg !6632
  %cmp5 = icmp eq i32 %bf.clear, 37, !dbg !6632
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !6634

if.then6:                                         ; preds = %if.end
  %call7 = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* %target.addr.0) #6, !dbg !6635
  br label %if.end8, !dbg !6635

if.end8:                                          ; preds = %if.then6, %if.end
  %call9 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.0, i32 0, i32 1, i32 %mode) #6, !dbg !6636
  %call10 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call9, %struct.rtx_def* %call3) #6, !dbg !6637
  %call11 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.0, i32 1, i32 1, i32 %mode) #6, !dbg !6638
  %call12 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call11, %struct.rtx_def* %call1) #6, !dbg !6639
  ret %struct.rtx_def* %target.addr.0, !dbg !6640
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_absneg_bit(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) unnamed_addr #4 !dbg !6641 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6645, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6646, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6647, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6648, metadata !DIExpression()), !dbg !6696
  %cond = add i32 %mode, -38, !dbg !6697
  %idxprom3 = zext i32 %cond to i64, !dbg !6697
  %arrayidx4 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom3, !dbg !6697
  %0 = load %struct.real_format*, %struct.real_format** %arrayidx4, align 8, !dbg !6697
  call void @llvm.dbg.value(metadata %struct.real_format* %0, metadata !6649, metadata !DIExpression()), !dbg !6696
  %cmp5 = icmp eq %struct.real_format* %0, null, !dbg !6698
  br i1 %cmp5, label %cleanup, label %if.end, !dbg !6700

if.end:                                           ; preds = %entry
  %signbit_rw = getelementptr inbounds %struct.real_format, %struct.real_format* %0, i64 0, i32 8, !dbg !6701
  %1 = load i32, i32* %signbit_rw, align 8, !dbg !6701
  call void @llvm.dbg.value(metadata i32 %1, metadata !6680, metadata !DIExpression()), !dbg !6696
  %cmp7 = icmp slt i32 %1, 0, !dbg !6702
  br i1 %cmp7, label %cleanup, label %if.end10, !dbg !6704

if.end10:                                         ; preds = %if.end
  %cmp11 = icmp eq i32 %code, 51, !dbg !6705
  br i1 %cmp11, label %land.lhs.true, label %if.end14, !dbg !6707

land.lhs.true:                                    ; preds = %if.end10
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %0, i64 0, i32 14, !dbg !6708
  %2 = load i8, i8* %has_signed_zero, align 1, !dbg !6708
  %tobool = icmp eq i8 %2, 0, !dbg !6709
  br i1 %tobool, label %cleanup, label %if.end14, !dbg !6710

if.end14:                                         ; preds = %land.lhs.true, %if.end10
  %idxprom15 = zext i32 %mode to i64, !dbg !6711
  %arrayidx16 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom15, !dbg !6711
  %3 = load i8, i8* %arrayidx16, align 1, !dbg !6711
  %cmp19 = icmp ult i8 %3, 5, !dbg !6713
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !6714

if.then21:                                        ; preds = %if.end14
  %call = tail call i32 @int_mode_for_mode(i32 %mode) #6, !dbg !6715
  call void @llvm.dbg.value(metadata i32 %call, metadata !6684, metadata !DIExpression()), !dbg !6696
  %cmp22 = icmp eq i32 %call, 1, !dbg !6717
  br i1 %cmp22, label %cleanup, label %if.end35, !dbg !6719

if.else:                                          ; preds = %if.end14
  %4 = load i32, i32* @word_mode, align 4, !dbg !6720
  call void @llvm.dbg.value(metadata i32 %4, metadata !6684, metadata !DIExpression()), !dbg !6696
  %div = sdiv i32 %1, 32, !dbg !6722
  call void @llvm.dbg.value(metadata i32 %div, metadata !6681, metadata !DIExpression()), !dbg !6696
  %rem = srem i32 %1, 32, !dbg !6724
  call void @llvm.dbg.value(metadata i32 %rem, metadata !6680, metadata !DIExpression()), !dbg !6696
  %conv29 = zext i8 %3 to i32, !dbg !6725
  %mul = shl nuw nsw i32 %conv29, 3, !dbg !6725
  %sub33 = add nuw nsw i32 %mul, 31, !dbg !6726
  %div34 = lshr i32 %sub33, 5, !dbg !6727
  call void @llvm.dbg.value(metadata i32 %div34, metadata !6682, metadata !DIExpression()), !dbg !6696
  br label %if.end35

if.end35:                                         ; preds = %if.then21, %if.else
  %imode.0 = phi i32 [ %4, %if.else ], [ %call, %if.then21 ], !dbg !6728
  %nwords.0 = phi i32 [ %div34, %if.else ], [ 1, %if.then21 ], !dbg !6728
  %word.0 = phi i32 [ %div, %if.else ], [ 0, %if.then21 ], !dbg !6728
  %bitpos.0 = phi i32 [ %rem, %if.else ], [ %1, %if.then21 ], !dbg !6696
  call void @llvm.dbg.value(metadata i32 %bitpos.0, metadata !6680, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i32 %word.0, metadata !6681, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i32 %nwords.0, metadata !6682, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i32 %imode.0, metadata !6684, metadata !DIExpression()), !dbg !6696
  %cmp36 = icmp slt i32 %bitpos.0, 64, !dbg !6729
  %sh_prom = zext i32 %bitpos.0 to i64, !dbg !6731
  %shl = shl i64 1, %sh_prom, !dbg !6731
  %sub40 = add nsw i32 %bitpos.0, -64, !dbg !6731
  %sh_prom41 = zext i32 %sub40 to i64, !dbg !6731
  %shl42 = shl i64 1, %sh_prom41, !dbg !6731
  %hi.0 = select i1 %cmp36, i64 0, i64 %shl42, !dbg !6731
  %lo.0 = select i1 %cmp36, i64 %shl, i64 0, !dbg !6731
  call void @llvm.dbg.value(metadata i64 %lo.0, metadata !6686, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i64 %hi.0, metadata !6685, metadata !DIExpression()), !dbg !6696
  %cmp44 = icmp eq i32 %code, 111, !dbg !6732
  %neg47 = sext i1 %cmp44 to i64, !dbg !6734
  %hi.1 = xor i64 %hi.0, %neg47, !dbg !6734
  %lo.1 = xor i64 %lo.0, %neg47, !dbg !6734
  call void @llvm.dbg.value(metadata i64 %lo.1, metadata !6686, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i64 %hi.1, metadata !6685, metadata !DIExpression()), !dbg !6696
  %cmp49 = icmp eq %struct.rtx_def* %target, null, !dbg !6735
  %cmp51 = icmp eq %struct.rtx_def* %target, %op0, !dbg !6737
  %or.cond = or i1 %cmp49, %cmp51, !dbg !6738
  br i1 %or.cond, label %if.then53, label %if.end55, !dbg !6738

if.then53:                                        ; preds = %if.end35
  %call54 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !6739
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call54, metadata !6648, metadata !DIExpression()), !dbg !6696
  br label %if.end55, !dbg !6740

if.end55:                                         ; preds = %if.end35, %if.then53
  %target.addr.0 = phi %struct.rtx_def* [ %call54, %if.then53 ], [ %target, %if.end35 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !6648, metadata !DIExpression()), !dbg !6696
  %cmp56 = icmp ugt i32 %nwords.0, 1, !dbg !6741
  br i1 %cmp56, label %if.then58, label %if.else81, !dbg !6742

if.then58:                                        ; preds = %if.end55
  tail call void @start_sequence() #6, !dbg !6743
  call void @llvm.dbg.value(metadata i32 0, metadata !6683, metadata !DIExpression()), !dbg !6696
  %cond68 = select i1 %cmp44, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), !dbg !6744
  br label %for.cond, !dbg !6747

for.cond:                                         ; preds = %for.inc, %if.then58
  %i.0 = phi i32 [ 0, %if.then58 ], [ %inc, %for.inc ], !dbg !6748
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6683, metadata !DIExpression()), !dbg !6696
  %exitcond = icmp eq i32 %i.0, %nwords.0, !dbg !6749
  br i1 %exitcond, label %for.end, label %for.body, !dbg !6750

for.body:                                         ; preds = %for.cond
  %call61 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.0, i32 %i.0, i32 1, i32 %mode) #6, !dbg !6751
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call61, metadata !6689, metadata !DIExpression()), !dbg !6752
  %call62 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 %i.0, i32 %mode) #6, !dbg !6753
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call62, metadata !6695, metadata !DIExpression()), !dbg !6752
  %cmp63 = icmp eq i32 %i.0, %word.0, !dbg !6754
  br i1 %cmp63, label %if.then65, label %if.else76, !dbg !6755

if.then65:                                        ; preds = %for.body
  %call69 = tail call %struct.rtx_def* @immed_double_const(i64 %lo.1, i64 %hi.1, i32 %imode.0) #6, !dbg !6756
  %call70 = tail call %struct.rtx_def* @expand_binop(i32 %imode.0, %struct.optab_d* %cond68, %struct.rtx_def* %call62, %struct.rtx_def* %call69, %struct.rtx_def* %call61, i32 1, i32 3) #8, !dbg !6757
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call70, metadata !6687, metadata !DIExpression()), !dbg !6696
  %cmp71 = icmp eq %struct.rtx_def* %call70, %call61, !dbg !6758
  br i1 %cmp71, label %for.inc, label %if.then73, !dbg !6760

if.then73:                                        ; preds = %if.then65
  %call74 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call61, %struct.rtx_def* %call70) #6, !dbg !6761
  br label %for.inc, !dbg !6761

if.else76:                                        ; preds = %for.body
  %call77 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call61, %struct.rtx_def* %call62) #6, !dbg !6762
  br label %for.inc

for.inc:                                          ; preds = %if.then65, %if.else76, %if.then73
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6763
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6683, metadata !DIExpression()), !dbg !6696
  br label %for.cond, !dbg !6764, !llvm.loop !6765

for.end:                                          ; preds = %for.cond
  %call79 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6767
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call79, metadata !6688, metadata !DIExpression()), !dbg !6696
  tail call void @end_sequence() #6, !dbg !6768
  %call80 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call79) #6, !dbg !6769
  br label %cleanup, !dbg !6770

if.else81:                                        ; preds = %if.end55
  %cond84 = select i1 %cmp44, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), !dbg !6771
  %5 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !6773
  %call85 = tail call %struct.rtx_def* %5(i32 %imode.0, %struct.rtx_def* %op0) #6, !dbg !6773
  %call86 = tail call %struct.rtx_def* @immed_double_const(i64 %lo.1, i64 %hi.1, i32 %imode.0) #6, !dbg !6774
  %6 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !6775
  %call87 = tail call %struct.rtx_def* %6(i32 %imode.0, %struct.rtx_def* %target.addr.0) #6, !dbg !6775
  %call88 = tail call %struct.rtx_def* @expand_binop(i32 %imode.0, %struct.optab_d* %cond84, %struct.rtx_def* %call85, %struct.rtx_def* %call86, %struct.rtx_def* %call87, i32 1, i32 3) #8, !dbg !6776
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call88, metadata !6687, metadata !DIExpression()), !dbg !6696
  %call89 = tail call fastcc %struct.rtx_def* @lowpart_subreg_maybe_copy(i32 %mode, %struct.rtx_def* %call88, i32 %imode.0) #8, !dbg !6777
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call89, metadata !6648, metadata !DIExpression()), !dbg !6696
  %call90 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6778
  %call91 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0) #6, !dbg !6779
  %call92 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %code, i32 %mode, %struct.rtx_def* %call91) #6, !dbg !6779
  %call93 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call90, i32 4, %struct.rtx_def* %call92) #6, !dbg !6780
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true, %for.end, %if.else81, %if.then21, %if.end, %entry
  %retval.0 = phi %struct.rtx_def* [ null, %entry ], [ null, %if.end ], [ null, %land.lhs.true ], [ null, %if.then21 ], [ %target.addr.0, %for.end ], [ %call89, %if.else81 ], !dbg !6696
  ret %struct.rtx_def* %retval.0, !dbg !6781
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_parity(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) unnamed_addr #4 !dbg !6782 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6784, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6785, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6786, metadata !DIExpression()), !dbg !6799
  %idxprom = zext i32 %mode to i64, !dbg !6800
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !6800
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6800
  switch i8 %0, label %if.end48 [
    i8 2, label %if.then
    i8 8, label %if.then
    i8 9, label %if.then
    i8 11, label %if.then
    i8 4, label %if.then
    i8 5, label %if.then
    i8 6, label %if.then
    i8 7, label %if.then
  ], !dbg !6801

if.then:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6788, metadata !DIExpression()), !dbg !6802
  br label %for.cond, !dbg !6803

for.cond:                                         ; preds = %for.inc, %if.then
  %wider_mode.0 = phi i32 [ %mode, %if.then ], [ %conv47, %for.inc ], !dbg !6804
  call void @llvm.dbg.value(metadata i32 %wider_mode.0, metadata !6788, metadata !DIExpression()), !dbg !6802
  %cmp22 = icmp eq i32 %wider_mode.0, 0, !dbg !6805
  br i1 %cmp22, label %cleanup.loopexit, label %for.body, !dbg !6806

for.body:                                         ; preds = %for.cond
  %idxprom24 = sext i32 %wider_mode.0 to i64, !dbg !6807
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 73, i32 4, i64 %idxprom24, i32 0, !dbg !6808
  %1 = load i32, i32* %insn_code, align 4, !dbg !6808
  %cmp26 = icmp eq i32 %1, 2956, !dbg !6809
  br i1 %cmp26, label %for.inc, label %if.then28, !dbg !6810

if.then28:                                        ; preds = %for.body
  %wider_mode.0.lcssa3 = phi i32 [ %wider_mode.0, %for.body ], !dbg !6804
  call void @llvm.dbg.value(metadata i32 %wider_mode.0.lcssa3, metadata !6788, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.value(metadata i32 %wider_mode.0.lcssa3, metadata !6788, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.value(metadata i32 %wider_mode.0.lcssa3, metadata !6788, metadata !DIExpression()), !dbg !6802
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6811
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6798, metadata !DIExpression()), !dbg !6812
  %cmp29 = icmp eq %struct.rtx_def* %target, null, !dbg !6813
  br i1 %cmp29, label %if.then31, label %if.end, !dbg !6815

if.then31:                                        ; preds = %if.then28
  %call32 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !6816
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call32, metadata !6786, metadata !DIExpression()), !dbg !6799
  br label %if.end, !dbg !6817

if.end:                                           ; preds = %if.then31, %if.then28
  %target.addr.0 = phi %struct.rtx_def* [ %call32, %if.then31 ], [ %target, %if.then28 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !6786, metadata !DIExpression()), !dbg !6799
  %call33 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0, i32 %wider_mode.0.lcssa3, i32 %mode, i32 1, i32 0) #8, !dbg !6818
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call33, metadata !6791, metadata !DIExpression()), !dbg !6812
  %call34 = tail call %struct.rtx_def* @expand_unop(i32 %wider_mode.0.lcssa3, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 73), %struct.rtx_def* %call33, %struct.rtx_def* null, i32 1) #8, !dbg !6819
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !6797, metadata !DIExpression()), !dbg !6812
  %cmp35 = icmp eq %struct.rtx_def* %call34, null, !dbg !6820
  br i1 %cmp35, label %if.end39, label %if.then37, !dbg !6822

if.then37:                                        ; preds = %if.end
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !6823
  %call38 = tail call %struct.rtx_def* @expand_binop(i32 %wider_mode.0.lcssa3, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.rtx_def* nonnull %call34, %struct.rtx_def* %2, %struct.rtx_def* %target.addr.0, i32 1, i32 0) #8, !dbg !6824
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call38, metadata !6797, metadata !DIExpression()), !dbg !6812
  br label %if.end39, !dbg !6825

if.end39:                                         ; preds = %if.end, %if.then37
  %temp.0 = phi %struct.rtx_def* [ %call38, %if.then37 ], [ null, %if.end ], !dbg !6812
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !6797, metadata !DIExpression()), !dbg !6812
  %cmp40 = icmp eq %struct.rtx_def* %temp.0, null, !dbg !6826
  br i1 %cmp40, label %if.then42, label %cleanup, !dbg !6828

if.then42:                                        ; preds = %if.end39
  tail call void @delete_insns_since(%struct.rtx_def* %call) #6, !dbg !6829
  br label %cleanup, !dbg !6829

for.inc:                                          ; preds = %for.body
  %idxprom45 = zext i32 %wider_mode.0 to i64, !dbg !6830
  %arrayidx46 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom45, !dbg !6830
  %3 = load i8, i8* %arrayidx46, align 1, !dbg !6830
  %conv47 = zext i8 %3 to i32, !dbg !6830
  call void @llvm.dbg.value(metadata i32 %conv47, metadata !6788, metadata !DIExpression()), !dbg !6802
  br label %for.cond, !dbg !6831, !llvm.loop !6832

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.end39, %if.then42
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then42 ], [ false, %if.end39 ], [ true, %cleanup.loopexit ]
  %retval.0 = phi %struct.rtx_def* [ null, %if.then42 ], [ %temp.0, %if.end39 ], [ undef, %cleanup.loopexit ]
  br i1 %cleanup.dest.slot.0, label %if.end48, label %cleanup49

if.end48:                                         ; preds = %cleanup, %entry
  br label %cleanup49, !dbg !6834

cleanup49:                                        ; preds = %cleanup, %if.end48
  %retval.1 = phi %struct.rtx_def* [ %retval.0, %cleanup ], [ null, %if.end48 ], !dbg !6799
  ret %struct.rtx_def* %retval.1, !dbg !6835
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_ffs(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) unnamed_addr #4 !dbg !6836 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6838, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6839, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6840, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.value(metadata i64 0, metadata !6841, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.value(metadata i8 0, metadata !6842, metadata !DIExpression()), !dbg !6849
  %idxprom = sext i32 %mode to i64, !dbg !6850
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 72, i32 4, i64 %idxprom, i32 0, !dbg !6852
  %0 = load i32, i32* %insn_code, align 4, !dbg !6852
  %cmp = icmp eq i32 %0, 2956, !dbg !6853
  br i1 %cmp, label %if.else, label %if.then, !dbg !6854

if.then:                                          ; preds = %entry
  tail call void @start_sequence() #6, !dbg !6855
  %call = tail call fastcc %struct.rtx_def* @expand_unop_direct(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 72), %struct.rtx_def* %op0, %struct.rtx_def* null, i32 1) #8, !dbg !6857
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6843, metadata !DIExpression()), !dbg !6849
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !6858
  br i1 %tobool, label %fail, label %if.end13, !dbg !6860

if.else:                                          ; preds = %entry
  %insn_code4 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71, i32 4, i64 %idxprom, i32 0, !dbg !6861
  %1 = load i32, i32* %insn_code4, align 4, !dbg !6861
  %cmp5 = icmp eq i32 %1, 2956, !dbg !6863
  br i1 %cmp5, label %cleanup, label %if.then6, !dbg !6864

if.then6:                                         ; preds = %if.else
  tail call void @start_sequence() #6, !dbg !6865
  %call7 = tail call fastcc %struct.rtx_def* @expand_ctz(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* null) #8, !dbg !6867
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !6843, metadata !DIExpression()), !dbg !6849
  %tobool8 = icmp eq %struct.rtx_def* %call7, null, !dbg !6868
  br i1 %tobool8, label %fail, label %if.end13, !dbg !6870

if.end13:                                         ; preds = %if.then, %if.then6
  %temp.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call7, %if.then6 ], !dbg !6871
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !6843, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.value(metadata i8 0, metadata !6842, metadata !DIExpression()), !dbg !6849
  %call19 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !6872
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !6845, metadata !DIExpression()), !dbg !6873
  %arrayidx21 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom, !dbg !6874
  %2 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx21, align 8, !dbg !6874
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %op0, %struct.rtx_def* %2, i32 80, %struct.rtx_def* null, i32 %mode, i32 1, %struct.rtx_def* %call19) #8, !dbg !6875
  %call22 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -1) #6, !dbg !6876
  tail call void @convert_move(%struct.rtx_def* %temp.0, %struct.rtx_def* %call22, i32 0) #6, !dbg !6877
  %call23 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call19) #6, !dbg !6878
  %call25 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1) #6, !dbg !6879
  %call26 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), %struct.rtx_def* %temp.0, %struct.rtx_def* %call25, %struct.rtx_def* %target, i32 0, i32 0) #8, !dbg !6880
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call26, metadata !6843, metadata !DIExpression()), !dbg !6849
  %tobool27 = icmp eq %struct.rtx_def* %call26, null, !dbg !6881
  br i1 %tobool27, label %fail, label %if.end29, !dbg !6883

if.end29:                                         ; preds = %if.end13
  %call30 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6884
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call30, metadata !6844, metadata !DIExpression()), !dbg !6849
  tail call void @end_sequence() #6, !dbg !6885
  %call31 = tail call fastcc i32 @add_equal_note(%struct.rtx_def* %call30, %struct.rtx_def* nonnull %call26, i32 114, %struct.rtx_def* %op0, %struct.rtx_def* null) #8, !dbg !6886
  %call32 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call30) #6, !dbg !6887
  br label %cleanup, !dbg !6888

fail:                                             ; preds = %if.then, %if.end13, %if.then6
  call void @llvm.dbg.label(metadata !6848), !dbg !6889
  tail call void @end_sequence() #6, !dbg !6890
  br label %cleanup, !dbg !6891

cleanup:                                          ; preds = %if.else, %fail, %if.end29
  %retval.0 = phi %struct.rtx_def* [ %call26, %if.end29 ], [ null, %fail ], [ null, %if.else ], !dbg !6849
  ret %struct.rtx_def* %retval.0, !dbg !6892
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_ctz(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) unnamed_addr #4 !dbg !6893 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6895, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6896, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6897, metadata !DIExpression()), !dbg !6900
  %idxprom = sext i32 %mode to i64, !dbg !6901
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71, i32 4, i64 %idxprom, i32 0, !dbg !6903
  %0 = load i32, i32* %insn_code, align 4, !dbg !6903
  %cmp = icmp eq i32 %0, 2956, !dbg !6904
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6905

if.end:                                           ; preds = %entry
  tail call void @start_sequence() #6, !dbg !6906
  %call = tail call fastcc %struct.rtx_def* @expand_unop_direct(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 64), %struct.rtx_def* %op0, %struct.rtx_def* null, i32 1) #8, !dbg !6907
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6899, metadata !DIExpression()), !dbg !6900
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !6908
  br i1 %tobool, label %if.end3, label %if.then1, !dbg !6910

if.then1:                                         ; preds = %if.end
  %call2 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.rtx_def* %op0, %struct.rtx_def* nonnull %call, %struct.rtx_def* null, i32 1, i32 0) #8, !dbg !6911
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !6899, metadata !DIExpression()), !dbg !6900
  br label %if.end3, !dbg !6912

if.end3:                                          ; preds = %if.end, %if.then1
  %temp.0 = phi %struct.rtx_def* [ %call2, %if.then1 ], [ null, %if.end ], !dbg !6900
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !6899, metadata !DIExpression()), !dbg !6900
  %tobool4 = icmp eq %struct.rtx_def* %temp.0, null, !dbg !6913
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !6915

if.then5:                                         ; preds = %if.end3
  %call6 = tail call fastcc %struct.rtx_def* @expand_unop_direct(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71), %struct.rtx_def* nonnull %temp.0, %struct.rtx_def* null, i32 1) #8, !dbg !6916
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !6899, metadata !DIExpression()), !dbg !6900
  br label %if.end7, !dbg !6917

if.end7:                                          ; preds = %if.end3, %if.then5
  %temp.1 = phi %struct.rtx_def* [ %call6, %if.then5 ], [ null, %if.end3 ], !dbg !6900
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.1, metadata !6899, metadata !DIExpression()), !dbg !6900
  %tobool8 = icmp eq %struct.rtx_def* %temp.1, null, !dbg !6918
  br i1 %tobool8, label %if.end18, label %if.then9, !dbg !6920

if.then9:                                         ; preds = %if.end7
  %idxprom10 = zext i32 %mode to i64, !dbg !6921
  %arrayidx11 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom10, !dbg !6921
  %1 = load i8, i8* %arrayidx11, align 1, !dbg !6921
  %conv12 = zext i8 %1 to i32, !dbg !6921
  %mul = shl nuw nsw i32 %conv12, 3, !dbg !6921
  %sub = add nsw i32 %mul, -1, !dbg !6921
  %conv15 = sext i32 %sub to i64, !dbg !6921
  %call16 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv15) #6, !dbg !6921
  %call17 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.rtx_def* %call16, %struct.rtx_def* nonnull %temp.1, %struct.rtx_def* %target, i32 1, i32 0) #8, !dbg !6922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call17, metadata !6899, metadata !DIExpression()), !dbg !6900
  br label %if.end18, !dbg !6923

if.end18:                                         ; preds = %if.end7, %if.then9
  %temp.2 = phi %struct.rtx_def* [ %call17, %if.then9 ], [ null, %if.end7 ], !dbg !6900
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.2, metadata !6899, metadata !DIExpression()), !dbg !6900
  %cmp19 = icmp eq %struct.rtx_def* %temp.2, null, !dbg !6924
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !6926

if.then21:                                        ; preds = %if.end18
  tail call void @end_sequence() #6, !dbg !6927
  br label %cleanup, !dbg !6929

if.end22:                                         ; preds = %if.end18
  %call23 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6930
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call23, metadata !6898, metadata !DIExpression()), !dbg !6900
  tail call void @end_sequence() #6, !dbg !6931
  %call24 = tail call fastcc i32 @add_equal_note(%struct.rtx_def* %call23, %struct.rtx_def* nonnull %temp.2, i32 116, %struct.rtx_def* %op0, %struct.rtx_def* null) #8, !dbg !6932
  %call25 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call23) #6, !dbg !6933
  br label %cleanup, !dbg !6934

cleanup:                                          ; preds = %entry, %if.end22, %if.then21
  %retval.0 = phi %struct.rtx_def* [ null, %if.then21 ], [ %temp.2, %if.end22 ], [ null, %entry ], !dbg !6900
  ret %struct.rtx_def* %retval.0, !dbg !6935
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #5

declare dso_local %struct.rtx_def* @hard_libcall_value(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_gen_unary(i32, i32, %struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_abs_nojump(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %result_unsignedp) local_unnamed_addr #4 !dbg !6936 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6940, metadata !DIExpression()), !dbg !6951
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6941, metadata !DIExpression()), !dbg !6951
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6942, metadata !DIExpression()), !dbg !6951
  call void @llvm.dbg.value(metadata i32 %result_unsignedp, metadata !6943, metadata !DIExpression()), !dbg !6951
  %0 = load i32, i32* @flag_trapv, align 4, !dbg !6952
  %tobool = icmp ne i32 %0, 0, !dbg !6952
  %tobool15 = icmp eq i32 %result_unsignedp, 0, !dbg !6954
  %tobool1 = and i1 %tobool15, %tobool, !dbg !6954
  %cond = select i1 %tobool1, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 67), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 66), !dbg !6954
  %call = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab_d* %cond, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 0) #8, !dbg !6955
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6944, metadata !DIExpression()), !dbg !6951
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !6956
  br i1 %cmp, label %if.end3, label %cleanup166, !dbg !6958

if.end3:                                          ; preds = %entry
  %idxprom = zext i32 %mode to i64, !dbg !6959
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !6959
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6959
  %cmp4 = icmp eq i8 %1, 8, !dbg !6959
  br i1 %cmp4, label %if.then11, label %lor.lhs.false, !dbg !6959

lor.lhs.false:                                    ; preds = %if.end3
  %cmp9 = icmp eq i8 %1, 9, !dbg !6959
  br i1 %cmp9, label %if.then11, label %if.end16, !dbg !6961

if.then11:                                        ; preds = %lor.lhs.false, %if.end3
  %call12 = tail call fastcc %struct.rtx_def* @expand_absneg_bit(i32 111, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) #8, !dbg !6962
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call12, metadata !6944, metadata !DIExpression()), !dbg !6951
  %tobool13 = icmp eq %struct.rtx_def* %call12, null, !dbg !6964
  br i1 %tobool13, label %if.end16, label %cleanup166, !dbg !6966

if.end16:                                         ; preds = %if.then11, %lor.lhs.false
  %idxprom17 = sext i32 %mode to i64, !dbg !6967
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 55, i32 4, i64 %idxprom17, i32 0, !dbg !6968
  %2 = load i32, i32* %insn_code, align 4, !dbg !6968
  %cmp19 = icmp eq i32 %2, 2956, !dbg !6969
  br i1 %cmp19, label %if.end124, label %land.lhs.true, !dbg !6970

land.lhs.true:                                    ; preds = %if.end16
  br i1 %cmp4, label %land.lhs.true44, label %lor.lhs.false26, !dbg !6971

lor.lhs.false26:                                  ; preds = %land.lhs.true
  %cmp30 = icmp eq i8 %1, 9, !dbg !6971
  br i1 %cmp30, label %land.lhs.true44, label %lor.lhs.false32, !dbg !6971

lor.lhs.false32:                                  ; preds = %lor.lhs.false26
  %cmp36 = icmp eq i8 %1, 11, !dbg !6971
  br i1 %cmp36, label %land.lhs.true44, label %lor.lhs.false38, !dbg !6971

lor.lhs.false38:                                  ; preds = %lor.lhs.false32
  %cmp42 = icmp eq i8 %1, 17, !dbg !6971
  br i1 %cmp42, label %land.lhs.true44, label %if.then112, !dbg !6971

land.lhs.true44:                                  ; preds = %lor.lhs.false38, %lor.lhs.false32, %lor.lhs.false26, %land.lhs.true
  br i1 %cmp4, label %cond.end, label %lor.lhs.false50, !dbg !6971

lor.lhs.false50:                                  ; preds = %land.lhs.true44
  %cmp54 = icmp eq i8 %1, 9, !dbg !6971
  br i1 %cmp54, label %cond.end, label %cond.false, !dbg !6971

cond.false:                                       ; preds = %lor.lhs.false50
  %arrayidx57 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !6971
  %3 = load i8, i8* %arrayidx57, align 1, !dbg !6971
  %.pre = zext i8 %3 to i64, !dbg !6971
  %arrayidx61.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre, !dbg !6972
  %.pre4 = load i8, i8* %arrayidx61.phi.trans.insert, align 1, !dbg !6971
  %phitmp = icmp eq i8 %.pre4, 9, !dbg !6971
  br label %cond.end, !dbg !6971

cond.end:                                         ; preds = %land.lhs.true44, %lor.lhs.false50, %cond.false
  %4 = phi i1 [ false, %land.lhs.true44 ], [ true, %lor.lhs.false50 ], [ %phitmp, %cond.false ]
  br i1 %4, label %cond.true65, label %cond.false84, !dbg !6971

cond.true65:                                      ; preds = %cond.end
  br i1 %cmp4, label %cond.end82, label %lor.lhs.false71, !dbg !6971

lor.lhs.false71:                                  ; preds = %cond.true65
  %cmp75 = icmp eq i8 %1, 9, !dbg !6971
  br i1 %cmp75, label %cond.end82, label %cond.false78, !dbg !6971

cond.false78:                                     ; preds = %lor.lhs.false71
  %arrayidx80 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !6971
  %5 = load i8, i8* %arrayidx80, align 1, !dbg !6971
  %conv81 = zext i8 %5 to i32, !dbg !6971
  br label %cond.end82, !dbg !6971

cond.end82:                                       ; preds = %cond.true65, %lor.lhs.false71, %cond.false78
  %cond83 = phi i32 [ %conv81, %cond.false78 ], [ %mode, %lor.lhs.false71 ], [ %mode, %cond.true65 ], !dbg !6971
  br label %cond.end104, !dbg !6971

cond.false84:                                     ; preds = %cond.end
  br i1 %cmp4, label %cond.end101, label %lor.lhs.false90, !dbg !6971

lor.lhs.false90:                                  ; preds = %cond.false84
  %cmp94 = icmp eq i8 %1, 9, !dbg !6971
  br i1 %cmp94, label %cond.end101, label %cond.false97, !dbg !6971

cond.false97:                                     ; preds = %lor.lhs.false90
  %arrayidx99 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !6971
  %6 = load i8, i8* %arrayidx99, align 1, !dbg !6971
  %conv100 = zext i8 %6 to i32, !dbg !6971
  br label %cond.end101, !dbg !6971

cond.end101:                                      ; preds = %cond.false84, %lor.lhs.false90, %cond.false97
  %cond102 = phi i32 [ %conv100, %cond.false97 ], [ %mode, %lor.lhs.false90 ], [ %mode, %cond.false84 ], !dbg !6971
  br label %cond.end104, !dbg !6971

cond.end104:                                      ; preds = %cond.end101, %cond.end82
  %cond105.in = phi i32 [ %cond83, %cond.end82 ], [ %cond102, %cond.end101 ]
  %cond105 = add i32 %cond105.in, -38, !dbg !6971
  %idxprom106 = zext i32 %cond105 to i64, !dbg !6971
  %arrayidx107 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom106, !dbg !6971
  %7 = load %struct.real_format*, %struct.real_format** %arrayidx107, align 8, !dbg !6971
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %7, i64 0, i32 14, !dbg !6971
  %8 = load i8, i8* %has_signed_zero, align 1, !dbg !6971
  %tobool109 = icmp ne i8 %8, 0, !dbg !6971
  %9 = load i32, i32* @flag_signed_zeros, align 4, !dbg !6971
  %tobool111 = icmp ne i32 %9, 0, !dbg !6971
  %or.cond = and i1 %tobool109, %tobool111, !dbg !6971
  br i1 %or.cond, label %if.end124, label %if.then112, !dbg !6971

if.then112:                                       ; preds = %cond.end104, %lor.lhs.false38
  %call113 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call113, metadata !6945, metadata !DIExpression()), !dbg !6974
  %call114 = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 64), %struct.rtx_def* %op0, %struct.rtx_def* null, i32 0) #8, !dbg !6975
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call114, metadata !6944, metadata !DIExpression()), !dbg !6951
  %cmp115 = icmp eq %struct.rtx_def* %call114, null, !dbg !6976
  br i1 %cmp115, label %if.end119, label %if.then117, !dbg !6978

if.then117:                                       ; preds = %if.then112
  %call118 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 55), %struct.rtx_def* %op0, %struct.rtx_def* nonnull %call114, %struct.rtx_def* %target, i32 0, i32 2) #8, !dbg !6979
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call118, metadata !6944, metadata !DIExpression()), !dbg !6951
  br label %if.end119, !dbg !6980

if.end119:                                        ; preds = %if.then112, %if.then117
  %temp.0 = phi %struct.rtx_def* [ %call118, %if.then117 ], [ null, %if.then112 ], !dbg !6974
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !6944, metadata !DIExpression()), !dbg !6951
  %cmp120 = icmp eq %struct.rtx_def* %temp.0, null, !dbg !6981
  br i1 %cmp120, label %if.end123, label %cleanup, !dbg !6983

if.end123:                                        ; preds = %if.end119
  tail call void @delete_insns_since(%struct.rtx_def* %call113) #6, !dbg !6984
  br label %cleanup, !dbg !6985

cleanup:                                          ; preds = %if.end119, %if.end123
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end123 ], [ false, %if.end119 ]
  br i1 %cleanup.dest.slot.0, label %if.end124, label %cleanup166

if.end124:                                        ; preds = %if.end16, %cleanup, %cond.end104
  %retval.1 = phi %struct.rtx_def* [ undef, %if.end16 ], [ undef, %cond.end104 ], [ %temp.0, %cleanup ]
  %cmp128 = icmp eq i8 %1, 2, !dbg !6986
  br i1 %cmp128, label %land.lhs.true130, label %if.end165, !dbg !6987

land.lhs.true130:                                 ; preds = %if.end124
  %call131 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !6988
  %tobool132 = icmp eq i8 %call131, 0, !dbg !6988
  %10 = load i32, i32* @ix86_branch_cost, align 4, !dbg !6988
  %cmp1373 = icmp sgt i32 %10, 1, !dbg !6989
  %cmp137 = or i1 %tobool132, %cmp1373, !dbg !6989
  br i1 %cmp137, label %if.then139, label %if.end165, !dbg !6990

if.then139:                                       ; preds = %land.lhs.true130
  %arrayidx141 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6991
  %11 = load i8, i8* %arrayidx141, align 1, !dbg !6991
  %conv143 = zext i8 %11 to i32, !dbg !6991
  %mul = shl nuw nsw i32 %conv143, 3, !dbg !6991
  %sub146 = add nsw i32 %mul, -1, !dbg !6991
  %conv147 = sext i32 %sub146 to i64, !dbg !6991
  %call148 = tail call %union.tree_node* @size_int_kind(i64 %conv147, i32 0) #6, !dbg !6991
  %call149 = tail call %struct.rtx_def* @expand_shift(i32 84, i32 %mode, %struct.rtx_def* %op0, %union.tree_node* %call148, %struct.rtx_def* null, i32 0) #6, !dbg !6992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call149, metadata !6948, metadata !DIExpression()), !dbg !6993
  %call150 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), %struct.rtx_def* %call149, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 0, i32 3) #8, !dbg !6994
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call150, metadata !6944, metadata !DIExpression()), !dbg !6951
  %cmp151 = icmp eq %struct.rtx_def* %call150, null, !dbg !6995
  br i1 %cmp151, label %if.end157, label %if.then153, !dbg !6997

if.then153:                                       ; preds = %if.then139
  %cond155 = select i1 %tobool1, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 15), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), !dbg !6998
  %call156 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* %cond155, %struct.rtx_def* nonnull %call150, %struct.rtx_def* %call149, %struct.rtx_def* %target, i32 0, i32 3) #8, !dbg !6999
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call156, metadata !6944, metadata !DIExpression()), !dbg !6951
  br label %if.end157, !dbg !7000

if.end157:                                        ; preds = %if.then139, %if.then153
  %temp.1 = phi %struct.rtx_def* [ %call156, %if.then153 ], [ null, %if.then139 ], !dbg !6993
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.1, metadata !6944, metadata !DIExpression()), !dbg !6951
  %cmp158 = icmp ne %struct.rtx_def* %temp.1, null, !dbg !7001
  %temp.1.retval.1 = select i1 %cmp158, %struct.rtx_def* %temp.1, %struct.rtx_def* %retval.1, !dbg !7003
  br i1 %cmp158, label %cleanup166, label %if.end165

if.end165:                                        ; preds = %if.end157, %land.lhs.true130, %if.end124
  br label %cleanup166, !dbg !7004

cleanup166:                                       ; preds = %if.then11, %if.end157, %entry, %cleanup, %if.end165
  %retval.3 = phi %struct.rtx_def* [ %temp.1.retval.1, %if.end157 ], [ null, %if.end165 ], [ %temp.0, %cleanup ], [ %call, %entry ], [ %call12, %if.then11 ], !dbg !6951
  ret %struct.rtx_def* %retval.3, !dbg !7005
}

declare dso_local %struct.rtx_def* @expand_shift(i32, i32, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_abs(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %result_unsignedp, i32 %safe) local_unnamed_addr #4 !dbg !7006 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7010, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !7011, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !7012, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.value(metadata i32 %result_unsignedp, metadata !7013, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.value(metadata i32 %safe, metadata !7014, metadata !DIExpression()), !dbg !7017
  %0 = load i32, i32* @flag_trapv, align 4, !dbg !7018
  %tobool = icmp eq i32 %0, 0, !dbg !7018
  %spec.select = select i1 %tobool, i32 1, i32 %result_unsignedp, !dbg !7020
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !7013, metadata !DIExpression()), !dbg !7017
  %call = tail call %struct.rtx_def* @expand_abs_nojump(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %spec.select) #8, !dbg !7021
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7015, metadata !DIExpression()), !dbg !7017
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !7022
  br i1 %cmp, label %if.end2, label %cleanup, !dbg !7024

if.end2:                                          ; preds = %entry
  %cmp3 = icmp eq %struct.rtx_def* %op0, %target, !dbg !7025
  br i1 %cmp3, label %land.lhs.true, label %if.end9, !dbg !7027

land.lhs.true:                                    ; preds = %if.end2
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0, i64 0, i32 0, !dbg !7028
  %bf.load = load i32, i32* %1, align 8, !dbg !7028
  %bf.clear = and i32 %bf.load, 65535, !dbg !7028
  %cmp4 = icmp eq i32 %bf.clear, 37, !dbg !7028
  br i1 %cmp4, label %land.lhs.true5, label %if.end9, !dbg !7029

land.lhs.true5:                                   ; preds = %land.lhs.true
  %call6 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %op0) #8, !dbg !7030
  %cmp7 = icmp ugt i32 %call6, 52, !dbg !7031
  %spec.select1 = select i1 %cmp7, i32 1, i32 %safe, !dbg !7032
  br label %if.end9, !dbg !7032

if.end9:                                          ; preds = %land.lhs.true5, %land.lhs.true, %if.end2
  %safe.addr.0 = phi i32 [ %safe, %land.lhs.true ], [ %safe, %if.end2 ], [ %spec.select1, %land.lhs.true5 ]
  call void @llvm.dbg.value(metadata i32 %safe.addr.0, metadata !7014, metadata !DIExpression()), !dbg !7017
  %call10 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !7033
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !7016, metadata !DIExpression()), !dbg !7017
  %cmp11 = icmp ne %struct.rtx_def* %target, null, !dbg !7034
  %tobool12 = icmp ne i32 %safe.addr.0, 0, !dbg !7036
  %or.cond = and i1 %cmp11, %tobool12, !dbg !7037
  br i1 %or.cond, label %lor.lhs.false13, label %if.then33, !dbg !7037

lor.lhs.false13:                                  ; preds = %if.end9
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !7038
  %bf.load14 = load i32, i32* %2, align 8, !dbg !7038
  %bf.lshr = lshr i32 %bf.load14, 16, !dbg !7038
  %bf.clear15 = and i32 %bf.lshr, 255, !dbg !7038
  %cmp16 = icmp eq i32 %bf.clear15, %mode, !dbg !7039
  br i1 %cmp16, label %lor.lhs.false17, label %if.then33, !dbg !7040

lor.lhs.false17:                                  ; preds = %lor.lhs.false13
  %bf.clear19 = and i32 %bf.load14, 65535, !dbg !7041
  %cmp20 = icmp eq i32 %bf.clear19, 43, !dbg !7041
  br i1 %cmp20, label %land.lhs.true21, label %lor.lhs.false26, !dbg !7042

land.lhs.true21:                                  ; preds = %lor.lhs.false17
  %bf.clear24 = and i32 %bf.load14, 134217728, !dbg !7043
  %tobool25 = icmp eq i32 %bf.clear24, 0, !dbg !7043
  br i1 %tobool25, label %lor.lhs.false26, label %if.then33, !dbg !7044

lor.lhs.false26:                                  ; preds = %land.lhs.true21, %lor.lhs.false17
  %cmp29 = icmp eq i32 %bf.clear19, 37, !dbg !7045
  br i1 %cmp29, label %land.lhs.true30, label %if.end35, !dbg !7046

land.lhs.true30:                                  ; preds = %lor.lhs.false26
  %call31 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %target) #8, !dbg !7047
  %cmp32 = icmp ult i32 %call31, 53, !dbg !7048
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !7049

if.then33:                                        ; preds = %land.lhs.true21, %lor.lhs.false13, %if.end9, %land.lhs.true30
  %call34 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !7050
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !7012, metadata !DIExpression()), !dbg !7017
  br label %if.end35, !dbg !7051

if.end35:                                         ; preds = %if.then33, %land.lhs.true30, %lor.lhs.false26
  %target.addr.0 = phi %struct.rtx_def* [ %call34, %if.then33 ], [ %target, %land.lhs.true30 ], [ %target, %lor.lhs.false26 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !7012, metadata !DIExpression()), !dbg !7017
  %call36 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %op0) #6, !dbg !7052
  %3 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !7053
  %add = add nsw i32 %3, 1, !dbg !7053
  store i32 %add, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !7053
  %idxprom = sext i32 %mode to i64, !dbg !7054
  %arrayidx = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom, !dbg !7054
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !7054
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %4, i32 82, i32 0, i32 %mode, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %call10, i32 -1) #6, !dbg !7055
  %tobool37 = icmp eq i32 %spec.select, 0, !dbg !7056
  %cond = select i1 %tobool37, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 65), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 64), !dbg !7056
  %call38 = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab_d* %cond, %struct.rtx_def* %target.addr.0, %struct.rtx_def* %target.addr.0, i32 0) #8, !dbg !7057
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call38, metadata !7011, metadata !DIExpression()), !dbg !7017
  %cmp39 = icmp eq %struct.rtx_def* %call38, %target.addr.0, !dbg !7058
  br i1 %cmp39, label %if.end42, label %if.then40, !dbg !7060

if.then40:                                        ; preds = %if.end35
  %call41 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %call38) #6, !dbg !7061
  br label %if.end42, !dbg !7061

if.end42:                                         ; preds = %if.end35, %if.then40
  %call43 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call10) #6, !dbg !7062
  %5 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !7063
  %sub = add nsw i32 %5, -1, !dbg !7063
  store i32 %sub, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !7063
  br label %cleanup, !dbg !7064

cleanup:                                          ; preds = %entry, %if.end42
  %retval.0 = phi %struct.rtx_def* [ %target.addr.0, %if.end42 ], [ %call, %entry ], !dbg !7017
  ret %struct.rtx_def* %retval.0, !dbg !7065
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !7066 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7073, metadata !DIExpression()), !dbg !7074
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7075
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7075
  %0 = load i32, i32* %rt_uint, align 8, !dbg !7075
  ret i32 %0, !dbg !7076
}

declare dso_local %struct.rtx_def* @gen_label_rtx() local_unnamed_addr #1

declare dso_local void @do_compare_rtx_and_jump(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_label(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_one_cmpl_abs_nojump(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target) local_unnamed_addr #4 !dbg !7077 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7079, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !7080, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !7081, metadata !DIExpression()), !dbg !7089
  %idxprom = zext i32 %mode to i64, !dbg !7090
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !7090
  %0 = load i8, i8* %arrayidx, align 1, !dbg !7090
  %cmp = icmp eq i8 %0, 8, !dbg !7090
  br i1 %cmp, label %cleanup62, label %lor.lhs.false, !dbg !7090

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 9, !dbg !7090
  br i1 %cmp5, label %cleanup62, label %lor.lhs.false7, !dbg !7090

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i8 %0, 11, !dbg !7090
  br i1 %cmp11, label %cleanup62, label %lor.lhs.false13, !dbg !7090

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %cmp17 = icmp eq i8 %0, 17, !dbg !7090
  br i1 %cmp17, label %cleanup62, label %if.end, !dbg !7092

if.end:                                           ; preds = %lor.lhs.false13
  %idxprom19 = sext i32 %mode to i64, !dbg !7093
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 55, i32 4, i64 %idxprom19, i32 0, !dbg !7094
  %1 = load i32, i32* %insn_code, align 4, !dbg !7094
  %cmp21 = icmp eq i32 %1, 2956, !dbg !7095
  br i1 %cmp21, label %if.end34, label %if.then23, !dbg !7096

if.then23:                                        ; preds = %if.end
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !7097
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7083, metadata !DIExpression()), !dbg !7098
  %call24 = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 69), %struct.rtx_def* %op0, %struct.rtx_def* null, i32 0) #8, !dbg !7099
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !7082, metadata !DIExpression()), !dbg !7089
  %cmp25 = icmp eq %struct.rtx_def* %call24, null, !dbg !7100
  br i1 %cmp25, label %if.end29, label %if.then27, !dbg !7102

if.then27:                                        ; preds = %if.then23
  %call28 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 55), %struct.rtx_def* %op0, %struct.rtx_def* nonnull %call24, %struct.rtx_def* %target, i32 0, i32 2) #8, !dbg !7103
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !7082, metadata !DIExpression()), !dbg !7089
  br label %if.end29, !dbg !7104

if.end29:                                         ; preds = %if.then23, %if.then27
  %temp.0 = phi %struct.rtx_def* [ %call28, %if.then27 ], [ null, %if.then23 ], !dbg !7098
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !7082, metadata !DIExpression()), !dbg !7089
  %cmp30 = icmp eq %struct.rtx_def* %temp.0, null, !dbg !7105
  br i1 %cmp30, label %if.end33, label %cleanup, !dbg !7107

if.end33:                                         ; preds = %if.end29
  tail call void @delete_insns_since(%struct.rtx_def* %call) #6, !dbg !7108
  br label %cleanup, !dbg !7109

cleanup:                                          ; preds = %if.end29, %if.end33
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end33 ], [ false, %if.end29 ]
  br i1 %cleanup.dest.slot.0, label %if.end34, label %cleanup62

if.end34:                                         ; preds = %if.end, %cleanup
  %retval.1 = phi %struct.rtx_def* [ undef, %if.end ], [ %temp.0, %cleanup ]
  %cmp38 = icmp eq i8 %0, 2, !dbg !7110
  br i1 %cmp38, label %land.lhs.true, label %if.end61, !dbg !7111

land.lhs.true:                                    ; preds = %if.end34
  %call40 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !7112
  %tobool = icmp eq i8 %call40, 0, !dbg !7112
  %2 = load i32, i32* @ix86_branch_cost, align 4, !dbg !7112
  %cmp413 = icmp sgt i32 %2, 1, !dbg !7113
  %cmp41 = or i1 %tobool, %cmp413, !dbg !7113
  br i1 %cmp41, label %if.then43, label %if.end61, !dbg !7114

if.then43:                                        ; preds = %land.lhs.true
  %arrayidx45 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7115
  %3 = load i8, i8* %arrayidx45, align 1, !dbg !7115
  %conv47 = zext i8 %3 to i32, !dbg !7115
  %mul = shl nuw nsw i32 %conv47, 3, !dbg !7115
  %sub = add nsw i32 %mul, -1, !dbg !7115
  %conv50 = sext i32 %sub to i64, !dbg !7115
  %call51 = tail call %union.tree_node* @size_int_kind(i64 %conv50, i32 0) #6, !dbg !7115
  %call52 = tail call %struct.rtx_def* @expand_shift(i32 84, i32 %mode, %struct.rtx_def* %op0, %union.tree_node* %call51, %struct.rtx_def* null, i32 0) #6, !dbg !7116
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call52, metadata !7086, metadata !DIExpression()), !dbg !7117
  %call53 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), %struct.rtx_def* %call52, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 0, i32 3) #8, !dbg !7118
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call53, metadata !7082, metadata !DIExpression()), !dbg !7089
  %cmp54 = icmp ne %struct.rtx_def* %call53, null, !dbg !7119
  %call53.retval.1 = select i1 %cmp54, %struct.rtx_def* %call53, %struct.rtx_def* %retval.1, !dbg !7121
  br i1 %cmp54, label %cleanup62, label %if.end61

if.end61:                                         ; preds = %if.then43, %land.lhs.true, %if.end34
  br label %cleanup62, !dbg !7122

cleanup62:                                        ; preds = %if.then43, %entry, %lor.lhs.false, %lor.lhs.false7, %lor.lhs.false13, %cleanup, %if.end61
  %retval.3 = phi %struct.rtx_def* [ %temp.0, %cleanup ], [ %call53.retval.1, %if.then43 ], [ null, %if.end61 ], [ null, %lor.lhs.false13 ], [ null, %lor.lhs.false7 ], [ null, %lor.lhs.false ], [ null, %entry ], !dbg !7089
  ret %struct.rtx_def* %retval.3, !dbg !7123
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_copysign(%struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target) local_unnamed_addr #4 !dbg !7124 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !7128, metadata !DIExpression()), !dbg !7135
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !7129, metadata !DIExpression()), !dbg !7135
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !7130, metadata !DIExpression()), !dbg !7135
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0, i64 0, i32 0, !dbg !7136
  %bf.load = load i32, i32* %0, align 8, !dbg !7136
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7136
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7136
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7131, metadata !DIExpression()), !dbg !7135
  %idxprom = zext i32 %bf.clear to i64, !dbg !7137
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !7137
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7137
  %cmp = icmp eq i8 %1, 8, !dbg !7137
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !7137

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %1, 9, !dbg !7137
  br i1 %cmp5, label %cond.end, label %cond.true, !dbg !7137

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 3749, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7137
  br label %cond.end, !dbg !7137

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1, i64 0, i32 0, !dbg !7138
  %bf.load7 = load i32, i32* %2, align 8, !dbg !7138
  %bf.lshr8 = lshr i32 %bf.load7, 16, !dbg !7138
  %bf.clear9 = and i32 %bf.lshr8, 255, !dbg !7138
  %cmp10 = icmp eq i32 %bf.clear9, %bf.clear, !dbg !7138
  br i1 %cmp10, label %cond.end14, label %cond.true12, !dbg !7138

cond.true12:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 3750, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7138
  br label %cond.end14, !dbg !7138

cond.end14:                                       ; preds = %cond.end, %cond.true12
  %call = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 102), %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 0, i32 0) #8, !dbg !7139
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7134, metadata !DIExpression()), !dbg !7135
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !7140
  br i1 %tobool, label %if.end, label %cleanup, !dbg !7142

if.end:                                           ; preds = %cond.end14
  %cond25 = add nsw i32 %bf.clear, -38, !dbg !7143
  %idxprom26 = zext i32 %cond25 to i64, !dbg !7143
  %arrayidx27 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom26, !dbg !7143
  %3 = load %struct.real_format*, %struct.real_format** %arrayidx27, align 8, !dbg !7143
  call void @llvm.dbg.value(metadata %struct.real_format* %3, metadata !7132, metadata !DIExpression()), !dbg !7135
  %cmp28 = icmp eq %struct.real_format* %3, null, !dbg !7144
  br i1 %cmp28, label %cleanup, label %lor.lhs.false30, !dbg !7146

lor.lhs.false30:                                  ; preds = %if.end
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %3, i64 0, i32 14, !dbg !7147
  %4 = load i8, i8* %has_signed_zero, align 1, !dbg !7147
  %tobool31 = icmp eq i8 %4, 0, !dbg !7148
  br i1 %tobool31, label %cleanup, label %if.end33, !dbg !7149

if.end33:                                         ; preds = %lor.lhs.false30
  call void @llvm.dbg.value(metadata i8 0, metadata !7133, metadata !DIExpression()), !dbg !7135
  %bf.load34 = load i32, i32* %0, align 8, !dbg !7150
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !7150
  %cmp36 = icmp eq i32 %bf.clear35, 32, !dbg !7152
  br i1 %cmp36, label %if.then38, label %if.end44, !dbg !7153

if.then38:                                        ; preds = %if.end33
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0, i64 0, i32 1, !dbg !7154
  %rv = bitcast %union.u* %u to %struct.real_value*, !dbg !7154
  %call39 = tail call zeroext i8 @real_isneg(%struct.real_value* nonnull %rv) #6, !dbg !7157
  %tobool40 = icmp eq i8 %call39, 0, !dbg !7157
  br i1 %tobool40, label %if.end44, label %if.then41, !dbg !7158

if.then41:                                        ; preds = %if.then38
  %call42 = tail call %struct.rtx_def* @simplify_unary_operation(i32 111, i32 %bf.clear, %struct.rtx_def* %op0, i32 %bf.clear) #6, !dbg !7159
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call42, metadata !7128, metadata !DIExpression()), !dbg !7135
  br label %if.end44, !dbg !7160

if.end44:                                         ; preds = %if.then38, %if.then41, %if.end33
  %op0_is_abs.0 = phi i8 [ 0, %if.end33 ], [ 1, %if.then41 ], [ 1, %if.then38 ], !dbg !7135
  %op0.addr.1 = phi %struct.rtx_def* [ %op0, %if.end33 ], [ %call42, %if.then41 ], [ %op0, %if.then38 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.addr.1, metadata !7128, metadata !DIExpression()), !dbg !7135
  call void @llvm.dbg.value(metadata i8 %op0_is_abs.0, metadata !7133, metadata !DIExpression()), !dbg !7135
  %signbit_ro = getelementptr inbounds %struct.real_format, %struct.real_format* %3, i64 0, i32 7, !dbg !7161
  %5 = load i32, i32* %signbit_ro, align 4, !dbg !7161
  %cmp45 = icmp sgt i32 %5, -1, !dbg !7163
  br i1 %cmp45, label %land.lhs.true, label %if.end68, !dbg !7164

land.lhs.true:                                    ; preds = %if.end44
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.addr.1, i64 0, i32 0, !dbg !7165
  %bf.load47 = load i32, i32* %6, align 8, !dbg !7165
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !7165
  %cmp49 = icmp eq i32 %bf.clear48, 32, !dbg !7166
  br i1 %cmp49, label %if.then62, label %lor.lhs.false51, !dbg !7167

lor.lhs.false51:                                  ; preds = %land.lhs.true
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 64, i32 4, i64 %idxprom, i32 0, !dbg !7168
  %7 = load i32, i32* %insn_code, align 4, !dbg !7168
  %cmp54 = icmp eq i32 %7, 2956, !dbg !7169
  br i1 %cmp54, label %if.end68, label %land.lhs.true56, !dbg !7170

land.lhs.true56:                                  ; preds = %lor.lhs.false51
  %insn_code59 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 66, i32 4, i64 %idxprom, i32 0, !dbg !7171
  %8 = load i32, i32* %insn_code59, align 4, !dbg !7171
  %cmp60 = icmp eq i32 %8, 2956, !dbg !7172
  br i1 %cmp60, label %if.end68, label %if.then62, !dbg !7173

if.then62:                                        ; preds = %land.lhs.true56, %land.lhs.true
  %call64 = tail call fastcc %struct.rtx_def* @expand_copysign_absneg(i32 %bf.clear, %struct.rtx_def* %op0.addr.1, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %5, i8 zeroext %op0_is_abs.0) #8, !dbg !7174
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64, metadata !7134, metadata !DIExpression()), !dbg !7135
  %tobool65 = icmp eq %struct.rtx_def* %call64, null, !dbg !7176
  br i1 %tobool65, label %if.end68, label %cleanup, !dbg !7178

if.end68:                                         ; preds = %if.then62, %land.lhs.true56, %lor.lhs.false51, %if.end44
  %signbit_rw = getelementptr inbounds %struct.real_format, %struct.real_format* %3, i64 0, i32 8, !dbg !7179
  %9 = load i32, i32* %signbit_rw, align 8, !dbg !7179
  %cmp69 = icmp slt i32 %9, 0, !dbg !7181
  br i1 %cmp69, label %cleanup, label %if.end72, !dbg !7182

if.end72:                                         ; preds = %if.end68
  %call74 = tail call fastcc %struct.rtx_def* @expand_copysign_bit(i32 %bf.clear, %struct.rtx_def* %op0.addr.1, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %9, i8 zeroext %op0_is_abs.0) #8, !dbg !7183
  br label %cleanup, !dbg !7184

cleanup:                                          ; preds = %if.then62, %lor.lhs.false30, %cond.end14, %if.end68, %if.end, %if.end72
  %retval.0 = phi %struct.rtx_def* [ %call74, %if.end72 ], [ %call, %cond.end14 ], [ null, %lor.lhs.false30 ], [ null, %if.end ], [ %call64, %if.then62 ], [ null, %if.end68 ], !dbg !7135
  ret %struct.rtx_def* %retval.0, !dbg !7185
}

declare dso_local zeroext i8 @real_isneg(%struct.real_value*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_unary_operation(i32, i32, %struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_copysign_absneg(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %bitpos, i8 zeroext %op0_is_abs) unnamed_addr #4 !dbg !7186 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7190, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !7191, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !7192, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !7193, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.value(metadata i32 %bitpos, metadata !7194, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.value(metadata i8 %op0_is_abs, metadata !7195, metadata !DIExpression()), !dbg !7207
  %cmp = icmp eq %struct.rtx_def* %target, %op1, !dbg !7208
  %spec.select = select i1 %cmp, %struct.rtx_def* null, %struct.rtx_def* %target, !dbg !7210
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !7193, metadata !DIExpression()), !dbg !7207
  %idxprom = sext i32 %mode to i64, !dbg !7211
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 103, i32 4, i64 %idxprom, i32 0, !dbg !7212
  %0 = load i32, i32* %insn_code, align 4, !dbg !7212
  call void @llvm.dbg.value(metadata i32 %0, metadata !7197, metadata !DIExpression()), !dbg !7207
  %cmp1 = icmp eq i32 %0, 2956, !dbg !7213
  br i1 %cmp1, label %if.else, label %if.then2, !dbg !7214

if.then2:                                         ; preds = %entry
  %idxprom3 = sext i32 %0 to i64, !dbg !7215
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom3, i32 3, !dbg !7217
  %1 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !7217
  %mode6 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 0, i32 2, !dbg !7218
  %bf.load = load i16, i16* %mode6, align 8, !dbg !7218
  %bf.cast = zext i16 %bf.load to i32, !dbg !7218
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !7196, metadata !DIExpression()), !dbg !7207
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast) #6, !dbg !7219
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7198, metadata !DIExpression()), !dbg !7207
  tail call void @emit_unop_insn(i32 %0, %struct.rtx_def* %call, %struct.rtx_def* %op1, i32 0) #8, !dbg !7220
  br label %if.end33, !dbg !7221

if.else:                                          ; preds = %entry
  %idxprom7 = zext i32 %mode to i64, !dbg !7222
  %arrayidx8 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom7, !dbg !7222
  %2 = load i8, i8* %arrayidx8, align 1, !dbg !7222
  %cmp10 = icmp ult i8 %2, 5, !dbg !7223
  br i1 %cmp10, label %if.then12, label %if.else19, !dbg !7224

if.then12:                                        ; preds = %if.else
  %call13 = tail call i32 @int_mode_for_mode(i32 %mode) #6, !dbg !7225
  call void @llvm.dbg.value(metadata i32 %call13, metadata !7196, metadata !DIExpression()), !dbg !7207
  %cmp14 = icmp eq i32 %call13, 1, !dbg !7227
  br i1 %cmp14, label %cleanup, label %if.end17, !dbg !7229

if.end17:                                         ; preds = %if.then12
  %3 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !7230
  %call18 = tail call %struct.rtx_def* %3(i32 %call13, %struct.rtx_def* %op1) #6, !dbg !7230
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call18, metadata !7192, metadata !DIExpression()), !dbg !7207
  br label %if.end21, !dbg !7231

if.else19:                                        ; preds = %if.else
  %4 = load i32, i32* @word_mode, align 4, !dbg !7232
  call void @llvm.dbg.value(metadata i32 %4, metadata !7196, metadata !DIExpression()), !dbg !7207
  %div = sdiv i32 %bitpos, 32, !dbg !7233
  call void @llvm.dbg.value(metadata i32 %div, metadata !7204, metadata !DIExpression()), !dbg !7235
  %rem = srem i32 %bitpos, 32, !dbg !7236
  call void @llvm.dbg.value(metadata i32 %rem, metadata !7194, metadata !DIExpression()), !dbg !7207
  %call20 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1, i32 %div, i32 %mode) #6, !dbg !7237
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call20, metadata !7192, metadata !DIExpression()), !dbg !7207
  br label %if.end21

if.end21:                                         ; preds = %if.else19, %if.end17
  %imode.0 = phi i32 [ %call13, %if.end17 ], [ %4, %if.else19 ], !dbg !7238
  %bitpos.addr.0 = phi i32 [ %bitpos, %if.end17 ], [ %rem, %if.else19 ]
  %op1.addr.0 = phi %struct.rtx_def* [ %call18, %if.end17 ], [ %call20, %if.else19 ], !dbg !7238
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.0, metadata !7192, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.value(metadata i32 %bitpos.addr.0, metadata !7194, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.value(metadata i32 %imode.0, metadata !7196, metadata !DIExpression()), !dbg !7207
  %cmp22 = icmp slt i32 %bitpos.addr.0, 64, !dbg !7239
  %sh_prom = zext i32 %bitpos.addr.0 to i64, !dbg !7241
  %shl = shl i64 1, %sh_prom, !dbg !7241
  %sub = add nsw i32 %bitpos.addr.0, -64, !dbg !7241
  %sh_prom26 = zext i32 %sub to i64, !dbg !7241
  %shl27 = shl i64 1, %sh_prom26, !dbg !7241
  %hi.0 = select i1 %cmp22, i64 0, i64 %shl27, !dbg !7241
  %lo.0 = select i1 %cmp22, i64 %shl, i64 0, !dbg !7241
  call void @llvm.dbg.value(metadata i64 %lo.0, metadata !7203, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.value(metadata i64 %hi.0, metadata !7200, metadata !DIExpression()), !dbg !7242
  %call29 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %imode.0) #6, !dbg !7243
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call29, metadata !7198, metadata !DIExpression()), !dbg !7207
  %call30 = tail call %struct.rtx_def* @immed_double_const(i64 %lo.0, i64 %hi.0, i32 %imode.0) #6, !dbg !7244
  %call31 = tail call %struct.rtx_def* @expand_binop(i32 %imode.0, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.rtx_def* %op1.addr.0, %struct.rtx_def* %call30, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !7245
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !7198, metadata !DIExpression()), !dbg !7207
  br label %cleanup, !dbg !7246

cleanup:                                          ; preds = %if.then12, %if.end21
  %sign.0 = phi %struct.rtx_def* [ %call31, %if.end21 ], [ undef, %if.then12 ]
  %imode.1 = phi i32 [ %imode.0, %if.end21 ], [ 1, %if.then12 ], !dbg !7247
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end21 ], [ false, %if.then12 ]
  call void @llvm.dbg.value(metadata i32 %imode.1, metadata !7196, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %sign.0, metadata !7198, metadata !DIExpression()), !dbg !7207
  br i1 %cleanup.dest.slot.0, label %if.end33, label %cleanup64

if.end33:                                         ; preds = %cleanup, %if.then2
  %sign.1 = phi %struct.rtx_def* [ %call, %if.then2 ], [ %sign.0, %cleanup ]
  %imode.2 = phi i32 [ %bf.cast, %if.then2 ], [ %imode.1, %cleanup ], !dbg !7248
  call void @llvm.dbg.value(metadata i32 %imode.2, metadata !7196, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %sign.1, metadata !7198, metadata !DIExpression()), !dbg !7207
  %tobool = icmp eq i8 %op0_is_abs, 0, !dbg !7249
  br i1 %tobool, label %if.then34, label %if.else40, !dbg !7251

if.then34:                                        ; preds = %if.end33
  %call35 = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 66), %struct.rtx_def* %op0, %struct.rtx_def* %spec.select, i32 0) #8, !dbg !7252
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call35, metadata !7191, metadata !DIExpression()), !dbg !7207
  %cmp36 = icmp eq %struct.rtx_def* %call35, null, !dbg !7254
  br i1 %cmp36, label %cleanup64, label %if.end48, !dbg !7256

if.else40:                                        ; preds = %if.end33
  %cmp41 = icmp eq %struct.rtx_def* %spec.select, null, !dbg !7257
  br i1 %cmp41, label %if.then43, label %if.else45, !dbg !7260

if.then43:                                        ; preds = %if.else40
  %call44 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %op0) #6, !dbg !7261
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !7193, metadata !DIExpression()), !dbg !7207
  br label %if.end48, !dbg !7262

if.else45:                                        ; preds = %if.else40
  %call46 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %spec.select, %struct.rtx_def* %op0) #6, !dbg !7263
  br label %if.end48

if.end48:                                         ; preds = %if.then43, %if.else45, %if.then34
  %target.addr.2 = phi %struct.rtx_def* [ %call35, %if.then34 ], [ %call44, %if.then43 ], [ %spec.select, %if.else45 ], !dbg !7264
  %op0.addr.0 = phi %struct.rtx_def* [ %call35, %if.then34 ], [ %op0, %if.then43 ], [ %op0, %if.else45 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.addr.0, metadata !7191, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.2, metadata !7193, metadata !DIExpression()), !dbg !7207
  %call49 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !7265
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !7199, metadata !DIExpression()), !dbg !7207
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7266
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %sign.1, %struct.rtx_def* %5, i32 81, %struct.rtx_def* null, i32 %imode.2, i32 1, %struct.rtx_def* %call49) #8, !dbg !7267
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.addr.0, i64 0, i32 0, !dbg !7268
  %bf.load50 = load i32, i32* %6, align 8, !dbg !7268
  %bf.clear = and i32 %bf.load50, 65535, !dbg !7268
  %cmp51 = icmp eq i32 %bf.clear, 32, !dbg !7270
  br i1 %cmp51, label %if.then53, label %if.else55, !dbg !7271

if.then53:                                        ; preds = %if.end48
  %call54 = tail call %struct.rtx_def* @simplify_unary_operation(i32 51, i32 %mode, %struct.rtx_def* %op0.addr.0, i32 %mode) #6, !dbg !7272
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call54, metadata !7191, metadata !DIExpression()), !dbg !7207
  br label %if.end57, !dbg !7273

if.else55:                                        ; preds = %if.end48
  %call56 = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 64), %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %target.addr.2, i32 0) #8, !dbg !7274
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call56, metadata !7191, metadata !DIExpression()), !dbg !7207
  br label %if.end57

if.end57:                                         ; preds = %if.else55, %if.then53
  %op0.addr.1 = phi %struct.rtx_def* [ %call54, %if.then53 ], [ %call56, %if.else55 ], !dbg !7275
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.addr.1, metadata !7191, metadata !DIExpression()), !dbg !7207
  %cmp58 = icmp eq %struct.rtx_def* %op0.addr.1, %target.addr.2, !dbg !7276
  br i1 %cmp58, label %if.end62, label %if.then60, !dbg !7278

if.then60:                                        ; preds = %if.end57
  %call61 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.2, %struct.rtx_def* %op0.addr.1) #6, !dbg !7279
  br label %if.end62, !dbg !7279

if.end62:                                         ; preds = %if.end57, %if.then60
  %call63 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call49) #6, !dbg !7280
  br label %cleanup64, !dbg !7281

cleanup64:                                        ; preds = %if.then34, %cleanup, %if.end62
  %retval.1 = phi %struct.rtx_def* [ %target.addr.2, %if.end62 ], [ null, %cleanup ], [ null, %if.then34 ], !dbg !7207
  ret %struct.rtx_def* %retval.1, !dbg !7282
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_copysign_bit(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %bitpos, i8 zeroext %op0_is_abs) unnamed_addr #4 !dbg !7283 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7285, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !7286, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !7287, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !7288, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i32 %bitpos, metadata !7289, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i8 %op0_is_abs, metadata !7290, metadata !DIExpression()), !dbg !7306
  %idxprom = zext i32 %mode to i64, !dbg !7307
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7307
  %0 = load i8, i8* %arrayidx, align 1, !dbg !7307
  %cmp = icmp ult i8 %0, 5, !dbg !7309
  br i1 %cmp, label %if.then, label %if.else, !dbg !7310

if.then:                                          ; preds = %entry
  %call = tail call i32 @int_mode_for_mode(i32 %mode) #6, !dbg !7311
  call void @llvm.dbg.value(metadata i32 %call, metadata !7291, metadata !DIExpression()), !dbg !7306
  %cmp3 = icmp eq i32 %call, 1, !dbg !7313
  br i1 %cmp3, label %cleanup, label %if.end13, !dbg !7315

if.else:                                          ; preds = %entry
  %1 = load i32, i32* @word_mode, align 4, !dbg !7316
  call void @llvm.dbg.value(metadata i32 %1, metadata !7291, metadata !DIExpression()), !dbg !7306
  %div = sdiv i32 %bitpos, 32, !dbg !7318
  call void @llvm.dbg.value(metadata i32 %div, metadata !7294, metadata !DIExpression()), !dbg !7306
  %rem = srem i32 %bitpos, 32, !dbg !7320
  call void @llvm.dbg.value(metadata i32 %rem, metadata !7289, metadata !DIExpression()), !dbg !7306
  %conv9 = zext i8 %0 to i32, !dbg !7321
  %mul = shl nuw nsw i32 %conv9, 3, !dbg !7321
  %sub = add nuw nsw i32 %mul, 31, !dbg !7322
  %div12 = lshr i32 %sub, 5, !dbg !7323
  call void @llvm.dbg.value(metadata i32 %div12, metadata !7295, metadata !DIExpression()), !dbg !7306
  br label %if.end13

if.end13:                                         ; preds = %if.then, %if.else
  %nwords.0 = phi i32 [ %div12, %if.else ], [ 1, %if.then ], !dbg !7324
  %word.0 = phi i32 [ %div, %if.else ], [ 0, %if.then ], !dbg !7324
  %imode.0 = phi i32 [ %1, %if.else ], [ %call, %if.then ], !dbg !7324
  %bitpos.addr.0 = phi i32 [ %rem, %if.else ], [ %bitpos, %if.then ]
  call void @llvm.dbg.value(metadata i32 %bitpos.addr.0, metadata !7289, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i32 %imode.0, metadata !7291, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i32 %word.0, metadata !7294, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i32 %nwords.0, metadata !7295, metadata !DIExpression()), !dbg !7306
  %cmp14 = icmp slt i32 %bitpos.addr.0, 64, !dbg !7325
  %sh_prom = zext i32 %bitpos.addr.0 to i64, !dbg !7327
  %shl = shl i64 1, %sh_prom, !dbg !7327
  %sub18 = add nsw i32 %bitpos.addr.0, -64, !dbg !7327
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !7327
  %shl20 = shl i64 1, %sh_prom19, !dbg !7327
  %lo.0 = select i1 %cmp14, i64 %shl, i64 0, !dbg !7327
  %hi.0 = select i1 %cmp14, i64 0, i64 %shl20, !dbg !7327
  call void @llvm.dbg.value(metadata i64 %hi.0, metadata !7292, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i64 %lo.0, metadata !7293, metadata !DIExpression()), !dbg !7306
  %cmp22 = icmp eq %struct.rtx_def* %target, null, !dbg !7328
  %cmp24 = icmp eq %struct.rtx_def* %target, %op0, !dbg !7330
  %or.cond = or i1 %cmp22, %cmp24, !dbg !7331
  %cmp27 = icmp eq %struct.rtx_def* %target, %op1, !dbg !7332
  %or.cond1 = or i1 %or.cond, %cmp27, !dbg !7331
  br i1 %or.cond1, label %if.then29, label %if.end31, !dbg !7331

if.then29:                                        ; preds = %if.end13
  %call30 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !7333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call30, metadata !7288, metadata !DIExpression()), !dbg !7306
  br label %if.end31, !dbg !7334

if.end31:                                         ; preds = %if.end13, %if.then29
  %target.addr.0 = phi %struct.rtx_def* [ %call30, %if.then29 ], [ %target, %if.end13 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !7288, metadata !DIExpression()), !dbg !7306
  %cmp32 = icmp ugt i32 %nwords.0, 1, !dbg !7335
  br i1 %cmp32, label %if.then34, label %if.else61, !dbg !7336

if.then34:                                        ; preds = %if.end31
  tail call void @start_sequence() #6, !dbg !7337
  call void @llvm.dbg.value(metadata i32 0, metadata !7296, metadata !DIExpression()), !dbg !7306
  %tobool = icmp eq i8 %op0_is_abs, 0, !dbg !7338
  %neg = xor i64 %lo.0, -1, !dbg !7338
  %neg43 = xor i64 %hi.0, -1, !dbg !7338
  br i1 %tobool, label %if.then34.split.us, label %if.then34.if.then34.split_crit_edge, !dbg !7342

if.then34.if.then34.split_crit_edge:              ; preds = %if.then34
  br label %for.cond, !dbg !7342

if.then34.split.us:                               ; preds = %if.then34
  br label %for.cond.us, !dbg !7342

for.cond.us:                                      ; preds = %for.inc.us, %if.then34.split.us
  %i.0.us = phi i32 [ 0, %if.then34.split.us ], [ %inc.us, %for.inc.us ], !dbg !7343
  %op1.addr.0.us = phi %struct.rtx_def* [ %op1, %if.then34.split.us ], [ %op1.addr.1.us, %for.inc.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.0.us, metadata !7287, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !7296, metadata !DIExpression()), !dbg !7306
  %exitcond = icmp eq i32 %i.0.us, %nwords.0, !dbg !7344
  br i1 %exitcond, label %for.end.us-lcssa.us, label %for.body.us, !dbg !7345

for.body.us:                                      ; preds = %for.cond.us
  %call37.us = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.0, i32 %i.0.us, i32 1, i32 %mode) #6, !dbg !7346
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37.us, metadata !7299, metadata !DIExpression()), !dbg !7347
  %call38.us = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 %i.0.us, i32 %mode) #6, !dbg !7348
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call38.us, metadata !7305, metadata !DIExpression()), !dbg !7347
  %cmp39.us = icmp eq i32 %i.0.us, %word.0, !dbg !7349
  br i1 %cmp39.us, label %if.then41.us, label %if.else56.us, !dbg !7350

if.else56.us:                                     ; preds = %for.body.us
  %call57.us = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call37.us, %struct.rtx_def* %call38.us) #6, !dbg !7351
  br label %for.inc.us

if.then41.us:                                     ; preds = %for.body.us
  %call44.us = tail call %struct.rtx_def* @immed_double_const(i64 %neg, i64 %neg43, i32 %imode.0) #6, !dbg !7352
  %call45.us = tail call %struct.rtx_def* @expand_binop(i32 %imode.0, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.rtx_def* %call38.us, %struct.rtx_def* %call44.us, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !7353
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45.us, metadata !7305, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45.us, metadata !7305, metadata !DIExpression()), !dbg !7347
  %call47.us = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1.addr.0.us, i32 %word.0, i32 %mode) #6, !dbg !7354
  %call48.us = tail call %struct.rtx_def* @immed_double_const(i64 %lo.0, i64 %hi.0, i32 %imode.0) #6, !dbg !7355
  %call49.us = tail call %struct.rtx_def* @expand_binop(i32 %imode.0, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.rtx_def* %call47.us, %struct.rtx_def* %call48.us, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49.us, metadata !7287, metadata !DIExpression()), !dbg !7306
  %call50.us = tail call %struct.rtx_def* @expand_binop(i32 %imode.0, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), %struct.rtx_def* %call45.us, %struct.rtx_def* %call49.us, %struct.rtx_def* %call37.us, i32 1, i32 3) #8, !dbg !7357
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50.us, metadata !7297, metadata !DIExpression()), !dbg !7306
  %cmp51.us = icmp eq %struct.rtx_def* %call50.us, %call37.us, !dbg !7358
  br i1 %cmp51.us, label %for.inc.us, label %if.then53.us, !dbg !7360

if.then53.us:                                     ; preds = %if.then41.us
  %call54.us = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call37.us, %struct.rtx_def* %call50.us) #6, !dbg !7361
  br label %for.inc.us, !dbg !7361

for.inc.us:                                       ; preds = %if.then53.us, %if.then41.us, %if.else56.us
  %op1.addr.1.us = phi %struct.rtx_def* [ %op1.addr.0.us, %if.else56.us ], [ %call49.us, %if.then53.us ], [ %call49.us, %if.then41.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.1.us, metadata !7287, metadata !DIExpression()), !dbg !7306
  %inc.us = add nuw nsw i32 %i.0.us, 1, !dbg !7362
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !7296, metadata !DIExpression()), !dbg !7306
  br label %for.cond.us, !dbg !7363, !llvm.loop !7364

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !7366

for.cond:                                         ; preds = %for.inc, %if.then34.if.then34.split_crit_edge
  %i.0 = phi i32 [ 0, %if.then34.if.then34.split_crit_edge ], [ %inc, %for.inc ], !dbg !7343
  %op1.addr.0 = phi %struct.rtx_def* [ %op1, %if.then34.if.then34.split_crit_edge ], [ %op1.addr.1, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.0, metadata !7287, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7296, metadata !DIExpression()), !dbg !7306
  %exitcond2 = icmp eq i32 %i.0, %nwords.0, !dbg !7344
  br i1 %exitcond2, label %for.end.us-lcssa, label %for.body, !dbg !7345

for.body:                                         ; preds = %for.cond
  %call37 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.0, i32 %i.0, i32 1, i32 %mode) #6, !dbg !7346
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !7299, metadata !DIExpression()), !dbg !7347
  %call38 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 %i.0, i32 %mode) #6, !dbg !7348
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call38, metadata !7305, metadata !DIExpression()), !dbg !7347
  %cmp39 = icmp eq i32 %i.0, %word.0, !dbg !7349
  br i1 %cmp39, label %if.then41, label %if.else56, !dbg !7350

if.then41:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call38, metadata !7305, metadata !DIExpression()), !dbg !7347
  %call47 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1.addr.0, i32 %word.0, i32 %mode) #6, !dbg !7354
  %call48 = tail call %struct.rtx_def* @immed_double_const(i64 %lo.0, i64 %hi.0, i32 %imode.0) #6, !dbg !7355
  %call49 = tail call %struct.rtx_def* @expand_binop(i32 %imode.0, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.rtx_def* %call47, %struct.rtx_def* %call48, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !7287, metadata !DIExpression()), !dbg !7306
  %call50 = tail call %struct.rtx_def* @expand_binop(i32 %imode.0, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), %struct.rtx_def* %call38, %struct.rtx_def* %call49, %struct.rtx_def* %call37, i32 1, i32 3) #8, !dbg !7357
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50, metadata !7297, metadata !DIExpression()), !dbg !7306
  %cmp51 = icmp eq %struct.rtx_def* %call50, %call37, !dbg !7358
  br i1 %cmp51, label %for.inc, label %if.then53, !dbg !7360

if.then53:                                        ; preds = %if.then41
  %call54 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call37, %struct.rtx_def* %call50) #6, !dbg !7361
  br label %for.inc, !dbg !7361

if.else56:                                        ; preds = %for.body
  %call57 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call37, %struct.rtx_def* %call38) #6, !dbg !7351
  br label %for.inc

for.inc:                                          ; preds = %if.then41, %if.else56, %if.then53
  %op1.addr.1 = phi %struct.rtx_def* [ %op1.addr.0, %if.else56 ], [ %call49, %if.then53 ], [ %call49, %if.then41 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.1, metadata !7287, metadata !DIExpression()), !dbg !7306
  %inc = add nuw nsw i32 %i.0, 1, !dbg !7362
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7296, metadata !DIExpression()), !dbg !7306
  br label %for.cond, !dbg !7363, !llvm.loop !7364

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !7366

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %call59 = tail call %struct.rtx_def* @get_insns() #6, !dbg !7366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call59, metadata !7298, metadata !DIExpression()), !dbg !7306
  tail call void @end_sequence() #6, !dbg !7367
  %call60 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call59) #6, !dbg !7368
  br label %cleanup, !dbg !7369

if.else61:                                        ; preds = %if.end31
  %2 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !7370
  %call62 = tail call %struct.rtx_def* %2(i32 %imode.0, %struct.rtx_def* %op1) #6, !dbg !7370
  %call63 = tail call %struct.rtx_def* @immed_double_const(i64 %lo.0, i64 %hi.0, i32 %imode.0) #6, !dbg !7372
  %call64 = tail call %struct.rtx_def* @expand_binop(i32 %imode.0, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.rtx_def* %call62, %struct.rtx_def* %call63, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !7373
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64, metadata !7287, metadata !DIExpression()), !dbg !7306
  %3 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !7374
  %call65 = tail call %struct.rtx_def* %3(i32 %imode.0, %struct.rtx_def* %op0) #6, !dbg !7374
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call65, metadata !7286, metadata !DIExpression()), !dbg !7306
  %tobool66 = icmp eq i8 %op0_is_abs, 0, !dbg !7375
  br i1 %tobool66, label %if.then67, label %if.end72, !dbg !7377

if.then67:                                        ; preds = %if.else61
  %neg68 = xor i64 %lo.0, -1, !dbg !7378
  %neg69 = xor i64 %hi.0, -1, !dbg !7379
  %call70 = tail call %struct.rtx_def* @immed_double_const(i64 %neg68, i64 %neg69, i32 %imode.0) #6, !dbg !7380
  %call71 = tail call %struct.rtx_def* @expand_binop(i32 %imode.0, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.rtx_def* %call65, %struct.rtx_def* %call70, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !7381
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call71, metadata !7286, metadata !DIExpression()), !dbg !7306
  br label %if.end72, !dbg !7382

if.end72:                                         ; preds = %if.else61, %if.then67
  %op0.addr.0 = phi %struct.rtx_def* [ %call65, %if.else61 ], [ %call71, %if.then67 ], !dbg !7383
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.addr.0, metadata !7286, metadata !DIExpression()), !dbg !7306
  %4 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !7384
  %call73 = tail call %struct.rtx_def* %4(i32 %imode.0, %struct.rtx_def* %target.addr.0) #6, !dbg !7384
  %call74 = tail call %struct.rtx_def* @expand_binop(i32 %imode.0, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call64, %struct.rtx_def* %call73, i32 1, i32 3) #8, !dbg !7385
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call74, metadata !7297, metadata !DIExpression()), !dbg !7306
  %call75 = tail call fastcc %struct.rtx_def* @lowpart_subreg_maybe_copy(i32 %mode, %struct.rtx_def* %call74, i32 %imode.0) #8, !dbg !7386
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call75, metadata !7288, metadata !DIExpression()), !dbg !7306
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end72, %if.then
  %retval.0 = phi %struct.rtx_def* [ null, %if.then ], [ %target.addr.0, %for.end ], [ %call75, %if.end72 ], !dbg !7306
  ret %struct.rtx_def* %retval.0, !dbg !7387
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @maybe_emit_unop_insn(i32 %icode, %struct.rtx_def* %target, %struct.rtx_def* %op0, i32 %code) local_unnamed_addr #4 !dbg !7388 {
entry:
  call void @llvm.dbg.value(metadata i32 %icode, metadata !7392, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !7393, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !7394, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 %code, metadata !7395, metadata !DIExpression()), !dbg !7400
  %idxprom = sext i32 %icode to i64, !dbg !7401
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 3, !dbg !7402
  %0 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !7402
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %0, i64 1, i32 2, !dbg !7403
  %bf.load = load i16, i16* %mode, align 8, !dbg !7403
  %bf.cast = zext i16 %bf.load to i32, !dbg !7403
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !7397, metadata !DIExpression()), !dbg !7400
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !7404
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7399, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !7396, metadata !DIExpression()), !dbg !7400
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %0, i64 1, i32 0, !dbg !7405
  %1 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !7405
  %call6 = tail call i32 %1(%struct.rtx_def* %op0, i32 %bf.cast) #6, !dbg !7407
  %tobool = icmp eq i32 %call6, 0, !dbg !7407
  br i1 %tobool, label %if.then, label %if.end, !dbg !7408

if.then:                                          ; preds = %entry
  %call7 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %op0) #6, !dbg !7409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !7394, metadata !DIExpression()), !dbg !7400
  br label %if.end, !dbg !7410

if.end:                                           ; preds = %entry, %if.then
  %op0.addr.0 = phi %struct.rtx_def* [ %op0, %entry ], [ %call7, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.addr.0, metadata !7394, metadata !DIExpression()), !dbg !7400
  %predicate12 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %0, i64 0, i32 0, !dbg !7411
  %2 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate12, align 8, !dbg !7411
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !7413
  %bf.load13 = load i32, i32* %3, align 8, !dbg !7413
  %bf.lshr = lshr i32 %bf.load13, 16, !dbg !7413
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7413
  %call14 = tail call i32 %2(%struct.rtx_def* %target, i32 %bf.clear) #6, !dbg !7414
  %tobool15 = icmp eq i32 %call14, 0, !dbg !7414
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !7415

if.then16:                                        ; preds = %if.end
  %bf.load17 = load i32, i32* %3, align 8, !dbg !7416
  %bf.lshr18 = lshr i32 %bf.load17, 16, !dbg !7416
  %bf.clear19 = and i32 %bf.lshr18, 255, !dbg !7416
  %call20 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear19) #6, !dbg !7417
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call20, metadata !7396, metadata !DIExpression()), !dbg !7400
  br label %if.end21, !dbg !7418

if.end21:                                         ; preds = %if.end, %if.then16
  %temp.0 = phi %struct.rtx_def* [ %target, %if.end ], [ %call20, %if.then16 ], !dbg !7400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !7396, metadata !DIExpression()), !dbg !7400
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 2, !dbg !7419
  %4 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !7419
  %call24 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %4(%struct.rtx_def* %temp.0, %struct.rtx_def* %op0.addr.0) #6, !dbg !7419
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !7398, metadata !DIExpression()), !dbg !7400
  %tobool25 = icmp eq %struct.rtx_def* %call24, null, !dbg !7420
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !7422

if.then26:                                        ; preds = %if.end21
  tail call void @delete_insns_since(%struct.rtx_def* %call) #6, !dbg !7423
  br label %cleanup, !dbg !7425

if.end27:                                         ; preds = %if.end21
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call24, i64 0, i32 0, !dbg !7426
  %bf.load28 = load i32, i32* %5, align 8, !dbg !7426
  %bf.clear29 = and i32 %bf.load28, 65535, !dbg !7426
  %cmp = icmp eq i32 %bf.clear29, 8, !dbg !7426
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !7426

lor.lhs.false:                                    ; preds = %if.end27
  %cmp32 = icmp eq i32 %bf.clear29, 7, !dbg !7426
  br i1 %cmp32, label %land.lhs.true, label %lor.lhs.false33, !dbg !7426

lor.lhs.false33:                                  ; preds = %lor.lhs.false
  %cmp36 = icmp eq i32 %bf.clear29, 9, !dbg !7426
  br i1 %cmp36, label %land.lhs.true, label %lor.lhs.false37, !dbg !7426

lor.lhs.false37:                                  ; preds = %lor.lhs.false33
  %cmp40 = icmp eq i32 %bf.clear29, 10, !dbg !7426
  br i1 %cmp40, label %land.lhs.true, label %if.end47, !dbg !7428

land.lhs.true:                                    ; preds = %lor.lhs.false37, %lor.lhs.false33, %lor.lhs.false, %if.end27
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call24, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7429
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !7429
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7429
  %cmp42 = icmp ne %struct.rtx_def* %7, null, !dbg !7430
  %cmp44 = icmp ne i32 %code, 0, !dbg !7431
  %or.cond = and i1 %cmp42, %cmp44, !dbg !7432
  br i1 %or.cond, label %if.then45, label %if.end47, !dbg !7432

if.then45:                                        ; preds = %land.lhs.true
  %call46 = tail call fastcc i32 @add_equal_note(%struct.rtx_def* nonnull %call24, %struct.rtx_def* %temp.0, i32 %code, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* null) #8, !dbg !7433
  br label %if.end47, !dbg !7433

if.end47:                                         ; preds = %if.then45, %land.lhs.true, %lor.lhs.false37
  %call48 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %call24) #6, !dbg !7434
  %cmp49 = icmp eq %struct.rtx_def* %temp.0, %target, !dbg !7435
  br i1 %cmp49, label %cleanup, label %if.then50, !dbg !7437

if.then50:                                        ; preds = %if.end47
  %call51 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %temp.0) #6, !dbg !7438
  br label %cleanup, !dbg !7438

cleanup:                                          ; preds = %if.end47, %if.then50, %if.then26
  %retval.0 = phi i8 [ 0, %if.then26 ], [ 1, %if.then50 ], [ 1, %if.end47 ], !dbg !7400
  ret i8 %retval.0, !dbg !7439
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @add_equal_note(%struct.rtx_def* %insns, %struct.rtx_def* %target, i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %op1) unnamed_addr #4 !dbg !7440 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insns, metadata !7444, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !7445, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata i32 %code, metadata !7446, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !7447, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !7448, metadata !DIExpression()), !dbg !7453
  %tobool = icmp eq %struct.rtx_def* %insns, null, !dbg !7454
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !7454

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insns, i64 0, i32 0, !dbg !7454
  %bf.load = load i32, i32* %0, align 8, !dbg !7454
  %bf.clear = and i32 %bf.load, 65535, !dbg !7454
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !7454
  br i1 %cmp, label %land.lhs.true12, label %lor.lhs.false, !dbg !7454

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !7454
  br i1 %cmp3, label %land.lhs.true12, label %lor.lhs.false4, !dbg !7454

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !7454
  br i1 %cmp7, label %land.lhs.true12, label %lor.lhs.false8, !dbg !7454

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !7454
  br i1 %cmp11, label %land.lhs.true12, label %cond.true, !dbg !7454

land.lhs.true12:                                  ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %land.lhs.true
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insns, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7454
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !7454
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7454
  %tobool13 = icmp eq %struct.rtx_def* %2, null, !dbg !7454
  br i1 %tobool13, label %cond.true, label %cond.end, !dbg !7454

cond.true:                                        ; preds = %land.lhs.true12, %entry, %lor.lhs.false8
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 225, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7454
  br label %cond.end, !dbg !7454

cond.end:                                         ; preds = %land.lhs.true12, %cond.true
  %idxprom = sext i32 %code to i64, !dbg !7455
  %arrayidx14 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !7455
  %3 = load i32, i32* %arrayidx14, align 4, !dbg !7455
  %cmp15 = icmp eq i32 %3, 3, !dbg !7457
  br i1 %cmp15, label %if.end, label %land.lhs.true16, !dbg !7458

land.lhs.true16:                                  ; preds = %cond.end
  %cmp19 = icmp eq i32 %3, 2, !dbg !7459
  br i1 %cmp19, label %if.end, label %land.lhs.true20, !dbg !7460

land.lhs.true20:                                  ; preds = %land.lhs.true16
  %cmp23 = icmp eq i32 %3, 1, !dbg !7461
  br i1 %cmp23, label %if.end, label %land.lhs.true24, !dbg !7462

land.lhs.true24:                                  ; preds = %land.lhs.true20
  %cmp27 = icmp eq i32 %3, 0, !dbg !7463
  br i1 %cmp27, label %if.end, label %land.lhs.true28, !dbg !7464

land.lhs.true28:                                  ; preds = %land.lhs.true24
  %cmp31 = icmp eq i32 %3, 4, !dbg !7465
  br i1 %cmp31, label %if.end, label %cleanup, !dbg !7466

if.end:                                           ; preds = %land.lhs.true28, %land.lhs.true24, %land.lhs.true20, %land.lhs.true16, %cond.end
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !7467
  %bf.load32 = load i32, i32* %4, align 8, !dbg !7467
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !7467
  %cmp34 = icmp eq i32 %bf.clear33, 120, !dbg !7469
  br i1 %cmp34, label %cleanup, label %for.cond.preheader, !dbg !7470

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !7471

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %last_insn.0 = phi %struct.rtx_def* [ %6, %for.inc ], [ %insns, %for.cond.preheader ], !dbg !7473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0, metadata !7449, metadata !DIExpression()), !dbg !7453
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7474
  %rt_rtx40 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !7474
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !7474
  %cmp41 = icmp eq %struct.rtx_def* %6, null, !dbg !7476
  br i1 %cmp41, label %for.end, label %for.inc, !dbg !7471

for.inc:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !7449, metadata !DIExpression()), !dbg !7453
  br label %for.cond, !dbg !7477, !llvm.loop !7478

for.end:                                          ; preds = %for.cond
  %last_insn.0.lcssa = phi %struct.rtx_def* [ %last_insn.0, %for.cond ], !dbg !7473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa, metadata !7449, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa, metadata !7449, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa, metadata !7449, metadata !DIExpression()), !dbg !7453
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0.lcssa, i64 0, i32 0, !dbg !7480
  %bf.load46 = load i32, i32* %7, align 8, !dbg !7480
  %bf.clear47 = and i32 %bf.load46, 65535, !dbg !7480
  %cmp48 = icmp eq i32 %bf.clear47, 8, !dbg !7480
  br i1 %cmp48, label %cond.true61, label %lor.lhs.false49, !dbg !7480

lor.lhs.false49:                                  ; preds = %for.end
  %cmp52 = icmp eq i32 %bf.clear47, 7, !dbg !7480
  br i1 %cmp52, label %cond.true61, label %lor.lhs.false53, !dbg !7480

lor.lhs.false53:                                  ; preds = %lor.lhs.false49
  %cmp56 = icmp eq i32 %bf.clear47, 9, !dbg !7480
  br i1 %cmp56, label %cond.true61, label %lor.lhs.false57, !dbg !7480

lor.lhs.false57:                                  ; preds = %lor.lhs.false53
  %cmp60 = icmp eq i32 %bf.clear47, 10, !dbg !7480
  br i1 %cmp60, label %cond.true61, label %cond.end82, !dbg !7480

cond.true61:                                      ; preds = %lor.lhs.false57, %lor.lhs.false53, %lor.lhs.false49, %for.end
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0.lcssa, i64 0, i32 1, !dbg !7480
  %8 = getelementptr inbounds %union.u, %union.u* %u62, i64 1, i32 0, i32 0, i64 0, !dbg !7480
  %9 = bitcast %union.rtunion_def* %8 to i32**, !dbg !7480
  %10 = load i32*, i32** %9, align 8, !dbg !7480
  %bf.load66 = load i32, i32* %10, align 8, !dbg !7480
  %bf.clear67 = and i32 %bf.load66, 65535, !dbg !7480
  %cmp68 = icmp eq i32 %bf.clear67, 23, !dbg !7480
  %11 = bitcast i32* %10 to %struct.rtx_def*, !dbg !7480
  br i1 %cmp68, label %cond.end82, label %cond.false74, !dbg !7480

cond.false74:                                     ; preds = %cond.true61
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %last_insn.0.lcssa, %struct.rtx_def* %11) #6, !dbg !7480
  br label %cond.end82, !dbg !7480

cond.end82:                                       ; preds = %lor.lhs.false57, %cond.false74, %cond.true61
  %cond83 = phi %struct.rtx_def* [ %call, %cond.false74 ], [ %11, %cond.true61 ], [ null, %lor.lhs.false57 ], !dbg !7480
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond83, metadata !7451, metadata !DIExpression()), !dbg !7453
  %cmp84 = icmp eq %struct.rtx_def* %cond83, null, !dbg !7481
  br i1 %cmp84, label %cleanup, label %if.end86, !dbg !7483

if.end86:                                         ; preds = %cond.end82
  %arrayidx89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond83, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7484
  %rt_rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**, !dbg !7484
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx90, align 8, !dbg !7484
  %call91 = tail call i32 @rtx_equal_p(%struct.rtx_def* %12, %struct.rtx_def* %target) #6, !dbg !7486
  %tobool92 = icmp eq i32 %call91, 0, !dbg !7486
  br i1 %tobool92, label %land.lhs.true93, label %if.end113, !dbg !7487

land.lhs.true93:                                  ; preds = %if.end86
  %13 = bitcast %union.rtunion_def* %arrayidx89 to i32**, !dbg !7488
  %14 = load i32*, i32** %13, align 8, !dbg !7488
  %bf.load98 = load i32, i32* %14, align 8, !dbg !7488
  %bf.clear99 = and i32 %bf.load98, 65535, !dbg !7488
  %cmp100 = icmp eq i32 %bf.clear99, 40, !dbg !7489
  br i1 %cmp100, label %lor.lhs.false101, label %cleanup, !dbg !7490

lor.lhs.false101:                                 ; preds = %land.lhs.true93
  %arrayidx108 = getelementptr inbounds i32, i32* %14, i64 2, !dbg !7491
  %rt_rtx109 = bitcast i32* %arrayidx108 to %struct.rtx_def**, !dbg !7491
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx109, align 8, !dbg !7491
  %call110 = tail call i32 @rtx_equal_p(%struct.rtx_def* %15, %struct.rtx_def* %target) #6, !dbg !7492
  %tobool111 = icmp eq i32 %call110, 0, !dbg !7492
  br i1 %tobool111, label %cleanup, label %if.end113, !dbg !7493

if.end113:                                        ; preds = %lor.lhs.false101, %if.end86
  %call114 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* %op0) #6, !dbg !7494
  %tobool115 = icmp eq i32 %call114, 0, !dbg !7494
  br i1 %tobool115, label %lor.lhs.false116, label %if.then121, !dbg !7496

lor.lhs.false116:                                 ; preds = %if.end113
  %tobool117 = icmp eq %struct.rtx_def* %op1, null, !dbg !7497
  br i1 %tobool117, label %if.end135, label %land.lhs.true118, !dbg !7498

land.lhs.true118:                                 ; preds = %lor.lhs.false116
  %call119 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* nonnull %op1) #6, !dbg !7499
  %tobool120 = icmp eq i32 %call119, 0, !dbg !7499
  br i1 %tobool120, label %if.end135, label %if.then121, !dbg !7500

if.then121:                                       ; preds = %land.lhs.true118, %if.end113
  br label %while.cond, !dbg !7501

while.cond:                                       ; preds = %if.end130, %if.then121
  %last_insn.0.pn = phi %struct.rtx_def* [ %last_insn.0.lcssa, %if.then121 ], [ %insn.0, %if.end130 ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0.pn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7503
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !7503
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !7503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7450, metadata !DIExpression()), !dbg !7453
  %cmp126 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !7504
  br i1 %cmp126, label %if.end135.loopexit, label %while.body, !dbg !7501

while.body:                                       ; preds = %while.cond
  %call127 = tail call i32 @reg_set_p(%struct.rtx_def* %target, %struct.rtx_def* nonnull %insn.0) #6, !dbg !7505
  %tobool128 = icmp eq i32 %call127, 0, !dbg !7505
  br i1 %tobool128, label %if.end130, label %cleanup.loopexit, !dbg !7508

if.end130:                                        ; preds = %while.body
  br label %while.cond, !dbg !7501, !llvm.loop !7509

if.end135.loopexit:                               ; preds = %while.cond
  br label %if.end135, !dbg !7511

if.end135:                                        ; preds = %if.end135.loopexit, %land.lhs.true118, %lor.lhs.false116
  %cmp138 = icmp eq i32 %3, 4, !dbg !7513
  %bf.load140 = load i32, i32* %4, align 8, !dbg !7514
  %bf.lshr = lshr i32 %bf.load140, 16, !dbg !7514
  %bf.clear141 = and i32 %bf.lshr, 255, !dbg !7514
  %call142 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0) #6, !dbg !7514
  br i1 %cmp138, label %if.then139, label %if.else, !dbg !7515

if.then139:                                       ; preds = %if.end135
  %call143 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %code, i32 %bf.clear141, %struct.rtx_def* %call142) #6, !dbg !7516
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call143, metadata !7452, metadata !DIExpression()), !dbg !7453
  br label %if.end150, !dbg !7517

if.else:                                          ; preds = %if.end135
  %call148 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op1) #6, !dbg !7518
  %call149 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %code, i32 %bf.clear141, %struct.rtx_def* %call142, %struct.rtx_def* %call148) #6, !dbg !7518
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call149, metadata !7452, metadata !DIExpression()), !dbg !7453
  br label %if.end150

if.end150:                                        ; preds = %if.else, %if.then139
  %note.0 = phi %struct.rtx_def* [ %call143, %if.then139 ], [ %call149, %if.else ], !dbg !7514
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !7452, metadata !DIExpression()), !dbg !7453
  %call151 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %last_insn.0.lcssa, i32 4, %struct.rtx_def* %note.0) #6, !dbg !7519
  br label %cleanup, !dbg !7520

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !7521

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true28, %lor.lhs.false101, %land.lhs.true93, %cond.end82, %if.end, %if.end150
  %retval.0 = phi i32 [ 1, %if.end150 ], [ 1, %land.lhs.true28 ], [ 1, %if.end ], [ 1, %cond.end82 ], [ 1, %lor.lhs.false101 ], [ 1, %land.lhs.true93 ], [ 0, %cleanup.loopexit ], !dbg !7453
  ret i32 %retval.0, !dbg !7521
}

; Function Attrs: nounwind uwtable
define dso_local void @emit_unop_insn(i32 %icode, %struct.rtx_def* %target, %struct.rtx_def* %op0, i32 %code) local_unnamed_addr #4 !dbg !7522 {
entry:
  call void @llvm.dbg.value(metadata i32 %icode, metadata !7526, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !7527, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !7528, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.value(metadata i32 %code, metadata !7529, metadata !DIExpression()), !dbg !7531
  %call = tail call zeroext i8 @maybe_emit_unop_insn(i32 %icode, %struct.rtx_def* %target, %struct.rtx_def* %op0, i32 %code) #8, !dbg !7532
  call void @llvm.dbg.value(metadata i8 %call, metadata !7530, metadata !DIExpression()), !dbg !7531
  %tobool = icmp eq i8 %call, 0, !dbg !7533
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7533

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 3839, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7533
  br label %cond.end, !dbg !7533

cond.end:                                         ; preds = %entry, %cond.true
  ret void, !dbg !7534
}

declare dso_local i32 @may_trap_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @remove_note(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @make_reg_eh_region_note_nothrow_nononlocal(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @no_conflict_move_test(%struct.rtx_def* %dest, %struct.rtx_def* %set, i8* %p0) #4 !dbg !7535 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !7539, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set, metadata !7540, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata i8* %p0, metadata !7541, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata i8* %p0, metadata !7542, metadata !DIExpression()), !dbg !7543
  %target = bitcast i8* %p0 to %struct.rtx_def**, !dbg !7544
  %0 = load %struct.rtx_def*, %struct.rtx_def** %target, align 8, !dbg !7544
  %call = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %0, %struct.rtx_def* %dest) #6, !dbg !7546
  %tobool = icmp eq i32 %call, 0, !dbg !7546
  br i1 %tobool, label %if.else, label %if.then, !dbg !7547

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %p0, metadata !7542, metadata !DIExpression()), !dbg !7543
  %1 = getelementptr inbounds i8, i8* %p0, i64 24, !dbg !7548
  store i8 1, i8* %1, align 8, !dbg !7549
  br label %cleanup.cont, !dbg !7550

if.else:                                          ; preds = %entry
  %insn = getelementptr inbounds i8, i8* %p0, i64 16, !dbg !7551
  %2 = bitcast i8* %insn to %struct.rtx_def**, !dbg !7551
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !7551
  %first = getelementptr inbounds i8, i8* %p0, i64 8, !dbg !7553
  %4 = bitcast i8* %first to %struct.rtx_def**, !dbg !7553
  %5 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !7553
  %cmp = icmp eq %struct.rtx_def* %3, %5, !dbg !7554
  br i1 %cmp, label %cleanup.cont, label %if.else2, !dbg !7555

if.else2:                                         ; preds = %if.else
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, !dbg !7556
  %6 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !7556
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !7556
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7556
  %call4 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %dest, %struct.rtx_def* %7) #6, !dbg !7558
  %tobool5 = icmp eq i32 %call4, 0, !dbg !7558
  br i1 %tobool5, label %lor.lhs.false, label %if.then54, !dbg !7559

lor.lhs.false:                                    ; preds = %if.else2
  %8 = bitcast i8* %first to i32**, !dbg !7560
  %9 = load i32*, i32** %8, align 8, !dbg !7560
  %bf.load = load i32, i32* %9, align 8, !dbg !7560
  %bf.clear = and i32 %bf.load, 65535, !dbg !7560
  %cmp7 = icmp eq i32 %bf.clear, 10, !dbg !7560
  %10 = bitcast i32* %9 to %struct.rtx_def*, !dbg !7561
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false11, !dbg !7561

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call9 = tail call i32 @find_reg_fusage(%struct.rtx_def* %10, i32 24, %struct.rtx_def* %dest) #6, !dbg !7562
  %tobool10 = icmp eq i32 %call9, 0, !dbg !7562
  br i1 %tobool10, label %land.lhs.true.lor.lhs.false11_crit_edge, label %if.then54, !dbg !7563

land.lhs.true.lor.lhs.false11_crit_edge:          ; preds = %land.lhs.true
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !7564
  br label %lor.lhs.false11, !dbg !7563

lor.lhs.false11:                                  ; preds = %land.lhs.true.lor.lhs.false11_crit_edge, %lor.lhs.false
  %11 = phi %struct.rtx_def* [ %.pre, %land.lhs.true.lor.lhs.false11_crit_edge ], [ %10, %lor.lhs.false ], !dbg !7564
  %12 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !7565
  %call14 = tail call i32 @reg_used_between_p(%struct.rtx_def* %dest, %struct.rtx_def* %11, %struct.rtx_def* %12) #6, !dbg !7566
  %tobool15 = icmp eq i32 %call14, 0, !dbg !7566
  br i1 %tobool15, label %lor.lhs.false16, label %if.then54, !dbg !7567

lor.lhs.false16:                                  ; preds = %lor.lhs.false11
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %set, i64 0, i32 0, !dbg !7568
  %bf.load17 = load i32, i32* %13, align 8, !dbg !7568
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !7568
  %cmp19 = icmp eq i32 %bf.clear18, 23, !dbg !7569
  br i1 %cmp19, label %land.lhs.true20, label %cleanup.cont, !dbg !7570

land.lhs.true20:                                  ; preds = %lor.lhs.false16
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %set, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7571
  %rt_rtx24 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !7571
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !7571
  %16 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !7572
  %call26 = tail call i32 @modified_in_p(%struct.rtx_def* %15, %struct.rtx_def* %16) #6, !dbg !7573
  %tobool27 = icmp eq i32 %call26, 0, !dbg !7573
  br i1 %tobool27, label %lor.lhs.false28, label %if.then54, !dbg !7574

lor.lhs.false28:                                  ; preds = %land.lhs.true20
  %arrayidx31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %set, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7575
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !7575
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !7575
  %18 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !7576
  %call34 = tail call i32 @modified_in_p(%struct.rtx_def* %17, %struct.rtx_def* %18) #6, !dbg !7577
  %tobool35 = icmp eq i32 %call34, 0, !dbg !7577
  br i1 %tobool35, label %lor.lhs.false36, label %if.then54, !dbg !7578

lor.lhs.false36:                                  ; preds = %lor.lhs.false28
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !7579
  %20 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !7580
  %21 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !7581
  %call43 = tail call i32 @modified_between_p(%struct.rtx_def* %19, %struct.rtx_def* %20, %struct.rtx_def* %21) #6, !dbg !7582
  %tobool44 = icmp eq i32 %call43, 0, !dbg !7582
  br i1 %tobool44, label %lor.lhs.false45, label %if.then54, !dbg !7583

lor.lhs.false45:                                  ; preds = %lor.lhs.false36
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !7584
  %23 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !7585
  %24 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !7586
  %call52 = tail call i32 @modified_between_p(%struct.rtx_def* %22, %struct.rtx_def* %23, %struct.rtx_def* %24) #6, !dbg !7587
  %tobool53 = icmp eq i32 %call52, 0, !dbg !7587
  br i1 %tobool53, label %cleanup.cont, label %if.then54, !dbg !7588

if.then54:                                        ; preds = %land.lhs.true, %lor.lhs.false45, %lor.lhs.false36, %lor.lhs.false28, %land.lhs.true20, %lor.lhs.false11, %if.else2
  %25 = getelementptr inbounds i8, i8* %p0, i64 24, !dbg !7589
  store i8 1, i8* %25, align 8, !dbg !7590
  br label %cleanup.cont, !dbg !7591

cleanup.cont:                                     ; preds = %lor.lhs.false45, %if.else, %if.then54, %lor.lhs.false16, %if.then
  ret void, !dbg !7592
}

declare dso_local void @add_insn(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @can_compare_p(i32 %code, i32 %mode, i32 %purpose) local_unnamed_addr #4 !dbg !7593 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !7597, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7598, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i32 %purpose, metadata !7599, metadata !DIExpression()), !dbg !7603
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7604
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %code, i32 %mode, %struct.rtx_def* %0, %struct.rtx_def* %0) #6, !dbg !7604
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7600, metadata !DIExpression()), !dbg !7603
  %cmp23 = icmp eq i32 %purpose, 1, !dbg !7605
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !7607
  %2 = icmp eq i32 %purpose, 0
  br i1 %2, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !7608

entry.entry.split_crit_edge:                      ; preds = %entry
  %3 = icmp eq i32 %purpose, 2
  br i1 %3, label %entry.split.split.us, label %entry.split.entry.split.split_crit_edge, !dbg !7608

entry.split.us:                                   ; preds = %entry
  br label %do.body.us, !dbg !7608

do.body.us:                                       ; preds = %do.cond.us, %entry.split.us
  %mode.addr.0.us = phi i32 [ %mode, %entry.split.us ], [ %mode.addr.1.us, %do.cond.us ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.0.us, metadata !7598, metadata !DIExpression()), !dbg !7603
  %idxprom.us = sext i32 %mode.addr.0.us to i64, !dbg !7609
  %insn_code.us = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 115, i32 4, i64 %idxprom.us, i32 0, !dbg !7611
  %4 = load i32, i32* %insn_code.us, align 4, !dbg !7611
  call void @llvm.dbg.value(metadata i32 %4, metadata !7601, metadata !DIExpression()), !dbg !7607
  %cmp1.us = icmp eq i32 %4, 2956, !dbg !7612
  br i1 %cmp1.us, label %if.end.us, label %land.lhs.true2.us, !dbg !7613

land.lhs.true2.us:                                ; preds = %do.body.us
  %idxprom3.us = sext i32 %4 to i64, !dbg !7614
  %operand.us = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom3.us, i32 3, !dbg !7615
  %5 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand.us, align 8, !dbg !7615
  %predicate.us = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %5, i64 0, i32 0, !dbg !7616
  %6 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate.us, align 8, !dbg !7616
  %call6.us = tail call i32 %6(%struct.rtx_def* %call, i32 %mode.addr.0.us) #6, !dbg !7614
  %tobool.us = icmp eq i32 %call6.us, 0, !dbg !7614
  br i1 %tobool.us, label %if.end.us, label %cleanup.us, !dbg !7617

if.end.us:                                        ; preds = %land.lhs.true2.us, %do.body.us
  %idxprom31.us = zext i32 %mode.addr.0.us to i64, !dbg !7618
  %arrayidx32.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom31.us, !dbg !7618
  %7 = load i8, i8* %arrayidx32.us, align 1, !dbg !7618
  %conv.us = zext i8 %7 to i32, !dbg !7618
  call void @llvm.dbg.value(metadata i32 %conv.us, metadata !7598, metadata !DIExpression()), !dbg !7603
  %bf.load.us = load i32, i32* %1, align 8, !dbg !7619
  %bf.shl.us = shl nuw nsw i32 %conv.us, 16, !dbg !7619
  %bf.clear.us = and i32 %bf.load.us, -16711681, !dbg !7619
  %bf.set.us = or i32 %bf.clear.us, %bf.shl.us, !dbg !7619
  store i32 %bf.set.us, i32* %1, align 8, !dbg !7619
  br label %cleanup.us, !dbg !7620

cleanup.us:                                       ; preds = %if.end.us, %land.lhs.true2.us
  %mode.addr.1.us = phi i32 [ %conv.us, %if.end.us ], [ %mode.addr.0.us, %land.lhs.true2.us ]
  %cleanup.dest.slot.0.us = phi i1 [ true, %if.end.us ], [ false, %land.lhs.true2.us ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.1.us, metadata !7598, metadata !DIExpression()), !dbg !7603
  br i1 %cleanup.dest.slot.0.us, label %do.cond.us, label %cleanup35.us-lcssa.us

do.cond.us:                                       ; preds = %cleanup.us
  %cmp33.us = icmp eq i32 %mode.addr.1.us, 0, !dbg !7621
  br i1 %cmp33.us, label %cleanup35.us-lcssa.us, label %do.body.us, !dbg !7622, !llvm.loop !7623

cleanup35.us-lcssa.us:                            ; preds = %do.cond.us, %cleanup.us
  %retval.2.ph.us = phi i32 [ 0, %do.cond.us ], [ 1, %cleanup.us ]
  br label %cleanup35, !dbg !7625

entry.split.entry.split.split_crit_edge:          ; preds = %entry.entry.split_crit_edge
  br label %do.body, !dbg !7608

entry.split.split.us:                             ; preds = %entry.entry.split_crit_edge
  br label %do.body.us1, !dbg !7608

do.body.us1:                                      ; preds = %do.cond.us39, %entry.split.split.us
  %mode.addr.0.us2 = phi i32 [ %mode, %entry.split.split.us ], [ %mode.addr.1.us36, %do.cond.us39 ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.0.us2, metadata !7598, metadata !DIExpression()), !dbg !7603
  %idxprom9.us13 = sext i32 %mode.addr.0.us2 to i64, !dbg !7626
  %insn_code11.us14 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 117, i32 4, i64 %idxprom9.us13, i32 0, !dbg !7628
  %8 = load i32, i32* %insn_code11.us14, align 4, !dbg !7628
  call void @llvm.dbg.value(metadata i32 %8, metadata !7601, metadata !DIExpression()), !dbg !7607
  %cmp12.us15 = icmp eq i32 %8, 2956, !dbg !7629
  br i1 %cmp12.us15, label %if.end22.us22, label %land.lhs.true13.us16, !dbg !7630

land.lhs.true13.us16:                             ; preds = %do.body.us1
  %idxprom14.us17 = sext i32 %8 to i64, !dbg !7631
  %operand16.us18 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom14.us17, i32 3, !dbg !7632
  %9 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand16.us18, align 8, !dbg !7632
  %predicate18.us19 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 1, i32 0, !dbg !7633
  %10 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate18.us19, align 8, !dbg !7633
  %call19.us20 = tail call i32 %10(%struct.rtx_def* %call, i32 %mode.addr.0.us2) #6, !dbg !7631
  %tobool20.us21 = icmp eq i32 %call19.us20, 0, !dbg !7631
  br i1 %tobool20.us21, label %if.end22.us22, label %cleanup.us35, !dbg !7634

if.end22.us22:                                    ; preds = %land.lhs.true13.us16, %do.body.us1
  br i1 %cmp23, label %land.lhs.true24.us23, label %if.end30.us27, !dbg !7635

land.lhs.true24.us23:                             ; preds = %if.end22.us22
  %insn_code27.us25 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 116, i32 4, i64 %idxprom9.us13, i32 0, !dbg !7636
  %11 = load i32, i32* %insn_code27.us25, align 4, !dbg !7636
  %cmp28.us26 = icmp eq i32 %11, 2956, !dbg !7637
  br i1 %cmp28.us26, label %if.end30.us27, label %cleanup.us35, !dbg !7638

if.end30.us27:                                    ; preds = %land.lhs.true24.us23, %if.end22.us22
  %idxprom31.us28 = zext i32 %mode.addr.0.us2 to i64, !dbg !7618
  %arrayidx32.us29 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom31.us28, !dbg !7618
  %12 = load i8, i8* %arrayidx32.us29, align 1, !dbg !7618
  %conv.us30 = zext i8 %12 to i32, !dbg !7618
  call void @llvm.dbg.value(metadata i32 %conv.us30, metadata !7598, metadata !DIExpression()), !dbg !7603
  %bf.load.us31 = load i32, i32* %1, align 8, !dbg !7619
  %bf.shl.us32 = shl nuw nsw i32 %conv.us30, 16, !dbg !7619
  %bf.clear.us33 = and i32 %bf.load.us31, -16711681, !dbg !7619
  %bf.set.us34 = or i32 %bf.clear.us33, %bf.shl.us32, !dbg !7619
  store i32 %bf.set.us34, i32* %1, align 8, !dbg !7619
  br label %cleanup.us35, !dbg !7620

cleanup.us35:                                     ; preds = %if.end30.us27, %land.lhs.true24.us23, %land.lhs.true13.us16
  %mode.addr.1.us36 = phi i32 [ %conv.us30, %if.end30.us27 ], [ %mode.addr.0.us2, %land.lhs.true13.us16 ], [ %mode.addr.0.us2, %land.lhs.true24.us23 ]
  %cleanup.dest.slot.0.us37 = phi i1 [ true, %if.end30.us27 ], [ false, %land.lhs.true13.us16 ], [ false, %land.lhs.true24.us23 ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.1.us36, metadata !7598, metadata !DIExpression()), !dbg !7603
  br i1 %cleanup.dest.slot.0.us37, label %do.cond.us39, label %cleanup35.us-lcssa.us-lcssa.us

do.cond.us39:                                     ; preds = %cleanup.us35
  %cmp33.us40 = icmp eq i32 %mode.addr.1.us36, 0, !dbg !7621
  br i1 %cmp33.us40, label %cleanup35.us-lcssa.us-lcssa.us, label %do.body.us1, !dbg !7622, !llvm.loop !7623

cleanup35.us-lcssa.us-lcssa.us:                   ; preds = %do.cond.us39, %cleanup.us35
  %retval.2.ph.ph.us = phi i32 [ 1, %cleanup.us35 ], [ 0, %do.cond.us39 ]
  br label %cleanup35.us-lcssa, !dbg !7625

do.body:                                          ; preds = %do.cond, %entry.split.entry.split.split_crit_edge
  %mode.addr.0 = phi i32 [ %mode, %entry.split.entry.split.split_crit_edge ], [ %mode.addr.1, %do.cond ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.0, metadata !7598, metadata !DIExpression()), !dbg !7603
  switch i32 %purpose, label %if.end30 [
    i32 0, label %land.lhs.true
    i32 2, label %do.body.land.lhs.true8_crit_edge
    i32 1, label %land.lhs.true24
  ], !dbg !7639

do.body.land.lhs.true8_crit_edge:                 ; preds = %do.body
  unreachable

land.lhs.true:                                    ; preds = %do.body
  unreachable

land.lhs.true24:                                  ; preds = %do.body
  %idxprom25 = sext i32 %mode.addr.0 to i64, !dbg !7640
  %insn_code27 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 116, i32 4, i64 %idxprom25, i32 0, !dbg !7636
  %13 = load i32, i32* %insn_code27, align 4, !dbg !7636
  %cmp28 = icmp eq i32 %13, 2956, !dbg !7637
  br i1 %cmp28, label %if.end30, label %cleanup, !dbg !7638

if.end30:                                         ; preds = %land.lhs.true24, %do.body
  %idxprom31 = zext i32 %mode.addr.0 to i64, !dbg !7618
  %arrayidx32 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom31, !dbg !7618
  %14 = load i8, i8* %arrayidx32, align 1, !dbg !7618
  %conv = zext i8 %14 to i32, !dbg !7618
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7598, metadata !DIExpression()), !dbg !7603
  %bf.load = load i32, i32* %1, align 8, !dbg !7619
  %bf.shl = shl nuw nsw i32 %conv, 16, !dbg !7619
  %bf.clear = and i32 %bf.load, -16711681, !dbg !7619
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !7619
  store i32 %bf.set, i32* %1, align 8, !dbg !7619
  br label %cleanup, !dbg !7620

cleanup:                                          ; preds = %land.lhs.true24, %if.end30
  %mode.addr.1 = phi i32 [ %conv, %if.end30 ], [ %mode.addr.0, %land.lhs.true24 ]
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end30 ], [ false, %land.lhs.true24 ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.1, metadata !7598, metadata !DIExpression()), !dbg !7603
  br i1 %cleanup.dest.slot.0, label %do.cond, label %cleanup35.us-lcssa.us-lcssa

do.cond:                                          ; preds = %cleanup
  %cmp33 = icmp eq i32 %mode.addr.1, 0, !dbg !7621
  br i1 %cmp33, label %cleanup35.us-lcssa.us-lcssa, label %do.body, !dbg !7622, !llvm.loop !7623

cleanup35.us-lcssa.us-lcssa:                      ; preds = %do.cond, %cleanup
  %retval.2.ph.ph = phi i32 [ 1, %cleanup ], [ 0, %do.cond ]
  br label %cleanup35.us-lcssa, !dbg !7625

cleanup35.us-lcssa:                               ; preds = %cleanup35.us-lcssa.us-lcssa.us, %cleanup35.us-lcssa.us-lcssa
  %retval.2.ph = phi i32 [ %retval.2.ph.ph, %cleanup35.us-lcssa.us-lcssa ], [ %retval.2.ph.ph.us, %cleanup35.us-lcssa.us-lcssa.us ]
  br label %cleanup35, !dbg !7625

cleanup35:                                        ; preds = %cleanup35.us-lcssa.us, %cleanup35.us-lcssa
  %retval.2 = phi i32 [ %retval.2.ph, %cleanup35.us-lcssa ], [ %retval.2.ph.us, %cleanup35.us-lcssa.us ], !dbg !7603
  ret i32 %retval.2, !dbg !7625
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @prepare_operand(i32 %icode, %struct.rtx_def* %x, i32 %opnum, i32 %mode, i32 %wider_mode, i32 %unsignedp) local_unnamed_addr #4 !dbg !7641 {
entry:
  call void @llvm.dbg.value(metadata i32 %icode, metadata !7645, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7646, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata i32 %opnum, metadata !7647, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7648, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata i32 %wider_mode, metadata !7649, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !7650, metadata !DIExpression()), !dbg !7651
  %cmp = icmp eq i32 %mode, %wider_mode, !dbg !7652
  br i1 %cmp, label %if.end, label %if.then, !dbg !7654

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode, i32 %mode, %struct.rtx_def* %x, i32 %unsignedp) #6, !dbg !7655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7646, metadata !DIExpression()), !dbg !7651
  br label %if.end, !dbg !7656

if.end:                                           ; preds = %entry, %if.then
  %x.addr.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %x, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !7646, metadata !DIExpression()), !dbg !7651
  %idxprom = sext i32 %icode to i64, !dbg !7657
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 3, !dbg !7659
  %0 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !7659
  %idxprom1 = sext i32 %opnum to i64, !dbg !7657
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %0, i64 %idxprom1, i32 0, !dbg !7660
  %1 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !7660
  %mode8 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %0, i64 %idxprom1, i32 2, !dbg !7661
  %bf.load = load i16, i16* %mode8, align 8, !dbg !7661
  %bf.cast = zext i16 %bf.load to i32, !dbg !7661
  %call9 = tail call i32 %1(%struct.rtx_def* %x.addr.0, i32 %bf.cast) #6, !dbg !7657
  %tobool = icmp eq i32 %call9, 0, !dbg !7657
  br i1 %tobool, label %if.then10, label %return, !dbg !7662

if.then10:                                        ; preds = %if.end
  %2 = load i32, i32* @reload_completed, align 4, !dbg !7663
  %tobool11 = icmp eq i32 %2, 0, !dbg !7663
  br i1 %tobool11, label %if.end13, label %return, !dbg !7666

if.end13:                                         ; preds = %if.then10
  %bf.load20 = load i16, i16* %mode8, align 8, !dbg !7667
  %bf.cast21 = zext i16 %bf.load20 to i32, !dbg !7667
  %call22 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast21, %struct.rtx_def* %x.addr.0) #6, !dbg !7668
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !7646, metadata !DIExpression()), !dbg !7651
  br label %return, !dbg !7669

return:                                           ; preds = %if.then10, %if.end, %if.end13
  %retval.0 = phi %struct.rtx_def* [ null, %if.then10 ], [ %x.addr.0, %if.end ], [ %call22, %if.end13 ], !dbg !7651
  ret %struct.rtx_def* %retval.0, !dbg !7670
}

; Function Attrs: nounwind uwtable
define dso_local void @emit_cmp_and_jump_insns(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 %comparison, %struct.rtx_def* %size, i32 %mode, i32 %unsignedp, %struct.rtx_def* %label) local_unnamed_addr #4 !dbg !7671 {
entry:
  %mode.addr = alloca i32, align 4
  %test = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7675, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !7676, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32 %comparison, metadata !7677, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !7678, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7679, metadata !DIExpression()), !dbg !7685
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !7680, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label, metadata !7681, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7682, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !7683, metadata !DIExpression()), !dbg !7685
  %0 = bitcast %struct.rtx_def** %test to i8*, !dbg !7686
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7686
  %call = tail call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %x, %struct.rtx_def* %y) #6, !dbg !7687
  %tobool = icmp eq i8 %call, 0, !dbg !7687
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7689

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @swap_condition(i32 %comparison) #6, !dbg !7690
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7679, metadata !DIExpression()), !dbg !7685
  %call2 = tail call i32 @can_compare_p(i32 %call1, i32 %mode, i32 0) #8, !dbg !7691
  %tobool3 = icmp eq i32 %call2, 0, !dbg !7691
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7692

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !7682, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7683, metadata !DIExpression()), !dbg !7685
  %call4 = tail call i32 @swap_condition(i32 %comparison) #6, !dbg !7693
  call void @llvm.dbg.value(metadata i32 %call4, metadata !7677, metadata !DIExpression()), !dbg !7685
  br label %if.end, !dbg !7695

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %comparison.addr.0 = phi i32 [ %call4, %if.then ], [ %comparison, %land.lhs.true ], [ %comparison, %entry ]
  %op0.0 = phi %struct.rtx_def* [ %y, %if.then ], [ %x, %land.lhs.true ], [ %x, %entry ], !dbg !7685
  %op1.0 = phi %struct.rtx_def* [ %x, %if.then ], [ %y, %land.lhs.true ], [ %y, %entry ], !dbg !7685
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.0, metadata !7683, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.0, metadata !7682, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32 %comparison.addr.0, metadata !7677, metadata !DIExpression()), !dbg !7685
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 0, !dbg !7696
  %bf.load = load i32, i32* %1, align 8, !dbg !7696
  %bf.clear = and i32 %bf.load, 65535, !dbg !7696
  %idxprom = zext i32 %bf.clear to i64, !dbg !7696
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !7696
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7696
  %cmp = icmp eq i32 %2, 9, !dbg !7696
  br i1 %cmp, label %if.then6, label %if.end8, !dbg !7698

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7679, metadata !DIExpression()), !dbg !7685
  %call7 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op0.0) #6, !dbg !7699
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !7682, metadata !DIExpression()), !dbg !7685
  br label %if.end8, !dbg !7700

if.end8:                                          ; preds = %if.then6, %if.end
  %op0.1 = phi %struct.rtx_def* [ %call7, %if.then6 ], [ %op0.0, %if.end ], !dbg !7685
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.1, metadata !7682, metadata !DIExpression()), !dbg !7685
  %tobool9 = icmp eq i32 %unsignedp, 0, !dbg !7701
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !7703

if.then10:                                        ; preds = %if.end8
  %call11 = tail call i32 @unsigned_condition(i32 %comparison.addr.0) #6, !dbg !7704
  call void @llvm.dbg.value(metadata i32 %call11, metadata !7677, metadata !DIExpression()), !dbg !7685
  br label %if.end12, !dbg !7705

if.end12:                                         ; preds = %if.end8, %if.then10
  %comparison.addr.1 = phi i32 [ %call11, %if.then10 ], [ %comparison.addr.0, %if.end8 ], !dbg !7685
  call void @llvm.dbg.value(metadata i32 %comparison.addr.1, metadata !7677, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32* %mode.addr, metadata !7679, metadata !DIExpression(DW_OP_deref)), !dbg !7685
  call void @llvm.dbg.value(metadata %struct.rtx_def** %test, metadata !7684, metadata !DIExpression(DW_OP_deref)), !dbg !7685
  call fastcc void @prepare_cmp_insn(%struct.rtx_def* %op0.1, %struct.rtx_def* %op1.0, i32 %comparison.addr.1, %struct.rtx_def* %size, i32 %unsignedp, i32 3, %struct.rtx_def** nonnull %test, i32* nonnull %mode.addr) #8, !dbg !7706
  %3 = load %struct.rtx_def*, %struct.rtx_def** %test, align 8, !dbg !7707
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !7684, metadata !DIExpression()), !dbg !7685
  %4 = load i32, i32* %mode.addr, align 4, !dbg !7708
  call void @llvm.dbg.value(metadata i32 %4, metadata !7679, metadata !DIExpression()), !dbg !7685
  call fastcc void @emit_cmp_and_jump_insn_1(%struct.rtx_def* %3, i32 %4, %struct.rtx_def* %label) #8, !dbg !7709
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7710
  ret void, !dbg !7710
}

declare dso_local zeroext i8 @swap_commutative_operands_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @swap_condition(i32) local_unnamed_addr #1

declare dso_local i32 @unsigned_condition(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @prepare_cmp_insn(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 %comparison, %struct.rtx_def* %size, i32 %unsignedp, i32 %methods, %struct.rtx_def** %ptest, i32* %pmode) unnamed_addr #4 !dbg !7711 {
entry:
  %cmp358 = icmp eq i32 %methods, 0, !dbg !7751
  %cmp394 = icmp eq i32 %methods, 3, !dbg !7753
  %tobool417 = icmp eq i32 %unsignedp, 0, !dbg !7755
  %.pre = load i32, i32* %pmode, align 4, !dbg !7756
  br label %tailrecurse, !dbg !7757

tailrecurse:                                      ; preds = %if.end423, %entry
  %0 = phi i32 [ %.pre, %entry ], [ %54, %if.end423 ], !dbg !7756
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %call425, %if.end423 ]
  %y.tr = phi %struct.rtx_def* [ %y, %entry ], [ %53, %if.end423 ]
  %size.tr = phi %struct.rtx_def* [ %size, %entry ], [ null, %if.end423 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !7716, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata i32 %comparison, metadata !7718, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size.tr, metadata !7719, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !7720, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata i32 %methods, metadata !7721, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def** %ptest, metadata !7722, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata i32* %pmode, metadata !7723, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata i32 %0, metadata !7724, metadata !DIExpression()), !dbg !7758
  switch i32 %methods, label %cond.true [
    i32 0, label %cond.end
    i32 2, label %cond.end
    i32 3, label %cond.end
  ], !dbg !7759

cond.true:                                        ; preds = %tailrecurse
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4060, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7759
  br label %cond.end, !dbg !7759

cond.end:                                         ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %cond.true
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !7760
  %bf.load = load i32, i32* %1, align 8, !dbg !7760
  %bf.clear = and i32 %bf.load, 65535, !dbg !7760
  %idxprom = zext i32 %bf.clear to i64, !dbg !7760
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !7760
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7760
  %cmp4 = icmp eq i32 %2, 9, !dbg !7760
  %3 = load i32, i32* @optimize, align 4, !dbg !7762
  %tobool = icmp ne i32 %3, 0, !dbg !7762
  %or.cond = and i1 %cmp4, %tobool, !dbg !7763
  br i1 %or.cond, label %land.lhs.true5, label %if.end, !dbg !7763

land.lhs.true5:                                   ; preds = %cond.end
  %call = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !7764
  %call6 = tail call i32 @rtx_cost(%struct.rtx_def* %x.tr, i32 48, i8 zeroext %call) #6, !dbg !7765
  %cmp7 = icmp sgt i32 %call6, 4, !dbg !7766
  br i1 %cmp7, label %if.then, label %if.end, !dbg !7767

if.then:                                          ; preds = %land.lhs.true5
  %call8 = tail call %struct.rtx_def* @force_reg(i32 %0, %struct.rtx_def* %x.tr) #6, !dbg !7768
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call8, metadata !7716, metadata !DIExpression()), !dbg !7758
  br label %if.end, !dbg !7769

if.end:                                           ; preds = %if.then, %land.lhs.true5, %cond.end
  %x.addr.0 = phi %struct.rtx_def* [ %call8, %if.then ], [ %x.tr, %land.lhs.true5 ], [ %x.tr, %cond.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !7716, metadata !DIExpression()), !dbg !7758
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr, i64 0, i32 0, !dbg !7770
  %bf.load9 = load i32, i32* %4, align 8, !dbg !7770
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !7770
  %idxprom11 = zext i32 %bf.clear10 to i64, !dbg !7770
  %arrayidx12 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom11, !dbg !7770
  %5 = load i32, i32* %arrayidx12, align 4, !dbg !7770
  %cmp13 = icmp eq i32 %5, 9, !dbg !7770
  %6 = load i32, i32* @optimize, align 4, !dbg !7772
  %tobool15 = icmp ne i32 %6, 0, !dbg !7772
  %or.cond3 = and i1 %cmp13, %tobool15, !dbg !7773
  br i1 %or.cond3, label %land.lhs.true16, label %if.end22, !dbg !7773

land.lhs.true16:                                  ; preds = %if.end
  %call17 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !7774
  %call18 = tail call i32 @rtx_cost(%struct.rtx_def* %y.tr, i32 48, i8 zeroext %call17) #6, !dbg !7775
  %cmp19 = icmp sgt i32 %call18, 4, !dbg !7776
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !7777

if.then20:                                        ; preds = %land.lhs.true16
  %call21 = tail call %struct.rtx_def* @force_reg(i32 %0, %struct.rtx_def* %y.tr) #6, !dbg !7778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !7717, metadata !DIExpression()), !dbg !7758
  br label %if.end22, !dbg !7779

if.end22:                                         ; preds = %if.then20, %land.lhs.true16, %if.end
  %y.addr.0 = phi %struct.rtx_def* [ %call21, %if.then20 ], [ %y.tr, %land.lhs.true16 ], [ %y.tr, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.0, metadata !7717, metadata !DIExpression()), !dbg !7758
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !7780
  %bf.load23 = load i32, i32* %7, align 8, !dbg !7780
  %bf.clear24 = and i32 %bf.load23, 16711680, !dbg !7780
  %cmp25 = icmp eq i32 %bf.clear24, 0, !dbg !7782
  br i1 %cmp25, label %land.lhs.true26, label %if.end33, !dbg !7783

land.lhs.true26:                                  ; preds = %if.end22
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.0, i64 0, i32 0, !dbg !7784
  %bf.load27 = load i32, i32* %8, align 8, !dbg !7784
  %bf.clear29 = and i32 %bf.load27, 16711680, !dbg !7784
  %cmp30 = icmp eq i32 %bf.clear29, 0, !dbg !7785
  br i1 %cmp30, label %if.then31, label %if.end33, !dbg !7786

if.then31:                                        ; preds = %land.lhs.true26
  %call32 = tail call %struct.rtx_def* @force_reg(i32 %0, %struct.rtx_def* %x.addr.0) #6, !dbg !7787
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call32, metadata !7716, metadata !DIExpression()), !dbg !7758
  br label %if.end33, !dbg !7788

if.end33:                                         ; preds = %if.then31, %land.lhs.true26, %if.end22
  %x.addr.1 = phi %struct.rtx_def* [ %call32, %if.then31 ], [ %x.addr.0, %land.lhs.true26 ], [ %x.addr.0, %if.end22 ], !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.1, metadata !7716, metadata !DIExpression()), !dbg !7758
  %cmp34 = icmp eq i32 %0, 0, !dbg !7789
  br i1 %cmp34, label %if.then35, label %if.end50, !dbg !7791

if.then35:                                        ; preds = %if.end33
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.1, i64 0, i32 0, !dbg !7792
  %bf.load36 = load i32, i32* %9, align 8, !dbg !7792
  %bf.clear38 = and i32 %bf.load36, 16711680, !dbg !7792
  %cmp39 = icmp eq i32 %bf.clear38, 0, !dbg !7793
  br i1 %cmp39, label %cond.false44, label %cond.true40, !dbg !7792

cond.true40:                                      ; preds = %if.then35
  %bf.lshr42 = lshr i32 %bf.load36, 16, !dbg !7794
  %bf.clear43 = and i32 %bf.lshr42, 255, !dbg !7794
  br label %if.end50, !dbg !7792

cond.false44:                                     ; preds = %if.then35
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.0, i64 0, i32 0, !dbg !7795
  %bf.load45 = load i32, i32* %10, align 8, !dbg !7795
  %bf.lshr46 = lshr i32 %bf.load45, 16, !dbg !7795
  %bf.clear47 = and i32 %bf.lshr46, 255, !dbg !7795
  br label %if.end50, !dbg !7792

if.end50:                                         ; preds = %cond.true40, %cond.false44, %if.end33
  %mode.0 = phi i32 [ %0, %if.end33 ], [ %bf.clear43, %cond.true40 ], [ %bf.clear47, %cond.false44 ], !dbg !7758
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !7724, metadata !DIExpression()), !dbg !7758
  %cmp51 = icmp eq i32 %mode.0, 1, !dbg !7796
  br i1 %cmp51, label %if.then52, label %if.end264, !dbg !7797

if.then52:                                        ; preds = %if.end50
  %x.addr.1.lcssa = phi %struct.rtx_def* [ %x.addr.1, %if.end50 ], !dbg !7758
  %y.addr.0.lcssa = phi %struct.rtx_def* [ %y.addr.0, %if.end50 ]
  %size.tr.lcssa = phi %struct.rtx_def* [ %size.tr, %if.end50 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.1.lcssa, metadata !7716, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.0.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size.tr.lcssa, metadata !7719, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.1.lcssa, metadata !7716, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.0.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size.tr.lcssa, metadata !7719, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.1.lcssa, metadata !7716, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.0.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size.tr.lcssa, metadata !7719, metadata !DIExpression()), !dbg !7758
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.1.lcssa, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7798
  %rt_mem = bitcast %union.rtunion_def* %11 to %struct.mem_attrs**, !dbg !7798
  %12 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !7798
  %cmp55 = icmp eq %struct.mem_attrs* %12, null, !dbg !7798
  br i1 %cmp55, label %cond.end62, label %cond.true56, !dbg !7798

cond.true56:                                      ; preds = %if.then52
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %12, i64 0, i32 4, !dbg !7798
  %13 = load i32, i32* %align, align 4, !dbg !7798
  br label %cond.end62, !dbg !7798

cond.end62:                                       ; preds = %if.then52, %cond.true56
  %cond63 = phi i32 [ %13, %cond.true56 ], [ 8, %if.then52 ], !dbg !7798
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7798
  %rt_mem67 = bitcast %union.rtunion_def* %14 to %struct.mem_attrs**, !dbg !7798
  %15 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem67, align 8, !dbg !7798
  %cmp68 = icmp eq %struct.mem_attrs* %15, null, !dbg !7798
  br i1 %cmp68, label %cond.end76, label %cond.true69, !dbg !7798

cond.true69:                                      ; preds = %cond.end62
  %align74 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %15, i64 0, i32 4, !dbg !7798
  %16 = load i32, i32* %align74, align 4, !dbg !7798
  br label %cond.end76, !dbg !7798

cond.end76:                                       ; preds = %cond.end62, %cond.true69
  %cond77 = phi i32 [ %16, %cond.true69 ], [ 8, %cond.end62 ], !dbg !7798
  %cmp78 = icmp ult i32 %cond63, %cond77, !dbg !7798
  br i1 %cmp78, label %cond.true79, label %cond.false94, !dbg !7798

cond.true79:                                      ; preds = %cond.end76
  br i1 %cmp55, label %cond.end109, label %cond.true85, !dbg !7798

cond.true85:                                      ; preds = %cond.true79
  %align90 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %12, i64 0, i32 4, !dbg !7798
  %17 = load i32, i32* %align90, align 4, !dbg !7798
  br label %cond.end109, !dbg !7798

cond.false94:                                     ; preds = %cond.end76
  br i1 %cmp68, label %cond.end109, label %cond.true100, !dbg !7798

cond.true100:                                     ; preds = %cond.false94
  %align105 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %15, i64 0, i32 4, !dbg !7798
  %18 = load i32, i32* %align105, align 4, !dbg !7798
  br label %cond.end109, !dbg !7798

cond.end109:                                      ; preds = %cond.true79, %cond.false94, %cond.true100, %cond.true85
  %cond110 = phi i32 [ %17, %cond.true85 ], [ 8, %cond.true79 ], [ %18, %cond.true100 ], [ 8, %cond.false94 ], !dbg !7798
  %div = lshr i32 %cond110, 3, !dbg !7798
  %conv = zext i32 %div to i64, !dbg !7798
  %call111 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #6, !dbg !7798
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call111, metadata !7736, metadata !DIExpression()), !dbg !7799
  %tobool112 = icmp eq %struct.rtx_def* %size.tr.lcssa, null, !dbg !7800
  br i1 %tobool112, label %cond.true113, label %cond.end115, !dbg !7800

cond.true113:                                     ; preds = %cond.end109
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4098, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7800
  br label %cond.end115, !dbg !7800

cond.end115:                                      ; preds = %cond.end109, %cond.true113
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size.tr.lcssa, i64 0, i32 0, !dbg !7801
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size.tr.lcssa, i64 0, i32 1, !dbg !7801
  %arrayidx144 = bitcast %union.u* %u143 to i64*, !dbg !7801
  br label %for.cond, !dbg !7806

for.cond:                                         ; preds = %for.inc, %cond.end115
  %cmp_mode.0.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %cond.end115 ], [ %arrayidx189, %for.inc ]
  %cmp_mode.0.in = load i8, i8* %cmp_mode.0.in.in, align 1, !dbg !7807
  %cmp118 = icmp eq i8 %cmp_mode.0.in, 0, !dbg !7808
  br i1 %cmp118, label %for.end, label %for.body, !dbg !7809

for.body:                                         ; preds = %for.cond
  %idxprom120 = zext i8 %cmp_mode.0.in to i64, !dbg !7810
  %arrayidx121 = getelementptr inbounds [87 x i32], [87 x i32]* @cmpmem_optab, i64 0, i64 %idxprom120, !dbg !7810
  %20 = load i32, i32* %arrayidx121, align 4, !dbg !7810
  call void @llvm.dbg.value(metadata i32 %20, metadata !7732, metadata !DIExpression()), !dbg !7799
  %cmp122 = icmp eq i32 %20, 2956, !dbg !7811
  br i1 %cmp122, label %if.then124, label %if.end127, !dbg !7813

if.then124:                                       ; preds = %for.body
  %arrayidx126 = getelementptr inbounds [87 x i32], [87 x i32]* @cmpstr_optab, i64 0, i64 %idxprom120, !dbg !7814
  %21 = load i32, i32* %arrayidx126, align 4, !dbg !7814
  call void @llvm.dbg.value(metadata i32 %21, metadata !7732, metadata !DIExpression()), !dbg !7799
  br label %if.end127, !dbg !7815

if.end127:                                        ; preds = %if.then124, %for.body
  %cmp_code.0 = phi i32 [ %21, %if.then124 ], [ %20, %for.body ], !dbg !7816
  call void @llvm.dbg.value(metadata i32 %cmp_code.0, metadata !7732, metadata !DIExpression()), !dbg !7799
  %cmp128 = icmp eq i32 %cmp_code.0, 2956, !dbg !7817
  br i1 %cmp128, label %if.then130, label %if.end133, !dbg !7819

if.then130:                                       ; preds = %if.end127
  %arrayidx132 = getelementptr inbounds [87 x i32], [87 x i32]* @cmpstrn_optab, i64 0, i64 %idxprom120, !dbg !7820
  %22 = load i32, i32* %arrayidx132, align 4, !dbg !7820
  call void @llvm.dbg.value(metadata i32 %22, metadata !7732, metadata !DIExpression()), !dbg !7799
  br label %if.end133, !dbg !7821

if.end133:                                        ; preds = %if.then130, %if.end127
  %cmp_code.1 = phi i32 [ %22, %if.then130 ], [ %cmp_code.0, %if.end127 ], !dbg !7816
  call void @llvm.dbg.value(metadata i32 %cmp_code.1, metadata !7732, metadata !DIExpression()), !dbg !7799
  %cmp134 = icmp eq i32 %cmp_code.1, 2956, !dbg !7822
  br i1 %cmp134, label %for.inc, label %if.end137, !dbg !7824

if.end137:                                        ; preds = %if.end133
  %bf.load138 = load i32, i32* %19, align 8, !dbg !7825
  %bf.clear139 = and i32 %bf.load138, 65535, !dbg !7825
  %cmp140 = icmp eq i32 %bf.clear139, 30, !dbg !7825
  br i1 %cmp140, label %land.lhs.true142, label %if.end137.lor.lhs.false154_crit_edge, !dbg !7826

if.end137.lor.lhs.false154_crit_edge:             ; preds = %if.end137
  %arrayidx166.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom120, !dbg !7801
  %.pre34 = load i8, i8* %arrayidx166.phi.trans.insert, align 1, !dbg !7827
  br label %lor.lhs.false154, !dbg !7826

land.lhs.true142:                                 ; preds = %if.end137
  %23 = load i64, i64* %arrayidx144, align 8, !dbg !7828
  %arrayidx146 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom120, !dbg !7829
  %24 = load i8, i8* %arrayidx146, align 1, !dbg !7829
  %conv148 = zext i8 %24 to i32, !dbg !7829
  %mul = shl nuw nsw i32 %conv148, 3, !dbg !7829
  %shl = shl i32 1, %mul, !dbg !7830
  %conv151 = sext i32 %shl to i64, !dbg !7831
  %cmp152 = icmp slt i64 %23, %conv151, !dbg !7832
  br i1 %cmp152, label %lor.lhs.false154, label %for.inc, !dbg !7833

lor.lhs.false154:                                 ; preds = %if.end137.lor.lhs.false154_crit_edge, %land.lhs.true142
  %25 = phi i8 [ %.pre34, %if.end137.lor.lhs.false154_crit_edge ], [ %24, %land.lhs.true142 ], !dbg !7827
  %bf.lshr156 = lshr i32 %bf.load138, 16, !dbg !7834
  %bf.clear157 = and i32 %bf.lshr156, 255, !dbg !7834
  %idxprom158 = zext i32 %bf.clear157 to i64, !dbg !7834
  %arrayidx159 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom158, !dbg !7834
  %26 = load i8, i8* %arrayidx159, align 1, !dbg !7834
  %cmp172 = icmp ugt i8 %26, %25, !dbg !7835
  br i1 %cmp172, label %for.inc, label %if.end175, !dbg !7836

if.end175:                                        ; preds = %lor.lhs.false154
  %cmp_code.1.lcssa = phi i32 [ %cmp_code.1, %lor.lhs.false154 ], !dbg !7816
  %cmp_mode.0.in.lcssa61 = phi i8 [ %cmp_mode.0.in, %lor.lhs.false154 ], !dbg !7807
  call void @llvm.dbg.value(metadata i32 %cmp_code.1.lcssa, metadata !7732, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i32 %cmp_code.1.lcssa, metadata !7732, metadata !DIExpression()), !dbg !7799
  %cmp_mode.0.le = zext i8 %cmp_mode.0.in.lcssa61 to i32, !dbg !7807
  call void @llvm.dbg.value(metadata i32 %cmp_code.1.lcssa, metadata !7732, metadata !DIExpression()), !dbg !7799
  %idxprom176 = zext i32 %cmp_code.1.lcssa to i64, !dbg !7837
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom176, i32 3, !dbg !7838
  %27 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !7838
  %mode179 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %27, i64 0, i32 2, !dbg !7839
  %bf.load180 = load i16, i16* %mode179, align 8, !dbg !7839
  %bf.cast = zext i16 %bf.load180 to i32, !dbg !7839
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !7729, metadata !DIExpression()), !dbg !7799
  %call181 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast) #6, !dbg !7840
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call181, metadata !7735, metadata !DIExpression()), !dbg !7799
  %call182 = tail call %struct.rtx_def* @convert_to_mode(i32 %cmp_mode.0.le, %struct.rtx_def* %size.tr.lcssa, i32 1) #6, !dbg !7841
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call182, metadata !7719, metadata !DIExpression()), !dbg !7758
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom176, i32 2, !dbg !7842
  %28 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !7842
  %call185 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %28(%struct.rtx_def* %call181, %struct.rtx_def* %x.addr.1.lcssa, %struct.rtx_def* %y.addr.0.lcssa, %struct.rtx_def* %call182, %struct.rtx_def* %call111) #6, !dbg !7842
  %call186 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call185) #6, !dbg !7843
  %29 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7844
  %call187 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %comparison, i32 0, %struct.rtx_def* %call181, %struct.rtx_def* %29) #6, !dbg !7844
  store %struct.rtx_def* %call187, %struct.rtx_def** %ptest, align 8, !dbg !7845
  store i32 %bf.cast, i32* %pmode, align 4, !dbg !7846
  br label %cleanup, !dbg !7847

for.inc:                                          ; preds = %land.lhs.true142, %lor.lhs.false154, %if.end133
  %arrayidx189 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom120, !dbg !7848
  br label %for.cond, !dbg !7849, !llvm.loop !7850

for.end:                                          ; preds = %for.cond
  switch i32 %methods, label %cleanup [
    i32 1, label %if.end197
    i32 3, label %if.end197
  ], !dbg !7852

if.end197:                                        ; preds = %for.end, %for.end
  %30 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 3), align 8, !dbg !7854
  call void @llvm.dbg.value(metadata %struct.rtx_def* %30, metadata !7734, metadata !DIExpression()), !dbg !7799
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !7855
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !7733, metadata !DIExpression()), !dbg !7799
  %32 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64**), align 8, !dbg !7856
  %bf.load198 = load i64, i64* %32, align 8, !dbg !7856
  %bf.cast2005 = and i64 %bf.load198, 65535, !dbg !7856
  %cmp201 = icmp eq i64 %bf.cast2005, 14, !dbg !7856
  br i1 %cmp201, label %cond.true203, label %cond.false205, !dbg !7856

cond.true203:                                     ; preds = %if.end197
  %.cast = bitcast i64* %32 to %union.tree_node*, !dbg !7856
  %call204 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !7856
  br label %cond.end210, !dbg !7856

cond.false205:                                    ; preds = %if.end197
  %type = bitcast i64* %32 to %struct.tree_type*, !dbg !7856
  %mode206 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !7856
  %bf.load207 = load i32, i32* %mode206, align 4, !dbg !7856
  %bf.lshr208 = lshr i32 %bf.load207, 16, !dbg !7856
  %bf.clear209 = and i32 %bf.lshr208, 255, !dbg !7856
  br label %cond.end210, !dbg !7856

cond.end210:                                      ; preds = %cond.false205, %cond.true203
  %cond211 = phi i32 [ %call204, %cond.true203 ], [ %bf.clear209, %cond.false205 ], !dbg !7856
  call void @llvm.dbg.value(metadata i32 %cond211, metadata !7729, metadata !DIExpression()), !dbg !7799
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7857
  %bf.load213 = load i64, i64* %33, align 8, !dbg !7857
  %bf.cast2156 = and i64 %bf.load213, 65535, !dbg !7857
  %cmp216 = icmp eq i64 %bf.cast2156, 14, !dbg !7857
  br i1 %cmp216, label %cond.true218, label %cond.false220, !dbg !7857

cond.true218:                                     ; preds = %cond.end210
  %call219 = tail call i32 @vector_type_mode(%union.tree_node* %31) #6, !dbg !7857
  %bf.load229.pre = load i64, i64* %33, align 8, !dbg !7858
  br label %cond.end226, !dbg !7857

cond.false220:                                    ; preds = %cond.end210
  %type221 = bitcast %union.tree_node* %31 to %struct.tree_type*, !dbg !7857
  %mode222 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type221, i64 0, i32 6, !dbg !7857
  %bf.load223 = load i32, i32* %mode222, align 4, !dbg !7857
  %bf.lshr224 = lshr i32 %bf.load223, 16, !dbg !7857
  %bf.clear225 = and i32 %bf.lshr224, 255, !dbg !7857
  br label %cond.end226, !dbg !7857

cond.end226:                                      ; preds = %cond.false220, %cond.true218
  %bf.load229 = phi i64 [ %bf.load229.pre, %cond.true218 ], [ %bf.load213, %cond.false220 ], !dbg !7858
  %cond227 = phi i32 [ %call219, %cond.true218 ], [ %bf.clear225, %cond.false220 ], !dbg !7857
  call void @llvm.dbg.value(metadata i32 %cond227, metadata !7727, metadata !DIExpression()), !dbg !7758
  %bf.cast2317 = and i64 %bf.load229, 65535, !dbg !7858
  %cmp232 = icmp eq i64 %bf.cast2317, 14, !dbg !7858
  br i1 %cmp232, label %cond.true234, label %cond.false236, !dbg !7858

cond.true234:                                     ; preds = %cond.end226
  %call235 = tail call i32 @vector_type_mode(%union.tree_node* %31) #6, !dbg !7858
  %bf.load245.pre = load i64, i64* %33, align 8, !dbg !7859
  br label %cond.end242, !dbg !7858

cond.false236:                                    ; preds = %cond.end226
  %type237 = bitcast %union.tree_node* %31 to %struct.tree_type*, !dbg !7858
  %mode238 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type237, i64 0, i32 6, !dbg !7858
  %bf.load239 = load i32, i32* %mode238, align 4, !dbg !7858
  %bf.lshr240 = lshr i32 %bf.load239, 16, !dbg !7858
  %bf.clear241 = and i32 %bf.lshr240, 255, !dbg !7858
  br label %cond.end242, !dbg !7858

cond.end242:                                      ; preds = %cond.false236, %cond.true234
  %bf.load245 = phi i64 [ %bf.load245.pre, %cond.true234 ], [ %bf.load229, %cond.false236 ], !dbg !7859
  %cond243 = phi i32 [ %call235, %cond.true234 ], [ %bf.clear241, %cond.false236 ], !dbg !7858
  %bf.lshr246 = lshr i64 %bf.load245, 21, !dbg !7859
  %34 = trunc i64 %bf.lshr246 to i32, !dbg !7859
  %bf.cast248 = and i32 %34, 1, !dbg !7859
  %call249 = tail call %struct.rtx_def* @convert_to_mode(i32 %cond243, %struct.rtx_def* %size.tr.lcssa, i32 %bf.cast248) #6, !dbg !7860
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call249, metadata !7719, metadata !DIExpression()), !dbg !7758
  %arrayidx252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.1.lcssa, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7861
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**, !dbg !7861
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7861
  %arrayidx255 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7862
  %rt_rtx256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtx_def**, !dbg !7862
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx256, align 8, !dbg !7862
  %call257 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) @emit_library_call_value(%struct.rtx_def* %30, %struct.rtx_def* null, i32 2, i32 %cond211, i32 3, %struct.rtx_def* %35, i32 16, %struct.rtx_def* %36, i32 16, %struct.rtx_def* %call249, i32 %cond227) #6, !dbg !7863
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call257, metadata !7735, metadata !DIExpression()), !dbg !7799
  %37 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7864
  %call258 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %comparison, i32 0, %struct.rtx_def* %call257, %struct.rtx_def* %37) #6, !dbg !7864
  store %struct.rtx_def* %call258, %struct.rtx_def** %ptest, align 8, !dbg !7865
  store i32 %cond211, i32* %pmode, align 4, !dbg !7866
  br label %cleanup, !dbg !7867

cleanup:                                          ; preds = %for.end, %cond.end242, %if.end175
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end175 ], [ false, %cond.end242 ], [ true, %for.end ]
  br i1 %cleanup.dest.slot.0, label %fail, label %cleanup.cont434

if.end264:                                        ; preds = %if.end50
  %38 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !7868
  %tobool265 = icmp eq i32 %38, 0, !dbg !7868
  br i1 %tobool265, label %if.end277, label %if.then266, !dbg !7870

if.then266:                                       ; preds = %if.end264
  %call267 = tail call i32 @may_trap_p(%struct.rtx_def* %x.addr.1) #6, !dbg !7871
  %tobool268 = icmp eq i32 %call267, 0, !dbg !7871
  br i1 %tobool268, label %if.end271, label %if.then269, !dbg !7874

if.then269:                                       ; preds = %if.then266
  %call270 = tail call %struct.rtx_def* @force_reg(i32 %mode.0, %struct.rtx_def* %x.addr.1) #6, !dbg !7875
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call270, metadata !7716, metadata !DIExpression()), !dbg !7758
  br label %if.end271, !dbg !7876

if.end271:                                        ; preds = %if.then266, %if.then269
  %x.addr.2 = phi %struct.rtx_def* [ %call270, %if.then269 ], [ %x.addr.1, %if.then266 ], !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2, metadata !7716, metadata !DIExpression()), !dbg !7758
  %call272 = tail call i32 @may_trap_p(%struct.rtx_def* %y.addr.0) #6, !dbg !7877
  %tobool273 = icmp eq i32 %call272, 0, !dbg !7877
  br i1 %tobool273, label %if.end277, label %if.then274, !dbg !7879

if.then274:                                       ; preds = %if.end271
  %call275 = tail call %struct.rtx_def* @force_reg(i32 %mode.0, %struct.rtx_def* %y.addr.0) #6, !dbg !7880
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call275, metadata !7717, metadata !DIExpression()), !dbg !7758
  br label %if.end277, !dbg !7881

if.end277:                                        ; preds = %if.end271, %if.end264, %if.then274
  %y.addr.2 = phi %struct.rtx_def* [ %y.addr.0, %if.end264 ], [ %call275, %if.then274 ], [ %y.addr.0, %if.end271 ], !dbg !7758
  %x.addr.3 = phi %struct.rtx_def* [ %x.addr.1, %if.end264 ], [ %x.addr.2, %if.then274 ], [ %x.addr.2, %if.end271 ], !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.3, metadata !7716, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2, metadata !7717, metadata !DIExpression()), !dbg !7758
  %idxprom278 = zext i32 %mode.0 to i64, !dbg !7882
  %arrayidx279 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom278, !dbg !7882
  %39 = load i8, i8* %arrayidx279, align 1, !dbg !7882
  %cmp281 = icmp eq i8 %39, 1, !dbg !7884
  br i1 %cmp281, label %if.then283, label %if.end291, !dbg !7885

if.then283:                                       ; preds = %if.end277
  %y.addr.2.lcssa = phi %struct.rtx_def* [ %y.addr.2, %if.end277 ], !dbg !7758
  %x.addr.3.lcssa = phi %struct.rtx_def* [ %x.addr.3, %if.end277 ], !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.3.lcssa, metadata !7716, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.3.lcssa, metadata !7716, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.3.lcssa, metadata !7716, metadata !DIExpression()), !dbg !7758
  %call284 = tail call i32 @can_compare_p(i32 %comparison, i32 2, i32 0) #8, !dbg !7886
  %tobool285 = icmp eq i32 %call284, 0, !dbg !7886
  br i1 %tobool285, label %cond.true286, label %cond.end288, !dbg !7886

cond.true286:                                     ; preds = %if.then283
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4165, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7886
  br label %cond.end288, !dbg !7886

cond.end288:                                      ; preds = %if.then283, %cond.true286
  %call290 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %comparison, i32 0, %struct.rtx_def* %x.addr.3.lcssa, %struct.rtx_def* %y.addr.2.lcssa) #6, !dbg !7888
  store %struct.rtx_def* %call290, %struct.rtx_def** %ptest, align 8, !dbg !7889
  br label %cleanup.cont434, !dbg !7890

if.end291:                                        ; preds = %if.end277
  %call295 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %comparison, i32 0, %struct.rtx_def* %x.addr.3, %struct.rtx_def* %y.addr.2) #6, !dbg !7891
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call295, metadata !7726, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !7727, metadata !DIExpression()), !dbg !7758
  %arrayidx347 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call295, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7892
  %rt_rtx348 = bitcast %union.rtunion_def* %arrayidx347 to %struct.rtx_def**, !dbg !7892
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call295, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7892
  %rt_rtx352 = bitcast %union.rtunion_def* %40 to %struct.rtx_def**, !dbg !7892
  br i1 %cmp358, label %if.end291.split.us, label %if.end291.if.end291.split_crit_edge, !dbg !7895

if.end291.if.end291.split_crit_edge:              ; preds = %if.end291
  br label %do.body, !dbg !7895

if.end291.split.us:                               ; preds = %if.end291
  br label %do.body.us, !dbg !7895

do.body.us:                                       ; preds = %do.cond.us, %if.end291.split.us
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !7727, metadata !DIExpression()), !dbg !7758
  %idxprom296.us = sext i32 %mode.0 to i64, !dbg !7896
  %insn_code.us = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 115, i32 4, i64 %idxprom296.us, i32 0, !dbg !7897
  %41 = load i32, i32* %insn_code.us, align 4, !dbg !7897
  call void @llvm.dbg.value(metadata i32 %41, metadata !7737, metadata !DIExpression()), !dbg !7898
  %cmp298.us = icmp eq i32 %41, 2956, !dbg !7899
  br i1 %cmp298.us, label %if.end357.us, label %land.lhs.true300.us, !dbg !7900

land.lhs.true300.us:                              ; preds = %do.body.us
  %idxprom301.us = zext i32 %41 to i64, !dbg !7901
  %operand303.us = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom301.us, i32 3, !dbg !7902
  %42 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand303.us, align 8, !dbg !7902
  %predicate.us = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %42, i64 0, i32 0, !dbg !7903
  %43 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate.us, align 8, !dbg !7903
  %call305.us = tail call i32 %43(%struct.rtx_def* %call295, i32 0) #6, !dbg !7901
  %tobool306.us = icmp eq i32 %call305.us, 0, !dbg !7901
  br i1 %tobool306.us, label %if.end357.us, label %if.then307.us, !dbg !7904

if.then307.us:                                    ; preds = %land.lhs.true300.us
  %call308.us = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !7905
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call308.us, metadata !7739, metadata !DIExpression()), !dbg !7906
  %call309.us = tail call %struct.rtx_def* @prepare_operand(i32 %41, %struct.rtx_def* %x.addr.3, i32 1, i32 %mode.0, i32 %mode.0, i32 %unsignedp) #8, !dbg !7907
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call309.us, metadata !7742, metadata !DIExpression()), !dbg !7906
  %call310.us = tail call %struct.rtx_def* @prepare_operand(i32 %41, %struct.rtx_def* %y.addr.2, i32 2, i32 %mode.0, i32 %mode.0, i32 %unsignedp) #8, !dbg !7908
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call310.us, metadata !7743, metadata !DIExpression()), !dbg !7906
  %tobool311.us = icmp ne %struct.rtx_def* %call309.us, null, !dbg !7909
  %tobool313.us = icmp ne %struct.rtx_def* %call310.us, null, !dbg !7910
  %or.cond4.us = and i1 %tobool311.us, %tobool313.us, !dbg !7911
  br i1 %or.cond4.us, label %land.lhs.true314.us, label %if.end353.us, !dbg !7911

land.lhs.true314.us:                              ; preds = %if.then307.us
  %predicate319.us = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %42, i64 1, i32 0, !dbg !7912
  %44 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate319.us, align 8, !dbg !7912
  %mode324.us = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %42, i64 1, i32 2, !dbg !7913
  %bf.load325.us = load i16, i16* %mode324.us, align 8, !dbg !7913
  %bf.cast326.us = zext i16 %bf.load325.us to i32, !dbg !7913
  %call327.us = tail call i32 %44(%struct.rtx_def* nonnull %call309.us, i32 %bf.cast326.us) #6, !dbg !7914
  %tobool328.us = icmp eq i32 %call327.us, 0, !dbg !7914
  br i1 %tobool328.us, label %if.end353.us, label %land.lhs.true329.us, !dbg !7915

land.lhs.true329.us:                              ; preds = %land.lhs.true314.us
  %predicate334.us = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %42, i64 2, i32 0, !dbg !7916
  %45 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate334.us, align 8, !dbg !7916
  %mode339.us = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %42, i64 2, i32 2, !dbg !7917
  %bf.load340.us = load i16, i16* %mode339.us, align 8, !dbg !7917
  %bf.cast341.us = zext i16 %bf.load340.us to i32, !dbg !7917
  %call342.us = tail call i32 %45(%struct.rtx_def* nonnull %call310.us, i32 %bf.cast341.us) #6, !dbg !7918
  %tobool343.us = icmp eq i32 %call342.us, 0, !dbg !7918
  br i1 %tobool343.us, label %if.end353.us, label %if.then344.us, !dbg !7919

if.then344.us:                                    ; preds = %land.lhs.true329.us
  store %struct.rtx_def* %call309.us, %struct.rtx_def** %rt_rtx348, align 8, !dbg !7920
  store %struct.rtx_def* %call310.us, %struct.rtx_def** %rt_rtx352, align 8, !dbg !7921
  store %struct.rtx_def* %call295, %struct.rtx_def** %ptest, align 8, !dbg !7922
  store i32 %mode.0, i32* %pmode, align 4, !dbg !7923
  br label %cleanup354.us, !dbg !7924

if.end353.us:                                     ; preds = %land.lhs.true329.us, %land.lhs.true314.us, %if.then307.us
  tail call void @delete_insns_since(%struct.rtx_def* %call308.us) #6, !dbg !7925
  br label %cleanup354.us, !dbg !7926

cleanup354.us:                                    ; preds = %if.end353.us, %if.then344.us
  %cleanup.dest.slot.1.us = phi i32 [ 1, %if.then344.us ], [ 0, %if.end353.us ]
  %cond1.us = icmp eq i32 %cleanup.dest.slot.1.us, 0
  br i1 %cond1.us, label %if.end357.us, label %cleanup389.us

if.end357.us:                                     ; preds = %cleanup354.us, %land.lhs.true300.us, %do.body.us
  br label %cleanup389.us, !dbg !7927

cleanup389.us:                                    ; preds = %if.end357.us, %cleanup354.us
  %cleanup.dest.slot.2.us = phi i32 [ %cleanup.dest.slot.1.us, %cleanup354.us ], [ 6, %if.end357.us ]
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !7727, metadata !DIExpression()), !dbg !7758
  switch i32 %cleanup.dest.slot.2.us, label %cleanup.cont434.loopexit.us-lcssa.us [
    i32 0, label %do.cond.us
    i32 6, label %do.end.us-lcssa.us
  ]

do.cond.us:                                       ; preds = %cleanup389.us
  %cmp392.us = icmp eq i32 %mode.0, 0, !dbg !7928
  br i1 %cmp392.us, label %do.end.us-lcssa.us, label %do.body.us, !dbg !7929, !llvm.loop !7930

cleanup.cont434.loopexit.us-lcssa.us:             ; preds = %cleanup389.us
  br label %cleanup.cont434.loopexit, !dbg !7932

do.end.us-lcssa.us:                               ; preds = %do.cond.us, %cleanup389.us
  br label %do.end, !dbg !7933

do.body:                                          ; preds = %do.cond, %if.end291.if.end291.split_crit_edge
  %cmp_mode.1 = phi i32 [ %mode.0, %if.end291.if.end291.split_crit_edge ], [ %cmp_mode.2, %do.cond ], !dbg !7934
  call void @llvm.dbg.value(metadata i32 %cmp_mode.1, metadata !7727, metadata !DIExpression()), !dbg !7758
  %idxprom296 = sext i32 %cmp_mode.1 to i64, !dbg !7896
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 115, i32 4, i64 %idxprom296, i32 0, !dbg !7897
  %46 = load i32, i32* %insn_code, align 4, !dbg !7897
  call void @llvm.dbg.value(metadata i32 %46, metadata !7737, metadata !DIExpression()), !dbg !7898
  %cmp298 = icmp eq i32 %46, 2956, !dbg !7899
  br i1 %cmp298, label %if.end357, label %land.lhs.true300, !dbg !7900

land.lhs.true300:                                 ; preds = %do.body
  %idxprom301 = zext i32 %46 to i64, !dbg !7901
  %operand303 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom301, i32 3, !dbg !7902
  %47 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand303, align 8, !dbg !7902
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %47, i64 0, i32 0, !dbg !7903
  %48 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !7903
  %call305 = tail call i32 %48(%struct.rtx_def* %call295, i32 0) #6, !dbg !7901
  %tobool306 = icmp eq i32 %call305, 0, !dbg !7901
  br i1 %tobool306, label %if.end357, label %if.then307, !dbg !7904

if.then307:                                       ; preds = %land.lhs.true300
  %call308 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !7905
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call308, metadata !7739, metadata !DIExpression()), !dbg !7906
  %call309 = tail call %struct.rtx_def* @prepare_operand(i32 %46, %struct.rtx_def* %x.addr.3, i32 1, i32 %mode.0, i32 %cmp_mode.1, i32 %unsignedp) #8, !dbg !7907
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call309, metadata !7742, metadata !DIExpression()), !dbg !7906
  %call310 = tail call %struct.rtx_def* @prepare_operand(i32 %46, %struct.rtx_def* %y.addr.2, i32 2, i32 %mode.0, i32 %cmp_mode.1, i32 %unsignedp) #8, !dbg !7908
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call310, metadata !7743, metadata !DIExpression()), !dbg !7906
  %tobool311 = icmp ne %struct.rtx_def* %call309, null, !dbg !7909
  %tobool313 = icmp ne %struct.rtx_def* %call310, null, !dbg !7910
  %or.cond4 = and i1 %tobool311, %tobool313, !dbg !7911
  br i1 %or.cond4, label %land.lhs.true314, label %if.end353, !dbg !7911

land.lhs.true314:                                 ; preds = %if.then307
  %predicate319 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %47, i64 1, i32 0, !dbg !7912
  %49 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate319, align 8, !dbg !7912
  %mode324 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %47, i64 1, i32 2, !dbg !7913
  %bf.load325 = load i16, i16* %mode324, align 8, !dbg !7913
  %bf.cast326 = zext i16 %bf.load325 to i32, !dbg !7913
  %call327 = tail call i32 %49(%struct.rtx_def* nonnull %call309, i32 %bf.cast326) #6, !dbg !7914
  %tobool328 = icmp eq i32 %call327, 0, !dbg !7914
  br i1 %tobool328, label %if.end353, label %land.lhs.true329, !dbg !7915

land.lhs.true329:                                 ; preds = %land.lhs.true314
  %predicate334 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %47, i64 2, i32 0, !dbg !7916
  %50 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate334, align 8, !dbg !7916
  %mode339 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %47, i64 2, i32 2, !dbg !7917
  %bf.load340 = load i16, i16* %mode339, align 8, !dbg !7917
  %bf.cast341 = zext i16 %bf.load340 to i32, !dbg !7917
  %call342 = tail call i32 %50(%struct.rtx_def* nonnull %call310, i32 %bf.cast341) #6, !dbg !7918
  %tobool343 = icmp eq i32 %call342, 0, !dbg !7918
  br i1 %tobool343, label %if.end353, label %if.then344, !dbg !7919

if.then344:                                       ; preds = %land.lhs.true329
  store %struct.rtx_def* %call309, %struct.rtx_def** %rt_rtx348, align 8, !dbg !7920
  store %struct.rtx_def* %call310, %struct.rtx_def** %rt_rtx352, align 8, !dbg !7921
  store %struct.rtx_def* %call295, %struct.rtx_def** %ptest, align 8, !dbg !7922
  store i32 %cmp_mode.1, i32* %pmode, align 4, !dbg !7923
  br label %cleanup354, !dbg !7924

if.end353:                                        ; preds = %land.lhs.true329, %land.lhs.true314, %if.then307
  tail call void @delete_insns_since(%struct.rtx_def* %call308) #6, !dbg !7925
  br label %cleanup354, !dbg !7926

cleanup354:                                       ; preds = %if.end353, %if.then344
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.then344 ], [ 0, %if.end353 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %if.end357, label %cleanup389

if.end357:                                        ; preds = %land.lhs.true300, %do.body, %cleanup354
  switch i8 %39, label %cleanup389 [
    i8 2, label %if.end385
    i8 8, label %if.end385
    i8 9, label %if.end385
    i8 11, label %if.end385
    i8 4, label %if.end385
    i8 5, label %if.end385
    i8 6, label %if.end385
    i8 7, label %if.end385
  ], !dbg !7935

if.end385:                                        ; preds = %if.end357, %if.end357, %if.end357, %if.end357, %if.end357, %if.end357, %if.end357, %if.end357
  %idxprom386 = zext i32 %cmp_mode.1 to i64, !dbg !7936
  %arrayidx387 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom386, !dbg !7936
  %51 = load i8, i8* %arrayidx387, align 1, !dbg !7936
  %conv388 = zext i8 %51 to i32, !dbg !7936
  call void @llvm.dbg.value(metadata i32 %conv388, metadata !7727, metadata !DIExpression()), !dbg !7758
  br label %cleanup389, !dbg !7937

cleanup389:                                       ; preds = %if.end357, %cleanup354, %if.end385
  %cmp_mode.2 = phi i32 [ %cmp_mode.1, %cleanup354 ], [ %conv388, %if.end385 ], [ %cmp_mode.1, %if.end357 ], !dbg !7758
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.1, %cleanup354 ], [ 0, %if.end385 ], [ 6, %if.end357 ]
  call void @llvm.dbg.value(metadata i32 %cmp_mode.2, metadata !7727, metadata !DIExpression()), !dbg !7758
  switch i32 %cleanup.dest.slot.2, label %cleanup.cont434.loopexit.us-lcssa [
    i32 0, label %do.cond
    i32 6, label %do.end.us-lcssa
  ]

do.cond:                                          ; preds = %cleanup389
  %cmp392 = icmp eq i32 %cmp_mode.2, 0, !dbg !7928
  br i1 %cmp392, label %do.end.us-lcssa, label %do.body, !dbg !7929, !llvm.loop !7930

do.end.us-lcssa:                                  ; preds = %cleanup389, %do.cond
  br label %do.end, !dbg !7933

do.end:                                           ; preds = %do.end.us-lcssa.us, %do.end.us-lcssa
  br i1 %cmp394, label %if.end397, label %fail.loopexit, !dbg !7938

if.end397:                                        ; preds = %do.end
  %cmp401 = icmp eq i8 %39, 8, !dbg !7939
  br i1 %cmp401, label %if.else, label %lor.lhs.false403, !dbg !7939

lor.lhs.false403:                                 ; preds = %if.end397
  %cmp407 = icmp eq i8 %39, 9, !dbg !7939
  br i1 %cmp407, label %if.else, label %if.then409, !dbg !7940

if.then409:                                       ; preds = %lor.lhs.false403
  %call411 = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 105), i32 %mode.0) #8, !dbg !7941
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call411, metadata !7725, metadata !DIExpression()), !dbg !7758
  %tobool412 = icmp eq %struct.rtx_def* %call411, null, !dbg !7942
  br i1 %tobool412, label %cond.true413, label %cond.end415, !dbg !7942

cond.true413:                                     ; preds = %if.then409
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4213, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7942
  br label %cond.end415, !dbg !7942

cond.end415:                                      ; preds = %if.then409, %cond.true413
  br i1 %tobool417, label %if.end423, label %if.then418, !dbg !7943

if.then418:                                       ; preds = %cond.end415
  %call419 = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 106), i32 %mode.0) #8, !dbg !7944
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call419, metadata !7747, metadata !DIExpression()), !dbg !7945
  %tobool420 = icmp eq %struct.rtx_def* %call419, null, !dbg !7946
  %spec.select = select i1 %tobool420, %struct.rtx_def* %call411, %struct.rtx_def* %call419, !dbg !7948
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !7725, metadata !DIExpression()), !dbg !7758
  br label %if.end423, !dbg !7949

if.end423:                                        ; preds = %cond.end415, %if.then418
  %libfunc.1 = phi %struct.rtx_def* [ %spec.select, %if.then418 ], [ %call411, %cond.end415 ], !dbg !7950
  call void @llvm.dbg.value(metadata %struct.rtx_def* %libfunc.1, metadata !7725, metadata !DIExpression()), !dbg !7758
  %52 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 8), align 8, !dbg !7951
  %call424 = tail call i32 %52() #6, !dbg !7952
  %call425 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) @emit_library_call_value(%struct.rtx_def* %libfunc.1, %struct.rtx_def* null, i32 1, i32 %call424, i32 2, %struct.rtx_def* %x.addr.3, i32 %mode.0, %struct.rtx_def* %y.addr.2, i32 %mode.0) #6, !dbg !7953
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call425, metadata !7744, metadata !DIExpression()), !dbg !7950
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call425, metadata !7716, metadata !DIExpression()), !dbg !7758
  %53 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !7954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %53, metadata !7717, metadata !DIExpression()), !dbg !7758
  %54 = load i32, i32* @word_mode, align 4, !dbg !7955
  store i32 %54, i32* %pmode, align 4, !dbg !7956
  br label %tailrecurse, !dbg !7757

if.else:                                          ; preds = %lor.lhs.false403, %if.end397
  %y.addr.2.lcssa84 = phi %struct.rtx_def* [ %y.addr.2, %lor.lhs.false403 ], [ %y.addr.2, %if.end397 ], !dbg !7758
  %x.addr.3.lcssa80 = phi %struct.rtx_def* [ %x.addr.3, %lor.lhs.false403 ], [ %x.addr.3, %if.end397 ], !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa84, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa84, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.3.lcssa80, metadata !7716, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.3.lcssa80, metadata !7716, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa84, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa84, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.3.lcssa80, metadata !7716, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.3.lcssa80, metadata !7716, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa84, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa84, metadata !7717, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.3.lcssa80, metadata !7716, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.3.lcssa80, metadata !7716, metadata !DIExpression()), !dbg !7758
  tail call fastcc void @prepare_float_lib_cmp(%struct.rtx_def* %x.addr.3.lcssa80, %struct.rtx_def* %y.addr.2.lcssa84, i32 %comparison, %struct.rtx_def** %ptest, i32* %pmode) #8, !dbg !7957
  br label %cleanup.cont434

fail.loopexit:                                    ; preds = %do.end
  br label %fail, !dbg !7958

fail:                                             ; preds = %fail.loopexit, %cleanup
  call void @llvm.dbg.label(metadata !7750), !dbg !7959
  store %struct.rtx_def* null, %struct.rtx_def** %ptest, align 8, !dbg !7958
  br label %cleanup.cont434, !dbg !7932

cleanup.cont434.loopexit.us-lcssa:                ; preds = %cleanup389
  br label %cleanup.cont434.loopexit, !dbg !7932

cleanup.cont434.loopexit:                         ; preds = %cleanup.cont434.loopexit.us-lcssa.us, %cleanup.cont434.loopexit.us-lcssa
  br label %cleanup.cont434, !dbg !7932

cleanup.cont434:                                  ; preds = %cleanup.cont434.loopexit, %cond.end288, %fail, %cleanup, %if.else
  ret void, !dbg !7932
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_cmp_and_jump_insn_1(%struct.rtx_def* %test, i32 %mode, %struct.rtx_def* %label) unnamed_addr #4 !dbg !7960 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %test, metadata !7964, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7965, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label, metadata !7966, metadata !DIExpression()), !dbg !7970
  %idxprom = zext i32 %mode to i64, !dbg !7971
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !7971
  %0 = load i8, i8* %arrayidx, align 1, !dbg !7971
  call void @llvm.dbg.value(metadata i8 %0, metadata !7968, metadata !DIExpression()), !dbg !7970
  %cmp = icmp eq i8 %0, 1, !dbg !7972
  %1 = sext i32 %mode to i64, !dbg !7973
  %idxprom2 = select i1 %cmp, i64 2, i64 %1, !dbg !7973
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 115, i32 4, i64 %idxprom2, i32 0, !dbg !7974
  %2 = load i32, i32* %insn_code, align 4, !dbg !7974
  call void @llvm.dbg.value(metadata i32 %2, metadata !7969, metadata !DIExpression()), !dbg !7970
  %cmp4 = icmp eq i32 %2, 2956, !dbg !7975
  br i1 %cmp4, label %cond.true6, label %cond.end8, !dbg !7975

cond.true6:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4297, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7975
  br label %cond.end8, !dbg !7975

cond.end8:                                        ; preds = %entry, %cond.true6
  %idxprom10 = zext i32 %2 to i64, !dbg !7976
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom10, i32 3, !dbg !7976
  %3 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !7976
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %3, i64 0, i32 0, !dbg !7976
  %4 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !7976
  %call = tail call i32 %4(%struct.rtx_def* %test, i32 0) #6, !dbg !7976
  %tobool = icmp eq i32 %call, 0, !dbg !7976
  br i1 %tobool, label %cond.true13, label %cond.end15, !dbg !7976

cond.true13:                                      ; preds = %cond.end8
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4298, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7976
  br label %cond.end15, !dbg !7976

cond.end15:                                       ; preds = %cond.end8, %cond.true13
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom10, i32 2, !dbg !7977
  %5 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !7977
  %arrayidx19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %test, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7978
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !7978
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7978
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %test, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7979
  %rt_rtx23 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !7979
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !7979
  %call24 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %5(%struct.rtx_def* %test, %struct.rtx_def* %6, %struct.rtx_def* %8, %struct.rtx_def* %label) #6, !dbg !7977
  %call25 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call24) #6, !dbg !7980
  ret void, !dbg !7981
}

; Function Attrs: nounwind uwtable
define dso_local void @emit_indirect_jump(%struct.rtx_def* %loc) local_unnamed_addr #4 !dbg !7982 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %loc, metadata !7986, metadata !DIExpression()), !dbg !7987
  %0 = load %struct.insn_operand_data*, %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 2200, i32 3), align 8, !dbg !7988
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %0, i64 0, i32 0, !dbg !7990
  %1 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !7990
  %call = tail call i32 %1(%struct.rtx_def* %loc, i32 16) #6, !dbg !7991
  %tobool = icmp eq i32 %call, 0, !dbg !7991
  br i1 %tobool, label %if.then, label %if.end, !dbg !7992

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 16, %struct.rtx_def* %loc) #6, !dbg !7993
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !7986, metadata !DIExpression()), !dbg !7987
  br label %if.end, !dbg !7994

if.end:                                           ; preds = %entry, %if.then
  %loc.addr.0 = phi %struct.rtx_def* [ %loc, %entry ], [ %call1, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %loc.addr.0, metadata !7986, metadata !DIExpression()), !dbg !7987
  %call2 = tail call %struct.rtx_def* @gen_indirect_jump(%struct.rtx_def* %loc.addr.0) #6, !dbg !7995
  %call3 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call2) #6, !dbg !7996
  %call4 = tail call %struct.rtx_def* @emit_barrier() #6, !dbg !7997
  ret void, !dbg !7998
}

declare dso_local %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_indirect_jump(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_barrier() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_conditional_move(%struct.rtx_def* %target, i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %cmode, %struct.rtx_def* %op2, %struct.rtx_def* %op3, i32 %mode, i32 %unsignedp) local_unnamed_addr #4 !dbg !7999 {
entry:
  %cmode.addr = alloca i32, align 4
  %comparison = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !8003, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i32 %code, metadata !8004, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !8005, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !8006, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i32 %cmode, metadata !8007, metadata !DIExpression()), !dbg !8018
  store i32 %cmode, i32* %cmode.addr, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2, metadata !8008, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op3, metadata !8009, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8010, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8011, metadata !DIExpression()), !dbg !8018
  %0 = bitcast %struct.rtx_def** %comparison to i8*, !dbg !8019
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !8019
  %call = tail call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %op0, %struct.rtx_def* %op1) #6, !dbg !8020
  %tobool = icmp eq i8 %call, 0, !dbg !8020
  br i1 %tobool, label %if.end, label %if.then, !dbg !8022

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !8012, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !8005, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !8006, metadata !DIExpression()), !dbg !8018
  %call1 = tail call i32 @swap_condition(i32 %code) #6, !dbg !8023
  call void @llvm.dbg.value(metadata i32 %call1, metadata !8004, metadata !DIExpression()), !dbg !8018
  br label %if.end, !dbg !8025

if.end:                                           ; preds = %entry, %if.then
  %op1.addr.0 = phi %struct.rtx_def* [ %op0, %if.then ], [ %op1, %entry ]
  %op0.addr.0 = phi %struct.rtx_def* [ %op1, %if.then ], [ %op0, %entry ]
  %code.addr.0 = phi i32 [ %call1, %if.then ], [ %code, %entry ]
  call void @llvm.dbg.value(metadata i32 %code.addr.0, metadata !8004, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.addr.0, metadata !8005, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.0, metadata !8006, metadata !DIExpression()), !dbg !8018
  %cmp = icmp eq i32 %code.addr.0, 85, !dbg !8026
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !8028
  %cmp2 = icmp eq %struct.rtx_def* %op1.addr.0, %1, !dbg !8029
  %or.cond = and i1 %cmp, %cmp2, !dbg !8030
  br i1 %or.cond, label %if.then3, label %if.else, !dbg !8030

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 84, metadata !8004, metadata !DIExpression()), !dbg !8018
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8031
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !8006, metadata !DIExpression()), !dbg !8018
  br label %if.end9, !dbg !8032

if.else:                                          ; preds = %if.end
  %cmp4 = icmp eq i32 %code.addr.0, 83, !dbg !8033
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !8035
  %cmp6 = icmp eq %struct.rtx_def* %op1.addr.0, %3, !dbg !8036
  %or.cond1 = and i1 %cmp4, %cmp6, !dbg !8037
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8037
  %op1.addr.1 = select i1 %or.cond1, %struct.rtx_def* %4, %struct.rtx_def* %op1.addr.0, !dbg !8037
  %code.addr.1 = select i1 %or.cond1, i32 82, i32 %code.addr.0, !dbg !8037
  br label %if.end9, !dbg !8037

if.end9:                                          ; preds = %if.else, %if.then3
  %op1.addr.2 = phi %struct.rtx_def* [ %2, %if.then3 ], [ %op1.addr.1, %if.else ], !dbg !8038
  %code.addr.2 = phi i32 [ 84, %if.then3 ], [ %code.addr.1, %if.else ], !dbg !8038
  call void @llvm.dbg.value(metadata i32 %code.addr.2, metadata !8004, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.2, metadata !8006, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i32 %cmode, metadata !8007, metadata !DIExpression()), !dbg !8018
  %cmp10 = icmp eq i32 %cmode, 0, !dbg !8039
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !8041

if.then11:                                        ; preds = %if.end9
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.addr.0, i64 0, i32 0, !dbg !8042
  %bf.load = load i32, i32* %5, align 8, !dbg !8042
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8042
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8042
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !8007, metadata !DIExpression()), !dbg !8018
  store i32 %bf.clear, i32* %cmode.addr, align 4, !dbg !8043
  br label %if.end12, !dbg !8044

if.end12:                                         ; preds = %if.then11, %if.end9
  %6 = phi i32 [ %bf.clear, %if.then11 ], [ %cmode, %if.end9 ]
  %call13 = tail call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %op2, %struct.rtx_def* %op3) #6, !dbg !8045
  %tobool14 = icmp eq i8 %call13, 0, !dbg !8045
  br i1 %tobool14, label %if.end20, label %land.lhs.true15, !dbg !8047

land.lhs.true15:                                  ; preds = %if.end12
  %call16 = tail call i32 @reversed_comparison_code_parts(i32 %code.addr.2, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.2, %struct.rtx_def* null) #6, !dbg !8048
  call void @llvm.dbg.value(metadata i32 %call16, metadata !8017, metadata !DIExpression()), !dbg !8018
  %cmp17 = icmp ne i32 %call16, 0, !dbg !8049
  %spec.select = select i1 %cmp17, %struct.rtx_def* %op2, %struct.rtx_def* %op3, !dbg !8050
  %spec.select2 = select i1 %cmp17, %struct.rtx_def* %op3, %struct.rtx_def* %op2, !dbg !8050
  %spec.select3 = select i1 %cmp17, i32 %call16, i32 %code.addr.2, !dbg !8050
  br label %if.end20, !dbg !8050

if.end20:                                         ; preds = %if.end12, %land.lhs.true15
  %op3.addr.0 = phi %struct.rtx_def* [ %op3, %if.end12 ], [ %spec.select, %land.lhs.true15 ]
  %op2.addr.0 = phi %struct.rtx_def* [ %op2, %if.end12 ], [ %spec.select2, %land.lhs.true15 ]
  %code.addr.3 = phi i32 [ %code.addr.2, %if.end12 ], [ %spec.select3, %land.lhs.true15 ], !dbg !8018
  call void @llvm.dbg.value(metadata i32 %code.addr.3, metadata !8004, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2.addr.0, metadata !8008, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op3.addr.0, metadata !8009, metadata !DIExpression()), !dbg !8018
  %cmp21 = icmp eq i32 %mode, 0, !dbg !8051
  br i1 %cmp21, label %if.then23, label %if.end27, !dbg !8053

if.then23:                                        ; preds = %if.end20
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op2.addr.0, i64 0, i32 0, !dbg !8054
  %bf.load24 = load i32, i32* %7, align 8, !dbg !8054
  %bf.lshr25 = lshr i32 %bf.load24, 16, !dbg !8054
  %bf.clear26 = and i32 %bf.lshr25, 255, !dbg !8054
  call void @llvm.dbg.value(metadata i32 %bf.clear26, metadata !8010, metadata !DIExpression()), !dbg !8018
  br label %if.end27, !dbg !8055

if.end27:                                         ; preds = %if.then23, %if.end20
  %mode.addr.0 = phi i32 [ %bf.clear26, %if.then23 ], [ %mode, %if.end20 ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.0, metadata !8010, metadata !DIExpression()), !dbg !8018
  %idxprom = zext i32 %mode.addr.0 to i64, !dbg !8056
  %arrayidx = getelementptr inbounds [87 x i32], [87 x i32]* @movcc_gen_code, i64 0, i64 %idxprom, !dbg !8056
  %8 = load i32, i32* %arrayidx, align 4, !dbg !8056
  call void @llvm.dbg.value(metadata i32 %8, metadata !8016, metadata !DIExpression()), !dbg !8018
  %cmp28 = icmp eq i32 %8, 2956, !dbg !8057
  br i1 %cmp28, label %cleanup, label %if.end31, !dbg !8059

if.end31:                                         ; preds = %if.end27
  %tobool32 = icmp eq %struct.rtx_def* %target, null, !dbg !8060
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !8062

if.then33:                                        ; preds = %if.end31
  %call34 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.addr.0) #6, !dbg !8063
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !8003, metadata !DIExpression()), !dbg !8018
  br label %if.end35, !dbg !8064

if.end35:                                         ; preds = %if.end31, %if.then33
  %target.addr.0 = phi %struct.rtx_def* [ %target, %if.end31 ], [ %call34, %if.then33 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !8003, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !8013, metadata !DIExpression()), !dbg !8018
  %idxprom36 = zext i32 %8 to i64, !dbg !8065
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom36, i32 3, !dbg !8067
  %9 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !8067
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 0, i32 0, !dbg !8068
  %10 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !8068
  %mode43 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 0, i32 2, !dbg !8069
  %bf.load44 = load i16, i16* %mode43, align 8, !dbg !8069
  %bf.cast = zext i16 %bf.load44 to i32, !dbg !8069
  %call45 = tail call i32 %10(%struct.rtx_def* %target.addr.0, i32 %bf.cast) #6, !dbg !8065
  %tobool46 = icmp eq i32 %call45, 0, !dbg !8065
  br i1 %tobool46, label %if.then47, label %if.end56, !dbg !8070

if.then47:                                        ; preds = %if.end35
  %bf.load53 = load i16, i16* %mode43, align 8, !dbg !8071
  %bf.cast54 = zext i16 %bf.load53 to i32, !dbg !8071
  %call55 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast54) #6, !dbg !8072
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call55, metadata !8013, metadata !DIExpression()), !dbg !8018
  br label %if.end56, !dbg !8073

if.end56:                                         ; preds = %if.end35, %if.then47
  %subtarget.0 = phi %struct.rtx_def* [ %target.addr.0, %if.end35 ], [ %call55, %if.then47 ], !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %subtarget.0, metadata !8013, metadata !DIExpression()), !dbg !8018
  %predicate61 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 2, i32 0, !dbg !8074
  %11 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate61, align 8, !dbg !8074
  %mode66 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 2, i32 2, !dbg !8076
  %bf.load67 = load i16, i16* %mode66, align 8, !dbg !8076
  %bf.cast68 = zext i16 %bf.load67 to i32, !dbg !8076
  %call69 = tail call i32 %11(%struct.rtx_def* %op2.addr.0, i32 %bf.cast68) #6, !dbg !8077
  %tobool70 = icmp eq i32 %call69, 0, !dbg !8077
  br i1 %tobool70, label %if.then71, label %if.end80, !dbg !8078

if.then71:                                        ; preds = %if.end56
  %bf.load77 = load i16, i16* %mode66, align 8, !dbg !8079
  %bf.cast78 = zext i16 %bf.load77 to i32, !dbg !8079
  %call79 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast78, %struct.rtx_def* %op2.addr.0) #6, !dbg !8080
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call79, metadata !8008, metadata !DIExpression()), !dbg !8018
  br label %if.end80, !dbg !8081

if.end80:                                         ; preds = %if.end56, %if.then71
  %op2.addr.1 = phi %struct.rtx_def* [ %op2.addr.0, %if.end56 ], [ %call79, %if.then71 ], !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2.addr.1, metadata !8008, metadata !DIExpression()), !dbg !8018
  %predicate85 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 3, i32 0, !dbg !8082
  %12 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate85, align 8, !dbg !8082
  %mode90 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 3, i32 2, !dbg !8084
  %bf.load91 = load i16, i16* %mode90, align 8, !dbg !8084
  %bf.cast92 = zext i16 %bf.load91 to i32, !dbg !8084
  %call93 = tail call i32 %12(%struct.rtx_def* %op3.addr.0, i32 %bf.cast92) #6, !dbg !8085
  %tobool94 = icmp eq i32 %call93, 0, !dbg !8085
  br i1 %tobool94, label %if.then95, label %if.end104, !dbg !8086

if.then95:                                        ; preds = %if.end80
  %bf.load101 = load i16, i16* %mode90, align 8, !dbg !8087
  %bf.cast102 = zext i16 %bf.load101 to i32, !dbg !8087
  %call103 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast102, %struct.rtx_def* %op3.addr.0) #6, !dbg !8088
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call103, metadata !8009, metadata !DIExpression()), !dbg !8018
  br label %if.end104, !dbg !8089

if.end104:                                        ; preds = %if.end80, %if.then95
  %op3.addr.1 = phi %struct.rtx_def* [ %op3.addr.0, %if.end80 ], [ %call103, %if.then95 ], !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op3.addr.1, metadata !8009, metadata !DIExpression()), !dbg !8018
  %tobool105 = icmp eq i32 %unsignedp, 0, !dbg !8090
  br i1 %tobool105, label %cond.end, label %cond.true, !dbg !8090

cond.true:                                        ; preds = %if.end104
  %call106 = tail call i32 @unsigned_condition(i32 %code.addr.3) #6, !dbg !8091
  br label %cond.end, !dbg !8090

cond.end:                                         ; preds = %if.end104, %cond.true
  %cond = phi i32 [ %call106, %cond.true ], [ %code.addr.3, %if.end104 ], !dbg !8090
  call void @llvm.dbg.value(metadata i32 %cond, metadata !8004, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i32 %6, metadata !8007, metadata !DIExpression()), !dbg !8018
  %call107 = tail call %struct.rtx_def* @simplify_gen_relational(i32 %cond, i32 0, i32 %6, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.2) #6, !dbg !8092
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call107, metadata !8014, metadata !DIExpression()), !dbg !8018
  store %struct.rtx_def* %call107, %struct.rtx_def** %comparison, align 8, !dbg !8093
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call107, i64 0, i32 0, !dbg !8094
  %bf.load108 = load i32, i32* %.cast, align 8, !dbg !8094
  %bf.clear109 = and i32 %bf.load108, 65535, !dbg !8094
  %idxprom110 = zext i32 %bf.clear109 to i64, !dbg !8094
  %arrayidx111 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom110, !dbg !8094
  %13 = load i32, i32* %arrayidx111, align 4, !dbg !8094
  %cmp112 = icmp ult i32 %13, 2, !dbg !8094
  br i1 %cmp112, label %if.end115, label %cleanup, !dbg !8096

if.end115:                                        ; preds = %cond.end
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call107, i64 0, i32 0, !dbg !8096
  tail call void @do_pending_stack_adjust() #6, !dbg !8097
  tail call void @start_sequence() #6, !dbg !8098
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call107, metadata !8014, metadata !DIExpression()), !dbg !8018
  %arrayidx116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call107, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8099
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**, !dbg !8099
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8099
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call107, metadata !8014, metadata !DIExpression()), !dbg !8018
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call107, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8100
  %rt_rtx120 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !8100
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx120, align 8, !dbg !8100
  %bf.load121 = load i32, i32* %14, align 8, !dbg !8101
  %bf.clear122 = and i32 %bf.load121, 65535, !dbg !8101
  call void @llvm.dbg.value(metadata i32* %cmode.addr, metadata !8007, metadata !DIExpression(DW_OP_deref)), !dbg !8018
  call void @llvm.dbg.value(metadata %struct.rtx_def** %comparison, metadata !8014, metadata !DIExpression(DW_OP_deref)), !dbg !8018
  call fastcc void @prepare_cmp_insn(%struct.rtx_def* %15, %struct.rtx_def* %17, i32 %bf.clear122, %struct.rtx_def* null, i32 %unsignedp, i32 2, %struct.rtx_def** nonnull %comparison, i32* nonnull %cmode.addr) #8, !dbg !8102
  %18 = load %struct.rtx_def*, %struct.rtx_def** %comparison, align 8, !dbg !8103
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !8014, metadata !DIExpression()), !dbg !8018
  %tobool123 = icmp eq %struct.rtx_def* %18, null, !dbg !8103
  br i1 %tobool123, label %if.end129, label %if.else125, !dbg !8105

if.else125:                                       ; preds = %if.end115
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom36, i32 2, !dbg !8106
  %19 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !8106
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !8014, metadata !DIExpression()), !dbg !8018
  %call128 = call %struct.rtx_def* (%struct.rtx_def*, ...) %19(%struct.rtx_def* %subtarget.0, %struct.rtx_def* nonnull %18, %struct.rtx_def* %op2.addr.1, %struct.rtx_def* %op3.addr.1) #6, !dbg !8106
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call128, metadata !8015, metadata !DIExpression()), !dbg !8018
  br label %if.end129

if.end129:                                        ; preds = %if.end115, %if.else125
  %insn.0 = phi %struct.rtx_def* [ %call128, %if.else125 ], [ null, %if.end115 ], !dbg !8107
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !8015, metadata !DIExpression()), !dbg !8018
  %cmp130 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !8108
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !8110

if.then132:                                       ; preds = %if.end129
  call void @end_sequence() #6, !dbg !8111
  br label %cleanup, !dbg !8113

if.end133:                                        ; preds = %if.end129
  %call134 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %insn.0) #6, !dbg !8114
  %call135 = call %struct.rtx_def* @get_insns() #6, !dbg !8115
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call135, metadata !8015, metadata !DIExpression()), !dbg !8018
  call void @end_sequence() #6, !dbg !8116
  %call136 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call135) #6, !dbg !8117
  %cmp137 = icmp eq %struct.rtx_def* %subtarget.0, %target.addr.0, !dbg !8118
  br i1 %cmp137, label %cleanup, label %if.then139, !dbg !8120

if.then139:                                       ; preds = %if.end133
  call void @convert_move(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %subtarget.0, i32 0) #6, !dbg !8121
  br label %cleanup, !dbg !8121

cleanup:                                          ; preds = %if.end133, %if.then139, %cond.end, %if.end27, %if.then132
  %retval.0 = phi %struct.rtx_def* [ null, %if.then132 ], [ null, %if.end27 ], [ null, %cond.end ], [ %target.addr.0, %if.then139 ], [ %target.addr.0, %if.end133 ], !dbg !8018
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !8122
  ret %struct.rtx_def* %retval.0, !dbg !8122
}

declare dso_local i32 @reversed_comparison_code_parts(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_gen_relational(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @do_pending_stack_adjust() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @can_conditionally_move_p(i32 %mode) local_unnamed_addr #4 !dbg !8123 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8127, metadata !DIExpression()), !dbg !8128
  %idxprom = zext i32 %mode to i64, !dbg !8129
  %arrayidx = getelementptr inbounds [87 x i32], [87 x i32]* @movcc_gen_code, i64 0, i64 %idxprom, !dbg !8129
  %0 = load i32, i32* %arrayidx, align 4, !dbg !8129
  %cmp = icmp ne i32 %0, 2956, !dbg !8131
  %. = zext i1 %cmp to i32, !dbg !8128
  ret i32 %., !dbg !8132
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_conditional_add(%struct.rtx_def* %target, i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %cmode, %struct.rtx_def* %op2, %struct.rtx_def* %op3, i32 %mode, i32 %unsignedp) local_unnamed_addr #4 !dbg !8133 {
entry:
  %cmode.addr = alloca i32, align 4
  %comparison = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !8135, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata i32 %code, metadata !8136, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !8137, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !8138, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata i32 %cmode, metadata !8139, metadata !DIExpression()), !dbg !8150
  store i32 %cmode, i32* %cmode.addr, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2, metadata !8140, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op3, metadata !8141, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8142, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8143, metadata !DIExpression()), !dbg !8150
  %0 = bitcast %struct.rtx_def** %comparison to i8*, !dbg !8151
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !8151
  %call = tail call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %op0, %struct.rtx_def* %op1) #6, !dbg !8152
  %tobool = icmp eq i8 %call, 0, !dbg !8152
  br i1 %tobool, label %if.end, label %if.then, !dbg !8154

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !8144, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !8137, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !8138, metadata !DIExpression()), !dbg !8150
  %call1 = tail call i32 @swap_condition(i32 %code) #6, !dbg !8155
  call void @llvm.dbg.value(metadata i32 %call1, metadata !8136, metadata !DIExpression()), !dbg !8150
  br label %if.end, !dbg !8157

if.end:                                           ; preds = %entry, %if.then
  %op1.addr.0 = phi %struct.rtx_def* [ %op0, %if.then ], [ %op1, %entry ]
  %op0.addr.0 = phi %struct.rtx_def* [ %op1, %if.then ], [ %op0, %entry ]
  %code.addr.0 = phi i32 [ %call1, %if.then ], [ %code, %entry ]
  call void @llvm.dbg.value(metadata i32 %code.addr.0, metadata !8136, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.addr.0, metadata !8137, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.0, metadata !8138, metadata !DIExpression()), !dbg !8150
  %cmp = icmp eq i32 %code.addr.0, 85, !dbg !8158
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !8160
  %cmp2 = icmp eq %struct.rtx_def* %op1.addr.0, %1, !dbg !8161
  %or.cond = and i1 %cmp, %cmp2, !dbg !8162
  br i1 %or.cond, label %if.then3, label %if.else, !dbg !8162

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 84, metadata !8136, metadata !DIExpression()), !dbg !8150
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8163
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !8138, metadata !DIExpression()), !dbg !8150
  br label %if.end9, !dbg !8164

if.else:                                          ; preds = %if.end
  %cmp4 = icmp eq i32 %code.addr.0, 83, !dbg !8165
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !8167
  %cmp6 = icmp eq %struct.rtx_def* %op1.addr.0, %3, !dbg !8168
  %or.cond1 = and i1 %cmp4, %cmp6, !dbg !8169
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8169
  %op1.addr.1 = select i1 %or.cond1, %struct.rtx_def* %4, %struct.rtx_def* %op1.addr.0, !dbg !8169
  %code.addr.1 = select i1 %or.cond1, i32 82, i32 %code.addr.0, !dbg !8169
  br label %if.end9, !dbg !8169

if.end9:                                          ; preds = %if.else, %if.then3
  %op1.addr.2 = phi %struct.rtx_def* [ %2, %if.then3 ], [ %op1.addr.1, %if.else ], !dbg !8170
  %code.addr.2 = phi i32 [ 84, %if.then3 ], [ %code.addr.1, %if.else ], !dbg !8170
  call void @llvm.dbg.value(metadata i32 %code.addr.2, metadata !8136, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.addr.2, metadata !8138, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata i32 %cmode, metadata !8139, metadata !DIExpression()), !dbg !8150
  %cmp10 = icmp eq i32 %cmode, 0, !dbg !8171
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !8173

if.then11:                                        ; preds = %if.end9
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.addr.0, i64 0, i32 0, !dbg !8174
  %bf.load = load i32, i32* %5, align 8, !dbg !8174
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8174
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8174
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !8139, metadata !DIExpression()), !dbg !8150
  store i32 %bf.clear, i32* %cmode.addr, align 4, !dbg !8175
  br label %if.end12, !dbg !8176

if.end12:                                         ; preds = %if.then11, %if.end9
  %6 = phi i32 [ %bf.clear, %if.then11 ], [ %cmode, %if.end9 ]
  %call13 = tail call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %op2, %struct.rtx_def* %op3) #6, !dbg !8177
  %tobool14 = icmp eq i8 %call13, 0, !dbg !8177
  br i1 %tobool14, label %if.end20, label %land.lhs.true15, !dbg !8179

land.lhs.true15:                                  ; preds = %if.end12
  %call16 = tail call i32 @reversed_comparison_code_parts(i32 %code.addr.2, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.2, %struct.rtx_def* null) #6, !dbg !8180
  call void @llvm.dbg.value(metadata i32 %call16, metadata !8149, metadata !DIExpression()), !dbg !8150
  %cmp17 = icmp ne i32 %call16, 0, !dbg !8181
  %spec.select = select i1 %cmp17, %struct.rtx_def* %op2, %struct.rtx_def* %op3, !dbg !8182
  %spec.select2 = select i1 %cmp17, %struct.rtx_def* %op3, %struct.rtx_def* %op2, !dbg !8182
  %spec.select3 = select i1 %cmp17, i32 %call16, i32 %code.addr.2, !dbg !8182
  br label %if.end20, !dbg !8182

if.end20:                                         ; preds = %if.end12, %land.lhs.true15
  %op3.addr.0 = phi %struct.rtx_def* [ %op3, %if.end12 ], [ %spec.select, %land.lhs.true15 ]
  %op2.addr.0 = phi %struct.rtx_def* [ %op2, %if.end12 ], [ %spec.select2, %land.lhs.true15 ]
  %code.addr.3 = phi i32 [ %code.addr.2, %if.end12 ], [ %spec.select3, %land.lhs.true15 ], !dbg !8150
  call void @llvm.dbg.value(metadata i32 %code.addr.3, metadata !8136, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2.addr.0, metadata !8140, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op3.addr.0, metadata !8141, metadata !DIExpression()), !dbg !8150
  %cmp21 = icmp eq i32 %mode, 0, !dbg !8183
  br i1 %cmp21, label %if.then23, label %if.end27, !dbg !8185

if.then23:                                        ; preds = %if.end20
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op2.addr.0, i64 0, i32 0, !dbg !8186
  %bf.load24 = load i32, i32* %7, align 8, !dbg !8186
  %bf.lshr25 = lshr i32 %bf.load24, 16, !dbg !8186
  %bf.clear26 = and i32 %bf.lshr25, 255, !dbg !8186
  call void @llvm.dbg.value(metadata i32 %bf.clear26, metadata !8142, metadata !DIExpression()), !dbg !8150
  br label %if.end27, !dbg !8187

if.end27:                                         ; preds = %if.then23, %if.end20
  %mode.addr.0 = phi i32 [ %bf.clear26, %if.then23 ], [ %mode, %if.end20 ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.0, metadata !8142, metadata !DIExpression()), !dbg !8150
  %idxprom = sext i32 %mode.addr.0 to i64, !dbg !8188
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 120, i32 4, i64 %idxprom, i32 0, !dbg !8189
  %8 = load i32, i32* %insn_code, align 4, !dbg !8189
  call void @llvm.dbg.value(metadata i32 %8, metadata !8148, metadata !DIExpression()), !dbg !8150
  %cmp28 = icmp eq i32 %8, 2956, !dbg !8190
  br i1 %cmp28, label %cleanup, label %if.end31, !dbg !8192

if.end31:                                         ; preds = %if.end27
  %tobool32 = icmp eq %struct.rtx_def* %target, null, !dbg !8193
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !8195

if.then33:                                        ; preds = %if.end31
  %call34 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.addr.0) #6, !dbg !8196
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !8135, metadata !DIExpression()), !dbg !8150
  br label %if.end35, !dbg !8197

if.end35:                                         ; preds = %if.end31, %if.then33
  %target.addr.0 = phi %struct.rtx_def* [ %target, %if.end31 ], [ %call34, %if.then33 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !8135, metadata !DIExpression()), !dbg !8150
  %idxprom36 = zext i32 %8 to i64, !dbg !8198
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom36, i32 3, !dbg !8200
  %9 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !8200
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 0, i32 0, !dbg !8201
  %10 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !8201
  %mode43 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 0, i32 2, !dbg !8202
  %bf.load44 = load i16, i16* %mode43, align 8, !dbg !8202
  %bf.cast = zext i16 %bf.load44 to i32, !dbg !8202
  %call45 = tail call i32 %10(%struct.rtx_def* %target.addr.0, i32 %bf.cast) #6, !dbg !8198
  %tobool46 = icmp eq i32 %call45, 0, !dbg !8198
  br i1 %tobool46, label %if.then47, label %if.end57, !dbg !8203

if.then47:                                        ; preds = %if.end35
  %bf.load53 = load i16, i16* %mode43, align 8, !dbg !8204
  %bf.cast54 = zext i16 %bf.load53 to i32, !dbg !8204
  %call55 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast54) #6, !dbg !8205
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call55, metadata !8145, metadata !DIExpression()), !dbg !8150
  br label %if.end57, !dbg !8206

if.end57:                                         ; preds = %if.end35, %if.then47
  %subtarget.0 = phi %struct.rtx_def* [ %call55, %if.then47 ], [ %target.addr.0, %if.end35 ], !dbg !8207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %subtarget.0, metadata !8145, metadata !DIExpression()), !dbg !8150
  %predicate62 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 2, i32 0, !dbg !8208
  %11 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate62, align 8, !dbg !8208
  %mode67 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 2, i32 2, !dbg !8210
  %bf.load68 = load i16, i16* %mode67, align 8, !dbg !8210
  %bf.cast69 = zext i16 %bf.load68 to i32, !dbg !8210
  %call70 = tail call i32 %11(%struct.rtx_def* %op2.addr.0, i32 %bf.cast69) #6, !dbg !8211
  %tobool71 = icmp eq i32 %call70, 0, !dbg !8211
  br i1 %tobool71, label %if.then72, label %if.end81, !dbg !8212

if.then72:                                        ; preds = %if.end57
  %bf.load78 = load i16, i16* %mode67, align 8, !dbg !8213
  %bf.cast79 = zext i16 %bf.load78 to i32, !dbg !8213
  %call80 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast79, %struct.rtx_def* %op2.addr.0) #6, !dbg !8214
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call80, metadata !8140, metadata !DIExpression()), !dbg !8150
  br label %if.end81, !dbg !8215

if.end81:                                         ; preds = %if.end57, %if.then72
  %op2.addr.1 = phi %struct.rtx_def* [ %op2.addr.0, %if.end57 ], [ %call80, %if.then72 ], !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2.addr.1, metadata !8140, metadata !DIExpression()), !dbg !8150
  %predicate86 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 3, i32 0, !dbg !8216
  %12 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate86, align 8, !dbg !8216
  %mode91 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 3, i32 2, !dbg !8218
  %bf.load92 = load i16, i16* %mode91, align 8, !dbg !8218
  %bf.cast93 = zext i16 %bf.load92 to i32, !dbg !8218
  %call94 = tail call i32 %12(%struct.rtx_def* %op3.addr.0, i32 %bf.cast93) #6, !dbg !8219
  %tobool95 = icmp eq i32 %call94, 0, !dbg !8219
  br i1 %tobool95, label %if.then96, label %if.end105, !dbg !8220

if.then96:                                        ; preds = %if.end81
  %bf.load102 = load i16, i16* %mode91, align 8, !dbg !8221
  %bf.cast103 = zext i16 %bf.load102 to i32, !dbg !8221
  %call104 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast103, %struct.rtx_def* %op3.addr.0) #6, !dbg !8222
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call104, metadata !8141, metadata !DIExpression()), !dbg !8150
  br label %if.end105, !dbg !8223

if.end105:                                        ; preds = %if.end81, %if.then96
  %op3.addr.1 = phi %struct.rtx_def* [ %op3.addr.0, %if.end81 ], [ %call104, %if.then96 ], !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op3.addr.1, metadata !8141, metadata !DIExpression()), !dbg !8150
  %tobool106 = icmp eq i32 %unsignedp, 0, !dbg !8224
  br i1 %tobool106, label %cond.end, label %cond.true, !dbg !8224

cond.true:                                        ; preds = %if.end105
  %call107 = tail call i32 @unsigned_condition(i32 %code.addr.3) #6, !dbg !8225
  br label %cond.end, !dbg !8224

cond.end:                                         ; preds = %if.end105, %cond.true
  %cond = phi i32 [ %call107, %cond.true ], [ %code.addr.3, %if.end105 ], !dbg !8224
  call void @llvm.dbg.value(metadata i32 %cond, metadata !8136, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata i32 %6, metadata !8139, metadata !DIExpression()), !dbg !8150
  %call108 = tail call %struct.rtx_def* @simplify_gen_relational(i32 %cond, i32 0, i32 %6, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.2) #6, !dbg !8226
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call108, metadata !8146, metadata !DIExpression()), !dbg !8150
  store %struct.rtx_def* %call108, %struct.rtx_def** %comparison, align 8, !dbg !8227
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call108, i64 0, i32 0, !dbg !8228
  %bf.load109 = load i32, i32* %.cast, align 8, !dbg !8228
  %bf.clear110 = and i32 %bf.load109, 65535, !dbg !8228
  %idxprom111 = zext i32 %bf.clear110 to i64, !dbg !8228
  %arrayidx112 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom111, !dbg !8228
  %13 = load i32, i32* %arrayidx112, align 4, !dbg !8228
  %cmp113 = icmp ult i32 %13, 2, !dbg !8228
  br i1 %cmp113, label %if.end116, label %cleanup, !dbg !8230

if.end116:                                        ; preds = %cond.end
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call108, i64 0, i32 0, !dbg !8230
  tail call void @do_pending_stack_adjust() #6, !dbg !8231
  tail call void @start_sequence() #6, !dbg !8232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call108, metadata !8146, metadata !DIExpression()), !dbg !8150
  %arrayidx117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call108, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8233
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**, !dbg !8233
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8233
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call108, metadata !8146, metadata !DIExpression()), !dbg !8150
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call108, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8234
  %rt_rtx121 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !8234
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx121, align 8, !dbg !8234
  %bf.load122 = load i32, i32* %14, align 8, !dbg !8235
  %bf.clear123 = and i32 %bf.load122, 65535, !dbg !8235
  call void @llvm.dbg.value(metadata i32* %cmode.addr, metadata !8139, metadata !DIExpression(DW_OP_deref)), !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def** %comparison, metadata !8146, metadata !DIExpression(DW_OP_deref)), !dbg !8150
  call fastcc void @prepare_cmp_insn(%struct.rtx_def* %15, %struct.rtx_def* %17, i32 %bf.clear123, %struct.rtx_def* null, i32 %unsignedp, i32 2, %struct.rtx_def** nonnull %comparison, i32* nonnull %cmode.addr) #8, !dbg !8236
  %18 = load %struct.rtx_def*, %struct.rtx_def** %comparison, align 8, !dbg !8237
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !8146, metadata !DIExpression()), !dbg !8150
  %tobool124 = icmp eq %struct.rtx_def* %18, null, !dbg !8237
  br i1 %tobool124, label %if.end130, label %if.else126, !dbg !8239

if.else126:                                       ; preds = %if.end116
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom36, i32 2, !dbg !8240
  %19 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !8240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !8146, metadata !DIExpression()), !dbg !8150
  %call129 = call %struct.rtx_def* (%struct.rtx_def*, ...) %19(%struct.rtx_def* %subtarget.0, %struct.rtx_def* nonnull %18, %struct.rtx_def* %op2.addr.1, %struct.rtx_def* %op3.addr.1) #6, !dbg !8240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call129, metadata !8147, metadata !DIExpression()), !dbg !8150
  br label %if.end130

if.end130:                                        ; preds = %if.end116, %if.else126
  %insn.0 = phi %struct.rtx_def* [ %call129, %if.else126 ], [ null, %if.end116 ], !dbg !8241
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !8147, metadata !DIExpression()), !dbg !8150
  %cmp131 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !8242
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !8244

if.then133:                                       ; preds = %if.end130
  call void @end_sequence() #6, !dbg !8245
  br label %cleanup, !dbg !8247

if.end134:                                        ; preds = %if.end130
  %call135 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %insn.0) #6, !dbg !8248
  %call136 = call %struct.rtx_def* @get_insns() #6, !dbg !8249
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call136, metadata !8147, metadata !DIExpression()), !dbg !8150
  call void @end_sequence() #6, !dbg !8250
  %call137 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call136) #6, !dbg !8251
  %cmp138 = icmp eq %struct.rtx_def* %subtarget.0, %target.addr.0, !dbg !8252
  br i1 %cmp138, label %cleanup, label %if.then140, !dbg !8254

if.then140:                                       ; preds = %if.end134
  call void @convert_move(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %subtarget.0, i32 0) #6, !dbg !8255
  br label %cleanup, !dbg !8255

cleanup:                                          ; preds = %if.end134, %if.then140, %cond.end, %if.end27, %if.then133
  %retval.0 = phi %struct.rtx_def* [ null, %if.then133 ], [ null, %if.end27 ], [ null, %cond.end ], [ %target.addr.0, %if.then140 ], [ %target.addr.0, %if.end134 ], !dbg !8150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !8256
  ret %struct.rtx_def* %retval.0, !dbg !8256
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) local_unnamed_addr #4 !dbg !8257 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !8261, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !8262, metadata !DIExpression()), !dbg !8264
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !8265
  %bf.load = load i32, i32* %0, align 8, !dbg !8265
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8265
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8265
  %idxprom = zext i32 %bf.clear to i64, !dbg !8265
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12, i32 4, i64 %idxprom, i32 0, !dbg !8266
  %1 = load i32, i32* %insn_code, align 4, !dbg !8266
  call void @llvm.dbg.value(metadata i32 %1, metadata !8263, metadata !DIExpression()), !dbg !8264
  %idxprom1 = sext i32 %1 to i64, !dbg !8267
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 3, !dbg !8267
  %2 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !8267
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 0, !dbg !8267
  %3 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !8267
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 2, !dbg !8267
  %bf.load8 = load i16, i16* %mode, align 8, !dbg !8267
  %bf.cast = zext i16 %bf.load8 to i32, !dbg !8267
  %call = tail call i32 %3(%struct.rtx_def* %x, i32 %bf.cast) #6, !dbg !8267
  %tobool = icmp eq i32 %call, 0, !dbg !8267
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8267

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4760, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8267
  br label %cond.end, !dbg !8267

cond.end:                                         ; preds = %entry, %cond.true
  %predicate13 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 0, !dbg !8268
  %4 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate13, align 8, !dbg !8268
  %mode18 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 2, !dbg !8268
  %bf.load19 = load i16, i16* %mode18, align 8, !dbg !8268
  %bf.cast20 = zext i16 %bf.load19 to i32, !dbg !8268
  %call21 = tail call i32 %4(%struct.rtx_def* %x, i32 %bf.cast20) #6, !dbg !8268
  %tobool22 = icmp eq i32 %call21, 0, !dbg !8268
  br i1 %tobool22, label %cond.true23, label %cond.end25, !dbg !8268

cond.true23:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4762, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8268
  br label %cond.end25, !dbg !8268

cond.end25:                                       ; preds = %cond.end, %cond.true23
  %predicate31 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, i32 0, !dbg !8269
  %5 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate31, align 8, !dbg !8269
  %mode36 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, i32 2, !dbg !8269
  %bf.load37 = load i16, i16* %mode36, align 8, !dbg !8269
  %bf.cast38 = zext i16 %bf.load37 to i32, !dbg !8269
  %call39 = tail call i32 %5(%struct.rtx_def* %y, i32 %bf.cast38) #6, !dbg !8269
  %tobool40 = icmp eq i32 %call39, 0, !dbg !8269
  br i1 %tobool40, label %cond.true41, label %cond.end43, !dbg !8269

cond.true41:                                      ; preds = %cond.end25
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4764, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8269
  br label %cond.end43, !dbg !8269

cond.end43:                                       ; preds = %cond.end25, %cond.true41
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 2, !dbg !8270
  %6 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !8270
  %call47 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %6(%struct.rtx_def* %x, %struct.rtx_def* %x, %struct.rtx_def* %y) #6, !dbg !8270
  ret %struct.rtx_def* %call47, !dbg !8271
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_add3_insn(%struct.rtx_def* %r0, %struct.rtx_def* %r1, %struct.rtx_def* %c) local_unnamed_addr #4 !dbg !8272 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %r0, metadata !8274, metadata !DIExpression()), !dbg !8278
  call void @llvm.dbg.value(metadata %struct.rtx_def* %r1, metadata !8275, metadata !DIExpression()), !dbg !8278
  call void @llvm.dbg.value(metadata %struct.rtx_def* %c, metadata !8276, metadata !DIExpression()), !dbg !8278
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %r0, i64 0, i32 0, !dbg !8279
  %bf.load = load i32, i32* %0, align 8, !dbg !8279
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8279
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8279
  %idxprom = zext i32 %bf.clear to i64, !dbg !8279
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12, i32 4, i64 %idxprom, i32 0, !dbg !8280
  %1 = load i32, i32* %insn_code, align 4, !dbg !8280
  call void @llvm.dbg.value(metadata i32 %1, metadata !8277, metadata !DIExpression()), !dbg !8278
  %cmp = icmp eq i32 %1, 2956, !dbg !8281
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !8283

lor.lhs.false:                                    ; preds = %entry
  %idxprom1 = sext i32 %1 to i64, !dbg !8284
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 3, !dbg !8285
  %2 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !8285
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 0, !dbg !8286
  %3 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !8286
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 2, !dbg !8287
  %bf.load8 = load i16, i16* %mode, align 8, !dbg !8287
  %bf.cast = zext i16 %bf.load8 to i32, !dbg !8287
  %call = tail call i32 %3(%struct.rtx_def* %r0, i32 %bf.cast) #6, !dbg !8284
  %tobool = icmp eq i32 %call, 0, !dbg !8284
  br i1 %tobool, label %cleanup, label %lor.lhs.false9, !dbg !8288

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %predicate14 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 0, !dbg !8289
  %4 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate14, align 8, !dbg !8289
  %mode19 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 2, !dbg !8290
  %bf.load20 = load i16, i16* %mode19, align 8, !dbg !8290
  %bf.cast21 = zext i16 %bf.load20 to i32, !dbg !8290
  %call22 = tail call i32 %4(%struct.rtx_def* %r1, i32 %bf.cast21) #6, !dbg !8291
  %tobool23 = icmp eq i32 %call22, 0, !dbg !8291
  br i1 %tobool23, label %cleanup, label %lor.lhs.false24, !dbg !8292

lor.lhs.false24:                                  ; preds = %lor.lhs.false9
  %predicate29 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, i32 0, !dbg !8293
  %5 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate29, align 8, !dbg !8293
  %mode34 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, i32 2, !dbg !8294
  %bf.load35 = load i16, i16* %mode34, align 8, !dbg !8294
  %bf.cast36 = zext i16 %bf.load35 to i32, !dbg !8294
  %call37 = tail call i32 %5(%struct.rtx_def* %c, i32 %bf.cast36) #6, !dbg !8295
  %tobool38 = icmp eq i32 %call37, 0, !dbg !8295
  br i1 %tobool38, label %cleanup, label %if.end, !dbg !8296

if.end:                                           ; preds = %lor.lhs.false24
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 2, !dbg !8297
  %6 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !8297
  %call41 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %6(%struct.rtx_def* %r0, %struct.rtx_def* %r1, %struct.rtx_def* %c) #6, !dbg !8297
  br label %cleanup, !dbg !8298

cleanup:                                          ; preds = %lor.lhs.false24, %lor.lhs.false9, %lor.lhs.false, %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call41, %if.end ], [ null, %lor.lhs.false24 ], [ null, %lor.lhs.false9 ], [ null, %lor.lhs.false ], [ null, %entry ], !dbg !8278
  ret %struct.rtx_def* %retval.0, !dbg !8299
}

; Function Attrs: nounwind uwtable
define dso_local i32 @have_add2_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) local_unnamed_addr #4 !dbg !8300 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !8304, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !8305, metadata !DIExpression()), !dbg !8307
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !8308
  %bf.load = load i32, i32* %0, align 8, !dbg !8308
  %bf.clear = and i32 %bf.load, 16711680, !dbg !8308
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !8308
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !8308

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4794, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8308
  %bf.load1.pre = load i32, i32* %0, align 8, !dbg !8309
  br label %cond.end, !dbg !8308

cond.end:                                         ; preds = %entry, %cond.true
  %bf.load1 = phi i32 [ %bf.load, %entry ], [ %bf.load1.pre, %cond.true ], !dbg !8309
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !8309
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !8309
  %idxprom = zext i32 %bf.clear3 to i64, !dbg !8309
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12, i32 4, i64 %idxprom, i32 0, !dbg !8310
  %1 = load i32, i32* %insn_code, align 4, !dbg !8310
  call void @llvm.dbg.value(metadata i32 %1, metadata !8306, metadata !DIExpression()), !dbg !8307
  %cmp4 = icmp eq i32 %1, 2956, !dbg !8311
  br i1 %cmp4, label %cleanup, label %if.end, !dbg !8313

if.end:                                           ; preds = %cond.end
  %idxprom5 = sext i32 %1 to i64, !dbg !8314
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom5, i32 3, !dbg !8316
  %2 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !8316
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 0, !dbg !8317
  %3 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !8317
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 2, !dbg !8318
  %bf.load12 = load i16, i16* %mode, align 8, !dbg !8318
  %bf.cast = zext i16 %bf.load12 to i32, !dbg !8318
  %call = tail call i32 %3(%struct.rtx_def* %x, i32 %bf.cast) #6, !dbg !8314
  %tobool = icmp eq i32 %call, 0, !dbg !8314
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !8319

lor.lhs.false:                                    ; preds = %if.end
  %predicate17 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 0, !dbg !8320
  %4 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate17, align 8, !dbg !8320
  %mode22 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 2, !dbg !8321
  %bf.load23 = load i16, i16* %mode22, align 8, !dbg !8321
  %bf.cast24 = zext i16 %bf.load23 to i32, !dbg !8321
  %call25 = tail call i32 %4(%struct.rtx_def* %x, i32 %bf.cast24) #6, !dbg !8322
  %tobool26 = icmp eq i32 %call25, 0, !dbg !8322
  br i1 %tobool26, label %cleanup, label %lor.lhs.false27, !dbg !8323

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %predicate32 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, i32 0, !dbg !8324
  %5 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate32, align 8, !dbg !8324
  %mode37 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, i32 2, !dbg !8325
  %bf.load38 = load i16, i16* %mode37, align 8, !dbg !8325
  %bf.cast39 = zext i16 %bf.load38 to i32, !dbg !8325
  %call40 = tail call i32 %5(%struct.rtx_def* %y, i32 %bf.cast39) #6, !dbg !8326
  %tobool41 = icmp ne i32 %call40, 0, !dbg !8326
  %spec.select = zext i1 %tobool41 to i32, !dbg !8327
  ret i32 %spec.select, !dbg !8327

cleanup:                                          ; preds = %lor.lhs.false, %if.end, %cond.end
  ret i32 0, !dbg !8328
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_sub2_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) local_unnamed_addr #4 !dbg !8329 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !8331, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !8332, metadata !DIExpression()), !dbg !8334
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !8335
  %bf.load = load i32, i32* %0, align 8, !dbg !8335
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8335
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8335
  %idxprom = zext i32 %bf.clear to i64, !dbg !8335
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14, i32 4, i64 %idxprom, i32 0, !dbg !8336
  %1 = load i32, i32* %insn_code, align 4, !dbg !8336
  call void @llvm.dbg.value(metadata i32 %1, metadata !8333, metadata !DIExpression()), !dbg !8334
  %idxprom1 = sext i32 %1 to i64, !dbg !8337
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 3, !dbg !8337
  %2 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !8337
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 0, !dbg !8337
  %3 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !8337
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 2, !dbg !8337
  %bf.load8 = load i16, i16* %mode, align 8, !dbg !8337
  %bf.cast = zext i16 %bf.load8 to i32, !dbg !8337
  %call = tail call i32 %3(%struct.rtx_def* %x, i32 %bf.cast) #6, !dbg !8337
  %tobool = icmp eq i32 %call, 0, !dbg !8337
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8337

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4820, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8337
  br label %cond.end, !dbg !8337

cond.end:                                         ; preds = %entry, %cond.true
  %predicate13 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 0, !dbg !8338
  %4 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate13, align 8, !dbg !8338
  %mode18 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 2, !dbg !8338
  %bf.load19 = load i16, i16* %mode18, align 8, !dbg !8338
  %bf.cast20 = zext i16 %bf.load19 to i32, !dbg !8338
  %call21 = tail call i32 %4(%struct.rtx_def* %x, i32 %bf.cast20) #6, !dbg !8338
  %tobool22 = icmp eq i32 %call21, 0, !dbg !8338
  br i1 %tobool22, label %cond.true23, label %cond.end25, !dbg !8338

cond.true23:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4822, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8338
  br label %cond.end25, !dbg !8338

cond.end25:                                       ; preds = %cond.end, %cond.true23
  %predicate31 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, i32 0, !dbg !8339
  %5 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate31, align 8, !dbg !8339
  %mode36 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, i32 2, !dbg !8339
  %bf.load37 = load i16, i16* %mode36, align 8, !dbg !8339
  %bf.cast38 = zext i16 %bf.load37 to i32, !dbg !8339
  %call39 = tail call i32 %5(%struct.rtx_def* %y, i32 %bf.cast38) #6, !dbg !8339
  %tobool40 = icmp eq i32 %call39, 0, !dbg !8339
  br i1 %tobool40, label %cond.true41, label %cond.end43, !dbg !8339

cond.true41:                                      ; preds = %cond.end25
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4824, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8339
  br label %cond.end43, !dbg !8339

cond.end43:                                       ; preds = %cond.end25, %cond.true41
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 2, !dbg !8340
  %6 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !8340
  %call47 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %6(%struct.rtx_def* %x, %struct.rtx_def* %x, %struct.rtx_def* %y) #6, !dbg !8340
  ret %struct.rtx_def* %call47, !dbg !8341
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_sub3_insn(%struct.rtx_def* %r0, %struct.rtx_def* %r1, %struct.rtx_def* %c) local_unnamed_addr #4 !dbg !8342 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %r0, metadata !8344, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata %struct.rtx_def* %r1, metadata !8345, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata %struct.rtx_def* %c, metadata !8346, metadata !DIExpression()), !dbg !8348
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %r0, i64 0, i32 0, !dbg !8349
  %bf.load = load i32, i32* %0, align 8, !dbg !8349
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8349
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8349
  %idxprom = zext i32 %bf.clear to i64, !dbg !8349
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14, i32 4, i64 %idxprom, i32 0, !dbg !8350
  %1 = load i32, i32* %insn_code, align 4, !dbg !8350
  call void @llvm.dbg.value(metadata i32 %1, metadata !8347, metadata !DIExpression()), !dbg !8348
  %cmp = icmp eq i32 %1, 2956, !dbg !8351
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !8353

lor.lhs.false:                                    ; preds = %entry
  %idxprom1 = sext i32 %1 to i64, !dbg !8354
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 3, !dbg !8355
  %2 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !8355
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 0, !dbg !8356
  %3 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !8356
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 2, !dbg !8357
  %bf.load8 = load i16, i16* %mode, align 8, !dbg !8357
  %bf.cast = zext i16 %bf.load8 to i32, !dbg !8357
  %call = tail call i32 %3(%struct.rtx_def* %r0, i32 %bf.cast) #6, !dbg !8354
  %tobool = icmp eq i32 %call, 0, !dbg !8354
  br i1 %tobool, label %cleanup, label %lor.lhs.false9, !dbg !8358

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %predicate14 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 0, !dbg !8359
  %4 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate14, align 8, !dbg !8359
  %mode19 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 2, !dbg !8360
  %bf.load20 = load i16, i16* %mode19, align 8, !dbg !8360
  %bf.cast21 = zext i16 %bf.load20 to i32, !dbg !8360
  %call22 = tail call i32 %4(%struct.rtx_def* %r1, i32 %bf.cast21) #6, !dbg !8361
  %tobool23 = icmp eq i32 %call22, 0, !dbg !8361
  br i1 %tobool23, label %cleanup, label %lor.lhs.false24, !dbg !8362

lor.lhs.false24:                                  ; preds = %lor.lhs.false9
  %predicate29 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, i32 0, !dbg !8363
  %5 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate29, align 8, !dbg !8363
  %mode34 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, i32 2, !dbg !8364
  %bf.load35 = load i16, i16* %mode34, align 8, !dbg !8364
  %bf.cast36 = zext i16 %bf.load35 to i32, !dbg !8364
  %call37 = tail call i32 %5(%struct.rtx_def* %c, i32 %bf.cast36) #6, !dbg !8365
  %tobool38 = icmp eq i32 %call37, 0, !dbg !8365
  br i1 %tobool38, label %cleanup, label %if.end, !dbg !8366

if.end:                                           ; preds = %lor.lhs.false24
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 2, !dbg !8367
  %6 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !8367
  %call41 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %6(%struct.rtx_def* %r0, %struct.rtx_def* %r1, %struct.rtx_def* %c) #6, !dbg !8367
  br label %cleanup, !dbg !8368

cleanup:                                          ; preds = %lor.lhs.false24, %lor.lhs.false9, %lor.lhs.false, %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call41, %if.end ], [ null, %lor.lhs.false24 ], [ null, %lor.lhs.false9 ], [ null, %lor.lhs.false ], [ null, %entry ], !dbg !8348
  ret %struct.rtx_def* %retval.0, !dbg !8369
}

; Function Attrs: nounwind uwtable
define dso_local i32 @have_sub2_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) local_unnamed_addr #4 !dbg !8370 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !8372, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !8373, metadata !DIExpression()), !dbg !8375
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !8376
  %bf.load = load i32, i32* %0, align 8, !dbg !8376
  %bf.clear = and i32 %bf.load, 16711680, !dbg !8376
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !8376
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !8376

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4854, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8376
  %bf.load1.pre = load i32, i32* %0, align 8, !dbg !8377
  br label %cond.end, !dbg !8376

cond.end:                                         ; preds = %entry, %cond.true
  %bf.load1 = phi i32 [ %bf.load, %entry ], [ %bf.load1.pre, %cond.true ], !dbg !8377
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !8377
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !8377
  %idxprom = zext i32 %bf.clear3 to i64, !dbg !8377
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14, i32 4, i64 %idxprom, i32 0, !dbg !8378
  %1 = load i32, i32* %insn_code, align 4, !dbg !8378
  call void @llvm.dbg.value(metadata i32 %1, metadata !8374, metadata !DIExpression()), !dbg !8375
  %cmp4 = icmp eq i32 %1, 2956, !dbg !8379
  br i1 %cmp4, label %cleanup, label %if.end, !dbg !8381

if.end:                                           ; preds = %cond.end
  %idxprom5 = sext i32 %1 to i64, !dbg !8382
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom5, i32 3, !dbg !8384
  %2 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !8384
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 0, !dbg !8385
  %3 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !8385
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 2, !dbg !8386
  %bf.load12 = load i16, i16* %mode, align 8, !dbg !8386
  %bf.cast = zext i16 %bf.load12 to i32, !dbg !8386
  %call = tail call i32 %3(%struct.rtx_def* %x, i32 %bf.cast) #6, !dbg !8382
  %tobool = icmp eq i32 %call, 0, !dbg !8382
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !8387

lor.lhs.false:                                    ; preds = %if.end
  %predicate17 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 0, !dbg !8388
  %4 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate17, align 8, !dbg !8388
  %mode22 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 2, !dbg !8389
  %bf.load23 = load i16, i16* %mode22, align 8, !dbg !8389
  %bf.cast24 = zext i16 %bf.load23 to i32, !dbg !8389
  %call25 = tail call i32 %4(%struct.rtx_def* %x, i32 %bf.cast24) #6, !dbg !8390
  %tobool26 = icmp eq i32 %call25, 0, !dbg !8390
  br i1 %tobool26, label %cleanup, label %lor.lhs.false27, !dbg !8391

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %predicate32 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, i32 0, !dbg !8392
  %5 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate32, align 8, !dbg !8392
  %mode37 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, i32 2, !dbg !8393
  %bf.load38 = load i16, i16* %mode37, align 8, !dbg !8393
  %bf.cast39 = zext i16 %bf.load38 to i32, !dbg !8393
  %call40 = tail call i32 %5(%struct.rtx_def* %y, i32 %bf.cast39) #6, !dbg !8394
  %tobool41 = icmp ne i32 %call40, 0, !dbg !8394
  %spec.select = zext i1 %tobool41 to i32, !dbg !8395
  ret i32 %spec.select, !dbg !8395

cleanup:                                          ; preds = %lor.lhs.false, %if.end, %cond.end
  ret i32 0, !dbg !8396
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) local_unnamed_addr #4 !dbg !8397 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !8399, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !8400, metadata !DIExpression()), !dbg !8402
  tail call void @start_sequence() #6, !dbg !8403
  %call = tail call %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def* %x, %struct.rtx_def* %y) #6, !dbg !8404
  %call1 = tail call %struct.rtx_def* @get_insns() #6, !dbg !8405
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !8401, metadata !DIExpression()), !dbg !8402
  tail call void @end_sequence() #6, !dbg !8406
  ret %struct.rtx_def* %call1, !dbg !8407
}

declare dso_local %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @can_extend_p(i32 %to_mode, i32 %from_mode, i32 %unsignedp) local_unnamed_addr #4 !dbg !8408 {
entry:
  call void @llvm.dbg.value(metadata i32 %to_mode, metadata !8412, metadata !DIExpression()), !dbg !8416
  call void @llvm.dbg.value(metadata i32 %from_mode, metadata !8413, metadata !DIExpression()), !dbg !8416
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8414, metadata !DIExpression()), !dbg !8416
  %tobool = icmp eq i32 %unsignedp, 0, !dbg !8417
  %cond = select i1 %tobool, %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 0), %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 1), !dbg !8417
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %cond, metadata !8415, metadata !DIExpression()), !dbg !8416
  %idxprom = sext i32 %to_mode to i64, !dbg !8418
  %idxprom1 = sext i32 %from_mode to i64, !dbg !8418
  %insn_code = getelementptr inbounds %struct.convert_optab_d, %struct.convert_optab_d* %cond, i64 0, i32 3, i64 %idxprom, i64 %idxprom1, i32 0, !dbg !8419
  %0 = load i32, i32* %insn_code, align 4, !dbg !8419
  ret i32 %0, !dbg !8420
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_extend_insn(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 %mto, i32 %mfrom, i32 %unsignedp) local_unnamed_addr #4 !dbg !8421 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !8425, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !8426, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32 %mto, metadata !8427, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32 %mfrom, metadata !8428, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8429, metadata !DIExpression()), !dbg !8431
  %call = tail call i32 @can_extend_p(i32 %mto, i32 %mfrom, i32 %unsignedp) #8, !dbg !8432
  call void @llvm.dbg.value(metadata i32 %call, metadata !8430, metadata !DIExpression()), !dbg !8431
  %idxprom = zext i32 %call to i64, !dbg !8433
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 2, !dbg !8433
  %0 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !8433
  %call1 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %0(%struct.rtx_def* %x, %struct.rtx_def* %y) #6, !dbg !8433
  ret %struct.rtx_def* %call1, !dbg !8434
}

; Function Attrs: nounwind uwtable
define dso_local void @expand_float(%struct.rtx_def* %to, %struct.rtx_def* %from, i32 %unsignedp) local_unnamed_addr #4 !dbg !8435 {
entry:
  %offset = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !8439, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !8440, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8441, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8 0, metadata !8446, metadata !DIExpression()), !dbg !8473
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 0, !dbg !8474
  %bf.load = load i32, i32* %0, align 8, !dbg !8474
  %bf.clear = and i32 %bf.load, 16711680, !dbg !8474
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !8474
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !8474

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4981, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8474
  br label %cond.end, !dbg !8474

cond.end:                                         ; preds = %entry, %cond.true
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 0, !dbg !8475
  %bf.load1 = load i32, i32* %1, align 8, !dbg !8475
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !8475
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !8475
  call void @llvm.dbg.value(metadata i32 %bf.clear3, metadata !8444, metadata !DIExpression()), !dbg !8473
  %tobool = icmp eq i32 %unsignedp, 0, !dbg !8476
  br label %for.cond, !dbg !8477

for.cond:                                         ; preds = %for.inc70, %cond.end
  %can_do_signed.0 = phi i8 [ 0, %cond.end ], [ %can_do_signed.1.lcssa, %for.inc70 ], !dbg !8478
  %fmode.0 = phi i32 [ %bf.clear3, %cond.end ], [ %conv73, %for.inc70 ], !dbg !8479
  %target.0 = phi %struct.rtx_def* [ %to, %cond.end ], [ %target.1.lcssa, %for.inc70 ], !dbg !8480
  %from.addr.0 = phi %struct.rtx_def* [ %from, %cond.end ], [ %from.addr.1.lcssa, %for.inc70 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0, metadata !8440, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.0, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32 %fmode.0, metadata !8444, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8 %can_do_signed.0, metadata !8446, metadata !DIExpression()), !dbg !8473
  %cmp4 = icmp eq i32 %fmode.0, 0, !dbg !8481
  br i1 %cmp4, label %for.end74, label %for.body, !dbg !8482

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.0, i64 0, i32 0, !dbg !8483
  %bf.load5 = load i32, i32* %2, align 8, !dbg !8483
  %bf.lshr6 = lshr i32 %bf.load5, 16, !dbg !8483
  %bf.clear7 = and i32 %bf.lshr6, 255, !dbg !8483
  call void @llvm.dbg.value(metadata i32 %bf.clear7, metadata !8445, metadata !DIExpression()), !dbg !8473
  br i1 %tobool, label %for.body.for.body.split_crit_edge, label %for.body.split.us, !dbg !8484

for.body.for.body.split_crit_edge:                ; preds = %for.body
  br label %for.cond8, !dbg !8484

for.body.split.us:                                ; preds = %for.body
  br label %for.cond8.us, !dbg !8484

for.cond8.us:                                     ; preds = %for.inc.us, %for.body.split.us
  %can_do_signed.1.us = phi i8 [ %can_do_signed.0, %for.body.split.us ], [ %can_do_signed.4.us, %for.inc.us ], !dbg !8478
  %imode.0.us = phi i32 [ %bf.clear7, %for.body.split.us ], [ %conv69.us, %for.inc.us ], !dbg !8485
  %target.1.us = phi %struct.rtx_def* [ %target.0, %for.body.split.us ], [ %target.3.us, %for.inc.us ], !dbg !8480
  %from.addr.1.us = phi %struct.rtx_def* [ %from.addr.0, %for.body.split.us ], [ %from.addr.3.us, %for.inc.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.us, metadata !8440, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.us, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32 %imode.0.us, metadata !8445, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8 %can_do_signed.1.us, metadata !8446, metadata !DIExpression()), !dbg !8473
  %cmp9.us = icmp eq i32 %imode.0.us, 0, !dbg !8486
  br i1 %cmp9.us, label %for.inc70.us-lcssa.us, label %for.body10.us, !dbg !8487

for.body10.us:                                    ; preds = %for.cond8.us
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8447, metadata !DIExpression()), !dbg !8488
  %bf.load11.us = load i32, i32* %1, align 8, !dbg !8489
  %bf.lshr12.us = lshr i32 %bf.load11.us, 16, !dbg !8489
  %bf.clear13.us = and i32 %bf.lshr12.us, 255, !dbg !8489
  %cmp14.us = icmp eq i32 %fmode.0, %bf.clear13.us, !dbg !8491
  br i1 %cmp14.us, label %if.end.us, label %land.lhs.true.us, !dbg !8492

land.lhs.true.us:                                 ; preds = %for.body10.us
  %call.us = tail call i32 @significand_size(i32 %fmode.0) #6, !dbg !8493
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.1.us, i64 0, i32 0, !dbg !8494
  %bf.load15.us = load i32, i32* %3, align 8, !dbg !8494
  %bf.lshr16.us = lshr i32 %bf.load15.us, 16, !dbg !8494
  %bf.clear17.us = and i32 %bf.lshr16.us, 255, !dbg !8494
  %idxprom.us = zext i32 %bf.clear17.us to i64, !dbg !8494
  %arrayidx.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom.us, !dbg !8494
  %4 = load i8, i8* %arrayidx.us, align 1, !dbg !8494
  %conv18.us = zext i8 %4 to i32, !dbg !8494
  %mul.us = shl nuw nsw i32 %conv18.us, 3, !dbg !8494
  %cmp21.us = icmp slt i32 %call.us, %mul.us, !dbg !8495
  br i1 %cmp21.us, label %cleanup.us, label %if.end.us, !dbg !8496

if.end.us:                                        ; preds = %land.lhs.true.us, %for.body10.us
  %call23.us = tail call fastcc i32 @can_float_p(i32 %fmode.0, i32 %imode.0.us, i32 %unsignedp) #8, !dbg !8497
  call void @llvm.dbg.value(metadata i32 %call23.us, metadata !8442, metadata !DIExpression()), !dbg !8473
  %cmp24.us = icmp eq i32 %call23.us, 2956, !dbg !8498
  br i1 %cmp24.us, label %if.then27.us, label %if.end40.us, !dbg !8499

if.then27.us:                                     ; preds = %if.end.us
  %call28.us = tail call fastcc i32 @can_float_p(i32 %fmode.0, i32 %imode.0.us, i32 0) #8, !dbg !8500
  call void @llvm.dbg.value(metadata i32 %call28.us, metadata !8453, metadata !DIExpression()), !dbg !8501
  %cmp29.us = icmp eq i32 %call28.us, 2956, !dbg !8502
  %spec.select.us = select i1 %cmp29.us, i8 %can_do_signed.1.us, i8 1, !dbg !8504
  call void @llvm.dbg.value(metadata i8 %spec.select.us, metadata !8446, metadata !DIExpression()), !dbg !8473
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.1.us, i64 0, i32 0, !dbg !8505
  %bf.load33.us = load i32, i32* %5, align 8, !dbg !8505
  %bf.lshr34.us = lshr i32 %bf.load33.us, 16, !dbg !8505
  %bf.clear35.us = and i32 %bf.lshr34.us, 255, !dbg !8505
  %cmp36.us = icmp ne i32 %imode.0.us, %bf.clear35.us, !dbg !8507
  %doing_unsigned.0.us = select i1 %cmp36.us, i32 0, i32 %unsignedp, !dbg !8508
  %icode.0.us = select i1 %cmp36.us, i32 %call28.us, i32 2956, !dbg !8508
  br label %if.end40.us, !dbg !8508

if.end40.us:                                      ; preds = %if.then27.us, %if.end.us
  %doing_unsigned.1.us = phi i32 [ %unsignedp, %if.end.us ], [ %doing_unsigned.0.us, %if.then27.us ], !dbg !8488
  %can_do_signed.3.us = phi i8 [ %can_do_signed.1.us, %if.end.us ], [ %spec.select.us, %if.then27.us ], !dbg !8473
  %icode.1.us = phi i32 [ %call23.us, %if.end.us ], [ %icode.0.us, %if.then27.us ], !dbg !8488
  call void @llvm.dbg.value(metadata i32 %icode.1.us, metadata !8442, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8 %can_do_signed.3.us, metadata !8446, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32 %doing_unsigned.1.us, metadata !8447, metadata !DIExpression()), !dbg !8488
  %cmp41.us = icmp eq i32 %icode.1.us, 2956, !dbg !8509
  br i1 %cmp41.us, label %cleanup.us, label %if.then43.us, !dbg !8511

if.then43.us:                                     ; preds = %if.end40.us
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.1.us, i64 0, i32 0, !dbg !8512
  %bf.load44.us = load i32, i32* %6, align 8, !dbg !8512
  %bf.lshr45.us = lshr i32 %bf.load44.us, 16, !dbg !8512
  %bf.clear46.us = and i32 %bf.lshr45.us, 255, !dbg !8512
  %cmp47.us = icmp eq i32 %imode.0.us, %bf.clear46.us, !dbg !8515
  br i1 %cmp47.us, label %if.end51.us, label %if.then49.us, !dbg !8516

if.then49.us:                                     ; preds = %if.then43.us
  %call50.us = tail call %struct.rtx_def* @convert_to_mode(i32 %imode.0.us, %struct.rtx_def* %from.addr.1.us, i32 %unsignedp) #6, !dbg !8517
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50.us, metadata !8440, metadata !DIExpression()), !dbg !8473
  br label %if.end51.us, !dbg !8518

if.end51.us:                                      ; preds = %if.then49.us, %if.then43.us
  %from.addr.2.us = phi %struct.rtx_def* [ %call50.us, %if.then49.us ], [ %from.addr.1.us, %if.then43.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.2.us, metadata !8440, metadata !DIExpression()), !dbg !8473
  %bf.load52.us = load i32, i32* %1, align 8, !dbg !8519
  %bf.lshr53.us = lshr i32 %bf.load52.us, 16, !dbg !8519
  %bf.clear54.us = and i32 %bf.lshr53.us, 255, !dbg !8519
  %cmp55.us = icmp eq i32 %fmode.0, %bf.clear54.us, !dbg !8521
  br i1 %cmp55.us, label %if.end59.us, label %if.then57.us, !dbg !8522

if.then57.us:                                     ; preds = %if.end51.us
  %call58.us = tail call %struct.rtx_def* @gen_reg_rtx(i32 %fmode.0) #6, !dbg !8523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call58.us, metadata !8443, metadata !DIExpression()), !dbg !8473
  br label %if.end59.us, !dbg !8524

if.end59.us:                                      ; preds = %if.then57.us, %if.end51.us
  %target.2.us = phi %struct.rtx_def* [ %call58.us, %if.then57.us ], [ %target.1.us, %if.end51.us ], !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.2.us, metadata !8443, metadata !DIExpression()), !dbg !8473
  %tobool60.us = icmp eq i32 %doing_unsigned.1.us, 0, !dbg !8525
  %cond61.us = select i1 %tobool60.us, i32 103, i32 105, !dbg !8525
  tail call void @emit_unop_insn(i32 %icode.1.us, %struct.rtx_def* %target.2.us, %struct.rtx_def* %from.addr.2.us, i32 %cond61.us) #8, !dbg !8526
  %cmp62.us = icmp eq %struct.rtx_def* %target.2.us, %to, !dbg !8527
  br i1 %cmp62.us, label %cleanup.us, label %if.then64.us, !dbg !8529

if.then64.us:                                     ; preds = %if.end59.us
  tail call void @convert_move(%struct.rtx_def* %to, %struct.rtx_def* %target.2.us, i32 0) #6, !dbg !8530
  br label %cleanup.us, !dbg !8530

cleanup.us:                                       ; preds = %if.then64.us, %if.end59.us, %if.end40.us, %land.lhs.true.us
  %can_do_signed.4.us = phi i8 [ %can_do_signed.1.us, %land.lhs.true.us ], [ %can_do_signed.3.us, %if.then64.us ], [ %can_do_signed.3.us, %if.end59.us ], [ %can_do_signed.3.us, %if.end40.us ], !dbg !8473
  %target.3.us = phi %struct.rtx_def* [ %target.1.us, %land.lhs.true.us ], [ %target.2.us, %if.then64.us ], [ %to, %if.end59.us ], [ %target.1.us, %if.end40.us ], !dbg !8473
  %cleanup.dest.slot.0.us = phi i32 [ 7, %land.lhs.true.us ], [ 1, %if.then64.us ], [ 1, %if.end59.us ], [ 0, %if.end40.us ]
  %from.addr.3.us = phi %struct.rtx_def* [ %from.addr.1.us, %land.lhs.true.us ], [ %from.addr.2.us, %if.then64.us ], [ %from.addr.2.us, %if.end59.us ], [ %from.addr.1.us, %if.end40.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.3.us, metadata !8440, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.3.us, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8 %can_do_signed.4.us, metadata !8446, metadata !DIExpression()), !dbg !8473
  switch i32 %cleanup.dest.slot.0.us, label %cleanup.cont285.loopexit.us-lcssa.us [
    i32 0, label %for.inc.us
    i32 7, label %for.inc.us
  ]

for.inc.us:                                       ; preds = %cleanup.us, %cleanup.us
  %idxprom67.us = zext i32 %imode.0.us to i64, !dbg !8531
  %arrayidx68.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom67.us, !dbg !8531
  %7 = load i8, i8* %arrayidx68.us, align 1, !dbg !8531
  %conv69.us = zext i8 %7 to i32, !dbg !8531
  call void @llvm.dbg.value(metadata i32 %conv69.us, metadata !8445, metadata !DIExpression()), !dbg !8473
  br label %for.cond8.us, !dbg !8532, !llvm.loop !8533

for.inc70.us-lcssa.us:                            ; preds = %for.cond8.us
  %can_do_signed.1.us.lcssa = phi i8 [ %can_do_signed.1.us, %for.cond8.us ], !dbg !8478
  %target.1.us.lcssa = phi %struct.rtx_def* [ %target.1.us, %for.cond8.us ], !dbg !8480
  %from.addr.1.us.lcssa = phi %struct.rtx_def* [ %from.addr.1.us, %for.cond8.us ]
  call void @llvm.dbg.value(metadata i8 %can_do_signed.1.us.lcssa, metadata !8446, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.us.lcssa, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.us.lcssa, metadata !8440, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8 %can_do_signed.1.us.lcssa, metadata !8446, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.us.lcssa, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.us.lcssa, metadata !8440, metadata !DIExpression()), !dbg !8473
  br label %for.inc70, !dbg !8535

cleanup.cont285.loopexit.us-lcssa.us:             ; preds = %cleanup.us
  br label %cleanup.cont285.loopexit, !dbg !8536

for.cond8:                                        ; preds = %for.inc, %for.body.for.body.split_crit_edge
  %imode.0 = phi i32 [ %bf.clear7, %for.body.for.body.split_crit_edge ], [ %conv69, %for.inc ], !dbg !8485
  %target.1 = phi %struct.rtx_def* [ %target.0, %for.body.for.body.split_crit_edge ], [ %target.3, %for.inc ], !dbg !8480
  %from.addr.1 = phi %struct.rtx_def* [ %from.addr.0, %for.body.for.body.split_crit_edge ], [ %from.addr.3, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1, metadata !8440, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32 %imode.0, metadata !8445, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8 %can_do_signed.0, metadata !8446, metadata !DIExpression()), !dbg !8473
  %cmp9 = icmp eq i32 %imode.0, 0, !dbg !8486
  br i1 %cmp9, label %for.inc70.us-lcssa, label %for.body10, !dbg !8487

for.body10:                                       ; preds = %for.cond8
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8447, metadata !DIExpression()), !dbg !8488
  %bf.load11 = load i32, i32* %1, align 8, !dbg !8489
  %bf.lshr12 = lshr i32 %bf.load11, 16, !dbg !8489
  %bf.clear13 = and i32 %bf.lshr12, 255, !dbg !8489
  %cmp14 = icmp eq i32 %fmode.0, %bf.clear13, !dbg !8491
  br i1 %cmp14, label %if.end, label %land.lhs.true, !dbg !8492

land.lhs.true:                                    ; preds = %for.body10
  %call = tail call i32 @significand_size(i32 %fmode.0) #6, !dbg !8493
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.1, i64 0, i32 0, !dbg !8494
  %bf.load15 = load i32, i32* %8, align 8, !dbg !8494
  %bf.lshr16 = lshr i32 %bf.load15, 16, !dbg !8494
  %bf.clear17 = and i32 %bf.lshr16, 255, !dbg !8494
  %idxprom = zext i32 %bf.clear17 to i64, !dbg !8494
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !8494
  %9 = load i8, i8* %arrayidx, align 1, !dbg !8494
  %conv18 = zext i8 %9 to i32, !dbg !8494
  %mul = shl nuw nsw i32 %conv18, 3, !dbg !8494
  %cmp21 = icmp slt i32 %call, %mul, !dbg !8495
  br i1 %cmp21, label %cleanup, label %if.end, !dbg !8496

if.end:                                           ; preds = %for.body10, %land.lhs.true
  %call23 = tail call fastcc i32 @can_float_p(i32 %fmode.0, i32 %imode.0, i32 0) #8, !dbg !8497
  call void @llvm.dbg.value(metadata i32 %call23, metadata !8442, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32 %call23, metadata !8442, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8 %can_do_signed.0, metadata !8446, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8447, metadata !DIExpression()), !dbg !8488
  %cmp41 = icmp eq i32 %call23, 2956, !dbg !8509
  br i1 %cmp41, label %cleanup, label %if.then43, !dbg !8511

if.then43:                                        ; preds = %if.end
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.1, i64 0, i32 0, !dbg !8512
  %bf.load44 = load i32, i32* %10, align 8, !dbg !8512
  %bf.lshr45 = lshr i32 %bf.load44, 16, !dbg !8512
  %bf.clear46 = and i32 %bf.lshr45, 255, !dbg !8512
  %cmp47 = icmp eq i32 %imode.0, %bf.clear46, !dbg !8515
  br i1 %cmp47, label %if.end51, label %if.then49, !dbg !8516

if.then49:                                        ; preds = %if.then43
  %call50 = tail call %struct.rtx_def* @convert_to_mode(i32 %imode.0, %struct.rtx_def* %from.addr.1, i32 0) #6, !dbg !8517
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50, metadata !8440, metadata !DIExpression()), !dbg !8473
  br label %if.end51, !dbg !8518

if.end51:                                         ; preds = %if.then43, %if.then49
  %from.addr.2 = phi %struct.rtx_def* [ %call50, %if.then49 ], [ %from.addr.1, %if.then43 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.2, metadata !8440, metadata !DIExpression()), !dbg !8473
  %bf.load52 = load i32, i32* %1, align 8, !dbg !8519
  %bf.lshr53 = lshr i32 %bf.load52, 16, !dbg !8519
  %bf.clear54 = and i32 %bf.lshr53, 255, !dbg !8519
  %cmp55 = icmp eq i32 %fmode.0, %bf.clear54, !dbg !8521
  br i1 %cmp55, label %if.end59, label %if.then57, !dbg !8522

if.then57:                                        ; preds = %if.end51
  %call58 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %fmode.0) #6, !dbg !8523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call58, metadata !8443, metadata !DIExpression()), !dbg !8473
  br label %if.end59, !dbg !8524

if.end59:                                         ; preds = %if.end51, %if.then57
  %target.2 = phi %struct.rtx_def* [ %call58, %if.then57 ], [ %target.1, %if.end51 ], !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.2, metadata !8443, metadata !DIExpression()), !dbg !8473
  tail call void @emit_unop_insn(i32 %call23, %struct.rtx_def* %target.2, %struct.rtx_def* %from.addr.2, i32 103) #8, !dbg !8526
  %cmp62 = icmp eq %struct.rtx_def* %target.2, %to, !dbg !8527
  br i1 %cmp62, label %cleanup, label %if.then64, !dbg !8529

if.then64:                                        ; preds = %if.end59
  tail call void @convert_move(%struct.rtx_def* %to, %struct.rtx_def* %target.2, i32 0) #6, !dbg !8530
  br label %cleanup, !dbg !8530

cleanup:                                          ; preds = %if.end59, %if.end, %if.then64, %land.lhs.true
  %target.3 = phi %struct.rtx_def* [ %target.1, %land.lhs.true ], [ %target.2, %if.then64 ], [ %to, %if.end59 ], [ %target.1, %if.end ], !dbg !8473
  %cleanup.dest.slot.0 = phi i32 [ 7, %land.lhs.true ], [ 1, %if.then64 ], [ 1, %if.end59 ], [ 0, %if.end ]
  %from.addr.3 = phi %struct.rtx_def* [ %from.addr.1, %land.lhs.true ], [ %from.addr.2, %if.then64 ], [ %from.addr.2, %if.end59 ], [ %from.addr.1, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.3, metadata !8440, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.3, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8 %can_do_signed.0, metadata !8446, metadata !DIExpression()), !dbg !8473
  switch i32 %cleanup.dest.slot.0, label %cleanup.cont285.loopexit.us-lcssa [
    i32 0, label %for.inc
    i32 7, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %idxprom67 = zext i32 %imode.0 to i64, !dbg !8531
  %arrayidx68 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom67, !dbg !8531
  %11 = load i8, i8* %arrayidx68, align 1, !dbg !8531
  %conv69 = zext i8 %11 to i32, !dbg !8531
  call void @llvm.dbg.value(metadata i32 %conv69, metadata !8445, metadata !DIExpression()), !dbg !8473
  br label %for.cond8, !dbg !8532, !llvm.loop !8533

for.inc70.us-lcssa:                               ; preds = %for.cond8
  %target.1.lcssa34 = phi %struct.rtx_def* [ %target.1, %for.cond8 ], !dbg !8480
  %from.addr.1.lcssa32 = phi %struct.rtx_def* [ %from.addr.1, %for.cond8 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.lcssa34, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.lcssa32, metadata !8440, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.lcssa34, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.lcssa32, metadata !8440, metadata !DIExpression()), !dbg !8473
  br label %for.inc70, !dbg !8535

for.inc70:                                        ; preds = %for.inc70.us-lcssa.us, %for.inc70.us-lcssa
  %can_do_signed.1.lcssa = phi i8 [ %can_do_signed.0, %for.inc70.us-lcssa ], [ %can_do_signed.1.us.lcssa, %for.inc70.us-lcssa.us ], !dbg !8478
  %target.1.lcssa = phi %struct.rtx_def* [ %target.1.lcssa34, %for.inc70.us-lcssa ], [ %target.1.us.lcssa, %for.inc70.us-lcssa.us ], !dbg !8480
  %from.addr.1.lcssa = phi %struct.rtx_def* [ %from.addr.1.lcssa32, %for.inc70.us-lcssa ], [ %from.addr.1.us.lcssa, %for.inc70.us-lcssa.us ]
  call void @llvm.dbg.value(metadata i8 %can_do_signed.1.lcssa, metadata !8446, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.lcssa, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.lcssa, metadata !8440, metadata !DIExpression()), !dbg !8473
  %idxprom71 = zext i32 %fmode.0 to i64, !dbg !8535
  %arrayidx72 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom71, !dbg !8535
  %12 = load i8, i8* %arrayidx72, align 1, !dbg !8535
  %conv73 = zext i8 %12 to i32, !dbg !8535
  call void @llvm.dbg.value(metadata i32 %conv73, metadata !8444, metadata !DIExpression()), !dbg !8473
  br label %for.cond, !dbg !8537, !llvm.loop !8538

for.end74:                                        ; preds = %for.cond
  %can_do_signed.0.lcssa = phi i8 [ %can_do_signed.0, %for.cond ], !dbg !8478
  %target.0.lcssa = phi %struct.rtx_def* [ %target.0, %for.cond ], !dbg !8480
  %from.addr.0.lcssa = phi %struct.rtx_def* [ %from.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata i8 %can_do_signed.0.lcssa, metadata !8446, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.0.lcssa, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa, metadata !8440, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8 %can_do_signed.0.lcssa, metadata !8446, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.0.lcssa, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa, metadata !8440, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8 %can_do_signed.0.lcssa, metadata !8446, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.0.lcssa, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa, metadata !8440, metadata !DIExpression()), !dbg !8473
  %tobool75 = icmp ne i32 %unsignedp, 0, !dbg !8540
  %tobool78 = icmp ne i8 %can_do_signed.0.lcssa, 0, !dbg !8541
  %or.cond1 = and i1 %tobool75, %tobool78, !dbg !8542
  br i1 %or.cond1, label %if.then79, label %if.end220, !dbg !8542

if.then79:                                        ; preds = %for.end74
  %call80 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !8543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call80, metadata !8456, metadata !DIExpression()), !dbg !8544
  %13 = bitcast %struct.real_value* %offset to i8*, !dbg !8545
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #7, !dbg !8545
  %bf.load81 = load i32, i32* %1, align 8, !dbg !8546
  %bf.lshr82 = lshr i32 %bf.load81, 16, !dbg !8546
  %bf.clear83 = and i32 %bf.lshr82, 255, !dbg !8546
  call void @llvm.dbg.value(metadata i32 %bf.clear83, metadata !8444, metadata !DIExpression()), !dbg !8473
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.0.lcssa, i64 0, i32 0, !dbg !8548
  br label %for.cond84, !dbg !8551

for.cond84:                                       ; preds = %for.inc116, %if.then79
  %fmode.1 = phi i32 [ %bf.clear83, %if.then79 ], [ %conv119, %for.inc116 ], !dbg !8552
  call void @llvm.dbg.value(metadata i32 %fmode.1, metadata !8444, metadata !DIExpression()), !dbg !8473
  %cond = icmp eq i32 %fmode.1, 0, !dbg !8553
  br i1 %cond, label %if.then123.loopexit, label %for.body87, !dbg !8553

for.body87:                                       ; preds = %for.cond84
  %bf.load88 = load i32, i32* %14, align 8, !dbg !8554
  %bf.lshr89 = lshr i32 %bf.load88, 16, !dbg !8554
  %bf.clear90 = and i32 %bf.lshr89, 255, !dbg !8554
  %idxprom91 = zext i32 %bf.clear90 to i64, !dbg !8554
  %arrayidx92 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom91, !dbg !8554
  %15 = load i8, i8* %arrayidx92, align 1, !dbg !8554
  %idxprom98 = zext i32 %fmode.1 to i64, !dbg !8555
  %arrayidx99 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom98, !dbg !8555
  %16 = load i8, i8* %arrayidx99, align 1, !dbg !8555
  %cmp105 = icmp ult i8 %15, %16, !dbg !8556
  br i1 %cmp105, label %land.lhs.true107, label %for.inc116, !dbg !8557

land.lhs.true107:                                 ; preds = %for.body87
  %call111 = tail call fastcc i32 @can_float_p(i32 %fmode.1, i32 %bf.clear90, i32 0) #8, !dbg !8558
  %cmp112 = icmp eq i32 %call111, 2956, !dbg !8559
  br i1 %cmp112, label %for.inc116, label %for.end120, !dbg !8560

for.inc116:                                       ; preds = %land.lhs.true107, %for.body87
  %arrayidx118 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom98, !dbg !8561
  %17 = load i8, i8* %arrayidx118, align 1, !dbg !8561
  %conv119 = zext i8 %17 to i32, !dbg !8561
  call void @llvm.dbg.value(metadata i32 %conv119, metadata !8444, metadata !DIExpression()), !dbg !8473
  br label %for.cond84, !dbg !8562, !llvm.loop !8563

for.end120:                                       ; preds = %land.lhs.true107
  %fmode.1.lcssa28 = phi i32 [ %fmode.1, %land.lhs.true107 ], !dbg !8552
  call void @llvm.dbg.value(metadata i32 %fmode.1.lcssa28, metadata !8444, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32 %fmode.1.lcssa28, metadata !8444, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32 %fmode.1.lcssa28, metadata !8444, metadata !DIExpression()), !dbg !8473
  br i1 false, label %for.end120.if.then123_crit_edge, label %if.end178, !dbg !8565

for.end120.if.then123_crit_edge:                  ; preds = %for.end120
  br label %if.then123, !dbg !8565

if.then123.loopexit:                              ; preds = %for.cond84
  br label %if.then123, !dbg !8566

if.then123:                                       ; preds = %for.end120.if.then123_crit_edge, %if.then123.loopexit
  %bf.load124 = load i32, i32* %1, align 8, !dbg !8566
  %bf.lshr125 = lshr i32 %bf.load124, 16, !dbg !8566
  %bf.clear126 = and i32 %bf.lshr125, 255, !dbg !8566
  call void @llvm.dbg.value(metadata i32 %bf.clear126, metadata !8444, metadata !DIExpression()), !dbg !8473
  %call127 = tail call i32 @significand_size(i32 %bf.clear126) #6, !dbg !8567
  %add = add nsw i32 %call127, 1, !dbg !8568
  %bf.load128 = load i32, i32* %14, align 8, !dbg !8569
  %bf.lshr129 = lshr i32 %bf.load128, 16, !dbg !8569
  %bf.clear130 = and i32 %bf.lshr129, 255, !dbg !8569
  %idxprom131 = zext i32 %bf.clear130 to i64, !dbg !8569
  %arrayidx132 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom131, !dbg !8569
  %18 = load i8, i8* %arrayidx132, align 1, !dbg !8569
  %conv134 = zext i8 %18 to i32, !dbg !8569
  %mul135 = shl nuw nsw i32 %conv134, 3, !dbg !8569
  %cmp138 = icmp slt i32 %add, %mul135, !dbg !8570
  br i1 %cmp138, label %if.then140, label %if.end178, !dbg !8571

if.then140:                                       ; preds = %if.then123
  %call141 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !8572
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call141, metadata !8466, metadata !DIExpression()), !dbg !8573
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.0.lcssa, i64 0, i32 0, !dbg !8574
  %bf.load142 = load i32, i32* %19, align 8, !dbg !8574
  %bf.clear143 = and i32 %bf.load142, 65535, !dbg !8574
  %cmp144 = icmp eq i32 %bf.clear143, 37, !dbg !8574
  br i1 %cmp144, label %lor.lhs.false, label %if.then155, !dbg !8576

lor.lhs.false:                                    ; preds = %if.then140
  %call146 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %target.0.lcssa) #8, !dbg !8577
  %cmp147 = icmp ult i32 %call146, 53, !dbg !8578
  br i1 %cmp147, label %if.then155, label %lor.lhs.false149, !dbg !8579

lor.lhs.false149:                                 ; preds = %lor.lhs.false
  %bf.load150 = load i32, i32* %19, align 8, !dbg !8580
  %bf.lshr151 = lshr i32 %bf.load150, 16, !dbg !8580
  %bf.clear152 = and i32 %bf.lshr151, 255, !dbg !8580
  %cmp153 = icmp eq i32 %bf.clear152, %bf.clear126, !dbg !8581
  br i1 %cmp153, label %if.end157, label %if.then155, !dbg !8582

if.then155:                                       ; preds = %lor.lhs.false149, %lor.lhs.false, %if.then140
  %call156 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear126) #6, !dbg !8583
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call156, metadata !8443, metadata !DIExpression()), !dbg !8473
  br label %if.end157, !dbg !8584

if.end157:                                        ; preds = %lor.lhs.false149, %if.then155
  %target.4 = phi %struct.rtx_def* [ %call156, %if.then155 ], [ %target.0.lcssa, %lor.lhs.false149 ], !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.4, metadata !8443, metadata !DIExpression()), !dbg !8473
  %bf.load158 = load i32, i32* %14, align 8, !dbg !8585
  %bf.lshr159 = lshr i32 %bf.load158, 16, !dbg !8585
  %bf.clear160 = and i32 %bf.lshr159, 255, !dbg !8585
  call void @llvm.dbg.value(metadata i32 %bf.clear160, metadata !8445, metadata !DIExpression()), !dbg !8473
  tail call void @do_pending_stack_adjust() #6, !dbg !8586
  %20 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8587
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %from.addr.0.lcssa, %struct.rtx_def* %20, i32 85, %struct.rtx_def* null, i32 %bf.clear160, i32 0, %struct.rtx_def* %call141) #8, !dbg !8588
  tail call void @expand_float(%struct.rtx_def* %target.4, %struct.rtx_def* %from.addr.0.lcssa, i32 0) #8, !dbg !8589
  %call161 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call80) #6, !dbg !8590
  %call162 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call161) #6, !dbg !8591
  %call163 = tail call %struct.rtx_def* @emit_barrier() #6, !dbg !8592
  %call164 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call141) #6, !dbg !8593
  %21 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !8594
  %call165 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear160, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.rtx_def* %from.addr.0.lcssa, %struct.rtx_def* %21, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !8595
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call165, metadata !8459, metadata !DIExpression()), !dbg !8544
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !8596
  %call166 = tail call %struct.rtx_def* @expand_shift(i32 84, i32 %bf.clear160, %struct.rtx_def* %from.addr.0.lcssa, %union.tree_node* %22, %struct.rtx_def* null, i32 1) #6, !dbg !8597
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call166, metadata !8461, metadata !DIExpression()), !dbg !8573
  %call167 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear160, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), %struct.rtx_def* %call165, %struct.rtx_def* %call166, %struct.rtx_def* %call165, i32 1, i32 3) #8, !dbg !8598
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call167, metadata !8459, metadata !DIExpression()), !dbg !8544
  tail call void @expand_float(%struct.rtx_def* %target.4, %struct.rtx_def* %call167, i32 0) #8, !dbg !8599
  %call168 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear126, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), %struct.rtx_def* %target.4, %struct.rtx_def* %target.4, %struct.rtx_def* %target.4, i32 0, i32 3) #8, !dbg !8600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call168, metadata !8459, metadata !DIExpression()), !dbg !8544
  %cmp169 = icmp eq %struct.rtx_def* %call168, %target.4, !dbg !8601
  br i1 %cmp169, label %if.end173, label %if.then171, !dbg !8603

if.then171:                                       ; preds = %if.end157
  %call172 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.4, %struct.rtx_def* %call168) #6, !dbg !8604
  br label %if.end173, !dbg !8604

if.end173:                                        ; preds = %if.end157, %if.then171
  tail call void @do_pending_stack_adjust() #6, !dbg !8605
  %call174 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call80) #6, !dbg !8606
  br label %cleanup217

if.end178:                                        ; preds = %if.then123, %for.end120
  %fmode.2 = phi i32 [ %fmode.1.lcssa28, %for.end120 ], [ %bf.clear126, %if.then123 ], !dbg !8544
  call void @llvm.dbg.value(metadata i32 %fmode.2, metadata !8444, metadata !DIExpression()), !dbg !8473
  %bf.load179 = load i32, i32* %1, align 8, !dbg !8607
  %bf.lshr180 = lshr i32 %bf.load179, 16, !dbg !8607
  %bf.clear181 = and i32 %bf.lshr180, 255, !dbg !8607
  %cmp182 = icmp eq i32 %bf.clear181, %fmode.2, !dbg !8609
  br i1 %cmp182, label %lor.lhs.false184, label %if.then193, !dbg !8610

lor.lhs.false184:                                 ; preds = %if.end178
  %bf.clear186 = and i32 %bf.load179, 65535, !dbg !8611
  %cmp187 = icmp eq i32 %bf.clear186, 37, !dbg !8611
  br i1 %cmp187, label %lor.lhs.false189, label %if.then193, !dbg !8612

lor.lhs.false189:                                 ; preds = %lor.lhs.false184
  %call190 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %to) #8, !dbg !8613
  %cmp191 = icmp ult i32 %call190, 53, !dbg !8614
  br i1 %cmp191, label %if.then193, label %if.end195, !dbg !8615

if.then193:                                       ; preds = %if.end178, %lor.lhs.false189, %lor.lhs.false184
  %call194 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %fmode.2) #6, !dbg !8616
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call194, metadata !8443, metadata !DIExpression()), !dbg !8473
  br label %if.end195, !dbg !8617

if.end195:                                        ; preds = %if.then193, %lor.lhs.false189
  %target.5 = phi %struct.rtx_def* [ %call194, %if.then193 ], [ %target.0.lcssa, %lor.lhs.false189 ], !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.5, metadata !8443, metadata !DIExpression()), !dbg !8473
  tail call void @expand_float(%struct.rtx_def* %target.5, %struct.rtx_def* %from.addr.0.lcssa, i32 0) #8, !dbg !8618
  tail call void @do_pending_stack_adjust() #6, !dbg !8619
  %23 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8620
  %bf.load196 = load i32, i32* %14, align 8, !dbg !8621
  %bf.lshr197 = lshr i32 %bf.load196, 16, !dbg !8621
  %bf.clear198 = and i32 %bf.lshr197, 255, !dbg !8621
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %from.addr.0.lcssa, %struct.rtx_def* %23, i32 82, %struct.rtx_def* null, i32 %bf.clear198, i32 0, %struct.rtx_def* %call80) #8, !dbg !8622
  %bf.load199 = load i32, i32* %14, align 8, !dbg !8623
  %bf.lshr200 = lshr i32 %bf.load199, 16, !dbg !8623
  %bf.clear201 = and i32 %bf.lshr200, 255, !dbg !8623
  %idxprom202 = zext i32 %bf.clear201 to i64, !dbg !8623
  %arrayidx203 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom202, !dbg !8623
  %24 = load i8, i8* %arrayidx203, align 1, !dbg !8623
  %conv205 = zext i8 %24 to i32, !dbg !8623
  %mul206 = shl nuw nsw i32 %conv205, 3, !dbg !8623
  call void @llvm.dbg.value(metadata %struct.real_value* %offset, metadata !8460, metadata !DIExpression(DW_OP_deref)), !dbg !8544
  call void @real_2expN(%struct.real_value* nonnull %offset, i32 %mul206, i32 %fmode.2) #6, !dbg !8624
  call void @llvm.dbg.value(metadata %struct.real_value* %offset, metadata !8460, metadata !DIExpression(DW_OP_deref)), !dbg !8544
  %call209 = call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* nonnull byval(%struct.real_value) align 8 %offset, i32 %fmode.2) #6, !dbg !8625
  %call210 = call %struct.rtx_def* @expand_binop(i32 %fmode.2, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), %struct.rtx_def* %target.5, %struct.rtx_def* %call209, %struct.rtx_def* %target.5, i32 0, i32 3) #8, !dbg !8626
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call210, metadata !8459, metadata !DIExpression()), !dbg !8544
  %cmp211 = icmp eq %struct.rtx_def* %call210, %target.5, !dbg !8627
  br i1 %cmp211, label %if.end215, label %if.then213, !dbg !8629

if.then213:                                       ; preds = %if.end195
  %call214 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.5, %struct.rtx_def* %call210) #6, !dbg !8630
  br label %if.end215, !dbg !8630

if.end215:                                        ; preds = %if.end195, %if.then213
  call void @do_pending_stack_adjust() #6, !dbg !8631
  %call216 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call80) #6, !dbg !8632
  br label %cleanup217, !dbg !8633

cleanup217:                                       ; preds = %if.end215, %if.end173
  %target.6 = phi %struct.rtx_def* [ %target.4, %if.end173 ], [ %target.5, %if.end215 ], !dbg !8544
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.6, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #7, !dbg !8634
  br label %done

if.end220:                                        ; preds = %for.end74
  %cond222 = select i1 %tobool, %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 7), %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 8), !dbg !8635
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %cond222, metadata !8471, metadata !DIExpression()), !dbg !8636
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.0.lcssa, i64 0, i32 0, !dbg !8637
  %bf.load223 = load i32, i32* %25, align 8, !dbg !8637
  %bf.lshr224 = lshr i32 %bf.load223, 16, !dbg !8637
  %bf.clear225 = and i32 %bf.lshr224, 255, !dbg !8637
  %idxprom226 = zext i32 %bf.clear225 to i64, !dbg !8637
  %arrayidx227 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom226, !dbg !8637
  %26 = load i8, i8* %arrayidx227, align 1, !dbg !8637
  %27 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 16), align 16, !dbg !8639
  %cmp232 = icmp ult i8 %26, %27, !dbg !8640
  br i1 %cmp232, label %if.then234, label %if.end236, !dbg !8641

if.then234:                                       ; preds = %if.end220
  %call235 = tail call %struct.rtx_def* @convert_to_mode(i32 16, %struct.rtx_def* %from.addr.0.lcssa, i32 %unsignedp) #6, !dbg !8642
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call235, metadata !8440, metadata !DIExpression()), !dbg !8473
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call235, i64 0, i32 0, !dbg !8636
  %bf.load240.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !8643
  %.pre = lshr i32 %bf.load240.pre, 16, !dbg !8643
  %.pre13 = and i32 %.pre, 255, !dbg !8643
  br label %if.end236, !dbg !8644

if.end236:                                        ; preds = %if.then234, %if.end220
  %bf.clear242.pre-phi = phi i32 [ %.pre13, %if.then234 ], [ %bf.clear225, %if.end220 ], !dbg !8643
  %from.addr.4 = phi %struct.rtx_def* [ %call235, %if.then234 ], [ %from.addr.0.lcssa, %if.end220 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4, metadata !8440, metadata !DIExpression()), !dbg !8473
  %bf.load237 = load i32, i32* %1, align 8, !dbg !8645
  %bf.lshr238 = lshr i32 %bf.load237, 16, !dbg !8645
  %bf.clear239 = and i32 %bf.lshr238, 255, !dbg !8645
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.4, i64 0, i32 0, !dbg !8643
  %call243 = tail call %struct.rtx_def* @convert_optab_libfunc(%struct.convert_optab_d* %cond222, i32 %bf.clear239, i32 %bf.clear242.pre-phi) #8, !dbg !8646
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call243, metadata !8467, metadata !DIExpression()), !dbg !8636
  %tobool244 = icmp eq %struct.rtx_def* %call243, null, !dbg !8647
  br i1 %tobool244, label %cond.true245, label %cond.end247, !dbg !8647

cond.true245:                                     ; preds = %if.end236
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 5142, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8647
  br label %cond.end247, !dbg !8647

cond.end247:                                      ; preds = %if.end236, %cond.true245
  tail call void @start_sequence() #6, !dbg !8648
  %bf.load249 = load i32, i32* %1, align 8, !dbg !8649
  %bf.lshr250 = lshr i32 %bf.load249, 16, !dbg !8649
  %bf.clear251 = and i32 %bf.lshr250, 255, !dbg !8649
  %bf.load252 = load i32, i32* %28, align 8, !dbg !8650
  %bf.lshr253 = lshr i32 %bf.load252, 16, !dbg !8650
  %bf.clear254 = and i32 %bf.lshr253, 255, !dbg !8650
  %call255 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) @emit_library_call_value(%struct.rtx_def* %call243, %struct.rtx_def* null, i32 1, i32 %bf.clear251, i32 1, %struct.rtx_def* %from.addr.4, i32 %bf.clear254) #6, !dbg !8651
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call255, metadata !8470, metadata !DIExpression()), !dbg !8636
  %call256 = tail call %struct.rtx_def* @get_insns() #6, !dbg !8652
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call256, metadata !8469, metadata !DIExpression()), !dbg !8636
  tail call void @end_sequence() #6, !dbg !8653
  %cond258 = select i1 %tobool, i32 103, i32 105, !dbg !8654
  %bf.load259 = load i32, i32* %1, align 8, !dbg !8654
  %bf.lshr260 = lshr i32 %bf.load259, 16, !dbg !8654
  %bf.clear261 = and i32 %bf.lshr260, 255, !dbg !8654
  %call262 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %cond258, i32 %bf.clear261, %struct.rtx_def* %from.addr.4) #6, !dbg !8654
  tail call void @emit_libcall_block(%struct.rtx_def* %call256, %struct.rtx_def* %target.0.lcssa, %struct.rtx_def* %call255, %struct.rtx_def* %call262) #8, !dbg !8655
  br label %done, !dbg !8656

done:                                             ; preds = %cleanup217, %cond.end247
  %target.7 = phi %struct.rtx_def* [ %target.6, %cleanup217 ], [ %target.0.lcssa, %cond.end247 ], !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.7, metadata !8443, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.label(metadata !8472), !dbg !8657
  %cmp264 = icmp eq %struct.rtx_def* %target.7, %to, !dbg !8658
  br i1 %cmp264, label %cleanup.cont285, label %if.then266, !dbg !8660

if.then266:                                       ; preds = %done
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.7, i64 0, i32 0, !dbg !8661
  %bf.load267 = load i32, i32* %29, align 8, !dbg !8661
  %bf.load270 = load i32, i32* %1, align 8, !dbg !8664
  %bf.lshr2682 = xor i32 %bf.load267, %bf.load270, !dbg !8665
  %30 = and i32 %bf.lshr2682, 16711680, !dbg !8665
  %cmp273 = icmp eq i32 %30, 0, !dbg !8665
  br i1 %cmp273, label %if.then275, label %if.else, !dbg !8666

if.then275:                                       ; preds = %if.then266
  %call276 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to, %struct.rtx_def* %target.7) #6, !dbg !8667
  br label %cleanup.cont285, !dbg !8667

if.else:                                          ; preds = %if.then266
  call void @convert_move(%struct.rtx_def* %to, %struct.rtx_def* %target.7, i32 0) #6, !dbg !8668
  br label %cleanup.cont285

cleanup.cont285.loopexit.us-lcssa:                ; preds = %cleanup
  br label %cleanup.cont285.loopexit, !dbg !8536

cleanup.cont285.loopexit:                         ; preds = %cleanup.cont285.loopexit.us-lcssa.us, %cleanup.cont285.loopexit.us-lcssa
  br label %cleanup.cont285, !dbg !8536

cleanup.cont285:                                  ; preds = %cleanup.cont285.loopexit, %done, %if.then275, %if.else
  ret void, !dbg !8536
}

declare dso_local i32 @significand_size(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @can_float_p(i32 %fltmode, i32 %fixmode, i32 %unsignedp) unnamed_addr #4 !dbg !8669 {
entry:
  call void @llvm.dbg.value(metadata i32 %fltmode, metadata !8671, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata i32 %fixmode, metadata !8672, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8673, metadata !DIExpression()), !dbg !8675
  %tobool = icmp eq i32 %unsignedp, 0, !dbg !8676
  %cond = select i1 %tobool, %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 7), %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 8), !dbg !8676
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %cond, metadata !8674, metadata !DIExpression()), !dbg !8675
  %idxprom = sext i32 %fltmode to i64, !dbg !8677
  %idxprom1 = sext i32 %fixmode to i64, !dbg !8677
  %insn_code = getelementptr inbounds %struct.convert_optab_d, %struct.convert_optab_d* %cond, i64 0, i32 3, i64 %idxprom, i64 %idxprom1, i32 0, !dbg !8678
  %0 = load i32, i32* %insn_code, align 4, !dbg !8678
  ret i32 %0, !dbg !8679
}

declare dso_local %struct.rtx_def* @gen_jump(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @real_2expN(%struct.real_value*, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @expand_fix(%struct.rtx_def* %to, %struct.rtx_def* %from, i32 %unsignedp) local_unnamed_addr #4 !dbg !8680 {
entry:
  %must_trunc = alloca i32, align 4
  %offset = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !8682, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8684, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !8686, metadata !DIExpression()), !dbg !8719
  %0 = bitcast i32* %must_trunc to i8*, !dbg !8720
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !8720
  call void @llvm.dbg.value(metadata i32 0, metadata !8689, metadata !DIExpression()), !dbg !8719
  store i32 0, i32* %must_trunc, align 4, !dbg !8721
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 0, !dbg !8722
  %bf.load = load i32, i32* %1, align 8, !dbg !8722
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8722
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8722
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !8687, metadata !DIExpression()), !dbg !8719
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 0, !dbg !8723
  %tobool = icmp eq i32 %unsignedp, 0, !dbg !8724
  br label %for.cond, !dbg !8726

for.cond:                                         ; preds = %for.inc54, %entry
  %fmode.0 = phi i32 [ %bf.clear, %entry ], [ %conv57, %for.inc54 ], !dbg !8727
  %target.0 = phi %struct.rtx_def* [ %to, %entry ], [ %target.1.lcssa, %for.inc54 ], !dbg !8728
  %from.addr.0 = phi %struct.rtx_def* [ %from, %entry ], [ %from.addr.1.lcssa, %for.inc54 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.0, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 %fmode.0, metadata !8687, metadata !DIExpression()), !dbg !8719
  %cmp = icmp eq i32 %fmode.0, 0, !dbg !8729
  br i1 %cmp, label %for.end58, label %for.body, !dbg !8730

for.body:                                         ; preds = %for.cond
  %bf.load1 = load i32, i32* %2, align 8, !dbg !8731
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !8731
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !8731
  call void @llvm.dbg.value(metadata i32 %bf.clear3, metadata !8688, metadata !DIExpression()), !dbg !8719
  br i1 %tobool, label %for.body.for.body.split_crit_edge, label %for.body.split.us, !dbg !8732

for.body.for.body.split_crit_edge:                ; preds = %for.body
  br label %for.cond4, !dbg !8732

for.body.split.us:                                ; preds = %for.body
  br label %for.cond4.us, !dbg !8732

for.cond4.us:                                     ; preds = %for.inc.us, %for.body.split.us
  %imode.0.us = phi i32 [ %bf.clear3, %for.body.split.us ], [ %conv.us, %for.inc.us ], !dbg !8723
  %target.1.us = phi %struct.rtx_def* [ %target.0, %for.body.split.us ], [ %target.4.us, %for.inc.us ], !dbg !8719
  %from.addr.1.us = phi %struct.rtx_def* [ %from.addr.0, %for.body.split.us ], [ %from.addr.5.us, %for.inc.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.us, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.us, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 %imode.0.us, metadata !8688, metadata !DIExpression()), !dbg !8719
  %cmp5.us = icmp eq i32 %imode.0.us, 0, !dbg !8733
  br i1 %cmp5.us, label %for.inc54.us-lcssa.us, label %for.body6.us, !dbg !8734

for.body6.us:                                     ; preds = %for.cond4.us
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8690, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i32* %must_trunc, metadata !8689, metadata !DIExpression(DW_OP_deref)), !dbg !8719
  %call.us = call fastcc i32 @can_fix_p(i32 %imode.0.us, i32 %fmode.0, i32 %unsignedp, i32* nonnull %must_trunc) #8, !dbg !8736
  call void @llvm.dbg.value(metadata i32 %call.us, metadata !8685, metadata !DIExpression()), !dbg !8719
  %cmp7.us = icmp eq i32 %call.us, 2956, !dbg !8737
  br i1 %cmp7.us, label %land.lhs.true.us, label %if.end.us, !dbg !8738

land.lhs.true.us:                                 ; preds = %for.body6.us
  %bf.load8.us = load i32, i32* %2, align 8, !dbg !8739
  %bf.lshr9.us = lshr i32 %bf.load8.us, 16, !dbg !8739
  %bf.clear10.us = and i32 %bf.lshr9.us, 255, !dbg !8739
  %cmp11.us = icmp eq i32 %imode.0.us, %bf.clear10.us, !dbg !8740
  br i1 %cmp11.us, label %if.end.us, label %if.then.us, !dbg !8741

if.then.us:                                       ; preds = %land.lhs.true.us
  call void @llvm.dbg.value(metadata i32* %must_trunc, metadata !8689, metadata !DIExpression(DW_OP_deref)), !dbg !8719
  %call13.us = call fastcc i32 @can_fix_p(i32 %imode.0.us, i32 %fmode.0, i32 0, i32* nonnull %must_trunc) #8, !dbg !8742
  call void @llvm.dbg.value(metadata i32 %call13.us, metadata !8685, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 0, metadata !8690, metadata !DIExpression()), !dbg !8735
  br label %if.end.us, !dbg !8743

if.end.us:                                        ; preds = %land.lhs.true.us, %if.then.us, %for.body6.us
  %icode.0.us = phi i32 [ %call13.us, %if.then.us ], [ 2956, %land.lhs.true.us ], [ %call.us, %for.body6.us ], !dbg !8735
  %doing_unsigned.0.us = phi i32 [ 0, %if.then.us ], [ %unsignedp, %land.lhs.true.us ], [ %unsignedp, %for.body6.us ], !dbg !8735
  call void @llvm.dbg.value(metadata i32 %doing_unsigned.0.us, metadata !8690, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i32 %icode.0.us, metadata !8685, metadata !DIExpression()), !dbg !8719
  %cmp14.us = icmp eq i32 %icode.0.us, 2956, !dbg !8744
  br i1 %cmp14.us, label %if.end50.us, label %if.then15.us, !dbg !8745

if.then15.us:                                     ; preds = %if.end.us
  %call16.us = call %struct.rtx_def* @get_last_insn() #6, !dbg !8746
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call16.us, metadata !8696, metadata !DIExpression()), !dbg !8747
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.1.us, i64 0, i32 0, !dbg !8748
  %bf.load17.us = load i32, i32* %3, align 8, !dbg !8748
  %bf.lshr18.us = lshr i32 %bf.load17.us, 16, !dbg !8748
  %bf.clear19.us = and i32 %bf.lshr18.us, 255, !dbg !8748
  %cmp20.us = icmp eq i32 %fmode.0, %bf.clear19.us, !dbg !8750
  br i1 %cmp20.us, label %if.end23.us, label %if.then21.us, !dbg !8751

if.then21.us:                                     ; preds = %if.then15.us
  %call22.us = call %struct.rtx_def* @convert_to_mode(i32 %fmode.0, %struct.rtx_def* %from.addr.1.us, i32 0) #6, !dbg !8752
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22.us, metadata !8683, metadata !DIExpression()), !dbg !8719
  br label %if.end23.us, !dbg !8753

if.end23.us:                                      ; preds = %if.then21.us, %if.then15.us
  %from.addr.2.us = phi %struct.rtx_def* [ %call22.us, %if.then21.us ], [ %from.addr.1.us, %if.then15.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.2.us, metadata !8683, metadata !DIExpression()), !dbg !8719
  %4 = load i32, i32* %must_trunc, align 4, !dbg !8754
  call void @llvm.dbg.value(metadata i32 %4, metadata !8689, metadata !DIExpression()), !dbg !8719
  %tobool24.us = icmp eq i32 %4, 0, !dbg !8754
  br i1 %tobool24.us, label %if.end34.us, label %if.then25.us, !dbg !8755

if.then25.us:                                     ; preds = %if.end23.us
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.2.us, i64 0, i32 0, !dbg !8756
  %bf.load26.us = load i32, i32* %5, align 8, !dbg !8756
  %bf.lshr27.us = lshr i32 %bf.load26.us, 16, !dbg !8756
  %bf.clear28.us = and i32 %bf.lshr27.us, 255, !dbg !8756
  %call29.us = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear28.us) #6, !dbg !8757
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call29.us, metadata !8699, metadata !DIExpression()), !dbg !8758
  %bf.load30.us = load i32, i32* %5, align 8, !dbg !8759
  %bf.lshr31.us = lshr i32 %bf.load30.us, 16, !dbg !8759
  %bf.clear32.us = and i32 %bf.lshr31.us, 255, !dbg !8759
  %call33.us = call %struct.rtx_def* @expand_unop(i32 %bf.clear32.us, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 40), %struct.rtx_def* %from.addr.2.us, %struct.rtx_def* %call29.us, i32 0) #8, !dbg !8760
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call33.us, metadata !8683, metadata !DIExpression()), !dbg !8719
  br label %if.end34.us, !dbg !8761

if.end34.us:                                      ; preds = %if.then25.us, %if.end23.us
  %from.addr.3.us = phi %struct.rtx_def* [ %call33.us, %if.then25.us ], [ %from.addr.2.us, %if.end23.us ], !dbg !8747
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.3.us, metadata !8683, metadata !DIExpression()), !dbg !8719
  %bf.load35.us = load i32, i32* %2, align 8, !dbg !8762
  %bf.lshr36.us = lshr i32 %bf.load35.us, 16, !dbg !8762
  %bf.clear37.us = and i32 %bf.lshr36.us, 255, !dbg !8762
  %cmp38.us = icmp eq i32 %imode.0.us, %bf.clear37.us, !dbg !8764
  br i1 %cmp38.us, label %if.end41.us, label %if.then39.us, !dbg !8765

if.then39.us:                                     ; preds = %if.end34.us
  %call40.us = call %struct.rtx_def* @gen_reg_rtx(i32 %imode.0.us) #6, !dbg !8766
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40.us, metadata !8686, metadata !DIExpression()), !dbg !8719
  br label %if.end41.us, !dbg !8767

if.end41.us:                                      ; preds = %if.then39.us, %if.end34.us
  %target.2.us = phi %struct.rtx_def* [ %call40.us, %if.then39.us ], [ %target.1.us, %if.end34.us ], !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.2.us, metadata !8686, metadata !DIExpression()), !dbg !8719
  %tobool42.us = icmp eq i32 %doing_unsigned.0.us, 0, !dbg !8768
  %cond.us = select i1 %tobool42.us, i32 104, i32 106, !dbg !8768
  %call43.us = call zeroext i8 @maybe_emit_unop_insn(i32 %icode.0.us, %struct.rtx_def* %target.2.us, %struct.rtx_def* %from.addr.3.us, i32 %cond.us) #8, !dbg !8770
  %tobool44.us = icmp eq i8 %call43.us, 0, !dbg !8770
  br i1 %tobool44.us, label %if.end49.us, label %if.then45.us, !dbg !8771

if.then45.us:                                     ; preds = %if.end41.us
  %cmp46.us = icmp eq %struct.rtx_def* %target.2.us, %to, !dbg !8772
  br i1 %cmp46.us, label %cleanup.us, label %if.then47.us, !dbg !8775

if.then47.us:                                     ; preds = %if.then45.us
  call void @convert_move(%struct.rtx_def* %to, %struct.rtx_def* %target.2.us, i32 %unsignedp) #6, !dbg !8776
  br label %cleanup.us, !dbg !8776

if.end49.us:                                      ; preds = %if.end41.us
  call void @delete_insns_since(%struct.rtx_def* %call16.us) #6, !dbg !8777
  br label %cleanup.us, !dbg !8778

cleanup.us:                                       ; preds = %if.end49.us, %if.then47.us, %if.then45.us
  %cleanup.dest.slot.0.us = phi i32 [ 0, %if.end49.us ], [ 1, %if.then47.us ], [ 1, %if.then45.us ]
  %cond2.us = icmp eq i32 %cleanup.dest.slot.0.us, 0
  br i1 %cond2.us, label %if.end50.us, label %cleanup51.us

if.end50.us:                                      ; preds = %cleanup.us, %if.end.us
  %target.3.us = phi %struct.rtx_def* [ %target.1.us, %if.end.us ], [ %target.2.us, %cleanup.us ], !dbg !8719
  %from.addr.4.us = phi %struct.rtx_def* [ %from.addr.1.us, %if.end.us ], [ %from.addr.3.us, %cleanup.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.us, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.3.us, metadata !8686, metadata !DIExpression()), !dbg !8719
  br label %cleanup51.us, !dbg !8779

cleanup51.us:                                     ; preds = %if.end50.us, %cleanup.us
  %target.4.us = phi %struct.rtx_def* [ %target.2.us, %cleanup.us ], [ %target.3.us, %if.end50.us ], !dbg !8780
  %from.addr.5.us = phi %struct.rtx_def* [ %from.addr.3.us, %cleanup.us ], [ %from.addr.4.us, %if.end50.us ], !dbg !8781
  %cleanup.dest.slot.1.us = phi i32 [ %cleanup.dest.slot.0.us, %cleanup.us ], [ 0, %if.end50.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.5.us, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.4.us, metadata !8686, metadata !DIExpression()), !dbg !8719
  %cond1.us = icmp eq i32 %cleanup.dest.slot.1.us, 0
  br i1 %cond1.us, label %for.inc.us, label %cleanup243.loopexit.us-lcssa.us

for.inc.us:                                       ; preds = %cleanup51.us
  %idxprom.us = zext i32 %imode.0.us to i64, !dbg !8782
  %arrayidx.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom.us, !dbg !8782
  %6 = load i8, i8* %arrayidx.us, align 1, !dbg !8782
  %conv.us = zext i8 %6 to i32, !dbg !8782
  call void @llvm.dbg.value(metadata i32 %conv.us, metadata !8688, metadata !DIExpression()), !dbg !8719
  br label %for.cond4.us, !dbg !8783, !llvm.loop !8784

for.inc54.us-lcssa.us:                            ; preds = %for.cond4.us
  %target.1.us.lcssa = phi %struct.rtx_def* [ %target.1.us, %for.cond4.us ], !dbg !8719
  %from.addr.1.us.lcssa = phi %struct.rtx_def* [ %from.addr.1.us, %for.cond4.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.us.lcssa, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.us.lcssa, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.us.lcssa, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.us.lcssa, metadata !8683, metadata !DIExpression()), !dbg !8719
  br label %for.inc54, !dbg !8786

cleanup243.loopexit.us-lcssa.us:                  ; preds = %cleanup51.us
  br label %cleanup243.loopexit, !dbg !8787

for.cond4:                                        ; preds = %for.inc, %for.body.for.body.split_crit_edge
  %imode.0 = phi i32 [ %bf.clear3, %for.body.for.body.split_crit_edge ], [ %conv, %for.inc ], !dbg !8723
  %target.1 = phi %struct.rtx_def* [ %target.0, %for.body.for.body.split_crit_edge ], [ %target.4, %for.inc ], !dbg !8719
  %from.addr.1 = phi %struct.rtx_def* [ %from.addr.0, %for.body.for.body.split_crit_edge ], [ %from.addr.5, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 %imode.0, metadata !8688, metadata !DIExpression()), !dbg !8719
  %cmp5 = icmp eq i32 %imode.0, 0, !dbg !8733
  br i1 %cmp5, label %for.inc54.us-lcssa, label %for.body6, !dbg !8734

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8690, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i32* %must_trunc, metadata !8689, metadata !DIExpression(DW_OP_deref)), !dbg !8719
  %call = call fastcc i32 @can_fix_p(i32 %imode.0, i32 %fmode.0, i32 0, i32* nonnull %must_trunc) #8, !dbg !8736
  call void @llvm.dbg.value(metadata i32 %call, metadata !8685, metadata !DIExpression()), !dbg !8719
  br label %if.end, !dbg !8738

land.lhs.true:                                    ; No predecessors!
  unreachable, !dbg !8741

if.end:                                           ; preds = %for.body6
  %cmp7 = icmp eq i32 %call, 2956, !dbg !8737
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8690, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i32 %call, metadata !8685, metadata !DIExpression()), !dbg !8719
  br i1 %cmp7, label %if.end50, label %if.then15, !dbg !8745

if.then15:                                        ; preds = %if.end
  %call16 = call %struct.rtx_def* @get_last_insn() #6, !dbg !8746
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call16, metadata !8696, metadata !DIExpression()), !dbg !8747
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.1, i64 0, i32 0, !dbg !8748
  %bf.load17 = load i32, i32* %7, align 8, !dbg !8748
  %bf.lshr18 = lshr i32 %bf.load17, 16, !dbg !8748
  %bf.clear19 = and i32 %bf.lshr18, 255, !dbg !8748
  %cmp20 = icmp eq i32 %fmode.0, %bf.clear19, !dbg !8750
  br i1 %cmp20, label %if.end23, label %if.then21, !dbg !8751

if.then21:                                        ; preds = %if.then15
  %call22 = call %struct.rtx_def* @convert_to_mode(i32 %fmode.0, %struct.rtx_def* %from.addr.1, i32 0) #6, !dbg !8752
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !8683, metadata !DIExpression()), !dbg !8719
  br label %if.end23, !dbg !8753

if.end23:                                         ; preds = %if.then15, %if.then21
  %from.addr.2 = phi %struct.rtx_def* [ %call22, %if.then21 ], [ %from.addr.1, %if.then15 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.2, metadata !8683, metadata !DIExpression()), !dbg !8719
  %8 = load i32, i32* %must_trunc, align 4, !dbg !8754
  call void @llvm.dbg.value(metadata i32 %8, metadata !8689, metadata !DIExpression()), !dbg !8719
  %tobool24 = icmp eq i32 %8, 0, !dbg !8754
  br i1 %tobool24, label %if.end34, label %if.then25, !dbg !8755

if.then25:                                        ; preds = %if.end23
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.2, i64 0, i32 0, !dbg !8756
  %bf.load26 = load i32, i32* %9, align 8, !dbg !8756
  %bf.lshr27 = lshr i32 %bf.load26, 16, !dbg !8756
  %bf.clear28 = and i32 %bf.lshr27, 255, !dbg !8756
  %call29 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear28) #6, !dbg !8757
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call29, metadata !8699, metadata !DIExpression()), !dbg !8758
  %bf.load30 = load i32, i32* %9, align 8, !dbg !8759
  %bf.lshr31 = lshr i32 %bf.load30, 16, !dbg !8759
  %bf.clear32 = and i32 %bf.lshr31, 255, !dbg !8759
  %call33 = call %struct.rtx_def* @expand_unop(i32 %bf.clear32, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 40), %struct.rtx_def* %from.addr.2, %struct.rtx_def* %call29, i32 0) #8, !dbg !8760
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call33, metadata !8683, metadata !DIExpression()), !dbg !8719
  br label %if.end34, !dbg !8761

if.end34:                                         ; preds = %if.end23, %if.then25
  %from.addr.3 = phi %struct.rtx_def* [ %call33, %if.then25 ], [ %from.addr.2, %if.end23 ], !dbg !8747
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.3, metadata !8683, metadata !DIExpression()), !dbg !8719
  %bf.load35 = load i32, i32* %2, align 8, !dbg !8762
  %bf.lshr36 = lshr i32 %bf.load35, 16, !dbg !8762
  %bf.clear37 = and i32 %bf.lshr36, 255, !dbg !8762
  %cmp38 = icmp eq i32 %imode.0, %bf.clear37, !dbg !8764
  br i1 %cmp38, label %if.end41, label %if.then39, !dbg !8765

if.then39:                                        ; preds = %if.end34
  %call40 = call %struct.rtx_def* @gen_reg_rtx(i32 %imode.0) #6, !dbg !8766
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40, metadata !8686, metadata !DIExpression()), !dbg !8719
  br label %if.end41, !dbg !8767

if.end41:                                         ; preds = %if.end34, %if.then39
  %target.2 = phi %struct.rtx_def* [ %call40, %if.then39 ], [ %target.1, %if.end34 ], !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.2, metadata !8686, metadata !DIExpression()), !dbg !8719
  %call43 = call zeroext i8 @maybe_emit_unop_insn(i32 %call, %struct.rtx_def* %target.2, %struct.rtx_def* %from.addr.3, i32 104) #8, !dbg !8770
  %tobool44 = icmp eq i8 %call43, 0, !dbg !8770
  br i1 %tobool44, label %if.end49, label %if.then45, !dbg !8771

if.then45:                                        ; preds = %if.end41
  %cmp46 = icmp eq %struct.rtx_def* %target.2, %to, !dbg !8772
  br i1 %cmp46, label %cleanup, label %if.then47, !dbg !8775

if.then47:                                        ; preds = %if.then45
  call void @convert_move(%struct.rtx_def* %to, %struct.rtx_def* %target.2, i32 0) #6, !dbg !8776
  br label %cleanup, !dbg !8776

if.end49:                                         ; preds = %if.end41
  call void @delete_insns_since(%struct.rtx_def* %call16) #6, !dbg !8777
  br label %cleanup, !dbg !8778

cleanup:                                          ; preds = %if.then45, %if.then47, %if.end49
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end49 ], [ 1, %if.then47 ], [ 1, %if.then45 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %if.end50, label %cleanup51

if.end50:                                         ; preds = %if.end, %cleanup
  %target.3 = phi %struct.rtx_def* [ %target.1, %if.end ], [ %target.2, %cleanup ], !dbg !8719
  %from.addr.4 = phi %struct.rtx_def* [ %from.addr.1, %if.end ], [ %from.addr.3, %cleanup ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.3, metadata !8686, metadata !DIExpression()), !dbg !8719
  br label %cleanup51, !dbg !8779

cleanup51:                                        ; preds = %cleanup, %if.end50
  %target.4 = phi %struct.rtx_def* [ %target.2, %cleanup ], [ %target.3, %if.end50 ], !dbg !8780
  %from.addr.5 = phi %struct.rtx_def* [ %from.addr.3, %cleanup ], [ %from.addr.4, %if.end50 ], !dbg !8781
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end50 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.5, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.4, metadata !8686, metadata !DIExpression()), !dbg !8719
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %for.inc, label %cleanup243.loopexit.us-lcssa

for.inc:                                          ; preds = %cleanup51
  %idxprom = zext i32 %imode.0 to i64, !dbg !8782
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !8782
  %10 = load i8, i8* %arrayidx, align 1, !dbg !8782
  %conv = zext i8 %10 to i32, !dbg !8782
  call void @llvm.dbg.value(metadata i32 %conv, metadata !8688, metadata !DIExpression()), !dbg !8719
  br label %for.cond4, !dbg !8783, !llvm.loop !8784

for.inc54.us-lcssa:                               ; preds = %for.cond4
  %target.1.lcssa35 = phi %struct.rtx_def* [ %target.1, %for.cond4 ], !dbg !8719
  %from.addr.1.lcssa33 = phi %struct.rtx_def* [ %from.addr.1, %for.cond4 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.lcssa35, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.lcssa33, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.lcssa35, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.lcssa33, metadata !8683, metadata !DIExpression()), !dbg !8719
  br label %for.inc54, !dbg !8786

for.inc54:                                        ; preds = %for.inc54.us-lcssa.us, %for.inc54.us-lcssa
  %target.1.lcssa = phi %struct.rtx_def* [ %target.1.lcssa35, %for.inc54.us-lcssa ], [ %target.1.us.lcssa, %for.inc54.us-lcssa.us ], !dbg !8719
  %from.addr.1.lcssa = phi %struct.rtx_def* [ %from.addr.1.lcssa33, %for.inc54.us-lcssa ], [ %from.addr.1.us.lcssa, %for.inc54.us-lcssa.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.lcssa, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.lcssa, metadata !8683, metadata !DIExpression()), !dbg !8719
  %idxprom55 = zext i32 %fmode.0 to i64, !dbg !8786
  %arrayidx56 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom55, !dbg !8786
  %11 = load i8, i8* %arrayidx56, align 1, !dbg !8786
  %conv57 = zext i8 %11 to i32, !dbg !8786
  call void @llvm.dbg.value(metadata i32 %conv57, metadata !8687, metadata !DIExpression()), !dbg !8719
  br label %for.cond, !dbg !8788, !llvm.loop !8789

for.end58:                                        ; preds = %for.cond
  %target.0.lcssa = phi %struct.rtx_def* [ %target.0, %for.cond ], !dbg !8728
  %from.addr.0.lcssa = phi %struct.rtx_def* [ %from.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.0.lcssa, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.0.lcssa, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.0.lcssa, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa, metadata !8683, metadata !DIExpression()), !dbg !8719
  br i1 %tobool, label %if.end187, label %land.lhs.true60, !dbg !8791

land.lhs.true60:                                  ; preds = %for.end58
  %bf.load61 = load i32, i32* %2, align 8, !dbg !8792
  %bf.lshr62 = lshr i32 %bf.load61, 16, !dbg !8792
  %bf.clear63 = and i32 %bf.lshr62, 255, !dbg !8792
  %idxprom64 = zext i32 %bf.clear63 to i64, !dbg !8792
  %arrayidx65 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom64, !dbg !8792
  %12 = load i8, i8* %arrayidx65, align 1, !dbg !8792
  %cmp70 = icmp ult i8 %12, 9, !dbg !8793
  br i1 %cmp70, label %if.then72, label %if.end187, !dbg !8794

if.then72:                                        ; preds = %land.lhs.true60
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.0.lcssa, i64 0, i32 0, !dbg !8795
  %bf.load73 = load i32, i32* %13, align 8, !dbg !8795
  %bf.lshr74 = lshr i32 %bf.load73, 16, !dbg !8795
  %bf.clear75 = and i32 %bf.lshr74, 255, !dbg !8795
  call void @llvm.dbg.value(metadata i32 %bf.clear75, metadata !8687, metadata !DIExpression()), !dbg !8719
  br label %for.cond76, !dbg !8796

for.cond76:                                       ; preds = %for.inc182, %if.then72
  %fmode.1 = phi i32 [ %bf.clear75, %if.then72 ], [ %conv185, %for.inc182 ], !dbg !8797
  call void @llvm.dbg.value(metadata i32 %fmode.1, metadata !8687, metadata !DIExpression()), !dbg !8719
  %cmp77 = icmp eq i32 %fmode.1, 0, !dbg !8798
  br i1 %cmp77, label %if.end187.loopexit, label %for.body79, !dbg !8799

for.body79:                                       ; preds = %for.cond76
  %bf.load80 = load i32, i32* %2, align 8, !dbg !8800
  %bf.lshr81 = lshr i32 %bf.load80, 16, !dbg !8800
  %bf.clear82 = and i32 %bf.lshr81, 255, !dbg !8800
  call void @llvm.dbg.value(metadata i32* %must_trunc, metadata !8689, metadata !DIExpression(DW_OP_deref)), !dbg !8719
  %call83 = call fastcc i32 @can_fix_p(i32 %bf.clear82, i32 %fmode.1, i32 0, i32* nonnull %must_trunc) #8, !dbg !8801
  %cmp84 = icmp eq i32 %call83, 2956, !dbg !8802
  br i1 %cmp84, label %for.body79.for.inc182_crit_edge, label %land.lhs.true86, !dbg !8803

for.body79.for.inc182_crit_edge:                  ; preds = %for.body79
  %.pre13 = zext i32 %fmode.1 to i64, !dbg !8804
  br label %for.inc182, !dbg !8803

land.lhs.true86:                                  ; preds = %for.body79
  %idxprom87 = zext i32 %fmode.1 to i64, !dbg !8805
  %arrayidx88 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom87, !dbg !8805
  %14 = load i8, i8* %arrayidx88, align 1, !dbg !8805
  %cmp90 = icmp eq i8 %14, 9, !dbg !8805
  br i1 %cmp90, label %lor.lhs.false, label %land.lhs.true86.if.then111_crit_edge, !dbg !8806

land.lhs.true86.if.then111_crit_edge:             ; preds = %land.lhs.true86
  %fmode.1.lcssa28 = phi i32 [ %fmode.1, %land.lhs.true86 ], !dbg !8797
  call void @llvm.dbg.value(metadata i32 %fmode.1.lcssa28, metadata !8687, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 %fmode.1.lcssa28, metadata !8687, metadata !DIExpression()), !dbg !8719
  %bf.load112.pre = load i32, i32* %2, align 8, !dbg !8807
  %.pre = lshr i32 %bf.load112.pre, 16, !dbg !8807
  %.pre11 = and i32 %.pre, 255, !dbg !8807
  %.pre12 = zext i32 %.pre11 to i64, !dbg !8807
  br label %if.then111, !dbg !8806

lor.lhs.false:                                    ; preds = %land.lhs.true86
  %arrayidx93 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom87, !dbg !8808
  %15 = load i8, i8* %arrayidx93, align 1, !dbg !8808
  %bf.load99 = load i32, i32* %2, align 8, !dbg !8809
  %bf.lshr100 = lshr i32 %bf.load99, 16, !dbg !8809
  %bf.clear101 = and i32 %bf.lshr100, 255, !dbg !8809
  %idxprom102 = zext i32 %bf.clear101 to i64, !dbg !8809
  %arrayidx103 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom102, !dbg !8809
  %16 = load i8, i8* %arrayidx103, align 1, !dbg !8809
  %cmp109 = icmp ugt i8 %15, %16, !dbg !8810
  br i1 %cmp109, label %if.then111.loopexit, label %for.inc182, !dbg !8811

if.then111.loopexit:                              ; preds = %lor.lhs.false
  %idxprom102.lcssa = phi i64 [ %idxprom102, %lor.lhs.false ], !dbg !8809
  %fmode.1.lcssa29 = phi i32 [ %fmode.1, %lor.lhs.false ], !dbg !8797
  call void @llvm.dbg.value(metadata i32 %fmode.1.lcssa29, metadata !8687, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 %fmode.1.lcssa29, metadata !8687, metadata !DIExpression()), !dbg !8719
  br label %if.then111, !dbg !8812

if.then111:                                       ; preds = %if.then111.loopexit, %land.lhs.true86.if.then111_crit_edge
  %fmode.130 = phi i32 [ %fmode.1.lcssa28, %land.lhs.true86.if.then111_crit_edge ], [ %fmode.1.lcssa29, %if.then111.loopexit ]
  %idxprom115.pre-phi = phi i64 [ %.pre12, %land.lhs.true86.if.then111_crit_edge ], [ %idxprom102.lcssa, %if.then111.loopexit ], !dbg !8807
  call void @llvm.dbg.value(metadata i32 %fmode.130, metadata !8687, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 %fmode.130, metadata !8687, metadata !DIExpression()), !dbg !8719
  %17 = bitcast %struct.real_value* %offset to i8*, !dbg !8812
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #7, !dbg !8812
  %arrayidx116 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom115.pre-phi, !dbg !8807
  %18 = load i8, i8* %arrayidx116, align 1, !dbg !8807
  %conv118 = zext i8 %18 to i32, !dbg !8807
  %mul119 = shl nuw nsw i32 %conv118, 3, !dbg !8807
  call void @llvm.dbg.value(metadata i32 %mul119, metadata !8702, metadata !DIExpression()), !dbg !8813
  %sub = add nsw i32 %mul119, -1, !dbg !8814
  call void @llvm.dbg.value(metadata %struct.real_value* %offset, metadata !8708, metadata !DIExpression(DW_OP_deref)), !dbg !8813
  call void @real_2expN(%struct.real_value* nonnull %offset, i32 %sub, i32 %fmode.130) #6, !dbg !8815
  call void @llvm.dbg.value(metadata %struct.real_value* %offset, metadata !8708, metadata !DIExpression(DW_OP_deref)), !dbg !8813
  %call122 = call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* nonnull byval(%struct.real_value) align 8 %offset, i32 %fmode.130) #6, !dbg !8816
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call122, metadata !8709, metadata !DIExpression()), !dbg !8813
  %call123 = call %struct.rtx_def* @gen_label_rtx() #6, !dbg !8817
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call123, metadata !8710, metadata !DIExpression()), !dbg !8813
  %call124 = call %struct.rtx_def* @gen_label_rtx() #6, !dbg !8818
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call124, metadata !8711, metadata !DIExpression()), !dbg !8813
  %bf.load125 = load i32, i32* %13, align 8, !dbg !8819
  %bf.lshr126 = lshr i32 %bf.load125, 16, !dbg !8819
  %bf.clear127 = and i32 %bf.lshr126, 255, !dbg !8819
  %cmp128 = icmp eq i32 %fmode.130, %bf.clear127, !dbg !8821
  br i1 %cmp128, label %if.end132, label %if.then130, !dbg !8822

if.then130:                                       ; preds = %if.then111
  %call131 = call %struct.rtx_def* @convert_to_mode(i32 %fmode.130, %struct.rtx_def* %from.addr.0.lcssa, i32 0) #6, !dbg !8823
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call131, metadata !8683, metadata !DIExpression()), !dbg !8719
  br label %if.end132, !dbg !8824

if.end132:                                        ; preds = %if.then111, %if.then130
  %from.addr.6 = phi %struct.rtx_def* [ %call131, %if.then130 ], [ %from.addr.0.lcssa, %if.then111 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.6, metadata !8683, metadata !DIExpression()), !dbg !8719
  call void @do_pending_stack_adjust() #6, !dbg !8825
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.6, i64 0, i32 0, !dbg !8826
  %bf.load133 = load i32, i32* %19, align 8, !dbg !8826
  %bf.lshr134 = lshr i32 %bf.load133, 16, !dbg !8826
  %bf.clear135 = and i32 %bf.lshr134, 255, !dbg !8826
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %from.addr.6, %struct.rtx_def* %call122, i32 82, %struct.rtx_def* null, i32 %bf.clear135, i32 0, %struct.rtx_def* %call123) #8, !dbg !8827
  call void @expand_fix(%struct.rtx_def* %to, %struct.rtx_def* %from.addr.6, i32 0) #8, !dbg !8828
  %call136 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call124) #6, !dbg !8829
  %call137 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call136) #6, !dbg !8830
  %call138 = call %struct.rtx_def* @emit_barrier() #6, !dbg !8831
  %call139 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call123) #6, !dbg !8832
  %bf.load140 = load i32, i32* %19, align 8, !dbg !8833
  %bf.lshr141 = lshr i32 %bf.load140, 16, !dbg !8833
  %bf.clear142 = and i32 %bf.lshr141, 255, !dbg !8833
  %call143 = call %struct.rtx_def* @expand_binop(i32 %bf.clear142, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.rtx_def* %from.addr.6, %struct.rtx_def* %call122, %struct.rtx_def* null, i32 0, i32 3) #8, !dbg !8834
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call143, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @expand_fix(%struct.rtx_def* %to, %struct.rtx_def* %call143, i32 0) #8, !dbg !8835
  %bf.load144 = load i32, i32* %2, align 8, !dbg !8836
  %bf.lshr145 = lshr i32 %bf.load144, 16, !dbg !8836
  %bf.clear146 = and i32 %bf.lshr145, 255, !dbg !8836
  %sh_prom = zext i32 %sub to i64, !dbg !8837
  %shl = shl i64 1, %sh_prom, !dbg !8837
  %call151 = call %struct.rtx_def* @gen_int_mode(i64 %shl, i32 %bf.clear146) #6, !dbg !8838
  %call152 = call %struct.rtx_def* @expand_binop(i32 %bf.clear146, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), %struct.rtx_def* %to, %struct.rtx_def* %call151, %struct.rtx_def* %to, i32 1, i32 3) #8, !dbg !8839
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call152, metadata !8686, metadata !DIExpression()), !dbg !8719
  %cmp153 = icmp eq %struct.rtx_def* %call152, %to, !dbg !8840
  br i1 %cmp153, label %if.end157, label %if.then155, !dbg !8842

if.then155:                                       ; preds = %if.end132
  %call156 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to, %struct.rtx_def* %call152) #6, !dbg !8843
  br label %if.end157, !dbg !8843

if.end157:                                        ; preds = %if.end132, %if.then155
  %call158 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call124) #6, !dbg !8844
  %bf.load159 = load i32, i32* %2, align 8, !dbg !8845
  %bf.lshr160 = lshr i32 %bf.load159, 16, !dbg !8845
  %bf.clear161 = and i32 %bf.lshr160, 255, !dbg !8845
  %idxprom162 = zext i32 %bf.clear161 to i64, !dbg !8845
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom162, i32 0, !dbg !8847
  %20 = load i32, i32* %insn_code, align 4, !dbg !8847
  %cmp164 = icmp eq i32 %20, 2956, !dbg !8848
  br i1 %cmp164, label %if.end174, label %if.then166, !dbg !8849

if.then166:                                       ; preds = %if.end157
  %call167 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to, %struct.rtx_def* %to) #6, !dbg !8850
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call167, metadata !8712, metadata !DIExpression()), !dbg !8813
  %bf.load168 = load i32, i32* %2, align 8, !dbg !8852
  %bf.lshr169 = lshr i32 %bf.load168, 16, !dbg !8852
  %bf.clear170 = and i32 %bf.lshr169, 255, !dbg !8852
  %call171 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %from.addr.6) #6, !dbg !8852
  %call172 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 106, i32 %bf.clear170, %struct.rtx_def* %call171) #6, !dbg !8852
  %call173 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call167, i32 4, %struct.rtx_def* %call172) #6, !dbg !8853
  br label %if.end174, !dbg !8854

if.end174:                                        ; preds = %if.end157, %if.then166
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #7, !dbg !8855
  br label %cleanup243

for.inc182:                                       ; preds = %for.body79.for.inc182_crit_edge, %lor.lhs.false
  %idxprom183.pre-phi = phi i64 [ %.pre13, %for.body79.for.inc182_crit_edge ], [ %idxprom87, %lor.lhs.false ], !dbg !8804
  %arrayidx184 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom183.pre-phi, !dbg !8804
  %21 = load i8, i8* %arrayidx184, align 1, !dbg !8804
  %conv185 = zext i8 %21 to i32, !dbg !8804
  call void @llvm.dbg.value(metadata i32 %conv185, metadata !8687, metadata !DIExpression()), !dbg !8719
  br label %for.cond76, !dbg !8856, !llvm.loop !8857

if.end187.loopexit:                               ; preds = %for.cond76
  br label %if.end187, !dbg !8859

if.end187:                                        ; preds = %if.end187.loopexit, %for.end58, %land.lhs.true60
  %from.addr.039 = phi %struct.rtx_def* [ %from.addr.0.lcssa, %if.end187.loopexit ], [ %from.addr.0.lcssa, %for.end58 ], [ %from.addr.0.lcssa, %land.lhs.true60 ]
  %bf.load188 = load i32, i32* %2, align 8, !dbg !8859
  %bf.lshr189 = lshr i32 %bf.load188, 16, !dbg !8859
  %bf.clear190 = and i32 %bf.lshr189, 255, !dbg !8859
  %idxprom191 = zext i32 %bf.clear190 to i64, !dbg !8859
  %arrayidx192 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom191, !dbg !8859
  %22 = load i8, i8* %arrayidx192, align 1, !dbg !8859
  %23 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 16), align 16, !dbg !8860
  %cmp197 = icmp ult i8 %22, %23, !dbg !8861
  br i1 %cmp197, label %if.then199, label %if.else, !dbg !8862

if.then199:                                       ; preds = %if.end187
  %call200 = call %struct.rtx_def* @gen_reg_rtx(i32 16) #6, !dbg !8863
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call200, metadata !8686, metadata !DIExpression()), !dbg !8719
  call void @expand_fix(%struct.rtx_def* %call200, %struct.rtx_def* %from.addr.039, i32 %unsignedp) #8, !dbg !8865
  br label %if.end226, !dbg !8866

if.else:                                          ; preds = %if.end187
  %cond202 = select i1 %tobool, %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 3), %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 4), !dbg !8867
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %cond202, metadata !8718, metadata !DIExpression()), !dbg !8868
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.039, i64 0, i32 0, !dbg !8869
  %bf.load206 = load i32, i32* %24, align 8, !dbg !8869
  %bf.lshr207 = lshr i32 %bf.load206, 16, !dbg !8869
  %bf.clear208 = and i32 %bf.lshr207, 255, !dbg !8869
  %call209 = call %struct.rtx_def* @convert_optab_libfunc(%struct.convert_optab_d* %cond202, i32 %bf.clear190, i32 %bf.clear208) #8, !dbg !8870
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call209, metadata !8717, metadata !DIExpression()), !dbg !8868
  %tobool210 = icmp eq %struct.rtx_def* %call209, null, !dbg !8871
  br i1 %tobool210, label %cond.true, label %cond.end, !dbg !8871

cond.true:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 5330, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8871
  br label %cond.end, !dbg !8871

cond.end:                                         ; preds = %if.else, %cond.true
  call void @start_sequence() #6, !dbg !8872
  %bf.load212 = load i32, i32* %2, align 8, !dbg !8873
  %bf.lshr213 = lshr i32 %bf.load212, 16, !dbg !8873
  %bf.clear214 = and i32 %bf.lshr213, 255, !dbg !8873
  %bf.load215 = load i32, i32* %24, align 8, !dbg !8874
  %bf.lshr216 = lshr i32 %bf.load215, 16, !dbg !8874
  %bf.clear217 = and i32 %bf.lshr216, 255, !dbg !8874
  %call218 = call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) @emit_library_call_value(%struct.rtx_def* %call209, %struct.rtx_def* null, i32 1, i32 %bf.clear214, i32 1, %struct.rtx_def* %from.addr.039, i32 %bf.clear217) #6, !dbg !8875
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call218, metadata !8716, metadata !DIExpression()), !dbg !8868
  %call219 = call %struct.rtx_def* @get_insns() #6, !dbg !8876
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call219, metadata !8713, metadata !DIExpression()), !dbg !8868
  call void @end_sequence() #6, !dbg !8877
  %cond221 = select i1 %tobool, i32 104, i32 106, !dbg !8878
  %bf.load222 = load i32, i32* %2, align 8, !dbg !8878
  %bf.lshr223 = lshr i32 %bf.load222, 16, !dbg !8878
  %bf.clear224 = and i32 %bf.lshr223, 255, !dbg !8878
  %call225 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %cond221, i32 %bf.clear224, %struct.rtx_def* %from.addr.039) #6, !dbg !8878
  call void @emit_libcall_block(%struct.rtx_def* %call219, %struct.rtx_def* %target.0.lcssa, %struct.rtx_def* %call218, %struct.rtx_def* %call225) #8, !dbg !8879
  br label %if.end226

if.end226:                                        ; preds = %cond.end, %if.then199
  %target.5 = phi %struct.rtx_def* [ %call200, %if.then199 ], [ %target.0.lcssa, %cond.end ], !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.5, metadata !8686, metadata !DIExpression()), !dbg !8719
  %cmp227 = icmp eq %struct.rtx_def* %target.5, %to, !dbg !8880
  br i1 %cmp227, label %cleanup243, label %if.then229, !dbg !8882

if.then229:                                       ; preds = %if.end226
  %bf.load230 = load i32, i32* %2, align 8, !dbg !8883
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.5, i64 0, i32 0, !dbg !8886
  %bf.load233 = load i32, i32* %25, align 8, !dbg !8886
  %bf.lshr2313 = xor i32 %bf.load230, %bf.load233, !dbg !8887
  %26 = and i32 %bf.lshr2313, 16711680, !dbg !8887
  %cmp236 = icmp eq i32 %26, 0, !dbg !8887
  br i1 %cmp236, label %if.then238, label %if.else240, !dbg !8888

if.then238:                                       ; preds = %if.then229
  %call239 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to, %struct.rtx_def* %target.5) #6, !dbg !8889
  br label %cleanup243, !dbg !8889

if.else240:                                       ; preds = %if.then229
  call void @convert_move(%struct.rtx_def* %to, %struct.rtx_def* %target.5, i32 0) #6, !dbg !8890
  br label %cleanup243

cleanup243.loopexit.us-lcssa:                     ; preds = %cleanup51
  br label %cleanup243.loopexit, !dbg !8787

cleanup243.loopexit:                              ; preds = %cleanup243.loopexit.us-lcssa.us, %cleanup243.loopexit.us-lcssa
  br label %cleanup243, !dbg !8787

cleanup243:                                       ; preds = %cleanup243.loopexit, %if.end226, %if.else240, %if.then238, %if.end174
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !8787
  ret void, !dbg !8787
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @can_fix_p(i32 %fixmode, i32 %fltmode, i32 %unsignedp, i32* %truncp_ptr) unnamed_addr #4 !dbg !8891 {
entry:
  call void @llvm.dbg.value(metadata i32 %fixmode, metadata !8896, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 %fltmode, metadata !8897, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8898, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32* %truncp_ptr, metadata !8899, metadata !DIExpression()), !dbg !8902
  %tobool = icmp eq i32 %unsignedp, 0, !dbg !8903
  %cond = select i1 %tobool, %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 5), %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 6), !dbg !8903
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %cond, metadata !8900, metadata !DIExpression()), !dbg !8902
  %idxprom = sext i32 %fixmode to i64, !dbg !8904
  %idxprom1 = sext i32 %fltmode to i64, !dbg !8904
  %insn_code = getelementptr inbounds %struct.convert_optab_d, %struct.convert_optab_d* %cond, i64 0, i32 3, i64 %idxprom, i64 %idxprom1, i32 0, !dbg !8905
  %0 = load i32, i32* %insn_code, align 4, !dbg !8905
  call void @llvm.dbg.value(metadata i32 %0, metadata !8901, metadata !DIExpression()), !dbg !8902
  %cmp = icmp eq i32 %0, 2956, !dbg !8906
  br i1 %cmp, label %if.end, label %if.then, !dbg !8908

if.then:                                          ; preds = %entry
  store i32 0, i32* %truncp_ptr, align 4, !dbg !8909
  br label %cleanup, !dbg !8911

if.end:                                           ; preds = %entry
  %cond4 = select i1 %tobool, %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 3), %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 4), !dbg !8912
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %cond4, metadata !8900, metadata !DIExpression()), !dbg !8902
  %insn_code10 = getelementptr inbounds %struct.convert_optab_d, %struct.convert_optab_d* %cond4, i64 0, i32 3, i64 %idxprom, i64 %idxprom1, i32 0, !dbg !8913
  %1 = load i32, i32* %insn_code10, align 4, !dbg !8913
  call void @llvm.dbg.value(metadata i32 %1, metadata !8901, metadata !DIExpression()), !dbg !8902
  %cmp11 = icmp eq i32 %1, 2956, !dbg !8914
  br i1 %cmp11, label %if.end17, label %land.lhs.true, !dbg !8916

land.lhs.true:                                    ; preds = %if.end
  %insn_code14 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 40, i32 4, i64 %idxprom1, i32 0, !dbg !8917
  %2 = load i32, i32* %insn_code14, align 4, !dbg !8917
  %cmp15 = icmp eq i32 %2, 2956, !dbg !8918
  br i1 %cmp15, label %if.end17, label %if.then16, !dbg !8919

if.then16:                                        ; preds = %land.lhs.true
  store i32 1, i32* %truncp_ptr, align 4, !dbg !8920
  br label %cleanup, !dbg !8922

if.end17:                                         ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %truncp_ptr, align 4, !dbg !8923
  br label %cleanup, !dbg !8924

cleanup:                                          ; preds = %if.end17, %if.then16, %if.then
  %retval.0 = phi i32 [ %0, %if.then ], [ %1, %if.then16 ], [ 2956, %if.end17 ], !dbg !8902
  ret i32 %retval.0, !dbg !8925
}

declare dso_local %struct.rtx_def* @gen_int_mode(i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @expand_fixed_convert(%struct.rtx_def* %to, %struct.rtx_def* %from, i32 %uintp, i32 %satp) local_unnamed_addr #4 !dbg !8926 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !8930, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !8931, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.value(metadata i32 %uintp, metadata !8932, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.value(metadata i32 %satp, metadata !8933, metadata !DIExpression()), !dbg !8942
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 0, !dbg !8943
  %bf.load = load i32, i32* %0, align 8, !dbg !8943
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8943
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8943
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !8934, metadata !DIExpression()), !dbg !8942
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 0, !dbg !8944
  %bf.load1 = load i32, i32* %1, align 8, !dbg !8944
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !8944
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !8944
  call void @llvm.dbg.value(metadata i32 %bf.clear3, metadata !8935, metadata !DIExpression()), !dbg !8942
  %cmp = icmp eq i32 %bf.clear, %bf.clear3, !dbg !8945
  br i1 %cmp, label %if.then, label %if.end, !dbg !8947

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to, %struct.rtx_def* %from) #6, !dbg !8948
  br label %cleanup.cont, !dbg !8950

if.end:                                           ; preds = %entry
  %tobool = icmp eq i32 %uintp, 0, !dbg !8951
  %tobool5 = icmp ne i32 %satp, 0, !dbg !8953
  br i1 %tobool, label %if.else, label %if.then4, !dbg !8954

if.then4:                                         ; preds = %if.end
  %cond = select i1 %tobool5, %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 16), %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 14), !dbg !8955
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %cond, metadata !8936, metadata !DIExpression()), !dbg !8942
  %tobool6 = icmp eq i32 %satp, 0, !dbg !8957
  %cond7 = select i1 %tobool6, i32 108, i32 110, !dbg !8957
  call void @llvm.dbg.value(metadata i32 %cond7, metadata !8937, metadata !DIExpression()), !dbg !8942
  br label %if.end12, !dbg !8958

if.else:                                          ; preds = %if.end
  %cond9 = select i1 %tobool5, %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 15), %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 13), !dbg !8959
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %cond9, metadata !8936, metadata !DIExpression()), !dbg !8942
  %tobool10 = icmp eq i32 %satp, 0, !dbg !8961
  %cond11 = select i1 %tobool10, i32 107, i32 109, !dbg !8961
  call void @llvm.dbg.value(metadata i32 %cond11, metadata !8937, metadata !DIExpression()), !dbg !8942
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then4
  %tab.0 = phi %struct.convert_optab_d* [ %cond, %if.then4 ], [ %cond9, %if.else ], !dbg !8953
  %this_code.0 = phi i32 [ %cond7, %if.then4 ], [ %cond11, %if.else ], !dbg !8953
  call void @llvm.dbg.value(metadata i32 %this_code.0, metadata !8937, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab.0, metadata !8936, metadata !DIExpression()), !dbg !8942
  %idxprom = zext i32 %bf.clear to i64, !dbg !8962
  %idxprom13 = zext i32 %bf.clear3 to i64, !dbg !8962
  %insn_code = getelementptr inbounds %struct.convert_optab_d, %struct.convert_optab_d* %tab.0, i64 0, i32 3, i64 %idxprom, i64 %idxprom13, i32 0, !dbg !8963
  %2 = load i32, i32* %insn_code, align 4, !dbg !8963
  call void @llvm.dbg.value(metadata i32 %2, metadata !8938, metadata !DIExpression()), !dbg !8942
  %cmp15 = icmp eq i32 %2, 2956, !dbg !8964
  br i1 %cmp15, label %if.end17, label %if.then16, !dbg !8966

if.then16:                                        ; preds = %if.end12
  tail call void @emit_unop_insn(i32 %2, %struct.rtx_def* %to, %struct.rtx_def* %from, i32 %this_code.0) #8, !dbg !8967
  br label %cleanup.cont, !dbg !8969

if.end17:                                         ; preds = %if.end12
  %call18 = tail call %struct.rtx_def* @convert_optab_libfunc(%struct.convert_optab_d* %tab.0, i32 %bf.clear, i32 %bf.clear3) #8, !dbg !8970
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call18, metadata !8941, metadata !DIExpression()), !dbg !8942
  %tobool19 = icmp eq %struct.rtx_def* %call18, null, !dbg !8971
  br i1 %tobool19, label %cond.true, label %cond.end, !dbg !8971

cond.true:                                        ; preds = %if.end17
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 5393, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8971
  br label %cond.end, !dbg !8971

cond.end:                                         ; preds = %if.end17, %cond.true
  tail call void @start_sequence() #6, !dbg !8972
  %call21 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) @emit_library_call_value(%struct.rtx_def* %call18, %struct.rtx_def* null, i32 1, i32 %bf.clear, i32 1, %struct.rtx_def* %from, i32 %bf.clear3) #6, !dbg !8973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !8940, metadata !DIExpression()), !dbg !8942
  %call22 = tail call %struct.rtx_def* @get_insns() #6, !dbg !8974
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !8939, metadata !DIExpression()), !dbg !8942
  tail call void @end_sequence() #6, !dbg !8975
  %code23 = getelementptr inbounds %struct.convert_optab_d, %struct.convert_optab_d* %tab.0, i64 0, i32 0, !dbg !8976
  %3 = load i32, i32* %code23, align 8, !dbg !8976
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %3, i32 %bf.clear, %struct.rtx_def* %from) #6, !dbg !8976
  tail call void @emit_libcall_block(%struct.rtx_def* %call22, %struct.rtx_def* %to, %struct.rtx_def* %call21, %struct.rtx_def* %call24) #8, !dbg !8977
  br label %cleanup.cont, !dbg !8978

cleanup.cont:                                     ; preds = %if.then, %if.then16, %cond.end
  ret void, !dbg !8978
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @expand_sfix_optab(%struct.rtx_def* %to, %struct.rtx_def* %from, %struct.convert_optab_d* %tab) local_unnamed_addr #4 !dbg !8979 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !8983, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !8984, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !8985, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !8987, metadata !DIExpression()), !dbg !8998
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 0, !dbg !8999
  %bf.load = load i32, i32* %0, align 8, !dbg !8999
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8999
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8999
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !8988, metadata !DIExpression()), !dbg !8998
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 0, !dbg !9000
  br label %for.cond, !dbg !9001

for.cond:                                         ; preds = %for.inc32, %entry
  %target.0 = phi %struct.rtx_def* [ %to, %entry ], [ %target.1.lcssa, %for.inc32 ], !dbg !9002
  %fmode.0 = phi i32 [ %bf.clear, %entry ], [ %conv35, %for.inc32 ], !dbg !9003
  %from.addr.0 = phi %struct.rtx_def* [ %from, %entry ], [ %from.addr.1.lcssa, %for.inc32 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0, metadata !8984, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata i32 %fmode.0, metadata !8988, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.0, metadata !8987, metadata !DIExpression()), !dbg !8998
  %cmp = icmp eq i32 %fmode.0, 0, !dbg !9004
  br i1 %cmp, label %cleanup37.loopexit1, label %for.body, !dbg !9005

for.body:                                         ; preds = %for.cond
  %bf.load1 = load i32, i32* %1, align 8, !dbg !9006
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !9006
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !9006
  call void @llvm.dbg.value(metadata i32 %bf.clear3, metadata !8989, metadata !DIExpression()), !dbg !8998
  %idxprom7 = zext i32 %fmode.0 to i64, !dbg !9007
  br label %for.cond4, !dbg !9008

for.cond4:                                        ; preds = %for.inc, %for.body
  %target.1 = phi %struct.rtx_def* [ %target.0, %for.body ], [ %target.3, %for.inc ], !dbg !8998
  %imode.0 = phi i32 [ %bf.clear3, %for.body ], [ %conv, %for.inc ], !dbg !9000
  %from.addr.1 = phi %struct.rtx_def* [ %from.addr.0, %for.body ], [ %from.addr.3, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1, metadata !8984, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata i32 %imode.0, metadata !8989, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1, metadata !8987, metadata !DIExpression()), !dbg !8998
  %cmp5 = icmp eq i32 %imode.0, 0, !dbg !9009
  br i1 %cmp5, label %for.inc32, label %for.body6, !dbg !9010

for.body6:                                        ; preds = %for.cond4
  %idxprom = zext i32 %imode.0 to i64, !dbg !9011
  %insn_code = getelementptr inbounds %struct.convert_optab_d, %struct.convert_optab_d* %tab, i64 0, i32 3, i64 %idxprom, i64 %idxprom7, i32 0, !dbg !9012
  %2 = load i32, i32* %insn_code, align 4, !dbg !9012
  call void @llvm.dbg.value(metadata i32 %2, metadata !8986, metadata !DIExpression()), !dbg !8998
  %cmp9 = icmp eq i32 %2, 2956, !dbg !9013
  br i1 %cmp9, label %for.inc, label %if.then, !dbg !9014

if.then:                                          ; preds = %for.body6
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !9015
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !8990, metadata !DIExpression()), !dbg !9016
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.1, i64 0, i32 0, !dbg !9017
  %bf.load10 = load i32, i32* %3, align 8, !dbg !9017
  %bf.lshr11 = lshr i32 %bf.load10, 16, !dbg !9017
  %bf.clear12 = and i32 %bf.lshr11, 255, !dbg !9017
  %cmp13 = icmp eq i32 %fmode.0, %bf.clear12, !dbg !9019
  br i1 %cmp13, label %if.end, label %if.then14, !dbg !9020

if.then14:                                        ; preds = %if.then
  %call15 = tail call %struct.rtx_def* @convert_to_mode(i32 %fmode.0, %struct.rtx_def* %from.addr.1, i32 0) #6, !dbg !9021
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15, metadata !8984, metadata !DIExpression()), !dbg !8998
  br label %if.end, !dbg !9022

if.end:                                           ; preds = %if.then, %if.then14
  %from.addr.2 = phi %struct.rtx_def* [ %call15, %if.then14 ], [ %from.addr.1, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.2, metadata !8984, metadata !DIExpression()), !dbg !8998
  %bf.load16 = load i32, i32* %1, align 8, !dbg !9023
  %bf.lshr17 = lshr i32 %bf.load16, 16, !dbg !9023
  %bf.clear18 = and i32 %bf.lshr17, 255, !dbg !9023
  %cmp19 = icmp eq i32 %imode.0, %bf.clear18, !dbg !9025
  br i1 %cmp19, label %if.end22, label %if.then20, !dbg !9026

if.then20:                                        ; preds = %if.end
  %call21 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %imode.0) #6, !dbg !9027
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !8987, metadata !DIExpression()), !dbg !8998
  br label %if.end22, !dbg !9028

if.end22:                                         ; preds = %if.end, %if.then20
  %target.2 = phi %struct.rtx_def* [ %call21, %if.then20 ], [ %target.1, %if.end ], !dbg !8998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.2, metadata !8987, metadata !DIExpression()), !dbg !8998
  %call23 = tail call zeroext i8 @maybe_emit_unop_insn(i32 %2, %struct.rtx_def* %target.2, %struct.rtx_def* %from.addr.2, i32 0) #8, !dbg !9029
  %tobool = icmp eq i8 %call23, 0, !dbg !9029
  br i1 %tobool, label %if.then24, label %if.end25, !dbg !9031

if.then24:                                        ; preds = %if.end22
  tail call void @delete_insns_since(%struct.rtx_def* %call) #6, !dbg !9032
  br label %cleanup, !dbg !9034

if.end25:                                         ; preds = %if.end22
  %cmp26 = icmp eq %struct.rtx_def* %target.2, %to, !dbg !9035
  br i1 %cmp26, label %cleanup, label %if.then27, !dbg !9037

if.then27:                                        ; preds = %if.end25
  tail call void @convert_move(%struct.rtx_def* %to, %struct.rtx_def* %target.2, i32 0) #6, !dbg !9038
  br label %cleanup, !dbg !9038

cleanup:                                          ; preds = %if.end25, %if.then27, %if.then24
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then24 ], [ false, %if.then27 ], [ false, %if.end25 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup37.loopexit

for.inc:                                          ; preds = %for.body6, %cleanup
  %target.3 = phi %struct.rtx_def* [ %target.2, %cleanup ], [ %target.1, %for.body6 ], !dbg !8998
  %from.addr.3 = phi %struct.rtx_def* [ %from.addr.2, %cleanup ], [ %from.addr.1, %for.body6 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.3, metadata !8984, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.3, metadata !8987, metadata !DIExpression()), !dbg !8998
  %arrayidx31 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !9039
  %4 = load i8, i8* %arrayidx31, align 1, !dbg !9039
  %conv = zext i8 %4 to i32, !dbg !9039
  call void @llvm.dbg.value(metadata i32 %conv, metadata !8989, metadata !DIExpression()), !dbg !8998
  br label %for.cond4, !dbg !9040, !llvm.loop !9041

for.inc32:                                        ; preds = %for.cond4
  %target.1.lcssa = phi %struct.rtx_def* [ %target.1, %for.cond4 ], !dbg !8998
  %from.addr.1.lcssa = phi %struct.rtx_def* [ %from.addr.1, %for.cond4 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.lcssa, metadata !8987, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.lcssa, metadata !8984, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.lcssa, metadata !8987, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.lcssa, metadata !8984, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.1.lcssa, metadata !8987, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1.lcssa, metadata !8984, metadata !DIExpression()), !dbg !8998
  %arrayidx34 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom7, !dbg !9043
  %5 = load i8, i8* %arrayidx34, align 1, !dbg !9043
  %conv35 = zext i8 %5 to i32, !dbg !9043
  call void @llvm.dbg.value(metadata i32 %conv35, metadata !8988, metadata !DIExpression()), !dbg !8998
  br label %for.cond, !dbg !9044, !llvm.loop !9045

cleanup37.loopexit:                               ; preds = %cleanup
  br label %cleanup37, !dbg !9047

cleanup37.loopexit1:                              ; preds = %for.cond
  br label %cleanup37, !dbg !9047

cleanup37:                                        ; preds = %cleanup37.loopexit1, %cleanup37.loopexit
  %retval.4 = phi i8 [ 1, %cleanup37.loopexit ], [ 0, %cleanup37.loopexit1 ], !dbg !8998
  ret i8 %retval.4, !dbg !9047
}

; Function Attrs: nounwind uwtable
define dso_local i32 @have_insn_for(i32 %code, i32 %mode) local_unnamed_addr #4 !dbg !9048 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !9052, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9053, metadata !DIExpression()), !dbg !9054
  %idxprom = sext i32 %code to i64, !dbg !9055
  %arrayidx = getelementptr inbounds [140 x %struct.optab_d*], [140 x %struct.optab_d*]* @code_to_optab, i64 0, i64 %idxprom, !dbg !9055
  %0 = load %struct.optab_d*, %struct.optab_d** %arrayidx, align 8, !dbg !9055
  %cmp = icmp eq %struct.optab_d* %0, null, !dbg !9056
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !9057

land.rhs:                                         ; preds = %entry
  %idxprom3 = sext i32 %mode to i64, !dbg !9058
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %0, i64 0, i32 4, i64 %idxprom3, i32 0, !dbg !9059
  %1 = load i32, i32* %insn_code, align 4, !dbg !9059
  %cmp5 = icmp ne i32 %1, 2956, !dbg !9060
  %phitmp = zext i1 %cmp5 to i32
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %2, !dbg !9061
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_libfunc_function(i8* %name) local_unnamed_addr #4 !dbg !9062 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !9066, metadata !DIExpression()), !dbg !9068
  %call = tail call %union.tree_node* @get_identifier(i8* %name) #6, !dbg !9069
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9069
  %call1 = tail call %union.tree_node* @build_function_type(%union.tree_node* %0, %union.tree_node* null) #6, !dbg !9069
  %call2 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 29, %union.tree_node* %call, %union.tree_node* %call1) #6, !dbg !9069
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !9067, metadata !DIExpression()), !dbg !9068
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9070
  %1 = bitcast i40* %artificial_flag to i64*, !dbg !9070
  %bf.load = load i64, i64* %1, align 8, !dbg !9071
  %bf.set6 = or i64 %bf.load, 33558528, !dbg !9072
  store i64 %bf.set6, i64* %1, align 8, !dbg !9072
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9073
  %bf.load7 = load i64, i64* %2, align 8, !dbg !9074
  %bf.set9 = or i64 %bf.load7, 134217728, !dbg !9074
  store i64 %bf.set9, i64* %2, align 8, !dbg !9074
  %call10 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %call2) #6, !dbg !9075
  %tobool = icmp eq %union.tree_node* %call10, null, !dbg !9075
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !9075

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 6082, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9075
  br label %cond.end, !dbg !9075

cond.end:                                         ; preds = %entry, %cond.true
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9076
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !9076
  %tobool11 = icmp eq %struct.rtx_def* %3, null, !dbg !9076
  br i1 %tobool11, label %cond.false15, label %cond.true12, !dbg !9076

cond.true12:                                      ; preds = %cond.end
  br label %cond.end18, !dbg !9076

cond.false15:                                     ; preds = %cond.end
  tail call void @make_decl_rtl(%union.tree_node* %call2) #6, !dbg !9076
  %cond19.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !9076
  br label %cond.end18, !dbg !9076

cond.end18:                                       ; preds = %cond.false15, %cond.true12
  %cond19 = phi %struct.rtx_def* [ %cond19.pre, %cond.false15 ], [ %3, %cond.true12 ], !dbg !9076
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond19, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9076
  %4 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !9076
  %5 = load i32*, i32** %4, align 8, !dbg !9076
  %bf.load20 = load i32, i32* %5, align 8, !dbg !9076
  %bf.clear21 = and i32 %bf.load20, 67108864, !dbg !9076
  %tobool22 = icmp eq i32 %bf.clear21, 0, !dbg !9076
  br i1 %tobool22, label %cond.end25, label %cond.true23, !dbg !9076

cond.true23:                                      ; preds = %cond.end18
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 6086, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9076
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !9076
  br label %cond.end25, !dbg !9076

cond.end25:                                       ; preds = %cond.end18, %cond.true23
  %6 = phi %struct.rtx_def* [ %cond19, %cond.end18 ], [ %.pre, %cond.true23 ], !dbg !9076
  %tobool29 = icmp eq %struct.rtx_def* %6, null, !dbg !9076
  br i1 %tobool29, label %cond.false33, label %cond.true30, !dbg !9076

cond.true30:                                      ; preds = %cond.end25
  br label %cond.end36, !dbg !9076

cond.false33:                                     ; preds = %cond.end25
  tail call void @make_decl_rtl(%union.tree_node* %call2) #6, !dbg !9076
  %cond37.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !9076
  br label %cond.end36, !dbg !9076

cond.end36:                                       ; preds = %cond.false33, %cond.true30
  %cond37 = phi %struct.rtx_def* [ %cond37.pre, %cond.false33 ], [ %6, %cond.true30 ], !dbg !9076
  %arrayidx40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond37, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9076
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !9076
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !9076
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !9076
  %rt_tree = bitcast %union.rtunion_def* %8 to %union.tree_node**, !dbg !9076
  store %union.tree_node* null, %union.tree_node** %rt_tree, align 8, !dbg !9076
  ret %union.tree_node* %call2, !dbg !9077
}

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @decl_assembler_name(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @init_one_libfunc(i8* %name) local_unnamed_addr #4 !dbg !9078 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !9082, metadata !DIExpression()), !dbg !9087
  %0 = load %struct.htab*, %struct.htab** @libfunc_decls, align 8, !dbg !9088
  %cmp = icmp eq %struct.htab* %0, null, !dbg !9090
  br i1 %cmp, label %if.then, label %if.end, !dbg !9091

if.then:                                          ; preds = %entry
  %call = tail call %struct.htab* @htab_create_alloc(i64 37, i32 (i8*)* nonnull @libfunc_decl_hash, i32 (i8*, i8*)* nonnull @libfunc_decl_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !9092
  store %struct.htab* %call, %struct.htab** @libfunc_decls, align 8, !dbg !9093
  br label %if.end, !dbg !9094

if.end:                                           ; preds = %if.then, %entry
  %call1 = tail call %union.tree_node* @get_identifier(i8* %name) #6, !dbg !9095
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !9083, metadata !DIExpression()), !dbg !9087
  %call2 = tail call i32 @htab_hash_string(i8* %name) #6, !dbg !9096
  call void @llvm.dbg.value(metadata i32 %call2, metadata !9086, metadata !DIExpression()), !dbg !9087
  %1 = load %struct.htab*, %struct.htab** @libfunc_decls, align 8, !dbg !9097
  %2 = bitcast %union.tree_node* %call1 to i8*, !dbg !9098
  %call3 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %1, i8* %2, i32 %call2, i32 1) #6, !dbg !9099
  call void @llvm.dbg.value(metadata i8** %call3, metadata !9085, metadata !DIExpression()), !dbg !9087
  %3 = bitcast i8** %call3 to %union.tree_node**, !dbg !9100
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !9100
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !9084, metadata !DIExpression()), !dbg !9087
  %cmp4 = icmp eq %union.tree_node* %4, null, !dbg !9101
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !9103

if.then5:                                         ; preds = %if.end
  %call6 = tail call %union.tree_node* @build_libfunc_function(i8* %name) #8, !dbg !9104
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !9084, metadata !DIExpression()), !dbg !9087
  store %union.tree_node* %call6, %union.tree_node** %3, align 8, !dbg !9106
  br label %if.end7, !dbg !9107

if.end7:                                          ; preds = %if.then5, %if.end
  %decl.0 = phi %union.tree_node* [ %call6, %if.then5 ], [ %4, %if.end ], !dbg !9087
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !9084, metadata !DIExpression()), !dbg !9087
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9108
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !9108
  %tobool = icmp eq %struct.rtx_def* %5, null, !dbg !9108
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9108

cond.true:                                        ; preds = %if.end7
  br label %cond.end, !dbg !9108

cond.false:                                       ; preds = %if.end7
  tail call void @make_decl_rtl(%union.tree_node* %decl.0) #6, !dbg !9108
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !9108
  br label %cond.end, !dbg !9108

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %5, %cond.true ], !dbg !9108
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9108
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !9108
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9108
  ret %struct.rtx_def* %6, !dbg !9109
}

declare dso_local %struct.htab* @htab_create_alloc(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8* (i64, i64)*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @libfunc_decl_hash(i8* %entry1) #4 !dbg !9110 {
entry:
  call void @llvm.dbg.value(metadata i8* %entry1, metadata !9112, metadata !DIExpression()), !dbg !9113
  %name = getelementptr inbounds i8, i8* %entry1, i64 32, !dbg !9114
  %0 = bitcast i8* %name to %struct.tree_identifier**, !dbg !9114
  %1 = load %struct.tree_identifier*, %struct.tree_identifier** %0, align 8, !dbg !9114
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %1, i64 0, i32 1, i32 0, !dbg !9114
  %2 = load i8*, i8** %str, align 8, !dbg !9114
  %call = tail call i32 @htab_hash_string(i8* %2) #6, !dbg !9115
  ret i32 %call, !dbg !9116
}

; Function Attrs: nounwind uwtable
define internal i32 @libfunc_decl_eq(i8* %entry1, i8* %entry2) #4 !dbg !9117 {
entry:
  call void @llvm.dbg.value(metadata i8* %entry1, metadata !9119, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i8* %entry2, metadata !9120, metadata !DIExpression()), !dbg !9121
  %name = getelementptr inbounds i8, i8* %entry1, i64 32, !dbg !9122
  %0 = bitcast i8* %name to %union.tree_node**, !dbg !9122
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !9122
  %2 = bitcast i8* %entry2 to %union.tree_node*, !dbg !9123
  %cmp = icmp eq %union.tree_node* %1, %2, !dbg !9124
  %conv = zext i1 %cmp to i32, !dbg !9124
  ret i32 %conv, !dbg !9125
}

declare dso_local i8* @ggc_calloc(i64, i64) #1

declare dso_local void @ggc_free(i8*) #1

declare dso_local i32 @htab_hash_string(i8*) local_unnamed_addr #1

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @set_user_assembler_libfunc(i8* %name, i8* %asmspec) local_unnamed_addr #4 !dbg !9126 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !9130, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i8* %asmspec, metadata !9131, metadata !DIExpression()), !dbg !9136
  %call = tail call %union.tree_node* @get_identifier(i8* %name) #6, !dbg !9137
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9132, metadata !DIExpression()), !dbg !9136
  %call1 = tail call i32 @htab_hash_string(i8* %name) #6, !dbg !9138
  call void @llvm.dbg.value(metadata i32 %call1, metadata !9135, metadata !DIExpression()), !dbg !9136
  %0 = load %struct.htab*, %struct.htab** @libfunc_decls, align 8, !dbg !9139
  %1 = bitcast %union.tree_node* %call to i8*, !dbg !9140
  %call2 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %0, i8* %1, i32 %call1, i32 0) #6, !dbg !9141
  call void @llvm.dbg.value(metadata i8** %call2, metadata !9134, metadata !DIExpression()), !dbg !9136
  %tobool = icmp eq i8** %call2, null, !dbg !9142
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !9142

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 6129, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9142
  br label %cond.end, !dbg !9142

cond.end:                                         ; preds = %entry, %cond.true
  %2 = bitcast i8** %call2 to %union.tree_node**, !dbg !9143
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !9143
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !9133, metadata !DIExpression()), !dbg !9136
  tail call void @set_user_assembler_name(%union.tree_node* %3, i8* %asmspec) #6, !dbg !9144
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9145
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !9145
  %tobool3 = icmp eq %struct.rtx_def* %4, null, !dbg !9145
  br i1 %tobool3, label %cond.false7, label %cond.true4, !dbg !9145

cond.true4:                                       ; preds = %cond.end
  br label %cond.end10, !dbg !9145

cond.false7:                                      ; preds = %cond.end
  tail call void @make_decl_rtl(%union.tree_node* %3) #6, !dbg !9145
  %cond11.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !9145
  br label %cond.end10, !dbg !9145

cond.end10:                                       ; preds = %cond.false7, %cond.true4
  %cond11 = phi %struct.rtx_def* [ %cond11.pre, %cond.false7 ], [ %4, %cond.true4 ], !dbg !9145
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond11, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9145
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !9145
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9145
  ret %struct.rtx_def* %5, !dbg !9146
}

declare dso_local void @set_user_assembler_name(%union.tree_node*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @set_optab_libfunc(%struct.optab_d* %optable, i32 %mode, i8* %name) local_unnamed_addr #4 !dbg !9147 {
entry:
  %e = alloca %struct.libfunc_entry, align 8
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !9151, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9152, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i8* %name, metadata !9153, metadata !DIExpression()), !dbg !9157
  %0 = bitcast %struct.libfunc_entry* %e to i8*, !dbg !9158
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !9158
  %sub.ptr.lhs.cast = ptrtoint %struct.optab_d* %optable to i64, !dbg !9159
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([159 x %struct.optab_d]* @optab_table to i64), !dbg !9159
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 384, !dbg !9159
  %optab = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %e, i64 0, i32 0, !dbg !9160
  store i64 %sub.ptr.div, i64* %optab, align 8, !dbg !9161
  %mode1 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %e, i64 0, i32 1, !dbg !9162
  store i32 %mode, i32* %mode1, align 8, !dbg !9163
  %mode2 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %e, i64 0, i32 2, !dbg !9164
  store i32 0, i32* %mode2, align 4, !dbg !9165
  %tobool = icmp eq i8* %name, null, !dbg !9166
  br i1 %tobool, label %if.end, label %if.then, !dbg !9168

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @init_one_libfunc(i8* nonnull %name) #8, !dbg !9169
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !9154, metadata !DIExpression()), !dbg !9157
  br label %if.end, !dbg !9170

if.end:                                           ; preds = %entry, %if.then
  %val.0 = phi %struct.rtx_def* [ %call, %if.then ], [ null, %entry ], !dbg !9171
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.0, metadata !9154, metadata !DIExpression()), !dbg !9157
  %1 = load %struct.htab*, %struct.htab** @libfunc_hash, align 8, !dbg !9172
  %call1 = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 1) #6, !dbg !9173
  %2 = bitcast i8** %call1 to %struct.libfunc_entry**, !dbg !9174
  call void @llvm.dbg.value(metadata %struct.libfunc_entry** %2, metadata !9156, metadata !DIExpression()), !dbg !9157
  %3 = load %struct.libfunc_entry*, %struct.libfunc_entry** %2, align 8, !dbg !9175
  %cmp = icmp eq %struct.libfunc_entry* %3, null, !dbg !9177
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !9178

if.then2:                                         ; preds = %if.end
  %call3 = call i8* @ggc_alloc_stat(i64 24) #6, !dbg !9179
  store i8* %call3, i8** %call1, align 8, !dbg !9180
  %4 = bitcast i8* %call3 to %struct.libfunc_entry*, !dbg !9181
  br label %if.end4, !dbg !9181

if.end4:                                          ; preds = %if.then2, %if.end
  %5 = phi %struct.libfunc_entry* [ %4, %if.then2 ], [ %3, %if.end ], !dbg !9182
  %optab8 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %5, i64 0, i32 0, !dbg !9183
  store i64 %sub.ptr.div, i64* %optab8, align 8, !dbg !9184
  %6 = load %struct.libfunc_entry*, %struct.libfunc_entry** %2, align 8, !dbg !9185
  %mode19 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %6, i64 0, i32 1, !dbg !9186
  store i32 %mode, i32* %mode19, align 8, !dbg !9187
  %7 = load %struct.libfunc_entry*, %struct.libfunc_entry** %2, align 8, !dbg !9188
  %mode210 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %7, i64 0, i32 2, !dbg !9189
  store i32 0, i32* %mode210, align 4, !dbg !9190
  %8 = load %struct.libfunc_entry*, %struct.libfunc_entry** %2, align 8, !dbg !9191
  %libfunc = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %8, i64 0, i32 3, !dbg !9192
  store %struct.rtx_def* %val.0, %struct.rtx_def** %libfunc, align 8, !dbg !9193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !9194
  ret void, !dbg !9194
}

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @set_conv_libfunc(%struct.convert_optab_d* %optable, i32 %tmode, i32 %fmode, i8* %name) local_unnamed_addr #4 !dbg !9195 {
entry:
  %e = alloca %struct.libfunc_entry, align 8
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %optable, metadata !9199, metadata !DIExpression()), !dbg !9206
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !9200, metadata !DIExpression()), !dbg !9206
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !9201, metadata !DIExpression()), !dbg !9206
  call void @llvm.dbg.value(metadata i8* %name, metadata !9202, metadata !DIExpression()), !dbg !9206
  %0 = bitcast %struct.libfunc_entry* %e to i8*, !dbg !9207
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !9207
  %sub.ptr.lhs.cast = ptrtoint %struct.convert_optab_d* %optable to i64, !dbg !9208
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([17 x %struct.convert_optab_d]* @convert_optab_table to i64), !dbg !9208
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 30304, !dbg !9208
  %optab = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %e, i64 0, i32 0, !dbg !9209
  store i64 %sub.ptr.div, i64* %optab, align 8, !dbg !9210
  %mode1 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %e, i64 0, i32 1, !dbg !9211
  store i32 %tmode, i32* %mode1, align 8, !dbg !9212
  %mode2 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %e, i64 0, i32 2, !dbg !9213
  store i32 %fmode, i32* %mode2, align 4, !dbg !9214
  %tobool = icmp eq i8* %name, null, !dbg !9215
  br i1 %tobool, label %if.end, label %if.then, !dbg !9217

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @init_one_libfunc(i8* nonnull %name) #8, !dbg !9218
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !9203, metadata !DIExpression()), !dbg !9206
  br label %if.end, !dbg !9219

if.end:                                           ; preds = %entry, %if.then
  %val.0 = phi %struct.rtx_def* [ %call, %if.then ], [ null, %entry ], !dbg !9220
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.0, metadata !9203, metadata !DIExpression()), !dbg !9206
  %1 = load %struct.htab*, %struct.htab** @libfunc_hash, align 8, !dbg !9221
  %call1 = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 1) #6, !dbg !9222
  %2 = bitcast i8** %call1 to %struct.libfunc_entry**, !dbg !9223
  call void @llvm.dbg.value(metadata %struct.libfunc_entry** %2, metadata !9205, metadata !DIExpression()), !dbg !9206
  %3 = load %struct.libfunc_entry*, %struct.libfunc_entry** %2, align 8, !dbg !9224
  %cmp = icmp eq %struct.libfunc_entry* %3, null, !dbg !9226
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !9227

if.then2:                                         ; preds = %if.end
  %call3 = call i8* @ggc_alloc_stat(i64 24) #6, !dbg !9228
  store i8* %call3, i8** %call1, align 8, !dbg !9229
  %4 = bitcast i8* %call3 to %struct.libfunc_entry*, !dbg !9230
  br label %if.end4, !dbg !9230

if.end4:                                          ; preds = %if.then2, %if.end
  %5 = phi %struct.libfunc_entry* [ %4, %if.then2 ], [ %3, %if.end ], !dbg !9231
  %optab8 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %5, i64 0, i32 0, !dbg !9232
  store i64 %sub.ptr.div, i64* %optab8, align 8, !dbg !9233
  %6 = load %struct.libfunc_entry*, %struct.libfunc_entry** %2, align 8, !dbg !9234
  %mode19 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %6, i64 0, i32 1, !dbg !9235
  store i32 %tmode, i32* %mode19, align 8, !dbg !9236
  %7 = load %struct.libfunc_entry*, %struct.libfunc_entry** %2, align 8, !dbg !9237
  %mode210 = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %7, i64 0, i32 2, !dbg !9238
  store i32 %fmode, i32* %mode210, align 4, !dbg !9239
  %8 = load %struct.libfunc_entry*, %struct.libfunc_entry** %2, align 8, !dbg !9240
  %libfunc = getelementptr inbounds %struct.libfunc_entry, %struct.libfunc_entry* %8, i64 0, i32 3, !dbg !9241
  store %struct.rtx_def* %val.0, %struct.rtx_def** %libfunc, align 8, !dbg !9242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !9243
  ret void, !dbg !9243
}

; Function Attrs: nounwind uwtable
define dso_local void @init_optabs() local_unnamed_addr #4 !dbg !3242 {
entry:
  %call = tail call %struct.htab* @htab_create_alloc(i64 10, i32 (i8*)* nonnull @hash_libfunc, i32 (i8*, i8*)* nonnull @eq_libfunc, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !9244
  store %struct.htab* %call, %struct.htab** @libfunc_hash, align 8, !dbg !9245
  call void @llvm.dbg.value(metadata i32 0, metadata !3246, metadata !DIExpression()), !dbg !9246
  br label %for.cond, !dbg !9247

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.body ], [ 0, %entry ], !dbg !9249
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !3246, metadata !DIExpression()), !dbg !9246
  %exitcond7 = icmp eq i64 %indvars.iv5, 87, !dbg !9250
  br i1 %exitcond7, label %for.cond1.preheader, label %for.body, !dbg !9252

for.cond1.preheader:                              ; preds = %for.cond
  br label %for.cond1, !dbg !9253

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [87 x i32], [87 x i32]* @movcc_gen_code, i64 0, i64 %indvars.iv5, !dbg !9255
  store i32 2956, i32* %arrayidx, align 4, !dbg !9256
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !9257
  call void @llvm.dbg.value(metadata i32 undef, metadata !3246, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9246
  br label %for.cond, !dbg !9258, !llvm.loop !9259

for.cond1:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv2 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next3, %for.body3 ], !dbg !9261
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !3246, metadata !DIExpression()), !dbg !9246
  %exitcond4 = icmp eq i64 %indvars.iv2, 87, !dbg !9262
  br i1 %exitcond4, label %for.end10, label %for.body3, !dbg !9253

for.body3:                                        ; preds = %for.cond1
  %arrayidx5 = getelementptr inbounds [87 x i32], [87 x i32]* @vcond_gen_code, i64 0, i64 %indvars.iv2, !dbg !9264
  store i32 2956, i32* %arrayidx5, align 4, !dbg !9266
  %arrayidx7 = getelementptr inbounds [87 x i32], [87 x i32]* @vcondu_gen_code, i64 0, i64 %indvars.iv2, !dbg !9267
  store i32 2956, i32* %arrayidx7, align 4, !dbg !9268
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !9269
  call void @llvm.dbg.value(metadata i32 undef, metadata !3246, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9246
  br label %for.cond1, !dbg !9270, !llvm.loop !9271

for.end10:                                        ; preds = %for.cond1
  tail call fastcc void @init_insn_codes() #8, !dbg !9273
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), i32 49) #8, !dbg !9274
  tail call fastcc void @init_optabv(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 13), i32 49) #8, !dbg !9275
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), i32 50) #8, !dbg !9276
  tail call fastcc void @init_optabv(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 15), i32 50) #8, !dbg !9277
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 0), i32 127) #8, !dbg !9278
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 1), i32 128) #8, !dbg !9279
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 2), i32 129) #8, !dbg !9280
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 3), i32 135) #8, !dbg !9281
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16), i32 52) #8, !dbg !9282
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 4), i32 53) #8, !dbg !9283
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 5), i32 54) #8, !dbg !9284
  tail call fastcc void @init_optabv(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 17), i32 52) #8, !dbg !9285
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 18), i32 0) #8, !dbg !9286
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 19), i32 0) #8, !dbg !9287
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 20), i32 0) #8, !dbg !9288
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 21), i32 0) #8, !dbg !9289
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 22), i32 0) #8, !dbg !9290
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 23), i32 0) #8, !dbg !9291
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 24), i32 0) #8, !dbg !9292
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 25), i32 0) #8, !dbg !9293
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 26), i32 0) #8, !dbg !9294
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 27), i32 0) #8, !dbg !9295
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 28), i32 0) #8, !dbg !9296
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 29), i32 0) #8, !dbg !9297
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 30), i32 0) #8, !dbg !9298
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 31), i32 55) #8, !dbg !9299
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 6), i32 56) #8, !dbg !9300
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 7), i32 57) #8, !dbg !9301
  tail call fastcc void @init_optabv(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 32), i32 55) #8, !dbg !9302
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 33), i32 0) #8, !dbg !9303
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 34), i32 59) #8, !dbg !9304
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 35), i32 0) #8, !dbg !9305
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 36), i32 58) #8, !dbg !9306
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 37), i32 60) #8, !dbg !9307
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 38), i32 0) #8, !dbg !9308
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 39), i32 0) #8, !dbg !9309
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 40), i32 0) #8, !dbg !9310
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), i32 61) #8, !dbg !9311
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), i32 62) #8, !dbg !9312
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), i32 63) #8, !dbg !9313
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), i32 65) #8, !dbg !9314
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 10), i32 133) #8, !dbg !9315
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 11), i32 134) #8, !dbg !9316
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 46), i32 67) #8, !dbg !9317
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45), i32 68) #8, !dbg !9318
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 47), i32 66) #8, !dbg !9319
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 48), i32 69) #8, !dbg !9320
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 54), i32 70) #8, !dbg !9321
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 55), i32 71) #8, !dbg !9322
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 56), i32 72) #8, !dbg !9323
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 57), i32 73) #8, !dbg !9324
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 58), i32 0) #8, !dbg !9325
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 59), i32 0) #8, !dbg !9326
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60), i32 23) #8, !dbg !9327
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 61), i32 40) #8, !dbg !9328
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 115), i32 48) #8, !dbg !9329
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 116), i32 0) #8, !dbg !9330
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 117), i32 0) #8, !dbg !9331
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 118), i32 0) #8, !dbg !9332
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 63), i32 0) #8, !dbg !9333
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 105), i32 0) #8, !dbg !9334
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 106), i32 0) #8, !dbg !9335
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 107), i32 81) #8, !dbg !9336
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 108), i32 80) #8, !dbg !9337
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 109), i32 83) #8, !dbg !9338
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 110), i32 82) #8, !dbg !9339
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 111), i32 85) #8, !dbg !9340
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 112), i32 84) #8, !dbg !9341
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 113), i32 90) #8, !dbg !9342
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 64), i32 51) #8, !dbg !9343
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 8), i32 130) #8, !dbg !9344
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 9), i32 131) #8, !dbg !9345
  tail call fastcc void @init_optabv(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 65), i32 51) #8, !dbg !9346
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 66), i32 111) #8, !dbg !9347
  tail call fastcc void @init_optabv(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 67), i32 111) #8, !dbg !9348
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 120), i32 0) #8, !dbg !9349
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 69), i32 64) #8, !dbg !9350
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 68), i32 113) #8, !dbg !9351
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 70), i32 114) #8, !dbg !9352
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71), i32 115) #8, !dbg !9353
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 72), i32 116) #8, !dbg !9354
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 73), i32 117) #8, !dbg !9355
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 74), i32 118) #8, !dbg !9356
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 75), i32 112) #8, !dbg !9357
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 94), i32 0) #8, !dbg !9358
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 95), i32 0) #8, !dbg !9359
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 97), i32 0) #8, !dbg !9360
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 96), i32 0) #8, !dbg !9361
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 98), i32 0) #8, !dbg !9362
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 99), i32 0) #8, !dbg !9363
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 76), i32 0) #8, !dbg !9364
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 77), i32 0) #8, !dbg !9365
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 78), i32 0) #8, !dbg !9366
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 79), i32 0) #8, !dbg !9367
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 80), i32 0) #8, !dbg !9368
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 81), i32 0) #8, !dbg !9369
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 82), i32 0) #8, !dbg !9370
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 83), i32 0) #8, !dbg !9371
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 84), i32 0) #8, !dbg !9372
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 85), i32 0) #8, !dbg !9373
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 86), i32 0) #8, !dbg !9374
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 87), i32 0) #8, !dbg !9375
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 88), i32 0) #8, !dbg !9376
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 89), i32 0) #8, !dbg !9377
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 90), i32 0) #8, !dbg !9378
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 91), i32 0) #8, !dbg !9379
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 92), i32 0) #8, !dbg !9380
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 93), i32 0) #8, !dbg !9381
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 100), i32 0) #8, !dbg !9382
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 101), i32 0) #8, !dbg !9383
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 102), i32 0) #8, !dbg !9384
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 103), i32 0) #8, !dbg !9385
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 104), i32 0) #8, !dbg !9386
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 114), i32 0) #8, !dbg !9387
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 119), i32 0) #8, !dbg !9388
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 121), i32 0) #8, !dbg !9389
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 122), i32 0) #8, !dbg !9390
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 123), i32 0) #8, !dbg !9391
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 124), i32 0) #8, !dbg !9392
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 125), i32 0) #8, !dbg !9393
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 126), i32 0) #8, !dbg !9394
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 127), i32 0) #8, !dbg !9395
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 128), i32 0) #8, !dbg !9396
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 129), i32 0) #8, !dbg !9397
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 130), i32 0) #8, !dbg !9398
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 132), i32 0) #8, !dbg !9399
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 133), i32 0) #8, !dbg !9400
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 134), i32 0) #8, !dbg !9401
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 135), i32 0) #8, !dbg !9402
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 136), i32 0) #8, !dbg !9403
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 131), i32 0) #8, !dbg !9404
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 137), i32 0) #8, !dbg !9405
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 138), i32 0) #8, !dbg !9406
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 139), i32 0) #8, !dbg !9407
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 140), i32 0) #8, !dbg !9408
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 62), i32 0) #8, !dbg !9409
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 141), i32 0) #8, !dbg !9410
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 142), i32 0) #8, !dbg !9411
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 143), i32 0) #8, !dbg !9412
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 144), i32 0) #8, !dbg !9413
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 145), i32 0) #8, !dbg !9414
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 146), i32 0) #8, !dbg !9415
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 147), i32 0) #8, !dbg !9416
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 148), i32 0) #8, !dbg !9417
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 149), i32 0) #8, !dbg !9418
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 150), i32 0) #8, !dbg !9419
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 151), i32 0) #8, !dbg !9420
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 152), i32 0) #8, !dbg !9421
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 153), i32 0) #8, !dbg !9422
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 154), i32 0) #8, !dbg !9423
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 155), i32 0) #8, !dbg !9424
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 157), i32 0) #8, !dbg !9425
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 156), i32 0) #8, !dbg !9426
  tail call fastcc void @init_optab(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 158), i32 0) #8, !dbg !9427
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 0), i32 98) #8, !dbg !9428
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 1), i32 99) #8, !dbg !9429
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 2), i32 100) #8, !dbg !9430
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 3), i32 104) #8, !dbg !9431
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 4), i32 106) #8, !dbg !9432
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 5), i32 0) #8, !dbg !9433
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 6), i32 0) #8, !dbg !9434
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 7), i32 103) #8, !dbg !9435
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 8), i32 105) #8, !dbg !9436
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 9), i32 0) #8, !dbg !9437
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 10), i32 0) #8, !dbg !9438
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 11), i32 0) #8, !dbg !9439
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 12), i32 0) #8, !dbg !9440
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 13), i32 107) #8, !dbg !9441
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 14), i32 108) #8, !dbg !9442
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 15), i32 109) #8, !dbg !9443
  tail call fastcc void @init_convert_optab(%struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 16), i32 110) #8, !dbg !9444
  call void @llvm.dbg.value(metadata i32 0, metadata !3246, metadata !DIExpression()), !dbg !9246
  br label %for.cond11, !dbg !9445

for.cond11:                                       ; preds = %for.body13, %for.end10
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body13 ], [ 0, %for.end10 ], !dbg !9447
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3246, metadata !DIExpression()), !dbg !9246
  %exitcond = icmp eq i64 %indvars.iv, 87, !dbg !9448
  br i1 %exitcond, label %for.end72, label %for.body13, !dbg !9450

for.body13:                                       ; preds = %for.cond11
  %arrayidx15 = getelementptr inbounds [87 x i32], [87 x i32]* @movmem_optab, i64 0, i64 %indvars.iv, !dbg !9451
  store i32 2956, i32* %arrayidx15, align 4, !dbg !9453
  %arrayidx17 = getelementptr inbounds [87 x i32], [87 x i32]* @cmpstr_optab, i64 0, i64 %indvars.iv, !dbg !9454
  store i32 2956, i32* %arrayidx17, align 4, !dbg !9455
  %arrayidx19 = getelementptr inbounds [87 x i32], [87 x i32]* @cmpstrn_optab, i64 0, i64 %indvars.iv, !dbg !9456
  store i32 2956, i32* %arrayidx19, align 4, !dbg !9457
  %arrayidx21 = getelementptr inbounds [87 x i32], [87 x i32]* @cmpmem_optab, i64 0, i64 %indvars.iv, !dbg !9458
  store i32 2956, i32* %arrayidx21, align 4, !dbg !9459
  %arrayidx23 = getelementptr inbounds [87 x i32], [87 x i32]* @setmem_optab, i64 0, i64 %indvars.iv, !dbg !9460
  store i32 2956, i32* %arrayidx23, align 4, !dbg !9461
  %arrayidx25 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_add_optab, i64 0, i64 %indvars.iv, !dbg !9462
  store i32 2956, i32* %arrayidx25, align 4, !dbg !9463
  %arrayidx27 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_sub_optab, i64 0, i64 %indvars.iv, !dbg !9464
  store i32 2956, i32* %arrayidx27, align 4, !dbg !9465
  %arrayidx29 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_ior_optab, i64 0, i64 %indvars.iv, !dbg !9466
  store i32 2956, i32* %arrayidx29, align 4, !dbg !9467
  %arrayidx31 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_and_optab, i64 0, i64 %indvars.iv, !dbg !9468
  store i32 2956, i32* %arrayidx31, align 4, !dbg !9469
  %arrayidx33 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_xor_optab, i64 0, i64 %indvars.iv, !dbg !9470
  store i32 2956, i32* %arrayidx33, align 4, !dbg !9471
  %arrayidx35 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_nand_optab, i64 0, i64 %indvars.iv, !dbg !9472
  store i32 2956, i32* %arrayidx35, align 4, !dbg !9473
  %arrayidx37 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_add_optab, i64 0, i64 %indvars.iv, !dbg !9474
  store i32 2956, i32* %arrayidx37, align 4, !dbg !9475
  %arrayidx39 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_sub_optab, i64 0, i64 %indvars.iv, !dbg !9476
  store i32 2956, i32* %arrayidx39, align 4, !dbg !9477
  %arrayidx41 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_ior_optab, i64 0, i64 %indvars.iv, !dbg !9478
  store i32 2956, i32* %arrayidx41, align 4, !dbg !9479
  %arrayidx43 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_and_optab, i64 0, i64 %indvars.iv, !dbg !9480
  store i32 2956, i32* %arrayidx43, align 4, !dbg !9481
  %arrayidx45 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_xor_optab, i64 0, i64 %indvars.iv, !dbg !9482
  store i32 2956, i32* %arrayidx45, align 4, !dbg !9483
  %arrayidx47 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_nand_optab, i64 0, i64 %indvars.iv, !dbg !9484
  store i32 2956, i32* %arrayidx47, align 4, !dbg !9485
  %arrayidx49 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_add_optab, i64 0, i64 %indvars.iv, !dbg !9486
  store i32 2956, i32* %arrayidx49, align 4, !dbg !9487
  %arrayidx51 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_sub_optab, i64 0, i64 %indvars.iv, !dbg !9488
  store i32 2956, i32* %arrayidx51, align 4, !dbg !9489
  %arrayidx53 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_ior_optab, i64 0, i64 %indvars.iv, !dbg !9490
  store i32 2956, i32* %arrayidx53, align 4, !dbg !9491
  %arrayidx55 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_and_optab, i64 0, i64 %indvars.iv, !dbg !9492
  store i32 2956, i32* %arrayidx55, align 4, !dbg !9493
  %arrayidx57 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_xor_optab, i64 0, i64 %indvars.iv, !dbg !9494
  store i32 2956, i32* %arrayidx57, align 4, !dbg !9495
  %arrayidx59 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_nand_optab, i64 0, i64 %indvars.iv, !dbg !9496
  store i32 2956, i32* %arrayidx59, align 4, !dbg !9497
  %arrayidx61 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_compare_and_swap, i64 0, i64 %indvars.iv, !dbg !9498
  store i32 2956, i32* %arrayidx61, align 4, !dbg !9499
  %arrayidx63 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_lock_test_and_set, i64 0, i64 %indvars.iv, !dbg !9500
  store i32 2956, i32* %arrayidx63, align 4, !dbg !9501
  %arrayidx65 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_lock_release, i64 0, i64 %indvars.iv, !dbg !9502
  store i32 2956, i32* %arrayidx65, align 4, !dbg !9503
  %arrayidx67 = getelementptr inbounds [87 x i32], [87 x i32]* @reload_out_optab, i64 0, i64 %indvars.iv, !dbg !9504
  store i32 2956, i32* %arrayidx67, align 4, !dbg !9505
  %arrayidx69 = getelementptr inbounds [87 x i32], [87 x i32]* @reload_in_optab, i64 0, i64 %indvars.iv, !dbg !9506
  store i32 2956, i32* %arrayidx69, align 4, !dbg !9507
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9508
  call void @llvm.dbg.value(metadata i32 undef, metadata !3246, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9246
  br label %for.cond11, !dbg !9509, !llvm.loop !9510

for.end72:                                        ; preds = %for.cond11
  tail call void @init_all_optabs() #6, !dbg !9512
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12, i32 1), align 8, !dbg !9513
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12, i32 2), align 16, !dbg !9514
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_fp_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12, i32 3), align 8, !dbg !9515
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 13, i32 1), align 8, !dbg !9516
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 13, i32 2), align 16, !dbg !9517
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_intv_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 13, i32 3), align 8, !dbg !9518
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 0, i32 1), align 8, !dbg !9519
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 0, i32 2), align 16, !dbg !9520
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_signed_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 0, i32 3), align 8, !dbg !9521
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 1, i32 1), align 8, !dbg !9522
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 1, i32 2), align 16, !dbg !9523
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_unsigned_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 1, i32 3), align 8, !dbg !9524
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14, i32 1), align 8, !dbg !9525
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14, i32 2), align 16, !dbg !9526
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_fp_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14, i32 3), align 8, !dbg !9527
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 15, i32 1), align 8, !dbg !9528
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 15, i32 2), align 16, !dbg !9529
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_intv_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 15, i32 3), align 8, !dbg !9530
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 2, i32 1), align 8, !dbg !9531
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 2, i32 2), align 16, !dbg !9532
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_signed_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 2, i32 3), align 8, !dbg !9533
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 3, i32 1), align 8, !dbg !9534
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 3, i32 2), align 16, !dbg !9535
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_unsigned_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 3, i32 3), align 8, !dbg !9536
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16, i32 1), align 8, !dbg !9537
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16, i32 2), align 16, !dbg !9538
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_fp_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 16, i32 3), align 8, !dbg !9539
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 17, i32 1), align 8, !dbg !9540
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 17, i32 2), align 16, !dbg !9541
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_intv_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 17, i32 3), align 8, !dbg !9542
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 4, i32 1), align 8, !dbg !9543
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 4, i32 2), align 16, !dbg !9544
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_signed_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 4, i32 3), align 8, !dbg !9545
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 5, i32 1), align 8, !dbg !9546
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 5, i32 2), align 16, !dbg !9547
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_unsigned_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 5, i32 3), align 8, !dbg !9548
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 31, i32 1), align 8, !dbg !9549
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 31, i32 2), align 16, !dbg !9550
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_fp_signed_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 31, i32 3), align 8, !dbg !9551
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 32, i32 1), align 8, !dbg !9552
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 32, i32 2), align 16, !dbg !9553
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 32, i32 3), align 8, !dbg !9554
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 6, i32 1), align 8, !dbg !9555
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 6, i32 2), align 16, !dbg !9556
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_signed_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 6, i32 3), align 8, !dbg !9557
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 34, i32 1), align 8, !dbg !9558
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 34, i32 2), align 16, !dbg !9559
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_unsigned_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 34, i32 3), align 8, !dbg !9560
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 7, i32 1), align 8, !dbg !9561
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 7, i32 2), align 16, !dbg !9562
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_unsigned_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 7, i32 3), align 8, !dbg !9563
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 33, i32 1), align 8, !dbg !9564
  store i8 52, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 33, i32 2), align 16, !dbg !9565
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 33, i32 3), align 8, !dbg !9566
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 35, i32 1), align 8, !dbg !9567
  store i8 52, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 35, i32 2), align 16, !dbg !9568
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 35, i32 3), align 8, !dbg !9569
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 36, i32 1), align 8, !dbg !9570
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 36, i32 2), align 16, !dbg !9571
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 36, i32 3), align 8, !dbg !9572
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 37, i32 1), align 8, !dbg !9573
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 37, i32 2), align 16, !dbg !9574
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 37, i32 3), align 8, !dbg !9575
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 40, i32 1), align 8, !dbg !9576
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 40, i32 2), align 16, !dbg !9577
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 40, i32 3), align 8, !dbg !9578
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41, i32 1), align 8, !dbg !9579
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41, i32 2), align 16, !dbg !9580
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41, i32 3), align 8, !dbg !9581
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42, i32 1), align 8, !dbg !9582
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42, i32 2), align 16, !dbg !9583
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42, i32 3), align 8, !dbg !9584
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43, i32 1), align 8, !dbg !9585
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43, i32 2), align 16, !dbg !9586
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43, i32 3), align 8, !dbg !9587
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44, i32 1), align 8, !dbg !9588
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44, i32 2), align 16, !dbg !9589
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44, i32 3), align 8, !dbg !9590
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 10, i32 1), align 8, !dbg !9591
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 10, i32 2), align 16, !dbg !9592
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_signed_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 10, i32 3), align 8, !dbg !9593
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 11, i32 1), align 8, !dbg !9594
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 11, i32 2), align 16, !dbg !9595
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_unsigned_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 11, i32 3), align 8, !dbg !9596
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 46, i32 1), align 8, !dbg !9597
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 46, i32 2), align 16, !dbg !9598
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_signed_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 46, i32 3), align 8, !dbg !9599
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45, i32 1), align 8, !dbg !9600
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45, i32 2), align 16, !dbg !9601
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_unsigned_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45, i32 3), align 8, !dbg !9602
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 54, i32 1), align 8, !dbg !9603
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 54, i32 2), align 16, !dbg !9604
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 54, i32 3), align 8, !dbg !9605
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 55, i32 1), align 8, !dbg !9606
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 55, i32 2), align 16, !dbg !9607
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 55, i32 3), align 8, !dbg !9608
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 56, i32 1), align 8, !dbg !9609
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 56, i32 2), align 16, !dbg !9610
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 56, i32 3), align 8, !dbg !9611
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 57, i32 1), align 8, !dbg !9612
  store i8 51, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 57, i32 2), align 16, !dbg !9613
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 57, i32 3), align 8, !dbg !9614
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 64, i32 1), align 8, !dbg !9615
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 64, i32 2), align 16, !dbg !9616
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_fp_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 64, i32 3), align 8, !dbg !9617
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 8, i32 1), align 8, !dbg !9618
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 8, i32 2), align 16, !dbg !9619
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_signed_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 8, i32 3), align 8, !dbg !9620
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 9, i32 1), align 8, !dbg !9621
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 9, i32 2), align 16, !dbg !9622
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_unsigned_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 9, i32 3), align 8, !dbg !9623
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 65, i32 1), align 8, !dbg !9624
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 65, i32 2), align 16, !dbg !9625
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_intv_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 65, i32 3), align 8, !dbg !9626
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 69, i32 1), align 8, !dbg !9627
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 69, i32 2), align 16, !dbg !9628
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 69, i32 3), align 8, !dbg !9629
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 70, i32 1), align 8, !dbg !9630
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 70, i32 2), align 16, !dbg !9631
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 70, i32 3), align 8, !dbg !9632
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71, i32 1), align 8, !dbg !9633
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71, i32 2), align 16, !dbg !9634
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 71, i32 3), align 8, !dbg !9635
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 72, i32 1), align 8, !dbg !9636
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 72, i32 2), align 16, !dbg !9637
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 72, i32 3), align 8, !dbg !9638
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 73, i32 1), align 8, !dbg !9639
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 73, i32 2), align 16, !dbg !9640
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 73, i32 3), align 8, !dbg !9641
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 74, i32 1), align 8, !dbg !9642
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 74, i32 2), align 16, !dbg !9643
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 74, i32 3), align 8, !dbg !9644
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 105, i32 1), align 8, !dbg !9645
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 105, i32 2), align 16, !dbg !9646
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_fp_fixed_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 105, i32 3), align 8, !dbg !9647
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 106, i32 1), align 8, !dbg !9648
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 106, i32 2), align 16, !dbg !9649
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_int_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 106, i32 3), align 8, !dbg !9650
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 107, i32 1), align 8, !dbg !9651
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 107, i32 2), align 16, !dbg !9652
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 107, i32 3), align 8, !dbg !9653
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 108, i32 1), align 8, !dbg !9654
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 108, i32 2), align 16, !dbg !9655
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 108, i32 3), align 8, !dbg !9656
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 109, i32 1), align 8, !dbg !9657
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 109, i32 2), align 16, !dbg !9658
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 109, i32 3), align 8, !dbg !9659
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 110, i32 1), align 8, !dbg !9660
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 110, i32 2), align 16, !dbg !9661
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 110, i32 3), align 8, !dbg !9662
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 111, i32 1), align 8, !dbg !9663
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 111, i32 2), align 16, !dbg !9664
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 111, i32 3), align 8, !dbg !9665
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 112, i32 1), align 8, !dbg !9666
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 112, i32 2), align 16, !dbg !9667
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 112, i32 3), align 8, !dbg !9668
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 113, i32 1), align 8, !dbg !9669
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 113, i32 2), align 16, !dbg !9670
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 113, i32 3), align 8, !dbg !9671
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), i8** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 158, i32 1), align 8, !dbg !9672
  store i8 50, i8* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 158, i32 2), align 16, !dbg !9673
  store void (%struct.optab_d*, i8*, i8, i32)* @gen_fp_libfunc, void (%struct.optab_d*, i8*, i8, i32)** getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 158, i32 3), align 8, !dbg !9674
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 7, i32 1), align 8, !dbg !9675
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_int_to_fp_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 7, i32 2), align 16, !dbg !9676
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_ufloat_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 8, i32 2), align 16, !dbg !9677
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 3, i32 1), align 8, !dbg !9678
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_fp_to_int_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 3, i32 2), align 16, !dbg !9679
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 4, i32 1), align 8, !dbg !9680
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_fp_to_int_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 4, i32 2), align 16, !dbg !9681
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 9, i32 1), align 8, !dbg !9682
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_int_to_fp_nondecimal_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 9, i32 2), align 16, !dbg !9683
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 10, i32 1), align 8, !dbg !9684
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_int_to_fp_nondecimal_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 10, i32 2), align 16, !dbg !9685
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 11, i32 1), align 8, !dbg !9686
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_int_to_fp_nondecimal_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 11, i32 2), align 16, !dbg !9687
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 12, i32 1), align 8, !dbg !9688
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_int_to_fp_nondecimal_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 12, i32 2), align 16, !dbg !9689
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 0, i32 1), align 8, !dbg !9690
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_extend_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 0, i32 2), align 16, !dbg !9691
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 2, i32 1), align 8, !dbg !9692
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_trunc_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 2, i32 2), align 16, !dbg !9693
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 13, i32 1), align 8, !dbg !9694
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_fract_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 13, i32 2), align 16, !dbg !9695
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 15, i32 1), align 8, !dbg !9696
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_satfract_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 15, i32 2), align 16, !dbg !9697
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 14, i32 1), align 8, !dbg !9698
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_fractuns_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 14, i32 2), align 16, !dbg !9699
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i64 0, i64 0), i8** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 16, i32 1), align 8, !dbg !9700
  store void (%struct.convert_optab_d*, i8*, i32, i32)* @gen_satfractuns_conv_libfunc, void (%struct.convert_optab_d*, i8*, i32, i32)** getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 16, i32 2), align 16, !dbg !9701
  tail call void @set_optab_libfunc(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 68), i32 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0)) #8, !dbg !9702
  tail call void @set_optab_libfunc(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 68), i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i64 0, i64 0)) #8, !dbg !9703
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 29), align 8, !dbg !9704
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !9704
  br i1 %tobool, label %if.end, label %if.then, !dbg !9706

if.then:                                          ; preds = %for.end72
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9706
  %bf.load = load i64, i64* %1, align 8, !dbg !9707
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9707
  %cmp73 = icmp eq i64 %bf.cast1, 14, !dbg !9707
  br i1 %cmp73, label %cond.true, label %cond.false, !dbg !9707

cond.true:                                        ; preds = %if.then
  %call74 = tail call i32 @vector_type_mode(%union.tree_node* nonnull %0) #6, !dbg !9707
  br label %cond.end, !dbg !9707

cond.false:                                       ; preds = %if.then
  %type = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !9707
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !9707
  %bf.load75 = load i32, i32* %mode, align 4, !dbg !9707
  %bf.lshr = lshr i32 %bf.load75, 16, !dbg !9707
  %bf.clear76 = and i32 %bf.lshr, 255, !dbg !9707
  br label %cond.end, !dbg !9707

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call74, %cond.true ], [ %bf.clear76, %cond.false ], !dbg !9707
  tail call void @set_optab_libfunc(%struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 66), i32 %cond, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0)) #8, !dbg !9708
  br label %if.end, !dbg !9708

if.end:                                           ; preds = %for.end72, %cond.end
  %call77 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0)) #8, !dbg !9709
  store %struct.rtx_def* %call77, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 0), align 16, !dbg !9710
  %call78 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0)) #8, !dbg !9711
  store %struct.rtx_def* %call78, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 1), align 8, !dbg !9712
  %call79 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i64 0, i64 0)) #8, !dbg !9713
  store %struct.rtx_def* %call79, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 2), align 16, !dbg !9714
  %call80 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0)) #8, !dbg !9715
  store %struct.rtx_def* %call80, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 3), align 8, !dbg !9716
  %call81 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0)) #8, !dbg !9717
  store %struct.rtx_def* %call81, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 4), align 16, !dbg !9718
  %call82 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i64 0, i64 0)) #8, !dbg !9719
  store %struct.rtx_def* %call82, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 5), align 8, !dbg !9720
  %call83 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74, i64 0, i64 0)) #8, !dbg !9721
  store %struct.rtx_def* %call83, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 6), align 16, !dbg !9722
  %call84 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.75, i64 0, i64 0)) #8, !dbg !9723
  store %struct.rtx_def* %call84, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 7), align 8, !dbg !9724
  %call85 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.76, i64 0, i64 0)) #8, !dbg !9725
  store %struct.rtx_def* %call85, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 8), align 16, !dbg !9726
  %call86 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.77, i64 0, i64 0)) #8, !dbg !9727
  store %struct.rtx_def* %call86, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 9), align 8, !dbg !9728
  %call87 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.78, i64 0, i64 0)) #8, !dbg !9729
  store %struct.rtx_def* %call87, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 10), align 16, !dbg !9730
  %call88 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.79, i64 0, i64 0)) #8, !dbg !9731
  store %struct.rtx_def* %call88, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 11), align 8, !dbg !9732
  %call89 = tail call %struct.rtx_def* @init_one_libfunc(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i64 0, i64 0)) #8, !dbg !9733
  store %struct.rtx_def* %call89, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 13), align 8, !dbg !9734
  %2 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 30), align 8, !dbg !9735
  tail call void %2() #6, !dbg !9736
  ret void, !dbg !9737
}

; Function Attrs: nounwind uwtable
define internal i32 @hash_libfunc(i8* %p) #4 !dbg !9738 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !9740, metadata !DIExpression()), !dbg !9743
  call void @llvm.dbg.value(metadata i8* %p, metadata !9741, metadata !DIExpression()), !dbg !9743
  %mode1 = getelementptr inbounds i8, i8* %p, i64 8, !dbg !9744
  %0 = bitcast i8* %mode1 to i32*, !dbg !9744
  %1 = load i32, i32* %0, align 8, !dbg !9744
  %mode2 = getelementptr inbounds i8, i8* %p, i64 12, !dbg !9745
  %2 = bitcast i8* %mode2 to i32*, !dbg !9745
  %3 = load i32, i32* %2, align 4, !dbg !9745
  %mul = mul nsw i32 %3, 87, !dbg !9746
  %add = add nsw i32 %1, %mul, !dbg !9747
  %optab = bitcast i8* %p to i64*, !dbg !9748
  %4 = load i64, i64* %optab, align 8, !dbg !9748
  %5 = trunc i64 %4 to i32, !dbg !9749
  %conv1 = xor i32 %add, %5, !dbg !9749
  ret i32 %conv1, !dbg !9750
}

; Function Attrs: nounwind uwtable
define internal i32 @eq_libfunc(i8* %p, i8* %q) #4 !dbg !9751 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !9753, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.value(metadata i8* %q, metadata !9754, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.value(metadata i8* %p, metadata !9755, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.value(metadata i8* %q, metadata !9756, metadata !DIExpression()), !dbg !9757
  %optab = bitcast i8* %p to i64*, !dbg !9758
  %0 = load i64, i64* %optab, align 8, !dbg !9758
  %optab1 = bitcast i8* %q to i64*, !dbg !9759
  %1 = load i64, i64* %optab1, align 8, !dbg !9759
  %cmp = icmp eq i64 %0, %1, !dbg !9760
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !9761

land.lhs.true:                                    ; preds = %entry
  %mode1 = getelementptr inbounds i8, i8* %p, i64 8, !dbg !9762
  %2 = bitcast i8* %mode1 to i32*, !dbg !9762
  %3 = load i32, i32* %2, align 8, !dbg !9762
  %mode12 = getelementptr inbounds i8, i8* %q, i64 8, !dbg !9763
  %4 = bitcast i8* %mode12 to i32*, !dbg !9763
  %5 = load i32, i32* %4, align 8, !dbg !9763
  %cmp3 = icmp eq i32 %3, %5, !dbg !9764
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !9765

land.rhs:                                         ; preds = %land.lhs.true
  %mode2 = getelementptr inbounds i8, i8* %p, i64 12, !dbg !9766
  %6 = bitcast i8* %mode2 to i32*, !dbg !9766
  %7 = load i32, i32* %6, align 4, !dbg !9766
  %mode24 = getelementptr inbounds i8, i8* %q, i64 12, !dbg !9767
  %8 = bitcast i8* %mode24 to i32*, !dbg !9767
  %9 = load i32, i32* %8, align 4, !dbg !9767
  %cmp5 = icmp eq i32 %7, %9, !dbg !9768
  %phitmp = zext i1 %cmp5 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i32 [ 0, %land.lhs.true ], [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %10, !dbg !9769
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_insn_codes() unnamed_addr #4 !dbg !9770 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !9772, metadata !DIExpression()), !dbg !9784
  br label %for.cond, !dbg !9785

for.cond:                                         ; preds = %for.inc6, %entry
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %for.inc6 ], [ 0, %entry ], !dbg !9786
  call void @llvm.dbg.value(metadata i64 %indvars.iv10, metadata !9772, metadata !DIExpression()), !dbg !9784
  %exitcond12 = icmp eq i64 %indvars.iv10, 159, !dbg !9787
  br i1 %exitcond12, label %for.cond9.preheader, label %for.body, !dbg !9788

for.cond9.preheader:                              ; preds = %for.cond
  br label %for.cond9, !dbg !9789

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !9773, metadata !DIExpression()), !dbg !9790
  br label %for.cond1, !dbg !9791

for.cond1:                                        ; preds = %for.body3, %for.body
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.body3 ], [ 0, %for.body ], !dbg !9793
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !9773, metadata !DIExpression()), !dbg !9790
  %exitcond9 = icmp eq i64 %indvars.iv7, 87, !dbg !9794
  br i1 %exitcond9, label %for.inc6, label %for.body3, !dbg !9796

for.body3:                                        ; preds = %for.cond1
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 %indvars.iv10, i32 4, i64 %indvars.iv7, i32 0, !dbg !9797
  store i32 2956, i32* %insn_code, align 4, !dbg !9798
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !9799
  call void @llvm.dbg.value(metadata i32 undef, metadata !9773, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9790
  br label %for.cond1, !dbg !9800, !llvm.loop !9801

for.inc6:                                         ; preds = %for.cond1
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !9803
  call void @llvm.dbg.value(metadata i32 undef, metadata !9772, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9784
  br label %for.cond, !dbg !9804, !llvm.loop !9805

for.cond9:                                        ; preds = %for.cond9.preheader, %for.inc34
  %indvars.iv4 = phi i64 [ 0, %for.cond9.preheader ], [ %indvars.iv.next5, %for.inc34 ], !dbg !9807
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !9772, metadata !DIExpression()), !dbg !9784
  %exitcond6 = icmp eq i64 %indvars.iv4, 17, !dbg !9808
  br i1 %exitcond6, label %for.end36, label %for.body11, !dbg !9789

for.body11:                                       ; preds = %for.cond9
  call void @llvm.dbg.value(metadata i32 0, metadata !9778, metadata !DIExpression()), !dbg !9809
  br label %for.cond16, !dbg !9810

for.cond16:                                       ; preds = %for.inc31, %for.body11
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc31 ], [ 0, %for.body11 ], !dbg !9812
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !9778, metadata !DIExpression()), !dbg !9809
  %exitcond3 = icmp eq i64 %indvars.iv1, 87, !dbg !9813
  br i1 %exitcond3, label %for.inc34, label %for.cond19.preheader, !dbg !9815

for.cond19.preheader:                             ; preds = %for.cond16
  br label %for.cond19, !dbg !9816

for.cond19:                                       ; preds = %for.cond19.preheader, %for.body21
  %indvars.iv = phi i64 [ 0, %for.cond19.preheader ], [ %indvars.iv.next, %for.body21 ], !dbg !9818
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9782, metadata !DIExpression()), !dbg !9809
  %exitcond = icmp eq i64 %indvars.iv, 87, !dbg !9819
  br i1 %exitcond, label %for.inc31, label %for.body21, !dbg !9816

for.body21:                                       ; preds = %for.cond19
  %insn_code27 = getelementptr inbounds [17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 %indvars.iv4, i32 3, i64 %indvars.iv1, i64 %indvars.iv, i32 0, !dbg !9821
  store i32 2956, i32* %insn_code27, align 4, !dbg !9822
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9823
  call void @llvm.dbg.value(metadata i32 undef, metadata !9782, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9809
  br label %for.cond19, !dbg !9824, !llvm.loop !9825

for.inc31:                                        ; preds = %for.cond19
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !9827
  call void @llvm.dbg.value(metadata i32 undef, metadata !9778, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9809
  br label %for.cond16, !dbg !9828, !llvm.loop !9829

for.inc34:                                        ; preds = %for.cond16
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !9831
  call void @llvm.dbg.value(metadata i32 undef, metadata !9772, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9784
  br label %for.cond9, !dbg !9832, !llvm.loop !9833

for.end36:                                        ; preds = %for.cond9
  ret void, !dbg !9835
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @init_optab(%struct.optab_d* %op, i32 %code) unnamed_addr #0 !dbg !9836 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %op, metadata !9840, metadata !DIExpression()), !dbg !9842
  call void @llvm.dbg.value(metadata i32 %code, metadata !9841, metadata !DIExpression()), !dbg !9842
  %code1 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %op, i64 0, i32 0, !dbg !9843
  store i32 %code, i32* %code1, align 8, !dbg !9844
  %idxprom = sext i32 %code to i64, !dbg !9845
  %arrayidx = getelementptr inbounds [140 x %struct.optab_d*], [140 x %struct.optab_d*]* @code_to_optab, i64 0, i64 %idxprom, !dbg !9845
  store %struct.optab_d* %op, %struct.optab_d** %arrayidx, align 8, !dbg !9846
  ret void, !dbg !9847
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @init_optabv(%struct.optab_d* %op, i32 %code) unnamed_addr #0 !dbg !9848 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %op, metadata !9850, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i32 %code, metadata !9851, metadata !DIExpression()), !dbg !9852
  %code1 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %op, i64 0, i32 0, !dbg !9853
  store i32 %code, i32* %code1, align 8, !dbg !9854
  ret void, !dbg !9855
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_convert_optab(%struct.convert_optab_d* %op, i32 %code) unnamed_addr #4 !dbg !9856 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %op, metadata !9860, metadata !DIExpression()), !dbg !9862
  call void @llvm.dbg.value(metadata i32 %code, metadata !9861, metadata !DIExpression()), !dbg !9862
  %code1 = getelementptr inbounds %struct.convert_optab_d, %struct.convert_optab_d* %op, i64 0, i32 0, !dbg !9863
  store i32 %code, i32* %code1, align 8, !dbg !9864
  ret void, !dbg !9865
}

declare dso_local void @init_all_optabs() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @gen_int_fp_fixed_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #4 !dbg !9866 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !9870, metadata !DIExpression()), !dbg !9874
  call void @llvm.dbg.value(metadata i8* %name, metadata !9871, metadata !DIExpression()), !dbg !9874
  call void @llvm.dbg.value(metadata i8 %suffix, metadata !9872, metadata !DIExpression()), !dbg !9874
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9873, metadata !DIExpression()), !dbg !9874
  %idxprom = zext i32 %mode to i64, !dbg !9875
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !9875
  %0 = load i8, i8* %arrayidx, align 1, !dbg !9875
  %cmp = icmp eq i8 %0, 9, !dbg !9875
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9877

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 8, !dbg !9878
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9879

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @gen_fp_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !9880
  br label %if.end, !dbg !9880

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %cmp10 = icmp eq i8 %0, 2, !dbg !9881
  br i1 %cmp10, label %if.then30, label %lor.lhs.false12, !dbg !9881

lor.lhs.false12:                                  ; preds = %if.end
  %cmp16 = icmp eq i8 %0, 3, !dbg !9881
  br i1 %cmp16, label %if.then30, label %lor.lhs.false18, !dbg !9881

lor.lhs.false18:                                  ; preds = %lor.lhs.false12
  %cmp22 = icmp eq i8 %0, 10, !dbg !9881
  br i1 %cmp22, label %if.then30, label %lor.lhs.false24, !dbg !9881

lor.lhs.false24:                                  ; preds = %lor.lhs.false18
  %cmp28 = icmp eq i8 %0, 12, !dbg !9881
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !9883

if.then30:                                        ; preds = %lor.lhs.false24, %lor.lhs.false18, %lor.lhs.false12, %if.end
  tail call void @gen_int_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !9884
  br label %if.end31, !dbg !9884

if.end31:                                         ; preds = %if.then30, %lor.lhs.false24
  %cmp35 = icmp eq i8 %0, 4, !dbg !9885
  br i1 %cmp35, label %if.then79, label %lor.lhs.false37, !dbg !9885

lor.lhs.false37:                                  ; preds = %if.end31
  %cmp41 = icmp eq i8 %0, 13, !dbg !9885
  br i1 %cmp41, label %if.then79, label %lor.lhs.false43, !dbg !9885

lor.lhs.false43:                                  ; preds = %lor.lhs.false37
  %cmp47 = icmp eq i8 %0, 6, !dbg !9885
  br i1 %cmp47, label %if.then79, label %lor.lhs.false49, !dbg !9885

lor.lhs.false49:                                  ; preds = %lor.lhs.false43
  %cmp53 = icmp eq i8 %0, 15, !dbg !9885
  br i1 %cmp53, label %if.then79, label %lor.lhs.false55, !dbg !9885

lor.lhs.false55:                                  ; preds = %lor.lhs.false49
  %cmp59 = icmp eq i8 %0, 5, !dbg !9885
  br i1 %cmp59, label %if.then79, label %lor.lhs.false61, !dbg !9885

lor.lhs.false61:                                  ; preds = %lor.lhs.false55
  %cmp65 = icmp eq i8 %0, 14, !dbg !9885
  br i1 %cmp65, label %if.then79, label %lor.lhs.false67, !dbg !9885

lor.lhs.false67:                                  ; preds = %lor.lhs.false61
  %cmp71 = icmp eq i8 %0, 7, !dbg !9885
  br i1 %cmp71, label %if.then79, label %lor.lhs.false73, !dbg !9885

lor.lhs.false73:                                  ; preds = %lor.lhs.false67
  %cmp77 = icmp eq i8 %0, 16, !dbg !9885
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !9887

if.then79:                                        ; preds = %lor.lhs.false73, %lor.lhs.false67, %lor.lhs.false61, %lor.lhs.false55, %lor.lhs.false49, %lor.lhs.false43, %lor.lhs.false37, %if.end31
  tail call fastcc void @gen_fixed_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !9888
  br label %if.end80, !dbg !9888

if.end80:                                         ; preds = %if.then79, %lor.lhs.false73
  ret void, !dbg !9889
}

; Function Attrs: nounwind uwtable
define internal void @gen_intv_fp_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #4 !dbg !9890 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !9892, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i8* %name, metadata !9893, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i8 %suffix, metadata !9894, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9895, metadata !DIExpression()), !dbg !9900
  %idxprom = zext i32 %mode to i64, !dbg !9901
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !9901
  %0 = load i8, i8* %arrayidx, align 1, !dbg !9901
  %cmp = icmp eq i8 %0, 9, !dbg !9901
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9903

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 8, !dbg !9904
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9905

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @gen_fp_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !9906
  br label %if.end, !dbg !9906

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %cmp10 = icmp eq i8 %0, 2, !dbg !9907
  br i1 %cmp10, label %if.then12, label %if.end21, !dbg !9908

if.then12:                                        ; preds = %if.end
  %call = tail call i64 @strlen(i8* %name) #6, !dbg !9909
  %add = shl i64 %call, 32, !dbg !9910
  %sext = add i64 %add, 8589934592, !dbg !9910
  %conv14 = ashr exact i64 %sext, 32, !dbg !9910
  %1 = alloca i8, i64 %conv14, align 16, !dbg !9910
  call void @llvm.dbg.value(metadata i8* %1, metadata !9899, metadata !DIExpression()), !dbg !9911
  %call15 = call i8* @strcpy(i8* nonnull %1, i8* %name) #6, !dbg !9912
  %idxprom16 = ashr exact i64 %add, 32, !dbg !9913
  %arrayidx17 = getelementptr inbounds i8, i8* %1, i64 %idxprom16, !dbg !9913
  store i8 118, i8* %arrayidx17, align 1, !dbg !9914
  %sext2 = add i64 %add, 4294967296, !dbg !9915
  %idxprom19 = ashr exact i64 %sext2, 32, !dbg !9915
  %arrayidx20 = getelementptr inbounds i8, i8* %1, i64 %idxprom19, !dbg !9915
  store i8 0, i8* %arrayidx20, align 1, !dbg !9916
  call void @gen_int_libfunc(%struct.optab_d* %optable, i8* nonnull %1, i8 signext %suffix, i32 %mode) #8, !dbg !9917
  br label %if.end21, !dbg !9918

if.end21:                                         ; preds = %if.then12, %if.end
  ret void, !dbg !9919
}

; Function Attrs: nounwind uwtable
define internal void @gen_signed_fixed_libfunc(%struct.optab_d* %optable, i8* %opname, i8 signext %suffix, i32 %mode) #4 !dbg !9920 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !9922, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i8* %opname, metadata !9923, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i8 %suffix, metadata !9924, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9925, metadata !DIExpression()), !dbg !9926
  %idxprom = zext i32 %mode to i64, !dbg !9927
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !9927
  %0 = load i8, i8* %arrayidx, align 1, !dbg !9927
  %cmp = icmp eq i8 %0, 4, !dbg !9927
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !9927

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 13, !dbg !9927
  br i1 %cmp5, label %if.end, label %lor.lhs.false7, !dbg !9927

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i8 %0, 6, !dbg !9927
  br i1 %cmp11, label %if.end, label %lor.lhs.false13, !dbg !9927

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %cmp17 = icmp eq i8 %0, 15, !dbg !9927
  br i1 %cmp17, label %if.end, label %return, !dbg !9929

if.end:                                           ; preds = %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false, %entry
  %conv19 = sext i8 %suffix to i32, !dbg !9930
  tail call fastcc void @gen_libfunc(%struct.optab_d* %optable, i8* %opname, i32 %conv19, i32 %mode) #8, !dbg !9931
  br label %return, !dbg !9932

return:                                           ; preds = %lor.lhs.false13, %if.end
  ret void, !dbg !9932
}

; Function Attrs: nounwind uwtable
define internal void @gen_unsigned_fixed_libfunc(%struct.optab_d* %optable, i8* %opname, i8 signext %suffix, i32 %mode) #4 !dbg !9933 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !9935, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i8* %opname, metadata !9936, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i8 %suffix, metadata !9937, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9938, metadata !DIExpression()), !dbg !9939
  %idxprom = zext i32 %mode to i64, !dbg !9940
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !9940
  %0 = load i8, i8* %arrayidx, align 1, !dbg !9940
  %cmp = icmp eq i8 %0, 5, !dbg !9940
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !9940

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 14, !dbg !9940
  br i1 %cmp5, label %if.end, label %lor.lhs.false7, !dbg !9940

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i8 %0, 7, !dbg !9940
  br i1 %cmp11, label %if.end, label %lor.lhs.false13, !dbg !9940

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %cmp17 = icmp eq i8 %0, 16, !dbg !9940
  br i1 %cmp17, label %if.end, label %return, !dbg !9942

if.end:                                           ; preds = %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false, %entry
  %conv19 = sext i8 %suffix to i32, !dbg !9943
  tail call fastcc void @gen_libfunc(%struct.optab_d* %optable, i8* %opname, i32 %conv19, i32 %mode) #8, !dbg !9944
  br label %return, !dbg !9945

return:                                           ; preds = %lor.lhs.false13, %if.end
  ret void, !dbg !9945
}

; Function Attrs: nounwind uwtable
define internal void @gen_int_fp_signed_fixed_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #4 !dbg !9946 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !9948, metadata !DIExpression()), !dbg !9952
  call void @llvm.dbg.value(metadata i8* %name, metadata !9949, metadata !DIExpression()), !dbg !9952
  call void @llvm.dbg.value(metadata i8 %suffix, metadata !9950, metadata !DIExpression()), !dbg !9952
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9951, metadata !DIExpression()), !dbg !9952
  %idxprom = zext i32 %mode to i64, !dbg !9953
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !9953
  %0 = load i8, i8* %arrayidx, align 1, !dbg !9953
  %cmp = icmp eq i8 %0, 9, !dbg !9953
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9955

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 8, !dbg !9956
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9957

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @gen_fp_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !9958
  br label %if.end, !dbg !9958

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %cmp10 = icmp eq i8 %0, 2, !dbg !9959
  br i1 %cmp10, label %if.then30, label %lor.lhs.false12, !dbg !9959

lor.lhs.false12:                                  ; preds = %if.end
  %cmp16 = icmp eq i8 %0, 3, !dbg !9959
  br i1 %cmp16, label %if.then30, label %lor.lhs.false18, !dbg !9959

lor.lhs.false18:                                  ; preds = %lor.lhs.false12
  %cmp22 = icmp eq i8 %0, 10, !dbg !9959
  br i1 %cmp22, label %if.then30, label %lor.lhs.false24, !dbg !9959

lor.lhs.false24:                                  ; preds = %lor.lhs.false18
  %cmp28 = icmp eq i8 %0, 12, !dbg !9959
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !9961

if.then30:                                        ; preds = %lor.lhs.false24, %lor.lhs.false18, %lor.lhs.false12, %if.end
  tail call void @gen_int_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !9962
  br label %if.end31, !dbg !9962

if.end31:                                         ; preds = %if.then30, %lor.lhs.false24
  %cmp35 = icmp eq i8 %0, 4, !dbg !9963
  br i1 %cmp35, label %if.then55, label %lor.lhs.false37, !dbg !9963

lor.lhs.false37:                                  ; preds = %if.end31
  %cmp41 = icmp eq i8 %0, 13, !dbg !9963
  br i1 %cmp41, label %if.then55, label %lor.lhs.false43, !dbg !9963

lor.lhs.false43:                                  ; preds = %lor.lhs.false37
  %cmp47 = icmp eq i8 %0, 6, !dbg !9963
  br i1 %cmp47, label %if.then55, label %lor.lhs.false49, !dbg !9963

lor.lhs.false49:                                  ; preds = %lor.lhs.false43
  %cmp53 = icmp eq i8 %0, 15, !dbg !9963
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !9965

if.then55:                                        ; preds = %lor.lhs.false49, %lor.lhs.false43, %lor.lhs.false37, %if.end31
  tail call void @gen_signed_fixed_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !9966
  br label %if.end56, !dbg !9966

if.end56:                                         ; preds = %if.then55, %lor.lhs.false49
  ret void, !dbg !9967
}

; Function Attrs: nounwind uwtable
define internal void @gen_int_libfunc(%struct.optab_d* %optable, i8* %opname, i8 signext %suffix, i32 %mode) #4 !dbg !9968 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !9970, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.value(metadata i8* %opname, metadata !9971, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.value(metadata i8 %suffix, metadata !9972, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9973, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.value(metadata i32 64, metadata !9974, metadata !DIExpression()), !dbg !9975
  %idxprom = zext i32 %mode to i64, !dbg !9976
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !9976
  %0 = load i8, i8* %arrayidx, align 1, !dbg !9976
  %cmp = icmp eq i8 %0, 2, !dbg !9978
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !9979

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 64, metadata !9974, metadata !DIExpression()), !dbg !9975
  %1 = load i32, i32* @word_mode, align 4, !dbg !9980
  %cmp11 = icmp ugt i32 %1, %mode, !dbg !9982
  br i1 %cmp11, label %cleanup.cont, label %lor.lhs.false13, !dbg !9983

lor.lhs.false13:                                  ; preds = %if.end
  %arrayidx15 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !9984
  %2 = load i8, i8* %arrayidx15, align 1, !dbg !9984
  %cmp20 = icmp ugt i8 %2, 8, !dbg !9985
  br i1 %cmp20, label %cleanup.cont, label %if.end23, !dbg !9986

if.end23:                                         ; preds = %lor.lhs.false13
  %conv24 = sext i8 %suffix to i32, !dbg !9987
  tail call fastcc void @gen_libfunc(%struct.optab_d* %optable, i8* %opname, i32 %conv24, i32 %mode) #8, !dbg !9988
  br label %cleanup.cont, !dbg !9989

cleanup.cont:                                     ; preds = %entry, %if.end23, %lor.lhs.false13, %if.end
  ret void, !dbg !9989
}

; Function Attrs: nounwind uwtable
define internal void @gen_int_unsigned_fixed_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #4 !dbg !9990 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !9992, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i8* %name, metadata !9993, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i8 %suffix, metadata !9994, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9995, metadata !DIExpression()), !dbg !9996
  %idxprom = zext i32 %mode to i64, !dbg !9997
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !9997
  %0 = load i8, i8* %arrayidx, align 1, !dbg !9997
  %cmp = icmp eq i8 %0, 2, !dbg !9997
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9997

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 3, !dbg !9997
  br i1 %cmp5, label %if.then, label %lor.lhs.false7, !dbg !9997

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i8 %0, 10, !dbg !9997
  br i1 %cmp11, label %if.then, label %lor.lhs.false13, !dbg !9997

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %cmp17 = icmp eq i8 %0, 12, !dbg !9997
  br i1 %cmp17, label %if.then, label %if.end, !dbg !9999

if.then:                                          ; preds = %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false, %entry
  tail call void @gen_int_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !10000
  br label %if.end, !dbg !10000

if.end:                                           ; preds = %if.then, %lor.lhs.false13
  %cmp22 = icmp eq i8 %0, 5, !dbg !10001
  br i1 %cmp22, label %if.then42, label %lor.lhs.false24, !dbg !10001

lor.lhs.false24:                                  ; preds = %if.end
  %cmp28 = icmp eq i8 %0, 14, !dbg !10001
  br i1 %cmp28, label %if.then42, label %lor.lhs.false30, !dbg !10001

lor.lhs.false30:                                  ; preds = %lor.lhs.false24
  %cmp34 = icmp eq i8 %0, 7, !dbg !10001
  br i1 %cmp34, label %if.then42, label %lor.lhs.false36, !dbg !10001

lor.lhs.false36:                                  ; preds = %lor.lhs.false30
  %cmp40 = icmp eq i8 %0, 16, !dbg !10001
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !10003

if.then42:                                        ; preds = %lor.lhs.false36, %lor.lhs.false30, %lor.lhs.false24, %if.end
  tail call void @gen_unsigned_fixed_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !10004
  br label %if.end43, !dbg !10004

if.end43:                                         ; preds = %if.then42, %lor.lhs.false36
  ret void, !dbg !10005
}

; Function Attrs: nounwind uwtable
define internal void @gen_fp_libfunc(%struct.optab_d* %optable, i8* %opname, i8 signext %suffix, i32 %mode) #4 !dbg !10006 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !10008, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i8* %opname, metadata !10009, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i8 %suffix, metadata !10010, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i32 %mode, metadata !10011, metadata !DIExpression()), !dbg !10013
  %idxprom = zext i32 %mode to i64, !dbg !10014
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10014
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10014
  %cmp = icmp eq i8 %0, 8, !dbg !10016
  br i1 %cmp, label %if.then, label %if.end, !dbg !10017

if.then:                                          ; preds = %entry
  %conv2 = sext i8 %suffix to i32, !dbg !10018
  tail call fastcc void @gen_libfunc(%struct.optab_d* %optable, i8* %opname, i32 %conv2, i32 %mode) #8, !dbg !10019
  br label %if.end, !dbg !10019

if.end:                                           ; preds = %if.then, %entry
  %cmp6 = icmp eq i8 %0, 9, !dbg !10020
  br i1 %cmp6, label %if.then8, label %if.end13, !dbg !10022

if.then8:                                         ; preds = %if.end
  %call = tail call i64 @strlen(i8* %opname) #6, !dbg !10023
  %add = add i64 %call, 5, !dbg !10023
  %1 = alloca i8, i64 %add, align 16, !dbg !10023
  call void @llvm.dbg.value(metadata i8* %1, metadata !10012, metadata !DIExpression()), !dbg !10013
  %call9 = call i8* @memcpy(i8* nonnull %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), i64 4) #6, !dbg !10025
  %add.ptr10 = getelementptr inbounds i8, i8* %1, i64 4, !dbg !10026
  %call11 = call i8* @strcpy(i8* nonnull %add.ptr10, i8* %opname) #6, !dbg !10027
  %conv12 = sext i8 %suffix to i32, !dbg !10028
  call fastcc void @gen_libfunc(%struct.optab_d* %optable, i8* nonnull %1, i32 %conv12, i32 %mode) #8, !dbg !10029
  br label %if.end13, !dbg !10030

if.end13:                                         ; preds = %if.then8, %if.end
  ret void, !dbg !10031
}

; Function Attrs: nounwind uwtable
define internal void @gen_int_fixed_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #4 !dbg !10032 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !10034, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i8* %name, metadata !10035, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i8 %suffix, metadata !10036, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %mode, metadata !10037, metadata !DIExpression()), !dbg !10038
  %idxprom = zext i32 %mode to i64, !dbg !10039
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10039
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10039
  %cmp = icmp eq i8 %0, 2, !dbg !10039
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10039

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 3, !dbg !10039
  br i1 %cmp5, label %if.then, label %lor.lhs.false7, !dbg !10039

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i8 %0, 10, !dbg !10039
  br i1 %cmp11, label %if.then, label %lor.lhs.false13, !dbg !10039

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %cmp17 = icmp eq i8 %0, 12, !dbg !10039
  br i1 %cmp17, label %if.then, label %if.end, !dbg !10041

if.then:                                          ; preds = %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false, %entry
  tail call void @gen_int_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !10042
  br label %if.end, !dbg !10042

if.end:                                           ; preds = %if.then, %lor.lhs.false13
  %cmp22 = icmp eq i8 %0, 4, !dbg !10043
  br i1 %cmp22, label %if.then66, label %lor.lhs.false24, !dbg !10043

lor.lhs.false24:                                  ; preds = %if.end
  %cmp28 = icmp eq i8 %0, 13, !dbg !10043
  br i1 %cmp28, label %if.then66, label %lor.lhs.false30, !dbg !10043

lor.lhs.false30:                                  ; preds = %lor.lhs.false24
  %cmp34 = icmp eq i8 %0, 6, !dbg !10043
  br i1 %cmp34, label %if.then66, label %lor.lhs.false36, !dbg !10043

lor.lhs.false36:                                  ; preds = %lor.lhs.false30
  %cmp40 = icmp eq i8 %0, 15, !dbg !10043
  br i1 %cmp40, label %if.then66, label %lor.lhs.false42, !dbg !10043

lor.lhs.false42:                                  ; preds = %lor.lhs.false36
  %cmp46 = icmp eq i8 %0, 5, !dbg !10043
  br i1 %cmp46, label %if.then66, label %lor.lhs.false48, !dbg !10043

lor.lhs.false48:                                  ; preds = %lor.lhs.false42
  %cmp52 = icmp eq i8 %0, 14, !dbg !10043
  br i1 %cmp52, label %if.then66, label %lor.lhs.false54, !dbg !10043

lor.lhs.false54:                                  ; preds = %lor.lhs.false48
  %cmp58 = icmp eq i8 %0, 7, !dbg !10043
  br i1 %cmp58, label %if.then66, label %lor.lhs.false60, !dbg !10043

lor.lhs.false60:                                  ; preds = %lor.lhs.false54
  %cmp64 = icmp eq i8 %0, 16, !dbg !10043
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !10045

if.then66:                                        ; preds = %lor.lhs.false60, %lor.lhs.false54, %lor.lhs.false48, %lor.lhs.false42, %lor.lhs.false36, %lor.lhs.false30, %lor.lhs.false24, %if.end
  tail call fastcc void @gen_fixed_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !10046
  br label %if.end67, !dbg !10046

if.end67:                                         ; preds = %if.then66, %lor.lhs.false60
  ret void, !dbg !10047
}

; Function Attrs: nounwind uwtable
define internal void @gen_int_signed_fixed_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #4 !dbg !10048 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !10050, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata i8* %name, metadata !10051, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata i8 %suffix, metadata !10052, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata i32 %mode, metadata !10053, metadata !DIExpression()), !dbg !10054
  %idxprom = zext i32 %mode to i64, !dbg !10055
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10055
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10055
  %cmp = icmp eq i8 %0, 2, !dbg !10055
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10055

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 3, !dbg !10055
  br i1 %cmp5, label %if.then, label %lor.lhs.false7, !dbg !10055

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i8 %0, 10, !dbg !10055
  br i1 %cmp11, label %if.then, label %lor.lhs.false13, !dbg !10055

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %cmp17 = icmp eq i8 %0, 12, !dbg !10055
  br i1 %cmp17, label %if.then, label %if.end, !dbg !10057

if.then:                                          ; preds = %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false, %entry
  tail call void @gen_int_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !10058
  br label %if.end, !dbg !10058

if.end:                                           ; preds = %if.then, %lor.lhs.false13
  %cmp22 = icmp eq i8 %0, 4, !dbg !10059
  br i1 %cmp22, label %if.then42, label %lor.lhs.false24, !dbg !10059

lor.lhs.false24:                                  ; preds = %if.end
  %cmp28 = icmp eq i8 %0, 13, !dbg !10059
  br i1 %cmp28, label %if.then42, label %lor.lhs.false30, !dbg !10059

lor.lhs.false30:                                  ; preds = %lor.lhs.false24
  %cmp34 = icmp eq i8 %0, 6, !dbg !10059
  br i1 %cmp34, label %if.then42, label %lor.lhs.false36, !dbg !10059

lor.lhs.false36:                                  ; preds = %lor.lhs.false30
  %cmp40 = icmp eq i8 %0, 15, !dbg !10059
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !10061

if.then42:                                        ; preds = %lor.lhs.false36, %lor.lhs.false30, %lor.lhs.false24, %if.end
  tail call void @gen_signed_fixed_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !10062
  br label %if.end43, !dbg !10062

if.end43:                                         ; preds = %if.then42, %lor.lhs.false36
  ret void, !dbg !10063
}

; Function Attrs: nounwind uwtable
define internal void @gen_int_fp_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #4 !dbg !10064 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !10066, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i8* %name, metadata !10067, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i8 %suffix, metadata !10068, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i32 %mode, metadata !10069, metadata !DIExpression()), !dbg !10070
  %idxprom = zext i32 %mode to i64, !dbg !10071
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10071
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10071
  %cmp = icmp eq i8 %0, 9, !dbg !10071
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10073

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 8, !dbg !10074
  br i1 %cmp5, label %if.then, label %if.end, !dbg !10075

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @gen_fp_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !10076
  br label %if.end, !dbg !10076

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %cmp10 = icmp eq i8 %0, 2, !dbg !10077
  br i1 %cmp10, label %if.then30, label %lor.lhs.false12, !dbg !10077

lor.lhs.false12:                                  ; preds = %if.end
  %cmp16 = icmp eq i8 %0, 3, !dbg !10077
  br i1 %cmp16, label %if.then30, label %lor.lhs.false18, !dbg !10077

lor.lhs.false18:                                  ; preds = %lor.lhs.false12
  %cmp22 = icmp eq i8 %0, 10, !dbg !10077
  br i1 %cmp22, label %if.then30, label %lor.lhs.false24, !dbg !10077

lor.lhs.false24:                                  ; preds = %lor.lhs.false18
  %cmp28 = icmp eq i8 %0, 12, !dbg !10077
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !10079

if.then30:                                        ; preds = %lor.lhs.false24, %lor.lhs.false18, %lor.lhs.false12, %if.end
  tail call void @gen_int_libfunc(%struct.optab_d* %optable, i8* %name, i8 signext %suffix, i32 %mode) #8, !dbg !10080
  br label %if.end31, !dbg !10080

if.end31:                                         ; preds = %if.then30, %lor.lhs.false24
  ret void, !dbg !10081
}

; Function Attrs: nounwind uwtable
define internal void @gen_int_to_fp_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #4 !dbg !10082 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !10086, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i8* %opname, metadata !10087, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !10088, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !10089, metadata !DIExpression()), !dbg !10090
  %idxprom = zext i32 %fmode to i64, !dbg !10091
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10091
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10091
  %cmp = icmp eq i8 %0, 2, !dbg !10093
  br i1 %cmp, label %if.end, label %return, !dbg !10094

if.end:                                           ; preds = %entry
  %idxprom2 = zext i32 %tmode to i64, !dbg !10095
  %arrayidx3 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2, !dbg !10095
  %1 = load i8, i8* %arrayidx3, align 1, !dbg !10095
  %cmp5 = icmp eq i8 %1, 8, !dbg !10097
  br i1 %cmp5, label %if.end13, label %land.lhs.true, !dbg !10098

land.lhs.true:                                    ; preds = %if.end
  %cmp10 = icmp eq i8 %1, 9, !dbg !10099
  br i1 %cmp10, label %if.end13, label %return, !dbg !10100

if.end13:                                         ; preds = %if.end, %land.lhs.true
  tail call fastcc void @gen_interclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10101
  br label %return, !dbg !10102

return:                                           ; preds = %entry, %land.lhs.true, %if.end13
  ret void, !dbg !10102
}

; Function Attrs: nounwind uwtable
define internal void @gen_ufloat_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #4 !dbg !10103 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !10105, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.value(metadata i8* %opname, metadata !10106, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !10107, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !10108, metadata !DIExpression()), !dbg !10109
  %idxprom = zext i32 %tmode to i64, !dbg !10110
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10110
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10110
  %cmp = icmp eq i8 %0, 9, !dbg !10110
  br i1 %cmp, label %if.then, label %if.else, !dbg !10112

if.then:                                          ; preds = %entry
  tail call void @gen_int_to_fp_conv_libfunc(%struct.convert_optab_d* %tab, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.84, i64 0, i64 0), i32 %tmode, i32 %fmode) #8, !dbg !10113
  br label %if.end, !dbg !10113

if.else:                                          ; preds = %entry
  tail call void @gen_int_to_fp_conv_libfunc(%struct.convert_optab_d* %tab, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i64 0, i64 0), i32 %tmode, i32 %fmode) #8, !dbg !10114
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10115
}

; Function Attrs: nounwind uwtable
define internal void @gen_fp_to_int_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #4 !dbg !10116 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !10118, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata i8* %opname, metadata !10119, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !10120, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !10121, metadata !DIExpression()), !dbg !10122
  %idxprom = zext i32 %fmode to i64, !dbg !10123
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10123
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10123
  %cmp = icmp eq i8 %0, 8, !dbg !10125
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !10126

land.lhs.true:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 9, !dbg !10127
  br i1 %cmp5, label %if.end, label %return, !dbg !10128

if.end:                                           ; preds = %entry, %land.lhs.true
  %idxprom7 = zext i32 %tmode to i64, !dbg !10129
  %arrayidx8 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom7, !dbg !10129
  %1 = load i8, i8* %arrayidx8, align 1, !dbg !10129
  %cmp10 = icmp eq i8 %1, 2, !dbg !10131
  br i1 %cmp10, label %if.end13, label %return, !dbg !10132

if.end13:                                         ; preds = %if.end
  tail call fastcc void @gen_interclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10133
  br label %return, !dbg !10134

return:                                           ; preds = %if.end, %land.lhs.true, %if.end13
  ret void, !dbg !10134
}

; Function Attrs: nounwind uwtable
define internal void @gen_int_to_fp_nondecimal_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #4 !dbg !10135 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !10137, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i8* %opname, metadata !10138, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !10139, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !10140, metadata !DIExpression()), !dbg !10141
  %idxprom = zext i32 %fmode to i64, !dbg !10142
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10142
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10142
  %cmp = icmp eq i8 %0, 2, !dbg !10144
  br i1 %cmp, label %if.end, label %return, !dbg !10145

if.end:                                           ; preds = %entry
  %idxprom2 = zext i32 %tmode to i64, !dbg !10146
  %arrayidx3 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2, !dbg !10146
  %1 = load i8, i8* %arrayidx3, align 1, !dbg !10146
  %cmp5 = icmp eq i8 %1, 8, !dbg !10148
  br i1 %cmp5, label %if.end8, label %return, !dbg !10149

if.end8:                                          ; preds = %if.end
  tail call fastcc void @gen_interclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10150
  br label %return, !dbg !10151

return:                                           ; preds = %if.end, %entry, %if.end8
  ret void, !dbg !10151
}

; Function Attrs: nounwind uwtable
define internal void @gen_extend_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #4 !dbg !10152 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !10154, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i8* %opname, metadata !10155, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !10156, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !10157, metadata !DIExpression()), !dbg !10158
  %idxprom = zext i32 %tmode to i64, !dbg !10159
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10159
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10159
  %cmp = icmp eq i8 %0, 8, !dbg !10161
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !10162

land.lhs.true:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 9, !dbg !10163
  br i1 %cmp5, label %if.end, label %if.end82, !dbg !10164

if.end:                                           ; preds = %entry, %land.lhs.true
  %idxprom7 = zext i32 %fmode to i64, !dbg !10165
  %arrayidx8 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom7, !dbg !10165
  %1 = load i8, i8* %arrayidx8, align 1, !dbg !10165
  %cmp10 = icmp eq i8 %1, 8, !dbg !10167
  br i1 %cmp10, label %if.end19, label %land.lhs.true12, !dbg !10168

land.lhs.true12:                                  ; preds = %if.end
  %cmp16 = icmp ne i8 %1, 9, !dbg !10169
  %cmp20 = icmp eq i32 %tmode, %fmode, !dbg !10170
  %or.cond = or i1 %cmp16, %cmp20, !dbg !10172
  br i1 %or.cond, label %if.end82, label %if.end23, !dbg !10172

if.end19:                                         ; preds = %if.end
  %cmp20.old = icmp eq i32 %tmode, %fmode, !dbg !10170
  br i1 %cmp20.old, label %if.end82, label %if.end23, !dbg !10173

if.end23:                                         ; preds = %land.lhs.true12, %if.end19
  br i1 %cmp, label %land.lhs.true29, label %lor.lhs.false, !dbg !10174

land.lhs.true29:                                  ; preds = %if.end23
  %cmp33 = icmp eq i8 %1, 9, !dbg !10176
  br i1 %cmp33, label %if.then46, label %lor.lhs.false, !dbg !10177

lor.lhs.false:                                    ; preds = %land.lhs.true29, %if.end23
  br i1 %cmp10, label %land.lhs.true40, label %if.end47, !dbg !10178

land.lhs.true40:                                  ; preds = %lor.lhs.false
  %cmp44 = icmp eq i8 %0, 9, !dbg !10179
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !10180

if.then46:                                        ; preds = %land.lhs.true40, %land.lhs.true29
  tail call fastcc void @gen_interclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10181
  br label %if.end47, !dbg !10181

if.end47:                                         ; preds = %if.then46, %land.lhs.true40, %lor.lhs.false
  %arrayidx49 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom7, !dbg !10182
  %2 = load i16, i16* %arrayidx49, align 2, !dbg !10182
  %arrayidx52 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom, !dbg !10184
  %3 = load i16, i16* %arrayidx52, align 2, !dbg !10184
  %cmp54 = icmp ugt i16 %2, %3, !dbg !10185
  br i1 %cmp54, label %if.end82, label %if.end57, !dbg !10186

if.end57:                                         ; preds = %if.end47
  br i1 %cmp, label %land.lhs.true63, label %lor.lhs.false69, !dbg !10187

land.lhs.true63:                                  ; preds = %if.end57
  br i1 %cmp10, label %if.then81, label %lor.lhs.false69, !dbg !10189

lor.lhs.false69:                                  ; preds = %land.lhs.true63, %if.end57
  %cmp73 = icmp eq i8 %1, 9, !dbg !10190
  br i1 %cmp73, label %land.lhs.true75, label %if.end82, !dbg !10191

land.lhs.true75:                                  ; preds = %lor.lhs.false69
  %cmp79 = icmp eq i8 %0, 9, !dbg !10192
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !10193

if.then81:                                        ; preds = %land.lhs.true75, %land.lhs.true63
  tail call fastcc void @gen_intraclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10194
  br label %if.end82, !dbg !10194

if.end82:                                         ; preds = %land.lhs.true12, %if.end47, %if.end19, %land.lhs.true, %if.then81, %land.lhs.true75, %lor.lhs.false69
  ret void, !dbg !10195
}

; Function Attrs: nounwind uwtable
define internal void @gen_trunc_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #4 !dbg !10196 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !10198, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata i8* %opname, metadata !10199, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !10200, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !10201, metadata !DIExpression()), !dbg !10202
  %idxprom = zext i32 %tmode to i64, !dbg !10203
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10203
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10203
  %cmp = icmp eq i8 %0, 8, !dbg !10205
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !10206

land.lhs.true:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 9, !dbg !10207
  br i1 %cmp5, label %if.end, label %if.end82, !dbg !10208

if.end:                                           ; preds = %entry, %land.lhs.true
  %idxprom7 = zext i32 %fmode to i64, !dbg !10209
  %arrayidx8 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom7, !dbg !10209
  %1 = load i8, i8* %arrayidx8, align 1, !dbg !10209
  %cmp10 = icmp eq i8 %1, 8, !dbg !10211
  br i1 %cmp10, label %if.end19, label %land.lhs.true12, !dbg !10212

land.lhs.true12:                                  ; preds = %if.end
  %cmp16 = icmp ne i8 %1, 9, !dbg !10213
  %cmp20 = icmp eq i32 %tmode, %fmode, !dbg !10214
  %or.cond = or i1 %cmp16, %cmp20, !dbg !10216
  br i1 %or.cond, label %if.end82, label %if.end23, !dbg !10216

if.end19:                                         ; preds = %if.end
  %cmp20.old = icmp eq i32 %tmode, %fmode, !dbg !10214
  br i1 %cmp20.old, label %if.end82, label %if.end23, !dbg !10217

if.end23:                                         ; preds = %land.lhs.true12, %if.end19
  br i1 %cmp, label %land.lhs.true29, label %lor.lhs.false, !dbg !10218

land.lhs.true29:                                  ; preds = %if.end23
  %cmp33 = icmp eq i8 %1, 9, !dbg !10220
  br i1 %cmp33, label %if.then46, label %lor.lhs.false, !dbg !10221

lor.lhs.false:                                    ; preds = %land.lhs.true29, %if.end23
  br i1 %cmp10, label %land.lhs.true40, label %if.end47, !dbg !10222

land.lhs.true40:                                  ; preds = %lor.lhs.false
  %cmp44 = icmp eq i8 %0, 9, !dbg !10223
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !10224

if.then46:                                        ; preds = %land.lhs.true40, %land.lhs.true29
  tail call fastcc void @gen_interclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10225
  br label %if.end47, !dbg !10225

if.end47:                                         ; preds = %if.then46, %land.lhs.true40, %lor.lhs.false
  %arrayidx49 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom7, !dbg !10226
  %2 = load i16, i16* %arrayidx49, align 2, !dbg !10226
  %arrayidx52 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom, !dbg !10228
  %3 = load i16, i16* %arrayidx52, align 2, !dbg !10228
  %cmp54 = icmp ugt i16 %2, %3, !dbg !10229
  br i1 %cmp54, label %if.end57, label %if.end82, !dbg !10230

if.end57:                                         ; preds = %if.end47
  br i1 %cmp, label %land.lhs.true63, label %lor.lhs.false69, !dbg !10231

land.lhs.true63:                                  ; preds = %if.end57
  br i1 %cmp10, label %if.then81, label %lor.lhs.false69, !dbg !10233

lor.lhs.false69:                                  ; preds = %land.lhs.true63, %if.end57
  %cmp73 = icmp eq i8 %1, 9, !dbg !10234
  br i1 %cmp73, label %land.lhs.true75, label %if.end82, !dbg !10235

land.lhs.true75:                                  ; preds = %lor.lhs.false69
  %cmp79 = icmp eq i8 %0, 9, !dbg !10236
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !10237

if.then81:                                        ; preds = %land.lhs.true75, %land.lhs.true63
  tail call fastcc void @gen_intraclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10238
  br label %if.end82, !dbg !10238

if.end82:                                         ; preds = %if.end47, %land.lhs.true12, %if.end19, %land.lhs.true, %if.then81, %land.lhs.true75, %lor.lhs.false69
  ret void, !dbg !10239
}

; Function Attrs: nounwind uwtable
define internal void @gen_fract_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #4 !dbg !10240 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !10242, metadata !DIExpression()), !dbg !10246
  call void @llvm.dbg.value(metadata i8* %opname, metadata !10243, metadata !DIExpression()), !dbg !10246
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !10244, metadata !DIExpression()), !dbg !10246
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !10245, metadata !DIExpression()), !dbg !10246
  %cmp = icmp eq i32 %tmode, %fmode, !dbg !10247
  br i1 %cmp, label %if.end103, label %if.end, !dbg !10249

if.end:                                           ; preds = %entry
  %idxprom = zext i32 %tmode to i64, !dbg !10250
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10250
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10250
  %cmp1 = icmp eq i8 %0, 4, !dbg !10250
  br i1 %cmp1, label %if.end93, label %lor.lhs.false, !dbg !10250

lor.lhs.false:                                    ; preds = %if.end
  %cmp6 = icmp eq i8 %0, 13, !dbg !10250
  br i1 %cmp6, label %if.end93, label %lor.lhs.false8, !dbg !10250

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i8 %0, 6, !dbg !10250
  br i1 %cmp12, label %if.end93, label %lor.lhs.false14, !dbg !10250

lor.lhs.false14:                                  ; preds = %lor.lhs.false8
  %cmp18 = icmp eq i8 %0, 15, !dbg !10250
  br i1 %cmp18, label %if.end93, label %lor.lhs.false20, !dbg !10250

lor.lhs.false20:                                  ; preds = %lor.lhs.false14
  %cmp24 = icmp eq i8 %0, 5, !dbg !10250
  br i1 %cmp24, label %if.end93, label %lor.lhs.false26, !dbg !10250

lor.lhs.false26:                                  ; preds = %lor.lhs.false20
  %cmp30 = icmp eq i8 %0, 14, !dbg !10250
  br i1 %cmp30, label %if.end93, label %lor.lhs.false32, !dbg !10250

lor.lhs.false32:                                  ; preds = %lor.lhs.false26
  %cmp36 = icmp eq i8 %0, 7, !dbg !10250
  br i1 %cmp36, label %if.end93, label %lor.lhs.false38, !dbg !10250

lor.lhs.false38:                                  ; preds = %lor.lhs.false32
  %cmp42 = icmp eq i8 %0, 16, !dbg !10250
  br i1 %cmp42, label %if.end93, label %lor.lhs.false44, !dbg !10252

lor.lhs.false44:                                  ; preds = %lor.lhs.false38
  %idxprom45 = zext i32 %fmode to i64, !dbg !10253
  %arrayidx46 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom45, !dbg !10253
  %1 = load i8, i8* %arrayidx46, align 1, !dbg !10253
  %cmp48 = icmp eq i8 %1, 4, !dbg !10253
  br i1 %cmp48, label %if.end93, label %lor.lhs.false50, !dbg !10253

lor.lhs.false50:                                  ; preds = %lor.lhs.false44
  %cmp54 = icmp eq i8 %1, 13, !dbg !10253
  br i1 %cmp54, label %if.end93, label %lor.lhs.false56, !dbg !10253

lor.lhs.false56:                                  ; preds = %lor.lhs.false50
  %cmp60 = icmp eq i8 %1, 6, !dbg !10253
  br i1 %cmp60, label %if.end93, label %lor.lhs.false62, !dbg !10253

lor.lhs.false62:                                  ; preds = %lor.lhs.false56
  %cmp66 = icmp eq i8 %1, 15, !dbg !10253
  br i1 %cmp66, label %if.end93, label %lor.lhs.false68, !dbg !10253

lor.lhs.false68:                                  ; preds = %lor.lhs.false62
  %cmp72 = icmp eq i8 %1, 5, !dbg !10253
  br i1 %cmp72, label %if.end93, label %lor.lhs.false74, !dbg !10253

lor.lhs.false74:                                  ; preds = %lor.lhs.false68
  %cmp78 = icmp eq i8 %1, 14, !dbg !10253
  br i1 %cmp78, label %if.end93, label %lor.lhs.false80, !dbg !10253

lor.lhs.false80:                                  ; preds = %lor.lhs.false74
  %cmp84 = icmp eq i8 %1, 7, !dbg !10253
  br i1 %cmp84, label %if.end93, label %lor.lhs.false86, !dbg !10253

lor.lhs.false86:                                  ; preds = %lor.lhs.false80
  %cmp90 = icmp eq i8 %1, 16, !dbg !10253
  br i1 %cmp90, label %if.end93, label %if.end103, !dbg !10254

if.end93:                                         ; preds = %lor.lhs.false86, %lor.lhs.false80, %lor.lhs.false74, %lor.lhs.false68, %lor.lhs.false62, %lor.lhs.false56, %lor.lhs.false50, %lor.lhs.false44, %lor.lhs.false38, %lor.lhs.false32, %lor.lhs.false26, %lor.lhs.false20, %lor.lhs.false14, %lor.lhs.false8, %lor.lhs.false, %if.end
  %idxprom97 = zext i32 %fmode to i64, !dbg !10255
  %arrayidx98 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom97, !dbg !10255
  %2 = load i8, i8* %arrayidx98, align 1, !dbg !10255
  %cmp100 = icmp eq i8 %0, %2, !dbg !10257
  br i1 %cmp100, label %if.then102, label %if.else, !dbg !10258

if.then102:                                       ; preds = %if.end93
  tail call fastcc void @gen_intraclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10259
  br label %if.end103, !dbg !10259

if.else:                                          ; preds = %if.end93
  tail call fastcc void @gen_interclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10260
  br label %if.end103

if.end103:                                        ; preds = %lor.lhs.false86, %entry, %if.else, %if.then102
  ret void, !dbg !10261
}

; Function Attrs: nounwind uwtable
define internal void @gen_satfract_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #4 !dbg !10262 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !10264, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata i8* %opname, metadata !10265, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !10266, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !10267, metadata !DIExpression()), !dbg !10268
  %cmp = icmp eq i32 %tmode, %fmode, !dbg !10269
  br i1 %cmp, label %if.end55, label %if.end, !dbg !10271

if.end:                                           ; preds = %entry
  %idxprom = zext i32 %tmode to i64, !dbg !10272
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10272
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10272
  %cmp1 = icmp eq i8 %0, 4, !dbg !10272
  br i1 %cmp1, label %if.end45, label %lor.lhs.false, !dbg !10272

lor.lhs.false:                                    ; preds = %if.end
  %cmp6 = icmp eq i8 %0, 13, !dbg !10272
  br i1 %cmp6, label %if.end45, label %lor.lhs.false8, !dbg !10272

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i8 %0, 6, !dbg !10272
  br i1 %cmp12, label %if.end45, label %lor.lhs.false14, !dbg !10272

lor.lhs.false14:                                  ; preds = %lor.lhs.false8
  %cmp18 = icmp eq i8 %0, 15, !dbg !10272
  br i1 %cmp18, label %if.end45, label %lor.lhs.false20, !dbg !10272

lor.lhs.false20:                                  ; preds = %lor.lhs.false14
  %cmp24 = icmp eq i8 %0, 5, !dbg !10272
  br i1 %cmp24, label %if.end45, label %lor.lhs.false26, !dbg !10272

lor.lhs.false26:                                  ; preds = %lor.lhs.false20
  %cmp30 = icmp eq i8 %0, 14, !dbg !10272
  br i1 %cmp30, label %if.end45, label %lor.lhs.false32, !dbg !10272

lor.lhs.false32:                                  ; preds = %lor.lhs.false26
  %cmp36 = icmp eq i8 %0, 7, !dbg !10272
  br i1 %cmp36, label %if.end45, label %lor.lhs.false38, !dbg !10272

lor.lhs.false38:                                  ; preds = %lor.lhs.false32
  %cmp42 = icmp eq i8 %0, 16, !dbg !10272
  br i1 %cmp42, label %if.end45, label %if.end55, !dbg !10274

if.end45:                                         ; preds = %lor.lhs.false38, %lor.lhs.false32, %lor.lhs.false26, %lor.lhs.false20, %lor.lhs.false14, %lor.lhs.false8, %lor.lhs.false, %if.end
  %idxprom49 = zext i32 %fmode to i64, !dbg !10275
  %arrayidx50 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom49, !dbg !10275
  %1 = load i8, i8* %arrayidx50, align 1, !dbg !10275
  %cmp52 = icmp eq i8 %0, %1, !dbg !10277
  br i1 %cmp52, label %if.then54, label %if.else, !dbg !10278

if.then54:                                        ; preds = %if.end45
  tail call fastcc void @gen_intraclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10279
  br label %if.end55, !dbg !10279

if.else:                                          ; preds = %if.end45
  tail call fastcc void @gen_interclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10280
  br label %if.end55

if.end55:                                         ; preds = %lor.lhs.false38, %entry, %if.else, %if.then54
  ret void, !dbg !10281
}

; Function Attrs: nounwind uwtable
define internal void @gen_fractuns_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #4 !dbg !10282 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !10284, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata i8* %opname, metadata !10285, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !10286, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !10287, metadata !DIExpression()), !dbg !10288
  %cmp = icmp eq i32 %tmode, %fmode, !dbg !10289
  br i1 %cmp, label %return, label %if.end, !dbg !10291

if.end:                                           ; preds = %entry
  %idxprom = zext i32 %tmode to i64, !dbg !10292
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10292
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10292
  %cmp1 = icmp eq i8 %0, 4, !dbg !10292
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !10292

lor.lhs.false:                                    ; preds = %if.end
  %cmp6 = icmp eq i8 %0, 13, !dbg !10292
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false8, !dbg !10292

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i8 %0, 6, !dbg !10292
  br i1 %cmp12, label %land.lhs.true, label %lor.lhs.false14, !dbg !10292

lor.lhs.false14:                                  ; preds = %lor.lhs.false8
  %cmp18 = icmp eq i8 %0, 15, !dbg !10292
  br i1 %cmp18, label %land.lhs.true, label %lor.lhs.false20, !dbg !10292

lor.lhs.false20:                                  ; preds = %lor.lhs.false14
  %cmp24 = icmp eq i8 %0, 5, !dbg !10292
  br i1 %cmp24, label %land.lhs.true, label %lor.lhs.false26, !dbg !10292

lor.lhs.false26:                                  ; preds = %lor.lhs.false20
  %cmp30 = icmp eq i8 %0, 14, !dbg !10292
  br i1 %cmp30, label %land.lhs.true, label %lor.lhs.false32, !dbg !10292

lor.lhs.false32:                                  ; preds = %lor.lhs.false26
  %cmp36 = icmp eq i8 %0, 7, !dbg !10292
  br i1 %cmp36, label %land.lhs.true, label %lor.lhs.false38, !dbg !10292

lor.lhs.false38:                                  ; preds = %lor.lhs.false32
  %cmp42 = icmp eq i8 %0, 16, !dbg !10292
  br i1 %cmp42, label %land.lhs.true, label %lor.lhs.false38.lor.lhs.false49_crit_edge, !dbg !10294

lor.lhs.false38.lor.lhs.false49_crit_edge:        ; preds = %lor.lhs.false38
  %idxprom50.phi.trans.insert = zext i32 %fmode to i64, !dbg !10295
  %arrayidx51.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom50.phi.trans.insert, !dbg !10295
  %.pre = load i8, i8* %arrayidx51.phi.trans.insert, align 1, !dbg !10296
  br label %lor.lhs.false49, !dbg !10294

land.lhs.true:                                    ; preds = %lor.lhs.false38, %lor.lhs.false32, %lor.lhs.false26, %lor.lhs.false20, %lor.lhs.false14, %lor.lhs.false8, %lor.lhs.false, %if.end
  %idxprom44 = zext i32 %fmode to i64, !dbg !10297
  %arrayidx45 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom44, !dbg !10297
  %1 = load i8, i8* %arrayidx45, align 1, !dbg !10297
  %cmp47 = icmp eq i8 %1, 2, !dbg !10298
  br i1 %cmp47, label %if.end104, label %lor.lhs.false49, !dbg !10299

lor.lhs.false49:                                  ; preds = %lor.lhs.false38.lor.lhs.false49_crit_edge, %land.lhs.true
  %2 = phi i8 [ %.pre, %lor.lhs.false38.lor.lhs.false49_crit_edge ], [ %1, %land.lhs.true ], !dbg !10296
  %cmp53 = icmp eq i8 %2, 4, !dbg !10296
  br i1 %cmp53, label %land.lhs.true97, label %lor.lhs.false55, !dbg !10296

lor.lhs.false55:                                  ; preds = %lor.lhs.false49
  %cmp59 = icmp eq i8 %2, 13, !dbg !10296
  br i1 %cmp59, label %land.lhs.true97, label %lor.lhs.false61, !dbg !10296

lor.lhs.false61:                                  ; preds = %lor.lhs.false55
  %cmp65 = icmp eq i8 %2, 6, !dbg !10296
  br i1 %cmp65, label %land.lhs.true97, label %lor.lhs.false67, !dbg !10296

lor.lhs.false67:                                  ; preds = %lor.lhs.false61
  %cmp71 = icmp eq i8 %2, 15, !dbg !10296
  br i1 %cmp71, label %land.lhs.true97, label %lor.lhs.false73, !dbg !10296

lor.lhs.false73:                                  ; preds = %lor.lhs.false67
  %cmp77 = icmp eq i8 %2, 5, !dbg !10296
  br i1 %cmp77, label %land.lhs.true97, label %lor.lhs.false79, !dbg !10296

lor.lhs.false79:                                  ; preds = %lor.lhs.false73
  %cmp83 = icmp eq i8 %2, 14, !dbg !10296
  br i1 %cmp83, label %land.lhs.true97, label %lor.lhs.false85, !dbg !10296

lor.lhs.false85:                                  ; preds = %lor.lhs.false79
  %cmp89 = icmp eq i8 %2, 7, !dbg !10296
  br i1 %cmp89, label %land.lhs.true97, label %lor.lhs.false91, !dbg !10296

lor.lhs.false91:                                  ; preds = %lor.lhs.false85
  %cmp95 = icmp eq i8 %2, 16, !dbg !10296
  br i1 %cmp95, label %land.lhs.true97, label %return, !dbg !10300

land.lhs.true97:                                  ; preds = %lor.lhs.false91, %lor.lhs.false85, %lor.lhs.false79, %lor.lhs.false73, %lor.lhs.false67, %lor.lhs.false61, %lor.lhs.false55, %lor.lhs.false49
  %cmp101 = icmp eq i8 %0, 2, !dbg !10301
  br i1 %cmp101, label %if.end104, label %return, !dbg !10302

if.end104:                                        ; preds = %land.lhs.true97, %land.lhs.true
  tail call fastcc void @gen_interclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10303
  br label %return, !dbg !10304

return:                                           ; preds = %lor.lhs.false91, %land.lhs.true97, %entry, %if.end104
  ret void, !dbg !10304
}

; Function Attrs: nounwind uwtable
define internal void @gen_satfractuns_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #4 !dbg !10305 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !10307, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i8* %opname, metadata !10308, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !10309, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !10310, metadata !DIExpression()), !dbg !10311
  %cmp = icmp eq i32 %tmode, %fmode, !dbg !10312
  br i1 %cmp, label %return, label %if.end, !dbg !10314

if.end:                                           ; preds = %entry
  %idxprom = zext i32 %tmode to i64, !dbg !10315
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10315
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10315
  %cmp1 = icmp eq i8 %0, 4, !dbg !10315
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !10315

lor.lhs.false:                                    ; preds = %if.end
  %cmp6 = icmp eq i8 %0, 13, !dbg !10315
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false8, !dbg !10315

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i8 %0, 6, !dbg !10315
  br i1 %cmp12, label %land.lhs.true, label %lor.lhs.false14, !dbg !10315

lor.lhs.false14:                                  ; preds = %lor.lhs.false8
  %cmp18 = icmp eq i8 %0, 15, !dbg !10315
  br i1 %cmp18, label %land.lhs.true, label %lor.lhs.false20, !dbg !10315

lor.lhs.false20:                                  ; preds = %lor.lhs.false14
  %cmp24 = icmp eq i8 %0, 5, !dbg !10315
  br i1 %cmp24, label %land.lhs.true, label %lor.lhs.false26, !dbg !10315

lor.lhs.false26:                                  ; preds = %lor.lhs.false20
  %cmp30 = icmp eq i8 %0, 14, !dbg !10315
  br i1 %cmp30, label %land.lhs.true, label %lor.lhs.false32, !dbg !10315

lor.lhs.false32:                                  ; preds = %lor.lhs.false26
  %cmp36 = icmp eq i8 %0, 7, !dbg !10315
  br i1 %cmp36, label %land.lhs.true, label %lor.lhs.false38, !dbg !10315

lor.lhs.false38:                                  ; preds = %lor.lhs.false32
  %cmp42 = icmp eq i8 %0, 16, !dbg !10315
  br i1 %cmp42, label %land.lhs.true, label %return, !dbg !10317

land.lhs.true:                                    ; preds = %lor.lhs.false38, %lor.lhs.false32, %lor.lhs.false26, %lor.lhs.false20, %lor.lhs.false14, %lor.lhs.false8, %lor.lhs.false, %if.end
  %idxprom44 = zext i32 %fmode to i64, !dbg !10318
  %arrayidx45 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom44, !dbg !10318
  %1 = load i8, i8* %arrayidx45, align 1, !dbg !10318
  %cmp47 = icmp eq i8 %1, 2, !dbg !10319
  br i1 %cmp47, label %if.end50, label %return, !dbg !10320

if.end50:                                         ; preds = %land.lhs.true
  tail call fastcc void @gen_interclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) #8, !dbg !10321
  br label %return, !dbg !10322

return:                                           ; preds = %lor.lhs.false38, %land.lhs.true, %entry, %if.end50
  ret void, !dbg !10322
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_optab_libfuncs() local_unnamed_addr #4 !dbg !10323 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !10325, metadata !DIExpression()), !dbg !10344
  br label %for.cond, !dbg !10345

for.cond:                                         ; preds = %for.inc11, %entry
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %for.inc11 ], [ 0, %entry ], !dbg !10346
  call void @llvm.dbg.value(metadata i64 %indvars.iv10, metadata !10325, metadata !DIExpression()), !dbg !10344
  %cmp = icmp eq i64 %indvars.iv10, 159, !dbg !10347
  br i1 %cmp, label %for.cond14.preheader, label %for.cond1.preheader, !dbg !10348

for.cond1.preheader:                              ; preds = %for.cond
  %arrayidx = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 %indvars.iv10, !dbg !10349
  %code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %arrayidx, i64 0, i32 0, !dbg !10350
  br label %for.cond1, !dbg !10353

for.cond14.preheader:                             ; preds = %for.cond
  br label %for.cond14, !dbg !10354

for.cond1:                                        ; preds = %for.cond1.preheader, %for.inc
  %indvars.iv7 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next8, %for.inc ], !dbg !10355
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !10326, metadata !DIExpression()), !dbg !10344
  %exitcond9 = icmp eq i64 %indvars.iv7, 87, !dbg !10356
  br i1 %exitcond9, label %for.inc11, label %for.body3, !dbg !10353

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.value(metadata %struct.optab_d* %arrayidx, metadata !10328, metadata !DIExpression()), !dbg !10349
  %0 = trunc i64 %indvars.iv7 to i32, !dbg !10357
  %call = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* nonnull %arrayidx, i32 %0) #8, !dbg !10357
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !10334, metadata !DIExpression()), !dbg !10349
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !10358
  br i1 %tobool, label %for.inc, label %if.then, !dbg !10359

if.then:                                          ; preds = %for.body3
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !10360
  %bf.load = load i32, i32* %1, align 8, !dbg !10360
  %bf.clear = and i32 %bf.load, 65535, !dbg !10360
  %cmp4 = icmp eq i32 %bf.clear, 45, !dbg !10360
  br i1 %cmp4, label %cond.end, label %cond.true, !dbg !10360

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 6715, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10360
  br label %cond.end, !dbg !10360

cond.end:                                         ; preds = %if.then, %cond.true
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10361
  %3 = load i32, i32* %code, align 16, !dbg !10362
  %idxprom5 = sext i32 %3 to i64, !dbg !10362
  %arrayidx6 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_name, i64 0, i64 %idxprom5, !dbg !10362
  %4 = load i8*, i8** %arrayidx6, align 8, !dbg !10362
  %arrayidx8 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %indvars.iv7, !dbg !10363
  %5 = load i8*, i8** %arrayidx8, align 8, !dbg !10363
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !10364
  %6 = load i8*, i8** %rt_str, align 8, !dbg !10364
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.81, i64 0, i64 0), i8* %4, i8* %5, i8* %6) #6, !dbg !10365
  br label %for.inc, !dbg !10366

for.inc:                                          ; preds = %for.body3, %cond.end
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !10367
  call void @llvm.dbg.value(metadata i32 undef, metadata !10326, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10344
  br label %for.cond1, !dbg !10368, !llvm.loop !10369

for.inc11:                                        ; preds = %for.cond1
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !10371
  call void @llvm.dbg.value(metadata i32 undef, metadata !10325, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10344
  br label %for.cond, !dbg !10372, !llvm.loop !10373

for.cond14:                                       ; preds = %for.cond14.preheader, %for.inc56
  %indvars.iv4 = phi i64 [ 0, %for.cond14.preheader ], [ %indvars.iv.next5, %for.inc56 ], !dbg !10375
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !10325, metadata !DIExpression()), !dbg !10344
  %exitcond6 = icmp eq i64 %indvars.iv4, 17, !dbg !10376
  br i1 %exitcond6, label %for.end58, label %for.cond17.preheader, !dbg !10354

for.cond17.preheader:                             ; preds = %for.cond14
  %arrayidx26 = getelementptr inbounds [17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 %indvars.iv4, !dbg !10377
  %code37 = getelementptr inbounds %struct.convert_optab_d, %struct.convert_optab_d* %arrayidx26, i64 0, i32 0, !dbg !10378
  br label %for.cond17, !dbg !10381

for.cond17:                                       ; preds = %for.cond17.preheader, %for.inc53
  %indvars.iv1 = phi i64 [ 0, %for.cond17.preheader ], [ %indvars.iv.next2, %for.inc53 ], !dbg !10382
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !10326, metadata !DIExpression()), !dbg !10344
  %exitcond3 = icmp eq i64 %indvars.iv1, 87, !dbg !10383
  br i1 %exitcond3, label %for.inc56, label %for.cond20.preheader, !dbg !10381

for.cond20.preheader:                             ; preds = %for.cond17
  %arrayidx41 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %indvars.iv1, !dbg !10378
  br label %for.cond20, !dbg !10384

for.cond20:                                       ; preds = %for.cond20.preheader, %for.inc50
  %indvars.iv = phi i64 [ 0, %for.cond20.preheader ], [ %indvars.iv.next, %for.inc50 ], !dbg !10385
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !10327, metadata !DIExpression()), !dbg !10344
  %exitcond = icmp eq i64 %indvars.iv, 87, !dbg !10386
  br i1 %exitcond, label %for.inc53, label %for.body22, !dbg !10384

for.body22:                                       ; preds = %for.cond20
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %arrayidx26, metadata !10335, metadata !DIExpression()), !dbg !10377
  %7 = trunc i64 %indvars.iv to i32, !dbg !10387
  %8 = trunc i64 %indvars.iv1 to i32, !dbg !10387
  %call27 = tail call %struct.rtx_def* @convert_optab_libfunc(%struct.convert_optab_d* nonnull %arrayidx26, i32 %8, i32 %7) #8, !dbg !10387
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call27, metadata !10343, metadata !DIExpression()), !dbg !10377
  %tobool28 = icmp eq %struct.rtx_def* %call27, null, !dbg !10388
  br i1 %tobool28, label %for.inc50, label %if.then29, !dbg !10389

if.then29:                                        ; preds = %for.body22
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call27, i64 0, i32 0, !dbg !10390
  %bf.load30 = load i32, i32* %9, align 8, !dbg !10390
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !10390
  %cmp32 = icmp eq i32 %bf.clear31, 45, !dbg !10390
  br i1 %cmp32, label %cond.end35, label %cond.true33, !dbg !10390

cond.true33:                                      ; preds = %if.then29
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 6736, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10390
  br label %cond.end35, !dbg !10390

cond.end35:                                       ; preds = %if.then29, %cond.true33
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10391
  %11 = load i32, i32* %code37, align 16, !dbg !10392
  %idxprom38 = sext i32 %11 to i64, !dbg !10392
  %arrayidx39 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_name, i64 0, i64 %idxprom38, !dbg !10392
  %12 = load i8*, i8** %arrayidx39, align 8, !dbg !10392
  %13 = load i8*, i8** %arrayidx41, align 8, !dbg !10393
  %arrayidx43 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %indvars.iv, !dbg !10394
  %14 = load i8*, i8** %arrayidx43, align 8, !dbg !10394
  %rt_str47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call27, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !10395
  %15 = load i8*, i8** %rt_str47, align 8, !dbg !10395
  %call48 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i64 0, i64 0), i8* %12, i8* %13, i8* %14, i8* %15) #6, !dbg !10396
  br label %for.inc50, !dbg !10397

for.inc50:                                        ; preds = %for.body22, %cond.end35
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !10398
  call void @llvm.dbg.value(metadata i32 undef, metadata !10327, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10344
  br label %for.cond20, !dbg !10399, !llvm.loop !10400

for.inc53:                                        ; preds = %for.cond20
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !10402
  call void @llvm.dbg.value(metadata i32 undef, metadata !10326, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10344
  br label %for.cond17, !dbg !10403, !llvm.loop !10404

for.inc56:                                        ; preds = %for.cond17
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !10406
  call void @llvm.dbg.value(metadata i32 undef, metadata !10325, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10344
  br label %for.cond14, !dbg !10407, !llvm.loop !10408

for.end58:                                        ; preds = %for.cond14
  ret void, !dbg !10410
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_cond_trap(i32 %code, %struct.rtx_def* %op1, %struct.rtx_def* %op2, %struct.rtx_def* %tcode) local_unnamed_addr #4 !dbg !10411 {
entry:
  %mode = alloca i32, align 4
  %trap_rtx = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata i32 %code, metadata !10415, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !10416, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2, metadata !10417, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tcode, metadata !10418, metadata !DIExpression()), !dbg !10423
  %0 = bitcast i32* %mode to i8*, !dbg !10424
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !10424
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1, i64 0, i32 0, !dbg !10425
  %bf.load = load i32, i32* %1, align 8, !dbg !10425
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10425
  %bf.clear = and i32 %bf.lshr, 255, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !10419, metadata !DIExpression()), !dbg !10423
  store i32 %bf.clear, i32* %mode, align 4, !dbg !10426
  %2 = bitcast %struct.rtx_def** %trap_rtx to i8*, !dbg !10427
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !10419, metadata !DIExpression()), !dbg !10423
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !10428
  br i1 %cmp, label %cleanup, label %if.end, !dbg !10430

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !10419, metadata !DIExpression()), !dbg !10423
  %idxprom = zext i32 %bf.clear to i64, !dbg !10431
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 118, i32 4, i64 %idxprom, i32 0, !dbg !10432
  %3 = load i32, i32* %insn_code, align 4, !dbg !10432
  call void @llvm.dbg.value(metadata i32 %3, metadata !10420, metadata !DIExpression()), !dbg !10423
  %cmp1 = icmp eq i32 %3, 2956, !dbg !10433
  br i1 %cmp1, label %cleanup, label %if.end3, !dbg !10435

if.end3:                                          ; preds = %if.end
  %idxprom4 = zext i32 %3 to i64, !dbg !10436
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom4, i32 3, !dbg !10438
  %4 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !10438
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %4, i64 3, i32 0, !dbg !10439
  %5 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !10439
  %tobool = icmp eq i32 (%struct.rtx_def*, i32)* %5, null, !dbg !10436
  br i1 %tobool, label %if.end14, label %land.lhs.true, !dbg !10440

land.lhs.true:                                    ; preds = %if.end3
  %call = tail call i32 %5(%struct.rtx_def* %tcode, i32 0) #6, !dbg !10441
  %tobool12 = icmp eq i32 %call, 0, !dbg !10441
  br i1 %tobool12, label %cleanup, label %if.end14, !dbg !10442

if.end14:                                         ; preds = %land.lhs.true, %if.end3
  tail call void @do_pending_stack_adjust() #6, !dbg !10443
  tail call void @start_sequence() #6, !dbg !10444
  call void @llvm.dbg.value(metadata i32* %mode, metadata !10419, metadata !DIExpression(DW_OP_deref)), !dbg !10423
  call void @llvm.dbg.value(metadata %struct.rtx_def** %trap_rtx, metadata !10422, metadata !DIExpression(DW_OP_deref)), !dbg !10423
  call fastcc void @prepare_cmp_insn(%struct.rtx_def* %op1, %struct.rtx_def* %op2, i32 %code, %struct.rtx_def* null, i32 0, i32 0, %struct.rtx_def** nonnull %trap_rtx, i32* nonnull %mode) #8, !dbg !10445
  %6 = load %struct.rtx_def*, %struct.rtx_def** %trap_rtx, align 8, !dbg !10446
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !10422, metadata !DIExpression()), !dbg !10423
  %tobool15 = icmp eq %struct.rtx_def* %6, null, !dbg !10446
  br i1 %tobool15, label %if.end25, label %if.else, !dbg !10448

if.else:                                          ; preds = %if.end14
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom4, i32 2, !dbg !10449
  %7 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !10449
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !10422, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !10422, metadata !DIExpression()), !dbg !10423
  %arrayidx19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10450
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !10450
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10450
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !10422, metadata !DIExpression()), !dbg !10423
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10451
  %rt_rtx23 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !10451
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !10451
  %call24 = call %struct.rtx_def* (%struct.rtx_def*, ...) %7(%struct.rtx_def* nonnull %6, %struct.rtx_def* %8, %struct.rtx_def* %10, %struct.rtx_def* %tcode) #6, !dbg !10449
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !10421, metadata !DIExpression()), !dbg !10423
  br label %if.end25

if.end25:                                         ; preds = %if.end14, %if.else
  %insn.0 = phi %struct.rtx_def* [ %call24, %if.else ], [ null, %if.end14 ], !dbg !10452
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !10421, metadata !DIExpression()), !dbg !10423
  %cmp26 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !10453
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !10455

if.then27:                                        ; preds = %if.end25
  call void @end_sequence() #6, !dbg !10456
  br label %cleanup, !dbg !10458

if.end28:                                         ; preds = %if.end25
  %call29 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %insn.0) #6, !dbg !10459
  %call30 = call %struct.rtx_def* @get_insns() #6, !dbg !10460
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call30, metadata !10421, metadata !DIExpression()), !dbg !10423
  call void @end_sequence() #6, !dbg !10461
  br label %cleanup, !dbg !10462

cleanup:                                          ; preds = %land.lhs.true, %if.end, %entry, %if.end28, %if.then27
  %retval.0 = phi %struct.rtx_def* [ null, %if.then27 ], [ %call30, %if.end28 ], [ null, %entry ], [ null, %if.end ], [ null, %land.lhs.true ], !dbg !10423
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !10463
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !10463
  ret %struct.rtx_def* %retval.0, !dbg !10463
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @expand_vec_cond_expr_p(%union.tree_node* %type, i32 %vmode) local_unnamed_addr #4 !dbg !10464 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10468, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %vmode, metadata !10469, metadata !DIExpression()), !dbg !10470
  %call = tail call fastcc i32 @get_vcond_icode(%union.tree_node* %type, i32 %vmode) #8, !dbg !10471
  %cmp = icmp ne i32 %call, 2956, !dbg !10473
  %. = zext i1 %cmp to i8, !dbg !10470
  ret i8 %., !dbg !10474
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_vcond_icode(%union.tree_node* %type, i32 %mode) unnamed_addr #0 !dbg !10475 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10479, metadata !DIExpression()), !dbg !10482
  call void @llvm.dbg.value(metadata i32 %mode, metadata !10480, metadata !DIExpression()), !dbg !10482
  call void @llvm.dbg.value(metadata i32 2956, metadata !10481, metadata !DIExpression()), !dbg !10482
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10483
  %bf.load = load i64, i64* %0, align 8, !dbg !10483
  %bf.cast1 = and i64 %bf.load, 2097152, !dbg !10483
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !10483
  %idxprom = zext i32 %mode to i64, !dbg !10485
  br i1 %tobool, label %if.else, label %if.then, !dbg !10486

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !10487

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %vcondu_gen_code.pn = phi [87 x i32]* [ @vcondu_gen_code, %if.then ], [ @vcond_gen_code, %if.else ]
  %icode.0.in = getelementptr inbounds [87 x i32], [87 x i32]* %vcondu_gen_code.pn, i64 0, i64 %idxprom, !dbg !10485
  %icode.0 = load i32, i32* %icode.0.in, align 4, !dbg !10485
  call void @llvm.dbg.value(metadata i32 %icode.0, metadata !10481, metadata !DIExpression()), !dbg !10482
  ret i32 %icode.0, !dbg !10488
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_vec_cond_expr(%union.tree_node* %vec_cond_type, %union.tree_node* %op0, %union.tree_node* %op1, %union.tree_node* %op2, %struct.rtx_def* %target) local_unnamed_addr #4 !dbg !10489 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_cond_type, metadata !10493, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !10494, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !10495, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata %union.tree_node* %op2, metadata !10496, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !10497, metadata !DIExpression()), !dbg !10506
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %vec_cond_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10507
  %bf.load = load i64, i64* %0, align 8, !dbg !10507
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !10507
  %cmp = icmp eq i64 %bf.cast2, 14, !dbg !10507
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10507

cond.true:                                        ; preds = %entry
  %call = tail call i32 @vector_type_mode(%union.tree_node* %vec_cond_type) #6, !dbg !10507
  %bf.load5.pre = load i64, i64* %0, align 8, !dbg !10508
  br label %cond.end, !dbg !10507

cond.false:                                       ; preds = %entry
  %type = bitcast %union.tree_node* %vec_cond_type to %struct.tree_type*, !dbg !10507
  %mode1 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !10507
  %bf.load2 = load i32, i32* %mode1, align 4, !dbg !10507
  %bf.lshr = lshr i32 %bf.load2, 16, !dbg !10507
  %bf.clear3 = and i32 %bf.lshr, 255, !dbg !10507
  br label %cond.end, !dbg !10507

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load5 = phi i64 [ %bf.load5.pre, %cond.true ], [ %bf.load, %cond.false ], !dbg !10508
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear3, %cond.false ], !dbg !10507
  call void @llvm.dbg.value(metadata i32 %cond, metadata !10504, metadata !DIExpression()), !dbg !10506
  %bf.lshr6 = lshr i64 %bf.load5, 21, !dbg !10508
  %1 = trunc i64 %bf.lshr6 to i8, !dbg !10508
  %bf.cast8 = and i8 %1, 1, !dbg !10508
  call void @llvm.dbg.value(metadata i8 %bf.cast8, metadata !10505, metadata !DIExpression()), !dbg !10506
  %call9 = tail call fastcc i32 @get_vcond_icode(%union.tree_node* %vec_cond_type, i32 %cond) #8, !dbg !10509
  call void @llvm.dbg.value(metadata i32 %call9, metadata !10498, metadata !DIExpression()), !dbg !10506
  %cmp10 = icmp eq i32 %call9, 2956, !dbg !10510
  br i1 %cmp10, label %cleanup, label %if.end, !dbg !10512

if.end:                                           ; preds = %cond.end
  %tobool = icmp eq %struct.rtx_def* %target, null, !dbg !10513
  br i1 %tobool, label %if.end.if.then15_crit_edge, label %lor.lhs.false, !dbg !10515

if.end.if.then15_crit_edge:                       ; preds = %if.end
  %.pre4 = zext i32 %call9 to i64, !dbg !10516
  br label %if.then15, !dbg !10515

lor.lhs.false:                                    ; preds = %if.end
  %idxprom = zext i32 %call9 to i64, !dbg !10518
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 3, !dbg !10519
  %2 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !10519
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 0, !dbg !10520
  %3 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !10520
  %call13 = tail call i32 %3(%struct.rtx_def* nonnull %target, i32 %cond) #6, !dbg !10518
  %tobool14 = icmp eq i32 %call13, 0, !dbg !10518
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !10521

if.then15:                                        ; preds = %if.end.if.then15_crit_edge, %lor.lhs.false
  %.pre.pre-phi = phi i64 [ %.pre4, %if.end.if.then15_crit_edge ], [ %idxprom, %lor.lhs.false ], !dbg !10516
  %call16 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %cond) #6, !dbg !10522
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call16, metadata !10497, metadata !DIExpression()), !dbg !10506
  br label %if.end17, !dbg !10523

if.end17:                                         ; preds = %lor.lhs.false, %if.then15
  %idxprom25.pre-phi = phi i64 [ %idxprom, %lor.lhs.false ], [ %.pre.pre-phi, %if.then15 ], !dbg !10516
  %target.addr.0 = phi %struct.rtx_def* [ %target, %lor.lhs.false ], [ %call16, %if.then15 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !10497, metadata !DIExpression()), !dbg !10506
  %call18 = tail call fastcc %struct.rtx_def* @vector_compare_rtx(%union.tree_node* %op0, i8 zeroext %bf.cast8, i32 %call9) #8, !dbg !10524
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call18, metadata !10499, metadata !DIExpression()), !dbg !10506
  %arrayidx19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call18, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10525
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !10525
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10525
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !10502, metadata !DIExpression()), !dbg !10506
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call18, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10526
  %rt_rtx23 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !10526
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !10526
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !10503, metadata !DIExpression()), !dbg !10506
  %call24 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %op1) #8, !dbg !10527
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !10500, metadata !DIExpression()), !dbg !10506
  %operand27 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom25.pre-phi, i32 3, !dbg !10528
  %7 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand27, align 8, !dbg !10528
  %predicate29 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %7, i64 1, i32 0, !dbg !10529
  %8 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate29, align 8, !dbg !10529
  %call30 = tail call i32 %8(%struct.rtx_def* %call24, i32 %cond) #6, !dbg !10516
  %tobool31 = icmp eq i32 %call30, 0, !dbg !10516
  %cmp32 = icmp ne i32 %cond, 0, !dbg !10530
  %or.cond = and i1 %tobool31, %cmp32, !dbg !10531
  br i1 %or.cond, label %if.then34, label %if.end36, !dbg !10531

if.then34:                                        ; preds = %if.end17
  %call35 = tail call %struct.rtx_def* @force_reg(i32 %cond, %struct.rtx_def* %call24) #6, !dbg !10532
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call35, metadata !10500, metadata !DIExpression()), !dbg !10506
  br label %if.end36, !dbg !10533

if.end36:                                         ; preds = %if.end17, %if.then34
  %rtx_op1.0 = phi %struct.rtx_def* [ %call24, %if.end17 ], [ %call35, %if.then34 ], !dbg !10506
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rtx_op1.0, metadata !10500, metadata !DIExpression()), !dbg !10506
  %call37 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %op2) #8, !dbg !10534
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !10501, metadata !DIExpression()), !dbg !10506
  %predicate42 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %7, i64 2, i32 0, !dbg !10535
  %9 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate42, align 8, !dbg !10535
  %call43 = tail call i32 %9(%struct.rtx_def* %call37, i32 %cond) #6, !dbg !10537
  %tobool44 = icmp eq i32 %call43, 0, !dbg !10537
  %or.cond1 = and i1 %tobool44, %cmp32, !dbg !10538
  br i1 %or.cond1, label %if.then48, label %if.end50, !dbg !10538

if.then48:                                        ; preds = %if.end36
  %call49 = tail call %struct.rtx_def* @force_reg(i32 %cond, %struct.rtx_def* %call37) #6, !dbg !10539
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !10501, metadata !DIExpression()), !dbg !10506
  br label %if.end50, !dbg !10540

if.end50:                                         ; preds = %if.end36, %if.then48
  %rtx_op2.0 = phi %struct.rtx_def* [ %call37, %if.end36 ], [ %call49, %if.then48 ], !dbg !10506
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rtx_op2.0, metadata !10501, metadata !DIExpression()), !dbg !10506
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom25.pre-phi, i32 2, !dbg !10541
  %10 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !10541
  %call53 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %10(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %rtx_op1.0, %struct.rtx_def* %rtx_op2.0, %struct.rtx_def* %call18, %struct.rtx_def* %4, %struct.rtx_def* %6) #6, !dbg !10541
  %call54 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call53) #6, !dbg !10542
  br label %cleanup, !dbg !10543

cleanup:                                          ; preds = %cond.end, %if.end50
  %retval.0 = phi %struct.rtx_def* [ %target.addr.0, %if.end50 ], [ null, %cond.end ], !dbg !10506
  ret %struct.rtx_def* %retval.0, !dbg !10544
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @vector_compare_rtx(%union.tree_node* %cond, i8 zeroext %unsignedp, i32 %icode) unnamed_addr #4 !dbg !10545 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !10549, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i8 %unsignedp, metadata !10550, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i32 %icode, metadata !10551, metadata !DIExpression()), !dbg !10557
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10558
  %bf.load = load i64, i64* %0, align 8, !dbg !10558
  %bf.cast = and i64 %bf.load, 65535, !dbg !10558
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !10558
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10558
  %cmp = icmp eq i32 %1, 5, !dbg !10558
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10558

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 6864, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10558
  %bf.load3.pre = load i64, i64* %0, align 8, !dbg !10559
  br label %cond.end, !dbg !10558

cond.end:                                         ; preds = %entry, %cond.true
  %bf.load3 = phi i64 [ %bf.load, %entry ], [ %bf.load3.pre, %cond.true ], !dbg !10559
  %2 = trunc i64 %bf.load3 to i32, !dbg !10559
  %bf.cast5 = and i32 %2, 65535, !dbg !10559
  %call = tail call fastcc i32 @get_rtx_code(i32 %bf.cast5, i8 zeroext %unsignedp) #8, !dbg !10560
  call void @llvm.dbg.value(metadata i32 %call, metadata !10552, metadata !DIExpression()), !dbg !10557
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10561
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !10561
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !10553, metadata !DIExpression()), !dbg !10557
  %arrayidx9 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !10562
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx9, align 8, !dbg !10562
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !10554, metadata !DIExpression()), !dbg !10557
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10563
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !10563
  %6 = load i64*, i64** %5, align 8, !dbg !10563
  %bf.load11 = load i64, i64* %6, align 8, !dbg !10563
  %bf.cast131 = and i64 %bf.load11, 65535, !dbg !10563
  %cmp14 = icmp eq i64 %bf.cast131, 14, !dbg !10563
  br i1 %cmp14, label %cond.true15, label %cond.false19, !dbg !10563

cond.true15:                                      ; preds = %cond.end
  %.cast = bitcast i64* %6 to %union.tree_node*, !dbg !10563
  %call18 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !10563
  br label %cond.end25, !dbg !10563

cond.false19:                                     ; preds = %cond.end
  %type22 = bitcast i64* %6 to %struct.tree_type*, !dbg !10563
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type22, i64 0, i32 6, !dbg !10563
  %bf.load23 = load i32, i32* %mode, align 4, !dbg !10563
  %bf.lshr = lshr i32 %bf.load23, 16, !dbg !10563
  %bf.clear24 = and i32 %bf.lshr, 255, !dbg !10563
  br label %cond.end25, !dbg !10563

cond.end25:                                       ; preds = %cond.false19, %cond.true15
  %cond26 = phi i32 [ %call18, %cond.true15 ], [ %bf.clear24, %cond.false19 ], !dbg !10563
  %call27 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %3, %struct.rtx_def* null, i32 %cond26, i32 1) #8, !dbg !10564
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call27, metadata !10555, metadata !DIExpression()), !dbg !10557
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10565
  %7 = bitcast %union.tree_node** %type29 to i64**, !dbg !10565
  %8 = load i64*, i64** %7, align 8, !dbg !10565
  %bf.load31 = load i64, i64* %8, align 8, !dbg !10565
  %bf.cast332 = and i64 %bf.load31, 65535, !dbg !10565
  %cmp34 = icmp eq i64 %bf.cast332, 14, !dbg !10565
  br i1 %cmp34, label %cond.true35, label %cond.false39, !dbg !10565

cond.true35:                                      ; preds = %cond.end25
  %.cast3 = bitcast i64* %8 to %union.tree_node*, !dbg !10565
  %call38 = tail call i32 @vector_type_mode(%union.tree_node* %.cast3) #6, !dbg !10565
  br label %cond.end47, !dbg !10565

cond.false39:                                     ; preds = %cond.end25
  %type42 = bitcast i64* %8 to %struct.tree_type*, !dbg !10565
  %mode43 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type42, i64 0, i32 6, !dbg !10565
  %bf.load44 = load i32, i32* %mode43, align 4, !dbg !10565
  %bf.lshr45 = lshr i32 %bf.load44, 16, !dbg !10565
  %bf.clear46 = and i32 %bf.lshr45, 255, !dbg !10565
  br label %cond.end47, !dbg !10565

cond.end47:                                       ; preds = %cond.false39, %cond.true35
  %cond48 = phi i32 [ %call38, %cond.true35 ], [ %bf.clear46, %cond.false39 ], !dbg !10565
  %call49 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %4, %struct.rtx_def* null, i32 %cond48, i32 1) #8, !dbg !10566
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !10556, metadata !DIExpression()), !dbg !10557
  %idxprom50 = zext i32 %icode to i64, !dbg !10567
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom50, i32 3, !dbg !10569
  %9 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !10569
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 4, i32 0, !dbg !10570
  %10 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !10570
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call27, i64 0, i32 0, !dbg !10571
  %bf.load53 = load i32, i32* %11, align 8, !dbg !10571
  %bf.lshr54 = lshr i32 %bf.load53, 16, !dbg !10571
  %bf.clear55 = and i32 %bf.lshr54, 255, !dbg !10571
  %call56 = tail call i32 %10(%struct.rtx_def* %call27, i32 %bf.clear55) #6, !dbg !10567
  %tobool = icmp eq i32 %call56, 0, !dbg !10567
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10572

land.lhs.true:                                    ; preds = %cond.end47
  %bf.load57 = load i32, i32* %11, align 8, !dbg !10573
  %bf.clear59 = and i32 %bf.load57, 16711680, !dbg !10573
  %cmp60 = icmp eq i32 %bf.clear59, 0, !dbg !10574
  br i1 %cmp60, label %if.end, label %if.then, !dbg !10575

if.then:                                          ; preds = %land.lhs.true
  %bf.lshr62 = lshr i32 %bf.load57, 16, !dbg !10576
  %bf.clear63 = and i32 %bf.lshr62, 255, !dbg !10576
  %call64 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear63, %struct.rtx_def* %call27) #6, !dbg !10577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64, metadata !10555, metadata !DIExpression()), !dbg !10557
  br label %if.end, !dbg !10578

if.end:                                           ; preds = %land.lhs.true, %cond.end47, %if.then
  %rtx_op0.0 = phi %struct.rtx_def* [ %call27, %cond.end47 ], [ %call64, %if.then ], [ %call27, %land.lhs.true ], !dbg !10557
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rtx_op0.0, metadata !10555, metadata !DIExpression()), !dbg !10557
  %predicate69 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 5, i32 0, !dbg !10579
  %12 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate69, align 8, !dbg !10579
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call49, i64 0, i32 0, !dbg !10581
  %bf.load70 = load i32, i32* %13, align 8, !dbg !10581
  %bf.lshr71 = lshr i32 %bf.load70, 16, !dbg !10581
  %bf.clear72 = and i32 %bf.lshr71, 255, !dbg !10581
  %call73 = tail call i32 %12(%struct.rtx_def* %call49, i32 %bf.clear72) #6, !dbg !10582
  %tobool74 = icmp eq i32 %call73, 0, !dbg !10582
  br i1 %tobool74, label %land.lhs.true75, label %if.end85, !dbg !10583

land.lhs.true75:                                  ; preds = %if.end
  %bf.load76 = load i32, i32* %13, align 8, !dbg !10584
  %bf.clear78 = and i32 %bf.load76, 16711680, !dbg !10584
  %cmp79 = icmp eq i32 %bf.clear78, 0, !dbg !10585
  br i1 %cmp79, label %if.end85, label %if.then80, !dbg !10586

if.then80:                                        ; preds = %land.lhs.true75
  %bf.lshr82 = lshr i32 %bf.load76, 16, !dbg !10587
  %bf.clear83 = and i32 %bf.lshr82, 255, !dbg !10587
  %call84 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear83, %struct.rtx_def* %call49) #6, !dbg !10588
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call84, metadata !10556, metadata !DIExpression()), !dbg !10557
  br label %if.end85, !dbg !10589

if.end85:                                         ; preds = %land.lhs.true75, %if.end, %if.then80
  %rtx_op1.0 = phi %struct.rtx_def* [ %call49, %if.end ], [ %call84, %if.then80 ], [ %call49, %land.lhs.true75 ], !dbg !10557
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rtx_op1.0, metadata !10556, metadata !DIExpression()), !dbg !10557
  %call86 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %call, i32 0, %struct.rtx_def* %rtx_op0.0, %struct.rtx_def* %rtx_op1.0) #6, !dbg !10590
  ret %struct.rtx_def* %call86, !dbg !10591
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_val_compare_and_swap(%struct.rtx_def* %mem, %struct.rtx_def* %old_val, %struct.rtx_def* %new_val, %struct.rtx_def* %target) local_unnamed_addr #4 !dbg !10592 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !10596, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_val, metadata !10597, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_val, metadata !10598, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !10599, metadata !DIExpression()), !dbg !10602
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !10603
  %bf.load = load i32, i32* %0, align 8, !dbg !10603
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10603
  %bf.clear = and i32 %bf.lshr, 255, !dbg !10603
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !10600, metadata !DIExpression()), !dbg !10602
  %idxprom = zext i32 %bf.clear to i64, !dbg !10604
  %arrayidx = getelementptr inbounds [87 x i32], [87 x i32]* @sync_compare_and_swap, i64 0, i64 %idxprom, !dbg !10604
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10604
  call void @llvm.dbg.value(metadata i32 %1, metadata !10601, metadata !DIExpression()), !dbg !10602
  %cmp = icmp eq i32 %1, 2956, !dbg !10605
  br i1 %cmp, label %cleanup, label %if.end, !dbg !10607

if.end:                                           ; preds = %entry
  %call = tail call fastcc %struct.rtx_def* @expand_val_compare_and_swap_1(%struct.rtx_def* %mem, %struct.rtx_def* %old_val, %struct.rtx_def* %new_val, %struct.rtx_def* %target, i32 %1) #8, !dbg !10608
  br label %cleanup, !dbg !10609

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call, %if.end ], [ null, %entry ], !dbg !10602
  ret %struct.rtx_def* %retval.0, !dbg !10610
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_val_compare_and_swap_1(%struct.rtx_def* %mem, %struct.rtx_def* %old_val, %struct.rtx_def* %new_val, %struct.rtx_def* %target, i32 %icode) unnamed_addr #4 !dbg !10611 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !10615, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_val, metadata !10616, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_val, metadata !10617, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !10618, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 %icode, metadata !10619, metadata !DIExpression()), !dbg !10622
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !10623
  %bf.load = load i32, i32* %0, align 8, !dbg !10623
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10623
  %bf.clear = and i32 %bf.lshr, 255, !dbg !10623
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !10620, metadata !DIExpression()), !dbg !10622
  %tobool = icmp eq %struct.rtx_def* %target, null, !dbg !10624
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10626

lor.lhs.false:                                    ; preds = %entry
  %idxprom = zext i32 %icode to i64, !dbg !10627
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 3, !dbg !10628
  %1 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !10628
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1, i64 0, i32 0, !dbg !10629
  %2 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !10629
  %call = tail call i32 %2(%struct.rtx_def* nonnull %target, i32 %bf.clear) #6, !dbg !10627
  %tobool2 = icmp eq i32 %call, 0, !dbg !10627
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10630

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !10631
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !10618, metadata !DIExpression()), !dbg !10622
  br label %if.end, !dbg !10632

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %target.addr.0 = phi %struct.rtx_def* [ %target, %lor.lhs.false ], [ %call3, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !10618, metadata !DIExpression()), !dbg !10622
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %old_val, i64 0, i32 0, !dbg !10633
  %bf.load4 = load i32, i32* %3, align 8, !dbg !10633
  %bf.clear6 = and i32 %bf.load4, 16711680, !dbg !10633
  %cmp = icmp eq i32 %bf.clear6, 0, !dbg !10635
  br i1 %cmp, label %if.end16, label %land.lhs.true, !dbg !10636

land.lhs.true:                                    ; preds = %if.end
  %bf.lshr8 = lshr i32 %bf.load4, 16, !dbg !10637
  %bf.clear9 = and i32 %bf.lshr8, 255, !dbg !10637
  %cmp10 = icmp eq i32 %bf.clear9, %bf.clear, !dbg !10638
  br i1 %cmp10, label %if.end16, label %if.then11, !dbg !10639

if.then11:                                        ; preds = %land.lhs.true
  %call15 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear, i32 %bf.clear9, %struct.rtx_def* %old_val, i32 1) #6, !dbg !10640
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15, metadata !10616, metadata !DIExpression()), !dbg !10622
  br label %if.end16, !dbg !10641

if.end16:                                         ; preds = %land.lhs.true, %if.end, %if.then11
  %old_val.addr.0 = phi %struct.rtx_def* [ %call15, %if.then11 ], [ %old_val, %land.lhs.true ], [ %old_val, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_val.addr.0, metadata !10616, metadata !DIExpression()), !dbg !10622
  %idxprom17 = zext i32 %icode to i64, !dbg !10642
  %operand19 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom17, i32 3, !dbg !10644
  %4 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand19, align 8, !dbg !10644
  %predicate21 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %4, i64 2, i32 0, !dbg !10645
  %5 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate21, align 8, !dbg !10645
  %call22 = tail call i32 %5(%struct.rtx_def* %old_val.addr.0, i32 %bf.clear) #6, !dbg !10642
  %tobool23 = icmp eq i32 %call22, 0, !dbg !10642
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !10646

if.then24:                                        ; preds = %if.end16
  %call25 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %old_val.addr.0) #6, !dbg !10647
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call25, metadata !10616, metadata !DIExpression()), !dbg !10622
  br label %if.end26, !dbg !10648

if.end26:                                         ; preds = %if.end16, %if.then24
  %old_val.addr.1 = phi %struct.rtx_def* [ %old_val.addr.0, %if.end16 ], [ %call25, %if.then24 ], !dbg !10622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_val.addr.1, metadata !10616, metadata !DIExpression()), !dbg !10622
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_val, i64 0, i32 0, !dbg !10649
  %bf.load27 = load i32, i32* %6, align 8, !dbg !10649
  %bf.clear29 = and i32 %bf.load27, 16711680, !dbg !10649
  %cmp30 = icmp eq i32 %bf.clear29, 0, !dbg !10651
  br i1 %cmp30, label %if.end41, label %land.lhs.true31, !dbg !10652

land.lhs.true31:                                  ; preds = %if.end26
  %bf.lshr33 = lshr i32 %bf.load27, 16, !dbg !10653
  %bf.clear34 = and i32 %bf.lshr33, 255, !dbg !10653
  %cmp35 = icmp eq i32 %bf.clear34, %bf.clear, !dbg !10654
  br i1 %cmp35, label %if.end41, label %if.then36, !dbg !10655

if.then36:                                        ; preds = %land.lhs.true31
  %call40 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear, i32 %bf.clear34, %struct.rtx_def* %new_val, i32 1) #6, !dbg !10656
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40, metadata !10617, metadata !DIExpression()), !dbg !10622
  br label %if.end41, !dbg !10657

if.end41:                                         ; preds = %land.lhs.true31, %if.end26, %if.then36
  %new_val.addr.0 = phi %struct.rtx_def* [ %call40, %if.then36 ], [ %new_val, %land.lhs.true31 ], [ %new_val, %if.end26 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_val.addr.0, metadata !10617, metadata !DIExpression()), !dbg !10622
  %predicate46 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %4, i64 3, i32 0, !dbg !10658
  %7 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate46, align 8, !dbg !10658
  %call47 = tail call i32 %7(%struct.rtx_def* %new_val.addr.0, i32 %bf.clear) #6, !dbg !10660
  %tobool48 = icmp eq i32 %call47, 0, !dbg !10660
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !10661

if.then49:                                        ; preds = %if.end41
  %call50 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %new_val.addr.0) #6, !dbg !10662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50, metadata !10617, metadata !DIExpression()), !dbg !10622
  br label %if.end51, !dbg !10663

if.end51:                                         ; preds = %if.end41, %if.then49
  %new_val.addr.1 = phi %struct.rtx_def* [ %new_val.addr.0, %if.end41 ], [ %call50, %if.then49 ], !dbg !10622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_val.addr.1, metadata !10617, metadata !DIExpression()), !dbg !10622
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom17, i32 2, !dbg !10664
  %8 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !10664
  %call54 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %8(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %mem, %struct.rtx_def* %old_val.addr.1, %struct.rtx_def* %new_val.addr.1) #6, !dbg !10664
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call54, metadata !10621, metadata !DIExpression()), !dbg !10622
  %cmp55 = icmp eq %struct.rtx_def* %call54, null, !dbg !10665
  br i1 %cmp55, label %cleanup, label %if.end57, !dbg !10667

if.end57:                                         ; preds = %if.end51
  %call58 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %call54) #6, !dbg !10668
  br label %cleanup, !dbg !10669

cleanup:                                          ; preds = %if.end51, %if.end57
  %retval.0 = phi %struct.rtx_def* [ %target.addr.0, %if.end57 ], [ null, %if.end51 ], !dbg !10622
  ret %struct.rtx_def* %retval.0, !dbg !10670
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_bool_compare_and_swap(%struct.rtx_def* %mem, %struct.rtx_def* %old_val, %struct.rtx_def* %new_val, %struct.rtx_def* %target) local_unnamed_addr #4 !dbg !10671 {
entry:
  %cc_reg = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !10673, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_val, metadata !10674, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_val, metadata !10675, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !10676, metadata !DIExpression()), !dbg !10682
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !10683
  %bf.load = load i32, i32* %0, align 8, !dbg !10683
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10683
  %bf.clear = and i32 %bf.lshr, 255, !dbg !10683
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !10677, metadata !DIExpression()), !dbg !10682
  %1 = bitcast %struct.rtx_def** %cc_reg to i8*, !dbg !10684
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !10684
  %idxprom = zext i32 %bf.clear to i64, !dbg !10685
  %arrayidx = getelementptr inbounds [87 x i32], [87 x i32]* @sync_compare_and_swap, i64 0, i64 %idxprom, !dbg !10685
  %2 = load i32, i32* %arrayidx, align 4, !dbg !10685
  call void @llvm.dbg.value(metadata i32 %2, metadata !10678, metadata !DIExpression()), !dbg !10682
  %cmp = icmp eq i32 %2, 2956, !dbg !10686
  br i1 %cmp, label %cleanup, label %do.body.preheader, !dbg !10688

do.body.preheader:                                ; preds = %entry
  br label %do.body, !dbg !10689

do.body:                                          ; preds = %do.body.preheader, %do.cond
  %old_val.addr.0 = phi %struct.rtx_def* [ %old_val.addr.1, %do.cond ], [ %old_val, %do.body.preheader ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_val.addr.0, metadata !10674, metadata !DIExpression()), !dbg !10682
  call void @start_sequence() #6, !dbg !10690
  %call = call fastcc %struct.rtx_def* @expand_val_compare_and_swap_1(%struct.rtx_def* %mem, %struct.rtx_def* %old_val.addr.0, %struct.rtx_def* %new_val, %struct.rtx_def* null, i32 %2) #8, !dbg !10692
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !10679, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !10681, metadata !DIExpression()), !dbg !10682
  store %struct.rtx_def* null, %struct.rtx_def** %cc_reg, align 8, !dbg !10693
  %cmp1 = icmp eq %struct.rtx_def* %call, null, !dbg !10694
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10696

if.then2:                                         ; preds = %do.body
  call void @end_sequence() #6, !dbg !10697
  br label %cleanup, !dbg !10699

if.end3:                                          ; preds = %do.body
  %call4 = call i32 @have_insn_for(i32 48, i32 2) #8, !dbg !10700
  %tobool = icmp eq i32 %call4, 0, !dbg !10700
  br i1 %tobool, label %if.end8, label %if.then5, !dbg !10702

if.then5:                                         ; preds = %if.end3
  %call6 = call %struct.rtx_def* @get_last_insn() #6, !dbg !10703
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call6, i64 0, i32 1, !dbg !10703
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !10703
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !10703
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10703
  call void @note_stores(%struct.rtx_def* %4, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @find_cc_set, i8* nonnull %1) #6, !dbg !10704
  br label %if.end8, !dbg !10704

if.end8:                                          ; preds = %if.end3, %if.then5
  %call9 = call %struct.rtx_def* @get_insns() #6, !dbg !10705
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call9, metadata !10680, metadata !DIExpression()), !dbg !10682
  call void @end_sequence() #6, !dbg !10706
  %5 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg, align 8, !dbg !10707
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !10681, metadata !DIExpression()), !dbg !10682
  %tobool10 = icmp eq %struct.rtx_def* %5, null, !dbg !10707
  br i1 %tobool10, label %land.lhs.true, label %do.cond, !dbg !10709

land.lhs.true:                                    ; preds = %if.end8
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %old_val.addr.0, i64 0, i32 0, !dbg !10710
  %bf.load11 = load i32, i32* %6, align 8, !dbg !10710
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !10710
  %cmp13 = icmp eq i32 %bf.clear12, 43, !dbg !10710
  br i1 %cmp13, label %if.then14, label %do.cond, !dbg !10711

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !10680, metadata !DIExpression()), !dbg !10682
  %call15 = call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %old_val.addr.0) #6, !dbg !10712
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15, metadata !10674, metadata !DIExpression()), !dbg !10682
  br label %do.cond, !dbg !10714

do.cond:                                          ; preds = %if.end8, %land.lhs.true, %if.then14
  %seq.0 = phi %struct.rtx_def* [ %call9, %if.end8 ], [ null, %if.then14 ], [ %call9, %land.lhs.true ], !dbg !10715
  %old_val.addr.1 = phi %struct.rtx_def* [ %old_val.addr.0, %if.end8 ], [ %call15, %if.then14 ], [ %old_val.addr.0, %land.lhs.true ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_val.addr.1, metadata !10674, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %seq.0, metadata !10680, metadata !DIExpression()), !dbg !10682
  %tobool17 = icmp eq %struct.rtx_def* %seq.0, null, !dbg !10716
  br i1 %tobool17, label %do.body, label %do.end, !dbg !10717, !llvm.loop !10718

do.end:                                           ; preds = %do.cond
  %seq.0.lcssa = phi %struct.rtx_def* [ %seq.0, %do.cond ], !dbg !10715
  %old_val.addr.1.lcssa = phi %struct.rtx_def* [ %old_val.addr.1, %do.cond ]
  %call.lcssa3 = phi %struct.rtx_def* [ %call, %do.cond ], !dbg !10692
  call void @llvm.dbg.value(metadata %struct.rtx_def* %seq.0.lcssa, metadata !10680, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_val.addr.1.lcssa, metadata !10674, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %seq.0.lcssa, metadata !10680, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_val.addr.1.lcssa, metadata !10674, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %seq.0.lcssa, metadata !10680, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_val.addr.1.lcssa, metadata !10674, metadata !DIExpression()), !dbg !10682
  %call18 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %seq.0.lcssa) #6, !dbg !10720
  %7 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg, align 8, !dbg !10721
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !10681, metadata !DIExpression()), !dbg !10682
  %tobool19 = icmp eq %struct.rtx_def* %7, null, !dbg !10721
  br i1 %tobool19, label %if.else, label %if.then20, !dbg !10723

if.then20:                                        ; preds = %do.end
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !10681, metadata !DIExpression()), !dbg !10682
  %8 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10724
  %call21 = call %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def* %target, i32 81, %struct.rtx_def* nonnull %7, %struct.rtx_def* %8, i32 0, i32 0, i32 1) #6, !dbg !10725
  br label %cleanup, !dbg !10726

if.else:                                          ; preds = %do.end
  %call22 = call %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def* %target, i32 81, %struct.rtx_def* nonnull %call.lcssa3, %struct.rtx_def* %old_val.addr.1.lcssa, i32 0, i32 1, i32 1) #6, !dbg !10727
  br label %cleanup, !dbg !10728

cleanup:                                          ; preds = %entry, %if.else, %if.then20, %if.then2
  %retval.0 = phi %struct.rtx_def* [ null, %if.then2 ], [ %call21, %if.then20 ], [ %call22, %if.else ], [ null, %entry ], !dbg !10682
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !10729
  ret %struct.rtx_def* %retval.0, !dbg !10729
}

; Function Attrs: nounwind uwtable
define internal void @find_cc_set(%struct.rtx_def* %x, %struct.rtx_def* %pat, i8* %data) #4 !dbg !10730 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !10732, metadata !DIExpression()), !dbg !10738
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !10733, metadata !DIExpression()), !dbg !10738
  call void @llvm.dbg.value(metadata i8* %data, metadata !10734, metadata !DIExpression()), !dbg !10738
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !10739
  %bf.load = load i32, i32* %0, align 8, !dbg !10739
  %bf.clear = and i32 %bf.load, 65535, !dbg !10739
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !10739
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10740

land.lhs.true:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10741
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !10741
  %idxprom = zext i32 %bf.clear2 to i64, !dbg !10741
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10741
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10741
  %cmp3 = icmp eq i8 %1, 1, !dbg !10742
  br i1 %cmp3, label %land.lhs.true5, label %if.end, !dbg !10743

land.lhs.true5:                                   ; preds = %land.lhs.true
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 0, !dbg !10744
  %bf.load6 = load i32, i32* %2, align 8, !dbg !10744
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !10744
  %cmp8 = icmp eq i32 %bf.clear7, 23, !dbg !10745
  br i1 %cmp8, label %if.then, label %if.end, !dbg !10746

if.then:                                          ; preds = %land.lhs.true5
  %3 = bitcast i8* %data to %struct.rtx_def**, !dbg !10747
  call void @llvm.dbg.value(metadata %struct.rtx_def** %3, metadata !10735, metadata !DIExpression()), !dbg !10748
  %4 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8, !dbg !10749
  %tobool = icmp eq %struct.rtx_def* %4, null, !dbg !10749
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10749

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 7013, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10749
  br label %cond.end, !dbg !10749

cond.end:                                         ; preds = %if.then, %cond.true
  store %struct.rtx_def* %x, %struct.rtx_def** %3, align 8, !dbg !10750
  br label %if.end, !dbg !10751

if.end:                                           ; preds = %cond.end, %land.lhs.true5, %land.lhs.true, %entry
  ret void, !dbg !10752
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_sync_operation(%struct.rtx_def* %mem, %struct.rtx_def* %val, i32 %code) local_unnamed_addr #4 !dbg !10753 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !10757, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val, metadata !10758, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i32 %code, metadata !10759, metadata !DIExpression()), !dbg !10767
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !10768
  %bf.load = load i32, i32* %0, align 8, !dbg !10768
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10768
  %bf.clear = and i32 %bf.lshr, 255, !dbg !10768
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !10760, metadata !DIExpression()), !dbg !10767
  switch i32 %code, label %sw.default [
    i32 49, label %sw.bb
    i32 62, label %sw.bb1
    i32 63, label %sw.bb4
    i32 61, label %sw.bb7
    i32 64, label %sw.bb10
    i32 50, label %sw.bb13
  ], !dbg !10769

sw.bb:                                            ; preds = %entry
  %idxprom = zext i32 %bf.clear to i64, !dbg !10770
  %arrayidx = getelementptr inbounds [87 x i32], [87 x i32]* @sync_add_optab, i64 0, i64 %idxprom, !dbg !10770
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10770
  call void @llvm.dbg.value(metadata i32 %1, metadata !10761, metadata !DIExpression()), !dbg !10767
  br label %sw.epilog, !dbg !10772

sw.bb1:                                           ; preds = %entry
  %idxprom2 = zext i32 %bf.clear to i64, !dbg !10773
  %arrayidx3 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_ior_optab, i64 0, i64 %idxprom2, !dbg !10773
  %2 = load i32, i32* %arrayidx3, align 4, !dbg !10773
  call void @llvm.dbg.value(metadata i32 %2, metadata !10761, metadata !DIExpression()), !dbg !10767
  br label %sw.epilog, !dbg !10774

sw.bb4:                                           ; preds = %entry
  %idxprom5 = zext i32 %bf.clear to i64, !dbg !10775
  %arrayidx6 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_xor_optab, i64 0, i64 %idxprom5, !dbg !10775
  %3 = load i32, i32* %arrayidx6, align 4, !dbg !10775
  call void @llvm.dbg.value(metadata i32 %3, metadata !10761, metadata !DIExpression()), !dbg !10767
  br label %sw.epilog, !dbg !10776

sw.bb7:                                           ; preds = %entry
  %idxprom8 = zext i32 %bf.clear to i64, !dbg !10777
  %arrayidx9 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_and_optab, i64 0, i64 %idxprom8, !dbg !10777
  %4 = load i32, i32* %arrayidx9, align 4, !dbg !10777
  call void @llvm.dbg.value(metadata i32 %4, metadata !10761, metadata !DIExpression()), !dbg !10767
  br label %sw.epilog, !dbg !10778

sw.bb10:                                          ; preds = %entry
  %idxprom11 = zext i32 %bf.clear to i64, !dbg !10779
  %arrayidx12 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_nand_optab, i64 0, i64 %idxprom11, !dbg !10779
  %5 = load i32, i32* %arrayidx12, align 4, !dbg !10779
  call void @llvm.dbg.value(metadata i32 %5, metadata !10761, metadata !DIExpression()), !dbg !10767
  br label %sw.epilog, !dbg !10780

sw.bb13:                                          ; preds = %entry
  %idxprom14 = zext i32 %bf.clear to i64, !dbg !10781
  %arrayidx15 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_sub_optab, i64 0, i64 %idxprom14, !dbg !10781
  %6 = load i32, i32* %arrayidx15, align 4, !dbg !10781
  call void @llvm.dbg.value(metadata i32 %6, metadata !10761, metadata !DIExpression()), !dbg !10767
  %cmp = icmp eq i32 %6, 2956, !dbg !10782
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10784

lor.lhs.false:                                    ; preds = %sw.bb13
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %val, i64 0, i32 0, !dbg !10785
  %bf.load16 = load i32, i32* %7, align 8, !dbg !10785
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !10785
  %cmp18 = icmp eq i32 %bf.clear17, 30, !dbg !10785
  br i1 %cmp18, label %if.then, label %sw.epilog, !dbg !10786

if.then:                                          ; preds = %lor.lhs.false, %sw.bb13
  %arrayidx20 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_add_optab, i64 0, i64 %idxprom14, !dbg !10787
  %8 = load i32, i32* %arrayidx20, align 4, !dbg !10787
  call void @llvm.dbg.value(metadata i32 %8, metadata !10761, metadata !DIExpression()), !dbg !10767
  %cmp21 = icmp eq i32 %8, 2956, !dbg !10789
  br i1 %cmp21, label %sw.epilog, label %if.then22, !dbg !10791

if.then22:                                        ; preds = %if.then
  %call = tail call %struct.rtx_def* @expand_simple_unop(i32 %bf.clear, i32 51, %struct.rtx_def* %val, %struct.rtx_def* null, i32 1) #8, !dbg !10792
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !10758, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i32 49, metadata !10759, metadata !DIExpression()), !dbg !10767
  br label %sw.epilog, !dbg !10794

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 7183, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10795
  br label %sw.epilog, !dbg !10796

sw.epilog:                                        ; preds = %if.then, %lor.lhs.false, %if.then22, %sw.default, %sw.bb10, %sw.bb7, %sw.bb4, %sw.bb1, %sw.bb
  %icode.1 = phi i32 [ undef, %sw.default ], [ %5, %sw.bb10 ], [ %4, %sw.bb7 ], [ %3, %sw.bb4 ], [ %2, %sw.bb1 ], [ %1, %sw.bb ], [ %6, %lor.lhs.false ], [ %8, %if.then22 ], [ 2956, %if.then ]
  %code.addr.2 = phi i32 [ %code, %sw.default ], [ 64, %sw.bb10 ], [ 61, %sw.bb7 ], [ 63, %sw.bb4 ], [ 62, %sw.bb1 ], [ 49, %sw.bb ], [ 50, %lor.lhs.false ], [ 49, %if.then22 ], [ 50, %if.then ]
  %val.addr.2 = phi %struct.rtx_def* [ %val, %sw.default ], [ %val, %sw.bb10 ], [ %val, %sw.bb7 ], [ %val, %sw.bb4 ], [ %val, %sw.bb1 ], [ %val, %sw.bb ], [ %val, %lor.lhs.false ], [ %call, %if.then22 ], [ %val, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.2, metadata !10758, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i32 %code.addr.2, metadata !10759, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i32 %icode.1, metadata !10761, metadata !DIExpression()), !dbg !10767
  %cmp24 = icmp eq i32 %icode.1, 2956, !dbg !10797
  br i1 %cmp24, label %if.end54, label %if.then25, !dbg !10799

if.then25:                                        ; preds = %sw.epilog
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %val.addr.2, i64 0, i32 0, !dbg !10800
  %bf.load26 = load i32, i32* %9, align 8, !dbg !10800
  %bf.clear28 = and i32 %bf.load26, 16711680, !dbg !10800
  %cmp29 = icmp eq i32 %bf.clear28, 0, !dbg !10803
  br i1 %cmp29, label %if.end39, label %land.lhs.true, !dbg !10804

land.lhs.true:                                    ; preds = %if.then25
  %bf.lshr31 = lshr i32 %bf.load26, 16, !dbg !10805
  %bf.clear32 = and i32 %bf.lshr31, 255, !dbg !10805
  %cmp33 = icmp eq i32 %bf.clear32, %bf.clear, !dbg !10806
  br i1 %cmp33, label %if.end39, label %if.then34, !dbg !10807

if.then34:                                        ; preds = %land.lhs.true
  %call38 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear, i32 %bf.clear32, %struct.rtx_def* %val.addr.2, i32 1) #6, !dbg !10808
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call38, metadata !10758, metadata !DIExpression()), !dbg !10767
  br label %if.end39, !dbg !10809

if.end39:                                         ; preds = %land.lhs.true, %if.then25, %if.then34
  %val.addr.3 = phi %struct.rtx_def* [ %call38, %if.then34 ], [ %val.addr.2, %land.lhs.true ], [ %val.addr.2, %if.then25 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.3, metadata !10758, metadata !DIExpression()), !dbg !10767
  %idxprom40 = zext i32 %icode.1 to i64, !dbg !10810
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom40, i32 3, !dbg !10812
  %10 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !10812
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %10, i64 1, i32 0, !dbg !10813
  %11 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !10813
  %call43 = tail call i32 %11(%struct.rtx_def* %val.addr.3, i32 %bf.clear) #6, !dbg !10810
  %tobool = icmp eq i32 %call43, 0, !dbg !10810
  br i1 %tobool, label %if.then44, label %if.end46, !dbg !10814

if.then44:                                        ; preds = %if.end39
  %call45 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %val.addr.3) #6, !dbg !10815
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !10758, metadata !DIExpression()), !dbg !10767
  br label %if.end46, !dbg !10816

if.end46:                                         ; preds = %if.end39, %if.then44
  %val.addr.4 = phi %struct.rtx_def* [ %val.addr.3, %if.end39 ], [ %call45, %if.then44 ], !dbg !10817
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.4, metadata !10758, metadata !DIExpression()), !dbg !10767
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom40, i32 2, !dbg !10818
  %12 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !10818
  %call49 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %12(%struct.rtx_def* %mem, %struct.rtx_def* %val.addr.4) #6, !dbg !10818
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !10762, metadata !DIExpression()), !dbg !10767
  %tobool50 = icmp eq %struct.rtx_def* %call49, null, !dbg !10819
  br i1 %tobool50, label %if.end54, label %if.then51, !dbg !10821

if.then51:                                        ; preds = %if.end46
  %call52 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %call49) #6, !dbg !10822
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10824
  br label %cleanup75, !dbg !10825

if.end54:                                         ; preds = %if.end46, %sw.epilog
  %val.addr.5 = phi %struct.rtx_def* [ %val.addr.2, %sw.epilog ], [ %val.addr.4, %if.end46 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.5, metadata !10758, metadata !DIExpression()), !dbg !10767
  %idxprom55 = zext i32 %bf.clear to i64, !dbg !10826
  %arrayidx56 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_compare_and_swap, i64 0, i64 %idxprom55, !dbg !10826
  %14 = load i32, i32* %arrayidx56, align 4, !dbg !10826
  %cmp57 = icmp eq i32 %14, 2956, !dbg !10827
  br i1 %cmp57, label %if.end74, label %if.then58, !dbg !10828

if.then58:                                        ; preds = %if.end54
  %call59 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !10829
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call59, metadata !10763, metadata !DIExpression()), !dbg !10830
  tail call void @start_sequence() #6, !dbg !10831
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call59, metadata !10766, metadata !DIExpression()), !dbg !10830
  %cmp60 = icmp eq i32 %code.addr.2, 64, !dbg !10832
  br i1 %cmp60, label %if.then61, label %if.else, !dbg !10834

if.then61:                                        ; preds = %if.then58
  %call62 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear, i32 61, %struct.rtx_def* %call59, %struct.rtx_def* %val.addr.5, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !10835
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call62, metadata !10766, metadata !DIExpression()), !dbg !10830
  %call63 = tail call %struct.rtx_def* @expand_simple_unop(i32 %bf.clear, i32 64, %struct.rtx_def* %call62, %struct.rtx_def* null, i32 1) #8, !dbg !10837
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call63, metadata !10766, metadata !DIExpression()), !dbg !10830
  br label %if.end65, !dbg !10838

if.else:                                          ; preds = %if.then58
  %call64 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear, i32 %code.addr.2, %struct.rtx_def* %call59, %struct.rtx_def* %val.addr.5, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !10839
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64, metadata !10766, metadata !DIExpression()), !dbg !10830
  br label %if.end65

if.end65:                                         ; preds = %if.else, %if.then61
  %t1.0 = phi %struct.rtx_def* [ %call63, %if.then61 ], [ %call64, %if.else ], !dbg !10840
  call void @llvm.dbg.value(metadata %struct.rtx_def* %t1.0, metadata !10766, metadata !DIExpression()), !dbg !10830
  %call66 = tail call %struct.rtx_def* @get_insns() #6, !dbg !10841
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call66, metadata !10762, metadata !DIExpression()), !dbg !10767
  tail call void @end_sequence() #6, !dbg !10842
  %cmp67 = icmp eq %struct.rtx_def* %t1.0, null, !dbg !10843
  br i1 %cmp67, label %cleanup, label %land.lhs.true68, !dbg !10845

land.lhs.true68:                                  ; preds = %if.end65
  %call69 = tail call fastcc zeroext i8 @expand_compare_and_swap_loop(%struct.rtx_def* %mem, %struct.rtx_def* %call59, %struct.rtx_def* nonnull %t1.0, %struct.rtx_def* %call66) #8, !dbg !10846
  %tobool70 = icmp eq i8 %call69, 0, !dbg !10846
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10847
  br label %cleanup, !dbg !10848

cleanup:                                          ; preds = %if.end65, %land.lhs.true68
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end65 ], [ %tobool70, %land.lhs.true68 ]
  %retval.0 = phi %struct.rtx_def* [ undef, %if.end65 ], [ %15, %land.lhs.true68 ]
  br i1 %cleanup.dest.slot.0, label %if.end74, label %cleanup75

if.end74:                                         ; preds = %if.end54, %cleanup
  br label %cleanup75, !dbg !10849

cleanup75:                                        ; preds = %cleanup, %if.end74, %if.then51
  %retval.1 = phi %struct.rtx_def* [ %13, %if.then51 ], [ %retval.0, %cleanup ], [ null, %if.end74 ], !dbg !10767
  ret %struct.rtx_def* %retval.1, !dbg !10850
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @expand_compare_and_swap_loop(%struct.rtx_def* %mem, %struct.rtx_def* %old_reg, %struct.rtx_def* %new_reg, %struct.rtx_def* %seq) unnamed_addr #4 !dbg !10851 {
entry:
  %cc_reg = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !10855, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_reg, metadata !10856, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_reg, metadata !10857, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata %struct.rtx_def* %seq, metadata !10858, metadata !DIExpression()), !dbg !10865
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !10866
  %bf.load = load i32, i32* %0, align 8, !dbg !10866
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10866
  %bf.clear = and i32 %bf.lshr, 255, !dbg !10866
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !10859, metadata !DIExpression()), !dbg !10865
  %1 = bitcast %struct.rtx_def** %cc_reg to i8*, !dbg !10867
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !10867
  %call = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !10868
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !10861, metadata !DIExpression()), !dbg !10865
  %call1 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !10869
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !10862, metadata !DIExpression()), !dbg !10865
  %call2 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1, %struct.rtx_def* %mem) #6, !dbg !10870
  %call3 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call) #6, !dbg !10871
  %call4 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %old_reg, %struct.rtx_def* %call1) #6, !dbg !10872
  %tobool = icmp eq %struct.rtx_def* %seq, null, !dbg !10873
  br i1 %tobool, label %if.end, label %if.then, !dbg !10875

if.then:                                          ; preds = %entry
  %call5 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %seq) #6, !dbg !10876
  br label %if.end, !dbg !10876

if.end:                                           ; preds = %entry, %if.then
  %idxprom = zext i32 %bf.clear to i64, !dbg !10877
  %arrayidx = getelementptr inbounds [87 x i32], [87 x i32]* @sync_compare_and_swap, i64 0, i64 %idxprom, !dbg !10877
  %2 = load i32, i32* %arrayidx, align 4, !dbg !10877
  call void @llvm.dbg.value(metadata i32 %2, metadata !10860, metadata !DIExpression()), !dbg !10865
  %cmp = icmp eq i32 %2, 2956, !dbg !10878
  br i1 %cmp, label %cleanup, label %if.end7, !dbg !10880

if.end7:                                          ; preds = %if.end
  %call8 = tail call fastcc %struct.rtx_def* @expand_val_compare_and_swap_1(%struct.rtx_def* %mem, %struct.rtx_def* %old_reg, %struct.rtx_def* %new_reg, %struct.rtx_def* %call1, i32 %2) #8, !dbg !10881
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call8, metadata !10863, metadata !DIExpression()), !dbg !10865
  %cmp9 = icmp eq %struct.rtx_def* %call8, null, !dbg !10882
  br i1 %cmp9, label %cleanup, label %if.end11, !dbg !10884

if.end11:                                         ; preds = %if.end7
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !10864, metadata !DIExpression()), !dbg !10865
  store %struct.rtx_def* null, %struct.rtx_def** %cc_reg, align 8, !dbg !10885
  %call12 = tail call i32 @have_insn_for(i32 48, i32 2) #8, !dbg !10886
  %tobool13 = icmp eq i32 %call12, 0, !dbg !10886
  br i1 %tobool13, label %if.end17, label %if.then14, !dbg !10888

if.then14:                                        ; preds = %if.end11
  %call15 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !10889
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call15, i64 0, i32 1, !dbg !10889
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !10889
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !10889
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10889
  call void @note_stores(%struct.rtx_def* %4, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @find_cc_set, i8* nonnull %1) #6, !dbg !10890
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %cc_reg, align 8, !dbg !10891
  br label %if.end17, !dbg !10890

if.end17:                                         ; preds = %if.end11, %if.then14
  %5 = phi %struct.rtx_def* [ null, %if.end11 ], [ %.pre, %if.then14 ], !dbg !10891
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !10864, metadata !DIExpression()), !dbg !10865
  %tobool18 = icmp eq %struct.rtx_def* %5, null, !dbg !10891
  br i1 %tobool18, label %if.else, label %if.then19, !dbg !10893

if.then19:                                        ; preds = %if.end17
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !10864, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !10862, metadata !DIExpression()), !dbg !10865
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10894
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !10856, metadata !DIExpression()), !dbg !10865
  br label %if.end24, !dbg !10896

if.else:                                          ; preds = %if.end17
  %cmp20 = icmp eq %struct.rtx_def* %call8, %call1, !dbg !10897
  br i1 %cmp20, label %if.end24, label %if.then21, !dbg !10900

if.then21:                                        ; preds = %if.else
  %call22 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1, %struct.rtx_def* nonnull %call8) #6, !dbg !10901
  br label %if.end24, !dbg !10901

if.end24:                                         ; preds = %if.else, %if.then21, %if.then19
  %cmp_reg.0 = phi %struct.rtx_def* [ %5, %if.then19 ], [ %call1, %if.then21 ], [ %call1, %if.else ], !dbg !10865
  %old_reg.addr.0 = phi %struct.rtx_def* [ %6, %if.then19 ], [ %old_reg, %if.then21 ], [ %old_reg, %if.else ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_reg.addr.0, metadata !10856, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cmp_reg.0, metadata !10862, metadata !DIExpression()), !dbg !10865
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10902
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cmp_reg.0, i64 0, i32 0, !dbg !10903
  %bf.load25 = load i32, i32* %8, align 8, !dbg !10903
  %bf.lshr26 = lshr i32 %bf.load25, 16, !dbg !10903
  %bf.clear27 = and i32 %bf.lshr26, 255, !dbg !10903
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %cmp_reg.0, %struct.rtx_def* %old_reg.addr.0, i32 80, %struct.rtx_def* %7, i32 %bf.clear27, i32 1, %struct.rtx_def* %call) #8, !dbg !10904
  br label %cleanup, !dbg !10905

cleanup:                                          ; preds = %if.end7, %if.end, %if.end24
  %retval.0 = phi i8 [ 1, %if.end24 ], [ 0, %if.end ], [ 0, %if.end7 ], !dbg !10865
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !10906
  ret i8 %retval.0, !dbg !10906
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_sync_fetch_operation(%struct.rtx_def* %mem, %struct.rtx_def* %val, i32 %code, i8 zeroext %after, %struct.rtx_def* %target) local_unnamed_addr #4 !dbg !10907 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !10911, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val, metadata !10912, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata i32 %code, metadata !10913, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata i8 %after, metadata !10914, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !10915, metadata !DIExpression()), !dbg !10926
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !10927
  %bf.load = load i32, i32* %0, align 8, !dbg !10927
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10927
  %bf.clear = and i32 %bf.lshr, 255, !dbg !10927
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !10916, metadata !DIExpression()), !dbg !10926
  switch i32 %code, label %sw.default [
    i32 49, label %sw.bb
    i32 62, label %sw.bb3
    i32 63, label %sw.bb8
    i32 61, label %sw.bb13
    i32 64, label %sw.bb18
    i32 50, label %sw.bb23
  ], !dbg !10928

sw.bb:                                            ; preds = %entry
  %idxprom = zext i32 %bf.clear to i64, !dbg !10929
  %arrayidx = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_add_optab, i64 0, i64 %idxprom, !dbg !10929
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10929
  call void @llvm.dbg.value(metadata i32 %1, metadata !10917, metadata !DIExpression()), !dbg !10926
  %arrayidx2 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_add_optab, i64 0, i64 %idxprom, !dbg !10931
  %2 = load i32, i32* %arrayidx2, align 4, !dbg !10931
  call void @llvm.dbg.value(metadata i32 %2, metadata !10918, metadata !DIExpression()), !dbg !10926
  br label %sw.epilog, !dbg !10932

sw.bb3:                                           ; preds = %entry
  %idxprom4 = zext i32 %bf.clear to i64, !dbg !10933
  %arrayidx5 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_ior_optab, i64 0, i64 %idxprom4, !dbg !10933
  %3 = load i32, i32* %arrayidx5, align 4, !dbg !10933
  call void @llvm.dbg.value(metadata i32 %3, metadata !10917, metadata !DIExpression()), !dbg !10926
  %arrayidx7 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_ior_optab, i64 0, i64 %idxprom4, !dbg !10934
  %4 = load i32, i32* %arrayidx7, align 4, !dbg !10934
  call void @llvm.dbg.value(metadata i32 %4, metadata !10918, metadata !DIExpression()), !dbg !10926
  br label %sw.epilog, !dbg !10935

sw.bb8:                                           ; preds = %entry
  %idxprom9 = zext i32 %bf.clear to i64, !dbg !10936
  %arrayidx10 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_xor_optab, i64 0, i64 %idxprom9, !dbg !10936
  %5 = load i32, i32* %arrayidx10, align 4, !dbg !10936
  call void @llvm.dbg.value(metadata i32 %5, metadata !10917, metadata !DIExpression()), !dbg !10926
  %arrayidx12 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_xor_optab, i64 0, i64 %idxprom9, !dbg !10937
  %6 = load i32, i32* %arrayidx12, align 4, !dbg !10937
  call void @llvm.dbg.value(metadata i32 %6, metadata !10918, metadata !DIExpression()), !dbg !10926
  br label %sw.epilog, !dbg !10938

sw.bb13:                                          ; preds = %entry
  %idxprom14 = zext i32 %bf.clear to i64, !dbg !10939
  %arrayidx15 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_and_optab, i64 0, i64 %idxprom14, !dbg !10939
  %7 = load i32, i32* %arrayidx15, align 4, !dbg !10939
  call void @llvm.dbg.value(metadata i32 %7, metadata !10917, metadata !DIExpression()), !dbg !10926
  %arrayidx17 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_and_optab, i64 0, i64 %idxprom14, !dbg !10940
  %8 = load i32, i32* %arrayidx17, align 4, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %8, metadata !10918, metadata !DIExpression()), !dbg !10926
  br label %sw.epilog, !dbg !10941

sw.bb18:                                          ; preds = %entry
  %idxprom19 = zext i32 %bf.clear to i64, !dbg !10942
  %arrayidx20 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_nand_optab, i64 0, i64 %idxprom19, !dbg !10942
  %9 = load i32, i32* %arrayidx20, align 4, !dbg !10942
  call void @llvm.dbg.value(metadata i32 %9, metadata !10917, metadata !DIExpression()), !dbg !10926
  %arrayidx22 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_nand_optab, i64 0, i64 %idxprom19, !dbg !10943
  %10 = load i32, i32* %arrayidx22, align 4, !dbg !10943
  call void @llvm.dbg.value(metadata i32 %10, metadata !10918, metadata !DIExpression()), !dbg !10926
  br label %sw.epilog, !dbg !10944

sw.bb23:                                          ; preds = %entry
  %idxprom24 = zext i32 %bf.clear to i64, !dbg !10945
  %arrayidx25 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_sub_optab, i64 0, i64 %idxprom24, !dbg !10945
  %11 = load i32, i32* %arrayidx25, align 4, !dbg !10945
  call void @llvm.dbg.value(metadata i32 %11, metadata !10917, metadata !DIExpression()), !dbg !10926
  %arrayidx27 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_sub_optab, i64 0, i64 %idxprom24, !dbg !10946
  %12 = load i32, i32* %arrayidx27, align 4, !dbg !10946
  call void @llvm.dbg.value(metadata i32 %12, metadata !10918, metadata !DIExpression()), !dbg !10926
  %cmp = icmp eq i32 %11, 2956, !dbg !10947
  %cmp28 = icmp eq i32 %12, 2956, !dbg !10949
  %or.cond = and i1 %cmp, %cmp28, !dbg !10950
  br i1 %or.cond, label %if.then, label %lor.lhs.false, !dbg !10950

lor.lhs.false:                                    ; preds = %sw.bb23
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %val, i64 0, i32 0, !dbg !10951
  %bf.load29 = load i32, i32* %13, align 8, !dbg !10951
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !10951
  %cmp31 = icmp eq i32 %bf.clear30, 30, !dbg !10951
  br i1 %cmp31, label %if.then, label %sw.epilog, !dbg !10952

if.then:                                          ; preds = %sw.bb23, %lor.lhs.false
  %arrayidx33 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_old_add_optab, i64 0, i64 %idxprom24, !dbg !10953
  %14 = load i32, i32* %arrayidx33, align 4, !dbg !10953
  call void @llvm.dbg.value(metadata i32 %14, metadata !10917, metadata !DIExpression()), !dbg !10926
  %arrayidx35 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_new_add_optab, i64 0, i64 %idxprom24, !dbg !10955
  %15 = load i32, i32* %arrayidx35, align 4, !dbg !10955
  call void @llvm.dbg.value(metadata i32 %15, metadata !10918, metadata !DIExpression()), !dbg !10926
  %cmp36 = icmp ne i32 %14, 2956, !dbg !10956
  %cmp38 = icmp ne i32 %15, 2956, !dbg !10958
  %or.cond1 = or i1 %cmp36, %cmp38, !dbg !10959
  br i1 %or.cond1, label %if.then39, label %sw.epilog, !dbg !10959

if.then39:                                        ; preds = %if.then
  %call = tail call %struct.rtx_def* @expand_simple_unop(i32 %bf.clear, i32 51, %struct.rtx_def* %val, %struct.rtx_def* null, i32 1) #8, !dbg !10960
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !10912, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata i32 49, metadata !10913, metadata !DIExpression()), !dbg !10926
  br label %sw.epilog, !dbg !10962

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 7286, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10963
  br label %sw.epilog, !dbg !10964

sw.epilog:                                        ; preds = %lor.lhs.false, %if.then, %if.then39, %sw.default, %sw.bb18, %sw.bb13, %sw.bb8, %sw.bb3, %sw.bb
  %new_code.1 = phi i32 [ undef, %sw.default ], [ %10, %sw.bb18 ], [ %8, %sw.bb13 ], [ %6, %sw.bb8 ], [ %4, %sw.bb3 ], [ %2, %sw.bb ], [ %12, %lor.lhs.false ], [ 2956, %if.then ], [ %15, %if.then39 ]
  %old_code.1 = phi i32 [ undef, %sw.default ], [ %9, %sw.bb18 ], [ %7, %sw.bb13 ], [ %5, %sw.bb8 ], [ %3, %sw.bb3 ], [ %1, %sw.bb ], [ %11, %lor.lhs.false ], [ 2956, %if.then ], [ %14, %if.then39 ]
  %code.addr.2 = phi i32 [ %code, %sw.default ], [ 64, %sw.bb18 ], [ 61, %sw.bb13 ], [ 63, %sw.bb8 ], [ 62, %sw.bb3 ], [ 49, %sw.bb ], [ 50, %lor.lhs.false ], [ 50, %if.then ], [ 49, %if.then39 ]
  %val.addr.2 = phi %struct.rtx_def* [ %val, %sw.default ], [ %val, %sw.bb18 ], [ %val, %sw.bb13 ], [ %val, %sw.bb8 ], [ %val, %sw.bb3 ], [ %val, %sw.bb ], [ %val, %lor.lhs.false ], [ %val, %if.then ], [ %call, %if.then39 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.2, metadata !10912, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata i32 %code.addr.2, metadata !10913, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata i32 %old_code.1, metadata !10917, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata i32 %new_code.1, metadata !10918, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata i8 0, metadata !10920, metadata !DIExpression()), !dbg !10926
  %tobool = icmp eq i8 %after, 0, !dbg !10965
  br i1 %tobool, label %if.else, label %if.then41, !dbg !10967

if.then41:                                        ; preds = %sw.epilog
  call void @llvm.dbg.value(metadata i32 %new_code.1, metadata !10919, metadata !DIExpression()), !dbg !10926
  %cmp42 = icmp eq i32 %new_code.1, 2956, !dbg !10968
  %cmp44 = icmp ne i32 %old_code.1, 2956, !dbg !10971
  %narrow = and i1 %cmp42, %cmp44, !dbg !10971
  %icode.0 = select i1 %cmp42, i32 %old_code.1, i32 %new_code.1, !dbg !10971
  br label %if.end60, !dbg !10971

if.else:                                          ; preds = %sw.epilog
  call void @llvm.dbg.value(metadata i32 %old_code.1, metadata !10919, metadata !DIExpression()), !dbg !10926
  %cmp48 = icmp eq i32 %old_code.1, 2956, !dbg !10972
  br i1 %cmp48, label %land.lhs.true49, label %if.end60, !dbg !10975

land.lhs.true49:                                  ; preds = %if.else
  switch i32 %code.addr.2, label %if.end60 [
    i32 49, label %if.then55
    i32 50, label %if.then55
    i32 63, label %if.then55
  ], !dbg !10976

if.then55:                                        ; preds = %land.lhs.true49, %land.lhs.true49, %land.lhs.true49
  call void @llvm.dbg.value(metadata i32 %new_code.1, metadata !10919, metadata !DIExpression()), !dbg !10926
  %cmp56 = icmp ne i32 %new_code.1, 2956, !dbg !10977
  call void @llvm.dbg.value(metadata i1 %cmp56, metadata !10920, metadata !DIExpression()), !dbg !10926
  br label %if.end60, !dbg !10980

if.end60:                                         ; preds = %if.else, %if.then55, %land.lhs.true49, %if.then41
  %compensate.4.shrunk = phi i1 [ %narrow, %if.then41 ], [ %cmp56, %if.then55 ], [ false, %if.else ], [ false, %land.lhs.true49 ]
  %icode.2 = phi i32 [ %icode.0, %if.then41 ], [ %new_code.1, %if.then55 ], [ %old_code.1, %if.else ], [ 2956, %land.lhs.true49 ], !dbg !10981
  call void @llvm.dbg.value(metadata i32 %icode.2, metadata !10919, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata i1 %compensate.4.shrunk, metadata !10920, metadata !DIExpression()), !dbg !10926
  %cmp61 = icmp eq i32 %icode.2, 2956, !dbg !10982
  br i1 %cmp61, label %if.end125, label %if.then62, !dbg !10984

if.then62:                                        ; preds = %if.end60
  %tobool63 = icmp eq %struct.rtx_def* %target, null, !dbg !10985
  br i1 %tobool63, label %if.then70, label %lor.lhs.false64, !dbg !10988

lor.lhs.false64:                                  ; preds = %if.then62
  %idxprom65 = zext i32 %icode.2 to i64, !dbg !10989
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom65, i32 3, !dbg !10990
  %16 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !10990
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %16, i64 0, i32 0, !dbg !10991
  %17 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !10991
  %call68 = tail call i32 %17(%struct.rtx_def* nonnull %target, i32 %bf.clear) #6, !dbg !10989
  %tobool69 = icmp eq i32 %call68, 0, !dbg !10989
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !10992

if.then70:                                        ; preds = %lor.lhs.false64, %if.then62
  %call71 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !10993
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call71, metadata !10915, metadata !DIExpression()), !dbg !10926
  br label %if.end72, !dbg !10994

if.end72:                                         ; preds = %lor.lhs.false64, %if.then70
  %target.addr.0 = phi %struct.rtx_def* [ %target, %lor.lhs.false64 ], [ %call71, %if.then70 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !10915, metadata !DIExpression()), !dbg !10926
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %val.addr.2, i64 0, i32 0, !dbg !10995
  %bf.load73 = load i32, i32* %18, align 8, !dbg !10995
  %bf.clear75 = and i32 %bf.load73, 16711680, !dbg !10995
  %cmp76 = icmp eq i32 %bf.clear75, 0, !dbg !10997
  br i1 %cmp76, label %if.end87, label %land.lhs.true77, !dbg !10998

land.lhs.true77:                                  ; preds = %if.end72
  %bf.lshr79 = lshr i32 %bf.load73, 16, !dbg !10999
  %bf.clear80 = and i32 %bf.lshr79, 255, !dbg !10999
  %cmp81 = icmp eq i32 %bf.clear80, %bf.clear, !dbg !11000
  br i1 %cmp81, label %if.end87, label %if.then82, !dbg !11001

if.then82:                                        ; preds = %land.lhs.true77
  %call86 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear, i32 %bf.clear80, %struct.rtx_def* %val.addr.2, i32 1) #6, !dbg !11002
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call86, metadata !10912, metadata !DIExpression()), !dbg !10926
  br label %if.end87, !dbg !11003

if.end87:                                         ; preds = %land.lhs.true77, %if.end72, %if.then82
  %val.addr.3 = phi %struct.rtx_def* [ %call86, %if.then82 ], [ %val.addr.2, %land.lhs.true77 ], [ %val.addr.2, %if.end72 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.3, metadata !10912, metadata !DIExpression()), !dbg !10926
  %idxprom88 = zext i32 %icode.2 to i64, !dbg !11004
  %operand90 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom88, i32 3, !dbg !11006
  %19 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand90, align 8, !dbg !11006
  %predicate92 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %19, i64 2, i32 0, !dbg !11007
  %20 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate92, align 8, !dbg !11007
  %call93 = tail call i32 %20(%struct.rtx_def* %val.addr.3, i32 %bf.clear) #6, !dbg !11004
  %tobool94 = icmp eq i32 %call93, 0, !dbg !11004
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !11008

if.then95:                                        ; preds = %if.end87
  %call96 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %val.addr.3) #6, !dbg !11009
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call96, metadata !10912, metadata !DIExpression()), !dbg !10926
  br label %if.end97, !dbg !11010

if.end97:                                         ; preds = %if.end87, %if.then95
  %val.addr.4 = phi %struct.rtx_def* [ %val.addr.3, %if.end87 ], [ %call96, %if.then95 ], !dbg !11011
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.4, metadata !10912, metadata !DIExpression()), !dbg !10926
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom88, i32 2, !dbg !11012
  %21 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !11012
  %call100 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %21(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %mem, %struct.rtx_def* %val.addr.4) #6, !dbg !11012
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call100, metadata !10921, metadata !DIExpression()), !dbg !10926
  %tobool101 = icmp eq %struct.rtx_def* %call100, null, !dbg !11013
  br i1 %tobool101, label %if.end125, label %if.then102, !dbg !11015

if.then102:                                       ; preds = %if.end97
  %call103 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %call100) #6, !dbg !11016
  br i1 %compensate.4.shrunk, label %if.then105, label %cleanup162, !dbg !11018

if.then105:                                       ; preds = %if.then102
  br i1 %tobool, label %if.then107, label %if.end115, !dbg !11019

if.then107:                                       ; preds = %if.then105
  switch i32 %code.addr.2, label %if.end113 [
    i32 49, label %if.end115
    i32 50, label %if.then112
  ], !dbg !11022

if.then112:                                       ; preds = %if.then107
  call void @llvm.dbg.value(metadata i32 49, metadata !10913, metadata !DIExpression()), !dbg !10926
  br label %if.end113, !dbg !11025

if.end113:                                        ; preds = %if.then107, %if.then112
  %code.addr.3 = phi i32 [ 49, %if.then112 ], [ %code.addr.2, %if.then107 ]
  call void @llvm.dbg.value(metadata i32 %code.addr.3, metadata !10913, metadata !DIExpression()), !dbg !10926
  br label %if.end115

if.end115:                                        ; preds = %if.then105, %if.end113, %if.then107
  %code.addr.5 = phi i32 [ %code.addr.2, %if.then105 ], [ %code.addr.3, %if.end113 ], [ 50, %if.then107 ]
  call void @llvm.dbg.value(metadata i32 %code.addr.5, metadata !10913, metadata !DIExpression()), !dbg !10926
  %cmp116 = icmp eq i32 %code.addr.5, 64, !dbg !11028
  br i1 %cmp116, label %if.then117, label %if.else120, !dbg !11030

if.then117:                                       ; preds = %if.end115
  %call118 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear, i32 61, %struct.rtx_def* %target.addr.0, %struct.rtx_def* %val.addr.4, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !11031
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call118, metadata !10915, metadata !DIExpression()), !dbg !10926
  %call119 = tail call %struct.rtx_def* @expand_simple_unop(i32 %bf.clear, i32 64, %struct.rtx_def* %call118, %struct.rtx_def* null, i32 1) #8, !dbg !11033
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call119, metadata !10915, metadata !DIExpression()), !dbg !10926
  br label %cleanup162, !dbg !11034

if.else120:                                       ; preds = %if.end115
  %call121 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear, i32 %code.addr.5, %struct.rtx_def* %target.addr.0, %struct.rtx_def* %val.addr.4, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !11035
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call121, metadata !10915, metadata !DIExpression()), !dbg !10926
  br label %cleanup162

if.end125:                                        ; preds = %if.end97, %if.end60
  %target.addr.3 = phi %struct.rtx_def* [ %target, %if.end60 ], [ %target.addr.0, %if.end97 ]
  %val.addr.5 = phi %struct.rtx_def* [ %val.addr.2, %if.end60 ], [ %val.addr.4, %if.end97 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.5, metadata !10912, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.3, metadata !10915, metadata !DIExpression()), !dbg !10926
  %idxprom126 = zext i32 %bf.clear to i64, !dbg !11036
  %arrayidx127 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_compare_and_swap, i64 0, i64 %idxprom126, !dbg !11036
  %22 = load i32, i32* %arrayidx127, align 4, !dbg !11036
  %cmp128 = icmp eq i32 %22, 2956, !dbg !11037
  br i1 %cmp128, label %if.end161, label %if.then129, !dbg !11038

if.then129:                                       ; preds = %if.end125
  %call130 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !11039
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call130, metadata !10922, metadata !DIExpression()), !dbg !11040
  %tobool131 = icmp eq %struct.rtx_def* %target.addr.3, null, !dbg !11041
  br i1 %tobool131, label %if.then135, label %lor.lhs.false132, !dbg !11043

lor.lhs.false132:                                 ; preds = %if.then129
  %call133 = tail call i32 @register_operand(%struct.rtx_def* nonnull %target.addr.3, i32 %bf.clear) #6, !dbg !11044
  %tobool134 = icmp eq i32 %call133, 0, !dbg !11044
  br i1 %tobool134, label %if.then135, label %if.end137, !dbg !11045

if.then135:                                       ; preds = %lor.lhs.false132, %if.then129
  %call136 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !11046
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call136, metadata !10915, metadata !DIExpression()), !dbg !10926
  br label %if.end137, !dbg !11047

if.end137:                                        ; preds = %lor.lhs.false132, %if.then135
  %target.addr.4 = phi %struct.rtx_def* [ %target.addr.3, %lor.lhs.false132 ], [ %call136, %if.then135 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.4, metadata !10915, metadata !DIExpression()), !dbg !10926
  tail call void @start_sequence() #6, !dbg !11048
  br i1 %tobool, label %if.then139, label %if.end141, !dbg !11049

if.then139:                                       ; preds = %if.end137
  %call140 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.4, %struct.rtx_def* %call130) #6, !dbg !11050
  br label %if.end141, !dbg !11050

if.end141:                                        ; preds = %if.end137, %if.then139
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call130, metadata !10925, metadata !DIExpression()), !dbg !11040
  %cmp142 = icmp eq i32 %code.addr.2, 64, !dbg !11052
  br i1 %cmp142, label %if.then143, label %if.else146, !dbg !11054

if.then143:                                       ; preds = %if.end141
  %call144 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear, i32 61, %struct.rtx_def* %call130, %struct.rtx_def* %val.addr.5, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !11055
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call144, metadata !10925, metadata !DIExpression()), !dbg !11040
  %call145 = tail call %struct.rtx_def* @expand_simple_unop(i32 %bf.clear, i32 64, %struct.rtx_def* %call144, %struct.rtx_def* null, i32 1) #8, !dbg !11057
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call145, metadata !10925, metadata !DIExpression()), !dbg !11040
  br label %if.end148, !dbg !11058

if.else146:                                       ; preds = %if.end141
  %call147 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear, i32 %code.addr.2, %struct.rtx_def* %call130, %struct.rtx_def* %val.addr.5, %struct.rtx_def* null, i32 1, i32 3) #8, !dbg !11059
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call147, metadata !10925, metadata !DIExpression()), !dbg !11040
  br label %if.end148

if.end148:                                        ; preds = %if.else146, %if.then143
  %t1.0 = phi %struct.rtx_def* [ %call145, %if.then143 ], [ %call147, %if.else146 ], !dbg !11060
  call void @llvm.dbg.value(metadata %struct.rtx_def* %t1.0, metadata !10925, metadata !DIExpression()), !dbg !11040
  br i1 %tobool, label %if.end152, label %if.then150, !dbg !11061

if.then150:                                       ; preds = %if.end148
  %call151 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.4, %struct.rtx_def* %t1.0) #6, !dbg !11062
  br label %if.end152, !dbg !11062

if.end152:                                        ; preds = %if.end148, %if.then150
  %call153 = tail call %struct.rtx_def* @get_insns() #6, !dbg !11064
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call153, metadata !10921, metadata !DIExpression()), !dbg !10926
  tail call void @end_sequence() #6, !dbg !11065
  %cmp154 = icmp eq %struct.rtx_def* %t1.0, null, !dbg !11066
  br i1 %cmp154, label %if.end159, label %land.lhs.true155, !dbg !11068

land.lhs.true155:                                 ; preds = %if.end152
  %call156 = tail call fastcc zeroext i8 @expand_compare_and_swap_loop(%struct.rtx_def* %mem, %struct.rtx_def* %call130, %struct.rtx_def* nonnull %t1.0, %struct.rtx_def* %call153) #8, !dbg !11069
  %tobool157 = icmp eq i8 %call156, 0, !dbg !11069
  br i1 %tobool157, label %if.end159, label %cleanup, !dbg !11070

if.end159:                                        ; preds = %land.lhs.true155, %if.end152
  br label %cleanup, !dbg !11071

cleanup:                                          ; preds = %land.lhs.true155, %if.end159
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end159 ], [ false, %land.lhs.true155 ]
  br i1 %cleanup.dest.slot.0, label %if.end161, label %cleanup162

if.end161:                                        ; preds = %if.end125, %cleanup
  br label %cleanup162, !dbg !11072

cleanup162:                                       ; preds = %if.then102, %if.else120, %if.then117, %cleanup, %if.end161
  %retval.1 = phi %struct.rtx_def* [ %target.addr.4, %cleanup ], [ null, %if.end161 ], [ %target.addr.0, %if.then102 ], [ %call119, %if.then117 ], [ %call121, %if.else120 ], !dbg !10926
  ret %struct.rtx_def* %retval.1, !dbg !11073
}

declare dso_local i32 @register_operand(%struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_sync_lock_test_and_set(%struct.rtx_def* %mem, %struct.rtx_def* %val, %struct.rtx_def* %target) local_unnamed_addr #4 !dbg !11074 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !11076, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val, metadata !11077, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !11078, metadata !DIExpression()), !dbg !11082
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !11083
  %bf.load = load i32, i32* %0, align 8, !dbg !11083
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !11083
  %bf.clear = and i32 %bf.lshr, 255, !dbg !11083
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !11079, metadata !DIExpression()), !dbg !11082
  %idxprom = zext i32 %bf.clear to i64, !dbg !11084
  %arrayidx = getelementptr inbounds [87 x i32], [87 x i32]* @sync_lock_test_and_set, i64 0, i64 %idxprom, !dbg !11084
  %1 = load i32, i32* %arrayidx, align 4, !dbg !11084
  call void @llvm.dbg.value(metadata i32 %1, metadata !11080, metadata !DIExpression()), !dbg !11082
  %cmp = icmp eq i32 %1, 2956, !dbg !11085
  br i1 %cmp, label %if.end38, label %if.then, !dbg !11087

if.then:                                          ; preds = %entry
  %tobool = icmp eq %struct.rtx_def* %target, null, !dbg !11088
  br i1 %tobool, label %if.then5, label %lor.lhs.false, !dbg !11091

lor.lhs.false:                                    ; preds = %if.then
  %idxprom1 = zext i32 %1 to i64, !dbg !11092
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 3, !dbg !11093
  %2 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !11093
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 0, !dbg !11094
  %3 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !11094
  %call = tail call i32 %3(%struct.rtx_def* nonnull %target, i32 %bf.clear) #6, !dbg !11092
  %tobool4 = icmp eq i32 %call, 0, !dbg !11092
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !11095

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %call6 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !11096
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !11078, metadata !DIExpression()), !dbg !11082
  br label %if.end, !dbg !11097

if.end:                                           ; preds = %lor.lhs.false, %if.then5
  %target.addr.0 = phi %struct.rtx_def* [ %target, %lor.lhs.false ], [ %call6, %if.then5 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !11078, metadata !DIExpression()), !dbg !11082
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %val, i64 0, i32 0, !dbg !11098
  %bf.load7 = load i32, i32* %4, align 8, !dbg !11098
  %bf.clear9 = and i32 %bf.load7, 16711680, !dbg !11098
  %cmp10 = icmp eq i32 %bf.clear9, 0, !dbg !11100
  br i1 %cmp10, label %if.end20, label %land.lhs.true, !dbg !11101

land.lhs.true:                                    ; preds = %if.end
  %bf.lshr12 = lshr i32 %bf.load7, 16, !dbg !11102
  %bf.clear13 = and i32 %bf.lshr12, 255, !dbg !11102
  %cmp14 = icmp eq i32 %bf.clear13, %bf.clear, !dbg !11103
  br i1 %cmp14, label %if.end20, label %if.then15, !dbg !11104

if.then15:                                        ; preds = %land.lhs.true
  %call19 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear, i32 %bf.clear13, %struct.rtx_def* %val, i32 1) #6, !dbg !11105
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !11077, metadata !DIExpression()), !dbg !11082
  br label %if.end20, !dbg !11106

if.end20:                                         ; preds = %land.lhs.true, %if.end, %if.then15
  %val.addr.0 = phi %struct.rtx_def* [ %call19, %if.then15 ], [ %val, %land.lhs.true ], [ %val, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.0, metadata !11077, metadata !DIExpression()), !dbg !11082
  %idxprom21 = zext i32 %1 to i64, !dbg !11107
  %operand23 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom21, i32 3, !dbg !11109
  %5 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand23, align 8, !dbg !11109
  %predicate25 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %5, i64 2, i32 0, !dbg !11110
  %6 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate25, align 8, !dbg !11110
  %call26 = tail call i32 %6(%struct.rtx_def* %val.addr.0, i32 %bf.clear) #6, !dbg !11107
  %tobool27 = icmp eq i32 %call26, 0, !dbg !11107
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !11111

if.then28:                                        ; preds = %if.end20
  %call29 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %val.addr.0) #6, !dbg !11112
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call29, metadata !11077, metadata !DIExpression()), !dbg !11082
  br label %if.end30, !dbg !11113

if.end30:                                         ; preds = %if.end20, %if.then28
  %val.addr.1 = phi %struct.rtx_def* [ %val.addr.0, %if.end20 ], [ %call29, %if.then28 ], !dbg !11114
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.1, metadata !11077, metadata !DIExpression()), !dbg !11082
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom21, i32 2, !dbg !11115
  %7 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !11115
  %call33 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %7(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %mem, %struct.rtx_def* %val.addr.1) #6, !dbg !11115
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call33, metadata !11081, metadata !DIExpression()), !dbg !11082
  %tobool34 = icmp eq %struct.rtx_def* %call33, null, !dbg !11116
  br i1 %tobool34, label %if.end38, label %if.then35, !dbg !11118

if.then35:                                        ; preds = %if.end30
  %call36 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %call33) #6, !dbg !11119
  br label %cleanup, !dbg !11121

if.end38:                                         ; preds = %if.end30, %entry
  %target.addr.1 = phi %struct.rtx_def* [ %target, %entry ], [ %target.addr.0, %if.end30 ]
  %val.addr.2 = phi %struct.rtx_def* [ %val, %entry ], [ %val.addr.1, %if.end30 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.2, metadata !11077, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.1, metadata !11078, metadata !DIExpression()), !dbg !11082
  %arrayidx40 = getelementptr inbounds [87 x i32], [87 x i32]* @sync_compare_and_swap, i64 0, i64 %idxprom, !dbg !11122
  %8 = load i32, i32* %arrayidx40, align 4, !dbg !11122
  %cmp41 = icmp eq i32 %8, 2956, !dbg !11124
  br i1 %cmp41, label %if.end69, label %if.then42, !dbg !11125

if.then42:                                        ; preds = %if.end38
  %tobool43 = icmp eq %struct.rtx_def* %target.addr.1, null, !dbg !11126
  br i1 %tobool43, label %if.then47, label %lor.lhs.false44, !dbg !11129

lor.lhs.false44:                                  ; preds = %if.then42
  %call45 = tail call i32 @register_operand(%struct.rtx_def* nonnull %target.addr.1, i32 %bf.clear) #6, !dbg !11130
  %tobool46 = icmp eq i32 %call45, 0, !dbg !11130
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !11131

if.then47:                                        ; preds = %lor.lhs.false44, %if.then42
  %call48 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !11132
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call48, metadata !11078, metadata !DIExpression()), !dbg !11082
  br label %if.end49, !dbg !11133

if.end49:                                         ; preds = %lor.lhs.false44, %if.then47
  %target.addr.2 = phi %struct.rtx_def* [ %target.addr.1, %lor.lhs.false44 ], [ %call48, %if.then47 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.2, metadata !11078, metadata !DIExpression()), !dbg !11082
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %val.addr.2, i64 0, i32 0, !dbg !11134
  %bf.load50 = load i32, i32* %9, align 8, !dbg !11134
  %bf.clear52 = and i32 %bf.load50, 16711680, !dbg !11134
  %cmp53 = icmp eq i32 %bf.clear52, 0, !dbg !11136
  br i1 %cmp53, label %if.end64, label %land.lhs.true54, !dbg !11137

land.lhs.true54:                                  ; preds = %if.end49
  %bf.lshr56 = lshr i32 %bf.load50, 16, !dbg !11138
  %bf.clear57 = and i32 %bf.lshr56, 255, !dbg !11138
  %cmp58 = icmp eq i32 %bf.clear57, %bf.clear, !dbg !11139
  br i1 %cmp58, label %if.end64, label %if.then59, !dbg !11140

if.then59:                                        ; preds = %land.lhs.true54
  %call63 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear, i32 %bf.clear57, %struct.rtx_def* %val.addr.2, i32 1) #6, !dbg !11141
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call63, metadata !11077, metadata !DIExpression()), !dbg !11082
  br label %if.end64, !dbg !11142

if.end64:                                         ; preds = %land.lhs.true54, %if.end49, %if.then59
  %val.addr.3 = phi %struct.rtx_def* [ %call63, %if.then59 ], [ %val.addr.2, %land.lhs.true54 ], [ %val.addr.2, %if.end49 ], !dbg !11082
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.3, metadata !11077, metadata !DIExpression()), !dbg !11082
  %call65 = tail call fastcc zeroext i8 @expand_compare_and_swap_loop(%struct.rtx_def* %mem, %struct.rtx_def* %target.addr.2, %struct.rtx_def* %val.addr.3, %struct.rtx_def* null) #8, !dbg !11143
  %tobool66 = icmp eq i8 %call65, 0, !dbg !11143
  br i1 %tobool66, label %if.end69, label %cleanup, !dbg !11145

if.end69:                                         ; preds = %if.end64, %if.end38
  br label %cleanup, !dbg !11146

cleanup:                                          ; preds = %if.end64, %if.end69, %if.then35
  %retval.0 = phi %struct.rtx_def* [ %target.addr.0, %if.then35 ], [ null, %if.end69 ], [ %target.addr.2, %if.end64 ], !dbg !11082
  ret %struct.rtx_def* %retval.0, !dbg !11147
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_libfunc_entry(i8* %x_p) local_unnamed_addr #4 !dbg !11148 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11150, metadata !DIExpression()), !dbg !11153
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11151, metadata !DIExpression()), !dbg !11153
  %cmp = icmp ne i8* %x_p, null, !dbg !11154
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !11154
  %or.cond = and i1 %cmp, %cmp1, !dbg !11154
  br i1 %or.cond, label %land.lhs.true2, label %if.end6, !dbg !11154

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !11154
  %tobool = icmp eq i32 %call, 0, !dbg !11154
  br i1 %tobool, label %do.body, label %if.end6, !dbg !11156

do.body:                                          ; preds = %land.lhs.true2
  %libfunc = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !11157
  %0 = bitcast i8* %libfunc to %struct.rtx_def**, !dbg !11157
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !11157
  %cmp3 = icmp eq %struct.rtx_def* %1, null, !dbg !11157
  br i1 %cmp3, label %if.end6, label %if.then4, !dbg !11161

if.then4:                                         ; preds = %do.body
  %2 = bitcast %struct.rtx_def* %1 to i8*, !dbg !11161
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %2) #6, !dbg !11157
  br label %if.end6, !dbg !11157

if.end6:                                          ; preds = %do.body, %land.lhs.true2, %if.then4, %entry
  ret void, !dbg !11162
}

declare dso_local i32 @ggc_set_mark(i8*) local_unnamed_addr #1

declare dso_local void @gt_ggc_mx_rtx_def(i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_m_P13libfunc_entry4htab(i8* %x_p) #4 !dbg !11163 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11165, metadata !DIExpression()), !dbg !11176
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11166, metadata !DIExpression()), !dbg !11176
  %cmp = icmp ne i8* %x_p, null, !dbg !11177
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !11177
  %or.cond = and i1 %cmp, %cmp1, !dbg !11177
  br i1 %or.cond, label %land.lhs.true2, label %if.end22, !dbg !11177

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !11177
  %tobool = icmp eq i32 %call, 0, !dbg !11177
  br i1 %tobool, label %if.then, label %if.end22, !dbg !11178

if.then:                                          ; preds = %land.lhs.true2
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !11179
  %0 = bitcast i8* %entries to i8***, !dbg !11179
  %1 = load i8**, i8*** %0, align 8, !dbg !11179
  %cmp3 = icmp eq i8** %1, null, !dbg !11180
  br i1 %cmp3, label %if.end22, label %for.cond.preheader, !dbg !11181

for.cond.preheader:                               ; preds = %if.then
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !11182
  %2 = bitcast i8* %size to i64*, !dbg !11182
  br label %for.cond, !dbg !11185

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ]
  %3 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ], !dbg !11186
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !11187
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !11168, metadata !DIExpression()), !dbg !11186
  %4 = load i64, i64* %2, align 8, !dbg !11188
  %cmp5 = icmp eq i64 %i0.0, %4, !dbg !11189
  br i1 %cmp5, label %do.body11, label %do.body, !dbg !11185

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %i0.0, !dbg !11190
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !11190
  %cmp7 = icmp eq i8* %5, null, !dbg !11190
  br i1 %cmp7, label %for.inc, label %if.then8, !dbg !11194

if.then8:                                         ; preds = %do.body
  tail call void @gt_ggc_mx_libfunc_entry(i8* nonnull %5) #8, !dbg !11190
  %.pre.pre = load i8**, i8*** %0, align 8, !dbg !11186
  br label %for.inc, !dbg !11190

for.inc:                                          ; preds = %do.body, %if.then8
  %.pre = phi i8** [ %.pre1, %do.body ], [ %.pre.pre, %if.then8 ], !dbg !11186
  %inc = add i64 %i0.0, 1, !dbg !11195
  call void @llvm.dbg.value(metadata i64 %inc, metadata !11168, metadata !DIExpression()), !dbg !11186
  br label %for.cond, !dbg !11196, !llvm.loop !11197

do.body11:                                        ; preds = %for.cond
  %.lcssa = phi i8** [ %3, %for.cond ], !dbg !11186
  call void @llvm.dbg.value(metadata i8** %.lcssa, metadata !11173, metadata !DIExpression()), !dbg !11199
  %switch = icmp ult i8** %.lcssa, inttoptr (i64 2 to i8**), !dbg !11200
  br i1 %switch, label %if.end22, label %if.then16, !dbg !11200

if.then16:                                        ; preds = %do.body11
  %6 = bitcast i8** %.lcssa to i8*, !dbg !11202
  call void @llvm.dbg.value(metadata i8* %6, metadata !11173, metadata !DIExpression()), !dbg !11199
  %call17 = tail call i32 @ggc_set_mark(i8* %6) #6, !dbg !11200
  br label %if.end22, !dbg !11200

if.end22:                                         ; preds = %if.then, %land.lhs.true2, %do.body11, %if.then16, %entry
  ret void, !dbg !11203
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_libfunc_entry(i8* %x_p) local_unnamed_addr #4 !dbg !11204 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11206, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11207, metadata !DIExpression()), !dbg !11208
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_13libfunc_entry, i32 62) #6, !dbg !11209
  %tobool = icmp eq i32 %call, 0, !dbg !11209
  br i1 %tobool, label %if.end3, label %do.body, !dbg !11211

do.body:                                          ; preds = %entry
  %libfunc = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !11212
  %0 = bitcast i8* %libfunc to %struct.rtx_def**, !dbg !11212
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !11212
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !11212
  br i1 %cmp, label %if.end3, label %if.then1, !dbg !11216

if.then1:                                         ; preds = %do.body
  %2 = bitcast %struct.rtx_def* %1 to i8*, !dbg !11216
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %2) #6, !dbg !11212
  br label %if.end3, !dbg !11212

if.end3:                                          ; preds = %do.body, %entry, %if.then1
  ret void, !dbg !11217
}

declare dso_local i32 @gt_pch_note_object(i8*, i8*, void (i8*, i8*, void (i8*, i8*)*, i8*)*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_13libfunc_entry(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #4 !dbg !11218 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !11223, metadata !DIExpression()), !dbg !11228
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11224, metadata !DIExpression()), !dbg !11228
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !11225, metadata !DIExpression()), !dbg !11228
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !11226, metadata !DIExpression()), !dbg !11228
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11227, metadata !DIExpression()), !dbg !11228
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !11229
  br i1 %cmp, label %if.then, label %if.end, !dbg !11231

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11227, metadata !DIExpression()), !dbg !11228
  %libfunc = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !11232
  tail call void %op(i8* nonnull %libfunc, i8* %cookie) #6, !dbg !11233
  br label %if.end, !dbg !11233

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11234
}

declare dso_local void @gt_pch_nx_rtx_def(i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_n_P13libfunc_entry4htab(i8* %x_p) #4 !dbg !11235 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11237, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11238, metadata !DIExpression()), !dbg !11244
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_P13libfunc_entry4htab, i32 198) #6, !dbg !11245
  %tobool = icmp eq i32 %call, 0, !dbg !11245
  br i1 %tobool, label %if.end11, label %if.then, !dbg !11246

if.then:                                          ; preds = %entry
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !11247
  %0 = bitcast i8* %entries to i8***, !dbg !11247
  %1 = load i8**, i8*** %0, align 8, !dbg !11247
  %cmp = icmp eq i8** %1, null, !dbg !11248
  br i1 %cmp, label %if.end11, label %for.cond.preheader, !dbg !11249

for.cond.preheader:                               ; preds = %if.then
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !11250
  %2 = bitcast i8* %size to i64*, !dbg !11250
  br label %for.cond, !dbg !11253

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ]
  %3 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ], !dbg !11254
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !11255
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !11239, metadata !DIExpression()), !dbg !11254
  %4 = load i64, i64* %2, align 8, !dbg !11256
  %cmp2 = icmp eq i64 %i0.0, %4, !dbg !11257
  br i1 %cmp2, label %for.end, label %do.body, !dbg !11253

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %i0.0, !dbg !11258
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !11258
  %cmp4 = icmp eq i8* %5, null, !dbg !11258
  br i1 %cmp4, label %for.inc, label %if.then5, !dbg !11262

if.then5:                                         ; preds = %do.body
  tail call void @gt_pch_nx_libfunc_entry(i8* nonnull %5) #8, !dbg !11258
  %.pre.pre = load i8**, i8*** %0, align 8, !dbg !11254
  br label %for.inc, !dbg !11258

for.inc:                                          ; preds = %do.body, %if.then5
  %.pre = phi i8** [ %.pre1, %do.body ], [ %.pre.pre, %if.then5 ], !dbg !11254
  %inc = add i64 %i0.0, 1, !dbg !11263
  call void @llvm.dbg.value(metadata i64 %inc, metadata !11239, metadata !DIExpression()), !dbg !11254
  br label %for.cond, !dbg !11264, !llvm.loop !11265

for.end:                                          ; preds = %for.cond
  %.lcssa = phi i8** [ %3, %for.cond ], !dbg !11254
  %6 = bitcast i8** %.lcssa to i8*, !dbg !11267
  %call9 = tail call i32 @gt_pch_note_object(i8* %6, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_P13libfunc_entry4htab, i32 217) #6, !dbg !11268
  br label %if.end11, !dbg !11269

if.end11:                                         ; preds = %if.then, %entry, %for.end
  ret void, !dbg !11270
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_P13libfunc_entry4htab(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #4 !dbg !11271 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !11273, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11274, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !11275, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !11276, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11277, metadata !DIExpression()), !dbg !11281
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !11282
  %0 = bitcast i8* %entries to i8***, !dbg !11282
  %1 = load i8**, i8*** %0, align 8, !dbg !11282
  %cmp = icmp eq i8** %1, null, !dbg !11283
  br i1 %cmp, label %if.end10, label %for.cond.preheader, !dbg !11284

for.cond.preheader:                               ; preds = %entry
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !11285
  %2 = bitcast i8* %size to i64*, !dbg !11285
  %3 = bitcast i8* %entries to i8**, !dbg !11288
  br label %for.cond, !dbg !11291

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !11292
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !11278, metadata !DIExpression()), !dbg !11293
  %4 = load i64, i64* %2, align 8, !dbg !11294
  %cmp1 = icmp eq i64 %i0.0, %4, !dbg !11295
  br i1 %cmp1, label %for.end, label %for.body, !dbg !11291

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %3, align 8, !dbg !11296
  %cmp3 = icmp eq i8* %5, %this_obj, !dbg !11297
  br i1 %cmp3, label %if.then4, label %for.inc, !dbg !11298

if.then4:                                         ; preds = %for.body
  %6 = bitcast i8* %5 to i8**, !dbg !11298
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %i0.0, !dbg !11299
  %7 = bitcast i8** %arrayidx to i8*, !dbg !11300
  tail call void %op(i8* %7, i8* %cookie) #6, !dbg !11301
  br label %for.inc, !dbg !11301

for.inc:                                          ; preds = %for.body, %if.then4
  %inc = add i64 %i0.0, 1, !dbg !11302
  call void @llvm.dbg.value(metadata i64 %inc, metadata !11278, metadata !DIExpression()), !dbg !11293
  br label %for.cond, !dbg !11303, !llvm.loop !11304

for.end:                                          ; preds = %for.cond
  %cmp6 = icmp eq i8* %x_p, %this_obj, !dbg !11306
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !11308

if.then7:                                         ; preds = %for.end
  tail call void %op(i8* nonnull %entries, i8* %cookie) #6, !dbg !11309
  br label %if.end10, !dbg !11309

if.end10:                                         ; preds = %entry, %for.end, %if.then7
  ret void, !dbg !11310
}

declare dso_local void @gt_ggc_m_P9tree_node4htab(i8*) #1

declare dso_local void @gt_pch_n_P9tree_node4htab(i8*) #1

declare dso_local %struct.rtx_def* @simplify_binary_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_expr_real(%union.tree_node*, %struct.rtx_def*, i32, i32, %struct.rtx_def**) local_unnamed_addr #1

declare dso_local i32 @rtx_cost(%struct.rtx_def*, i32, i8 zeroext) local_unnamed_addr #1

declare dso_local i64 @trunc_int_for_mode(i64, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local i32 @commutative_operand_precedence(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @immed_double_const(i64, i64, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_relational_operation(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @expand_superword_shift(%struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %superword_op1, %struct.rtx_def* %outof_target, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods) unnamed_addr #4 !dbg !11311 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !11315, metadata !DIExpression()), !dbg !11322
  call void @llvm.dbg.value(metadata %struct.rtx_def* %outof_input, metadata !11316, metadata !DIExpression()), !dbg !11322
  call void @llvm.dbg.value(metadata %struct.rtx_def* %superword_op1, metadata !11317, metadata !DIExpression()), !dbg !11322
  call void @llvm.dbg.value(metadata %struct.rtx_def* %outof_target, metadata !11318, metadata !DIExpression()), !dbg !11322
  call void @llvm.dbg.value(metadata %struct.rtx_def* %into_target, metadata !11319, metadata !DIExpression()), !dbg !11322
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !11320, metadata !DIExpression()), !dbg !11322
  call void @llvm.dbg.value(metadata i32 %methods, metadata !11321, metadata !DIExpression()), !dbg !11322
  %cmp = icmp eq %struct.rtx_def* %into_target, null, !dbg !11323
  br i1 %cmp, label %if.end2, label %if.then, !dbg !11325

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @word_mode, align 4, !dbg !11326
  %call = tail call zeroext i8 @force_expand_binop(i32 %0, %struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %superword_op1, %struct.rtx_def* nonnull %into_target, i32 %unsignedp, i32 %methods) #8, !dbg !11328
  %tobool = icmp eq i8 %call, 0, !dbg !11328
  br i1 %tobool, label %return, label %if.end2, !dbg !11329

if.end2:                                          ; preds = %if.then, %entry
  %cmp3 = icmp eq %struct.rtx_def* %outof_target, null, !dbg !11330
  br i1 %cmp3, label %if.end14, label %if.then4, !dbg !11332

if.then4:                                         ; preds = %if.end2
  %cmp5 = icmp eq %struct.optab_d* %binoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 46), !dbg !11333
  %1 = load i32, i32* @word_mode, align 4, !dbg !11336
  br i1 %cmp5, label %if.else, label %if.then6, !dbg !11337

if.then6:                                         ; preds = %if.then4
  %idxprom = sext i32 %1 to i64, !dbg !11338
  %arrayidx = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom, !dbg !11338
  %2 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !11338
  %call7 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %outof_target, %struct.rtx_def* %2) #6, !dbg !11339
  br label %if.end14, !dbg !11339

if.else:                                          ; preds = %if.then4
  %call8 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 31) #6, !dbg !11340
  %call9 = tail call zeroext i8 @force_expand_binop(i32 %1, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 46), %struct.rtx_def* %outof_input, %struct.rtx_def* %call8, %struct.rtx_def* nonnull %outof_target, i32 %unsignedp, i32 %methods) #8, !dbg !11342
  %tobool10 = icmp eq i8 %call9, 0, !dbg !11342
  br i1 %tobool10, label %return, label %if.end14, !dbg !11343

if.end14:                                         ; preds = %if.else, %if.end2, %if.then6
  br label %return, !dbg !11344

return:                                           ; preds = %if.then, %if.else, %if.end14
  %retval.0 = phi i8 [ 1, %if.end14 ], [ 0, %if.then ], [ 0, %if.else ], !dbg !11322
  ret i8 %retval.0, !dbg !11345
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @expand_subword_shift(i32 %op1_mode, %struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %into_input, %struct.rtx_def* %op1, %struct.rtx_def* %outof_target, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods, i64 %shift_mask) unnamed_addr #4 !dbg !11346 {
entry:
  call void @llvm.dbg.value(metadata i32 %op1_mode, metadata !11348, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !11349, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.value(metadata %struct.rtx_def* %outof_input, metadata !11350, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.value(metadata %struct.rtx_def* %into_input, metadata !11351, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !11352, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.value(metadata %struct.rtx_def* %outof_target, metadata !11353, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.value(metadata %struct.rtx_def* %into_target, metadata !11354, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !11355, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.value(metadata i32 %methods, metadata !11356, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.value(metadata i64 %shift_mask, metadata !11357, metadata !DIExpression()), !dbg !11362
  %cmp = icmp eq %struct.optab_d* %binoptab, getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), !dbg !11363
  %cond = select i1 %cmp, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), !dbg !11364
  call void @llvm.dbg.value(metadata %struct.optab_d* %cond, metadata !11358, metadata !DIExpression()), !dbg !11362
  %cond2 = select i1 %cmp, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45), !dbg !11365
  call void @llvm.dbg.value(metadata %struct.optab_d* %cond2, metadata !11359, metadata !DIExpression()), !dbg !11362
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1, i64 0, i32 0, !dbg !11366
  %bf.load = load i32, i32* %0, align 8, !dbg !11366
  %bf.clear = and i32 %bf.load, 65535, !dbg !11366
  %idxprom = zext i32 %bf.clear to i64, !dbg !11366
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !11366
  %1 = load i32, i32* %arrayidx, align 4, !dbg !11366
  %cmp3 = icmp eq i32 %1, 9, !dbg !11366
  %cmp4 = icmp ugt i64 %shift_mask, 31, !dbg !11368
  %or.cond = or i1 %cmp3, %cmp4, !dbg !11369
  br i1 %or.cond, label %if.then, label %if.else, !dbg !11369

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def* %outof_input, metadata !11361, metadata !DIExpression()), !dbg !11362
  %call = tail call %struct.rtx_def* @immed_double_const(i64 32, i64 0, i32 %op1_mode) #6, !dbg !11370
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !11360, metadata !DIExpression()), !dbg !11362
  %call5 = tail call fastcc %struct.rtx_def* @simplify_expand_binop(i32 %op1_mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.rtx_def* %call, %struct.rtx_def* %op1, %struct.rtx_def* null, i32 1, i32 %methods) #8, !dbg !11372
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !11360, metadata !DIExpression()), !dbg !11362
  br label %if.end14, !dbg !11373

if.else:                                          ; preds = %entry
  %2 = load i32, i32* @word_mode, align 4, !dbg !11374
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !11376
  %call6 = tail call %struct.rtx_def* @expand_binop(i32 %2, %struct.optab_d* %cond, %struct.rtx_def* %outof_input, %struct.rtx_def* %3, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8, !dbg !11377
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !11361, metadata !DIExpression()), !dbg !11362
  %cmp7 = icmp eq i64 %shift_mask, 31, !dbg !11378
  br i1 %cmp7, label %if.then8, label %if.else11, !dbg !11380

if.then8:                                         ; preds = %if.else
  %call9 = tail call %struct.rtx_def* @immed_double_const(i64 -1, i64 -1, i32 %op1_mode) #6, !dbg !11381
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call9, metadata !11360, metadata !DIExpression()), !dbg !11362
  %call10 = tail call fastcc %struct.rtx_def* @simplify_expand_binop(i32 %op1_mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), %struct.rtx_def* %op1, %struct.rtx_def* %call9, %struct.rtx_def* null, i32 1, i32 %methods) #8, !dbg !11383
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !11360, metadata !DIExpression()), !dbg !11362
  br label %if.end14, !dbg !11384

if.else11:                                        ; preds = %if.else
  %call12 = tail call %struct.rtx_def* @immed_double_const(i64 31, i64 0, i32 %op1_mode) #6, !dbg !11385
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call12, metadata !11360, metadata !DIExpression()), !dbg !11362
  %call13 = tail call fastcc %struct.rtx_def* @simplify_expand_binop(i32 %op1_mode, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.rtx_def* %call12, %struct.rtx_def* %op1, %struct.rtx_def* null, i32 1, i32 %methods) #8, !dbg !11387
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !11360, metadata !DIExpression()), !dbg !11362
  br label %if.end14

if.end14:                                         ; preds = %if.then8, %if.else11, %if.then
  %tmp.1 = phi %struct.rtx_def* [ %call5, %if.then ], [ %call10, %if.then8 ], [ %call13, %if.else11 ], !dbg !11388
  %carries.0 = phi %struct.rtx_def* [ %outof_input, %if.then ], [ %call6, %if.then8 ], [ %call6, %if.else11 ], !dbg !11388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %carries.0, metadata !11361, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.1, metadata !11360, metadata !DIExpression()), !dbg !11362
  %cmp15 = icmp eq %struct.rtx_def* %tmp.1, null, !dbg !11389
  %cmp17 = icmp eq %struct.rtx_def* %carries.0, null, !dbg !11391
  %or.cond1 = or i1 %cmp15, %cmp17, !dbg !11392
  br i1 %or.cond1, label %cleanup, label %if.end19, !dbg !11392

if.end19:                                         ; preds = %if.end14
  %4 = load i32, i32* @word_mode, align 4, !dbg !11393
  %call20 = tail call %struct.rtx_def* @expand_binop(i32 %4, %struct.optab_d* %cond, %struct.rtx_def* %carries.0, %struct.rtx_def* %tmp.1, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8, !dbg !11394
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call20, metadata !11361, metadata !DIExpression()), !dbg !11362
  %cmp21 = icmp eq %struct.rtx_def* %call20, null, !dbg !11395
  br i1 %cmp21, label %cleanup, label %if.end23, !dbg !11397

if.end23:                                         ; preds = %if.end19
  %5 = load i32, i32* @word_mode, align 4, !dbg !11398
  %call24 = tail call %struct.rtx_def* @expand_binop(i32 %5, %struct.optab_d* %cond2, %struct.rtx_def* %into_input, %struct.rtx_def* %op1, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods) #8, !dbg !11399
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !11360, metadata !DIExpression()), !dbg !11362
  %cmp25 = icmp eq %struct.rtx_def* %call24, null, !dbg !11400
  br i1 %cmp25, label %cleanup, label %if.end27, !dbg !11402

if.end27:                                         ; preds = %if.end23
  %6 = load i32, i32* @word_mode, align 4, !dbg !11403
  %call28 = tail call zeroext i8 @force_expand_binop(i32 %6, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), %struct.rtx_def* nonnull %call24, %struct.rtx_def* nonnull %call20, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods) #8, !dbg !11405
  %tobool = icmp eq i8 %call28, 0, !dbg !11405
  br i1 %tobool, label %cleanup, label %if.end30, !dbg !11406

if.end30:                                         ; preds = %if.end27
  %cmp31 = icmp eq %struct.rtx_def* %outof_target, null, !dbg !11407
  br i1 %cmp31, label %if.end37, label %if.then32, !dbg !11409

if.then32:                                        ; preds = %if.end30
  %7 = load i32, i32* @word_mode, align 4, !dbg !11410
  %call33 = tail call zeroext i8 @force_expand_binop(i32 %7, %struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %op1, %struct.rtx_def* nonnull %outof_target, i32 %unsignedp, i32 %methods) #8, !dbg !11412
  %tobool34 = icmp eq i8 %call33, 0, !dbg !11412
  br i1 %tobool34, label %cleanup, label %if.end37, !dbg !11413

if.end37:                                         ; preds = %if.then32, %if.end30
  br label %cleanup, !dbg !11414

cleanup:                                          ; preds = %if.then32, %if.end27, %if.end23, %if.end19, %if.end14, %if.end37
  %retval.0 = phi i8 [ 1, %if.end37 ], [ 0, %if.end14 ], [ 0, %if.end19 ], [ 0, %if.end23 ], [ 0, %if.end27 ], [ 0, %if.then32 ], !dbg !11362
  ret i8 %retval.0, !dbg !11415
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @expand_doubleword_shift_condmove(i32 %op1_mode, %struct.optab_d* %binoptab, i32 %cmp_code, %struct.rtx_def* %cmp1, %struct.rtx_def* %cmp2, %struct.rtx_def* %outof_input, %struct.rtx_def* %into_input, %struct.rtx_def* %subword_op1, %struct.rtx_def* %superword_op1, %struct.rtx_def* %outof_target, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods, i64 %shift_mask) unnamed_addr #4 !dbg !11416 {
entry:
  call void @llvm.dbg.value(metadata i32 %op1_mode, metadata !11420, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata %struct.optab_d* %binoptab, metadata !11421, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata i32 %cmp_code, metadata !11422, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cmp1, metadata !11423, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cmp2, metadata !11424, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %outof_input, metadata !11425, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %into_input, metadata !11426, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %subword_op1, metadata !11427, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %superword_op1, metadata !11428, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %outof_target, metadata !11429, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %into_target, metadata !11430, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !11431, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata i32 %methods, metadata !11432, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata i64 %shift_mask, metadata !11433, metadata !DIExpression()), !dbg !11436
  %cmp = icmp eq %struct.rtx_def* %outof_target, null, !dbg !11437
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11438

cond.true:                                        ; preds = %entry
  %0 = load i32, i32* @word_mode, align 4, !dbg !11439
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %0) #6, !dbg !11440
  br label %cond.end, !dbg !11438

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.rtx_def* [ %call, %cond.true ], [ null, %entry ], !dbg !11438
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !11434, metadata !DIExpression()), !dbg !11436
  %cmp3 = icmp ne %struct.rtx_def* %outof_target, null, !dbg !11441
  %cmp4 = icmp eq %struct.rtx_def* %subword_op1, %superword_op1, !dbg !11443
  %or.cond = and i1 %cmp3, %cmp4, !dbg !11444
  br i1 %or.cond, label %if.then, label %if.else, !dbg !11444

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.rtx_def* %outof_target, metadata !11435, metadata !DIExpression()), !dbg !11436
  %call5 = tail call fastcc zeroext i8 @expand_superword_shift(%struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %subword_op1, %struct.rtx_def* %cond, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8, !dbg !11445
  %tobool = icmp eq i8 %call5, 0, !dbg !11445
  br i1 %tobool, label %cleanup, label %if.end12, !dbg !11448

if.else:                                          ; preds = %cond.end
  %1 = load i32, i32* @word_mode, align 4, !dbg !11449
  %call7 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %1) #6, !dbg !11451
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !11435, metadata !DIExpression()), !dbg !11436
  %call8 = tail call fastcc zeroext i8 @expand_superword_shift(%struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %superword_op1, %struct.rtx_def* %cond, %struct.rtx_def* %call7, i32 %unsignedp, i32 %methods) #8, !dbg !11452
  %tobool9 = icmp eq i8 %call8, 0, !dbg !11452
  br i1 %tobool9, label %cleanup, label %if.end12, !dbg !11454

if.end12:                                         ; preds = %if.then, %if.else
  %into_superword.0 = phi %struct.rtx_def* [ %outof_target, %if.then ], [ %call7, %if.else ], !dbg !11455
  call void @llvm.dbg.value(metadata %struct.rtx_def* %into_superword.0, metadata !11435, metadata !DIExpression()), !dbg !11436
  %call13 = tail call fastcc zeroext i8 @expand_subword_shift(i32 %op1_mode, %struct.optab_d* %binoptab, %struct.rtx_def* %outof_input, %struct.rtx_def* %into_input, %struct.rtx_def* %subword_op1, %struct.rtx_def* %outof_target, %struct.rtx_def* %into_target, i32 %unsignedp, i32 %methods, i64 %shift_mask) #8, !dbg !11456
  %tobool14 = icmp eq i8 %call13, 0, !dbg !11456
  br i1 %tobool14, label %cleanup, label %if.end16, !dbg !11458

if.end16:                                         ; preds = %if.end12
  %2 = load i32, i32* @word_mode, align 4, !dbg !11459
  %call17 = tail call %struct.rtx_def* @emit_conditional_move(%struct.rtx_def* %into_target, i32 %cmp_code, %struct.rtx_def* %cmp1, %struct.rtx_def* %cmp2, i32 %op1_mode, %struct.rtx_def* %into_target, %struct.rtx_def* %into_superword.0, i32 %2, i32 0) #8, !dbg !11461
  %tobool18 = icmp eq %struct.rtx_def* %call17, null, !dbg !11461
  br i1 %tobool18, label %cleanup, label %if.end20, !dbg !11462

if.end20:                                         ; preds = %if.end16
  br i1 %cmp, label %if.end27, label %if.then22, !dbg !11463

if.then22:                                        ; preds = %if.end20
  %3 = load i32, i32* @word_mode, align 4, !dbg !11464
  %call23 = tail call %struct.rtx_def* @emit_conditional_move(%struct.rtx_def* nonnull %outof_target, i32 %cmp_code, %struct.rtx_def* %cmp1, %struct.rtx_def* %cmp2, i32 %op1_mode, %struct.rtx_def* nonnull %outof_target, %struct.rtx_def* %cond, i32 %3, i32 0) #8, !dbg !11467
  %tobool24 = icmp eq %struct.rtx_def* %call23, null, !dbg !11467
  br i1 %tobool24, label %cleanup, label %if.end27, !dbg !11468

if.end27:                                         ; preds = %if.then22, %if.end20
  br label %cleanup, !dbg !11469

cleanup:                                          ; preds = %if.then, %if.then22, %if.end16, %if.end12, %if.else, %if.end27
  %retval.0 = phi i8 [ 1, %if.end27 ], [ 0, %if.then ], [ 0, %if.else ], [ 0, %if.end12 ], [ 0, %if.end16 ], [ 0, %if.then22 ], !dbg !11436
  ret i8 %retval.0, !dbg !11470
}

declare dso_local %struct.rtx_def* @gen_highpart(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @int_mode_for_mode(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @lowpart_subreg_maybe_copy(i32 %omode, %struct.rtx_def* %val, i32 %imode) unnamed_addr #4 !dbg !11471 {
entry:
  call void @llvm.dbg.value(metadata i32 %omode, metadata !11475, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val, metadata !11476, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 %imode, metadata !11477, metadata !DIExpression()), !dbg !11479
  %call = tail call %struct.rtx_def* @lowpart_subreg(i32 %omode, %struct.rtx_def* %val, i32 %imode) #6, !dbg !11480
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !11478, metadata !DIExpression()), !dbg !11479
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !11481
  br i1 %cmp, label %if.then, label %if.end, !dbg !11483

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.rtx_def* @force_reg(i32 %imode, %struct.rtx_def* %val) #6, !dbg !11484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !11476, metadata !DIExpression()), !dbg !11479
  %call2 = tail call %struct.rtx_def* @lowpart_subreg(i32 %omode, %struct.rtx_def* %call1, i32 %imode) #6, !dbg !11486
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !11478, metadata !DIExpression()), !dbg !11479
  %cmp3 = icmp eq %struct.rtx_def* %call2, null, !dbg !11487
  br i1 %cmp3, label %cond.true, label %if.end, !dbg !11487

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2916, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11487
  br label %if.end, !dbg !11487

if.end:                                           ; preds = %if.then, %cond.true, %entry
  %ret.0 = phi %struct.rtx_def* [ %call, %entry ], [ %call2, %if.then ], [ null, %cond.true ], !dbg !11479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %ret.0, metadata !11478, metadata !DIExpression()), !dbg !11479
  ret %struct.rtx_def* %ret.0, !dbg !11488
}

declare dso_local %struct.rtx_def* @lowpart_subreg(i32, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @reg_set_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @find_reg_fusage(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @reg_used_between_p(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @modified_in_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @modified_between_p(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @prepare_float_lib_cmp(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 %comparison, %struct.rtx_def** %ptest, i32* %pmode) unnamed_addr #4 !dbg !11489 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !11493, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !11494, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %comparison, metadata !11495, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata %struct.rtx_def** %ptest, metadata !11496, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32* %pmode, metadata !11497, metadata !DIExpression()), !dbg !11523
  %call = tail call i32 @swap_condition(i32 %comparison) #6, !dbg !11524
  call void @llvm.dbg.value(metadata i32 %call, metadata !11498, metadata !DIExpression()), !dbg !11523
  %call1 = tail call i32 @reverse_condition_maybe_unordered(i32 %comparison) #6, !dbg !11525
  call void @llvm.dbg.value(metadata i32 %call1, metadata !11499, metadata !DIExpression()), !dbg !11523
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !11526
  %bf.load = load i32, i32* %0, align 8, !dbg !11526
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !11526
  %bf.clear = and i32 %bf.lshr, 255, !dbg !11526
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !11500, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !11507, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i8 0, metadata !11508, metadata !DIExpression()), !dbg !11523
  %1 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 8), align 8, !dbg !11527
  %call2 = tail call i32 %1() #6, !dbg !11528
  call void @llvm.dbg.value(metadata i32 %call2, metadata !11502, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !11501, metadata !DIExpression()), !dbg !11523
  %idxprom3 = zext i32 %comparison to i64, !dbg !11529
  %arrayidx4 = getelementptr inbounds [140 x %struct.optab_d*], [140 x %struct.optab_d*]* @code_to_optab, i64 0, i64 %idxprom3, !dbg !11529
  %idxprom11 = zext i32 %call to i64, !dbg !11531
  %arrayidx12 = getelementptr inbounds [140 x %struct.optab_d*], [140 x %struct.optab_d*]* @code_to_optab, i64 0, i64 %idxprom11, !dbg !11531
  %idxprom17 = zext i32 %call1 to i64, !dbg !11532
  %arrayidx18 = getelementptr inbounds [140 x %struct.optab_d*], [140 x %struct.optab_d*]* @code_to_optab, i64 0, i64 %idxprom17, !dbg !11532
  br label %for.cond, !dbg !11534

for.cond:                                         ; preds = %for.inc, %entry
  %mode.0 = phi i32 [ %bf.clear, %entry ], [ %conv, %for.inc ], !dbg !11535
  %libfunc.0 = phi %struct.rtx_def* [ null, %entry ], [ %libfunc.3, %for.inc ], !dbg !11523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %libfunc.0, metadata !11507, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !11501, metadata !DIExpression()), !dbg !11523
  %cmp = icmp eq i32 %mode.0, 0, !dbg !11536
  br i1 %cmp, label %for.end, label %for.body, !dbg !11537

for.body:                                         ; preds = %for.cond
  %2 = load %struct.optab_d*, %struct.optab_d** %arrayidx4, align 8, !dbg !11538
  %tobool = icmp eq %struct.optab_d* %2, null, !dbg !11538
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !11539

land.lhs.true:                                    ; preds = %for.body
  %call5 = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* nonnull %2, i32 %mode.0) #8, !dbg !11540
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !11507, metadata !DIExpression()), !dbg !11523
  %tobool6 = icmp eq %struct.rtx_def* %call5, null, !dbg !11541
  br i1 %tobool6, label %if.end, label %for.end, !dbg !11542

if.end:                                           ; preds = %land.lhs.true, %for.body
  %libfunc.1 = phi %struct.rtx_def* [ null, %land.lhs.true ], [ %libfunc.0, %for.body ], !dbg !11523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %libfunc.1, metadata !11507, metadata !DIExpression()), !dbg !11523
  %3 = load %struct.optab_d*, %struct.optab_d** %arrayidx12, align 8, !dbg !11543
  %tobool9 = icmp eq %struct.optab_d* %3, null, !dbg !11543
  br i1 %tobool9, label %if.end16, label %land.lhs.true10, !dbg !11544

land.lhs.true10:                                  ; preds = %if.end
  %call13 = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* nonnull %3, i32 %mode.0) #8, !dbg !11545
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !11507, metadata !DIExpression()), !dbg !11523
  %tobool14 = icmp eq %struct.rtx_def* %call13, null, !dbg !11546
  br i1 %tobool14, label %if.end16, label %for.end, !dbg !11547

if.end16:                                         ; preds = %land.lhs.true10, %if.end
  %libfunc.2 = phi %struct.rtx_def* [ null, %land.lhs.true10 ], [ %libfunc.1, %if.end ], !dbg !11548
  call void @llvm.dbg.value(metadata %struct.rtx_def* %libfunc.2, metadata !11507, metadata !DIExpression()), !dbg !11523
  %4 = load %struct.optab_d*, %struct.optab_d** %arrayidx18, align 8, !dbg !11549
  %tobool19 = icmp eq %struct.optab_d* %4, null, !dbg !11549
  br i1 %tobool19, label %for.inc, label %land.lhs.true20, !dbg !11550

land.lhs.true20:                                  ; preds = %if.end16
  %call23 = tail call %struct.rtx_def* @optab_libfunc(%struct.optab_d* nonnull %4, i32 %mode.0) #8, !dbg !11551
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call23, metadata !11507, metadata !DIExpression()), !dbg !11523
  br label %for.inc, !dbg !11552

for.inc:                                          ; preds = %if.end16, %land.lhs.true20
  %libfunc.3 = phi %struct.rtx_def* [ %libfunc.2, %if.end16 ], [ %call23, %land.lhs.true20 ], !dbg !11548
  call void @llvm.dbg.value(metadata %struct.rtx_def* %libfunc.3, metadata !11507, metadata !DIExpression()), !dbg !11523
  %idxprom28 = zext i32 %mode.0 to i64, !dbg !11553
  %arrayidx29 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom28, !dbg !11553
  %5 = load i8, i8* %arrayidx29, align 1, !dbg !11553
  %conv = zext i8 %5 to i32, !dbg !11553
  call void @llvm.dbg.value(metadata i32 %conv, metadata !11501, metadata !DIExpression()), !dbg !11523
  br label %for.cond, !dbg !11554, !llvm.loop !11555

for.end:                                          ; preds = %land.lhs.true, %land.lhs.true10, %for.cond
  %mode.0.lcssa = phi i32 [ %mode.0, %land.lhs.true ], [ %mode.0, %land.lhs.true10 ], [ %mode.0, %for.cond ], !dbg !11535
  %cmp.lcssa = phi i1 [ %cmp, %land.lhs.true ], [ %cmp, %land.lhs.true10 ], [ %cmp, %for.cond ], !dbg !11536
  %libfunc.4 = phi %struct.rtx_def* [ %libfunc.0, %for.cond ], [ %call5, %land.lhs.true ], [ %call13, %land.lhs.true10 ], !dbg !11523
  %comparison.addr.0 = phi i32 [ %comparison, %for.cond ], [ %comparison, %land.lhs.true ], [ %call, %land.lhs.true10 ]
  %y.addr.0 = phi %struct.rtx_def* [ %y, %for.cond ], [ %y, %land.lhs.true ], [ %x, %land.lhs.true10 ]
  %x.addr.0 = phi %struct.rtx_def* [ %x, %for.cond ], [ %x, %land.lhs.true ], [ %y, %land.lhs.true10 ]
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !11501, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !11501, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !11501, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !11501, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !11501, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !11501, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !11501, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !11501, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !11501, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !11493, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.0, metadata !11494, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %comparison.addr.0, metadata !11495, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i8 0, metadata !11508, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %libfunc.4, metadata !11507, metadata !DIExpression()), !dbg !11523
  br i1 %cmp.lcssa, label %cond.true, label %cond.end, !dbg !11557

cond.true:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4392, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11557
  br label %cond.end, !dbg !11557

cond.end:                                         ; preds = %for.end, %cond.true
  %cmp32 = icmp eq i32 %mode.0.lcssa, %bf.clear, !dbg !11558
  br i1 %cmp32, label %if.end37, label %if.then34, !dbg !11560

if.then34:                                        ; preds = %cond.end
  %call35 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode.0.lcssa, %struct.rtx_def* %x.addr.0, i32 0) #6, !dbg !11561
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call35, metadata !11493, metadata !DIExpression()), !dbg !11523
  %call36 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode.0.lcssa, %struct.rtx_def* %y.addr.0, i32 0) #6, !dbg !11563
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call36, metadata !11494, metadata !DIExpression()), !dbg !11523
  br label %if.end37, !dbg !11564

if.end37:                                         ; preds = %cond.end, %if.then34
  %y.addr.1 = phi %struct.rtx_def* [ %call36, %if.then34 ], [ %y.addr.0, %cond.end ]
  %x.addr.1 = phi %struct.rtx_def* [ %call35, %if.then34 ], [ %x.addr.0, %cond.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.1, metadata !11493, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.1, metadata !11494, metadata !DIExpression()), !dbg !11523
  %cmp38 = icmp eq i32 %comparison.addr.0, 90, !dbg !11565
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !11566

if.then40:                                        ; preds = %if.end37
  %call41 = tail call %struct.rtx_def* @simplify_gen_relational(i32 80, i32 %call2, i32 %mode.0.lcssa, %struct.rtx_def* %x.addr.1, %struct.rtx_def* %x.addr.1) #6, !dbg !11567
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call41, metadata !11515, metadata !DIExpression()), !dbg !11568
  %call42 = tail call %struct.rtx_def* @simplify_gen_relational(i32 80, i32 %call2, i32 %mode.0.lcssa, %struct.rtx_def* %y.addr.1, %struct.rtx_def* %y.addr.1) #6, !dbg !11569
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call42, metadata !11506, metadata !DIExpression()), !dbg !11523
  %6 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11570
  %call43 = tail call %struct.rtx_def* @simplify_gen_ternary(i32 47, i32 %call2, i32 %call2, %struct.rtx_def* %call41, %struct.rtx_def* %6, %struct.rtx_def* %call42) #6, !dbg !11571
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call43, metadata !11506, metadata !DIExpression()), !dbg !11523
  br label %if.end51, !dbg !11572

if.else:                                          ; preds = %if.end37
  %call44 = tail call %struct.rtx_def* @simplify_gen_relational(i32 %comparison.addr.0, i32 %call2, i32 %mode.0.lcssa, %struct.rtx_def* %x.addr.1, %struct.rtx_def* %y.addr.1) #6, !dbg !11573
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !11506, metadata !DIExpression()), !dbg !11523
  switch i32 %comparison.addr.0, label %sw.default [
    i32 81, label %sw.bb
    i32 80, label %sw.bb45
    i32 83, label %sw.bb46
    i32 82, label %sw.bb47
    i32 85, label %sw.bb48
    i32 84, label %sw.bb49
  ], !dbg !11574

sw.bb:                                            ; preds = %if.else
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11575
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !11518, metadata !DIExpression()), !dbg !11577
  %8 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11578
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !11522, metadata !DIExpression()), !dbg !11577
  br label %sw.epilog, !dbg !11579

sw.bb45:                                          ; preds = %if.else
  %9 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11580
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !11518, metadata !DIExpression()), !dbg !11577
  %10 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11581
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !11522, metadata !DIExpression()), !dbg !11577
  br label %sw.epilog, !dbg !11582

sw.bb46:                                          ; preds = %if.else
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !11583
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !11518, metadata !DIExpression()), !dbg !11577
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11584
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !11522, metadata !DIExpression()), !dbg !11577
  br label %sw.epilog, !dbg !11585

sw.bb47:                                          ; preds = %if.else
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11586
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !11518, metadata !DIExpression()), !dbg !11577
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !11587
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !11522, metadata !DIExpression()), !dbg !11577
  br label %sw.epilog, !dbg !11588

sw.bb48:                                          ; preds = %if.else
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !11589
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !11518, metadata !DIExpression()), !dbg !11577
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11590
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !11522, metadata !DIExpression()), !dbg !11577
  br label %sw.epilog, !dbg !11591

sw.bb49:                                          ; preds = %if.else
  %17 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11592
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !11518, metadata !DIExpression()), !dbg !11577
  %18 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !11593
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !11522, metadata !DIExpression()), !dbg !11577
  br label %sw.epilog, !dbg !11594

sw.default:                                       ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 4450, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11595
  br label %sw.epilog, !dbg !11596

sw.epilog:                                        ; preds = %sw.default, %sw.bb49, %sw.bb48, %sw.bb47, %sw.bb46, %sw.bb45, %sw.bb
  %true_rtx.0 = phi %struct.rtx_def* [ undef, %sw.default ], [ %17, %sw.bb49 ], [ %15, %sw.bb48 ], [ %13, %sw.bb47 ], [ %11, %sw.bb46 ], [ %9, %sw.bb45 ], [ %7, %sw.bb ]
  %false_rtx.0 = phi %struct.rtx_def* [ undef, %sw.default ], [ %18, %sw.bb49 ], [ %16, %sw.bb48 ], [ %14, %sw.bb47 ], [ %12, %sw.bb46 ], [ %10, %sw.bb45 ], [ %8, %sw.bb ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_rtx.0, metadata !11522, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %true_rtx.0, metadata !11518, metadata !DIExpression()), !dbg !11577
  %call50 = tail call %struct.rtx_def* @simplify_gen_ternary(i32 47, i32 %call2, i32 %call2, %struct.rtx_def* %call44, %struct.rtx_def* %true_rtx.0, %struct.rtx_def* %false_rtx.0) #6, !dbg !11597
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50, metadata !11506, metadata !DIExpression()), !dbg !11523
  br label %if.end51

if.end51:                                         ; preds = %sw.epilog, %if.then40
  %equiv.0 = phi %struct.rtx_def* [ %call43, %if.then40 ], [ %call50, %sw.epilog ], !dbg !11598
  call void @llvm.dbg.value(metadata %struct.rtx_def* %equiv.0, metadata !11506, metadata !DIExpression()), !dbg !11523
  tail call void @start_sequence() #6, !dbg !11599
  %call52 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) @emit_library_call_value(%struct.rtx_def* %libfunc.4, %struct.rtx_def* null, i32 1, i32 %call2, i32 2, %struct.rtx_def* %x.addr.1, i32 %mode.0.lcssa, %struct.rtx_def* %y.addr.1, i32 %mode.0.lcssa) #6, !dbg !11600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call52, metadata !11503, metadata !DIExpression()), !dbg !11523
  %call53 = tail call %struct.rtx_def* @get_insns() #6, !dbg !11601
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call53, metadata !11505, metadata !DIExpression()), !dbg !11523
  tail call void @end_sequence() #6, !dbg !11602
  %call54 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call2) #6, !dbg !11603
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call54, metadata !11504, metadata !DIExpression()), !dbg !11523
  tail call void @emit_libcall_block(%struct.rtx_def* %call53, %struct.rtx_def* %call54, %struct.rtx_def* %call52, %struct.rtx_def* %equiv.0) #8, !dbg !11604
  br i1 %cmp38, label %if.then57, label %if.end61, !dbg !11605

if.then57:                                        ; preds = %if.end51
  call void @llvm.dbg.value(metadata i32 80, metadata !11495, metadata !DIExpression()), !dbg !11523
  br label %if.end61, !dbg !11606

if.end61:                                         ; preds = %if.then57, %if.end51
  %comparison.addr.1 = phi i32 [ 80, %if.then57 ], [ %comparison.addr.0, %if.end51 ]
  call void @llvm.dbg.value(metadata i32 %comparison.addr.1, metadata !11495, metadata !DIExpression()), !dbg !11523
  %19 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11608
  %call62 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %comparison.addr.1, i32 0, %struct.rtx_def* %call54, %struct.rtx_def* %19) #6, !dbg !11608
  store %struct.rtx_def* %call62, %struct.rtx_def** %ptest, align 8, !dbg !11609
  store i32 %call2, i32* %pmode, align 4, !dbg !11610
  ret void, !dbg !11611
}

declare dso_local i32 @reverse_condition_maybe_unordered(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_gen_ternary(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_fixed_libfunc(%struct.optab_d* %optable, i8* %opname, i8 signext %suffix, i32 %mode) unnamed_addr #4 !dbg !11612 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !11614, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i8* %opname, metadata !11615, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i8 %suffix, metadata !11616, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i32 %mode, metadata !11617, metadata !DIExpression()), !dbg !11618
  %idxprom = zext i32 %mode to i64, !dbg !11619
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !11619
  %0 = load i8, i8* %arrayidx, align 1, !dbg !11619
  %cmp = icmp eq i8 %0, 4, !dbg !11619
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !11619

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %0, 13, !dbg !11619
  br i1 %cmp5, label %if.end, label %lor.lhs.false7, !dbg !11619

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i8 %0, 6, !dbg !11619
  br i1 %cmp11, label %if.end, label %lor.lhs.false13, !dbg !11619

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %cmp17 = icmp eq i8 %0, 15, !dbg !11619
  br i1 %cmp17, label %if.end, label %lor.lhs.false19, !dbg !11619

lor.lhs.false19:                                  ; preds = %lor.lhs.false13
  %cmp23 = icmp eq i8 %0, 5, !dbg !11619
  br i1 %cmp23, label %if.end, label %lor.lhs.false25, !dbg !11619

lor.lhs.false25:                                  ; preds = %lor.lhs.false19
  %cmp29 = icmp eq i8 %0, 14, !dbg !11619
  br i1 %cmp29, label %if.end, label %lor.lhs.false31, !dbg !11619

lor.lhs.false31:                                  ; preds = %lor.lhs.false25
  %cmp35 = icmp eq i8 %0, 7, !dbg !11619
  br i1 %cmp35, label %if.end, label %lor.lhs.false37, !dbg !11619

lor.lhs.false37:                                  ; preds = %lor.lhs.false31
  %cmp41 = icmp eq i8 %0, 16, !dbg !11619
  br i1 %cmp41, label %if.end, label %return, !dbg !11621

if.end:                                           ; preds = %lor.lhs.false37, %lor.lhs.false31, %lor.lhs.false25, %lor.lhs.false19, %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false, %entry
  %conv43 = sext i8 %suffix to i32, !dbg !11622
  tail call fastcc void @gen_libfunc(%struct.optab_d* %optable, i8* %opname, i32 %conv43, i32 %mode) #8, !dbg !11623
  br label %return, !dbg !11624

return:                                           ; preds = %lor.lhs.false37, %if.end
  ret void, !dbg !11624
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_libfunc(%struct.optab_d* %optable, i8* %opname, i32 %suffix, i32 %mode) unnamed_addr #4 !dbg !11625 {
entry:
  call void @llvm.dbg.value(metadata %struct.optab_d* %optable, metadata !11629, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata i8* %opname, metadata !11630, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata i32 %suffix, metadata !11631, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata i32 %mode, metadata !11632, metadata !DIExpression()), !dbg !11639
  %call = tail call i64 @strlen(i8* %opname) #6, !dbg !11640
  %idxprom = zext i32 %mode to i64, !dbg !11641
  %arrayidx = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom, !dbg !11641
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !11641
  call void @llvm.dbg.value(metadata i8* %0, metadata !11634, metadata !DIExpression()), !dbg !11639
  %call1 = tail call i64 @strlen(i8* %0) #6, !dbg !11642
  %add = add i64 %call, 2, !dbg !11643
  %add3 = add i64 %add, %call1, !dbg !11643
  %add5 = add i64 %add3, 2, !dbg !11643
  %conv6 = and i64 %add5, 4294967295, !dbg !11643
  %1 = alloca i8, i64 %conv6, align 16, !dbg !11643
  call void @llvm.dbg.value(metadata i8* %1, metadata !11636, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata i8* %1, metadata !11637, metadata !DIExpression()), !dbg !11639
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !11644
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !11637, metadata !DIExpression()), !dbg !11639
  store i8 95, i8* %1, align 16, !dbg !11645
  %incdec.ptr7 = getelementptr inbounds i8, i8* %1, i64 2, !dbg !11646
  call void @llvm.dbg.value(metadata i8* %incdec.ptr7, metadata !11637, metadata !DIExpression()), !dbg !11639
  store i8 95, i8* %incdec.ptr, align 1, !dbg !11647
  call void @llvm.dbg.value(metadata i8* %opname, metadata !11638, metadata !DIExpression()), !dbg !11639
  br label %for.cond, !dbg !11648

for.cond:                                         ; preds = %for.body, %entry
  %p.0 = phi i8* [ %incdec.ptr7, %entry ], [ %incdec.ptr9, %for.body ], !dbg !11639
  %q.0 = phi i8* [ %opname, %entry ], [ %incdec.ptr8, %for.body ], !dbg !11650
  call void @llvm.dbg.value(metadata i8* %q.0, metadata !11638, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !11637, metadata !DIExpression()), !dbg !11639
  %2 = load i8, i8* %q.0, align 1, !dbg !11651
  %tobool = icmp eq i8 %2, 0, !dbg !11653
  br i1 %tobool, label %for.cond10.preheader, label %for.body, !dbg !11653

for.cond10.preheader:                             ; preds = %for.cond
  %p.0.lcssa = phi i8* [ %p.0, %for.cond ], !dbg !11639
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !11637, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !11637, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !11637, metadata !DIExpression()), !dbg !11639
  br label %for.cond10, !dbg !11654

for.body:                                         ; preds = %for.cond
  %incdec.ptr8 = getelementptr inbounds i8, i8* %q.0, i64 1, !dbg !11656
  call void @llvm.dbg.value(metadata i8* %incdec.ptr8, metadata !11638, metadata !DIExpression()), !dbg !11639
  %incdec.ptr9 = getelementptr inbounds i8, i8* %p.0, i64 1, !dbg !11657
  call void @llvm.dbg.value(metadata i8* %incdec.ptr9, metadata !11637, metadata !DIExpression()), !dbg !11639
  store i8 %2, i8* %p.0, align 1, !dbg !11658
  br label %for.cond, !dbg !11659, !llvm.loop !11660

for.cond10:                                       ; preds = %for.cond10.preheader, %for.body12
  %p.1 = phi i8* [ %incdec.ptr16, %for.body12 ], [ %p.0.lcssa, %for.cond10.preheader ], !dbg !11639
  %q.1 = phi i8* [ %incdec.ptr17, %for.body12 ], [ %0, %for.cond10.preheader ], !dbg !11662
  call void @llvm.dbg.value(metadata i8* %q.1, metadata !11638, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !11637, metadata !DIExpression()), !dbg !11639
  %3 = load i8, i8* %q.1, align 1, !dbg !11663
  %tobool11 = icmp eq i8 %3, 0, !dbg !11654
  br i1 %tobool11, label %for.end18, label %for.body12, !dbg !11654

for.body12:                                       ; preds = %for.cond10
  %idxprom14 = zext i8 %3 to i64, !dbg !11665
  %arrayidx15 = getelementptr inbounds [256 x i8], [256 x i8]* @_sch_tolower, i64 0, i64 %idxprom14, !dbg !11665
  %4 = load i8, i8* %arrayidx15, align 1, !dbg !11665
  %incdec.ptr16 = getelementptr inbounds i8, i8* %p.1, i64 1, !dbg !11666
  call void @llvm.dbg.value(metadata i8* %incdec.ptr16, metadata !11637, metadata !DIExpression()), !dbg !11639
  store i8 %4, i8* %p.1, align 1, !dbg !11667
  %incdec.ptr17 = getelementptr inbounds i8, i8* %q.1, i64 1, !dbg !11668
  call void @llvm.dbg.value(metadata i8* %incdec.ptr17, metadata !11638, metadata !DIExpression()), !dbg !11639
  br label %for.cond10, !dbg !11669, !llvm.loop !11670

for.end18:                                        ; preds = %for.cond10
  %p.1.lcssa = phi i8* [ %p.1, %for.cond10 ], !dbg !11639
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11637, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11637, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11637, metadata !DIExpression()), !dbg !11639
  %conv19 = trunc i32 %suffix to i8, !dbg !11672
  %incdec.ptr20 = getelementptr inbounds i8, i8* %p.1.lcssa, i64 1, !dbg !11673
  call void @llvm.dbg.value(metadata i8* %incdec.ptr20, metadata !11637, metadata !DIExpression()), !dbg !11639
  store i8 %conv19, i8* %p.1.lcssa, align 1, !dbg !11674
  store i8 0, i8* %incdec.ptr20, align 1, !dbg !11675
  %sub.ptr.lhs.cast = ptrtoint i8* %incdec.ptr20 to i64, !dbg !11676
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !11676
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11676
  %conv21 = trunc i64 %sub.ptr.sub to i32, !dbg !11677
  %call22 = call i8* @ggc_alloc_string(i8* nonnull %1, i32 %conv21) #6, !dbg !11678
  call void @set_optab_libfunc(%struct.optab_d* %optable, i32 %mode, i8* %call22) #8, !dbg !11679
  ret void, !dbg !11680
}

declare dso_local i64 @strlen(i8*) local_unnamed_addr #1

declare dso_local i8* @ggc_alloc_string(i8*, i32) local_unnamed_addr #1

declare dso_local i8* @strcpy(i8*, i8*) local_unnamed_addr #1

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_interclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) unnamed_addr #4 !dbg !11681 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !11683, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i8* %opname, metadata !11684, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !11685, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !11686, metadata !DIExpression()), !dbg !11701
  %call = tail call i64 @strlen(i8* %opname) #6, !dbg !11702
  call void @llvm.dbg.value(metadata i64 %call, metadata !11687, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i64 0, metadata !11688, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i64 4, metadata !11699, metadata !DIExpression()), !dbg !11701
  %idxprom = zext i32 %tmode to i64, !dbg !11703
  %arrayidx = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom, !dbg !11703
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !11703
  %call1 = tail call i64 @strlen(i8* %0) #6, !dbg !11704
  %idxprom2 = zext i32 %fmode to i64, !dbg !11705
  %arrayidx3 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom2, !dbg !11705
  %1 = load i8*, i8** %arrayidx3, align 8, !dbg !11705
  %call4 = tail call i64 @strlen(i8* %1) #6, !dbg !11706
  %add = add i64 %call1, %call4, !dbg !11707
  call void @llvm.dbg.value(metadata i64 %add, metadata !11688, metadata !DIExpression()), !dbg !11701
  %add5 = add i64 %call, 2, !dbg !11708
  %add6 = add i64 %add5, %add, !dbg !11708
  %add8 = add i64 %add6, 2, !dbg !11708
  %2 = alloca i8, i64 %add8, align 16, !dbg !11708
  call void @llvm.dbg.value(metadata i8* %2, metadata !11694, metadata !DIExpression()), !dbg !11701
  store i8 95, i8* %2, align 16, !dbg !11709
  %arrayidx10 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !11710
  store i8 95, i8* %arrayidx10, align 1, !dbg !11711
  %arrayidx11 = getelementptr inbounds i8, i8* %2, i64 2, !dbg !11712
  %call12 = call i8* @memcpy(i8* nonnull %arrayidx11, i8* %opname, i64 %call) #6, !dbg !11713
  call void @llvm.dbg.value(metadata i8* undef, metadata !11696, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11701
  %add14 = add i64 %call, 6, !dbg !11714
  %add15 = add i64 %add14, %add, !dbg !11714
  %add17 = add i64 %add15, 2, !dbg !11714
  %3 = alloca i8, i64 %add17, align 16, !dbg !11714
  call void @llvm.dbg.value(metadata i8* %3, metadata !11695, metadata !DIExpression()), !dbg !11701
  store i8 95, i8* %3, align 16, !dbg !11715
  %arrayidx20 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !11716
  store i8 95, i8* %arrayidx20, align 1, !dbg !11717
  %arrayidx21 = getelementptr inbounds i8, i8* %3, i64 2, !dbg !11718
  %call22 = call i8* @memcpy(i8* nonnull %arrayidx21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), i64 4) #6, !dbg !11719
  %arrayidx23 = getelementptr inbounds i8, i8* %3, i64 6, !dbg !11720
  %call24 = call i8* @memcpy(i8* nonnull %arrayidx23, i8* %opname, i64 %call) #6, !dbg !11721
  %add.ptr25 = getelementptr inbounds i8, i8* %3, i64 4, !dbg !11722
  %add.ptr26 = getelementptr inbounds i8, i8* %add.ptr25, i64 %call, !dbg !11723
  %add.ptr27 = getelementptr inbounds i8, i8* %add.ptr26, i64 2, !dbg !11724
  call void @llvm.dbg.value(metadata i8* %add.ptr27, metadata !11697, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i8* %1, metadata !11689, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i8* %0, metadata !11690, metadata !DIExpression()), !dbg !11701
  %arrayidx33 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2, !dbg !11725
  %4 = load i8, i8* %arrayidx33, align 1, !dbg !11725
  %cmp = icmp eq i8 %4, 9, !dbg !11725
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !11727

lor.lhs.false:                                    ; preds = %entry
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %call, !dbg !11728
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !11696, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11701
  %add.ptr13 = getelementptr inbounds i8, i8* %add.ptr, i64 2, !dbg !11729
  call void @llvm.dbg.value(metadata i8* %add.ptr13, metadata !11696, metadata !DIExpression()), !dbg !11701
  %arrayidx36 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !11730
  %5 = load i8, i8* %arrayidx36, align 1, !dbg !11730
  %cmp38 = icmp eq i8 %5, 9, !dbg !11730
  %spec.select = select i1 %cmp38, i8* %3, i8* %2, !dbg !11731
  %spec.select1 = select i1 %cmp38, i8* %add.ptr27, i8* %add.ptr13, !dbg !11731
  br label %if.end, !dbg !11731

if.end:                                           ; preds = %lor.lhs.false, %entry
  %libfunc_name.0 = phi i8* [ %3, %entry ], [ %spec.select, %lor.lhs.false ], !dbg !11732
  %suffix.0 = phi i8* [ %add.ptr27, %entry ], [ %spec.select1, %lor.lhs.false ], !dbg !11732
  call void @llvm.dbg.value(metadata i8* %suffix.0, metadata !11693, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i8* %libfunc_name.0, metadata !11692, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i8* %suffix.0, metadata !11698, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i8* %1, metadata !11691, metadata !DIExpression()), !dbg !11701
  br label %for.cond, !dbg !11733

for.cond:                                         ; preds = %for.body, %if.end
  %q.0 = phi i8* [ %1, %if.end ], [ %incdec.ptr43, %for.body ], !dbg !11735
  %p.0 = phi i8* [ %suffix.0, %if.end ], [ %incdec.ptr, %for.body ], !dbg !11701
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !11698, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i8* %q.0, metadata !11691, metadata !DIExpression()), !dbg !11701
  %6 = load i8, i8* %q.0, align 1, !dbg !11736
  %tobool = icmp eq i8 %6, 0, !dbg !11738
  br i1 %tobool, label %for.cond44.preheader, label %for.body, !dbg !11738

for.cond44.preheader:                             ; preds = %for.cond
  %p.0.lcssa = phi i8* [ %p.0, %for.cond ], !dbg !11701
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !11698, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !11698, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !11698, metadata !DIExpression()), !dbg !11701
  br label %for.cond44, !dbg !11739

for.body:                                         ; preds = %for.cond
  %idxprom41 = zext i8 %6 to i64, !dbg !11741
  %arrayidx42 = getelementptr inbounds [256 x i8], [256 x i8]* @_sch_tolower, i64 0, i64 %idxprom41, !dbg !11741
  %7 = load i8, i8* %arrayidx42, align 1, !dbg !11741
  store i8 %7, i8* %p.0, align 1, !dbg !11742
  %incdec.ptr = getelementptr inbounds i8, i8* %p.0, i64 1, !dbg !11743
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !11698, metadata !DIExpression()), !dbg !11701
  %incdec.ptr43 = getelementptr inbounds i8, i8* %q.0, i64 1, !dbg !11744
  call void @llvm.dbg.value(metadata i8* %incdec.ptr43, metadata !11691, metadata !DIExpression()), !dbg !11701
  br label %for.cond, !dbg !11745, !llvm.loop !11746

for.cond44:                                       ; preds = %for.cond44.preheader, %for.body46
  %q.1 = phi i8* [ %incdec.ptr53, %for.body46 ], [ %0, %for.cond44.preheader ], !dbg !11748
  %p.1 = phi i8* [ %incdec.ptr52, %for.body46 ], [ %p.0.lcssa, %for.cond44.preheader ], !dbg !11701
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !11698, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i8* %q.1, metadata !11691, metadata !DIExpression()), !dbg !11701
  %8 = load i8, i8* %q.1, align 1, !dbg !11749
  %tobool45 = icmp eq i8 %8, 0, !dbg !11739
  br i1 %tobool45, label %for.end54, label %for.body46, !dbg !11739

for.body46:                                       ; preds = %for.cond44
  %idxprom49 = zext i8 %8 to i64, !dbg !11751
  %arrayidx50 = getelementptr inbounds [256 x i8], [256 x i8]* @_sch_tolower, i64 0, i64 %idxprom49, !dbg !11751
  %9 = load i8, i8* %arrayidx50, align 1, !dbg !11751
  store i8 %9, i8* %p.1, align 1, !dbg !11752
  %incdec.ptr52 = getelementptr inbounds i8, i8* %p.1, i64 1, !dbg !11753
  call void @llvm.dbg.value(metadata i8* %incdec.ptr52, metadata !11698, metadata !DIExpression()), !dbg !11701
  %incdec.ptr53 = getelementptr inbounds i8, i8* %q.1, i64 1, !dbg !11754
  call void @llvm.dbg.value(metadata i8* %incdec.ptr53, metadata !11691, metadata !DIExpression()), !dbg !11701
  br label %for.cond44, !dbg !11755, !llvm.loop !11756

for.end54:                                        ; preds = %for.cond44
  %p.1.lcssa = phi i8* [ %p.1, %for.cond44 ], !dbg !11701
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11698, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11698, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11698, metadata !DIExpression()), !dbg !11701
  store i8 0, i8* %p.1.lcssa, align 1, !dbg !11758
  %sub.ptr.lhs.cast = ptrtoint i8* %p.1.lcssa to i64, !dbg !11759
  %sub.ptr.rhs.cast = ptrtoint i8* %libfunc_name.0 to i64, !dbg !11759
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11759
  %conv55 = trunc i64 %sub.ptr.sub to i32, !dbg !11760
  %call56 = call i8* @ggc_alloc_string(i8* %libfunc_name.0, i32 %conv55) #6, !dbg !11761
  call void @set_conv_libfunc(%struct.convert_optab_d* %tab, i32 %tmode, i32 %fmode, i8* %call56) #8, !dbg !11762
  ret void, !dbg !11763
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_intraclass_conv_libfunc(%struct.convert_optab_d* %tab, i8* %opname, i32 %tmode, i32 %fmode) unnamed_addr #4 !dbg !11764 {
entry:
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab, metadata !11766, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %opname, metadata !11767, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !11768, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 %fmode, metadata !11769, metadata !DIExpression()), !dbg !11783
  %call = tail call i64 @strlen(i8* %opname) #6, !dbg !11784
  call void @llvm.dbg.value(metadata i64 %call, metadata !11770, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i64 0, metadata !11771, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i64 4, metadata !11782, metadata !DIExpression()), !dbg !11783
  %idxprom = zext i32 %tmode to i64, !dbg !11785
  %arrayidx = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom, !dbg !11785
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !11785
  %call1 = tail call i64 @strlen(i8* %0) #6, !dbg !11786
  %idxprom2 = zext i32 %fmode to i64, !dbg !11787
  %arrayidx3 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom2, !dbg !11787
  %1 = load i8*, i8** %arrayidx3, align 8, !dbg !11787
  %call4 = tail call i64 @strlen(i8* %1) #6, !dbg !11788
  %add = add i64 %call1, %call4, !dbg !11789
  call void @llvm.dbg.value(metadata i64 %add, metadata !11771, metadata !DIExpression()), !dbg !11783
  %add5 = add i64 %call, 2, !dbg !11790
  %add6 = add i64 %add5, %add, !dbg !11790
  %add8 = add i64 %add6, 2, !dbg !11790
  %2 = alloca i8, i64 %add8, align 16, !dbg !11790
  call void @llvm.dbg.value(metadata i8* %2, metadata !11775, metadata !DIExpression()), !dbg !11783
  store i8 95, i8* %2, align 16, !dbg !11791
  %arrayidx10 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !11792
  store i8 95, i8* %arrayidx10, align 1, !dbg !11793
  %arrayidx11 = getelementptr inbounds i8, i8* %2, i64 2, !dbg !11794
  %call12 = call i8* @memcpy(i8* nonnull %arrayidx11, i8* %opname, i64 %call) #6, !dbg !11795
  call void @llvm.dbg.value(metadata i8* undef, metadata !11777, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11783
  %add14 = add i64 %call, 6, !dbg !11796
  %add15 = add i64 %add14, %add, !dbg !11796
  %add17 = add i64 %add15, 2, !dbg !11796
  %3 = alloca i8, i64 %add17, align 16, !dbg !11796
  call void @llvm.dbg.value(metadata i8* %3, metadata !11776, metadata !DIExpression()), !dbg !11783
  store i8 95, i8* %3, align 16, !dbg !11797
  %arrayidx20 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !11798
  store i8 95, i8* %arrayidx20, align 1, !dbg !11799
  %arrayidx21 = getelementptr inbounds i8, i8* %3, i64 2, !dbg !11800
  %call22 = call i8* @memcpy(i8* nonnull %arrayidx21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), i64 4) #6, !dbg !11801
  %arrayidx23 = getelementptr inbounds i8, i8* %3, i64 6, !dbg !11802
  %call24 = call i8* @memcpy(i8* nonnull %arrayidx23, i8* %opname, i64 %call) #6, !dbg !11803
  %add.ptr25 = getelementptr inbounds i8, i8* %3, i64 4, !dbg !11804
  %add.ptr26 = getelementptr inbounds i8, i8* %add.ptr25, i64 %call, !dbg !11805
  %add.ptr27 = getelementptr inbounds i8, i8* %add.ptr26, i64 2, !dbg !11806
  call void @llvm.dbg.value(metadata i8* %add.ptr27, metadata !11778, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %1, metadata !11772, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %0, metadata !11773, metadata !DIExpression()), !dbg !11783
  %arrayidx33 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2, !dbg !11807
  %4 = load i8, i8* %arrayidx33, align 1, !dbg !11807
  %cmp = icmp eq i8 %4, 9, !dbg !11807
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !11809

lor.lhs.false:                                    ; preds = %entry
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %call, !dbg !11810
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !11777, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11783
  %add.ptr13 = getelementptr inbounds i8, i8* %add.ptr, i64 2, !dbg !11811
  call void @llvm.dbg.value(metadata i8* %add.ptr13, metadata !11777, metadata !DIExpression()), !dbg !11783
  %arrayidx36 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !11812
  %5 = load i8, i8* %arrayidx36, align 1, !dbg !11812
  %cmp38 = icmp eq i8 %5, 9, !dbg !11812
  %spec.select = select i1 %cmp38, i8* %3, i8* %2, !dbg !11813
  %spec.select1 = select i1 %cmp38, i8* %add.ptr27, i8* %add.ptr13, !dbg !11813
  br label %if.end, !dbg !11813

if.end:                                           ; preds = %lor.lhs.false, %entry
  %libfunc_name.0 = phi i8* [ %3, %entry ], [ %spec.select, %lor.lhs.false ], !dbg !11814
  %suffix.0 = phi i8* [ %add.ptr27, %entry ], [ %spec.select1, %lor.lhs.false ], !dbg !11814
  call void @llvm.dbg.value(metadata i8* %suffix.0, metadata !11780, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %libfunc_name.0, metadata !11779, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %suffix.0, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %1, metadata !11774, metadata !DIExpression()), !dbg !11783
  br label %for.cond, !dbg !11815

for.cond:                                         ; preds = %for.body, %if.end
  %q.0 = phi i8* [ %1, %if.end ], [ %incdec.ptr43, %for.body ], !dbg !11817
  %p.0 = phi i8* [ %suffix.0, %if.end ], [ %incdec.ptr, %for.body ], !dbg !11783
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %q.0, metadata !11774, metadata !DIExpression()), !dbg !11783
  %6 = load i8, i8* %q.0, align 1, !dbg !11818
  %tobool = icmp eq i8 %6, 0, !dbg !11820
  br i1 %tobool, label %for.cond44.preheader, label %for.body, !dbg !11820

for.cond44.preheader:                             ; preds = %for.cond
  %p.0.lcssa = phi i8* [ %p.0, %for.cond ], !dbg !11783
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !11781, metadata !DIExpression()), !dbg !11783
  br label %for.cond44, !dbg !11821

for.body:                                         ; preds = %for.cond
  %idxprom41 = zext i8 %6 to i64, !dbg !11823
  %arrayidx42 = getelementptr inbounds [256 x i8], [256 x i8]* @_sch_tolower, i64 0, i64 %idxprom41, !dbg !11823
  %7 = load i8, i8* %arrayidx42, align 1, !dbg !11823
  store i8 %7, i8* %p.0, align 1, !dbg !11824
  %incdec.ptr = getelementptr inbounds i8, i8* %p.0, i64 1, !dbg !11825
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !11781, metadata !DIExpression()), !dbg !11783
  %incdec.ptr43 = getelementptr inbounds i8, i8* %q.0, i64 1, !dbg !11826
  call void @llvm.dbg.value(metadata i8* %incdec.ptr43, metadata !11774, metadata !DIExpression()), !dbg !11783
  br label %for.cond, !dbg !11827, !llvm.loop !11828

for.cond44:                                       ; preds = %for.cond44.preheader, %for.body46
  %q.1 = phi i8* [ %incdec.ptr53, %for.body46 ], [ %0, %for.cond44.preheader ], !dbg !11830
  %p.1 = phi i8* [ %incdec.ptr52, %for.body46 ], [ %p.0.lcssa, %for.cond44.preheader ], !dbg !11783
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %q.1, metadata !11774, metadata !DIExpression()), !dbg !11783
  %8 = load i8, i8* %q.1, align 1, !dbg !11831
  %tobool45 = icmp eq i8 %8, 0, !dbg !11821
  br i1 %tobool45, label %for.end54, label %for.body46, !dbg !11821

for.body46:                                       ; preds = %for.cond44
  %idxprom49 = zext i8 %8 to i64, !dbg !11833
  %arrayidx50 = getelementptr inbounds [256 x i8], [256 x i8]* @_sch_tolower, i64 0, i64 %idxprom49, !dbg !11833
  %9 = load i8, i8* %arrayidx50, align 1, !dbg !11833
  store i8 %9, i8* %p.1, align 1, !dbg !11834
  %incdec.ptr52 = getelementptr inbounds i8, i8* %p.1, i64 1, !dbg !11835
  call void @llvm.dbg.value(metadata i8* %incdec.ptr52, metadata !11781, metadata !DIExpression()), !dbg !11783
  %incdec.ptr53 = getelementptr inbounds i8, i8* %q.1, i64 1, !dbg !11836
  call void @llvm.dbg.value(metadata i8* %incdec.ptr53, metadata !11774, metadata !DIExpression()), !dbg !11783
  br label %for.cond44, !dbg !11837, !llvm.loop !11838

for.end54:                                        ; preds = %for.cond44
  %p.1.lcssa = phi i8* [ %p.1, %for.cond44 ], !dbg !11783
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11781, metadata !DIExpression()), !dbg !11783
  %incdec.ptr55 = getelementptr inbounds i8, i8* %p.1.lcssa, i64 1, !dbg !11840
  call void @llvm.dbg.value(metadata i8* %incdec.ptr55, metadata !11781, metadata !DIExpression()), !dbg !11783
  store i8 50, i8* %p.1.lcssa, align 1, !dbg !11841
  store i8 0, i8* %incdec.ptr55, align 1, !dbg !11842
  %sub.ptr.lhs.cast = ptrtoint i8* %incdec.ptr55 to i64, !dbg !11843
  %sub.ptr.rhs.cast = ptrtoint i8* %libfunc_name.0 to i64, !dbg !11843
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11843
  %conv56 = trunc i64 %sub.ptr.sub to i32, !dbg !11844
  %call57 = call i8* @ggc_alloc_string(i8* %libfunc_name.0, i32 %conv56) #6, !dbg !11845
  call void @set_conv_libfunc(%struct.convert_optab_d* %tab, i32 %tmode, i32 %fmode, i8* %call57) #8, !dbg !11846
  ret void, !dbg !11847
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_rtx_code(i32 %tcode, i8 zeroext %unsignedp) unnamed_addr #4 !dbg !11848 {
entry:
  call void @llvm.dbg.value(metadata i32 %tcode, metadata !11852, metadata !DIExpression()), !dbg !11855
  call void @llvm.dbg.value(metadata i8 %unsignedp, metadata !11853, metadata !DIExpression()), !dbg !11855
  switch i32 %tcode, label %sw.default [
    i32 101, label %sw.epilog
    i32 102, label %sw.bb1
    i32 97, label %sw.bb2
    i32 98, label %sw.bb3
    i32 99, label %sw.bb7
    i32 100, label %sw.bb11
    i32 103, label %sw.bb15
    i32 104, label %sw.bb16
    i32 105, label %sw.bb17
    i32 106, label %sw.bb18
    i32 107, label %sw.bb19
    i32 108, label %sw.bb20
    i32 109, label %sw.bb21
    i32 110, label %sw.bb22
  ], !dbg !11856

sw.bb1:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 80, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11857

sw.bb2:                                           ; preds = %entry
  %tobool = icmp eq i8 %unsignedp, 0, !dbg !11859
  %cond = select i1 %tobool, i32 85, i32 89, !dbg !11859
  call void @llvm.dbg.value(metadata i32 %cond, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11860

sw.bb3:                                           ; preds = %entry
  %tobool5 = icmp eq i8 %unsignedp, 0, !dbg !11861
  %cond6 = select i1 %tobool5, i32 84, i32 88, !dbg !11861
  call void @llvm.dbg.value(metadata i32 %cond6, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11862

sw.bb7:                                           ; preds = %entry
  %tobool9 = icmp eq i8 %unsignedp, 0, !dbg !11863
  %cond10 = select i1 %tobool9, i32 83, i32 87, !dbg !11863
  call void @llvm.dbg.value(metadata i32 %cond10, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11864

sw.bb11:                                          ; preds = %entry
  %tobool13 = icmp eq i8 %unsignedp, 0, !dbg !11865
  %cond14 = select i1 %tobool13, i32 82, i32 86, !dbg !11865
  call void @llvm.dbg.value(metadata i32 %cond14, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11866

sw.bb15:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 90, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11867

sw.bb16:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 91, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11868

sw.bb17:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 96, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11869

sw.bb18:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 95, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11870

sw.bb19:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 94, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11871

sw.bb20:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 93, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11872

sw.bb21:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 92, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11873

sw.bb22:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 97, metadata !11854, metadata !DIExpression()), !dbg !11855
  br label %sw.epilog, !dbg !11874

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 6847, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11875
  br label %sw.epilog, !dbg !11876

sw.epilog:                                        ; preds = %entry, %sw.default, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb11, %sw.bb7, %sw.bb3, %sw.bb2, %sw.bb1
  %code.0 = phi i32 [ undef, %sw.default ], [ 97, %sw.bb22 ], [ 92, %sw.bb21 ], [ 93, %sw.bb20 ], [ 94, %sw.bb19 ], [ 95, %sw.bb18 ], [ 96, %sw.bb17 ], [ 91, %sw.bb16 ], [ 90, %sw.bb15 ], [ %cond14, %sw.bb11 ], [ %cond10, %sw.bb7 ], [ %cond6, %sw.bb3 ], [ %cond, %sw.bb2 ], [ 80, %sw.bb1 ], [ 81, %entry ]
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !11854, metadata !DIExpression()), !dbg !11855
  ret i32 %code.0, !dbg !11877
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier) unnamed_addr #0 !dbg !11878 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !11882, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !11883, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.value(metadata i32 %mode, metadata !11884, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.value(metadata i32 1, metadata !11885, metadata !DIExpression()), !dbg !11886
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* null, i32 %mode, i32 1, %struct.rtx_def** null) #6, !dbg !11887
  ret %struct.rtx_def* %call, !dbg !11888
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3320, !3321, !3322}
!llvm.ident = !{!3323}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "convert_optab_table", scope: !2, file: !3, line: 76, type: !3305, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !2069, globals: !3239, nameTableKind: None)
!3 = !DIFile(filename: "optabs.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !147, !152, !157, !176, !183, !190, !384, !527, !2019, !2025, !2047, !2055, !2060}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !142, line: 363, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146}
!144 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !142, line: 355, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !153, line: 474, baseType: !7, size: 32, elements: !154)
!153 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!154 = !{!155, !156}
!155 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !158, line: 280, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175}
!160 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !158, line: 1817, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !158, line: 1805, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !158, line: 39, baseType: !7, size: 32, elements: !191)
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!192 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!281 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!282 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!283 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!284 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!285 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!286 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!287 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!288 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!289 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!290 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!291 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!292 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!293 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!294 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!295 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!296 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!297 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!298 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!299 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!300 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!301 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!302 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!303 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!304 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!305 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!307 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!308 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!309 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!310 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!311 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!312 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!313 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!314 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!315 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!316 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!317 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!318 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!319 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!320 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!321 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!322 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!323 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!324 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!325 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!326 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!327 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!328 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!329 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!330 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!331 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!332 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!333 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!334 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!335 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!336 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!337 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!338 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!339 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!340 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!341 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!342 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!343 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!344 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!356 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!357 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!358 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!359 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!360 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!361 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!377 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!378 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!379 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!380 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!381 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!382 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!383 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !385, line: 45, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526}
!387 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!397 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!398 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!399 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!400 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!401 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!402 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!403 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!404 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!405 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!406 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!407 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!408 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!409 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!410 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!411 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!412 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!413 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!414 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!415 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!416 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!417 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!418 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!419 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!420 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!421 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!422 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!423 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!424 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!425 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!426 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!427 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!428 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!429 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!430 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!431 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!432 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!433 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!434 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!435 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!436 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!437 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!438 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!439 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!440 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!441 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!442 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!443 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!444 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!445 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!446 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!447 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!448 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!449 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!450 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!451 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!452 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!453 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!454 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!455 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!456 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!457 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!458 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!459 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!460 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!461 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!462 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!463 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!464 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!465 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!466 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!467 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!468 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!469 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!470 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!471 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!472 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!473 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!474 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!475 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!476 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!477 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!478 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!479 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!480 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!481 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!482 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!483 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!484 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!485 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!486 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!487 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!488 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!489 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!490 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!491 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!492 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!493 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!494 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!495 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!496 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!497 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!498 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!499 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!500 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!501 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!502 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!503 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!504 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!505 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!506 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!507 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!508 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!509 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!510 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!511 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!512 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!513 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!514 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!515 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!517 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!518 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!519 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!520 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!521 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!522 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!523 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!524 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!525 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!526 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!527 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insn_code", file: !528, line: 7, baseType: !7, size: 32, elements: !529)
!528 = !DIFile(filename: "./insn-codes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!529 = !{!530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018}
!530 = !DIEnumerator(name: "CODE_FOR_x86_fnstsw_1", value: 30, isUnsigned: true)
!531 = !DIEnumerator(name: "CODE_FOR_x86_sahf_1", value: 31, isUnsigned: true)
!532 = !DIEnumerator(name: "CODE_FOR_popsi1", value: 41, isUnsigned: true)
!533 = !DIEnumerator(name: "CODE_FOR_movsi_insv_1", value: 63, isUnsigned: true)
!534 = !DIEnumerator(name: "CODE_FOR_swapxf", value: 83, isUnsigned: true)
!535 = !DIEnumerator(name: "CODE_FOR_zero_extendhisi2_and", value: 84, isUnsigned: true)
!536 = !DIEnumerator(name: "CODE_FOR_zero_extendsidi2_32", value: 92, isUnsigned: true)
!537 = !DIEnumerator(name: "CODE_FOR_extendhisi2", value: 94, isUnsigned: true)
!538 = !DIEnumerator(name: "CODE_FOR_extendqihi2", value: 95, isUnsigned: true)
!539 = !DIEnumerator(name: "CODE_FOR_extendqisi2", value: 96, isUnsigned: true)
!540 = !DIEnumerator(name: "CODE_FOR_truncxfsf2_i387_noop", value: 110, isUnsigned: true)
!541 = !DIEnumerator(name: "CODE_FOR_truncxfdf2_i387_noop", value: 111, isUnsigned: true)
!542 = !DIEnumerator(name: "CODE_FOR_fix_truncsfsi_sse", value: 116, isUnsigned: true)
!543 = !DIEnumerator(name: "CODE_FOR_fix_truncdfsi_sse", value: 117, isUnsigned: true)
!544 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_fisttp_i387_1", value: 118, isUnsigned: true)
!545 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_fisttp_i387_1", value: 119, isUnsigned: true)
!546 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_fisttp_i387_1", value: 120, isUnsigned: true)
!547 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_fisttp", value: 121, isUnsigned: true)
!548 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_fisttp", value: 122, isUnsigned: true)
!549 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_fisttp", value: 123, isUnsigned: true)
!550 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_fisttp_with_temp", value: 124, isUnsigned: true)
!551 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_fisttp_with_temp", value: 125, isUnsigned: true)
!552 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_fisttp_with_temp", value: 126, isUnsigned: true)
!553 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387", value: 130, isUnsigned: true)
!554 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_with_temp", value: 131, isUnsigned: true)
!555 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387", value: 132, isUnsigned: true)
!556 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387", value: 133, isUnsigned: true)
!557 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_with_temp", value: 134, isUnsigned: true)
!558 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_with_temp", value: 135, isUnsigned: true)
!559 = !DIEnumerator(name: "CODE_FOR_x86_fnstcw_1", value: 136, isUnsigned: true)
!560 = !DIEnumerator(name: "CODE_FOR_x86_fldcw_1", value: 137, isUnsigned: true)
!561 = !DIEnumerator(name: "CODE_FOR_floatdisf2_i387_with_xmm", value: 185, isUnsigned: true)
!562 = !DIEnumerator(name: "CODE_FOR_floatdidf2_i387_with_xmm", value: 186, isUnsigned: true)
!563 = !DIEnumerator(name: "CODE_FOR_floatdixf2_i387_with_xmm", value: 187, isUnsigned: true)
!564 = !DIEnumerator(name: "CODE_FOR_addqi3_cc", value: 195, isUnsigned: true)
!565 = !DIEnumerator(name: "CODE_FOR_addqi_ext_1", value: 219, isUnsigned: true)
!566 = !DIEnumerator(name: "CODE_FOR_divqi3", value: 271, isUnsigned: true)
!567 = !DIEnumerator(name: "CODE_FOR_udivqi3", value: 272, isUnsigned: true)
!568 = !DIEnumerator(name: "CODE_FOR_andqi_ext_0", value: 298, isUnsigned: true)
!569 = !DIEnumerator(name: "CODE_FOR_copysignsf3_const", value: 367, isUnsigned: true)
!570 = !DIEnumerator(name: "CODE_FOR_copysigndf3_const", value: 368, isUnsigned: true)
!571 = !DIEnumerator(name: "CODE_FOR_copysigntf3_const", value: 369, isUnsigned: true)
!572 = !DIEnumerator(name: "CODE_FOR_copysignsf3_var", value: 370, isUnsigned: true)
!573 = !DIEnumerator(name: "CODE_FOR_copysigndf3_var", value: 371, isUnsigned: true)
!574 = !DIEnumerator(name: "CODE_FOR_copysigntf3_var", value: 372, isUnsigned: true)
!575 = !DIEnumerator(name: "CODE_FOR_x86_shld", value: 382, isUnsigned: true)
!576 = !DIEnumerator(name: "CODE_FOR_x86_shrd", value: 395, isUnsigned: true)
!577 = !DIEnumerator(name: "CODE_FOR_ix86_rotldi3", value: 438, isUnsigned: true)
!578 = !DIEnumerator(name: "CODE_FOR_ix86_rotrdi3", value: 447, isUnsigned: true)
!579 = !DIEnumerator(name: "CODE_FOR_jump", value: 478, isUnsigned: true)
!580 = !DIEnumerator(name: "CODE_FOR_blockage", value: 487, isUnsigned: true)
!581 = !DIEnumerator(name: "CODE_FOR_prologue_use", value: 489, isUnsigned: true)
!582 = !DIEnumerator(name: "CODE_FOR_return_internal", value: 490, isUnsigned: true)
!583 = !DIEnumerator(name: "CODE_FOR_return_internal_long", value: 491, isUnsigned: true)
!584 = !DIEnumerator(name: "CODE_FOR_return_pop_internal", value: 492, isUnsigned: true)
!585 = !DIEnumerator(name: "CODE_FOR_return_indirect_internal", value: 493, isUnsigned: true)
!586 = !DIEnumerator(name: "CODE_FOR_nop", value: 494, isUnsigned: true)
!587 = !DIEnumerator(name: "CODE_FOR_vswapmov", value: 495, isUnsigned: true)
!588 = !DIEnumerator(name: "CODE_FOR_pad", value: 496, isUnsigned: true)
!589 = !DIEnumerator(name: "CODE_FOR_set_got", value: 497, isUnsigned: true)
!590 = !DIEnumerator(name: "CODE_FOR_set_got_labelled", value: 498, isUnsigned: true)
!591 = !DIEnumerator(name: "CODE_FOR_eh_return_internal", value: 499, isUnsigned: true)
!592 = !DIEnumerator(name: "CODE_FOR_leave", value: 500, isUnsigned: true)
!593 = !DIEnumerator(name: "CODE_FOR_ctzsi2", value: 503, isUnsigned: true)
!594 = !DIEnumerator(name: "CODE_FOR_clzsi2_abm", value: 504, isUnsigned: true)
!595 = !DIEnumerator(name: "CODE_FOR_bsr", value: 505, isUnsigned: true)
!596 = !DIEnumerator(name: "CODE_FOR_popcounthi2", value: 506, isUnsigned: true)
!597 = !DIEnumerator(name: "CODE_FOR_popcountsi2", value: 507, isUnsigned: true)
!598 = !DIEnumerator(name: "CODE_FOR_bswaphi_lowpart", value: 514, isUnsigned: true)
!599 = !DIEnumerator(name: "CODE_FOR_clzhi2_abm", value: 515, isUnsigned: true)
!600 = !DIEnumerator(name: "CODE_FOR_paritydi2_cmp", value: 517, isUnsigned: true)
!601 = !DIEnumerator(name: "CODE_FOR_paritysi2_cmp", value: 518, isUnsigned: true)
!602 = !DIEnumerator(name: "CODE_FOR_truncxfsf2_i387_noop_unspec", value: 573, isUnsigned: true)
!603 = !DIEnumerator(name: "CODE_FOR_truncxfdf2_i387_noop_unspec", value: 574, isUnsigned: true)
!604 = !DIEnumerator(name: "CODE_FOR_sqrtxf2", value: 575, isUnsigned: true)
!605 = !DIEnumerator(name: "CODE_FOR_sqrt_extendsfxf2_i387", value: 576, isUnsigned: true)
!606 = !DIEnumerator(name: "CODE_FOR_sqrt_extenddfxf2_i387", value: 577, isUnsigned: true)
!607 = !DIEnumerator(name: "CODE_FOR_fpremxf4_i387", value: 581, isUnsigned: true)
!608 = !DIEnumerator(name: "CODE_FOR_fprem1xf4_i387", value: 582, isUnsigned: true)
!609 = !DIEnumerator(name: "CODE_FOR_sincosxf3", value: 589, isUnsigned: true)
!610 = !DIEnumerator(name: "CODE_FOR_sincos_extendsfxf3_i387", value: 590, isUnsigned: true)
!611 = !DIEnumerator(name: "CODE_FOR_sincos_extenddfxf3_i387", value: 591, isUnsigned: true)
!612 = !DIEnumerator(name: "CODE_FOR_fptanxf4_i387", value: 592, isUnsigned: true)
!613 = !DIEnumerator(name: "CODE_FOR_fptan_extendsfxf4_i387", value: 593, isUnsigned: true)
!614 = !DIEnumerator(name: "CODE_FOR_fptan_extenddfxf4_i387", value: 594, isUnsigned: true)
!615 = !DIEnumerator(name: "CODE_FOR_fpatan_extendsfxf3_i387", value: 596, isUnsigned: true)
!616 = !DIEnumerator(name: "CODE_FOR_fpatan_extenddfxf3_i387", value: 597, isUnsigned: true)
!617 = !DIEnumerator(name: "CODE_FOR_fyl2xxf3_i387", value: 598, isUnsigned: true)
!618 = !DIEnumerator(name: "CODE_FOR_fyl2x_extendsfxf3_i387", value: 599, isUnsigned: true)
!619 = !DIEnumerator(name: "CODE_FOR_fyl2x_extenddfxf3_i387", value: 600, isUnsigned: true)
!620 = !DIEnumerator(name: "CODE_FOR_fyl2xp1xf3_i387", value: 601, isUnsigned: true)
!621 = !DIEnumerator(name: "CODE_FOR_fyl2xp1_extendsfxf3_i387", value: 602, isUnsigned: true)
!622 = !DIEnumerator(name: "CODE_FOR_fyl2xp1_extenddfxf3_i387", value: 603, isUnsigned: true)
!623 = !DIEnumerator(name: "CODE_FOR_fxtractxf3_i387", value: 604, isUnsigned: true)
!624 = !DIEnumerator(name: "CODE_FOR_fxtract_extendsfxf3_i387", value: 605, isUnsigned: true)
!625 = !DIEnumerator(name: "CODE_FOR_fxtract_extenddfxf3_i387", value: 606, isUnsigned: true)
!626 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundsf2", value: 609, isUnsigned: true)
!627 = !DIEnumerator(name: "CODE_FOR_sse4_1_rounddf2", value: 610, isUnsigned: true)
!628 = !DIEnumerator(name: "CODE_FOR_rintxf2", value: 611, isUnsigned: true)
!629 = !DIEnumerator(name: "CODE_FOR_fistdi2", value: 613, isUnsigned: true)
!630 = !DIEnumerator(name: "CODE_FOR_fistdi2_with_temp", value: 614, isUnsigned: true)
!631 = !DIEnumerator(name: "CODE_FOR_fisthi2", value: 617, isUnsigned: true)
!632 = !DIEnumerator(name: "CODE_FOR_fistsi2", value: 618, isUnsigned: true)
!633 = !DIEnumerator(name: "CODE_FOR_fisthi2_with_temp", value: 619, isUnsigned: true)
!634 = !DIEnumerator(name: "CODE_FOR_fistsi2_with_temp", value: 620, isUnsigned: true)
!635 = !DIEnumerator(name: "CODE_FOR_frndintxf2_floor", value: 621, isUnsigned: true)
!636 = !DIEnumerator(name: "CODE_FOR_frndintxf2_floor_i387", value: 622, isUnsigned: true)
!637 = !DIEnumerator(name: "CODE_FOR_fistdi2_floor", value: 626, isUnsigned: true)
!638 = !DIEnumerator(name: "CODE_FOR_fistdi2_floor_with_temp", value: 627, isUnsigned: true)
!639 = !DIEnumerator(name: "CODE_FOR_fisthi2_floor", value: 628, isUnsigned: true)
!640 = !DIEnumerator(name: "CODE_FOR_fistsi2_floor", value: 629, isUnsigned: true)
!641 = !DIEnumerator(name: "CODE_FOR_fisthi2_floor_with_temp", value: 630, isUnsigned: true)
!642 = !DIEnumerator(name: "CODE_FOR_fistsi2_floor_with_temp", value: 631, isUnsigned: true)
!643 = !DIEnumerator(name: "CODE_FOR_frndintxf2_ceil", value: 632, isUnsigned: true)
!644 = !DIEnumerator(name: "CODE_FOR_frndintxf2_ceil_i387", value: 633, isUnsigned: true)
!645 = !DIEnumerator(name: "CODE_FOR_fistdi2_ceil", value: 637, isUnsigned: true)
!646 = !DIEnumerator(name: "CODE_FOR_fistdi2_ceil_with_temp", value: 638, isUnsigned: true)
!647 = !DIEnumerator(name: "CODE_FOR_fisthi2_ceil", value: 639, isUnsigned: true)
!648 = !DIEnumerator(name: "CODE_FOR_fistsi2_ceil", value: 640, isUnsigned: true)
!649 = !DIEnumerator(name: "CODE_FOR_fisthi2_ceil_with_temp", value: 641, isUnsigned: true)
!650 = !DIEnumerator(name: "CODE_FOR_fistsi2_ceil_with_temp", value: 642, isUnsigned: true)
!651 = !DIEnumerator(name: "CODE_FOR_frndintxf2_trunc", value: 643, isUnsigned: true)
!652 = !DIEnumerator(name: "CODE_FOR_frndintxf2_trunc_i387", value: 644, isUnsigned: true)
!653 = !DIEnumerator(name: "CODE_FOR_frndintxf2_mask_pm", value: 645, isUnsigned: true)
!654 = !DIEnumerator(name: "CODE_FOR_frndintxf2_mask_pm_i387", value: 646, isUnsigned: true)
!655 = !DIEnumerator(name: "CODE_FOR_fxamsf2_i387", value: 647, isUnsigned: true)
!656 = !DIEnumerator(name: "CODE_FOR_fxamdf2_i387", value: 648, isUnsigned: true)
!657 = !DIEnumerator(name: "CODE_FOR_fxamxf2_i387", value: 649, isUnsigned: true)
!658 = !DIEnumerator(name: "CODE_FOR_fxamsf2_i387_with_temp", value: 650, isUnsigned: true)
!659 = !DIEnumerator(name: "CODE_FOR_fxamdf2_i387_with_temp", value: 651, isUnsigned: true)
!660 = !DIEnumerator(name: "CODE_FOR_cld", value: 652, isUnsigned: true)
!661 = !DIEnumerator(name: "CODE_FOR_smaxsf3", value: 681, isUnsigned: true)
!662 = !DIEnumerator(name: "CODE_FOR_sminsf3", value: 682, isUnsigned: true)
!663 = !DIEnumerator(name: "CODE_FOR_smaxdf3", value: 683, isUnsigned: true)
!664 = !DIEnumerator(name: "CODE_FOR_smindf3", value: 684, isUnsigned: true)
!665 = !DIEnumerator(name: "CODE_FOR_pro_epilogue_adjust_stack_1", value: 693, isUnsigned: true)
!666 = !DIEnumerator(name: "CODE_FOR_allocate_stack_worker_32", value: 694, isUnsigned: true)
!667 = !DIEnumerator(name: "CODE_FOR_trap", value: 701, isUnsigned: true)
!668 = !DIEnumerator(name: "CODE_FOR_stack_protect_set_si", value: 704, isUnsigned: true)
!669 = !DIEnumerator(name: "CODE_FOR_stack_tls_protect_set_si", value: 705, isUnsigned: true)
!670 = !DIEnumerator(name: "CODE_FOR_stack_protect_test_si", value: 706, isUnsigned: true)
!671 = !DIEnumerator(name: "CODE_FOR_stack_tls_protect_test_si", value: 707, isUnsigned: true)
!672 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32qi", value: 708, isUnsigned: true)
!673 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32hi", value: 709, isUnsigned: true)
!674 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32si", value: 710, isUnsigned: true)
!675 = !DIEnumerator(name: "CODE_FOR_lwp_slwpcbsi", value: 715, isUnsigned: true)
!676 = !DIEnumerator(name: "CODE_FOR_sse_movntdi", value: 728, isUnsigned: true)
!677 = !DIEnumerator(name: "CODE_FOR_mmx_rcpv2sf2", value: 736, isUnsigned: true)
!678 = !DIEnumerator(name: "CODE_FOR_mmx_rcpit1v2sf3", value: 737, isUnsigned: true)
!679 = !DIEnumerator(name: "CODE_FOR_mmx_rcpit2v2sf3", value: 738, isUnsigned: true)
!680 = !DIEnumerator(name: "CODE_FOR_mmx_rsqrtv2sf2", value: 739, isUnsigned: true)
!681 = !DIEnumerator(name: "CODE_FOR_mmx_rsqit1v2sf3", value: 740, isUnsigned: true)
!682 = !DIEnumerator(name: "CODE_FOR_mmx_haddv2sf3", value: 741, isUnsigned: true)
!683 = !DIEnumerator(name: "CODE_FOR_mmx_hsubv2sf3", value: 742, isUnsigned: true)
!684 = !DIEnumerator(name: "CODE_FOR_mmx_addsubv2sf3", value: 743, isUnsigned: true)
!685 = !DIEnumerator(name: "CODE_FOR_mmx_gtv2sf3", value: 745, isUnsigned: true)
!686 = !DIEnumerator(name: "CODE_FOR_mmx_gev2sf3", value: 746, isUnsigned: true)
!687 = !DIEnumerator(name: "CODE_FOR_mmx_pf2id", value: 747, isUnsigned: true)
!688 = !DIEnumerator(name: "CODE_FOR_mmx_pf2iw", value: 748, isUnsigned: true)
!689 = !DIEnumerator(name: "CODE_FOR_mmx_pi2fw", value: 749, isUnsigned: true)
!690 = !DIEnumerator(name: "CODE_FOR_mmx_floatv2si2", value: 750, isUnsigned: true)
!691 = !DIEnumerator(name: "CODE_FOR_mmx_pswapdv2sf2", value: 751, isUnsigned: true)
!692 = !DIEnumerator(name: "CODE_FOR_mmx_ashrv4hi3", value: 782, isUnsigned: true)
!693 = !DIEnumerator(name: "CODE_FOR_mmx_ashrv2si3", value: 783, isUnsigned: true)
!694 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv4hi3", value: 784, isUnsigned: true)
!695 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv2si3", value: 785, isUnsigned: true)
!696 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv1di3", value: 786, isUnsigned: true)
!697 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv4hi3", value: 787, isUnsigned: true)
!698 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv2si3", value: 788, isUnsigned: true)
!699 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv1di3", value: 789, isUnsigned: true)
!700 = !DIEnumerator(name: "CODE_FOR_mmx_gtv8qi3", value: 793, isUnsigned: true)
!701 = !DIEnumerator(name: "CODE_FOR_mmx_gtv4hi3", value: 794, isUnsigned: true)
!702 = !DIEnumerator(name: "CODE_FOR_mmx_gtv2si3", value: 795, isUnsigned: true)
!703 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv8qi3", value: 796, isUnsigned: true)
!704 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv4hi3", value: 797, isUnsigned: true)
!705 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv2si3", value: 798, isUnsigned: true)
!706 = !DIEnumerator(name: "CODE_FOR_mmx_packsswb", value: 808, isUnsigned: true)
!707 = !DIEnumerator(name: "CODE_FOR_mmx_packssdw", value: 809, isUnsigned: true)
!708 = !DIEnumerator(name: "CODE_FOR_mmx_packuswb", value: 810, isUnsigned: true)
!709 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhbw", value: 811, isUnsigned: true)
!710 = !DIEnumerator(name: "CODE_FOR_mmx_punpcklbw", value: 812, isUnsigned: true)
!711 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhwd", value: 813, isUnsigned: true)
!712 = !DIEnumerator(name: "CODE_FOR_mmx_punpcklwd", value: 814, isUnsigned: true)
!713 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhdq", value: 815, isUnsigned: true)
!714 = !DIEnumerator(name: "CODE_FOR_mmx_punpckldq", value: 816, isUnsigned: true)
!715 = !DIEnumerator(name: "CODE_FOR_mmx_pextrw", value: 818, isUnsigned: true)
!716 = !DIEnumerator(name: "CODE_FOR_mmx_pshufw_1", value: 819, isUnsigned: true)
!717 = !DIEnumerator(name: "CODE_FOR_mmx_pswapdv2si2", value: 820, isUnsigned: true)
!718 = !DIEnumerator(name: "CODE_FOR_mmx_psadbw", value: 828, isUnsigned: true)
!719 = !DIEnumerator(name: "CODE_FOR_mmx_pmovmskb", value: 829, isUnsigned: true)
!720 = !DIEnumerator(name: "CODE_FOR_movdi_to_sse", value: 853, isUnsigned: true)
!721 = !DIEnumerator(name: "CODE_FOR_avx_movups", value: 854, isUnsigned: true)
!722 = !DIEnumerator(name: "CODE_FOR_avx_movupd", value: 855, isUnsigned: true)
!723 = !DIEnumerator(name: "CODE_FOR_avx_movups256", value: 856, isUnsigned: true)
!724 = !DIEnumerator(name: "CODE_FOR_avx_movupd256", value: 857, isUnsigned: true)
!725 = !DIEnumerator(name: "CODE_FOR_sse2_movq128", value: 858, isUnsigned: true)
!726 = !DIEnumerator(name: "CODE_FOR_sse_movups", value: 859, isUnsigned: true)
!727 = !DIEnumerator(name: "CODE_FOR_sse2_movupd", value: 860, isUnsigned: true)
!728 = !DIEnumerator(name: "CODE_FOR_avx_movdqu256", value: 861, isUnsigned: true)
!729 = !DIEnumerator(name: "CODE_FOR_avx_movdqu", value: 862, isUnsigned: true)
!730 = !DIEnumerator(name: "CODE_FOR_sse2_movdqu", value: 863, isUnsigned: true)
!731 = !DIEnumerator(name: "CODE_FOR_avx_movntv4sf", value: 864, isUnsigned: true)
!732 = !DIEnumerator(name: "CODE_FOR_avx_movntv2df", value: 865, isUnsigned: true)
!733 = !DIEnumerator(name: "CODE_FOR_avx_movntv8sf", value: 866, isUnsigned: true)
!734 = !DIEnumerator(name: "CODE_FOR_avx_movntv4df", value: 867, isUnsigned: true)
!735 = !DIEnumerator(name: "CODE_FOR_sse_movntv4sf", value: 868, isUnsigned: true)
!736 = !DIEnumerator(name: "CODE_FOR_sse2_movntv2df", value: 869, isUnsigned: true)
!737 = !DIEnumerator(name: "CODE_FOR_avx_movntv4di", value: 870, isUnsigned: true)
!738 = !DIEnumerator(name: "CODE_FOR_avx_movntv2di", value: 871, isUnsigned: true)
!739 = !DIEnumerator(name: "CODE_FOR_sse2_movntv2di", value: 872, isUnsigned: true)
!740 = !DIEnumerator(name: "CODE_FOR_sse2_movntsi", value: 873, isUnsigned: true)
!741 = !DIEnumerator(name: "CODE_FOR_avx_lddqu256", value: 874, isUnsigned: true)
!742 = !DIEnumerator(name: "CODE_FOR_avx_lddqu", value: 875, isUnsigned: true)
!743 = !DIEnumerator(name: "CODE_FOR_sse3_lddqu", value: 876, isUnsigned: true)
!744 = !DIEnumerator(name: "CODE_FOR_sse_vmaddv4sf3", value: 893, isUnsigned: true)
!745 = !DIEnumerator(name: "CODE_FOR_sse_vmsubv4sf3", value: 894, isUnsigned: true)
!746 = !DIEnumerator(name: "CODE_FOR_sse2_vmaddv2df3", value: 895, isUnsigned: true)
!747 = !DIEnumerator(name: "CODE_FOR_sse2_vmsubv2df3", value: 896, isUnsigned: true)
!748 = !DIEnumerator(name: "CODE_FOR_sse_vmmulv4sf3", value: 905, isUnsigned: true)
!749 = !DIEnumerator(name: "CODE_FOR_sse2_vmmulv2df3", value: 906, isUnsigned: true)
!750 = !DIEnumerator(name: "CODE_FOR_avx_divv4sf3", value: 907, isUnsigned: true)
!751 = !DIEnumerator(name: "CODE_FOR_avx_divv2df3", value: 908, isUnsigned: true)
!752 = !DIEnumerator(name: "CODE_FOR_avx_divv8sf3", value: 909, isUnsigned: true)
!753 = !DIEnumerator(name: "CODE_FOR_avx_divv4df3", value: 910, isUnsigned: true)
!754 = !DIEnumerator(name: "CODE_FOR_sse_divv4sf3", value: 913, isUnsigned: true)
!755 = !DIEnumerator(name: "CODE_FOR_sse2_divv2df3", value: 914, isUnsigned: true)
!756 = !DIEnumerator(name: "CODE_FOR_sse_vmdivv4sf3", value: 917, isUnsigned: true)
!757 = !DIEnumerator(name: "CODE_FOR_sse2_vmdivv2df3", value: 918, isUnsigned: true)
!758 = !DIEnumerator(name: "CODE_FOR_avx_rcpv8sf2", value: 919, isUnsigned: true)
!759 = !DIEnumerator(name: "CODE_FOR_sse_rcpv4sf2", value: 920, isUnsigned: true)
!760 = !DIEnumerator(name: "CODE_FOR_sse_vmrcpv4sf2", value: 922, isUnsigned: true)
!761 = !DIEnumerator(name: "CODE_FOR_avx_sqrtv8sf2", value: 923, isUnsigned: true)
!762 = !DIEnumerator(name: "CODE_FOR_sse_sqrtv4sf2", value: 924, isUnsigned: true)
!763 = !DIEnumerator(name: "CODE_FOR_sqrtv4df2", value: 925, isUnsigned: true)
!764 = !DIEnumerator(name: "CODE_FOR_sqrtv2df2", value: 926, isUnsigned: true)
!765 = !DIEnumerator(name: "CODE_FOR_sse_vmsqrtv4sf2", value: 929, isUnsigned: true)
!766 = !DIEnumerator(name: "CODE_FOR_sse2_vmsqrtv2df2", value: 930, isUnsigned: true)
!767 = !DIEnumerator(name: "CODE_FOR_avx_rsqrtv8sf2", value: 931, isUnsigned: true)
!768 = !DIEnumerator(name: "CODE_FOR_sse_rsqrtv4sf2", value: 932, isUnsigned: true)
!769 = !DIEnumerator(name: "CODE_FOR_sse_vmrsqrtv4sf2", value: 934, isUnsigned: true)
!770 = !DIEnumerator(name: "CODE_FOR_sse_vmsmaxv4sf3", value: 963, isUnsigned: true)
!771 = !DIEnumerator(name: "CODE_FOR_sse_vmsminv4sf3", value: 964, isUnsigned: true)
!772 = !DIEnumerator(name: "CODE_FOR_sse2_vmsmaxv2df3", value: 965, isUnsigned: true)
!773 = !DIEnumerator(name: "CODE_FOR_sse2_vmsminv2df3", value: 966, isUnsigned: true)
!774 = !DIEnumerator(name: "CODE_FOR_avx_addsubv8sf3", value: 979, isUnsigned: true)
!775 = !DIEnumerator(name: "CODE_FOR_avx_addsubv4df3", value: 980, isUnsigned: true)
!776 = !DIEnumerator(name: "CODE_FOR_sse3_addsubv4sf3", value: 982, isUnsigned: true)
!777 = !DIEnumerator(name: "CODE_FOR_sse3_addsubv2df3", value: 984, isUnsigned: true)
!778 = !DIEnumerator(name: "CODE_FOR_avx_haddv4df3", value: 985, isUnsigned: true)
!779 = !DIEnumerator(name: "CODE_FOR_avx_hsubv4df3", value: 986, isUnsigned: true)
!780 = !DIEnumerator(name: "CODE_FOR_avx_haddv8sf3", value: 987, isUnsigned: true)
!781 = !DIEnumerator(name: "CODE_FOR_avx_hsubv8sf3", value: 988, isUnsigned: true)
!782 = !DIEnumerator(name: "CODE_FOR_sse3_haddv4sf3", value: 991, isUnsigned: true)
!783 = !DIEnumerator(name: "CODE_FOR_sse3_hsubv4sf3", value: 992, isUnsigned: true)
!784 = !DIEnumerator(name: "CODE_FOR_sse3_haddv2df3", value: 995, isUnsigned: true)
!785 = !DIEnumerator(name: "CODE_FOR_sse3_hsubv2df3", value: 996, isUnsigned: true)
!786 = !DIEnumerator(name: "CODE_FOR_avx_cmppsv4sf3", value: 997, isUnsigned: true)
!787 = !DIEnumerator(name: "CODE_FOR_avx_cmppdv2df3", value: 998, isUnsigned: true)
!788 = !DIEnumerator(name: "CODE_FOR_avx_cmppsv8sf3", value: 999, isUnsigned: true)
!789 = !DIEnumerator(name: "CODE_FOR_avx_cmppdv4df3", value: 1000, isUnsigned: true)
!790 = !DIEnumerator(name: "CODE_FOR_avx_cmpssv4sf3", value: 1001, isUnsigned: true)
!791 = !DIEnumerator(name: "CODE_FOR_avx_cmpsdv2df3", value: 1002, isUnsigned: true)
!792 = !DIEnumerator(name: "CODE_FOR_sse_maskcmpsf3", value: 1007, isUnsigned: true)
!793 = !DIEnumerator(name: "CODE_FOR_sse2_maskcmpdf3", value: 1008, isUnsigned: true)
!794 = !DIEnumerator(name: "CODE_FOR_sse_maskcmpv4sf3", value: 1009, isUnsigned: true)
!795 = !DIEnumerator(name: "CODE_FOR_sse2_maskcmpv2df3", value: 1010, isUnsigned: true)
!796 = !DIEnumerator(name: "CODE_FOR_sse_vmmaskcmpv4sf3", value: 1011, isUnsigned: true)
!797 = !DIEnumerator(name: "CODE_FOR_sse2_vmmaskcmpv2df3", value: 1012, isUnsigned: true)
!798 = !DIEnumerator(name: "CODE_FOR_sse_comi", value: 1013, isUnsigned: true)
!799 = !DIEnumerator(name: "CODE_FOR_sse2_comi", value: 1014, isUnsigned: true)
!800 = !DIEnumerator(name: "CODE_FOR_sse_ucomi", value: 1015, isUnsigned: true)
!801 = !DIEnumerator(name: "CODE_FOR_sse2_ucomi", value: 1016, isUnsigned: true)
!802 = !DIEnumerator(name: "CODE_FOR_avx_andnotv4sf3", value: 1017, isUnsigned: true)
!803 = !DIEnumerator(name: "CODE_FOR_avx_andnotv2df3", value: 1018, isUnsigned: true)
!804 = !DIEnumerator(name: "CODE_FOR_avx_andnotv8sf3", value: 1019, isUnsigned: true)
!805 = !DIEnumerator(name: "CODE_FOR_avx_andnotv4df3", value: 1020, isUnsigned: true)
!806 = !DIEnumerator(name: "CODE_FOR_sse_andnotv4sf3", value: 1021, isUnsigned: true)
!807 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv2df3", value: 1022, isUnsigned: true)
!808 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv8sf4256", value: 1057, isUnsigned: true)
!809 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv4df4256", value: 1058, isUnsigned: true)
!810 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv8sf4256", value: 1059, isUnsigned: true)
!811 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv4df4256", value: 1060, isUnsigned: true)
!812 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv8sf4256", value: 1061, isUnsigned: true)
!813 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv4df4256", value: 1062, isUnsigned: true)
!814 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv8sf4256", value: 1063, isUnsigned: true)
!815 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv4df4256", value: 1064, isUnsigned: true)
!816 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsf4", value: 1065, isUnsigned: true)
!817 = !DIEnumerator(name: "CODE_FOR_fma4_fmadddf4", value: 1066, isUnsigned: true)
!818 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv4sf4", value: 1067, isUnsigned: true)
!819 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv2df4", value: 1068, isUnsigned: true)
!820 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmaddv4sf4", value: 1069, isUnsigned: true)
!821 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmaddv2df4", value: 1070, isUnsigned: true)
!822 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubsf4", value: 1071, isUnsigned: true)
!823 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubdf4", value: 1072, isUnsigned: true)
!824 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv4sf4", value: 1073, isUnsigned: true)
!825 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv2df4", value: 1074, isUnsigned: true)
!826 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmsubv4sf4", value: 1075, isUnsigned: true)
!827 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmsubv2df4", value: 1076, isUnsigned: true)
!828 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddsf4", value: 1077, isUnsigned: true)
!829 = !DIEnumerator(name: "CODE_FOR_fma4_fnmadddf4", value: 1078, isUnsigned: true)
!830 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv4sf4", value: 1079, isUnsigned: true)
!831 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv2df4", value: 1080, isUnsigned: true)
!832 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmaddv4sf4", value: 1081, isUnsigned: true)
!833 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmaddv2df4", value: 1082, isUnsigned: true)
!834 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubsf4", value: 1083, isUnsigned: true)
!835 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubdf4", value: 1084, isUnsigned: true)
!836 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv4sf4", value: 1085, isUnsigned: true)
!837 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv2df4", value: 1086, isUnsigned: true)
!838 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmsubv4sf4", value: 1087, isUnsigned: true)
!839 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmsubv2df4", value: 1088, isUnsigned: true)
!840 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv8sf4256", value: 1089, isUnsigned: true)
!841 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv4df4256", value: 1090, isUnsigned: true)
!842 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv8sf4256", value: 1091, isUnsigned: true)
!843 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv4df4256", value: 1092, isUnsigned: true)
!844 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv8sf4256", value: 1093, isUnsigned: true)
!845 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv4df4256", value: 1094, isUnsigned: true)
!846 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv8sf4256", value: 1095, isUnsigned: true)
!847 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv4df4256", value: 1096, isUnsigned: true)
!848 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv4sf4", value: 1097, isUnsigned: true)
!849 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv2df4", value: 1098, isUnsigned: true)
!850 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv4sf4", value: 1099, isUnsigned: true)
!851 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv2df4", value: 1100, isUnsigned: true)
!852 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv4sf4", value: 1101, isUnsigned: true)
!853 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv2df4", value: 1102, isUnsigned: true)
!854 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv4sf4", value: 1103, isUnsigned: true)
!855 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv2df4", value: 1104, isUnsigned: true)
!856 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmaddv4sf4", value: 1105, isUnsigned: true)
!857 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmaddv2df4", value: 1106, isUnsigned: true)
!858 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmsubv4sf4", value: 1107, isUnsigned: true)
!859 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmsubv2df4", value: 1108, isUnsigned: true)
!860 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmaddv4sf4", value: 1109, isUnsigned: true)
!861 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmaddv2df4", value: 1110, isUnsigned: true)
!862 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmsubv4sf4", value: 1111, isUnsigned: true)
!863 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmsubv2df4", value: 1112, isUnsigned: true)
!864 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv8sf4", value: 1113, isUnsigned: true)
!865 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv4df4", value: 1114, isUnsigned: true)
!866 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv4sf4", value: 1115, isUnsigned: true)
!867 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv2df4", value: 1116, isUnsigned: true)
!868 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv8sf4", value: 1117, isUnsigned: true)
!869 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv4df4", value: 1118, isUnsigned: true)
!870 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv4sf4", value: 1119, isUnsigned: true)
!871 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv2df4", value: 1120, isUnsigned: true)
!872 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv8sf4", value: 1121, isUnsigned: true)
!873 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv4df4", value: 1122, isUnsigned: true)
!874 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv4sf4", value: 1123, isUnsigned: true)
!875 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv2df4", value: 1124, isUnsigned: true)
!876 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv8sf4", value: 1125, isUnsigned: true)
!877 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv4df4", value: 1126, isUnsigned: true)
!878 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv4sf4", value: 1127, isUnsigned: true)
!879 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv2df4", value: 1128, isUnsigned: true)
!880 = !DIEnumerator(name: "CODE_FOR_sse_cvtpi2ps", value: 1129, isUnsigned: true)
!881 = !DIEnumerator(name: "CODE_FOR_sse_cvtps2pi", value: 1130, isUnsigned: true)
!882 = !DIEnumerator(name: "CODE_FOR_sse_cvttps2pi", value: 1131, isUnsigned: true)
!883 = !DIEnumerator(name: "CODE_FOR_sse_cvtsi2ss", value: 1133, isUnsigned: true)
!884 = !DIEnumerator(name: "CODE_FOR_sse_cvtss2si", value: 1134, isUnsigned: true)
!885 = !DIEnumerator(name: "CODE_FOR_sse_cvtss2si_2", value: 1135, isUnsigned: true)
!886 = !DIEnumerator(name: "CODE_FOR_sse_cvttss2si", value: 1136, isUnsigned: true)
!887 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2ps", value: 1137, isUnsigned: true)
!888 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2ps256", value: 1138, isUnsigned: true)
!889 = !DIEnumerator(name: "CODE_FOR_sse2_cvtdq2ps", value: 1139, isUnsigned: true)
!890 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2dq", value: 1140, isUnsigned: true)
!891 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2dq256", value: 1141, isUnsigned: true)
!892 = !DIEnumerator(name: "CODE_FOR_sse2_cvtps2dq", value: 1142, isUnsigned: true)
!893 = !DIEnumerator(name: "CODE_FOR_avx_cvttps2dq", value: 1143, isUnsigned: true)
!894 = !DIEnumerator(name: "CODE_FOR_avx_cvttps2dq256", value: 1144, isUnsigned: true)
!895 = !DIEnumerator(name: "CODE_FOR_sse2_cvttps2dq", value: 1145, isUnsigned: true)
!896 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpi2pd", value: 1146, isUnsigned: true)
!897 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2pi", value: 1147, isUnsigned: true)
!898 = !DIEnumerator(name: "CODE_FOR_sse2_cvttpd2pi", value: 1148, isUnsigned: true)
!899 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsi2sd", value: 1150, isUnsigned: true)
!900 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2si", value: 1151, isUnsigned: true)
!901 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2si_2", value: 1152, isUnsigned: true)
!902 = !DIEnumerator(name: "CODE_FOR_sse2_cvttsd2si", value: 1153, isUnsigned: true)
!903 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2pd256", value: 1154, isUnsigned: true)
!904 = !DIEnumerator(name: "CODE_FOR_sse2_cvtdq2pd", value: 1155, isUnsigned: true)
!905 = !DIEnumerator(name: "CODE_FOR_avx_cvtpd2dq256", value: 1156, isUnsigned: true)
!906 = !DIEnumerator(name: "CODE_FOR_avx_cvttpd2dq256", value: 1158, isUnsigned: true)
!907 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2ss", value: 1161, isUnsigned: true)
!908 = !DIEnumerator(name: "CODE_FOR_sse2_cvtss2sd", value: 1163, isUnsigned: true)
!909 = !DIEnumerator(name: "CODE_FOR_avx_cvtpd2ps256", value: 1164, isUnsigned: true)
!910 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2pd256", value: 1166, isUnsigned: true)
!911 = !DIEnumerator(name: "CODE_FOR_sse2_cvtps2pd", value: 1167, isUnsigned: true)
!912 = !DIEnumerator(name: "CODE_FOR_sse_movhlps", value: 1169, isUnsigned: true)
!913 = !DIEnumerator(name: "CODE_FOR_sse_movlhps", value: 1171, isUnsigned: true)
!914 = !DIEnumerator(name: "CODE_FOR_avx_unpckhps256", value: 1172, isUnsigned: true)
!915 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv4sf", value: 1174, isUnsigned: true)
!916 = !DIEnumerator(name: "CODE_FOR_avx_unpcklps256", value: 1175, isUnsigned: true)
!917 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv4sf", value: 1177, isUnsigned: true)
!918 = !DIEnumerator(name: "CODE_FOR_avx_movshdup256", value: 1178, isUnsigned: true)
!919 = !DIEnumerator(name: "CODE_FOR_sse3_movshdup", value: 1179, isUnsigned: true)
!920 = !DIEnumerator(name: "CODE_FOR_avx_movsldup256", value: 1180, isUnsigned: true)
!921 = !DIEnumerator(name: "CODE_FOR_sse3_movsldup", value: 1181, isUnsigned: true)
!922 = !DIEnumerator(name: "CODE_FOR_avx_shufps256_1", value: 1182, isUnsigned: true)
!923 = !DIEnumerator(name: "CODE_FOR_sse_shufps_v4sf", value: 1185, isUnsigned: true)
!924 = !DIEnumerator(name: "CODE_FOR_sse_shufps_v4si", value: 1186, isUnsigned: true)
!925 = !DIEnumerator(name: "CODE_FOR_sse_storehps", value: 1187, isUnsigned: true)
!926 = !DIEnumerator(name: "CODE_FOR_sse_loadhps", value: 1189, isUnsigned: true)
!927 = !DIEnumerator(name: "CODE_FOR_sse_storelps", value: 1191, isUnsigned: true)
!928 = !DIEnumerator(name: "CODE_FOR_sse_loadlps", value: 1193, isUnsigned: true)
!929 = !DIEnumerator(name: "CODE_FOR_sse_movss", value: 1195, isUnsigned: true)
!930 = !DIEnumerator(name: "CODE_FOR_vec_setv4sf_0", value: 1209, isUnsigned: true)
!931 = !DIEnumerator(name: "CODE_FOR_vec_setv4si_0", value: 1210, isUnsigned: true)
!932 = !DIEnumerator(name: "CODE_FOR_sse4_1_insertps", value: 1214, isUnsigned: true)
!933 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v4di", value: 1216, isUnsigned: true)
!934 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v4df", value: 1217, isUnsigned: true)
!935 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v4di", value: 1218, isUnsigned: true)
!936 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v4df", value: 1219, isUnsigned: true)
!937 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v8si", value: 1220, isUnsigned: true)
!938 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v8sf", value: 1221, isUnsigned: true)
!939 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v8si", value: 1222, isUnsigned: true)
!940 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v8sf", value: 1223, isUnsigned: true)
!941 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v16hi", value: 1224, isUnsigned: true)
!942 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v16hi", value: 1225, isUnsigned: true)
!943 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v32qi", value: 1226, isUnsigned: true)
!944 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v32qi", value: 1227, isUnsigned: true)
!945 = !DIEnumerator(name: "CODE_FOR_avx_unpckhpd256", value: 1230, isUnsigned: true)
!946 = !DIEnumerator(name: "CODE_FOR_avx_shufpd256_1", value: 1238, isUnsigned: true)
!947 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv2di", value: 1240, isUnsigned: true)
!948 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv2di", value: 1242, isUnsigned: true)
!949 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd_v2df", value: 1245, isUnsigned: true)
!950 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd_v2di", value: 1246, isUnsigned: true)
!951 = !DIEnumerator(name: "CODE_FOR_sse2_storehpd", value: 1248, isUnsigned: true)
!952 = !DIEnumerator(name: "CODE_FOR_sse2_storelpd", value: 1249, isUnsigned: true)
!953 = !DIEnumerator(name: "CODE_FOR_sse2_loadhpd", value: 1251, isUnsigned: true)
!954 = !DIEnumerator(name: "CODE_FOR_sse2_loadlpd", value: 1253, isUnsigned: true)
!955 = !DIEnumerator(name: "CODE_FOR_sse2_movsd", value: 1257, isUnsigned: true)
!956 = !DIEnumerator(name: "CODE_FOR_vec_dupv2df", value: 1259, isUnsigned: true)
!957 = !DIEnumerator(name: "CODE_FOR_mulv16qi3", value: 1295, isUnsigned: true)
!958 = !DIEnumerator(name: "CODE_FOR_mulv2di3", value: 1311, isUnsigned: true)
!959 = !DIEnumerator(name: "CODE_FOR_ashrv8hi3", value: 1314, isUnsigned: true)
!960 = !DIEnumerator(name: "CODE_FOR_ashrv4si3", value: 1315, isUnsigned: true)
!961 = !DIEnumerator(name: "CODE_FOR_sse2_lshrv1ti3", value: 1320, isUnsigned: true)
!962 = !DIEnumerator(name: "CODE_FOR_lshrv8hi3", value: 1321, isUnsigned: true)
!963 = !DIEnumerator(name: "CODE_FOR_lshrv4si3", value: 1322, isUnsigned: true)
!964 = !DIEnumerator(name: "CODE_FOR_lshrv2di3", value: 1323, isUnsigned: true)
!965 = !DIEnumerator(name: "CODE_FOR_sse2_ashlv1ti3", value: 1328, isUnsigned: true)
!966 = !DIEnumerator(name: "CODE_FOR_ashlv8hi3", value: 1329, isUnsigned: true)
!967 = !DIEnumerator(name: "CODE_FOR_ashlv4si3", value: 1330, isUnsigned: true)
!968 = !DIEnumerator(name: "CODE_FOR_ashlv2di3", value: 1331, isUnsigned: true)
!969 = !DIEnumerator(name: "CODE_FOR_sse2_gtv16qi3", value: 1368, isUnsigned: true)
!970 = !DIEnumerator(name: "CODE_FOR_sse2_gtv8hi3", value: 1369, isUnsigned: true)
!971 = !DIEnumerator(name: "CODE_FOR_sse2_gtv4si3", value: 1370, isUnsigned: true)
!972 = !DIEnumerator(name: "CODE_FOR_sse4_2_gtv2di3", value: 1371, isUnsigned: true)
!973 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv16qi3", value: 1384, isUnsigned: true)
!974 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv8hi3", value: 1385, isUnsigned: true)
!975 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv4si3", value: 1386, isUnsigned: true)
!976 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv2di3", value: 1387, isUnsigned: true)
!977 = !DIEnumerator(name: "CODE_FOR_sse2_packsswb", value: 1441, isUnsigned: true)
!978 = !DIEnumerator(name: "CODE_FOR_sse2_packssdw", value: 1443, isUnsigned: true)
!979 = !DIEnumerator(name: "CODE_FOR_sse2_packuswb", value: 1445, isUnsigned: true)
!980 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv16qi", value: 1447, isUnsigned: true)
!981 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv16qi", value: 1449, isUnsigned: true)
!982 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv8hi", value: 1451, isUnsigned: true)
!983 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv8hi", value: 1453, isUnsigned: true)
!984 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv4si", value: 1455, isUnsigned: true)
!985 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv4si", value: 1457, isUnsigned: true)
!986 = !DIEnumerator(name: "CODE_FOR_sse2_pshufd_1", value: 1469, isUnsigned: true)
!987 = !DIEnumerator(name: "CODE_FOR_sse2_pshuflw_1", value: 1470, isUnsigned: true)
!988 = !DIEnumerator(name: "CODE_FOR_sse2_pshufhw_1", value: 1471, isUnsigned: true)
!989 = !DIEnumerator(name: "CODE_FOR_sse2_loadld", value: 1473, isUnsigned: true)
!990 = !DIEnumerator(name: "CODE_FOR_sse2_stored", value: 1474, isUnsigned: true)
!991 = !DIEnumerator(name: "CODE_FOR_vec_concatv2di", value: 1492, isUnsigned: true)
!992 = !DIEnumerator(name: "CODE_FOR_sse2_psadbw", value: 1498, isUnsigned: true)
!993 = !DIEnumerator(name: "CODE_FOR_avx_movmskps256", value: 1499, isUnsigned: true)
!994 = !DIEnumerator(name: "CODE_FOR_avx_movmskpd256", value: 1500, isUnsigned: true)
!995 = !DIEnumerator(name: "CODE_FOR_sse_movmskps", value: 1501, isUnsigned: true)
!996 = !DIEnumerator(name: "CODE_FOR_sse2_movmskpd", value: 1502, isUnsigned: true)
!997 = !DIEnumerator(name: "CODE_FOR_sse2_pmovmskb", value: 1503, isUnsigned: true)
!998 = !DIEnumerator(name: "CODE_FOR_sse_ldmxcsr", value: 1505, isUnsigned: true)
!999 = !DIEnumerator(name: "CODE_FOR_sse_stmxcsr", value: 1506, isUnsigned: true)
!1000 = !DIEnumerator(name: "CODE_FOR_sse2_clflush", value: 1508, isUnsigned: true)
!1001 = !DIEnumerator(name: "CODE_FOR_sse3_mwait", value: 1511, isUnsigned: true)
!1002 = !DIEnumerator(name: "CODE_FOR_sse3_monitor", value: 1512, isUnsigned: true)
!1003 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddwv8hi3", value: 1514, isUnsigned: true)
!1004 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddwv4hi3", value: 1515, isUnsigned: true)
!1005 = !DIEnumerator(name: "CODE_FOR_ssse3_phadddv4si3", value: 1517, isUnsigned: true)
!1006 = !DIEnumerator(name: "CODE_FOR_ssse3_phadddv2si3", value: 1518, isUnsigned: true)
!1007 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddswv8hi3", value: 1520, isUnsigned: true)
!1008 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddswv4hi3", value: 1521, isUnsigned: true)
!1009 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubwv8hi3", value: 1523, isUnsigned: true)
!1010 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubwv4hi3", value: 1524, isUnsigned: true)
!1011 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubdv4si3", value: 1526, isUnsigned: true)
!1012 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubdv2si3", value: 1527, isUnsigned: true)
!1013 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubswv8hi3", value: 1529, isUnsigned: true)
!1014 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubswv4hi3", value: 1530, isUnsigned: true)
!1015 = !DIEnumerator(name: "CODE_FOR_ssse3_pmaddubsw128", value: 1532, isUnsigned: true)
!1016 = !DIEnumerator(name: "CODE_FOR_ssse3_pmaddubsw", value: 1533, isUnsigned: true)
!1017 = !DIEnumerator(name: "CODE_FOR_ssse3_pshufbv16qi3", value: 1538, isUnsigned: true)
!1018 = !DIEnumerator(name: "CODE_FOR_ssse3_pshufbv8qi3", value: 1539, isUnsigned: true)
!1019 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv16qi3", value: 1543, isUnsigned: true)
!1020 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv8hi3", value: 1544, isUnsigned: true)
!1021 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv4si3", value: 1545, isUnsigned: true)
!1022 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv8qi3", value: 1546, isUnsigned: true)
!1023 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv4hi3", value: 1547, isUnsigned: true)
!1024 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv2si3", value: 1548, isUnsigned: true)
!1025 = !DIEnumerator(name: "CODE_FOR_ssse3_palignrti", value: 1550, isUnsigned: true)
!1026 = !DIEnumerator(name: "CODE_FOR_ssse3_palignrdi", value: 1551, isUnsigned: true)
!1027 = !DIEnumerator(name: "CODE_FOR_absv16qi2", value: 1552, isUnsigned: true)
!1028 = !DIEnumerator(name: "CODE_FOR_absv8hi2", value: 1553, isUnsigned: true)
!1029 = !DIEnumerator(name: "CODE_FOR_absv4si2", value: 1554, isUnsigned: true)
!1030 = !DIEnumerator(name: "CODE_FOR_absv8qi2", value: 1555, isUnsigned: true)
!1031 = !DIEnumerator(name: "CODE_FOR_absv4hi2", value: 1556, isUnsigned: true)
!1032 = !DIEnumerator(name: "CODE_FOR_absv2si2", value: 1557, isUnsigned: true)
!1033 = !DIEnumerator(name: "CODE_FOR_sse4a_movntsf", value: 1558, isUnsigned: true)
!1034 = !DIEnumerator(name: "CODE_FOR_sse4a_movntdf", value: 1559, isUnsigned: true)
!1035 = !DIEnumerator(name: "CODE_FOR_sse4a_vmmovntv4sf", value: 1560, isUnsigned: true)
!1036 = !DIEnumerator(name: "CODE_FOR_sse4a_vmmovntv2df", value: 1561, isUnsigned: true)
!1037 = !DIEnumerator(name: "CODE_FOR_sse4a_extrqi", value: 1562, isUnsigned: true)
!1038 = !DIEnumerator(name: "CODE_FOR_sse4a_extrq", value: 1563, isUnsigned: true)
!1039 = !DIEnumerator(name: "CODE_FOR_sse4a_insertqi", value: 1564, isUnsigned: true)
!1040 = !DIEnumerator(name: "CODE_FOR_sse4a_insertq", value: 1565, isUnsigned: true)
!1041 = !DIEnumerator(name: "CODE_FOR_avx_blendps", value: 1566, isUnsigned: true)
!1042 = !DIEnumerator(name: "CODE_FOR_avx_blendpd", value: 1567, isUnsigned: true)
!1043 = !DIEnumerator(name: "CODE_FOR_avx_blendps256", value: 1568, isUnsigned: true)
!1044 = !DIEnumerator(name: "CODE_FOR_avx_blendpd256", value: 1569, isUnsigned: true)
!1045 = !DIEnumerator(name: "CODE_FOR_avx_blendvps", value: 1570, isUnsigned: true)
!1046 = !DIEnumerator(name: "CODE_FOR_avx_blendvpd", value: 1571, isUnsigned: true)
!1047 = !DIEnumerator(name: "CODE_FOR_avx_blendvps256", value: 1572, isUnsigned: true)
!1048 = !DIEnumerator(name: "CODE_FOR_avx_blendvpd256", value: 1573, isUnsigned: true)
!1049 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendps", value: 1574, isUnsigned: true)
!1050 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendpd", value: 1575, isUnsigned: true)
!1051 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendvps", value: 1576, isUnsigned: true)
!1052 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendvpd", value: 1577, isUnsigned: true)
!1053 = !DIEnumerator(name: "CODE_FOR_avx_dpps", value: 1578, isUnsigned: true)
!1054 = !DIEnumerator(name: "CODE_FOR_avx_dppd", value: 1579, isUnsigned: true)
!1055 = !DIEnumerator(name: "CODE_FOR_avx_dpps256", value: 1580, isUnsigned: true)
!1056 = !DIEnumerator(name: "CODE_FOR_avx_dppd256", value: 1581, isUnsigned: true)
!1057 = !DIEnumerator(name: "CODE_FOR_sse4_1_dpps", value: 1582, isUnsigned: true)
!1058 = !DIEnumerator(name: "CODE_FOR_sse4_1_dppd", value: 1583, isUnsigned: true)
!1059 = !DIEnumerator(name: "CODE_FOR_sse4_1_movntdqa", value: 1584, isUnsigned: true)
!1060 = !DIEnumerator(name: "CODE_FOR_sse4_1_mpsadbw", value: 1586, isUnsigned: true)
!1061 = !DIEnumerator(name: "CODE_FOR_sse4_1_packusdw", value: 1588, isUnsigned: true)
!1062 = !DIEnumerator(name: "CODE_FOR_sse4_1_pblendvb", value: 1590, isUnsigned: true)
!1063 = !DIEnumerator(name: "CODE_FOR_sse4_1_pblendw", value: 1592, isUnsigned: true)
!1064 = !DIEnumerator(name: "CODE_FOR_sse4_1_phminposuw", value: 1593, isUnsigned: true)
!1065 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv8qiv8hi2", value: 1594, isUnsigned: true)
!1066 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv4qiv4si2", value: 1596, isUnsigned: true)
!1067 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2qiv2di2", value: 1598, isUnsigned: true)
!1068 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv4hiv4si2", value: 1600, isUnsigned: true)
!1069 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2hiv2di2", value: 1602, isUnsigned: true)
!1070 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2siv2di2", value: 1604, isUnsigned: true)
!1071 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv8qiv8hi2", value: 1606, isUnsigned: true)
!1072 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv4qiv4si2", value: 1608, isUnsigned: true)
!1073 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2qiv2di2", value: 1610, isUnsigned: true)
!1074 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv4hiv4si2", value: 1612, isUnsigned: true)
!1075 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2hiv2di2", value: 1614, isUnsigned: true)
!1076 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2siv2di2", value: 1616, isUnsigned: true)
!1077 = !DIEnumerator(name: "CODE_FOR_avx_vtestps", value: 1618, isUnsigned: true)
!1078 = !DIEnumerator(name: "CODE_FOR_avx_vtestpd", value: 1619, isUnsigned: true)
!1079 = !DIEnumerator(name: "CODE_FOR_avx_vtestps256", value: 1620, isUnsigned: true)
!1080 = !DIEnumerator(name: "CODE_FOR_avx_vtestpd256", value: 1621, isUnsigned: true)
!1081 = !DIEnumerator(name: "CODE_FOR_avx_ptest256", value: 1622, isUnsigned: true)
!1082 = !DIEnumerator(name: "CODE_FOR_sse4_1_ptest", value: 1623, isUnsigned: true)
!1083 = !DIEnumerator(name: "CODE_FOR_avx_roundps256", value: 1624, isUnsigned: true)
!1084 = !DIEnumerator(name: "CODE_FOR_avx_roundpd256", value: 1625, isUnsigned: true)
!1085 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundps", value: 1626, isUnsigned: true)
!1086 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundpd", value: 1627, isUnsigned: true)
!1087 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundss", value: 1630, isUnsigned: true)
!1088 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundsd", value: 1631, isUnsigned: true)
!1089 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestr", value: 1632, isUnsigned: true)
!1090 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestri", value: 1633, isUnsigned: true)
!1091 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestrm", value: 1634, isUnsigned: true)
!1092 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestr_cconly", value: 1635, isUnsigned: true)
!1093 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistr", value: 1636, isUnsigned: true)
!1094 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistri", value: 1637, isUnsigned: true)
!1095 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistrm", value: 1638, isUnsigned: true)
!1096 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistr_cconly", value: 1639, isUnsigned: true)
!1097 = !DIEnumerator(name: "CODE_FOR_xop_pmacsww", value: 1640, isUnsigned: true)
!1098 = !DIEnumerator(name: "CODE_FOR_xop_pmacssww", value: 1641, isUnsigned: true)
!1099 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdd", value: 1642, isUnsigned: true)
!1100 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdd", value: 1643, isUnsigned: true)
!1101 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdql", value: 1644, isUnsigned: true)
!1102 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdqh", value: 1645, isUnsigned: true)
!1103 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdql", value: 1646, isUnsigned: true)
!1104 = !DIEnumerator(name: "CODE_FOR_xop_mulv2div2di3_low", value: 1647, isUnsigned: true)
!1105 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdqh", value: 1648, isUnsigned: true)
!1106 = !DIEnumerator(name: "CODE_FOR_xop_mulv2div2di3_high", value: 1649, isUnsigned: true)
!1107 = !DIEnumerator(name: "CODE_FOR_xop_pmacsswd", value: 1650, isUnsigned: true)
!1108 = !DIEnumerator(name: "CODE_FOR_xop_pmacswd", value: 1651, isUnsigned: true)
!1109 = !DIEnumerator(name: "CODE_FOR_xop_pmadcsswd", value: 1652, isUnsigned: true)
!1110 = !DIEnumerator(name: "CODE_FOR_xop_pmadcswd", value: 1653, isUnsigned: true)
!1111 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v16qi", value: 1654, isUnsigned: true)
!1112 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8hi", value: 1655, isUnsigned: true)
!1113 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4si", value: 1656, isUnsigned: true)
!1114 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v2di", value: 1657, isUnsigned: true)
!1115 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4sf", value: 1658, isUnsigned: true)
!1116 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v2df", value: 1659, isUnsigned: true)
!1117 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v32qi256", value: 1660, isUnsigned: true)
!1118 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v16hi256", value: 1661, isUnsigned: true)
!1119 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8si256", value: 1662, isUnsigned: true)
!1120 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4di256", value: 1663, isUnsigned: true)
!1121 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8sf256", value: 1664, isUnsigned: true)
!1122 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4df256", value: 1665, isUnsigned: true)
!1123 = !DIEnumerator(name: "CODE_FOR_xop_phaddbw", value: 1666, isUnsigned: true)
!1124 = !DIEnumerator(name: "CODE_FOR_xop_phaddbd", value: 1667, isUnsigned: true)
!1125 = !DIEnumerator(name: "CODE_FOR_xop_phaddbq", value: 1668, isUnsigned: true)
!1126 = !DIEnumerator(name: "CODE_FOR_xop_phaddwd", value: 1669, isUnsigned: true)
!1127 = !DIEnumerator(name: "CODE_FOR_xop_phaddwq", value: 1670, isUnsigned: true)
!1128 = !DIEnumerator(name: "CODE_FOR_xop_phadddq", value: 1671, isUnsigned: true)
!1129 = !DIEnumerator(name: "CODE_FOR_xop_phaddubw", value: 1672, isUnsigned: true)
!1130 = !DIEnumerator(name: "CODE_FOR_xop_phaddubd", value: 1673, isUnsigned: true)
!1131 = !DIEnumerator(name: "CODE_FOR_xop_phaddubq", value: 1674, isUnsigned: true)
!1132 = !DIEnumerator(name: "CODE_FOR_xop_phadduwd", value: 1675, isUnsigned: true)
!1133 = !DIEnumerator(name: "CODE_FOR_xop_phadduwq", value: 1676, isUnsigned: true)
!1134 = !DIEnumerator(name: "CODE_FOR_xop_phaddudq", value: 1677, isUnsigned: true)
!1135 = !DIEnumerator(name: "CODE_FOR_xop_phsubbw", value: 1678, isUnsigned: true)
!1136 = !DIEnumerator(name: "CODE_FOR_xop_phsubwd", value: 1679, isUnsigned: true)
!1137 = !DIEnumerator(name: "CODE_FOR_xop_phsubdq", value: 1680, isUnsigned: true)
!1138 = !DIEnumerator(name: "CODE_FOR_xop_pperm", value: 1681, isUnsigned: true)
!1139 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v2di_v4si", value: 1682, isUnsigned: true)
!1140 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v4si_v8hi", value: 1683, isUnsigned: true)
!1141 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v8hi_v16qi", value: 1684, isUnsigned: true)
!1142 = !DIEnumerator(name: "CODE_FOR_xop_rotlv16qi3", value: 1685, isUnsigned: true)
!1143 = !DIEnumerator(name: "CODE_FOR_xop_rotlv8hi3", value: 1686, isUnsigned: true)
!1144 = !DIEnumerator(name: "CODE_FOR_xop_rotlv4si3", value: 1687, isUnsigned: true)
!1145 = !DIEnumerator(name: "CODE_FOR_xop_rotlv2di3", value: 1688, isUnsigned: true)
!1146 = !DIEnumerator(name: "CODE_FOR_xop_rotrv16qi3", value: 1689, isUnsigned: true)
!1147 = !DIEnumerator(name: "CODE_FOR_xop_rotrv8hi3", value: 1690, isUnsigned: true)
!1148 = !DIEnumerator(name: "CODE_FOR_xop_rotrv4si3", value: 1691, isUnsigned: true)
!1149 = !DIEnumerator(name: "CODE_FOR_xop_rotrv2di3", value: 1692, isUnsigned: true)
!1150 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv16qi3", value: 1693, isUnsigned: true)
!1151 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv8hi3", value: 1694, isUnsigned: true)
!1152 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv4si3", value: 1695, isUnsigned: true)
!1153 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv2di3", value: 1696, isUnsigned: true)
!1154 = !DIEnumerator(name: "CODE_FOR_xop_ashlv16qi3", value: 1697, isUnsigned: true)
!1155 = !DIEnumerator(name: "CODE_FOR_xop_ashlv8hi3", value: 1698, isUnsigned: true)
!1156 = !DIEnumerator(name: "CODE_FOR_xop_ashlv4si3", value: 1699, isUnsigned: true)
!1157 = !DIEnumerator(name: "CODE_FOR_xop_ashlv2di3", value: 1700, isUnsigned: true)
!1158 = !DIEnumerator(name: "CODE_FOR_xop_lshlv16qi3", value: 1701, isUnsigned: true)
!1159 = !DIEnumerator(name: "CODE_FOR_xop_lshlv8hi3", value: 1702, isUnsigned: true)
!1160 = !DIEnumerator(name: "CODE_FOR_xop_lshlv4si3", value: 1703, isUnsigned: true)
!1161 = !DIEnumerator(name: "CODE_FOR_xop_lshlv2di3", value: 1704, isUnsigned: true)
!1162 = !DIEnumerator(name: "CODE_FOR_xop_frczv4sf2", value: 1705, isUnsigned: true)
!1163 = !DIEnumerator(name: "CODE_FOR_xop_frczv2df2", value: 1706, isUnsigned: true)
!1164 = !DIEnumerator(name: "CODE_FOR_xop_vmfrczv4sf2", value: 1707, isUnsigned: true)
!1165 = !DIEnumerator(name: "CODE_FOR_xop_vmfrczv2df2", value: 1708, isUnsigned: true)
!1166 = !DIEnumerator(name: "CODE_FOR_xop_frczv8sf2256", value: 1709, isUnsigned: true)
!1167 = !DIEnumerator(name: "CODE_FOR_xop_frczv4df2256", value: 1710, isUnsigned: true)
!1168 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv16qi3", value: 1711, isUnsigned: true)
!1169 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv8hi3", value: 1712, isUnsigned: true)
!1170 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv4si3", value: 1713, isUnsigned: true)
!1171 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv2di3", value: 1714, isUnsigned: true)
!1172 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv16qi3", value: 1715, isUnsigned: true)
!1173 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv8hi3", value: 1716, isUnsigned: true)
!1174 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv4si3", value: 1717, isUnsigned: true)
!1175 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv2di3", value: 1718, isUnsigned: true)
!1176 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v16qi3", value: 1719, isUnsigned: true)
!1177 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v8hi3", value: 1720, isUnsigned: true)
!1178 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v4si3", value: 1721, isUnsigned: true)
!1179 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v2di3", value: 1722, isUnsigned: true)
!1180 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv16qi3", value: 1723, isUnsigned: true)
!1181 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv8hi3", value: 1724, isUnsigned: true)
!1182 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv4si3", value: 1725, isUnsigned: true)
!1183 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv2di3", value: 1726, isUnsigned: true)
!1184 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v4sf3", value: 1727, isUnsigned: true)
!1185 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v2df3", value: 1728, isUnsigned: true)
!1186 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v8sf3", value: 1729, isUnsigned: true)
!1187 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v4df3", value: 1730, isUnsigned: true)
!1188 = !DIEnumerator(name: "CODE_FOR_aesenc", value: 1732, isUnsigned: true)
!1189 = !DIEnumerator(name: "CODE_FOR_aesenclast", value: 1734, isUnsigned: true)
!1190 = !DIEnumerator(name: "CODE_FOR_aesdec", value: 1736, isUnsigned: true)
!1191 = !DIEnumerator(name: "CODE_FOR_aesdeclast", value: 1738, isUnsigned: true)
!1192 = !DIEnumerator(name: "CODE_FOR_aesimc", value: 1739, isUnsigned: true)
!1193 = !DIEnumerator(name: "CODE_FOR_aeskeygenassist", value: 1740, isUnsigned: true)
!1194 = !DIEnumerator(name: "CODE_FOR_pclmulqdq", value: 1742, isUnsigned: true)
!1195 = !DIEnumerator(name: "CODE_FOR_vec_dupv8si", value: 1745, isUnsigned: true)
!1196 = !DIEnumerator(name: "CODE_FOR_vec_dupv8sf", value: 1746, isUnsigned: true)
!1197 = !DIEnumerator(name: "CODE_FOR_vec_dupv4di", value: 1747, isUnsigned: true)
!1198 = !DIEnumerator(name: "CODE_FOR_vec_dupv4df", value: 1748, isUnsigned: true)
!1199 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v32qi", value: 1749, isUnsigned: true)
!1200 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v16hi", value: 1750, isUnsigned: true)
!1201 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v8si", value: 1751, isUnsigned: true)
!1202 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v4di", value: 1752, isUnsigned: true)
!1203 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v8sf", value: 1753, isUnsigned: true)
!1204 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v4df", value: 1754, isUnsigned: true)
!1205 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv4sf3", value: 1762, isUnsigned: true)
!1206 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv2df3", value: 1763, isUnsigned: true)
!1207 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv8sf3", value: 1764, isUnsigned: true)
!1208 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv4df3", value: 1765, isUnsigned: true)
!1209 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v4di", value: 1772, isUnsigned: true)
!1210 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v4df", value: 1773, isUnsigned: true)
!1211 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v4di", value: 1774, isUnsigned: true)
!1212 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v4df", value: 1775, isUnsigned: true)
!1213 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v8si", value: 1776, isUnsigned: true)
!1214 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v8sf", value: 1777, isUnsigned: true)
!1215 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v8si", value: 1778, isUnsigned: true)
!1216 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v8sf", value: 1779, isUnsigned: true)
!1217 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v16hi", value: 1780, isUnsigned: true)
!1218 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v16hi", value: 1781, isUnsigned: true)
!1219 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v32qi", value: 1782, isUnsigned: true)
!1220 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v32qi", value: 1783, isUnsigned: true)
!1221 = !DIEnumerator(name: "CODE_FOR_avx_maskloadps", value: 1784, isUnsigned: true)
!1222 = !DIEnumerator(name: "CODE_FOR_avx_maskloadpd", value: 1785, isUnsigned: true)
!1223 = !DIEnumerator(name: "CODE_FOR_avx_maskloadps256", value: 1786, isUnsigned: true)
!1224 = !DIEnumerator(name: "CODE_FOR_avx_maskloadpd256", value: 1787, isUnsigned: true)
!1225 = !DIEnumerator(name: "CODE_FOR_avx_maskstoreps", value: 1788, isUnsigned: true)
!1226 = !DIEnumerator(name: "CODE_FOR_avx_maskstorepd", value: 1789, isUnsigned: true)
!1227 = !DIEnumerator(name: "CODE_FOR_avx_maskstoreps256", value: 1790, isUnsigned: true)
!1228 = !DIEnumerator(name: "CODE_FOR_avx_maskstorepd256", value: 1791, isUnsigned: true)
!1229 = !DIEnumerator(name: "CODE_FOR_avx_si256_si", value: 1792, isUnsigned: true)
!1230 = !DIEnumerator(name: "CODE_FOR_avx_ps256_ps", value: 1793, isUnsigned: true)
!1231 = !DIEnumerator(name: "CODE_FOR_avx_pd256_pd", value: 1794, isUnsigned: true)
!1232 = !DIEnumerator(name: "CODE_FOR_avx_si_si256", value: 1795, isUnsigned: true)
!1233 = !DIEnumerator(name: "CODE_FOR_avx_ps_ps256", value: 1796, isUnsigned: true)
!1234 = !DIEnumerator(name: "CODE_FOR_avx_pd_pd256", value: 1797, isUnsigned: true)
!1235 = !DIEnumerator(name: "CODE_FOR_memory_barrier_nosse", value: 1804, isUnsigned: true)
!1236 = !DIEnumerator(name: "CODE_FOR_sync_double_compare_and_swapdi", value: 1808, isUnsigned: true)
!1237 = !DIEnumerator(name: "CODE_FOR_sync_old_addqi", value: 1810, isUnsigned: true)
!1238 = !DIEnumerator(name: "CODE_FOR_sync_old_addhi", value: 1811, isUnsigned: true)
!1239 = !DIEnumerator(name: "CODE_FOR_sync_old_addsi", value: 1812, isUnsigned: true)
!1240 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_setqi", value: 1813, isUnsigned: true)
!1241 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_sethi", value: 1814, isUnsigned: true)
!1242 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_setsi", value: 1815, isUnsigned: true)
!1243 = !DIEnumerator(name: "CODE_FOR_sync_addqi", value: 1816, isUnsigned: true)
!1244 = !DIEnumerator(name: "CODE_FOR_sync_addhi", value: 1817, isUnsigned: true)
!1245 = !DIEnumerator(name: "CODE_FOR_sync_addsi", value: 1818, isUnsigned: true)
!1246 = !DIEnumerator(name: "CODE_FOR_sync_subqi", value: 1819, isUnsigned: true)
!1247 = !DIEnumerator(name: "CODE_FOR_sync_subhi", value: 1820, isUnsigned: true)
!1248 = !DIEnumerator(name: "CODE_FOR_sync_subsi", value: 1821, isUnsigned: true)
!1249 = !DIEnumerator(name: "CODE_FOR_sync_andqi", value: 1822, isUnsigned: true)
!1250 = !DIEnumerator(name: "CODE_FOR_sync_iorqi", value: 1823, isUnsigned: true)
!1251 = !DIEnumerator(name: "CODE_FOR_sync_xorqi", value: 1824, isUnsigned: true)
!1252 = !DIEnumerator(name: "CODE_FOR_sync_andhi", value: 1825, isUnsigned: true)
!1253 = !DIEnumerator(name: "CODE_FOR_sync_iorhi", value: 1826, isUnsigned: true)
!1254 = !DIEnumerator(name: "CODE_FOR_sync_xorhi", value: 1827, isUnsigned: true)
!1255 = !DIEnumerator(name: "CODE_FOR_sync_andsi", value: 1828, isUnsigned: true)
!1256 = !DIEnumerator(name: "CODE_FOR_sync_iorsi", value: 1829, isUnsigned: true)
!1257 = !DIEnumerator(name: "CODE_FOR_sync_xorsi", value: 1830, isUnsigned: true)
!1258 = !DIEnumerator(name: "CODE_FOR_cbranchqi4", value: 1831, isUnsigned: true)
!1259 = !DIEnumerator(name: "CODE_FOR_cbranchhi4", value: 1832, isUnsigned: true)
!1260 = !DIEnumerator(name: "CODE_FOR_cbranchsi4", value: 1833, isUnsigned: true)
!1261 = !DIEnumerator(name: "CODE_FOR_cbranchdi4", value: 1834, isUnsigned: true)
!1262 = !DIEnumerator(name: "CODE_FOR_cstoreqi4", value: 1835, isUnsigned: true)
!1263 = !DIEnumerator(name: "CODE_FOR_cstorehi4", value: 1836, isUnsigned: true)
!1264 = !DIEnumerator(name: "CODE_FOR_cstoresi4", value: 1837, isUnsigned: true)
!1265 = !DIEnumerator(name: "CODE_FOR_cmpsi_1", value: 1838, isUnsigned: true)
!1266 = !DIEnumerator(name: "CODE_FOR_cmpqi_ext_3", value: 1839, isUnsigned: true)
!1267 = !DIEnumerator(name: "CODE_FOR_cbranchxf4", value: 1840, isUnsigned: true)
!1268 = !DIEnumerator(name: "CODE_FOR_cstorexf4", value: 1841, isUnsigned: true)
!1269 = !DIEnumerator(name: "CODE_FOR_cbranchsf4", value: 1842, isUnsigned: true)
!1270 = !DIEnumerator(name: "CODE_FOR_cbranchdf4", value: 1843, isUnsigned: true)
!1271 = !DIEnumerator(name: "CODE_FOR_cstoresf4", value: 1844, isUnsigned: true)
!1272 = !DIEnumerator(name: "CODE_FOR_cstoredf4", value: 1845, isUnsigned: true)
!1273 = !DIEnumerator(name: "CODE_FOR_cbranchcc4", value: 1846, isUnsigned: true)
!1274 = !DIEnumerator(name: "CODE_FOR_cstorecc4", value: 1847, isUnsigned: true)
!1275 = !DIEnumerator(name: "CODE_FOR_movsi", value: 1855, isUnsigned: true)
!1276 = !DIEnumerator(name: "CODE_FOR_movhi", value: 1856, isUnsigned: true)
!1277 = !DIEnumerator(name: "CODE_FOR_movstricthi", value: 1857, isUnsigned: true)
!1278 = !DIEnumerator(name: "CODE_FOR_movqi", value: 1858, isUnsigned: true)
!1279 = !DIEnumerator(name: "CODE_FOR_movstrictqi", value: 1859, isUnsigned: true)
!1280 = !DIEnumerator(name: "CODE_FOR_movdi", value: 1860, isUnsigned: true)
!1281 = !DIEnumerator(name: "CODE_FOR_movoi", value: 1863, isUnsigned: true)
!1282 = !DIEnumerator(name: "CODE_FOR_movti", value: 1864, isUnsigned: true)
!1283 = !DIEnumerator(name: "CODE_FOR_movcdi", value: 1866, isUnsigned: true)
!1284 = !DIEnumerator(name: "CODE_FOR_movsf", value: 1867, isUnsigned: true)
!1285 = !DIEnumerator(name: "CODE_FOR_movdf", value: 1870, isUnsigned: true)
!1286 = !DIEnumerator(name: "CODE_FOR_movxf", value: 1874, isUnsigned: true)
!1287 = !DIEnumerator(name: "CODE_FOR_movtf", value: 1877, isUnsigned: true)
!1288 = !DIEnumerator(name: "CODE_FOR_zero_extendhisi2", value: 1887, isUnsigned: true)
!1289 = !DIEnumerator(name: "CODE_FOR_zero_extendqihi2", value: 1889, isUnsigned: true)
!1290 = !DIEnumerator(name: "CODE_FOR_zero_extendqisi2", value: 1893, isUnsigned: true)
!1291 = !DIEnumerator(name: "CODE_FOR_zero_extendsidi2", value: 1897, isUnsigned: true)
!1292 = !DIEnumerator(name: "CODE_FOR_extendsidi2", value: 1900, isUnsigned: true)
!1293 = !DIEnumerator(name: "CODE_FOR_extendsfdf2", value: 1907, isUnsigned: true)
!1294 = !DIEnumerator(name: "CODE_FOR_extendsfxf2", value: 1909, isUnsigned: true)
!1295 = !DIEnumerator(name: "CODE_FOR_extenddfxf2", value: 1910, isUnsigned: true)
!1296 = !DIEnumerator(name: "CODE_FOR_truncdfsf2", value: 1911, isUnsigned: true)
!1297 = !DIEnumerator(name: "CODE_FOR_truncdfsf2_with_temp", value: 1913, isUnsigned: true)
!1298 = !DIEnumerator(name: "CODE_FOR_truncxfsf2", value: 1915, isUnsigned: true)
!1299 = !DIEnumerator(name: "CODE_FOR_truncxfdf2", value: 1916, isUnsigned: true)
!1300 = !DIEnumerator(name: "CODE_FOR_fix_truncxfdi2", value: 1921, isUnsigned: true)
!1301 = !DIEnumerator(name: "CODE_FOR_fix_truncsfdi2", value: 1922, isUnsigned: true)
!1302 = !DIEnumerator(name: "CODE_FOR_fix_truncdfdi2", value: 1923, isUnsigned: true)
!1303 = !DIEnumerator(name: "CODE_FOR_fix_truncxfsi2", value: 1924, isUnsigned: true)
!1304 = !DIEnumerator(name: "CODE_FOR_fix_truncsfsi2", value: 1925, isUnsigned: true)
!1305 = !DIEnumerator(name: "CODE_FOR_fix_truncdfsi2", value: 1926, isUnsigned: true)
!1306 = !DIEnumerator(name: "CODE_FOR_fix_truncsfhi2", value: 1927, isUnsigned: true)
!1307 = !DIEnumerator(name: "CODE_FOR_fix_truncdfhi2", value: 1928, isUnsigned: true)
!1308 = !DIEnumerator(name: "CODE_FOR_fix_truncxfhi2", value: 1929, isUnsigned: true)
!1309 = !DIEnumerator(name: "CODE_FOR_fixuns_truncsfsi2", value: 1930, isUnsigned: true)
!1310 = !DIEnumerator(name: "CODE_FOR_fixuns_truncdfsi2", value: 1931, isUnsigned: true)
!1311 = !DIEnumerator(name: "CODE_FOR_fixuns_truncsfhi2", value: 1934, isUnsigned: true)
!1312 = !DIEnumerator(name: "CODE_FOR_fixuns_truncdfhi2", value: 1935, isUnsigned: true)
!1313 = !DIEnumerator(name: "CODE_FOR_floathisf2", value: 1962, isUnsigned: true)
!1314 = !DIEnumerator(name: "CODE_FOR_floathidf2", value: 1963, isUnsigned: true)
!1315 = !DIEnumerator(name: "CODE_FOR_floathixf2", value: 1964, isUnsigned: true)
!1316 = !DIEnumerator(name: "CODE_FOR_floatsisf2", value: 1974, isUnsigned: true)
!1317 = !DIEnumerator(name: "CODE_FOR_floatdisf2", value: 1975, isUnsigned: true)
!1318 = !DIEnumerator(name: "CODE_FOR_floatsidf2", value: 1976, isUnsigned: true)
!1319 = !DIEnumerator(name: "CODE_FOR_floatdidf2", value: 1977, isUnsigned: true)
!1320 = !DIEnumerator(name: "CODE_FOR_floatsixf2", value: 1978, isUnsigned: true)
!1321 = !DIEnumerator(name: "CODE_FOR_floatdixf2", value: 1979, isUnsigned: true)
!1322 = !DIEnumerator(name: "CODE_FOR_floatunssisf2", value: 2028, isUnsigned: true)
!1323 = !DIEnumerator(name: "CODE_FOR_floatunssidf2", value: 2029, isUnsigned: true)
!1324 = !DIEnumerator(name: "CODE_FOR_floatunssixf2", value: 2030, isUnsigned: true)
!1325 = !DIEnumerator(name: "CODE_FOR_addqi3", value: 2031, isUnsigned: true)
!1326 = !DIEnumerator(name: "CODE_FOR_addhi3", value: 2032, isUnsigned: true)
!1327 = !DIEnumerator(name: "CODE_FOR_addsi3", value: 2033, isUnsigned: true)
!1328 = !DIEnumerator(name: "CODE_FOR_adddi3", value: 2034, isUnsigned: true)
!1329 = !DIEnumerator(name: "CODE_FOR_subqi3", value: 2040, isUnsigned: true)
!1330 = !DIEnumerator(name: "CODE_FOR_subhi3", value: 2041, isUnsigned: true)
!1331 = !DIEnumerator(name: "CODE_FOR_subsi3", value: 2042, isUnsigned: true)
!1332 = !DIEnumerator(name: "CODE_FOR_subdi3", value: 2043, isUnsigned: true)
!1333 = !DIEnumerator(name: "CODE_FOR_addqi3_carry", value: 2045, isUnsigned: true)
!1334 = !DIEnumerator(name: "CODE_FOR_subqi3_carry", value: 2046, isUnsigned: true)
!1335 = !DIEnumerator(name: "CODE_FOR_addhi3_carry", value: 2047, isUnsigned: true)
!1336 = !DIEnumerator(name: "CODE_FOR_subhi3_carry", value: 2048, isUnsigned: true)
!1337 = !DIEnumerator(name: "CODE_FOR_addsi3_carry", value: 2049, isUnsigned: true)
!1338 = !DIEnumerator(name: "CODE_FOR_subsi3_carry", value: 2050, isUnsigned: true)
!1339 = !DIEnumerator(name: "CODE_FOR_adddi3_carry", value: 2051, isUnsigned: true)
!1340 = !DIEnumerator(name: "CODE_FOR_subdi3_carry", value: 2052, isUnsigned: true)
!1341 = !DIEnumerator(name: "CODE_FOR_addxf3", value: 2053, isUnsigned: true)
!1342 = !DIEnumerator(name: "CODE_FOR_subxf3", value: 2054, isUnsigned: true)
!1343 = !DIEnumerator(name: "CODE_FOR_addsf3", value: 2055, isUnsigned: true)
!1344 = !DIEnumerator(name: "CODE_FOR_subsf3", value: 2056, isUnsigned: true)
!1345 = !DIEnumerator(name: "CODE_FOR_adddf3", value: 2057, isUnsigned: true)
!1346 = !DIEnumerator(name: "CODE_FOR_subdf3", value: 2058, isUnsigned: true)
!1347 = !DIEnumerator(name: "CODE_FOR_mulhi3", value: 2059, isUnsigned: true)
!1348 = !DIEnumerator(name: "CODE_FOR_mulsi3", value: 2060, isUnsigned: true)
!1349 = !DIEnumerator(name: "CODE_FOR_mulqi3", value: 2061, isUnsigned: true)
!1350 = !DIEnumerator(name: "CODE_FOR_mulsidi3", value: 2062, isUnsigned: true)
!1351 = !DIEnumerator(name: "CODE_FOR_umulsidi3", value: 2063, isUnsigned: true)
!1352 = !DIEnumerator(name: "CODE_FOR_mulqihi3", value: 2064, isUnsigned: true)
!1353 = !DIEnumerator(name: "CODE_FOR_umulqihi3", value: 2065, isUnsigned: true)
!1354 = !DIEnumerator(name: "CODE_FOR_smulsi3_highpart", value: 2066, isUnsigned: true)
!1355 = !DIEnumerator(name: "CODE_FOR_umulsi3_highpart", value: 2067, isUnsigned: true)
!1356 = !DIEnumerator(name: "CODE_FOR_mulxf3", value: 2068, isUnsigned: true)
!1357 = !DIEnumerator(name: "CODE_FOR_mulsf3", value: 2069, isUnsigned: true)
!1358 = !DIEnumerator(name: "CODE_FOR_muldf3", value: 2070, isUnsigned: true)
!1359 = !DIEnumerator(name: "CODE_FOR_divxf3", value: 2071, isUnsigned: true)
!1360 = !DIEnumerator(name: "CODE_FOR_divdf3", value: 2072, isUnsigned: true)
!1361 = !DIEnumerator(name: "CODE_FOR_divsf3", value: 2073, isUnsigned: true)
!1362 = !DIEnumerator(name: "CODE_FOR_divmodhi4", value: 2074, isUnsigned: true)
!1363 = !DIEnumerator(name: "CODE_FOR_divmodsi4", value: 2075, isUnsigned: true)
!1364 = !DIEnumerator(name: "CODE_FOR_udivmodhi4", value: 2078, isUnsigned: true)
!1365 = !DIEnumerator(name: "CODE_FOR_udivmodsi4", value: 2079, isUnsigned: true)
!1366 = !DIEnumerator(name: "CODE_FOR_testsi_ccno_1", value: 2082, isUnsigned: true)
!1367 = !DIEnumerator(name: "CODE_FOR_testqi_ccz_1", value: 2083, isUnsigned: true)
!1368 = !DIEnumerator(name: "CODE_FOR_testqi_ext_ccno_0", value: 2084, isUnsigned: true)
!1369 = !DIEnumerator(name: "CODE_FOR_andqi3", value: 2088, isUnsigned: true)
!1370 = !DIEnumerator(name: "CODE_FOR_andhi3", value: 2089, isUnsigned: true)
!1371 = !DIEnumerator(name: "CODE_FOR_andsi3", value: 2090, isUnsigned: true)
!1372 = !DIEnumerator(name: "CODE_FOR_iorqi3", value: 2096, isUnsigned: true)
!1373 = !DIEnumerator(name: "CODE_FOR_xorqi3", value: 2097, isUnsigned: true)
!1374 = !DIEnumerator(name: "CODE_FOR_iorhi3", value: 2098, isUnsigned: true)
!1375 = !DIEnumerator(name: "CODE_FOR_xorhi3", value: 2099, isUnsigned: true)
!1376 = !DIEnumerator(name: "CODE_FOR_iorsi3", value: 2100, isUnsigned: true)
!1377 = !DIEnumerator(name: "CODE_FOR_xorsi3", value: 2101, isUnsigned: true)
!1378 = !DIEnumerator(name: "CODE_FOR_xorqi_cc_ext_1", value: 2106, isUnsigned: true)
!1379 = !DIEnumerator(name: "CODE_FOR_negqi2", value: 2107, isUnsigned: true)
!1380 = !DIEnumerator(name: "CODE_FOR_neghi2", value: 2108, isUnsigned: true)
!1381 = !DIEnumerator(name: "CODE_FOR_negsi2", value: 2109, isUnsigned: true)
!1382 = !DIEnumerator(name: "CODE_FOR_negdi2", value: 2110, isUnsigned: true)
!1383 = !DIEnumerator(name: "CODE_FOR_abssf2", value: 2112, isUnsigned: true)
!1384 = !DIEnumerator(name: "CODE_FOR_negsf2", value: 2113, isUnsigned: true)
!1385 = !DIEnumerator(name: "CODE_FOR_absdf2", value: 2114, isUnsigned: true)
!1386 = !DIEnumerator(name: "CODE_FOR_negdf2", value: 2115, isUnsigned: true)
!1387 = !DIEnumerator(name: "CODE_FOR_absxf2", value: 2116, isUnsigned: true)
!1388 = !DIEnumerator(name: "CODE_FOR_negxf2", value: 2117, isUnsigned: true)
!1389 = !DIEnumerator(name: "CODE_FOR_abstf2", value: 2118, isUnsigned: true)
!1390 = !DIEnumerator(name: "CODE_FOR_negtf2", value: 2119, isUnsigned: true)
!1391 = !DIEnumerator(name: "CODE_FOR_copysignsf3", value: 2125, isUnsigned: true)
!1392 = !DIEnumerator(name: "CODE_FOR_copysigndf3", value: 2126, isUnsigned: true)
!1393 = !DIEnumerator(name: "CODE_FOR_copysigntf3", value: 2127, isUnsigned: true)
!1394 = !DIEnumerator(name: "CODE_FOR_one_cmplqi2", value: 2134, isUnsigned: true)
!1395 = !DIEnumerator(name: "CODE_FOR_one_cmplhi2", value: 2135, isUnsigned: true)
!1396 = !DIEnumerator(name: "CODE_FOR_one_cmplsi2", value: 2136, isUnsigned: true)
!1397 = !DIEnumerator(name: "CODE_FOR_ashldi3", value: 2142, isUnsigned: true)
!1398 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_1", value: 2145, isUnsigned: true)
!1399 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_2", value: 2146, isUnsigned: true)
!1400 = !DIEnumerator(name: "CODE_FOR_ashlsi3", value: 2147, isUnsigned: true)
!1401 = !DIEnumerator(name: "CODE_FOR_ashlhi3", value: 2150, isUnsigned: true)
!1402 = !DIEnumerator(name: "CODE_FOR_ashlqi3", value: 2151, isUnsigned: true)
!1403 = !DIEnumerator(name: "CODE_FOR_ashrdi3", value: 2152, isUnsigned: true)
!1404 = !DIEnumerator(name: "CODE_FOR_x86_64_shift_adj_3", value: 2153, isUnsigned: true)
!1405 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_3", value: 2156, isUnsigned: true)
!1406 = !DIEnumerator(name: "CODE_FOR_ashrsi3_31", value: 2157, isUnsigned: true)
!1407 = !DIEnumerator(name: "CODE_FOR_ashrsi3", value: 2158, isUnsigned: true)
!1408 = !DIEnumerator(name: "CODE_FOR_ashrhi3", value: 2159, isUnsigned: true)
!1409 = !DIEnumerator(name: "CODE_FOR_ashrqi3", value: 2160, isUnsigned: true)
!1410 = !DIEnumerator(name: "CODE_FOR_lshrdi3", value: 2161, isUnsigned: true)
!1411 = !DIEnumerator(name: "CODE_FOR_lshrsi3", value: 2164, isUnsigned: true)
!1412 = !DIEnumerator(name: "CODE_FOR_lshrhi3", value: 2165, isUnsigned: true)
!1413 = !DIEnumerator(name: "CODE_FOR_lshrqi3", value: 2166, isUnsigned: true)
!1414 = !DIEnumerator(name: "CODE_FOR_rotldi3", value: 2167, isUnsigned: true)
!1415 = !DIEnumerator(name: "CODE_FOR_rotlsi3", value: 2169, isUnsigned: true)
!1416 = !DIEnumerator(name: "CODE_FOR_rotlhi3", value: 2170, isUnsigned: true)
!1417 = !DIEnumerator(name: "CODE_FOR_rotlqi3", value: 2172, isUnsigned: true)
!1418 = !DIEnumerator(name: "CODE_FOR_rotrdi3", value: 2173, isUnsigned: true)
!1419 = !DIEnumerator(name: "CODE_FOR_rotrsi3", value: 2175, isUnsigned: true)
!1420 = !DIEnumerator(name: "CODE_FOR_rotrhi3", value: 2176, isUnsigned: true)
!1421 = !DIEnumerator(name: "CODE_FOR_rotrqi3", value: 2178, isUnsigned: true)
!1422 = !DIEnumerator(name: "CODE_FOR_extv", value: 2179, isUnsigned: true)
!1423 = !DIEnumerator(name: "CODE_FOR_extzv", value: 2180, isUnsigned: true)
!1424 = !DIEnumerator(name: "CODE_FOR_insv", value: 2181, isUnsigned: true)
!1425 = !DIEnumerator(name: "CODE_FOR_indirect_jump", value: 2200, isUnsigned: true)
!1426 = !DIEnumerator(name: "CODE_FOR_tablejump", value: 2201, isUnsigned: true)
!1427 = !DIEnumerator(name: "CODE_FOR_call_pop", value: 2204, isUnsigned: true)
!1428 = !DIEnumerator(name: "CODE_FOR_call", value: 2205, isUnsigned: true)
!1429 = !DIEnumerator(name: "CODE_FOR_sibcall", value: 2206, isUnsigned: true)
!1430 = !DIEnumerator(name: "CODE_FOR_call_value_pop", value: 2207, isUnsigned: true)
!1431 = !DIEnumerator(name: "CODE_FOR_call_value", value: 2208, isUnsigned: true)
!1432 = !DIEnumerator(name: "CODE_FOR_sibcall_value", value: 2209, isUnsigned: true)
!1433 = !DIEnumerator(name: "CODE_FOR_untyped_call", value: 2210, isUnsigned: true)
!1434 = !DIEnumerator(name: "CODE_FOR_memory_blockage", value: 2211, isUnsigned: true)
!1435 = !DIEnumerator(name: "CODE_FOR_return", value: 2212, isUnsigned: true)
!1436 = !DIEnumerator(name: "CODE_FOR_prologue", value: 2213, isUnsigned: true)
!1437 = !DIEnumerator(name: "CODE_FOR_epilogue", value: 2214, isUnsigned: true)
!1438 = !DIEnumerator(name: "CODE_FOR_sibcall_epilogue", value: 2215, isUnsigned: true)
!1439 = !DIEnumerator(name: "CODE_FOR_eh_return", value: 2216, isUnsigned: true)
!1440 = !DIEnumerator(name: "CODE_FOR_ffssi2", value: 2218, isUnsigned: true)
!1441 = !DIEnumerator(name: "CODE_FOR_ffs_cmove", value: 2219, isUnsigned: true)
!1442 = !DIEnumerator(name: "CODE_FOR_clzsi2", value: 2221, isUnsigned: true)
!1443 = !DIEnumerator(name: "CODE_FOR_bswapsi2", value: 2222, isUnsigned: true)
!1444 = !DIEnumerator(name: "CODE_FOR_clzhi2", value: 2223, isUnsigned: true)
!1445 = !DIEnumerator(name: "CODE_FOR_paritydi2", value: 2224, isUnsigned: true)
!1446 = !DIEnumerator(name: "CODE_FOR_paritysi2", value: 2226, isUnsigned: true)
!1447 = !DIEnumerator(name: "CODE_FOR_tls_global_dynamic_32", value: 2228, isUnsigned: true)
!1448 = !DIEnumerator(name: "CODE_FOR_tls_global_dynamic_64", value: 2229, isUnsigned: true)
!1449 = !DIEnumerator(name: "CODE_FOR_tls_local_dynamic_base_32", value: 2230, isUnsigned: true)
!1450 = !DIEnumerator(name: "CODE_FOR_tls_local_dynamic_base_64", value: 2231, isUnsigned: true)
!1451 = !DIEnumerator(name: "CODE_FOR_tls_dynamic_gnu2_32", value: 2233, isUnsigned: true)
!1452 = !DIEnumerator(name: "CODE_FOR_rsqrtsf2", value: 2240, isUnsigned: true)
!1453 = !DIEnumerator(name: "CODE_FOR_sqrtsf2", value: 2241, isUnsigned: true)
!1454 = !DIEnumerator(name: "CODE_FOR_sqrtdf2", value: 2242, isUnsigned: true)
!1455 = !DIEnumerator(name: "CODE_FOR_fmodxf3", value: 2243, isUnsigned: true)
!1456 = !DIEnumerator(name: "CODE_FOR_fmodsf3", value: 2244, isUnsigned: true)
!1457 = !DIEnumerator(name: "CODE_FOR_fmoddf3", value: 2245, isUnsigned: true)
!1458 = !DIEnumerator(name: "CODE_FOR_remainderxf3", value: 2246, isUnsigned: true)
!1459 = !DIEnumerator(name: "CODE_FOR_remaindersf3", value: 2247, isUnsigned: true)
!1460 = !DIEnumerator(name: "CODE_FOR_remainderdf3", value: 2248, isUnsigned: true)
!1461 = !DIEnumerator(name: "CODE_FOR_sincossf3", value: 2255, isUnsigned: true)
!1462 = !DIEnumerator(name: "CODE_FOR_sincosdf3", value: 2256, isUnsigned: true)
!1463 = !DIEnumerator(name: "CODE_FOR_tanxf2", value: 2257, isUnsigned: true)
!1464 = !DIEnumerator(name: "CODE_FOR_tansf2", value: 2258, isUnsigned: true)
!1465 = !DIEnumerator(name: "CODE_FOR_tandf2", value: 2259, isUnsigned: true)
!1466 = !DIEnumerator(name: "CODE_FOR_atan2xf3", value: 2260, isUnsigned: true)
!1467 = !DIEnumerator(name: "CODE_FOR_atan2sf3", value: 2261, isUnsigned: true)
!1468 = !DIEnumerator(name: "CODE_FOR_atan2df3", value: 2262, isUnsigned: true)
!1469 = !DIEnumerator(name: "CODE_FOR_atanxf2", value: 2263, isUnsigned: true)
!1470 = !DIEnumerator(name: "CODE_FOR_atansf2", value: 2264, isUnsigned: true)
!1471 = !DIEnumerator(name: "CODE_FOR_atandf2", value: 2265, isUnsigned: true)
!1472 = !DIEnumerator(name: "CODE_FOR_asinxf2", value: 2266, isUnsigned: true)
!1473 = !DIEnumerator(name: "CODE_FOR_asinsf2", value: 2267, isUnsigned: true)
!1474 = !DIEnumerator(name: "CODE_FOR_asindf2", value: 2268, isUnsigned: true)
!1475 = !DIEnumerator(name: "CODE_FOR_acosxf2", value: 2269, isUnsigned: true)
!1476 = !DIEnumerator(name: "CODE_FOR_acossf2", value: 2270, isUnsigned: true)
!1477 = !DIEnumerator(name: "CODE_FOR_acosdf2", value: 2271, isUnsigned: true)
!1478 = !DIEnumerator(name: "CODE_FOR_logxf2", value: 2272, isUnsigned: true)
!1479 = !DIEnumerator(name: "CODE_FOR_logsf2", value: 2273, isUnsigned: true)
!1480 = !DIEnumerator(name: "CODE_FOR_logdf2", value: 2274, isUnsigned: true)
!1481 = !DIEnumerator(name: "CODE_FOR_log10xf2", value: 2275, isUnsigned: true)
!1482 = !DIEnumerator(name: "CODE_FOR_log10sf2", value: 2276, isUnsigned: true)
!1483 = !DIEnumerator(name: "CODE_FOR_log10df2", value: 2277, isUnsigned: true)
!1484 = !DIEnumerator(name: "CODE_FOR_log2xf2", value: 2278, isUnsigned: true)
!1485 = !DIEnumerator(name: "CODE_FOR_log2sf2", value: 2279, isUnsigned: true)
!1486 = !DIEnumerator(name: "CODE_FOR_log2df2", value: 2280, isUnsigned: true)
!1487 = !DIEnumerator(name: "CODE_FOR_log1pxf2", value: 2281, isUnsigned: true)
!1488 = !DIEnumerator(name: "CODE_FOR_log1psf2", value: 2282, isUnsigned: true)
!1489 = !DIEnumerator(name: "CODE_FOR_log1pdf2", value: 2283, isUnsigned: true)
!1490 = !DIEnumerator(name: "CODE_FOR_logbxf2", value: 2284, isUnsigned: true)
!1491 = !DIEnumerator(name: "CODE_FOR_logbsf2", value: 2285, isUnsigned: true)
!1492 = !DIEnumerator(name: "CODE_FOR_logbdf2", value: 2286, isUnsigned: true)
!1493 = !DIEnumerator(name: "CODE_FOR_ilogbxf2", value: 2287, isUnsigned: true)
!1494 = !DIEnumerator(name: "CODE_FOR_ilogbsf2", value: 2288, isUnsigned: true)
!1495 = !DIEnumerator(name: "CODE_FOR_ilogbdf2", value: 2289, isUnsigned: true)
!1496 = !DIEnumerator(name: "CODE_FOR_expNcorexf3", value: 2290, isUnsigned: true)
!1497 = !DIEnumerator(name: "CODE_FOR_expxf2", value: 2291, isUnsigned: true)
!1498 = !DIEnumerator(name: "CODE_FOR_expsf2", value: 2292, isUnsigned: true)
!1499 = !DIEnumerator(name: "CODE_FOR_expdf2", value: 2293, isUnsigned: true)
!1500 = !DIEnumerator(name: "CODE_FOR_exp10xf2", value: 2294, isUnsigned: true)
!1501 = !DIEnumerator(name: "CODE_FOR_exp10sf2", value: 2295, isUnsigned: true)
!1502 = !DIEnumerator(name: "CODE_FOR_exp10df2", value: 2296, isUnsigned: true)
!1503 = !DIEnumerator(name: "CODE_FOR_exp2xf2", value: 2297, isUnsigned: true)
!1504 = !DIEnumerator(name: "CODE_FOR_exp2sf2", value: 2298, isUnsigned: true)
!1505 = !DIEnumerator(name: "CODE_FOR_exp2df2", value: 2299, isUnsigned: true)
!1506 = !DIEnumerator(name: "CODE_FOR_expm1xf2", value: 2300, isUnsigned: true)
!1507 = !DIEnumerator(name: "CODE_FOR_expm1sf2", value: 2301, isUnsigned: true)
!1508 = !DIEnumerator(name: "CODE_FOR_expm1df2", value: 2302, isUnsigned: true)
!1509 = !DIEnumerator(name: "CODE_FOR_ldexpxf3", value: 2303, isUnsigned: true)
!1510 = !DIEnumerator(name: "CODE_FOR_ldexpsf3", value: 2304, isUnsigned: true)
!1511 = !DIEnumerator(name: "CODE_FOR_ldexpdf3", value: 2305, isUnsigned: true)
!1512 = !DIEnumerator(name: "CODE_FOR_scalbxf3", value: 2306, isUnsigned: true)
!1513 = !DIEnumerator(name: "CODE_FOR_scalbsf3", value: 2307, isUnsigned: true)
!1514 = !DIEnumerator(name: "CODE_FOR_scalbdf3", value: 2308, isUnsigned: true)
!1515 = !DIEnumerator(name: "CODE_FOR_significandxf2", value: 2309, isUnsigned: true)
!1516 = !DIEnumerator(name: "CODE_FOR_significandsf2", value: 2310, isUnsigned: true)
!1517 = !DIEnumerator(name: "CODE_FOR_significanddf2", value: 2311, isUnsigned: true)
!1518 = !DIEnumerator(name: "CODE_FOR_rintsf2", value: 2312, isUnsigned: true)
!1519 = !DIEnumerator(name: "CODE_FOR_rintdf2", value: 2313, isUnsigned: true)
!1520 = !DIEnumerator(name: "CODE_FOR_roundsf2", value: 2314, isUnsigned: true)
!1521 = !DIEnumerator(name: "CODE_FOR_rounddf2", value: 2315, isUnsigned: true)
!1522 = !DIEnumerator(name: "CODE_FOR_lrintxfhi2", value: 2325, isUnsigned: true)
!1523 = !DIEnumerator(name: "CODE_FOR_lrintxfsi2", value: 2326, isUnsigned: true)
!1524 = !DIEnumerator(name: "CODE_FOR_lrintxfdi2", value: 2327, isUnsigned: true)
!1525 = !DIEnumerator(name: "CODE_FOR_lrintsfsi2", value: 2328, isUnsigned: true)
!1526 = !DIEnumerator(name: "CODE_FOR_lrintdfsi2", value: 2329, isUnsigned: true)
!1527 = !DIEnumerator(name: "CODE_FOR_lroundsfsi2", value: 2330, isUnsigned: true)
!1528 = !DIEnumerator(name: "CODE_FOR_lrounddfsi2", value: 2331, isUnsigned: true)
!1529 = !DIEnumerator(name: "CODE_FOR_floorxf2", value: 2333, isUnsigned: true)
!1530 = !DIEnumerator(name: "CODE_FOR_floorsf2", value: 2334, isUnsigned: true)
!1531 = !DIEnumerator(name: "CODE_FOR_floordf2", value: 2335, isUnsigned: true)
!1532 = !DIEnumerator(name: "CODE_FOR_lfloorxfhi2", value: 2345, isUnsigned: true)
!1533 = !DIEnumerator(name: "CODE_FOR_lfloorxfsi2", value: 2346, isUnsigned: true)
!1534 = !DIEnumerator(name: "CODE_FOR_lfloorxfdi2", value: 2347, isUnsigned: true)
!1535 = !DIEnumerator(name: "CODE_FOR_lfloorsfsi2", value: 2348, isUnsigned: true)
!1536 = !DIEnumerator(name: "CODE_FOR_lfloordfsi2", value: 2349, isUnsigned: true)
!1537 = !DIEnumerator(name: "CODE_FOR_ceilxf2", value: 2351, isUnsigned: true)
!1538 = !DIEnumerator(name: "CODE_FOR_ceilsf2", value: 2352, isUnsigned: true)
!1539 = !DIEnumerator(name: "CODE_FOR_ceildf2", value: 2353, isUnsigned: true)
!1540 = !DIEnumerator(name: "CODE_FOR_lceilxfhi2", value: 2363, isUnsigned: true)
!1541 = !DIEnumerator(name: "CODE_FOR_lceilxfsi2", value: 2364, isUnsigned: true)
!1542 = !DIEnumerator(name: "CODE_FOR_lceilxfdi2", value: 2365, isUnsigned: true)
!1543 = !DIEnumerator(name: "CODE_FOR_lceilsfsi2", value: 2366, isUnsigned: true)
!1544 = !DIEnumerator(name: "CODE_FOR_lceildfsi2", value: 2367, isUnsigned: true)
!1545 = !DIEnumerator(name: "CODE_FOR_btruncxf2", value: 2369, isUnsigned: true)
!1546 = !DIEnumerator(name: "CODE_FOR_btruncsf2", value: 2370, isUnsigned: true)
!1547 = !DIEnumerator(name: "CODE_FOR_btruncdf2", value: 2371, isUnsigned: true)
!1548 = !DIEnumerator(name: "CODE_FOR_nearbyintxf2", value: 2373, isUnsigned: true)
!1549 = !DIEnumerator(name: "CODE_FOR_nearbyintsf2", value: 2374, isUnsigned: true)
!1550 = !DIEnumerator(name: "CODE_FOR_nearbyintdf2", value: 2375, isUnsigned: true)
!1551 = !DIEnumerator(name: "CODE_FOR_isinfxf2", value: 2378, isUnsigned: true)
!1552 = !DIEnumerator(name: "CODE_FOR_isinfsf2", value: 2379, isUnsigned: true)
!1553 = !DIEnumerator(name: "CODE_FOR_isinfdf2", value: 2380, isUnsigned: true)
!1554 = !DIEnumerator(name: "CODE_FOR_signbitsf2", value: 2381, isUnsigned: true)
!1555 = !DIEnumerator(name: "CODE_FOR_signbitdf2", value: 2382, isUnsigned: true)
!1556 = !DIEnumerator(name: "CODE_FOR_signbitxf2", value: 2383, isUnsigned: true)
!1557 = !DIEnumerator(name: "CODE_FOR_movmemsi", value: 2384, isUnsigned: true)
!1558 = !DIEnumerator(name: "CODE_FOR_strmov", value: 2385, isUnsigned: true)
!1559 = !DIEnumerator(name: "CODE_FOR_strmov_singleop", value: 2386, isUnsigned: true)
!1560 = !DIEnumerator(name: "CODE_FOR_rep_mov", value: 2387, isUnsigned: true)
!1561 = !DIEnumerator(name: "CODE_FOR_setmemsi", value: 2388, isUnsigned: true)
!1562 = !DIEnumerator(name: "CODE_FOR_strset", value: 2389, isUnsigned: true)
!1563 = !DIEnumerator(name: "CODE_FOR_strset_singleop", value: 2390, isUnsigned: true)
!1564 = !DIEnumerator(name: "CODE_FOR_rep_stos", value: 2391, isUnsigned: true)
!1565 = !DIEnumerator(name: "CODE_FOR_cmpstrnsi", value: 2392, isUnsigned: true)
!1566 = !DIEnumerator(name: "CODE_FOR_cmpintqi", value: 2393, isUnsigned: true)
!1567 = !DIEnumerator(name: "CODE_FOR_cmpstrnqi_nz_1", value: 2394, isUnsigned: true)
!1568 = !DIEnumerator(name: "CODE_FOR_cmpstrnqi_1", value: 2395, isUnsigned: true)
!1569 = !DIEnumerator(name: "CODE_FOR_strlensi", value: 2396, isUnsigned: true)
!1570 = !DIEnumerator(name: "CODE_FOR_strlendi", value: 2397, isUnsigned: true)
!1571 = !DIEnumerator(name: "CODE_FOR_strlenqi_1", value: 2398, isUnsigned: true)
!1572 = !DIEnumerator(name: "CODE_FOR_movqicc", value: 2401, isUnsigned: true)
!1573 = !DIEnumerator(name: "CODE_FOR_movhicc", value: 2402, isUnsigned: true)
!1574 = !DIEnumerator(name: "CODE_FOR_movsicc", value: 2403, isUnsigned: true)
!1575 = !DIEnumerator(name: "CODE_FOR_x86_movsicc_0_m1", value: 2404, isUnsigned: true)
!1576 = !DIEnumerator(name: "CODE_FOR_movsfcc", value: 2406, isUnsigned: true)
!1577 = !DIEnumerator(name: "CODE_FOR_movdfcc", value: 2407, isUnsigned: true)
!1578 = !DIEnumerator(name: "CODE_FOR_movxfcc", value: 2408, isUnsigned: true)
!1579 = !DIEnumerator(name: "CODE_FOR_addqicc", value: 2411, isUnsigned: true)
!1580 = !DIEnumerator(name: "CODE_FOR_addhicc", value: 2412, isUnsigned: true)
!1581 = !DIEnumerator(name: "CODE_FOR_addsicc", value: 2413, isUnsigned: true)
!1582 = !DIEnumerator(name: "CODE_FOR_allocate_stack", value: 2414, isUnsigned: true)
!1583 = !DIEnumerator(name: "CODE_FOR_probe_stack", value: 2415, isUnsigned: true)
!1584 = !DIEnumerator(name: "CODE_FOR_builtin_setjmp_receiver", value: 2416, isUnsigned: true)
!1585 = !DIEnumerator(name: "CODE_FOR_prefetch", value: 2486, isUnsigned: true)
!1586 = !DIEnumerator(name: "CODE_FOR_stack_protect_set", value: 2487, isUnsigned: true)
!1587 = !DIEnumerator(name: "CODE_FOR_stack_protect_test", value: 2488, isUnsigned: true)
!1588 = !DIEnumerator(name: "CODE_FOR_rdpmc", value: 2489, isUnsigned: true)
!1589 = !DIEnumerator(name: "CODE_FOR_rdtsc", value: 2490, isUnsigned: true)
!1590 = !DIEnumerator(name: "CODE_FOR_rdtscp", value: 2491, isUnsigned: true)
!1591 = !DIEnumerator(name: "CODE_FOR_lwp_llwpcb", value: 2492, isUnsigned: true)
!1592 = !DIEnumerator(name: "CODE_FOR_lwp_slwpcb", value: 2493, isUnsigned: true)
!1593 = !DIEnumerator(name: "CODE_FOR_lwp_lwpvalsi3", value: 2494, isUnsigned: true)
!1594 = !DIEnumerator(name: "CODE_FOR_lwp_lwpinssi3", value: 2495, isUnsigned: true)
!1595 = !DIEnumerator(name: "CODE_FOR_movv8qi", value: 2496, isUnsigned: true)
!1596 = !DIEnumerator(name: "CODE_FOR_movv4hi", value: 2497, isUnsigned: true)
!1597 = !DIEnumerator(name: "CODE_FOR_movv2si", value: 2498, isUnsigned: true)
!1598 = !DIEnumerator(name: "CODE_FOR_movv1di", value: 2499, isUnsigned: true)
!1599 = !DIEnumerator(name: "CODE_FOR_movv2sf", value: 2500, isUnsigned: true)
!1600 = !DIEnumerator(name: "CODE_FOR_pushv8qi1", value: 2506, isUnsigned: true)
!1601 = !DIEnumerator(name: "CODE_FOR_pushv4hi1", value: 2507, isUnsigned: true)
!1602 = !DIEnumerator(name: "CODE_FOR_pushv2si1", value: 2508, isUnsigned: true)
!1603 = !DIEnumerator(name: "CODE_FOR_pushv1di1", value: 2509, isUnsigned: true)
!1604 = !DIEnumerator(name: "CODE_FOR_pushv2sf1", value: 2510, isUnsigned: true)
!1605 = !DIEnumerator(name: "CODE_FOR_movmisalignv8qi", value: 2511, isUnsigned: true)
!1606 = !DIEnumerator(name: "CODE_FOR_movmisalignv4hi", value: 2512, isUnsigned: true)
!1607 = !DIEnumerator(name: "CODE_FOR_movmisalignv2si", value: 2513, isUnsigned: true)
!1608 = !DIEnumerator(name: "CODE_FOR_movmisalignv1di", value: 2514, isUnsigned: true)
!1609 = !DIEnumerator(name: "CODE_FOR_movmisalignv2sf", value: 2515, isUnsigned: true)
!1610 = !DIEnumerator(name: "CODE_FOR_mmx_addv2sf3", value: 2516, isUnsigned: true)
!1611 = !DIEnumerator(name: "CODE_FOR_mmx_subv2sf3", value: 2517, isUnsigned: true)
!1612 = !DIEnumerator(name: "CODE_FOR_mmx_subrv2sf3", value: 2518, isUnsigned: true)
!1613 = !DIEnumerator(name: "CODE_FOR_mmx_mulv2sf3", value: 2519, isUnsigned: true)
!1614 = !DIEnumerator(name: "CODE_FOR_mmx_smaxv2sf3", value: 2520, isUnsigned: true)
!1615 = !DIEnumerator(name: "CODE_FOR_mmx_sminv2sf3", value: 2521, isUnsigned: true)
!1616 = !DIEnumerator(name: "CODE_FOR_mmx_eqv2sf3", value: 2522, isUnsigned: true)
!1617 = !DIEnumerator(name: "CODE_FOR_vec_setv2sf", value: 2523, isUnsigned: true)
!1618 = !DIEnumerator(name: "CODE_FOR_vec_extractv2sf", value: 2526, isUnsigned: true)
!1619 = !DIEnumerator(name: "CODE_FOR_vec_initv2sf", value: 2527, isUnsigned: true)
!1620 = !DIEnumerator(name: "CODE_FOR_mmx_addv8qi3", value: 2528, isUnsigned: true)
!1621 = !DIEnumerator(name: "CODE_FOR_mmx_subv8qi3", value: 2529, isUnsigned: true)
!1622 = !DIEnumerator(name: "CODE_FOR_mmx_addv4hi3", value: 2530, isUnsigned: true)
!1623 = !DIEnumerator(name: "CODE_FOR_mmx_subv4hi3", value: 2531, isUnsigned: true)
!1624 = !DIEnumerator(name: "CODE_FOR_mmx_addv2si3", value: 2532, isUnsigned: true)
!1625 = !DIEnumerator(name: "CODE_FOR_mmx_subv2si3", value: 2533, isUnsigned: true)
!1626 = !DIEnumerator(name: "CODE_FOR_mmx_addv1di3", value: 2534, isUnsigned: true)
!1627 = !DIEnumerator(name: "CODE_FOR_mmx_subv1di3", value: 2535, isUnsigned: true)
!1628 = !DIEnumerator(name: "CODE_FOR_mmx_ssaddv8qi3", value: 2536, isUnsigned: true)
!1629 = !DIEnumerator(name: "CODE_FOR_mmx_usaddv8qi3", value: 2537, isUnsigned: true)
!1630 = !DIEnumerator(name: "CODE_FOR_mmx_sssubv8qi3", value: 2538, isUnsigned: true)
!1631 = !DIEnumerator(name: "CODE_FOR_mmx_ussubv8qi3", value: 2539, isUnsigned: true)
!1632 = !DIEnumerator(name: "CODE_FOR_mmx_ssaddv4hi3", value: 2540, isUnsigned: true)
!1633 = !DIEnumerator(name: "CODE_FOR_mmx_usaddv4hi3", value: 2541, isUnsigned: true)
!1634 = !DIEnumerator(name: "CODE_FOR_mmx_sssubv4hi3", value: 2542, isUnsigned: true)
!1635 = !DIEnumerator(name: "CODE_FOR_mmx_ussubv4hi3", value: 2543, isUnsigned: true)
!1636 = !DIEnumerator(name: "CODE_FOR_mmx_mulv4hi3", value: 2544, isUnsigned: true)
!1637 = !DIEnumerator(name: "CODE_FOR_mmx_smulv4hi3_highpart", value: 2545, isUnsigned: true)
!1638 = !DIEnumerator(name: "CODE_FOR_mmx_umulv4hi3_highpart", value: 2546, isUnsigned: true)
!1639 = !DIEnumerator(name: "CODE_FOR_mmx_pmaddwd", value: 2547, isUnsigned: true)
!1640 = !DIEnumerator(name: "CODE_FOR_mmx_pmulhrwv4hi3", value: 2548, isUnsigned: true)
!1641 = !DIEnumerator(name: "CODE_FOR_sse2_umulv1siv1di3", value: 2549, isUnsigned: true)
!1642 = !DIEnumerator(name: "CODE_FOR_mmx_smaxv4hi3", value: 2550, isUnsigned: true)
!1643 = !DIEnumerator(name: "CODE_FOR_mmx_sminv4hi3", value: 2551, isUnsigned: true)
!1644 = !DIEnumerator(name: "CODE_FOR_mmx_umaxv8qi3", value: 2552, isUnsigned: true)
!1645 = !DIEnumerator(name: "CODE_FOR_mmx_uminv8qi3", value: 2553, isUnsigned: true)
!1646 = !DIEnumerator(name: "CODE_FOR_mmx_eqv8qi3", value: 2554, isUnsigned: true)
!1647 = !DIEnumerator(name: "CODE_FOR_mmx_eqv4hi3", value: 2555, isUnsigned: true)
!1648 = !DIEnumerator(name: "CODE_FOR_mmx_eqv2si3", value: 2556, isUnsigned: true)
!1649 = !DIEnumerator(name: "CODE_FOR_mmx_andv8qi3", value: 2557, isUnsigned: true)
!1650 = !DIEnumerator(name: "CODE_FOR_mmx_iorv8qi3", value: 2558, isUnsigned: true)
!1651 = !DIEnumerator(name: "CODE_FOR_mmx_xorv8qi3", value: 2559, isUnsigned: true)
!1652 = !DIEnumerator(name: "CODE_FOR_mmx_andv4hi3", value: 2560, isUnsigned: true)
!1653 = !DIEnumerator(name: "CODE_FOR_mmx_iorv4hi3", value: 2561, isUnsigned: true)
!1654 = !DIEnumerator(name: "CODE_FOR_mmx_xorv4hi3", value: 2562, isUnsigned: true)
!1655 = !DIEnumerator(name: "CODE_FOR_mmx_andv2si3", value: 2563, isUnsigned: true)
!1656 = !DIEnumerator(name: "CODE_FOR_mmx_iorv2si3", value: 2564, isUnsigned: true)
!1657 = !DIEnumerator(name: "CODE_FOR_mmx_xorv2si3", value: 2565, isUnsigned: true)
!1658 = !DIEnumerator(name: "CODE_FOR_mmx_pinsrw", value: 2566, isUnsigned: true)
!1659 = !DIEnumerator(name: "CODE_FOR_mmx_pshufw", value: 2567, isUnsigned: true)
!1660 = !DIEnumerator(name: "CODE_FOR_vec_setv2si", value: 2568, isUnsigned: true)
!1661 = !DIEnumerator(name: "CODE_FOR_vec_extractv2si", value: 2571, isUnsigned: true)
!1662 = !DIEnumerator(name: "CODE_FOR_vec_initv2si", value: 2572, isUnsigned: true)
!1663 = !DIEnumerator(name: "CODE_FOR_vec_setv4hi", value: 2573, isUnsigned: true)
!1664 = !DIEnumerator(name: "CODE_FOR_vec_extractv4hi", value: 2574, isUnsigned: true)
!1665 = !DIEnumerator(name: "CODE_FOR_vec_initv4hi", value: 2575, isUnsigned: true)
!1666 = !DIEnumerator(name: "CODE_FOR_vec_setv8qi", value: 2576, isUnsigned: true)
!1667 = !DIEnumerator(name: "CODE_FOR_vec_extractv8qi", value: 2577, isUnsigned: true)
!1668 = !DIEnumerator(name: "CODE_FOR_vec_initv8qi", value: 2578, isUnsigned: true)
!1669 = !DIEnumerator(name: "CODE_FOR_mmx_uavgv8qi3", value: 2579, isUnsigned: true)
!1670 = !DIEnumerator(name: "CODE_FOR_mmx_uavgv4hi3", value: 2580, isUnsigned: true)
!1671 = !DIEnumerator(name: "CODE_FOR_mmx_maskmovq", value: 2581, isUnsigned: true)
!1672 = !DIEnumerator(name: "CODE_FOR_mmx_emms", value: 2582, isUnsigned: true)
!1673 = !DIEnumerator(name: "CODE_FOR_mmx_femms", value: 2583, isUnsigned: true)
!1674 = !DIEnumerator(name: "CODE_FOR_movv32qi", value: 2584, isUnsigned: true)
!1675 = !DIEnumerator(name: "CODE_FOR_movv16hi", value: 2585, isUnsigned: true)
!1676 = !DIEnumerator(name: "CODE_FOR_movv8si", value: 2586, isUnsigned: true)
!1677 = !DIEnumerator(name: "CODE_FOR_movv4di", value: 2587, isUnsigned: true)
!1678 = !DIEnumerator(name: "CODE_FOR_movv8sf", value: 2588, isUnsigned: true)
!1679 = !DIEnumerator(name: "CODE_FOR_movv4df", value: 2589, isUnsigned: true)
!1680 = !DIEnumerator(name: "CODE_FOR_movv16qi", value: 2590, isUnsigned: true)
!1681 = !DIEnumerator(name: "CODE_FOR_movv8hi", value: 2591, isUnsigned: true)
!1682 = !DIEnumerator(name: "CODE_FOR_movv4si", value: 2592, isUnsigned: true)
!1683 = !DIEnumerator(name: "CODE_FOR_movv2di", value: 2593, isUnsigned: true)
!1684 = !DIEnumerator(name: "CODE_FOR_movv1ti", value: 2594, isUnsigned: true)
!1685 = !DIEnumerator(name: "CODE_FOR_movv4sf", value: 2595, isUnsigned: true)
!1686 = !DIEnumerator(name: "CODE_FOR_movv2df", value: 2596, isUnsigned: true)
!1687 = !DIEnumerator(name: "CODE_FOR_pushv32qi1", value: 2600, isUnsigned: true)
!1688 = !DIEnumerator(name: "CODE_FOR_pushv16hi1", value: 2601, isUnsigned: true)
!1689 = !DIEnumerator(name: "CODE_FOR_pushv8si1", value: 2602, isUnsigned: true)
!1690 = !DIEnumerator(name: "CODE_FOR_pushv4di1", value: 2603, isUnsigned: true)
!1691 = !DIEnumerator(name: "CODE_FOR_pushv8sf1", value: 2604, isUnsigned: true)
!1692 = !DIEnumerator(name: "CODE_FOR_pushv4df1", value: 2605, isUnsigned: true)
!1693 = !DIEnumerator(name: "CODE_FOR_pushv16qi1", value: 2606, isUnsigned: true)
!1694 = !DIEnumerator(name: "CODE_FOR_pushv8hi1", value: 2607, isUnsigned: true)
!1695 = !DIEnumerator(name: "CODE_FOR_pushv4si1", value: 2608, isUnsigned: true)
!1696 = !DIEnumerator(name: "CODE_FOR_pushv2di1", value: 2609, isUnsigned: true)
!1697 = !DIEnumerator(name: "CODE_FOR_pushv1ti1", value: 2610, isUnsigned: true)
!1698 = !DIEnumerator(name: "CODE_FOR_pushv4sf1", value: 2611, isUnsigned: true)
!1699 = !DIEnumerator(name: "CODE_FOR_pushv2df1", value: 2612, isUnsigned: true)
!1700 = !DIEnumerator(name: "CODE_FOR_movmisalignv32qi", value: 2613, isUnsigned: true)
!1701 = !DIEnumerator(name: "CODE_FOR_movmisalignv16hi", value: 2614, isUnsigned: true)
!1702 = !DIEnumerator(name: "CODE_FOR_movmisalignv8si", value: 2615, isUnsigned: true)
!1703 = !DIEnumerator(name: "CODE_FOR_movmisalignv4di", value: 2616, isUnsigned: true)
!1704 = !DIEnumerator(name: "CODE_FOR_movmisalignv8sf", value: 2617, isUnsigned: true)
!1705 = !DIEnumerator(name: "CODE_FOR_movmisalignv4df", value: 2618, isUnsigned: true)
!1706 = !DIEnumerator(name: "CODE_FOR_movmisalignv16qi", value: 2619, isUnsigned: true)
!1707 = !DIEnumerator(name: "CODE_FOR_movmisalignv8hi", value: 2620, isUnsigned: true)
!1708 = !DIEnumerator(name: "CODE_FOR_movmisalignv4si", value: 2621, isUnsigned: true)
!1709 = !DIEnumerator(name: "CODE_FOR_movmisalignv2di", value: 2622, isUnsigned: true)
!1710 = !DIEnumerator(name: "CODE_FOR_movmisalignv1ti", value: 2623, isUnsigned: true)
!1711 = !DIEnumerator(name: "CODE_FOR_movmisalignv4sf", value: 2624, isUnsigned: true)
!1712 = !DIEnumerator(name: "CODE_FOR_movmisalignv2df", value: 2625, isUnsigned: true)
!1713 = !DIEnumerator(name: "CODE_FOR_storentv4sf", value: 2626, isUnsigned: true)
!1714 = !DIEnumerator(name: "CODE_FOR_storentv2df", value: 2627, isUnsigned: true)
!1715 = !DIEnumerator(name: "CODE_FOR_storentsf", value: 2628, isUnsigned: true)
!1716 = !DIEnumerator(name: "CODE_FOR_storentdf", value: 2629, isUnsigned: true)
!1717 = !DIEnumerator(name: "CODE_FOR_storentv2di", value: 2630, isUnsigned: true)
!1718 = !DIEnumerator(name: "CODE_FOR_storentsi", value: 2631, isUnsigned: true)
!1719 = !DIEnumerator(name: "CODE_FOR_absv4sf2", value: 2632, isUnsigned: true)
!1720 = !DIEnumerator(name: "CODE_FOR_negv4sf2", value: 2633, isUnsigned: true)
!1721 = !DIEnumerator(name: "CODE_FOR_absv2df2", value: 2634, isUnsigned: true)
!1722 = !DIEnumerator(name: "CODE_FOR_negv2df2", value: 2635, isUnsigned: true)
!1723 = !DIEnumerator(name: "CODE_FOR_addv8sf3", value: 2636, isUnsigned: true)
!1724 = !DIEnumerator(name: "CODE_FOR_subv8sf3", value: 2637, isUnsigned: true)
!1725 = !DIEnumerator(name: "CODE_FOR_addv4df3", value: 2638, isUnsigned: true)
!1726 = !DIEnumerator(name: "CODE_FOR_subv4df3", value: 2639, isUnsigned: true)
!1727 = !DIEnumerator(name: "CODE_FOR_addv4sf3", value: 2640, isUnsigned: true)
!1728 = !DIEnumerator(name: "CODE_FOR_subv4sf3", value: 2641, isUnsigned: true)
!1729 = !DIEnumerator(name: "CODE_FOR_addv2df3", value: 2642, isUnsigned: true)
!1730 = !DIEnumerator(name: "CODE_FOR_subv2df3", value: 2643, isUnsigned: true)
!1731 = !DIEnumerator(name: "CODE_FOR_mulv8sf3", value: 2644, isUnsigned: true)
!1732 = !DIEnumerator(name: "CODE_FOR_mulv4df3", value: 2645, isUnsigned: true)
!1733 = !DIEnumerator(name: "CODE_FOR_mulv4sf3", value: 2646, isUnsigned: true)
!1734 = !DIEnumerator(name: "CODE_FOR_mulv2df3", value: 2647, isUnsigned: true)
!1735 = !DIEnumerator(name: "CODE_FOR_divv8sf3", value: 2648, isUnsigned: true)
!1736 = !DIEnumerator(name: "CODE_FOR_divv4df3", value: 2649, isUnsigned: true)
!1737 = !DIEnumerator(name: "CODE_FOR_divv4sf3", value: 2650, isUnsigned: true)
!1738 = !DIEnumerator(name: "CODE_FOR_divv2df3", value: 2651, isUnsigned: true)
!1739 = !DIEnumerator(name: "CODE_FOR_sqrtv8sf2", value: 2652, isUnsigned: true)
!1740 = !DIEnumerator(name: "CODE_FOR_sqrtv4sf2", value: 2653, isUnsigned: true)
!1741 = !DIEnumerator(name: "CODE_FOR_rsqrtv8sf2", value: 2654, isUnsigned: true)
!1742 = !DIEnumerator(name: "CODE_FOR_rsqrtv4sf2", value: 2655, isUnsigned: true)
!1743 = !DIEnumerator(name: "CODE_FOR_smaxv8sf3", value: 2656, isUnsigned: true)
!1744 = !DIEnumerator(name: "CODE_FOR_sminv8sf3", value: 2657, isUnsigned: true)
!1745 = !DIEnumerator(name: "CODE_FOR_smaxv4df3", value: 2658, isUnsigned: true)
!1746 = !DIEnumerator(name: "CODE_FOR_sminv4df3", value: 2659, isUnsigned: true)
!1747 = !DIEnumerator(name: "CODE_FOR_smaxv4sf3", value: 2660, isUnsigned: true)
!1748 = !DIEnumerator(name: "CODE_FOR_sminv4sf3", value: 2661, isUnsigned: true)
!1749 = !DIEnumerator(name: "CODE_FOR_smaxv2df3", value: 2662, isUnsigned: true)
!1750 = !DIEnumerator(name: "CODE_FOR_sminv2df3", value: 2663, isUnsigned: true)
!1751 = !DIEnumerator(name: "CODE_FOR_reduc_splus_v4sf", value: 2664, isUnsigned: true)
!1752 = !DIEnumerator(name: "CODE_FOR_reduc_splus_v2df", value: 2665, isUnsigned: true)
!1753 = !DIEnumerator(name: "CODE_FOR_reduc_smax_v4sf", value: 2666, isUnsigned: true)
!1754 = !DIEnumerator(name: "CODE_FOR_reduc_smin_v4sf", value: 2667, isUnsigned: true)
!1755 = !DIEnumerator(name: "CODE_FOR_vcondv4sf", value: 2668, isUnsigned: true)
!1756 = !DIEnumerator(name: "CODE_FOR_vcondv2df", value: 2669, isUnsigned: true)
!1757 = !DIEnumerator(name: "CODE_FOR_andv8sf3", value: 2670, isUnsigned: true)
!1758 = !DIEnumerator(name: "CODE_FOR_iorv8sf3", value: 2671, isUnsigned: true)
!1759 = !DIEnumerator(name: "CODE_FOR_xorv8sf3", value: 2672, isUnsigned: true)
!1760 = !DIEnumerator(name: "CODE_FOR_andv4df3", value: 2673, isUnsigned: true)
!1761 = !DIEnumerator(name: "CODE_FOR_iorv4df3", value: 2674, isUnsigned: true)
!1762 = !DIEnumerator(name: "CODE_FOR_xorv4df3", value: 2675, isUnsigned: true)
!1763 = !DIEnumerator(name: "CODE_FOR_andv4sf3", value: 2676, isUnsigned: true)
!1764 = !DIEnumerator(name: "CODE_FOR_iorv4sf3", value: 2677, isUnsigned: true)
!1765 = !DIEnumerator(name: "CODE_FOR_xorv4sf3", value: 2678, isUnsigned: true)
!1766 = !DIEnumerator(name: "CODE_FOR_andv2df3", value: 2679, isUnsigned: true)
!1767 = !DIEnumerator(name: "CODE_FOR_iorv2df3", value: 2680, isUnsigned: true)
!1768 = !DIEnumerator(name: "CODE_FOR_xorv2df3", value: 2681, isUnsigned: true)
!1769 = !DIEnumerator(name: "CODE_FOR_copysignv4sf3", value: 2682, isUnsigned: true)
!1770 = !DIEnumerator(name: "CODE_FOR_copysignv2df3", value: 2683, isUnsigned: true)
!1771 = !DIEnumerator(name: "CODE_FOR_sse2_cvtudq2ps", value: 2684, isUnsigned: true)
!1772 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2dq", value: 2685, isUnsigned: true)
!1773 = !DIEnumerator(name: "CODE_FOR_sse2_cvttpd2dq", value: 2686, isUnsigned: true)
!1774 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2ps", value: 2687, isUnsigned: true)
!1775 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v4sf", value: 2688, isUnsigned: true)
!1776 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v4sf", value: 2689, isUnsigned: true)
!1777 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_hi_v8hi", value: 2690, isUnsigned: true)
!1778 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_lo_v8hi", value: 2691, isUnsigned: true)
!1779 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_hi_v8hi", value: 2692, isUnsigned: true)
!1780 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_lo_v8hi", value: 2693, isUnsigned: true)
!1781 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_hi_v4si", value: 2694, isUnsigned: true)
!1782 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_lo_v4si", value: 2695, isUnsigned: true)
!1783 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_hi_v4si", value: 2696, isUnsigned: true)
!1784 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_lo_v4si", value: 2697, isUnsigned: true)
!1785 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v2df", value: 2698, isUnsigned: true)
!1786 = !DIEnumerator(name: "CODE_FOR_vec_pack_sfix_trunc_v2df", value: 2699, isUnsigned: true)
!1787 = !DIEnumerator(name: "CODE_FOR_vec_pack_sfix_v2df", value: 2700, isUnsigned: true)
!1788 = !DIEnumerator(name: "CODE_FOR_sse_movhlps_exp", value: 2701, isUnsigned: true)
!1789 = !DIEnumerator(name: "CODE_FOR_sse_movlhps_exp", value: 2702, isUnsigned: true)
!1790 = !DIEnumerator(name: "CODE_FOR_avx_shufps256", value: 2703, isUnsigned: true)
!1791 = !DIEnumerator(name: "CODE_FOR_sse_shufps", value: 2704, isUnsigned: true)
!1792 = !DIEnumerator(name: "CODE_FOR_sse_loadhps_exp", value: 2705, isUnsigned: true)
!1793 = !DIEnumerator(name: "CODE_FOR_sse_loadlps_exp", value: 2706, isUnsigned: true)
!1794 = !DIEnumerator(name: "CODE_FOR_vec_dupv4sf", value: 2707, isUnsigned: true)
!1795 = !DIEnumerator(name: "CODE_FOR_vec_initv16qi", value: 2708, isUnsigned: true)
!1796 = !DIEnumerator(name: "CODE_FOR_vec_initv8hi", value: 2709, isUnsigned: true)
!1797 = !DIEnumerator(name: "CODE_FOR_vec_initv4si", value: 2710, isUnsigned: true)
!1798 = !DIEnumerator(name: "CODE_FOR_vec_initv2di", value: 2711, isUnsigned: true)
!1799 = !DIEnumerator(name: "CODE_FOR_vec_initv4sf", value: 2712, isUnsigned: true)
!1800 = !DIEnumerator(name: "CODE_FOR_vec_initv2df", value: 2713, isUnsigned: true)
!1801 = !DIEnumerator(name: "CODE_FOR_vec_setv16qi", value: 2715, isUnsigned: true)
!1802 = !DIEnumerator(name: "CODE_FOR_vec_setv8hi", value: 2716, isUnsigned: true)
!1803 = !DIEnumerator(name: "CODE_FOR_vec_setv4si", value: 2717, isUnsigned: true)
!1804 = !DIEnumerator(name: "CODE_FOR_vec_setv2di", value: 2718, isUnsigned: true)
!1805 = !DIEnumerator(name: "CODE_FOR_vec_setv4sf", value: 2719, isUnsigned: true)
!1806 = !DIEnumerator(name: "CODE_FOR_vec_setv2df", value: 2720, isUnsigned: true)
!1807 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v32qi", value: 2722, isUnsigned: true)
!1808 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v16hi", value: 2723, isUnsigned: true)
!1809 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v8si", value: 2724, isUnsigned: true)
!1810 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v4di", value: 2725, isUnsigned: true)
!1811 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v8sf", value: 2726, isUnsigned: true)
!1812 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v4df", value: 2727, isUnsigned: true)
!1813 = !DIEnumerator(name: "CODE_FOR_vec_extractv16qi", value: 2729, isUnsigned: true)
!1814 = !DIEnumerator(name: "CODE_FOR_vec_extractv8hi", value: 2730, isUnsigned: true)
!1815 = !DIEnumerator(name: "CODE_FOR_vec_extractv4si", value: 2731, isUnsigned: true)
!1816 = !DIEnumerator(name: "CODE_FOR_vec_extractv2di", value: 2732, isUnsigned: true)
!1817 = !DIEnumerator(name: "CODE_FOR_vec_extractv4sf", value: 2733, isUnsigned: true)
!1818 = !DIEnumerator(name: "CODE_FOR_vec_extractv2df", value: 2734, isUnsigned: true)
!1819 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv2df", value: 2735, isUnsigned: true)
!1820 = !DIEnumerator(name: "CODE_FOR_avx_movddup256", value: 2736, isUnsigned: true)
!1821 = !DIEnumerator(name: "CODE_FOR_avx_unpcklpd256", value: 2737, isUnsigned: true)
!1822 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv2df", value: 2738, isUnsigned: true)
!1823 = !DIEnumerator(name: "CODE_FOR_avx_shufpd256", value: 2741, isUnsigned: true)
!1824 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd", value: 2742, isUnsigned: true)
!1825 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4sf", value: 2743, isUnsigned: true)
!1826 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv2df", value: 2744, isUnsigned: true)
!1827 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv2di", value: 2745, isUnsigned: true)
!1828 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4si", value: 2746, isUnsigned: true)
!1829 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv8hi", value: 2747, isUnsigned: true)
!1830 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv16qi", value: 2748, isUnsigned: true)
!1831 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4df", value: 2749, isUnsigned: true)
!1832 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv8sf", value: 2750, isUnsigned: true)
!1833 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4sf", value: 2751, isUnsigned: true)
!1834 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv2df", value: 2752, isUnsigned: true)
!1835 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv2di", value: 2753, isUnsigned: true)
!1836 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4si", value: 2754, isUnsigned: true)
!1837 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv8hi", value: 2755, isUnsigned: true)
!1838 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv16qi", value: 2756, isUnsigned: true)
!1839 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4df", value: 2757, isUnsigned: true)
!1840 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv8sf", value: 2758, isUnsigned: true)
!1841 = !DIEnumerator(name: "CODE_FOR_sse2_loadhpd_exp", value: 2761, isUnsigned: true)
!1842 = !DIEnumerator(name: "CODE_FOR_sse2_loadlpd_exp", value: 2763, isUnsigned: true)
!1843 = !DIEnumerator(name: "CODE_FOR_negv16qi2", value: 2765, isUnsigned: true)
!1844 = !DIEnumerator(name: "CODE_FOR_negv8hi2", value: 2766, isUnsigned: true)
!1845 = !DIEnumerator(name: "CODE_FOR_negv4si2", value: 2767, isUnsigned: true)
!1846 = !DIEnumerator(name: "CODE_FOR_negv2di2", value: 2768, isUnsigned: true)
!1847 = !DIEnumerator(name: "CODE_FOR_addv16qi3", value: 2769, isUnsigned: true)
!1848 = !DIEnumerator(name: "CODE_FOR_subv16qi3", value: 2770, isUnsigned: true)
!1849 = !DIEnumerator(name: "CODE_FOR_addv8hi3", value: 2771, isUnsigned: true)
!1850 = !DIEnumerator(name: "CODE_FOR_subv8hi3", value: 2772, isUnsigned: true)
!1851 = !DIEnumerator(name: "CODE_FOR_addv4si3", value: 2773, isUnsigned: true)
!1852 = !DIEnumerator(name: "CODE_FOR_subv4si3", value: 2774, isUnsigned: true)
!1853 = !DIEnumerator(name: "CODE_FOR_addv2di3", value: 2775, isUnsigned: true)
!1854 = !DIEnumerator(name: "CODE_FOR_subv2di3", value: 2776, isUnsigned: true)
!1855 = !DIEnumerator(name: "CODE_FOR_sse2_ssaddv16qi3", value: 2777, isUnsigned: true)
!1856 = !DIEnumerator(name: "CODE_FOR_sse2_usaddv16qi3", value: 2778, isUnsigned: true)
!1857 = !DIEnumerator(name: "CODE_FOR_sse2_sssubv16qi3", value: 2779, isUnsigned: true)
!1858 = !DIEnumerator(name: "CODE_FOR_sse2_ussubv16qi3", value: 2780, isUnsigned: true)
!1859 = !DIEnumerator(name: "CODE_FOR_sse2_ssaddv8hi3", value: 2781, isUnsigned: true)
!1860 = !DIEnumerator(name: "CODE_FOR_sse2_usaddv8hi3", value: 2782, isUnsigned: true)
!1861 = !DIEnumerator(name: "CODE_FOR_sse2_sssubv8hi3", value: 2783, isUnsigned: true)
!1862 = !DIEnumerator(name: "CODE_FOR_sse2_ussubv8hi3", value: 2784, isUnsigned: true)
!1863 = !DIEnumerator(name: "CODE_FOR_mulv8hi3", value: 2786, isUnsigned: true)
!1864 = !DIEnumerator(name: "CODE_FOR_smulv8hi3_highpart", value: 2787, isUnsigned: true)
!1865 = !DIEnumerator(name: "CODE_FOR_umulv8hi3_highpart", value: 2788, isUnsigned: true)
!1866 = !DIEnumerator(name: "CODE_FOR_sse2_umulv2siv2di3", value: 2789, isUnsigned: true)
!1867 = !DIEnumerator(name: "CODE_FOR_sse4_1_mulv2siv2di3", value: 2790, isUnsigned: true)
!1868 = !DIEnumerator(name: "CODE_FOR_sse2_pmaddwd", value: 2791, isUnsigned: true)
!1869 = !DIEnumerator(name: "CODE_FOR_mulv4si3", value: 2792, isUnsigned: true)
!1870 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_hi_v8hi", value: 2795, isUnsigned: true)
!1871 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_lo_v8hi", value: 2796, isUnsigned: true)
!1872 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_hi_v8hi", value: 2797, isUnsigned: true)
!1873 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_lo_v8hi", value: 2798, isUnsigned: true)
!1874 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_hi_v4si", value: 2799, isUnsigned: true)
!1875 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_lo_v4si", value: 2800, isUnsigned: true)
!1876 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_hi_v4si", value: 2801, isUnsigned: true)
!1877 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_lo_v4si", value: 2802, isUnsigned: true)
!1878 = !DIEnumerator(name: "CODE_FOR_sdot_prodv8hi", value: 2803, isUnsigned: true)
!1879 = !DIEnumerator(name: "CODE_FOR_udot_prodv4si", value: 2804, isUnsigned: true)
!1880 = !DIEnumerator(name: "CODE_FOR_vec_shl_v16qi", value: 2805, isUnsigned: true)
!1881 = !DIEnumerator(name: "CODE_FOR_vec_shl_v8hi", value: 2806, isUnsigned: true)
!1882 = !DIEnumerator(name: "CODE_FOR_vec_shl_v4si", value: 2807, isUnsigned: true)
!1883 = !DIEnumerator(name: "CODE_FOR_vec_shl_v2di", value: 2808, isUnsigned: true)
!1884 = !DIEnumerator(name: "CODE_FOR_vec_shr_v16qi", value: 2809, isUnsigned: true)
!1885 = !DIEnumerator(name: "CODE_FOR_vec_shr_v8hi", value: 2810, isUnsigned: true)
!1886 = !DIEnumerator(name: "CODE_FOR_vec_shr_v4si", value: 2811, isUnsigned: true)
!1887 = !DIEnumerator(name: "CODE_FOR_vec_shr_v2di", value: 2812, isUnsigned: true)
!1888 = !DIEnumerator(name: "CODE_FOR_umaxv16qi3", value: 2813, isUnsigned: true)
!1889 = !DIEnumerator(name: "CODE_FOR_uminv16qi3", value: 2814, isUnsigned: true)
!1890 = !DIEnumerator(name: "CODE_FOR_smaxv8hi3", value: 2815, isUnsigned: true)
!1891 = !DIEnumerator(name: "CODE_FOR_sminv8hi3", value: 2816, isUnsigned: true)
!1892 = !DIEnumerator(name: "CODE_FOR_umaxv8hi3", value: 2817, isUnsigned: true)
!1893 = !DIEnumerator(name: "CODE_FOR_smaxv16qi3", value: 2818, isUnsigned: true)
!1894 = !DIEnumerator(name: "CODE_FOR_smaxv4si3", value: 2819, isUnsigned: true)
!1895 = !DIEnumerator(name: "CODE_FOR_smaxv2di3", value: 2820, isUnsigned: true)
!1896 = !DIEnumerator(name: "CODE_FOR_umaxv4si3", value: 2821, isUnsigned: true)
!1897 = !DIEnumerator(name: "CODE_FOR_umaxv2di3", value: 2822, isUnsigned: true)
!1898 = !DIEnumerator(name: "CODE_FOR_sminv16qi3", value: 2823, isUnsigned: true)
!1899 = !DIEnumerator(name: "CODE_FOR_sminv4si3", value: 2824, isUnsigned: true)
!1900 = !DIEnumerator(name: "CODE_FOR_sminv2di3", value: 2825, isUnsigned: true)
!1901 = !DIEnumerator(name: "CODE_FOR_uminv8hi3", value: 2826, isUnsigned: true)
!1902 = !DIEnumerator(name: "CODE_FOR_uminv4si3", value: 2827, isUnsigned: true)
!1903 = !DIEnumerator(name: "CODE_FOR_uminv2di3", value: 2828, isUnsigned: true)
!1904 = !DIEnumerator(name: "CODE_FOR_sse2_eqv16qi3", value: 2829, isUnsigned: true)
!1905 = !DIEnumerator(name: "CODE_FOR_sse2_eqv8hi3", value: 2830, isUnsigned: true)
!1906 = !DIEnumerator(name: "CODE_FOR_sse2_eqv4si3", value: 2831, isUnsigned: true)
!1907 = !DIEnumerator(name: "CODE_FOR_sse4_1_eqv2di3", value: 2832, isUnsigned: true)
!1908 = !DIEnumerator(name: "CODE_FOR_vcondv16qi", value: 2833, isUnsigned: true)
!1909 = !DIEnumerator(name: "CODE_FOR_vcondv8hi", value: 2834, isUnsigned: true)
!1910 = !DIEnumerator(name: "CODE_FOR_vcondv4si", value: 2835, isUnsigned: true)
!1911 = !DIEnumerator(name: "CODE_FOR_vcondv2di", value: 2836, isUnsigned: true)
!1912 = !DIEnumerator(name: "CODE_FOR_vconduv16qi", value: 2837, isUnsigned: true)
!1913 = !DIEnumerator(name: "CODE_FOR_vconduv8hi", value: 2838, isUnsigned: true)
!1914 = !DIEnumerator(name: "CODE_FOR_vconduv4si", value: 2839, isUnsigned: true)
!1915 = !DIEnumerator(name: "CODE_FOR_vconduv2di", value: 2840, isUnsigned: true)
!1916 = !DIEnumerator(name: "CODE_FOR_one_cmplv16qi2", value: 2841, isUnsigned: true)
!1917 = !DIEnumerator(name: "CODE_FOR_one_cmplv8hi2", value: 2842, isUnsigned: true)
!1918 = !DIEnumerator(name: "CODE_FOR_one_cmplv4si2", value: 2843, isUnsigned: true)
!1919 = !DIEnumerator(name: "CODE_FOR_one_cmplv2di2", value: 2844, isUnsigned: true)
!1920 = !DIEnumerator(name: "CODE_FOR_andv16qi3", value: 2845, isUnsigned: true)
!1921 = !DIEnumerator(name: "CODE_FOR_iorv16qi3", value: 2846, isUnsigned: true)
!1922 = !DIEnumerator(name: "CODE_FOR_xorv16qi3", value: 2847, isUnsigned: true)
!1923 = !DIEnumerator(name: "CODE_FOR_andv8hi3", value: 2848, isUnsigned: true)
!1924 = !DIEnumerator(name: "CODE_FOR_iorv8hi3", value: 2849, isUnsigned: true)
!1925 = !DIEnumerator(name: "CODE_FOR_xorv8hi3", value: 2850, isUnsigned: true)
!1926 = !DIEnumerator(name: "CODE_FOR_andv4si3", value: 2851, isUnsigned: true)
!1927 = !DIEnumerator(name: "CODE_FOR_iorv4si3", value: 2852, isUnsigned: true)
!1928 = !DIEnumerator(name: "CODE_FOR_xorv4si3", value: 2853, isUnsigned: true)
!1929 = !DIEnumerator(name: "CODE_FOR_andv2di3", value: 2854, isUnsigned: true)
!1930 = !DIEnumerator(name: "CODE_FOR_iorv2di3", value: 2855, isUnsigned: true)
!1931 = !DIEnumerator(name: "CODE_FOR_xorv2di3", value: 2856, isUnsigned: true)
!1932 = !DIEnumerator(name: "CODE_FOR_andtf3", value: 2857, isUnsigned: true)
!1933 = !DIEnumerator(name: "CODE_FOR_iortf3", value: 2858, isUnsigned: true)
!1934 = !DIEnumerator(name: "CODE_FOR_xortf3", value: 2859, isUnsigned: true)
!1935 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v8hi", value: 2860, isUnsigned: true)
!1936 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v4si", value: 2861, isUnsigned: true)
!1937 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v2di", value: 2862, isUnsigned: true)
!1938 = !DIEnumerator(name: "CODE_FOR_sse2_pshufd", value: 2863, isUnsigned: true)
!1939 = !DIEnumerator(name: "CODE_FOR_sse2_pshuflw", value: 2864, isUnsigned: true)
!1940 = !DIEnumerator(name: "CODE_FOR_sse2_pshufhw", value: 2865, isUnsigned: true)
!1941 = !DIEnumerator(name: "CODE_FOR_sse2_loadd", value: 2866, isUnsigned: true)
!1942 = !DIEnumerator(name: "CODE_FOR_sse_storeq", value: 2869, isUnsigned: true)
!1943 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v16qi", value: 2871, isUnsigned: true)
!1944 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v16qi", value: 2872, isUnsigned: true)
!1945 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v16qi", value: 2873, isUnsigned: true)
!1946 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v16qi", value: 2874, isUnsigned: true)
!1947 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v8hi", value: 2875, isUnsigned: true)
!1948 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v8hi", value: 2876, isUnsigned: true)
!1949 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v8hi", value: 2877, isUnsigned: true)
!1950 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v8hi", value: 2878, isUnsigned: true)
!1951 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v4si", value: 2879, isUnsigned: true)
!1952 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v4si", value: 2880, isUnsigned: true)
!1953 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v4si", value: 2881, isUnsigned: true)
!1954 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v4si", value: 2882, isUnsigned: true)
!1955 = !DIEnumerator(name: "CODE_FOR_sse2_uavgv16qi3", value: 2883, isUnsigned: true)
!1956 = !DIEnumerator(name: "CODE_FOR_sse2_uavgv8hi3", value: 2884, isUnsigned: true)
!1957 = !DIEnumerator(name: "CODE_FOR_sse2_maskmovdqu", value: 2885, isUnsigned: true)
!1958 = !DIEnumerator(name: "CODE_FOR_sse_sfence", value: 2886, isUnsigned: true)
!1959 = !DIEnumerator(name: "CODE_FOR_sse2_mfence", value: 2887, isUnsigned: true)
!1960 = !DIEnumerator(name: "CODE_FOR_sse2_lfence", value: 2888, isUnsigned: true)
!1961 = !DIEnumerator(name: "CODE_FOR_ssse3_pmulhrswv8hi3", value: 2889, isUnsigned: true)
!1962 = !DIEnumerator(name: "CODE_FOR_ssse3_pmulhrswv4hi3", value: 2890, isUnsigned: true)
!1963 = !DIEnumerator(name: "CODE_FOR_rotlv16qi3", value: 2895, isUnsigned: true)
!1964 = !DIEnumerator(name: "CODE_FOR_rotlv8hi3", value: 2896, isUnsigned: true)
!1965 = !DIEnumerator(name: "CODE_FOR_rotlv4si3", value: 2897, isUnsigned: true)
!1966 = !DIEnumerator(name: "CODE_FOR_rotlv2di3", value: 2898, isUnsigned: true)
!1967 = !DIEnumerator(name: "CODE_FOR_rotrv16qi3", value: 2899, isUnsigned: true)
!1968 = !DIEnumerator(name: "CODE_FOR_rotrv8hi3", value: 2900, isUnsigned: true)
!1969 = !DIEnumerator(name: "CODE_FOR_rotrv4si3", value: 2901, isUnsigned: true)
!1970 = !DIEnumerator(name: "CODE_FOR_rotrv2di3", value: 2902, isUnsigned: true)
!1971 = !DIEnumerator(name: "CODE_FOR_vrotrv16qi3", value: 2903, isUnsigned: true)
!1972 = !DIEnumerator(name: "CODE_FOR_vrotrv8hi3", value: 2904, isUnsigned: true)
!1973 = !DIEnumerator(name: "CODE_FOR_vrotrv4si3", value: 2905, isUnsigned: true)
!1974 = !DIEnumerator(name: "CODE_FOR_vrotrv2di3", value: 2906, isUnsigned: true)
!1975 = !DIEnumerator(name: "CODE_FOR_vrotlv16qi3", value: 2907, isUnsigned: true)
!1976 = !DIEnumerator(name: "CODE_FOR_vrotlv8hi3", value: 2908, isUnsigned: true)
!1977 = !DIEnumerator(name: "CODE_FOR_vrotlv4si3", value: 2909, isUnsigned: true)
!1978 = !DIEnumerator(name: "CODE_FOR_vrotlv2di3", value: 2910, isUnsigned: true)
!1979 = !DIEnumerator(name: "CODE_FOR_vlshrv16qi3", value: 2911, isUnsigned: true)
!1980 = !DIEnumerator(name: "CODE_FOR_vlshrv8hi3", value: 2912, isUnsigned: true)
!1981 = !DIEnumerator(name: "CODE_FOR_vlshrv4si3", value: 2913, isUnsigned: true)
!1982 = !DIEnumerator(name: "CODE_FOR_vashrv16qi3", value: 2914, isUnsigned: true)
!1983 = !DIEnumerator(name: "CODE_FOR_vashrv8hi3", value: 2915, isUnsigned: true)
!1984 = !DIEnumerator(name: "CODE_FOR_vashrv4si3", value: 2916, isUnsigned: true)
!1985 = !DIEnumerator(name: "CODE_FOR_vashlv16qi3", value: 2917, isUnsigned: true)
!1986 = !DIEnumerator(name: "CODE_FOR_vashlv8hi3", value: 2918, isUnsigned: true)
!1987 = !DIEnumerator(name: "CODE_FOR_vashlv4si3", value: 2919, isUnsigned: true)
!1988 = !DIEnumerator(name: "CODE_FOR_ashlv16qi3", value: 2920, isUnsigned: true)
!1989 = !DIEnumerator(name: "CODE_FOR_lshlv16qi3", value: 2921, isUnsigned: true)
!1990 = !DIEnumerator(name: "CODE_FOR_ashrv16qi3", value: 2922, isUnsigned: true)
!1991 = !DIEnumerator(name: "CODE_FOR_ashrv2di3", value: 2923, isUnsigned: true)
!1992 = !DIEnumerator(name: "CODE_FOR_avx_vzeroall", value: 2924, isUnsigned: true)
!1993 = !DIEnumerator(name: "CODE_FOR_avx_vzeroupper", value: 2925, isUnsigned: true)
!1994 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv2df", value: 2932, isUnsigned: true)
!1995 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv4df", value: 2933, isUnsigned: true)
!1996 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv4sf", value: 2934, isUnsigned: true)
!1997 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv8sf", value: 2935, isUnsigned: true)
!1998 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v8si3", value: 2936, isUnsigned: true)
!1999 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v8sf3", value: 2937, isUnsigned: true)
!2000 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v4df3", value: 2938, isUnsigned: true)
!2001 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v32qi", value: 2939, isUnsigned: true)
!2002 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v16hi", value: 2940, isUnsigned: true)
!2003 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v8si", value: 2941, isUnsigned: true)
!2004 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v4di", value: 2942, isUnsigned: true)
!2005 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v8sf", value: 2943, isUnsigned: true)
!2006 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v4df", value: 2944, isUnsigned: true)
!2007 = !DIEnumerator(name: "CODE_FOR_vec_initv32qi", value: 2945, isUnsigned: true)
!2008 = !DIEnumerator(name: "CODE_FOR_vec_initv16hi", value: 2946, isUnsigned: true)
!2009 = !DIEnumerator(name: "CODE_FOR_vec_initv8si", value: 2947, isUnsigned: true)
!2010 = !DIEnumerator(name: "CODE_FOR_vec_initv4di", value: 2948, isUnsigned: true)
!2011 = !DIEnumerator(name: "CODE_FOR_vec_initv8sf", value: 2949, isUnsigned: true)
!2012 = !DIEnumerator(name: "CODE_FOR_vec_initv4df", value: 2950, isUnsigned: true)
!2013 = !DIEnumerator(name: "CODE_FOR_memory_barrier", value: 2951, isUnsigned: true)
!2014 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapqi", value: 2952, isUnsigned: true)
!2015 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swaphi", value: 2953, isUnsigned: true)
!2016 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapsi", value: 2954, isUnsigned: true)
!2017 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapdi", value: 2955, isUnsigned: true)
!2018 = !DIEnumerator(name: "CODE_FOR_nothing", value: 2956, isUnsigned: true)
!2019 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "optab_subtype", file: !2020, line: 723, baseType: !7, size: 32, elements: !2021)
!2020 = !DIFile(filename: "./optabs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2021 = !{!2022, !2023, !2024}
!2022 = !DIEnumerator(name: "optab_default", value: 0, isUnsigned: true)
!2023 = !DIEnumerator(name: "optab_scalar", value: 1, isUnsigned: true)
!2024 = !DIEnumerator(name: "optab_vector", value: 2, isUnsigned: true)
!2025 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !2026, line: 36, baseType: !7, size: 32, elements: !2027)
!2026 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2027 = !{!2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046}
!2028 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!2029 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!2030 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!2031 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!2032 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!2033 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!2034 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!2035 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!2036 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!2037 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!2038 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!2039 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!2040 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!2041 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!2042 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!2043 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!2044 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!2045 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!2046 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!2047 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "optab_methods", file: !2048, line: 291, baseType: !7, size: 32, elements: !2049)
!2048 = !DIFile(filename: "./expr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2049 = !{!2050, !2051, !2052, !2053, !2054}
!2050 = !DIEnumerator(name: "OPTAB_DIRECT", value: 0, isUnsigned: true)
!2051 = !DIEnumerator(name: "OPTAB_LIB", value: 1, isUnsigned: true)
!2052 = !DIEnumerator(name: "OPTAB_WIDEN", value: 2, isUnsigned: true)
!2053 = !DIEnumerator(name: "OPTAB_LIB_WIDEN", value: 3, isUnsigned: true)
!2054 = !DIEnumerator(name: "OPTAB_MUST_WIDEN", value: 4, isUnsigned: true)
!2055 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "can_compare_purpose", file: !2020, line: 737, baseType: !7, size: 32, elements: !2056)
!2056 = !{!2057, !2058, !2059}
!2057 = !DIEnumerator(name: "ccp_jump", value: 0, isUnsigned: true)
!2058 = !DIEnumerator(name: "ccp_cmov", value: 1, isUnsigned: true)
!2059 = !DIEnumerator(name: "ccp_store_flag", value: 2, isUnsigned: true)
!2060 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expand_modifier", file: !2048, line: 52, baseType: !7, size: 32, elements: !2061)
!2061 = !{!2062, !2063, !2064, !2065, !2066, !2067, !2068}
!2062 = !DIEnumerator(name: "EXPAND_NORMAL", value: 0, isUnsigned: true)
!2063 = !DIEnumerator(name: "EXPAND_STACK_PARM", value: 1, isUnsigned: true)
!2064 = !DIEnumerator(name: "EXPAND_SUM", value: 2, isUnsigned: true)
!2065 = !DIEnumerator(name: "EXPAND_CONST_ADDRESS", value: 3, isUnsigned: true)
!2066 = !DIEnumerator(name: "EXPAND_INITIALIZER", value: 4, isUnsigned: true)
!2067 = !DIEnumerator(name: "EXPAND_WRITE", value: 5, isUnsigned: true)
!2068 = !DIEnumerator(name: "EXPAND_MEMORY", value: 6, isUnsigned: true)
!2069 = !{!2070, !2071, !2072, !2073, !2076, !2077, !2079, !2082, !2025, !190, !5, !384, !3223, !2090, !7, !3224, !2176, !2327, !2205, !2083, !2537, !3226, !3233, !3236, !2074, !3238}
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2072 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2075 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2075)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2080, line: 46, baseType: !2081)
!2080 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!2081 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "libfunc_entry", file: !3, line: 114, size: 192, elements: !2085)
!2085 = !{!2086, !2087, !2088, !2089}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "optab", scope: !2084, file: !3, line: 115, baseType: !2079, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "mode1", scope: !2084, file: !3, line: 116, baseType: !5, size: 32, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !2084, file: !3, line: 116, baseType: !5, size: 32, offset: 96)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "libfunc", scope: !2084, file: !3, line: 117, baseType: !2090, size: 64, offset: 128)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !2091, line: 50, baseType: !2092)
!2091 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !385, line: 240, size: 384, elements: !2094)
!2094 = !{!2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2093, file: !385, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2093, file: !385, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !2093, file: !385, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !2093, file: !385, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !2093, file: !385, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !2093, file: !385, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !2093, file: !385, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2093, file: !385, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !2093, file: !385, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !2093, file: !385, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2093, file: !385, line: 321, baseType: !2106, size: 320, offset: 64)
!2106 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !385, line: 315, size: 320, elements: !2107)
!2107 = !{!2108, !3190, !3192, !3221, !3222}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !2106, file: !385, line: 316, baseType: !2109, size: 64)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 64, elements: !2125)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !385, line: 183, baseType: !2111)
!2111 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !385, line: 166, size: 64, elements: !2112)
!2112 = !{!2113, !2114, !2115, !2116, !2117, !2127, !2128, !2140, !2143, !2204, !3168, !3169, !3180, !3187}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !2111, file: !385, line: 168, baseType: !2072, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !2111, file: !385, line: 169, baseType: !7, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !2111, file: !385, line: 170, baseType: !2077, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !2111, file: !385, line: 171, baseType: !2090, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !2111, file: !385, line: 172, baseType: !2118, size: 64)
!2118 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !2091, line: 53, baseType: !2119)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !385, line: 359, size: 128, elements: !2121)
!2121 = !{!2122, !2123}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !2120, file: !385, line: 360, baseType: !2072, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !2120, file: !385, line: 361, baseType: !2124, size: 64, offset: 64)
!2124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2090, size: 64, elements: !2125)
!2125 = !{!2126}
!2126 = !DISubrange(count: 1)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !2111, file: !385, line: 173, baseType: !5, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !2111, file: !385, line: 174, baseType: !2129, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !385, line: 133, baseType: !2130)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !385, line: 115, size: 32, elements: !2131)
!2131 = !{!2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !2130, file: !385, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !2130, file: !385, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !2130, file: !385, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !2130, file: !385, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !2130, file: !385, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !2130, file: !385, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !2130, file: !385, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2130, file: !385, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !2111, file: !385, line: 175, baseType: !2141, size: 64)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !385, line: 175, flags: DIFlagFwdDecl)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !2111, file: !385, line: 176, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !2146, line: 75, size: 256, elements: !2147)
!2146 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2147 = !{!2148, !2162, !2163, !2164}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2145, file: !2146, line: 76, baseType: !2149, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !2146, line: 68, baseType: !2151)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !2146, line: 63, size: 320, elements: !2152)
!2152 = !{!2153, !2155, !2156, !2157}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2151, file: !2146, line: 64, baseType: !2154, size: 64)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2151, file: !2146, line: 65, baseType: !2154, size: 64, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !2151, file: !2146, line: 66, baseType: !7, size: 32, offset: 128)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2151, file: !2146, line: 67, baseType: !2158, size: 128, offset: 192)
!2158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2159, size: 128, elements: !2160)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !2146, line: 29, baseType: !2081)
!2160 = !{!2161}
!2161 = !DISubrange(count: 2)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2145, file: !2146, line: 77, baseType: !2149, size: 64, offset: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !2145, file: !2146, line: 78, baseType: !7, size: 32, offset: 128)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !2145, file: !2146, line: 79, baseType: !2165, size: 64, offset: 192)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !2146, line: 49, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !2146, line: 45, size: 832, elements: !2168)
!2168 = !{!2169, !2170, !2171}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2167, file: !2146, line: 46, baseType: !2154, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !2167, file: !2146, line: 47, baseType: !2144, size: 64, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !2167, file: !2146, line: 48, baseType: !2172, size: 704, offset: 128)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !2173, line: 164, size: 704, elements: !2174)
!2173 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2174 = !{!2175, !2177, !2187, !2188, !2189, !2190, !2191, !2192, !2196, !2200, !2201, !2202, !2203}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !2172, file: !2173, line: 166, baseType: !2176, size: 64)
!2176 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !2172, file: !2173, line: 167, baseType: !2178, size: 64, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !2173, line: 157, size: 192, elements: !2180)
!2180 = !{!2181, !2182, !2183}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !2179, file: !2173, line: 159, baseType: !2074, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2179, file: !2173, line: 160, baseType: !2178, size: 64, offset: 64)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !2179, file: !2173, line: 161, baseType: !2184, size: 32, offset: 128)
!2184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2075, size: 32, elements: !2185)
!2185 = !{!2186}
!2186 = !DISubrange(count: 4)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !2172, file: !2173, line: 168, baseType: !2074, size: 64, offset: 128)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !2172, file: !2173, line: 169, baseType: !2074, size: 64, offset: 192)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !2172, file: !2173, line: 170, baseType: !2074, size: 64, offset: 256)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2172, file: !2173, line: 171, baseType: !2176, size: 64, offset: 320)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !2172, file: !2173, line: 172, baseType: !2072, size: 32, offset: 384)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !2172, file: !2173, line: 176, baseType: !2193, size: 64, offset: 448)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = !DISubroutineType(types: !2195)
!2195 = !{!2178, !2076, !2176}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !2172, file: !2173, line: 177, baseType: !2197, size: 64, offset: 512)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{null, !2076, !2178}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !2172, file: !2173, line: 178, baseType: !2076, size: 64, offset: 576)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !2172, file: !2173, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !2172, file: !2173, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !2172, file: !2173, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !2111, file: !385, line: 177, baseType: !2205, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !2091, line: 56, baseType: !2206)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !158, line: 3371, size: 1792, elements: !2208)
!2208 = !{!2209, !2242, !2248, !2259, !2278, !2289, !2294, !2301, !2307, !2320, !2332, !2370, !2375, !2403, !2411, !2412, !2417, !2426, !2432, !2437, !2441, !2445, !2804, !2853, !2859, !2865, !2872, !2898, !2912, !2929, !2941, !2963, !2978, !3150}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2207, file: !158, line: 3372, baseType: !2210, size: 64)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !158, line: 360, size: 64, elements: !2211)
!2211 = !{!2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2210, file: !158, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !2210, file: !158, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !2210, file: !158, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !2210, file: !158, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !2210, file: !158, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !2210, file: !158, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !2210, file: !158, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !2210, file: !158, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !2210, file: !158, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !2210, file: !158, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !2210, file: !158, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !2210, file: !158, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !2210, file: !158, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !2210, file: !158, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !2210, file: !158, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !2210, file: !158, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !2210, file: !158, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !2210, file: !158, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2210, file: !158, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2210, file: !158, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2210, file: !158, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2210, file: !158, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2210, file: !158, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2210, file: !158, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2210, file: !158, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2210, file: !158, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !2210, file: !158, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !2210, file: !158, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !2210, file: !158, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !2210, file: !158, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2207, file: !158, line: 3373, baseType: !2243, size: 192)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !158, line: 402, size: 192, elements: !2244)
!2244 = !{!2245, !2246, !2247}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2243, file: !158, line: 403, baseType: !2210, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !2243, file: !158, line: 404, baseType: !2205, size: 64, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2243, file: !158, line: 405, baseType: !2205, size: 64, offset: 128)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !2207, file: !158, line: 3374, baseType: !2249, size: 320)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !158, line: 1384, size: 320, elements: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2249, file: !158, line: 1385, baseType: !2243, size: 192)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !2249, file: !158, line: 1386, baseType: !2253, size: 128, offset: 192)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !2254, line: 58, baseType: !2255)
!2254 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2254, line: 54, size: 128, elements: !2256)
!2256 = !{!2257, !2258}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !2255, file: !2254, line: 56, baseType: !2081, size: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !2255, file: !2254, line: 57, baseType: !2176, size: 64, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !2207, file: !158, line: 3375, baseType: !2260, size: 256)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !158, line: 1397, size: 256, elements: !2261)
!2261 = !{!2262, !2263}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2260, file: !158, line: 1398, baseType: !2243, size: 192)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !2260, file: !158, line: 1399, baseType: !2264, size: 64, offset: 192)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !2266, line: 52, size: 256, elements: !2267)
!2266 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2267 = !{!2268, !2269, !2270, !2271, !2272, !2273, !2274}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !2265, file: !2266, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !2265, file: !2266, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !2265, file: !2266, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !2265, file: !2266, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2265, file: !2266, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !2265, file: !2266, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2265, file: !2266, line: 62, baseType: !2275, size: 192, offset: 64)
!2275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2081, size: 192, elements: !2276)
!2276 = !{!2277}
!2277 = !DISubrange(count: 3)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !2207, file: !158, line: 3376, baseType: !2279, size: 256)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !158, line: 1408, size: 256, elements: !2280)
!2280 = !{!2281, !2282}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2279, file: !158, line: 1409, baseType: !2243, size: 192)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !2279, file: !158, line: 1410, baseType: !2283, size: 64, offset: 192)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !2285, line: 27, size: 192, elements: !2286)
!2285 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2286 = !{!2287, !2288}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2284, file: !2285, line: 29, baseType: !2253, size: 128)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2284, file: !2285, line: 30, baseType: !5, size: 32, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !2207, file: !158, line: 3377, baseType: !2290, size: 256)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !158, line: 1437, size: 256, elements: !2291)
!2291 = !{!2292, !2293}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2290, file: !158, line: 1438, baseType: !2243, size: 192)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2290, file: !158, line: 1439, baseType: !2205, size: 64, offset: 192)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2207, file: !158, line: 3378, baseType: !2295, size: 256)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !158, line: 1418, size: 256, elements: !2296)
!2296 = !{!2297, !2298, !2299}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2295, file: !158, line: 1419, baseType: !2243, size: 192)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2295, file: !158, line: 1420, baseType: !2072, size: 32, offset: 192)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2295, file: !158, line: 1421, baseType: !2300, size: 8, offset: 224)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2075, size: 8, elements: !2125)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !2207, file: !158, line: 3379, baseType: !2302, size: 320)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !158, line: 1428, size: 320, elements: !2303)
!2303 = !{!2304, !2305, !2306}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2302, file: !158, line: 1429, baseType: !2243, size: 192)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !2302, file: !158, line: 1430, baseType: !2205, size: 64, offset: 192)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !2302, file: !158, line: 1431, baseType: !2205, size: 64, offset: 256)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2207, file: !158, line: 3380, baseType: !2308, size: 320)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !158, line: 1460, size: 320, elements: !2309)
!2309 = !{!2310, !2311}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2308, file: !158, line: 1461, baseType: !2243, size: 192)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2308, file: !158, line: 1462, baseType: !2312, size: 128, offset: 192)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !2313, line: 31, size: 128, elements: !2314)
!2313 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2314 = !{!2315, !2318, !2319}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2312, file: !2313, line: 32, baseType: !2316, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2071)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2312, file: !2313, line: 33, baseType: !7, size: 32, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !2312, file: !2313, line: 34, baseType: !7, size: 32, offset: 96)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !2207, file: !158, line: 3381, baseType: !2321, size: 384)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !158, line: 2507, size: 384, elements: !2322)
!2322 = !{!2323, !2324, !2329, !2330, !2331}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2321, file: !158, line: 2508, baseType: !2243, size: 192)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2321, file: !158, line: 2509, baseType: !2325, size: 32, offset: 192)
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !2326, line: 58, baseType: !2327)
!2326 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !2328, line: 44, baseType: !7)
!2328 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2321, file: !158, line: 2510, baseType: !7, size: 32, offset: 224)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2321, file: !158, line: 2511, baseType: !2205, size: 64, offset: 256)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2321, file: !158, line: 2512, baseType: !2205, size: 64, offset: 320)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !2207, file: !158, line: 3382, baseType: !2333, size: 896)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !158, line: 2652, size: 896, elements: !2334)
!2334 = !{!2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2333, file: !158, line: 2653, baseType: !2321, size: 384)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2333, file: !158, line: 2654, baseType: !2205, size: 64, offset: 384)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2333, file: !158, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !2333, file: !158, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !2333, file: !158, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !2333, file: !158, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2333, file: !158, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !2333, file: !158, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !2333, file: !158, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !2333, file: !158, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2333, file: !158, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2333, file: !158, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2333, file: !158, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2333, file: !158, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2333, file: !158, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2333, file: !158, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2333, file: !158, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !2333, file: !158, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !2333, file: !158, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !2333, file: !158, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !2333, file: !158, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !2333, file: !158, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !2333, file: !158, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !2333, file: !158, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !2333, file: !158, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !2333, file: !158, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !2333, file: !158, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2333, file: !158, line: 2703, baseType: !7, size: 32, offset: 512)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2333, file: !158, line: 2705, baseType: !2205, size: 64, offset: 576)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !2333, file: !158, line: 2706, baseType: !2205, size: 64, offset: 640)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2333, file: !158, line: 2707, baseType: !2205, size: 64, offset: 704)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2333, file: !158, line: 2708, baseType: !2205, size: 64, offset: 768)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2333, file: !158, line: 2711, baseType: !2368, size: 64, offset: 832)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !158, line: 2711, flags: DIFlagFwdDecl)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !2207, file: !158, line: 3383, baseType: !2371, size: 960)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !158, line: 2756, size: 960, elements: !2372)
!2372 = !{!2373, !2374}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2371, file: !158, line: 2757, baseType: !2333, size: 896)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2371, file: !158, line: 2758, baseType: !2090, size: 64, offset: 896)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !2207, file: !158, line: 3384, baseType: !2376, size: 1472)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !158, line: 3114, size: 1472, elements: !2377)
!2377 = !{!2378, !2399, !2400, !2401, !2402}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2376, file: !158, line: 3115, baseType: !2379, size: 1216)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !158, line: 2984, size: 1216, elements: !2380)
!2380 = !{!2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2379, file: !158, line: 2985, baseType: !2371, size: 960)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !2379, file: !158, line: 2986, baseType: !2205, size: 64, offset: 960)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !2379, file: !158, line: 2987, baseType: !2205, size: 64, offset: 1024)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !2379, file: !158, line: 2988, baseType: !2205, size: 64, offset: 1088)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !2379, file: !158, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !2379, file: !158, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !2379, file: !158, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !2379, file: !158, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !2379, file: !158, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !2379, file: !158, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !2379, file: !158, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !2379, file: !158, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !2379, file: !158, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !2379, file: !158, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !2379, file: !158, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !2379, file: !158, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !2379, file: !158, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !2379, file: !158, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !2376, file: !158, line: 3117, baseType: !2205, size: 64, offset: 1216)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !2376, file: !158, line: 3119, baseType: !2205, size: 64, offset: 1280)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2376, file: !158, line: 3121, baseType: !2205, size: 64, offset: 1344)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !2376, file: !158, line: 3123, baseType: !2205, size: 64, offset: 1408)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !2207, file: !158, line: 3385, baseType: !2404, size: 1088)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !158, line: 2874, size: 1088, elements: !2405)
!2405 = !{!2406, !2407, !2408}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2404, file: !158, line: 2875, baseType: !2371, size: 960)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !2404, file: !158, line: 2876, baseType: !2090, size: 64, offset: 960)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2404, file: !158, line: 2877, baseType: !2409, size: 64, offset: 1024)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !158, line: 2856, flags: DIFlagFwdDecl)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !2207, file: !158, line: 3386, baseType: !2379, size: 1216)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !2207, file: !158, line: 3387, baseType: !2413, size: 1280)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !158, line: 3093, size: 1280, elements: !2414)
!2414 = !{!2415, !2416}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2413, file: !158, line: 3094, baseType: !2379, size: 1216)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2413, file: !158, line: 3095, baseType: !2409, size: 64, offset: 1216)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !2207, file: !158, line: 3388, baseType: !2418, size: 1216)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !158, line: 2824, size: 1216, elements: !2419)
!2419 = !{!2420, !2421, !2422, !2423, !2424, !2425}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2418, file: !158, line: 2825, baseType: !2333, size: 896)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2418, file: !158, line: 2827, baseType: !2205, size: 64, offset: 896)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !2418, file: !158, line: 2828, baseType: !2205, size: 64, offset: 960)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !2418, file: !158, line: 2829, baseType: !2205, size: 64, offset: 1024)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !2418, file: !158, line: 2830, baseType: !2205, size: 64, offset: 1088)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !2418, file: !158, line: 2831, baseType: !2205, size: 64, offset: 1152)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !2207, file: !158, line: 3389, baseType: !2427, size: 1024)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !158, line: 2850, size: 1024, elements: !2428)
!2428 = !{!2429, !2430, !2431}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2427, file: !158, line: 2851, baseType: !2371, size: 960)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !2427, file: !158, line: 2852, baseType: !2072, size: 32, offset: 960)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !2427, file: !158, line: 2853, baseType: !2072, size: 32, offset: 992)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !2207, file: !158, line: 3390, baseType: !2433, size: 1024)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !158, line: 2857, size: 1024, elements: !2434)
!2434 = !{!2435, !2436}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2433, file: !158, line: 2858, baseType: !2371, size: 960)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2433, file: !158, line: 2859, baseType: !2409, size: 64, offset: 960)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !2207, file: !158, line: 3391, baseType: !2438, size: 960)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !158, line: 2862, size: 960, elements: !2439)
!2439 = !{!2440}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2438, file: !158, line: 2863, baseType: !2371, size: 960)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !2207, file: !158, line: 3392, baseType: !2442, size: 1472)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !158, line: 3304, size: 1472, elements: !2443)
!2443 = !{!2444}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2442, file: !158, line: 3305, baseType: !2376, size: 1472)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !2207, file: !158, line: 3393, baseType: !2446, size: 1792)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !158, line: 3248, size: 1792, elements: !2447)
!2447 = !{!2448, !2449, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2446, file: !158, line: 3249, baseType: !2376, size: 1472)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2446, file: !158, line: 3251, baseType: !2450, size: 64, offset: 1472)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !2452, line: 463, size: 1152, elements: !2453)
!2452 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2453 = !{!2454, !2616, !2720, !2721, !2724, !2727, !2728, !2729, !2730, !2731, !2732, !2756, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !2451, file: !2452, line: 464, baseType: !2455, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !2457)
!2457 = !{!2458, !2507, !2520, !2534, !2584, !2597}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !2456, file: !135, line: 197, baseType: !2459, size: 64)
!2459 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !2460)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !2462)
!2462 = !{!2463, !2464, !2465, !2466, !2467, !2468, !2495, !2504, !2505, !2506}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !2461, file: !135, line: 119, baseType: !2460, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2461, file: !135, line: 122, baseType: !2460, size: 64, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !2461, file: !135, line: 123, baseType: !2460, size: 64, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2461, file: !135, line: 126, baseType: !2072, size: 32, offset: 192)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2461, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2461, file: !135, line: 165, baseType: !2469, size: 192, offset: 256)
!2469 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !2470)
!2470 = !{!2471, !2484, !2490}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !2469, file: !135, line: 137, baseType: !2472, size: 128)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !2473)
!2473 = !{!2474, !2483}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !2472, file: !135, line: 135, baseType: !2475, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !2477)
!2477 = !{!2478, !2479, !2480, !2481, !2482}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !2476, file: !135, line: 96, baseType: !2475, size: 64)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !2476, file: !135, line: 97, baseType: !2475, size: 64, offset: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !2476, file: !135, line: 101, baseType: !2205, size: 64, offset: 128)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !2476, file: !135, line: 106, baseType: !2205, size: 64, offset: 192)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2476, file: !135, line: 111, baseType: !2205, size: 64, offset: 256)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !2472, file: !135, line: 136, baseType: !2475, size: 64, offset: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !2469, file: !135, line: 151, baseType: !2485, size: 192)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !2486)
!2486 = !{!2487, !2488, !2489}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !2485, file: !135, line: 141, baseType: !2205, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2485, file: !135, line: 145, baseType: !2205, size: 64, offset: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2485, file: !135, line: 150, baseType: !2072, size: 32, offset: 128)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !2469, file: !135, line: 164, baseType: !2491, size: 128)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !2492)
!2492 = !{!2493, !2494}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !2491, file: !135, line: 161, baseType: !2205, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !2491, file: !135, line: 163, baseType: !2325, size: 32, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !2461, file: !135, line: 168, baseType: !2496, size: 64, offset: 448)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !2498)
!2498 = !{!2499, !2500, !2501, !2502, !2503}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !2497, file: !135, line: 70, baseType: !2496, size: 64)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !2497, file: !135, line: 73, baseType: !2460, size: 64, offset: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !2497, file: !135, line: 78, baseType: !2205, size: 64, offset: 128)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !2497, file: !135, line: 85, baseType: !2090, size: 64, offset: 192)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2497, file: !135, line: 88, baseType: !2072, size: 32, offset: 256)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !2461, file: !135, line: 173, baseType: !2090, size: 64, offset: 512)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !2461, file: !135, line: 173, baseType: !2090, size: 64, offset: 576)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !2461, file: !135, line: 177, baseType: !2071, size: 8, offset: 640)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !2456, file: !135, line: 200, baseType: !2508, size: 64, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !2510)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !2511)
!2511 = !{!2512}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2510, file: !135, line: 185, baseType: !2513, size: 128)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !2514)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !2515)
!2515 = !{!2516, !2517, !2518}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2514, file: !135, line: 184, baseType: !7, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2514, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2514, file: !135, line: 184, baseType: !2519, size: 64, offset: 64)
!2519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2459, size: 64, elements: !2125)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !2456, file: !135, line: 203, baseType: !2521, size: 64, offset: 128)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !2523)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !2524)
!2524 = !{!2525}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2523, file: !135, line: 189, baseType: !2526, size: 128)
!2526 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !2527)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !2528)
!2528 = !{!2529, !2530, !2531}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2527, file: !135, line: 188, baseType: !7, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2527, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2527, file: !135, line: 188, baseType: !2532, size: 64, offset: 64)
!2532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2533, size: 64, elements: !2125)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !2496)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !2456, file: !135, line: 207, baseType: !2535, size: 64, offset: 192)
!2535 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !2536, line: 144, baseType: !2537)
!2536 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !2536, line: 100, size: 896, elements: !2539)
!2539 = !{!2540, !2548, !2553, !2558, !2560, !2561, !2562, !2563, !2564, !2565, !2570, !2572, !2573, !2578, !2583}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !2538, file: !2536, line: 102, baseType: !2541, size: 64)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !2536, line: 52, baseType: !2542)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!2545, !2546}
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !2536, line: 47, baseType: !7)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !2538, file: !2536, line: 105, baseType: !2549, size: 64, offset: 64)
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !2536, line: 59, baseType: !2550)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = !DISubroutineType(types: !2552)
!2552 = !{!2072, !2546, !2546}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !2538, file: !2536, line: 108, baseType: !2554, size: 64, offset: 128)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !2536, line: 63, baseType: !2555)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = !DISubroutineType(types: !2557)
!2557 = !{null, !2076}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2538, file: !2536, line: 111, baseType: !2559, size: 64, offset: 192)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2538, file: !2536, line: 114, baseType: !2079, size: 64, offset: 256)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !2538, file: !2536, line: 117, baseType: !2079, size: 64, offset: 320)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !2538, file: !2536, line: 120, baseType: !2079, size: 64, offset: 384)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !2538, file: !2536, line: 124, baseType: !7, size: 32, offset: 448)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !2538, file: !2536, line: 128, baseType: !7, size: 32, offset: 480)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !2538, file: !2536, line: 131, baseType: !2566, size: 64, offset: 512)
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !2536, line: 75, baseType: !2567)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DISubroutineType(types: !2569)
!2569 = !{!2076, !2079, !2079}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !2538, file: !2536, line: 132, baseType: !2571, size: 64, offset: 576)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !2536, line: 78, baseType: !2555)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !2538, file: !2536, line: 135, baseType: !2076, size: 64, offset: 640)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !2538, file: !2536, line: 136, baseType: !2574, size: 64, offset: 704)
!2574 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !2536, line: 82, baseType: !2575)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{!2076, !2076, !2079, !2079}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !2538, file: !2536, line: 137, baseType: !2579, size: 64, offset: 768)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !2536, line: 83, baseType: !2580)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DISubroutineType(types: !2582)
!2582 = !{null, !2076, !2076}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !2538, file: !2536, line: 141, baseType: !7, size: 32, offset: 832)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !2456, file: !135, line: 211, baseType: !2585, size: 64, offset: 256)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !158, line: 183, baseType: !2587)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !158, line: 183, size: 128, elements: !2588)
!2588 = !{!2589}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2587, file: !158, line: 183, baseType: !2590, size: 128)
!2590 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !158, line: 182, baseType: !2591)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !158, line: 182, size: 128, elements: !2592)
!2592 = !{!2593, !2594, !2595}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2591, file: !158, line: 182, baseType: !7, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2591, file: !158, line: 182, baseType: !7, size: 32, offset: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2591, file: !158, line: 182, baseType: !2596, size: 64, offset: 64)
!2596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2205, size: 64, elements: !2125)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !2456, file: !135, line: 220, baseType: !2598, size: 64, offset: 320)
!2598 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !2599)
!2599 = !{!2600, !2601}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !2598, file: !135, line: 218, baseType: !2585, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !2598, file: !135, line: 219, baseType: !2602, size: 64)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !2604, line: 29, baseType: !2605)
!2604 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !2604, line: 29, size: 96, elements: !2606)
!2606 = !{!2607}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2605, file: !2604, line: 29, baseType: !2608, size: 96)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !2604, line: 27, baseType: !2609)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !2604, line: 27, size: 96, elements: !2610)
!2610 = !{!2611, !2612, !2613}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2609, file: !2604, line: 27, baseType: !7, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2609, file: !2604, line: 27, baseType: !7, size: 32, offset: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2609, file: !2604, line: 27, baseType: !2614, size: 8, offset: 64)
!2614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2615, size: 8, elements: !2125)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !2604, line: 26, baseType: !2071)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !2451, file: !2452, line: 467, baseType: !2617, size: 64, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !142, line: 374, size: 640, elements: !2619)
!2619 = !{!2620, !2695, !2696, !2709, !2710, !2711, !2712, !2713, !2714, !2716, !2718, !2719}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !2618, file: !142, line: 377, baseType: !2621, size: 64)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !2091, line: 111, baseType: !2622)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !142, line: 217, size: 832, elements: !2624)
!2624 = !{!2625, !2660, !2661, !2662, !2665, !2669, !2670, !2671, !2689, !2690, !2691, !2692, !2693, !2694}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !2623, file: !142, line: 219, baseType: !2626, size: 64)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !142, line: 151, baseType: !2628)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !142, line: 151, size: 128, elements: !2629)
!2629 = !{!2630}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2628, file: !142, line: 151, baseType: !2631, size: 128)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !142, line: 150, baseType: !2632)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !142, line: 150, size: 128, elements: !2633)
!2633 = !{!2634, !2635, !2636}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2632, file: !142, line: 150, baseType: !7, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2632, file: !142, line: 150, baseType: !7, size: 32, offset: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2632, file: !142, line: 150, baseType: !2637, size: 64, offset: 64)
!2637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2638, size: 64, elements: !2125)
!2638 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !2091, line: 108, baseType: !2639)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !142, line: 122, size: 512, elements: !2641)
!2641 = !{!2642, !2643, !2644, !2652, !2653, !2654, !2655, !2656, !2657, !2658}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2640, file: !142, line: 124, baseType: !2622, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !2640, file: !142, line: 125, baseType: !2622, size: 64, offset: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !2640, file: !142, line: 131, baseType: !2645, size: 64, offset: 128)
!2645 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !142, line: 128, size: 64, elements: !2646)
!2646 = !{!2647, !2651}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2645, file: !142, line: 129, baseType: !2648, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !2091, line: 66, baseType: !2649)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !2091, line: 65, flags: DIFlagFwdDecl)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2645, file: !142, line: 130, baseType: !2090, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2640, file: !142, line: 134, baseType: !2076, size: 64, offset: 192)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !2640, file: !142, line: 137, baseType: !2205, size: 64, offset: 256)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !2640, file: !142, line: 138, baseType: !2325, size: 32, offset: 320)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !2640, file: !142, line: 142, baseType: !7, size: 32, offset: 352)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2640, file: !142, line: 144, baseType: !2072, size: 32, offset: 384)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !2640, file: !142, line: 145, baseType: !2072, size: 32, offset: 416)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2640, file: !142, line: 146, baseType: !2659, size: 64, offset: 448)
!2659 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !142, line: 119, baseType: !2176)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !2623, file: !142, line: 220, baseType: !2626, size: 64, offset: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2623, file: !142, line: 223, baseType: !2076, size: 64, offset: 128)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !2623, file: !142, line: 226, baseType: !2663, size: 64, offset: 192)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 185, flags: DIFlagFwdDecl)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !2623, file: !142, line: 229, baseType: !2666, size: 128, offset: 256)
!2666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2667, size: 128, elements: !2160)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2668 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !142, line: 229, flags: DIFlagFwdDecl)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !2623, file: !142, line: 232, baseType: !2622, size: 64, offset: 384)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !2623, file: !142, line: 233, baseType: !2622, size: 64, offset: 448)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !2623, file: !142, line: 238, baseType: !2672, size: 64, offset: 512)
!2672 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !142, line: 235, size: 64, elements: !2673)
!2673 = !{!2674, !2680}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !2672, file: !142, line: 236, baseType: !2675, size: 64)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !142, line: 273, size: 128, elements: !2677)
!2677 = !{!2678, !2679}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2676, file: !142, line: 275, baseType: !2648, size: 64)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !2676, file: !142, line: 278, baseType: !2648, size: 64, offset: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2672, file: !142, line: 237, baseType: !2681, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !142, line: 259, size: 320, elements: !2683)
!2683 = !{!2684, !2685, !2686, !2687, !2688}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !2682, file: !142, line: 261, baseType: !2090, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !2682, file: !142, line: 262, baseType: !2090, size: 64, offset: 64)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2682, file: !142, line: 266, baseType: !2090, size: 64, offset: 128)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !2682, file: !142, line: 267, baseType: !2090, size: 64, offset: 192)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2682, file: !142, line: 270, baseType: !2072, size: 32, offset: 256)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2623, file: !142, line: 241, baseType: !2659, size: 64, offset: 576)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2623, file: !142, line: 244, baseType: !2072, size: 32, offset: 640)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !2623, file: !142, line: 247, baseType: !2072, size: 32, offset: 672)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2623, file: !142, line: 250, baseType: !2072, size: 32, offset: 704)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !2623, file: !142, line: 253, baseType: !2072, size: 32, offset: 736)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2623, file: !142, line: 256, baseType: !2072, size: 32, offset: 768)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !2618, file: !142, line: 378, baseType: !2621, size: 64, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !2618, file: !142, line: 381, baseType: !2697, size: 64, offset: 128)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !142, line: 282, baseType: !2699)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !142, line: 282, size: 128, elements: !2700)
!2700 = !{!2701}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2699, file: !142, line: 282, baseType: !2702, size: 128)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !142, line: 281, baseType: !2703)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !142, line: 281, size: 128, elements: !2704)
!2704 = !{!2705, !2706, !2707}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2703, file: !142, line: 281, baseType: !7, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2703, file: !142, line: 281, baseType: !7, size: 32, offset: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2703, file: !142, line: 281, baseType: !2708, size: 64, offset: 64)
!2708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2621, size: 64, elements: !2125)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !2618, file: !142, line: 384, baseType: !2072, size: 32, offset: 192)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !2618, file: !142, line: 387, baseType: !2072, size: 32, offset: 224)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !2618, file: !142, line: 390, baseType: !2072, size: 32, offset: 256)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !2618, file: !142, line: 394, baseType: !2697, size: 64, offset: 320)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !2618, file: !142, line: 396, baseType: !141, size: 32, offset: 384)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !2618, file: !142, line: 399, baseType: !2715, size: 64, offset: 416)
!2715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 64, elements: !2160)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !2618, file: !142, line: 402, baseType: !2717, size: 64, offset: 480)
!2717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !2160)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !2618, file: !142, line: 406, baseType: !2072, size: 32, offset: 544)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !2618, file: !142, line: 409, baseType: !2072, size: 32, offset: 576)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !2451, file: !2452, line: 470, baseType: !2649, size: 64, offset: 128)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !2451, file: !2452, line: 473, baseType: !2722, size: 64, offset: 192)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !2452, line: 166, flags: DIFlagFwdDecl)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !2451, file: !2452, line: 476, baseType: !2725, size: 64, offset: 256)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !2452, line: 476, flags: DIFlagFwdDecl)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !2451, file: !2452, line: 479, baseType: !2535, size: 64, offset: 320)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2451, file: !2452, line: 484, baseType: !2205, size: 64, offset: 384)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !2451, file: !2452, line: 488, baseType: !2205, size: 64, offset: 448)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !2451, file: !2452, line: 493, baseType: !2205, size: 64, offset: 512)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !2451, file: !2452, line: 496, baseType: !2205, size: 64, offset: 576)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2451, file: !2452, line: 501, baseType: !2733, size: 64, offset: 640)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !153, line: 2355, size: 576, elements: !2735)
!2735 = !{!2736, !2739, !2740, !2741, !2742, !2744, !2745, !2750, !2751, !2752, !2753, !2754, !2755}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !2734, file: !153, line: 2356, baseType: !2737, size: 64)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !153, line: 2356, flags: DIFlagFwdDecl)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !2734, file: !153, line: 2357, baseType: !2077, size: 64, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !2734, file: !153, line: 2358, baseType: !2072, size: 32, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !2734, file: !153, line: 2359, baseType: !2072, size: 32, offset: 160)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !2734, file: !153, line: 2360, baseType: !2743, size: 128, offset: 192)
!2743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2072, size: 128, elements: !2185)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !2734, file: !153, line: 2364, baseType: !2072, size: 32, offset: 320)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !2734, file: !153, line: 2367, baseType: !2746, size: 128, offset: 384)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !153, line: 2349, size: 128, elements: !2747)
!2747 = !{!2748, !2749}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2746, file: !153, line: 2351, baseType: !2090, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2746, file: !153, line: 2352, baseType: !2176, size: 64, offset: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !2734, file: !153, line: 2371, baseType: !152, size: 32, offset: 512)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !2734, file: !153, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !2734, file: !153, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !2734, file: !153, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !2734, file: !153, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !2734, file: !153, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !2451, file: !2452, line: 504, baseType: !2757, size: 64, offset: 704)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !2452, line: 504, flags: DIFlagFwdDecl)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !2451, file: !2452, line: 507, baseType: !2535, size: 64, offset: 768)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !2451, file: !2452, line: 510, baseType: !2072, size: 32, offset: 832)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !2451, file: !2452, line: 513, baseType: !2072, size: 32, offset: 864)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !2451, file: !2452, line: 516, baseType: !2325, size: 32, offset: 896)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !2451, file: !2452, line: 519, baseType: !2325, size: 32, offset: 928)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !2451, file: !2452, line: 522, baseType: !7, size: 32, offset: 960)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !2451, file: !2452, line: 523, baseType: !7, size: 32, offset: 992)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !2451, file: !2452, line: 528, baseType: !2077, size: 64, offset: 1024)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !2451, file: !2452, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !2451, file: !2452, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !2451, file: !2452, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !2451, file: !2452, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !2451, file: !2452, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !2451, file: !2452, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !2451, file: !2452, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !2451, file: !2452, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !2451, file: !2452, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !2451, file: !2452, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !2451, file: !2452, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !2451, file: !2452, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !2451, file: !2452, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !2451, file: !2452, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !2451, file: !2452, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !2451, file: !2452, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2446, file: !158, line: 3254, baseType: !2205, size: 64, offset: 1536)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !2446, file: !158, line: 3257, baseType: !2205, size: 64, offset: 1600)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !2446, file: !158, line: 3258, baseType: !2205, size: 64, offset: 1664)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !2446, file: !158, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !2446, file: !158, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !2446, file: !158, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !2446, file: !158, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !2446, file: !158, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !2446, file: !158, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !2446, file: !158, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !2446, file: !158, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !2446, file: !158, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !2446, file: !158, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !2446, file: !158, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !2446, file: !158, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !2446, file: !158, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !2446, file: !158, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !2446, file: !158, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2446, file: !158, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !2446, file: !158, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !2446, file: !158, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2207, file: !158, line: 3394, baseType: !2805, size: 1344)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !158, line: 2279, size: 1344, elements: !2806)
!2806 = !{!2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2832, !2833, !2834, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2805, file: !158, line: 2280, baseType: !2243, size: 192)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !2805, file: !158, line: 2281, baseType: !2205, size: 64, offset: 192)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2805, file: !158, line: 2282, baseType: !2205, size: 64, offset: 256)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2805, file: !158, line: 2283, baseType: !2205, size: 64, offset: 320)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2805, file: !158, line: 2284, baseType: !2205, size: 64, offset: 384)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2805, file: !158, line: 2285, baseType: !7, size: 32, offset: 448)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2805, file: !158, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !2805, file: !158, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !2805, file: !158, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !2805, file: !158, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !2805, file: !158, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !2805, file: !158, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2805, file: !158, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !2805, file: !158, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2805, file: !158, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2805, file: !158, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2805, file: !158, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2805, file: !158, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2805, file: !158, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2805, file: !158, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2805, file: !158, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2805, file: !158, line: 2305, baseType: !7, size: 32, offset: 512)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !2805, file: !158, line: 2306, baseType: !2830, size: 32, offset: 544)
!2830 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !2831, line: 31, baseType: !2072)
!2831 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !2805, file: !158, line: 2307, baseType: !2205, size: 64, offset: 576)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !2805, file: !158, line: 2308, baseType: !2205, size: 64, offset: 640)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !2805, file: !158, line: 2314, baseType: !2835, size: 64, offset: 704)
!2835 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !158, line: 2309, size: 64, elements: !2836)
!2836 = !{!2837, !2838, !2839}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2835, file: !158, line: 2310, baseType: !2072, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2835, file: !158, line: 2311, baseType: !2077, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !2835, file: !158, line: 2312, baseType: !2840, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !158, line: 2277, flags: DIFlagFwdDecl)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2805, file: !158, line: 2315, baseType: !2205, size: 64, offset: 768)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !2805, file: !158, line: 2316, baseType: !2205, size: 64, offset: 832)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !2805, file: !158, line: 2317, baseType: !2205, size: 64, offset: 896)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !2805, file: !158, line: 2318, baseType: !2205, size: 64, offset: 960)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !2805, file: !158, line: 2319, baseType: !2205, size: 64, offset: 1024)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2805, file: !158, line: 2320, baseType: !2205, size: 64, offset: 1088)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2805, file: !158, line: 2321, baseType: !2205, size: 64, offset: 1152)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2805, file: !158, line: 2322, baseType: !2205, size: 64, offset: 1216)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2805, file: !158, line: 2324, baseType: !2851, size: 64, offset: 1280)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !158, line: 2324, flags: DIFlagFwdDecl)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2207, file: !158, line: 3395, baseType: !2854, size: 320)
!2854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !158, line: 1469, size: 320, elements: !2855)
!2855 = !{!2856, !2857, !2858}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2854, file: !158, line: 1470, baseType: !2243, size: 192)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !2854, file: !158, line: 1471, baseType: !2205, size: 64, offset: 192)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2854, file: !158, line: 1472, baseType: !2205, size: 64, offset: 256)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2207, file: !158, line: 3396, baseType: !2860, size: 320)
!2860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !158, line: 1482, size: 320, elements: !2861)
!2861 = !{!2862, !2863, !2864}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2860, file: !158, line: 1483, baseType: !2243, size: 192)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2860, file: !158, line: 1484, baseType: !2072, size: 32, offset: 192)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2860, file: !158, line: 1485, baseType: !2596, size: 64, offset: 256)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2207, file: !158, line: 3397, baseType: !2866, size: 384)
!2866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !158, line: 1829, size: 384, elements: !2867)
!2867 = !{!2868, !2869, !2870, !2871}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2866, file: !158, line: 1830, baseType: !2243, size: 192)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2866, file: !158, line: 1831, baseType: !2325, size: 32, offset: 192)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2866, file: !158, line: 1832, baseType: !2205, size: 64, offset: 256)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !2866, file: !158, line: 1835, baseType: !2596, size: 64, offset: 320)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !2207, file: !158, line: 3398, baseType: !2873, size: 704)
!2873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !158, line: 1898, size: 704, elements: !2874)
!2874 = !{!2875, !2876, !2877, !2881, !2882, !2885}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2873, file: !158, line: 1899, baseType: !2243, size: 192)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2873, file: !158, line: 1902, baseType: !2205, size: 64, offset: 192)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !2873, file: !158, line: 1905, baseType: !2878, size: 64, offset: 256)
!2878 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !2091, line: 58, baseType: !2879)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !2091, line: 57, flags: DIFlagFwdDecl)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2873, file: !158, line: 1908, baseType: !7, size: 32, offset: 320)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !2873, file: !158, line: 1911, baseType: !2883, size: 64, offset: 384)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64)
!2884 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !158, line: 1876, flags: DIFlagFwdDecl)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !2873, file: !158, line: 1914, baseType: !2886, size: 256, offset: 448)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !158, line: 1883, size: 256, elements: !2887)
!2887 = !{!2888, !2890, !2891, !2896}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2886, file: !158, line: 1884, baseType: !2889, size: 64)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2886, file: !158, line: 1885, baseType: !2889, size: 64, offset: 64)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2886, file: !158, line: 1891, baseType: !2892, size: 64, offset: 128)
!2892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2886, file: !158, line: 1891, size: 64, elements: !2893)
!2893 = !{!2894, !2895}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2892, file: !158, line: 1891, baseType: !2878, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !2892, file: !158, line: 1891, baseType: !2205, size: 64)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !2886, file: !158, line: 1892, baseType: !2897, size: 64, offset: 192)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2207, file: !158, line: 3399, baseType: !2899, size: 704)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !158, line: 2008, size: 704, elements: !2900)
!2900 = !{!2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2899, file: !158, line: 2009, baseType: !2243, size: 192)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2899, file: !158, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !2899, file: !158, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2899, file: !158, line: 2014, baseType: !2325, size: 32, offset: 224)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2899, file: !158, line: 2016, baseType: !2205, size: 64, offset: 256)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !2899, file: !158, line: 2017, baseType: !2585, size: 64, offset: 320)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !2899, file: !158, line: 2019, baseType: !2205, size: 64, offset: 384)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !2899, file: !158, line: 2020, baseType: !2205, size: 64, offset: 448)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2899, file: !158, line: 2021, baseType: !2205, size: 64, offset: 512)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !2899, file: !158, line: 2022, baseType: !2205, size: 64, offset: 576)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !2899, file: !158, line: 2023, baseType: !2205, size: 64, offset: 640)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2207, file: !158, line: 3400, baseType: !2913, size: 832)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !158, line: 2430, size: 832, elements: !2914)
!2914 = !{!2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2913, file: !158, line: 2431, baseType: !2243, size: 192)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2913, file: !158, line: 2433, baseType: !2205, size: 64, offset: 192)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2913, file: !158, line: 2434, baseType: !2205, size: 64, offset: 256)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !2913, file: !158, line: 2435, baseType: !2205, size: 64, offset: 320)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !2913, file: !158, line: 2436, baseType: !2205, size: 64, offset: 384)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !2913, file: !158, line: 2437, baseType: !2585, size: 64, offset: 448)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !2913, file: !158, line: 2438, baseType: !2205, size: 64, offset: 512)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !2913, file: !158, line: 2440, baseType: !2205, size: 64, offset: 576)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !2913, file: !158, line: 2441, baseType: !2205, size: 64, offset: 640)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !2913, file: !158, line: 2443, baseType: !2925, size: 128, offset: 704)
!2925 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !158, line: 182, baseType: !2926)
!2926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !158, line: 182, size: 128, elements: !2927)
!2927 = !{!2928}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2926, file: !158, line: 182, baseType: !2590, size: 128)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !2207, file: !158, line: 3401, baseType: !2930, size: 320)
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !158, line: 3327, size: 320, elements: !2931)
!2931 = !{!2932, !2933, !2940}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2930, file: !158, line: 3329, baseType: !2243, size: 192)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2930, file: !158, line: 3330, baseType: !2934, size: 64, offset: 192)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !158, line: 3320, size: 192, elements: !2936)
!2936 = !{!2937, !2938, !2939}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2935, file: !158, line: 3322, baseType: !2934, size: 64)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2935, file: !158, line: 3323, baseType: !2934, size: 64, offset: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2935, file: !158, line: 3324, baseType: !2205, size: 64, offset: 128)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2930, file: !158, line: 3331, baseType: !2934, size: 64, offset: 256)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2207, file: !158, line: 3402, baseType: !2942, size: 256)
!2942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !158, line: 1540, size: 256, elements: !2943)
!2943 = !{!2944, !2945}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2942, file: !158, line: 1541, baseType: !2243, size: 192)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !2942, file: !158, line: 1542, baseType: !2946, size: 64, offset: 192)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !158, line: 1538, baseType: !2948)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !158, line: 1538, size: 192, elements: !2949)
!2949 = !{!2950}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2948, file: !158, line: 1538, baseType: !2951, size: 192)
!2951 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !158, line: 1537, baseType: !2952)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !158, line: 1537, size: 192, elements: !2953)
!2953 = !{!2954, !2955, !2956}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2952, file: !158, line: 1537, baseType: !7, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2952, file: !158, line: 1537, baseType: !7, size: 32, offset: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2952, file: !158, line: 1537, baseType: !2957, size: 128, offset: 64)
!2957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2958, size: 128, elements: !2125)
!2958 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !158, line: 1535, baseType: !2959)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !158, line: 1532, size: 128, elements: !2960)
!2960 = !{!2961, !2962}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2959, file: !158, line: 1533, baseType: !2205, size: 64)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2959, file: !158, line: 1534, baseType: !2205, size: 64, offset: 64)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !2207, file: !158, line: 3403, baseType: !2964, size: 512)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !158, line: 1938, size: 512, elements: !2965)
!2965 = !{!2966, !2967, !2968, !2969, !2975, !2976, !2977}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2964, file: !158, line: 1939, baseType: !2243, size: 192)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2964, file: !158, line: 1940, baseType: !2325, size: 32, offset: 192)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2964, file: !158, line: 1941, baseType: !157, size: 32, offset: 224)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !2964, file: !158, line: 1946, baseType: !2970, size: 32, offset: 256)
!2970 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !158, line: 1942, size: 32, elements: !2971)
!2971 = !{!2972, !2973, !2974}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !2970, file: !158, line: 1943, baseType: !176, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !2970, file: !158, line: 1944, baseType: !183, size: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !2970, file: !158, line: 1945, baseType: !190, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !2964, file: !158, line: 1950, baseType: !2648, size: 64, offset: 320)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !2964, file: !158, line: 1951, baseType: !2648, size: 64, offset: 384)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2964, file: !158, line: 1953, baseType: !2596, size: 64, offset: 448)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !2207, file: !158, line: 3404, baseType: !2979, size: 1664)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !158, line: 3337, size: 1664, elements: !2980)
!2980 = !{!2981, !2982}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2979, file: !158, line: 3338, baseType: !2243, size: 192)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2979, file: !158, line: 3341, baseType: !2983, size: 1472, offset: 192)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !2984, line: 410, size: 1472, elements: !2985)
!2984 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2985 = !{!2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !2983, file: !2984, line: 412, baseType: !2072, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !2983, file: !2984, line: 413, baseType: !2072, size: 32, offset: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !2983, file: !2984, line: 414, baseType: !2072, size: 32, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !2983, file: !2984, line: 415, baseType: !2072, size: 32, offset: 96)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !2983, file: !2984, line: 416, baseType: !2072, size: 32, offset: 128)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !2983, file: !2984, line: 417, baseType: !2072, size: 32, offset: 160)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !2983, file: !2984, line: 418, baseType: !2071, size: 8, offset: 192)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !2983, file: !2984, line: 419, baseType: !2071, size: 8, offset: 200)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !2983, file: !2984, line: 420, baseType: !2995, size: 8, offset: 208)
!2995 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !2983, file: !2984, line: 421, baseType: !2995, size: 8, offset: 216)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !2983, file: !2984, line: 422, baseType: !2995, size: 8, offset: 224)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !2983, file: !2984, line: 423, baseType: !2995, size: 8, offset: 232)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !2983, file: !2984, line: 424, baseType: !2995, size: 8, offset: 240)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !2983, file: !2984, line: 425, baseType: !2995, size: 8, offset: 248)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !2983, file: !2984, line: 426, baseType: !2995, size: 8, offset: 256)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !2983, file: !2984, line: 427, baseType: !2995, size: 8, offset: 264)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !2983, file: !2984, line: 428, baseType: !2995, size: 8, offset: 272)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !2983, file: !2984, line: 429, baseType: !2995, size: 8, offset: 280)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !2983, file: !2984, line: 430, baseType: !2995, size: 8, offset: 288)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !2983, file: !2984, line: 431, baseType: !2995, size: 8, offset: 296)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !2983, file: !2984, line: 432, baseType: !2995, size: 8, offset: 304)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !2983, file: !2984, line: 433, baseType: !2995, size: 8, offset: 312)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !2983, file: !2984, line: 434, baseType: !2995, size: 8, offset: 320)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !2983, file: !2984, line: 435, baseType: !2995, size: 8, offset: 328)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !2983, file: !2984, line: 436, baseType: !2995, size: 8, offset: 336)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !2983, file: !2984, line: 437, baseType: !2995, size: 8, offset: 344)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !2983, file: !2984, line: 438, baseType: !2995, size: 8, offset: 352)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !2983, file: !2984, line: 439, baseType: !2995, size: 8, offset: 360)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !2983, file: !2984, line: 440, baseType: !2995, size: 8, offset: 368)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !2983, file: !2984, line: 441, baseType: !2995, size: 8, offset: 376)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !2983, file: !2984, line: 442, baseType: !2995, size: 8, offset: 384)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !2983, file: !2984, line: 443, baseType: !2995, size: 8, offset: 392)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !2983, file: !2984, line: 444, baseType: !2995, size: 8, offset: 400)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !2983, file: !2984, line: 445, baseType: !2995, size: 8, offset: 408)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !2983, file: !2984, line: 446, baseType: !2995, size: 8, offset: 416)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !2983, file: !2984, line: 447, baseType: !2995, size: 8, offset: 424)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !2983, file: !2984, line: 448, baseType: !2995, size: 8, offset: 432)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !2983, file: !2984, line: 449, baseType: !2995, size: 8, offset: 440)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !2983, file: !2984, line: 450, baseType: !2995, size: 8, offset: 448)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !2983, file: !2984, line: 451, baseType: !2995, size: 8, offset: 456)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !2983, file: !2984, line: 452, baseType: !2995, size: 8, offset: 464)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !2983, file: !2984, line: 453, baseType: !2995, size: 8, offset: 472)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !2983, file: !2984, line: 454, baseType: !2995, size: 8, offset: 480)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !2983, file: !2984, line: 455, baseType: !2995, size: 8, offset: 488)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !2983, file: !2984, line: 456, baseType: !2995, size: 8, offset: 496)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !2983, file: !2984, line: 457, baseType: !2995, size: 8, offset: 504)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !2983, file: !2984, line: 458, baseType: !2995, size: 8, offset: 512)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !2983, file: !2984, line: 459, baseType: !2995, size: 8, offset: 520)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !2983, file: !2984, line: 460, baseType: !2995, size: 8, offset: 528)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !2983, file: !2984, line: 461, baseType: !2995, size: 8, offset: 536)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !2983, file: !2984, line: 462, baseType: !2995, size: 8, offset: 544)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !2983, file: !2984, line: 463, baseType: !2995, size: 8, offset: 552)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !2983, file: !2984, line: 464, baseType: !2995, size: 8, offset: 560)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !2983, file: !2984, line: 465, baseType: !2995, size: 8, offset: 568)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !2983, file: !2984, line: 466, baseType: !2995, size: 8, offset: 576)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !2983, file: !2984, line: 467, baseType: !2995, size: 8, offset: 584)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !2983, file: !2984, line: 468, baseType: !2995, size: 8, offset: 592)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !2983, file: !2984, line: 469, baseType: !2995, size: 8, offset: 600)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !2983, file: !2984, line: 470, baseType: !2995, size: 8, offset: 608)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !2983, file: !2984, line: 471, baseType: !2995, size: 8, offset: 616)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !2983, file: !2984, line: 472, baseType: !2995, size: 8, offset: 624)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !2983, file: !2984, line: 473, baseType: !2995, size: 8, offset: 632)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !2983, file: !2984, line: 474, baseType: !2995, size: 8, offset: 640)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !2983, file: !2984, line: 475, baseType: !2995, size: 8, offset: 648)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !2983, file: !2984, line: 476, baseType: !2995, size: 8, offset: 656)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !2983, file: !2984, line: 477, baseType: !2995, size: 8, offset: 664)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !2983, file: !2984, line: 478, baseType: !2995, size: 8, offset: 672)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !2983, file: !2984, line: 479, baseType: !2995, size: 8, offset: 680)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !2983, file: !2984, line: 480, baseType: !2995, size: 8, offset: 688)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !2983, file: !2984, line: 481, baseType: !2995, size: 8, offset: 696)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !2983, file: !2984, line: 482, baseType: !2995, size: 8, offset: 704)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !2983, file: !2984, line: 483, baseType: !2995, size: 8, offset: 712)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !2983, file: !2984, line: 484, baseType: !2995, size: 8, offset: 720)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !2983, file: !2984, line: 485, baseType: !2995, size: 8, offset: 728)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !2983, file: !2984, line: 486, baseType: !2995, size: 8, offset: 736)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !2983, file: !2984, line: 487, baseType: !2995, size: 8, offset: 744)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !2983, file: !2984, line: 488, baseType: !2995, size: 8, offset: 752)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !2983, file: !2984, line: 489, baseType: !2995, size: 8, offset: 760)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !2983, file: !2984, line: 490, baseType: !2995, size: 8, offset: 768)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !2983, file: !2984, line: 491, baseType: !2995, size: 8, offset: 776)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !2983, file: !2984, line: 492, baseType: !2995, size: 8, offset: 784)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !2983, file: !2984, line: 493, baseType: !2995, size: 8, offset: 792)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !2983, file: !2984, line: 494, baseType: !2995, size: 8, offset: 800)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !2983, file: !2984, line: 495, baseType: !2995, size: 8, offset: 808)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !2983, file: !2984, line: 496, baseType: !2995, size: 8, offset: 816)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !2983, file: !2984, line: 497, baseType: !2995, size: 8, offset: 824)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !2983, file: !2984, line: 498, baseType: !2995, size: 8, offset: 832)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !2983, file: !2984, line: 499, baseType: !2995, size: 8, offset: 840)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !2983, file: !2984, line: 500, baseType: !2995, size: 8, offset: 848)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !2983, file: !2984, line: 501, baseType: !2995, size: 8, offset: 856)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !2983, file: !2984, line: 502, baseType: !2995, size: 8, offset: 864)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !2983, file: !2984, line: 503, baseType: !2995, size: 8, offset: 872)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !2983, file: !2984, line: 504, baseType: !2995, size: 8, offset: 880)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !2983, file: !2984, line: 505, baseType: !2995, size: 8, offset: 888)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !2983, file: !2984, line: 506, baseType: !2995, size: 8, offset: 896)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !2983, file: !2984, line: 507, baseType: !2995, size: 8, offset: 904)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !2983, file: !2984, line: 508, baseType: !2995, size: 8, offset: 912)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !2983, file: !2984, line: 509, baseType: !2995, size: 8, offset: 920)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !2983, file: !2984, line: 510, baseType: !2995, size: 8, offset: 928)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !2983, file: !2984, line: 511, baseType: !2995, size: 8, offset: 936)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !2983, file: !2984, line: 512, baseType: !2995, size: 8, offset: 944)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !2983, file: !2984, line: 513, baseType: !2995, size: 8, offset: 952)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !2983, file: !2984, line: 514, baseType: !2995, size: 8, offset: 960)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !2983, file: !2984, line: 515, baseType: !2995, size: 8, offset: 968)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !2983, file: !2984, line: 516, baseType: !2995, size: 8, offset: 976)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !2983, file: !2984, line: 517, baseType: !2995, size: 8, offset: 984)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !2983, file: !2984, line: 518, baseType: !2995, size: 8, offset: 992)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !2983, file: !2984, line: 519, baseType: !2995, size: 8, offset: 1000)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !2983, file: !2984, line: 520, baseType: !2995, size: 8, offset: 1008)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !2983, file: !2984, line: 521, baseType: !2995, size: 8, offset: 1016)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !2983, file: !2984, line: 522, baseType: !2995, size: 8, offset: 1024)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !2983, file: !2984, line: 523, baseType: !2995, size: 8, offset: 1032)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !2983, file: !2984, line: 524, baseType: !2995, size: 8, offset: 1040)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !2983, file: !2984, line: 525, baseType: !2995, size: 8, offset: 1048)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !2983, file: !2984, line: 526, baseType: !2995, size: 8, offset: 1056)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !2983, file: !2984, line: 527, baseType: !2995, size: 8, offset: 1064)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !2983, file: !2984, line: 528, baseType: !2995, size: 8, offset: 1072)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !2983, file: !2984, line: 529, baseType: !2995, size: 8, offset: 1080)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !2983, file: !2984, line: 530, baseType: !2995, size: 8, offset: 1088)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !2983, file: !2984, line: 531, baseType: !2995, size: 8, offset: 1096)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !2983, file: !2984, line: 532, baseType: !2995, size: 8, offset: 1104)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !2983, file: !2984, line: 533, baseType: !2995, size: 8, offset: 1112)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !2983, file: !2984, line: 534, baseType: !2995, size: 8, offset: 1120)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !2983, file: !2984, line: 535, baseType: !2995, size: 8, offset: 1128)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !2983, file: !2984, line: 536, baseType: !2995, size: 8, offset: 1136)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !2983, file: !2984, line: 537, baseType: !2995, size: 8, offset: 1144)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !2983, file: !2984, line: 538, baseType: !2995, size: 8, offset: 1152)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !2983, file: !2984, line: 539, baseType: !2995, size: 8, offset: 1160)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !2983, file: !2984, line: 540, baseType: !2995, size: 8, offset: 1168)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !2983, file: !2984, line: 541, baseType: !2995, size: 8, offset: 1176)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !2983, file: !2984, line: 542, baseType: !2995, size: 8, offset: 1184)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !2983, file: !2984, line: 543, baseType: !2995, size: 8, offset: 1192)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !2983, file: !2984, line: 544, baseType: !2995, size: 8, offset: 1200)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !2983, file: !2984, line: 545, baseType: !2995, size: 8, offset: 1208)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !2983, file: !2984, line: 546, baseType: !2995, size: 8, offset: 1216)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !2983, file: !2984, line: 547, baseType: !2995, size: 8, offset: 1224)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !2983, file: !2984, line: 548, baseType: !2995, size: 8, offset: 1232)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !2983, file: !2984, line: 549, baseType: !2995, size: 8, offset: 1240)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !2983, file: !2984, line: 550, baseType: !2995, size: 8, offset: 1248)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !2983, file: !2984, line: 551, baseType: !2995, size: 8, offset: 1256)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !2983, file: !2984, line: 552, baseType: !2995, size: 8, offset: 1264)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !2983, file: !2984, line: 553, baseType: !2995, size: 8, offset: 1272)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !2983, file: !2984, line: 554, baseType: !2995, size: 8, offset: 1280)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !2983, file: !2984, line: 555, baseType: !2995, size: 8, offset: 1288)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !2983, file: !2984, line: 556, baseType: !2995, size: 8, offset: 1296)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !2983, file: !2984, line: 557, baseType: !2995, size: 8, offset: 1304)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !2983, file: !2984, line: 558, baseType: !2995, size: 8, offset: 1312)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !2983, file: !2984, line: 559, baseType: !2995, size: 8, offset: 1320)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !2983, file: !2984, line: 560, baseType: !2995, size: 8, offset: 1328)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !2983, file: !2984, line: 561, baseType: !2995, size: 8, offset: 1336)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !2983, file: !2984, line: 562, baseType: !2995, size: 8, offset: 1344)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !2983, file: !2984, line: 563, baseType: !2995, size: 8, offset: 1352)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !2983, file: !2984, line: 564, baseType: !2995, size: 8, offset: 1360)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !2983, file: !2984, line: 565, baseType: !2995, size: 8, offset: 1368)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !2983, file: !2984, line: 566, baseType: !2995, size: 8, offset: 1376)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !2983, file: !2984, line: 567, baseType: !2995, size: 8, offset: 1384)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !2983, file: !2984, line: 568, baseType: !2995, size: 8, offset: 1392)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !2983, file: !2984, line: 569, baseType: !2995, size: 8, offset: 1400)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !2983, file: !2984, line: 570, baseType: !2995, size: 8, offset: 1408)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !2983, file: !2984, line: 571, baseType: !2995, size: 8, offset: 1416)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !2983, file: !2984, line: 572, baseType: !2995, size: 8, offset: 1424)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !2983, file: !2984, line: 573, baseType: !2995, size: 8, offset: 1432)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !2983, file: !2984, line: 574, baseType: !2995, size: 8, offset: 1440)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !2207, file: !158, line: 3405, baseType: !3151, size: 384)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !158, line: 3352, size: 384, elements: !3152)
!3152 = !{!3153, !3154}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3151, file: !158, line: 3353, baseType: !2243, size: 192)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !3151, file: !158, line: 3356, baseType: !3155, size: 192, offset: 192)
!3155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !2984, line: 578, size: 192, elements: !3156)
!3156 = !{!3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !3155, file: !2984, line: 580, baseType: !2072, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !3155, file: !2984, line: 581, baseType: !2072, size: 32, offset: 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !3155, file: !2984, line: 582, baseType: !2072, size: 32, offset: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !3155, file: !2984, line: 583, baseType: !2072, size: 32, offset: 96)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3155, file: !2984, line: 584, baseType: !2071, size: 8, offset: 128)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !3155, file: !2984, line: 585, baseType: !2071, size: 8, offset: 136)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !3155, file: !2984, line: 586, baseType: !2071, size: 8, offset: 144)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !3155, file: !2984, line: 587, baseType: !2071, size: 8, offset: 152)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !3155, file: !2984, line: 588, baseType: !2071, size: 8, offset: 160)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !3155, file: !2984, line: 589, baseType: !2071, size: 8, offset: 168)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !3155, file: !2984, line: 590, baseType: !2071, size: 8, offset: 176)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !2111, file: !385, line: 178, baseType: !2622, size: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !2111, file: !385, line: 179, baseType: !3170, size: 64)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3171 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !385, line: 150, baseType: !3172)
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !385, line: 142, size: 320, elements: !3173)
!3173 = !{!3174, !3175, !3176, !3177, !3178, !3179}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !3172, file: !385, line: 144, baseType: !2205, size: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3172, file: !385, line: 145, baseType: !2090, size: 64, offset: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3172, file: !385, line: 146, baseType: !2090, size: 64, offset: 128)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3172, file: !385, line: 147, baseType: !2830, size: 32, offset: 192)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3172, file: !385, line: 148, baseType: !7, size: 32, offset: 224)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !3172, file: !385, line: 149, baseType: !2071, size: 8, offset: 256)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !2111, file: !385, line: 180, baseType: !3181, size: 64)
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3182, size: 64)
!3182 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !385, line: 162, baseType: !3183)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !385, line: 159, size: 128, elements: !3184)
!3184 = !{!3185, !3186}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3183, file: !385, line: 160, baseType: !2205, size: 64)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3183, file: !385, line: 161, baseType: !2176, size: 64, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !2111, file: !385, line: 181, baseType: !3188, size: 64)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !385, line: 181, flags: DIFlagFwdDecl)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !2106, file: !385, line: 317, baseType: !3191, size: 64)
!3191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2176, size: 64, elements: !2125)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !2106, file: !385, line: 318, baseType: !3193, size: 320)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !385, line: 188, size: 320, elements: !3194)
!3194 = !{!3195, !3197, !3220}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !3193, file: !385, line: 190, baseType: !3196, size: 192)
!3196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 192, elements: !2276)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3193, file: !385, line: 193, baseType: !3198, size: 64, offset: 192)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 64)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !385, line: 206, size: 320, elements: !3200)
!3200 = !{!3201, !3205, !3206, !3207, !3219}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !3199, file: !385, line: 208, baseType: !3202, size: 64)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3203, size: 64)
!3203 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !2091, line: 62, baseType: !3204)
!3204 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !2091, line: 61, flags: DIFlagFwdDecl)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !3199, file: !385, line: 211, baseType: !7, size: 32, offset: 64)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3199, file: !385, line: 214, baseType: !2176, size: 64, offset: 128)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3199, file: !385, line: 224, baseType: !3208, size: 64, offset: 192)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 64)
!3209 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !385, line: 202, baseType: !3210)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !385, line: 202, size: 128, elements: !3211)
!3211 = !{!3212}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3210, file: !385, line: 202, baseType: !3213, size: 128)
!3213 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !385, line: 200, baseType: !3214)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !385, line: 200, size: 128, elements: !3215)
!3215 = !{!3216, !3217, !3218}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3214, file: !385, line: 200, baseType: !7, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3214, file: !385, line: 200, baseType: !7, size: 32, offset: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3214, file: !385, line: 200, baseType: !2124, size: 64, offset: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !3199, file: !385, line: 234, baseType: !3208, size: 64, offset: 256)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3193, file: !385, line: 197, baseType: !2176, size: 64, offset: 256)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !2106, file: !385, line: 319, baseType: !2265, size: 256)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !2106, file: !385, line: 320, baseType: !2284, size: 192)
!3223 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2265)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "no_conflict_data", file: !3, line: 3842, size: 256, elements: !3228)
!3228 = !{!3229, !3230, !3231, !3232}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3227, file: !3, line: 3844, baseType: !2090, size: 64)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3227, file: !3, line: 3844, baseType: !2090, size: 64, offset: 64)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3227, file: !3, line: 3844, baseType: !2090, size: 64, offset: 128)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "must_stay", scope: !3227, file: !3, line: 3845, baseType: !2071, size: 8, offset: 192)
!3233 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !2091, line: 59, baseType: !3234)
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2207)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2084)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!3239 = !{!3240, !3247, !3261, !3283, !0, !3288, !3294, !3297, !3299, !3301, !3303}
!3240 = !DIGlobalVariableExpression(var: !3241, expr: !DIExpression())
!3241 = distinct !DIGlobalVariable(name: "reinit", scope: !3242, file: !3, line: 6194, type: !2071, isLocal: true, isDefinition: true)
!3242 = distinct !DISubprogram(name: "init_optabs", scope: !3, file: !3, line: 6191, type: !3243, scopeLine: 6192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3245)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{null}
!3245 = !{!3246}
!3246 = !DILocalVariable(name: "i", scope: !3242, file: !3, line: 6193, type: !7)
!3247 = !DIGlobalVariableExpression(var: !3248, expr: !DIExpression())
!3248 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_optabs_h", scope: !2, file: !3249, line: 105, type: !3250, isLocal: false, isDefinition: true)
!3249 = !DIFile(filename: "./gt-optabs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3251, size: 960, elements: !2276)
!3251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3252)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !3253, line: 69, size: 320, elements: !3254)
!3253 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3254 = !{!3255, !3256, !3257, !3258, !3260}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3252, file: !3253, line: 70, baseType: !2076, size: 64)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !3252, file: !3253, line: 71, baseType: !2079, size: 64, offset: 64)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !3252, file: !3253, line: 72, baseType: !2079, size: 64, offset: 128)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !3252, file: !3253, line: 73, baseType: !3259, size: 64, offset: 192)
!3259 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !3253, line: 65, baseType: !2555)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !3252, file: !3253, line: 74, baseType: !3259, size: 64, offset: 256)
!3261 = !DIGlobalVariableExpression(var: !3262, expr: !DIExpression())
!3262 = distinct !DIGlobalVariable(name: "optab_table", scope: !2, file: !3, line: 63, type: !3263, isLocal: false, isDefinition: true)
!3263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3264, size: 488448, elements: !3281)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "optab_d", file: !2020, line: 46, size: 3072, elements: !3265)
!3265 = !{!3266, !3267, !3268, !3269, !3274}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3264, file: !2020, line: 48, baseType: !384, size: 32)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_basename", scope: !3264, file: !2020, line: 49, baseType: !2077, size: 64, offset: 64)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_suffix", scope: !3264, file: !2020, line: 50, baseType: !2075, size: 8, offset: 128)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_gen", scope: !3264, file: !2020, line: 51, baseType: !3270, size: 64, offset: 192)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{null, !3273, !2077, !2075, !5}
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 64)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3264, file: !2020, line: 53, baseType: !3275, size: 2784, offset: 256)
!3275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3276, size: 2784, elements: !3279)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "optab_handlers", file: !2020, line: 41, size: 32, elements: !3277)
!3277 = !{!3278}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "insn_code", scope: !3276, file: !2020, line: 43, baseType: !527, size: 32)
!3279 = !{!3280}
!3280 = !DISubrange(count: 87)
!3281 = !{!3282}
!3282 = !DISubrange(count: 159)
!3283 = !DIGlobalVariableExpression(var: !3284, expr: !DIExpression())
!3284 = distinct !DIGlobalVariable(name: "libfunc_table", scope: !2, file: !3, line: 66, type: !3285, isLocal: false, isDefinition: true)
!3285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2090, size: 896, elements: !3286)
!3286 = !{!3287}
!3287 = !DISubrange(count: 14)
!3288 = !DIGlobalVariableExpression(var: !3289, expr: !DIExpression())
!3289 = distinct !DIGlobalVariable(name: "code_to_optab", scope: !2, file: !3, line: 80, type: !3290, isLocal: false, isDefinition: true)
!3290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3291, size: 8960, elements: !3292)
!3291 = !DIDerivedType(tag: DW_TAG_typedef, name: "optab", file: !2020, line: 55, baseType: !3273)
!3292 = !{!3293}
!3293 = !DISubrange(count: 140)
!3294 = !DIGlobalVariableExpression(var: !3295, expr: !DIExpression())
!3295 = distinct !DIGlobalVariable(name: "movcc_gen_code", scope: !2, file: !3, line: 88, type: !3296, isLocal: false, isDefinition: true)
!3296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 2784, elements: !3279)
!3297 = !DIGlobalVariableExpression(var: !3298, expr: !DIExpression())
!3298 = distinct !DIGlobalVariable(name: "vcond_gen_code", scope: !2, file: !3, line: 94, type: !3296, isLocal: false, isDefinition: true)
!3299 = !DIGlobalVariableExpression(var: !3300, expr: !DIExpression())
!3300 = distinct !DIGlobalVariable(name: "vcondu_gen_code", scope: !2, file: !3, line: 95, type: !3296, isLocal: false, isDefinition: true)
!3301 = !DIGlobalVariableExpression(var: !3302, expr: !DIExpression())
!3302 = distinct !DIGlobalVariable(name: "libfunc_hash", scope: !2, file: !3, line: 121, type: !2535, isLocal: true, isDefinition: true)
!3303 = !DIGlobalVariableExpression(var: !3304, expr: !DIExpression())
!3304 = distinct !DIGlobalVariable(name: "libfunc_decls", scope: !2, file: !3, line: 6053, type: !2535, isLocal: true, isDefinition: true)
!3305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3306, size: 4121344, elements: !3318)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "convert_optab_d", file: !2020, line: 60, size: 242432, elements: !3307)
!3307 = !{!3308, !3309, !3310, !3315}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3306, file: !2020, line: 62, baseType: !384, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_basename", scope: !3306, file: !2020, line: 63, baseType: !2077, size: 64, offset: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_gen", scope: !3306, file: !2020, line: 64, baseType: !3311, size: 64, offset: 128)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = !DISubroutineType(types: !3313)
!3313 = !{null, !3314, !2077, !5, !5}
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3306, file: !2020, line: 67, baseType: !3316, size: 242208, offset: 192)
!3316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3276, size: 242208, elements: !3317)
!3317 = !{!3280, !3280}
!3318 = !{!3319}
!3319 = !DISubrange(count: 17)
!3320 = !{i32 2, !"Dwarf Version", i32 4}
!3321 = !{i32 2, !"Debug Info Version", i32 3}
!3322 = !{i32 1, !"wchar_size", i32 4}
!3323 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!3324 = distinct !DISubprogram(name: "vprintf", scope: !3325, file: !3325, line: 39, type: !3326, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3336)
!3325 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!3326 = !DISubroutineType(types: !3327)
!3327 = !{!2072, !3328, !3329}
!3328 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2077)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 64)
!3330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !3331)
!3331 = !{!3332, !3333, !3334, !3335}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3330, file: !3, baseType: !7, size: 32)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3330, file: !3, baseType: !7, size: 32, offset: 32)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3330, file: !3, baseType: !2076, size: 64, offset: 64)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3330, file: !3, baseType: !2076, size: 64, offset: 128)
!3336 = !{!3337, !3338}
!3337 = !DILocalVariable(name: "__fmt", arg: 1, scope: !3324, file: !3325, line: 39, type: !3328)
!3338 = !DILocalVariable(name: "__arg", arg: 2, scope: !3324, file: !3325, line: 39, type: !3329)
!3339 = !DILocation(line: 0, scope: !3324)
!3340 = !DILocation(line: 41, column: 20, scope: !3324)
!3341 = !DILocation(line: 41, column: 10, scope: !3324)
!3342 = !DILocation(line: 41, column: 3, scope: !3324)
!3343 = distinct !DISubprogram(name: "getchar", scope: !3325, file: !3325, line: 47, type: !3344, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3346)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{!2072}
!3346 = !{}
!3347 = !DILocation(line: 49, column: 16, scope: !3343)
!3348 = !DILocation(line: 49, column: 10, scope: !3343)
!3349 = !DILocation(line: 49, column: 3, scope: !3343)
!3350 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !3325, file: !3325, line: 56, type: !3351, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3403)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{!2072, !3353}
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3354, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3355, line: 7, baseType: !3356)
!3355 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3357, line: 49, size: 1728, elements: !3358)
!3357 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3358 = !{!3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3374, !3376, !3377, !3378, !3381, !3382, !3383, !3384, !3387, !3389, !3392, !3395, !3396, !3397, !3398, !3399}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3356, file: !3357, line: 51, baseType: !2072, size: 32)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3356, file: !3357, line: 54, baseType: !2074, size: 64, offset: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3356, file: !3357, line: 55, baseType: !2074, size: 64, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3356, file: !3357, line: 56, baseType: !2074, size: 64, offset: 192)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3356, file: !3357, line: 57, baseType: !2074, size: 64, offset: 256)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3356, file: !3357, line: 58, baseType: !2074, size: 64, offset: 320)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3356, file: !3357, line: 59, baseType: !2074, size: 64, offset: 384)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3356, file: !3357, line: 60, baseType: !2074, size: 64, offset: 448)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3356, file: !3357, line: 61, baseType: !2074, size: 64, offset: 512)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3356, file: !3357, line: 64, baseType: !2074, size: 64, offset: 576)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3356, file: !3357, line: 65, baseType: !2074, size: 64, offset: 640)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3356, file: !3357, line: 66, baseType: !2074, size: 64, offset: 704)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3356, file: !3357, line: 68, baseType: !3372, size: 64, offset: 768)
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3373, size: 64)
!3373 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3357, line: 36, flags: DIFlagFwdDecl)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3356, file: !3357, line: 70, baseType: !3375, size: 64, offset: 832)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3356, file: !3357, line: 72, baseType: !2072, size: 32, offset: 896)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3356, file: !3357, line: 73, baseType: !2072, size: 32, offset: 928)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3356, file: !3357, line: 74, baseType: !3379, size: 64, offset: 960)
!3379 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !3380, line: 152, baseType: !2176)
!3380 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3356, file: !3357, line: 77, baseType: !3223, size: 16, offset: 1024)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3356, file: !3357, line: 78, baseType: !2995, size: 8, offset: 1040)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3356, file: !3357, line: 79, baseType: !2300, size: 8, offset: 1048)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3356, file: !3357, line: 81, baseType: !3385, size: 64, offset: 1088)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 64)
!3386 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3357, line: 43, baseType: null)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3356, file: !3357, line: 89, baseType: !3388, size: 64, offset: 1152)
!3388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !3380, line: 153, baseType: !2176)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3356, file: !3357, line: 91, baseType: !3390, size: 64, offset: 1216)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3357, line: 37, flags: DIFlagFwdDecl)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3356, file: !3357, line: 92, baseType: !3393, size: 64, offset: 1280)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 64)
!3394 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3357, line: 38, flags: DIFlagFwdDecl)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3356, file: !3357, line: 93, baseType: !3375, size: 64, offset: 1344)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3356, file: !3357, line: 94, baseType: !2076, size: 64, offset: 1408)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3356, file: !3357, line: 95, baseType: !2079, size: 64, offset: 1472)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3356, file: !3357, line: 96, baseType: !2072, size: 32, offset: 1536)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3356, file: !3357, line: 98, baseType: !3400, size: 160, offset: 1568)
!3400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2075, size: 160, elements: !3401)
!3401 = !{!3402}
!3402 = !DISubrange(count: 20)
!3403 = !{!3404}
!3404 = !DILocalVariable(name: "__fp", arg: 1, scope: !3350, file: !3325, line: 56, type: !3353)
!3405 = !DILocation(line: 0, scope: !3350)
!3406 = !DILocation(line: 58, column: 10, scope: !3350)
!3407 = !DILocation(line: 58, column: 3, scope: !3350)
!3408 = distinct !DISubprogram(name: "getc_unlocked", scope: !3325, file: !3325, line: 66, type: !3351, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3409)
!3409 = !{!3410}
!3410 = !DILocalVariable(name: "__fp", arg: 1, scope: !3408, file: !3325, line: 66, type: !3353)
!3411 = !DILocation(line: 0, scope: !3408)
!3412 = !DILocation(line: 68, column: 10, scope: !3408)
!3413 = !DILocation(line: 68, column: 3, scope: !3408)
!3414 = distinct !DISubprogram(name: "getchar_unlocked", scope: !3325, file: !3325, line: 73, type: !3344, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3346)
!3415 = !DILocation(line: 75, column: 10, scope: !3414)
!3416 = !DILocation(line: 75, column: 3, scope: !3414)
!3417 = distinct !DISubprogram(name: "putchar", scope: !3325, file: !3325, line: 82, type: !3418, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3420)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!2072, !2072}
!3420 = !{!3421}
!3421 = !DILocalVariable(name: "__c", arg: 1, scope: !3417, file: !3325, line: 82, type: !2072)
!3422 = !DILocation(line: 0, scope: !3417)
!3423 = !DILocation(line: 84, column: 21, scope: !3417)
!3424 = !DILocation(line: 84, column: 10, scope: !3417)
!3425 = !DILocation(line: 84, column: 3, scope: !3417)
!3426 = distinct !DISubprogram(name: "fputc_unlocked", scope: !3325, file: !3325, line: 91, type: !3427, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3429)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!2072, !2072, !3353}
!3429 = !{!3430, !3431}
!3430 = !DILocalVariable(name: "__c", arg: 1, scope: !3426, file: !3325, line: 91, type: !2072)
!3431 = !DILocalVariable(name: "__stream", arg: 2, scope: !3426, file: !3325, line: 91, type: !3353)
!3432 = !DILocation(line: 0, scope: !3426)
!3433 = !DILocation(line: 93, column: 10, scope: !3426)
!3434 = !DILocation(line: 93, column: 3, scope: !3426)
!3435 = distinct !DISubprogram(name: "putc_unlocked", scope: !3325, file: !3325, line: 101, type: !3427, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3436)
!3436 = !{!3437, !3438}
!3437 = !DILocalVariable(name: "__c", arg: 1, scope: !3435, file: !3325, line: 101, type: !2072)
!3438 = !DILocalVariable(name: "__stream", arg: 2, scope: !3435, file: !3325, line: 101, type: !3353)
!3439 = !DILocation(line: 0, scope: !3435)
!3440 = !DILocation(line: 103, column: 10, scope: !3435)
!3441 = !DILocation(line: 103, column: 3, scope: !3435)
!3442 = distinct !DISubprogram(name: "putchar_unlocked", scope: !3325, file: !3325, line: 108, type: !3418, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3443)
!3443 = !{!3444}
!3444 = !DILocalVariable(name: "__c", arg: 1, scope: !3442, file: !3325, line: 108, type: !2072)
!3445 = !DILocation(line: 0, scope: !3442)
!3446 = !DILocation(line: 110, column: 10, scope: !3442)
!3447 = !DILocation(line: 110, column: 3, scope: !3442)
!3448 = distinct !DISubprogram(name: "getline", scope: !3325, file: !3325, line: 118, type: !3449, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3453)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{!3451, !2073, !3452, !3353}
!3451 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !3380, line: 193, baseType: !2176)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!3453 = !{!3454, !3455, !3456}
!3454 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !3448, file: !3325, line: 118, type: !2073)
!3455 = !DILocalVariable(name: "__n", arg: 2, scope: !3448, file: !3325, line: 118, type: !3452)
!3456 = !DILocalVariable(name: "__stream", arg: 3, scope: !3448, file: !3325, line: 118, type: !3353)
!3457 = !DILocation(line: 0, scope: !3448)
!3458 = !DILocation(line: 120, column: 10, scope: !3448)
!3459 = !DILocation(line: 120, column: 3, scope: !3448)
!3460 = distinct !DISubprogram(name: "feof_unlocked", scope: !3325, file: !3325, line: 128, type: !3351, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3461)
!3461 = !{!3462}
!3462 = !DILocalVariable(name: "__stream", arg: 1, scope: !3460, file: !3325, line: 128, type: !3353)
!3463 = !DILocation(line: 0, scope: !3460)
!3464 = !DILocation(line: 130, column: 10, scope: !3460)
!3465 = !DILocation(line: 130, column: 3, scope: !3460)
!3466 = distinct !DISubprogram(name: "ferror_unlocked", scope: !3325, file: !3325, line: 135, type: !3351, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3467)
!3467 = !{!3468}
!3468 = !DILocalVariable(name: "__stream", arg: 1, scope: !3466, file: !3325, line: 135, type: !3353)
!3469 = !DILocation(line: 0, scope: !3466)
!3470 = !DILocation(line: 137, column: 10, scope: !3466)
!3471 = !DILocation(line: 137, column: 3, scope: !3466)
!3472 = distinct !DISubprogram(name: "tolower", scope: !3473, file: !3473, line: 207, type: !3418, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3474)
!3473 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!3474 = !{!3475}
!3475 = !DILocalVariable(name: "__c", arg: 1, scope: !3472, file: !3473, line: 207, type: !2072)
!3476 = !DILocation(line: 0, scope: !3472)
!3477 = !DILocation(line: 209, column: 22, scope: !3472)
!3478 = !DILocation(line: 209, column: 39, scope: !3472)
!3479 = !DILocation(line: 209, column: 38, scope: !3472)
!3480 = !DILocation(line: 209, column: 37, scope: !3472)
!3481 = !DILocation(line: 209, column: 10, scope: !3472)
!3482 = !DILocation(line: 209, column: 3, scope: !3472)
!3483 = distinct !DISubprogram(name: "toupper", scope: !3473, file: !3473, line: 213, type: !3418, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3484)
!3484 = !{!3485}
!3485 = !DILocalVariable(name: "__c", arg: 1, scope: !3483, file: !3473, line: 213, type: !2072)
!3486 = !DILocation(line: 0, scope: !3483)
!3487 = !DILocation(line: 215, column: 22, scope: !3483)
!3488 = !DILocation(line: 215, column: 39, scope: !3483)
!3489 = !DILocation(line: 215, column: 38, scope: !3483)
!3490 = !DILocation(line: 215, column: 37, scope: !3483)
!3491 = !DILocation(line: 215, column: 10, scope: !3483)
!3492 = !DILocation(line: 215, column: 3, scope: !3483)
!3493 = distinct !DISubprogram(name: "atoi", scope: !3494, file: !3494, line: 361, type: !3495, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3497)
!3494 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!2072, !2077}
!3497 = !{!3498}
!3498 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3493, file: !3494, line: 361, type: !2077)
!3499 = !DILocation(line: 0, scope: !3493)
!3500 = !DILocation(line: 363, column: 16, scope: !3493)
!3501 = !DILocation(line: 363, column: 10, scope: !3493)
!3502 = !DILocation(line: 363, column: 3, scope: !3493)
!3503 = distinct !DISubprogram(name: "atol", scope: !3494, file: !3494, line: 366, type: !3504, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3506)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!2176, !2077}
!3506 = !{!3507}
!3507 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3503, file: !3494, line: 366, type: !2077)
!3508 = !DILocation(line: 0, scope: !3503)
!3509 = !DILocation(line: 368, column: 10, scope: !3503)
!3510 = !DILocation(line: 368, column: 3, scope: !3503)
!3511 = distinct !DISubprogram(name: "atoll", scope: !3494, file: !3494, line: 373, type: !3512, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3515)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{!3514, !2077}
!3514 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!3515 = !{!3516}
!3516 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3511, file: !3494, line: 373, type: !2077)
!3517 = !DILocation(line: 0, scope: !3511)
!3518 = !DILocation(line: 375, column: 10, scope: !3511)
!3519 = !DILocation(line: 375, column: 3, scope: !3511)
!3520 = distinct !DISubprogram(name: "bsearch", scope: !3521, file: !3521, line: 20, type: !3522, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3525)
!3521 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!3522 = !DISubroutineType(types: !3523)
!3523 = !{!2076, !2546, !2546, !2079, !2079, !3524}
!3524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !3494, line: 808, baseType: !2550)
!3525 = !{!3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535}
!3526 = !DILocalVariable(name: "__key", arg: 1, scope: !3520, file: !3521, line: 20, type: !2546)
!3527 = !DILocalVariable(name: "__base", arg: 2, scope: !3520, file: !3521, line: 20, type: !2546)
!3528 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !3520, file: !3521, line: 20, type: !2079)
!3529 = !DILocalVariable(name: "__size", arg: 4, scope: !3520, file: !3521, line: 20, type: !2079)
!3530 = !DILocalVariable(name: "__compar", arg: 5, scope: !3520, file: !3521, line: 21, type: !3524)
!3531 = !DILocalVariable(name: "__l", scope: !3520, file: !3521, line: 23, type: !2079)
!3532 = !DILocalVariable(name: "__u", scope: !3520, file: !3521, line: 23, type: !2079)
!3533 = !DILocalVariable(name: "__idx", scope: !3520, file: !3521, line: 23, type: !2079)
!3534 = !DILocalVariable(name: "__p", scope: !3520, file: !3521, line: 24, type: !2546)
!3535 = !DILocalVariable(name: "__comparison", scope: !3520, file: !3521, line: 25, type: !2072)
!3536 = !DILocation(line: 0, scope: !3520)
!3537 = !DILocation(line: 29, column: 3, scope: !3520)
!3538 = !DILocation(line: 27, column: 7, scope: !3520)
!3539 = !DILocation(line: 29, column: 14, scope: !3520)
!3540 = !DILocation(line: 31, column: 20, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3520, file: !3521, line: 30, column: 5)
!3542 = !DILocation(line: 31, column: 27, scope: !3541)
!3543 = !DILocation(line: 32, column: 56, scope: !3541)
!3544 = !DILocation(line: 32, column: 47, scope: !3541)
!3545 = !DILocation(line: 33, column: 22, scope: !3541)
!3546 = !DILocation(line: 34, column: 24, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3541, file: !3521, line: 34, column: 11)
!3548 = !DILocation(line: 34, column: 11, scope: !3541)
!3549 = !DILocation(line: 36, column: 29, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3547, file: !3521, line: 36, column: 16)
!3551 = !DILocation(line: 36, column: 16, scope: !3547)
!3552 = !DILocation(line: 37, column: 14, scope: !3550)
!3553 = distinct !{!3553, !3537, !3554}
!3554 = !DILocation(line: 40, column: 5, scope: !3520)
!3555 = !DILocation(line: 43, column: 1, scope: !3520)
!3556 = distinct !DISubprogram(name: "atof", scope: !3557, file: !3557, line: 25, type: !3558, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3561)
!3557 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!3558 = !DISubroutineType(types: !3559)
!3559 = !{!3560, !2077}
!3560 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3561 = !{!3562}
!3562 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3556, file: !3557, line: 25, type: !2077)
!3563 = !DILocation(line: 0, scope: !3556)
!3564 = !DILocation(line: 27, column: 10, scope: !3556)
!3565 = !DILocation(line: 27, column: 3, scope: !3556)
!3566 = distinct !DISubprogram(name: "strtoimax", scope: !3567, file: !3567, line: 324, type: !3568, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3574)
!3567 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!3568 = !DISubroutineType(types: !3569)
!3569 = !{!3570, !3328, !3573, !2072}
!3570 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !3571, line: 101, baseType: !3572)
!3571 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!3572 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !3380, line: 72, baseType: !2176)
!3573 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2073)
!3574 = !{!3575, !3576, !3577}
!3575 = !DILocalVariable(name: "nptr", arg: 1, scope: !3566, file: !3567, line: 324, type: !3328)
!3576 = !DILocalVariable(name: "endptr", arg: 2, scope: !3566, file: !3567, line: 324, type: !3573)
!3577 = !DILocalVariable(name: "base", arg: 3, scope: !3566, file: !3567, line: 324, type: !2072)
!3578 = !DILocation(line: 0, scope: !3566)
!3579 = !DILocation(line: 327, column: 10, scope: !3566)
!3580 = !DILocation(line: 327, column: 3, scope: !3566)
!3581 = distinct !DISubprogram(name: "strtoumax", scope: !3567, file: !3567, line: 336, type: !3582, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3586)
!3582 = !DISubroutineType(types: !3583)
!3583 = !{!3584, !3328, !3573, !2072}
!3584 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !3571, line: 102, baseType: !3585)
!3585 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !3380, line: 73, baseType: !2081)
!3586 = !{!3587, !3588, !3589}
!3587 = !DILocalVariable(name: "nptr", arg: 1, scope: !3581, file: !3567, line: 336, type: !3328)
!3588 = !DILocalVariable(name: "endptr", arg: 2, scope: !3581, file: !3567, line: 336, type: !3573)
!3589 = !DILocalVariable(name: "base", arg: 3, scope: !3581, file: !3567, line: 336, type: !2072)
!3590 = !DILocation(line: 0, scope: !3581)
!3591 = !DILocation(line: 339, column: 10, scope: !3581)
!3592 = !DILocation(line: 339, column: 3, scope: !3581)
!3593 = distinct !DISubprogram(name: "wcstoimax", scope: !3567, file: !3567, line: 348, type: !3594, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3603)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!3570, !3596, !3600, !2072}
!3596 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3597)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3599)
!3599 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !3567, line: 34, baseType: !2072)
!3600 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3601)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3603 = !{!3604, !3605, !3606}
!3604 = !DILocalVariable(name: "nptr", arg: 1, scope: !3593, file: !3567, line: 348, type: !3596)
!3605 = !DILocalVariable(name: "endptr", arg: 2, scope: !3593, file: !3567, line: 348, type: !3600)
!3606 = !DILocalVariable(name: "base", arg: 3, scope: !3593, file: !3567, line: 348, type: !2072)
!3607 = !DILocation(line: 0, scope: !3593)
!3608 = !DILocation(line: 351, column: 10, scope: !3593)
!3609 = !DILocation(line: 351, column: 3, scope: !3593)
!3610 = distinct !DISubprogram(name: "wcstoumax", scope: !3567, file: !3567, line: 362, type: !3611, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3613)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{!3584, !3596, !3600, !2072}
!3613 = !{!3614, !3615, !3616}
!3614 = !DILocalVariable(name: "nptr", arg: 1, scope: !3610, file: !3567, line: 362, type: !3596)
!3615 = !DILocalVariable(name: "endptr", arg: 2, scope: !3610, file: !3567, line: 362, type: !3600)
!3616 = !DILocalVariable(name: "base", arg: 3, scope: !3610, file: !3567, line: 362, type: !2072)
!3617 = !DILocation(line: 0, scope: !3610)
!3618 = !DILocation(line: 365, column: 10, scope: !3610)
!3619 = !DILocation(line: 365, column: 3, scope: !3610)
!3620 = distinct !DISubprogram(name: "stat", scope: !3621, file: !3621, line: 453, type: !3622, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3659)
!3621 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!3622 = !DISubroutineType(types: !3623)
!3623 = !{!2072, !2077, !3624}
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !3626, line: 46, size: 1152, elements: !3627)
!3626 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!3627 = !{!3628, !3630, !3632, !3634, !3636, !3638, !3640, !3641, !3642, !3643, !3645, !3647, !3655, !3656, !3657}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3625, file: !3626, line: 48, baseType: !3629, size: 64)
!3629 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !3380, line: 145, baseType: !2081)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3625, file: !3626, line: 53, baseType: !3631, size: 64, offset: 64)
!3631 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !3380, line: 148, baseType: !2081)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3625, file: !3626, line: 61, baseType: !3633, size: 64, offset: 128)
!3633 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !3380, line: 151, baseType: !2081)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3625, file: !3626, line: 62, baseType: !3635, size: 32, offset: 192)
!3635 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !3380, line: 150, baseType: !7)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3625, file: !3626, line: 64, baseType: !3637, size: 32, offset: 224)
!3637 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !3380, line: 146, baseType: !7)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3625, file: !3626, line: 65, baseType: !3639, size: 32, offset: 256)
!3639 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !3380, line: 147, baseType: !7)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3625, file: !3626, line: 67, baseType: !2072, size: 32, offset: 288)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3625, file: !3626, line: 69, baseType: !3629, size: 64, offset: 320)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3625, file: !3626, line: 74, baseType: !3379, size: 64, offset: 384)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3625, file: !3626, line: 78, baseType: !3644, size: 64, offset: 448)
!3644 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !3380, line: 174, baseType: !2176)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3625, file: !3626, line: 80, baseType: !3646, size: 64, offset: 512)
!3646 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !3380, line: 179, baseType: !2176)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3625, file: !3626, line: 91, baseType: !3648, size: 128, offset: 576)
!3648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !3649, line: 10, size: 128, elements: !3650)
!3649 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!3650 = !{!3651, !3653}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3648, file: !3649, line: 12, baseType: !3652, size: 64)
!3652 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !3380, line: 160, baseType: !2176)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3648, file: !3649, line: 16, baseType: !3654, size: 64, offset: 64)
!3654 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !3380, line: 196, baseType: !2176)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3625, file: !3626, line: 92, baseType: !3648, size: 128, offset: 704)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3625, file: !3626, line: 93, baseType: !3648, size: 128, offset: 832)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3625, file: !3626, line: 106, baseType: !3658, size: 192, offset: 960)
!3658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3654, size: 192, elements: !2276)
!3659 = !{!3660, !3661}
!3660 = !DILocalVariable(name: "__path", arg: 1, scope: !3620, file: !3621, line: 453, type: !2077)
!3661 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3620, file: !3621, line: 453, type: !3624)
!3662 = !DILocation(line: 0, scope: !3620)
!3663 = !DILocation(line: 455, column: 10, scope: !3620)
!3664 = !DILocation(line: 455, column: 3, scope: !3620)
!3665 = distinct !DISubprogram(name: "lstat", scope: !3621, file: !3621, line: 460, type: !3622, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3666)
!3666 = !{!3667, !3668}
!3667 = !DILocalVariable(name: "__path", arg: 1, scope: !3665, file: !3621, line: 460, type: !2077)
!3668 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3665, file: !3621, line: 460, type: !3624)
!3669 = !DILocation(line: 0, scope: !3665)
!3670 = !DILocation(line: 462, column: 10, scope: !3665)
!3671 = !DILocation(line: 462, column: 3, scope: !3665)
!3672 = distinct !DISubprogram(name: "fstat", scope: !3621, file: !3621, line: 467, type: !3673, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3675)
!3673 = !DISubroutineType(types: !3674)
!3674 = !{!2072, !2072, !3624}
!3675 = !{!3676, !3677}
!3676 = !DILocalVariable(name: "__fd", arg: 1, scope: !3672, file: !3621, line: 467, type: !2072)
!3677 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3672, file: !3621, line: 467, type: !3624)
!3678 = !DILocation(line: 0, scope: !3672)
!3679 = !DILocation(line: 469, column: 10, scope: !3672)
!3680 = !DILocation(line: 469, column: 3, scope: !3672)
!3681 = distinct !DISubprogram(name: "fstatat", scope: !3621, file: !3621, line: 474, type: !3682, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3684)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{!2072, !2072, !2077, !3624, !2072}
!3684 = !{!3685, !3686, !3687, !3688}
!3685 = !DILocalVariable(name: "__fd", arg: 1, scope: !3681, file: !3621, line: 474, type: !2072)
!3686 = !DILocalVariable(name: "__filename", arg: 2, scope: !3681, file: !3621, line: 474, type: !2077)
!3687 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !3681, file: !3621, line: 474, type: !3624)
!3688 = !DILocalVariable(name: "__flag", arg: 4, scope: !3681, file: !3621, line: 474, type: !2072)
!3689 = !DILocation(line: 0, scope: !3681)
!3690 = !DILocation(line: 477, column: 10, scope: !3681)
!3691 = !DILocation(line: 477, column: 3, scope: !3681)
!3692 = distinct !DISubprogram(name: "mknod", scope: !3621, file: !3621, line: 483, type: !3693, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3695)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!2072, !2077, !3635, !3629}
!3695 = !{!3696, !3697, !3698}
!3696 = !DILocalVariable(name: "__path", arg: 1, scope: !3692, file: !3621, line: 483, type: !2077)
!3697 = !DILocalVariable(name: "__mode", arg: 2, scope: !3692, file: !3621, line: 483, type: !3635)
!3698 = !DILocalVariable(name: "__dev", arg: 3, scope: !3692, file: !3621, line: 483, type: !3629)
!3699 = !DILocation(line: 0, scope: !3692)
!3700 = !DILocation(line: 485, column: 10, scope: !3692)
!3701 = !DILocation(line: 485, column: 3, scope: !3692)
!3702 = distinct !DISubprogram(name: "mknodat", scope: !3621, file: !3621, line: 491, type: !3703, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3705)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!2072, !2072, !2077, !3635, !3629}
!3705 = !{!3706, !3707, !3708, !3709}
!3706 = !DILocalVariable(name: "__fd", arg: 1, scope: !3702, file: !3621, line: 491, type: !2072)
!3707 = !DILocalVariable(name: "__path", arg: 2, scope: !3702, file: !3621, line: 491, type: !2077)
!3708 = !DILocalVariable(name: "__mode", arg: 3, scope: !3702, file: !3621, line: 491, type: !3635)
!3709 = !DILocalVariable(name: "__dev", arg: 4, scope: !3702, file: !3621, line: 491, type: !3629)
!3710 = !DILocation(line: 0, scope: !3702)
!3711 = !DILocation(line: 494, column: 10, scope: !3702)
!3712 = !DILocation(line: 494, column: 3, scope: !3702)
!3713 = distinct !DISubprogram(name: "stat64", scope: !3621, file: !3621, line: 502, type: !3714, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3736)
!3714 = !DISubroutineType(types: !3715)
!3715 = !{!2072, !2077, !3716}
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !3626, line: 119, size: 1152, elements: !3718)
!3718 = !{!3719, !3720, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3732, !3733, !3734, !3735}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3717, file: !3626, line: 121, baseType: !3629, size: 64)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3717, file: !3626, line: 123, baseType: !3721, size: 64, offset: 64)
!3721 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !3380, line: 149, baseType: !2081)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3717, file: !3626, line: 124, baseType: !3633, size: 64, offset: 128)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3717, file: !3626, line: 125, baseType: !3635, size: 32, offset: 192)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3717, file: !3626, line: 132, baseType: !3637, size: 32, offset: 224)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3717, file: !3626, line: 133, baseType: !3639, size: 32, offset: 256)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3717, file: !3626, line: 135, baseType: !2072, size: 32, offset: 288)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3717, file: !3626, line: 136, baseType: !3629, size: 64, offset: 320)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3717, file: !3626, line: 137, baseType: !3379, size: 64, offset: 384)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3717, file: !3626, line: 143, baseType: !3644, size: 64, offset: 448)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3717, file: !3626, line: 144, baseType: !3731, size: 64, offset: 512)
!3731 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !3380, line: 180, baseType: !2176)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3717, file: !3626, line: 152, baseType: !3648, size: 128, offset: 576)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3717, file: !3626, line: 153, baseType: !3648, size: 128, offset: 704)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3717, file: !3626, line: 154, baseType: !3648, size: 128, offset: 832)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3717, file: !3626, line: 164, baseType: !3658, size: 192, offset: 960)
!3736 = !{!3737, !3738}
!3737 = !DILocalVariable(name: "__path", arg: 1, scope: !3713, file: !3621, line: 502, type: !2077)
!3738 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3713, file: !3621, line: 502, type: !3716)
!3739 = !DILocation(line: 0, scope: !3713)
!3740 = !DILocation(line: 504, column: 10, scope: !3713)
!3741 = !DILocation(line: 504, column: 3, scope: !3713)
!3742 = distinct !DISubprogram(name: "lstat64", scope: !3621, file: !3621, line: 509, type: !3714, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3743)
!3743 = !{!3744, !3745}
!3744 = !DILocalVariable(name: "__path", arg: 1, scope: !3742, file: !3621, line: 509, type: !2077)
!3745 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3742, file: !3621, line: 509, type: !3716)
!3746 = !DILocation(line: 0, scope: !3742)
!3747 = !DILocation(line: 511, column: 10, scope: !3742)
!3748 = !DILocation(line: 511, column: 3, scope: !3742)
!3749 = distinct !DISubprogram(name: "fstat64", scope: !3621, file: !3621, line: 516, type: !3750, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3752)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{!2072, !2072, !3716}
!3752 = !{!3753, !3754}
!3753 = !DILocalVariable(name: "__fd", arg: 1, scope: !3749, file: !3621, line: 516, type: !2072)
!3754 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3749, file: !3621, line: 516, type: !3716)
!3755 = !DILocation(line: 0, scope: !3749)
!3756 = !DILocation(line: 518, column: 10, scope: !3749)
!3757 = !DILocation(line: 518, column: 3, scope: !3749)
!3758 = distinct !DISubprogram(name: "fstatat64", scope: !3621, file: !3621, line: 523, type: !3759, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3761)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{!2072, !2072, !2077, !3716, !2072}
!3761 = !{!3762, !3763, !3764, !3765}
!3762 = !DILocalVariable(name: "__fd", arg: 1, scope: !3758, file: !3621, line: 523, type: !2072)
!3763 = !DILocalVariable(name: "__filename", arg: 2, scope: !3758, file: !3621, line: 523, type: !2077)
!3764 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !3758, file: !3621, line: 523, type: !3716)
!3765 = !DILocalVariable(name: "__flag", arg: 4, scope: !3758, file: !3621, line: 523, type: !2072)
!3766 = !DILocation(line: 0, scope: !3758)
!3767 = !DILocation(line: 526, column: 10, scope: !3758)
!3768 = !DILocation(line: 526, column: 3, scope: !3758)
!3769 = distinct !DISubprogram(name: "convert_optab_libfunc", scope: !3, file: !3, line: 151, type: !3770, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3773)
!3770 = !DISubroutineType(types: !3771)
!3771 = !{!2090, !3772, !5, !5}
!3772 = !DIDerivedType(tag: DW_TAG_typedef, name: "convert_optab", file: !2020, line: 69, baseType: !3314)
!3773 = !{!3774, !3775, !3776, !3777, !3778}
!3774 = !DILocalVariable(name: "optab", arg: 1, scope: !3769, file: !3, line: 151, type: !3772)
!3775 = !DILocalVariable(name: "mode1", arg: 2, scope: !3769, file: !3, line: 151, type: !5)
!3776 = !DILocalVariable(name: "mode2", arg: 3, scope: !3769, file: !3, line: 152, type: !5)
!3777 = !DILocalVariable(name: "e", scope: !3769, file: !3, line: 154, type: !2084)
!3778 = !DILocalVariable(name: "slot", scope: !3769, file: !3, line: 155, type: !2082)
!3779 = !DILocation(line: 0, scope: !3769)
!3780 = !DILocation(line: 154, column: 3, scope: !3769)
!3781 = !DILocation(line: 157, column: 29, scope: !3769)
!3782 = !DILocation(line: 157, column: 5, scope: !3769)
!3783 = !DILocation(line: 157, column: 11, scope: !3769)
!3784 = !DILocation(line: 158, column: 5, scope: !3769)
!3785 = !DILocation(line: 158, column: 11, scope: !3769)
!3786 = !DILocation(line: 159, column: 5, scope: !3769)
!3787 = !DILocation(line: 159, column: 11, scope: !3769)
!3788 = !DILocation(line: 160, column: 52, scope: !3769)
!3789 = !DILocation(line: 160, column: 36, scope: !3769)
!3790 = !DILocation(line: 161, column: 8, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3769, file: !3, line: 161, column: 7)
!3792 = !DILocation(line: 161, column: 7, scope: !3769)
!3793 = !DILocation(line: 163, column: 18, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3795, file: !3, line: 163, column: 11)
!3795 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 162, column: 5)
!3796 = !DILocation(line: 163, column: 11, scope: !3794)
!3797 = !DILocation(line: 163, column: 11, scope: !3795)
!3798 = !DILocation(line: 165, column: 38, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 164, column: 2)
!3800 = !DILocation(line: 165, column: 4, scope: !3799)
!3801 = !DILocation(line: 166, column: 60, scope: !3799)
!3802 = !DILocation(line: 166, column: 44, scope: !3799)
!3803 = !DILocation(line: 167, column: 8, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 167, column: 8)
!3805 = !DILocation(line: 167, column: 8, scope: !3799)
!3806 = !DILocation(line: 166, column: 18, scope: !3799)
!3807 = !DILocation(line: 168, column: 14, scope: !3804)
!3808 = !DILocation(line: 168, column: 22, scope: !3804)
!3809 = !DILocation(line: 168, column: 6, scope: !3804)
!3810 = !DILocation(line: 160, column: 10, scope: !3769)
!3811 = !DILocation(line: 174, column: 11, scope: !3769)
!3812 = !DILocation(line: 174, column: 19, scope: !3769)
!3813 = !DILocation(line: 174, column: 3, scope: !3769)
!3814 = !DILocation(line: 175, column: 1, scope: !3769)
!3815 = distinct !DISubprogram(name: "optab_libfunc", scope: !3, file: !3, line: 181, type: !3816, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3818)
!3816 = !DISubroutineType(types: !3817)
!3817 = !{!2090, !3291, !5}
!3818 = !{!3819, !3820, !3821, !3822}
!3819 = !DILocalVariable(name: "optab", arg: 1, scope: !3815, file: !3, line: 181, type: !3291)
!3820 = !DILocalVariable(name: "mode", arg: 2, scope: !3815, file: !3, line: 181, type: !5)
!3821 = !DILocalVariable(name: "e", scope: !3815, file: !3, line: 183, type: !2084)
!3822 = !DILocalVariable(name: "slot", scope: !3815, file: !3, line: 184, type: !2082)
!3823 = !DILocation(line: 0, scope: !3815)
!3824 = !DILocation(line: 183, column: 3, scope: !3815)
!3825 = !DILocation(line: 186, column: 29, scope: !3815)
!3826 = !DILocation(line: 186, column: 5, scope: !3815)
!3827 = !DILocation(line: 186, column: 11, scope: !3815)
!3828 = !DILocation(line: 187, column: 5, scope: !3815)
!3829 = !DILocation(line: 187, column: 11, scope: !3815)
!3830 = !DILocation(line: 188, column: 5, scope: !3815)
!3831 = !DILocation(line: 188, column: 11, scope: !3815)
!3832 = !DILocation(line: 189, column: 52, scope: !3815)
!3833 = !DILocation(line: 189, column: 36, scope: !3815)
!3834 = !DILocation(line: 190, column: 8, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 190, column: 7)
!3836 = !DILocation(line: 190, column: 7, scope: !3815)
!3837 = !DILocation(line: 192, column: 18, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 192, column: 11)
!3839 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 191, column: 5)
!3840 = !DILocation(line: 192, column: 11, scope: !3838)
!3841 = !DILocation(line: 192, column: 11, scope: !3839)
!3842 = !DILocation(line: 194, column: 38, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 193, column: 2)
!3844 = !DILocation(line: 195, column: 17, scope: !3843)
!3845 = !DILocation(line: 194, column: 4, scope: !3843)
!3846 = !DILocation(line: 196, column: 60, scope: !3843)
!3847 = !DILocation(line: 196, column: 44, scope: !3843)
!3848 = !DILocation(line: 198, column: 8, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3843, file: !3, line: 198, column: 8)
!3850 = !DILocation(line: 198, column: 8, scope: !3843)
!3851 = !DILocation(line: 196, column: 18, scope: !3843)
!3852 = !DILocation(line: 199, column: 14, scope: !3849)
!3853 = !DILocation(line: 199, column: 22, scope: !3849)
!3854 = !DILocation(line: 199, column: 6, scope: !3849)
!3855 = !DILocation(line: 189, column: 10, scope: !3815)
!3856 = !DILocation(line: 205, column: 11, scope: !3815)
!3857 = !DILocation(line: 205, column: 19, scope: !3815)
!3858 = !DILocation(line: 205, column: 3, scope: !3815)
!3859 = !DILocation(line: 206, column: 1, scope: !3815)
!3860 = distinct !DISubprogram(name: "optab_for_tree_code", scope: !3, file: !3, line: 320, type: !3861, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3863)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{!3291, !190, !3233, !2019}
!3863 = !{!3864, !3865, !3866, !3867}
!3864 = !DILocalVariable(name: "code", arg: 1, scope: !3860, file: !3, line: 320, type: !190)
!3865 = !DILocalVariable(name: "type", arg: 2, scope: !3860, file: !3, line: 320, type: !3233)
!3866 = !DILocalVariable(name: "subtype", arg: 3, scope: !3860, file: !3, line: 321, type: !2019)
!3867 = !DILocalVariable(name: "trapv", scope: !3860, file: !3, line: 323, type: !2071)
!3868 = !DILocation(line: 0, scope: !3860)
!3869 = !DILocation(line: 324, column: 3, scope: !3860)
!3870 = !DILocation(line: 330, column: 7, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 325, column: 5)
!3872 = !DILocation(line: 333, column: 7, scope: !3871)
!3873 = !DILocation(line: 336, column: 7, scope: !3871)
!3874 = !DILocation(line: 342, column: 14, scope: !3871)
!3875 = !DILocation(line: 342, column: 7, scope: !3871)
!3876 = !DILocation(line: 350, column: 11, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 350, column: 11)
!3878 = !DILocation(line: 0, scope: !3871)
!3879 = !DILocation(line: 350, column: 11, scope: !3871)
!3880 = !DILocation(line: 351, column: 9, scope: !3877)
!3881 = !DILocation(line: 351, column: 2, scope: !3877)
!3882 = !DILocation(line: 352, column: 14, scope: !3871)
!3883 = !DILocation(line: 352, column: 7, scope: !3871)
!3884 = !DILocation(line: 355, column: 11, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 355, column: 11)
!3886 = !DILocation(line: 355, column: 11, scope: !3871)
!3887 = !DILocation(line: 357, column: 8, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 356, column: 2)
!3889 = !DILocation(line: 358, column: 13, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 357, column: 8)
!3891 = !DILocation(line: 358, column: 6, scope: !3890)
!3892 = !DILocation(line: 360, column: 4, scope: !3888)
!3893 = !DILocation(line: 362, column: 11, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 362, column: 11)
!3895 = !DILocation(line: 362, column: 11, scope: !3871)
!3896 = !DILocation(line: 363, column: 9, scope: !3894)
!3897 = !DILocation(line: 363, column: 2, scope: !3894)
!3898 = !DILocation(line: 367, column: 11, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 367, column: 11)
!3900 = !DILocation(line: 367, column: 11, scope: !3871)
!3901 = !DILocation(line: 369, column: 8, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 368, column: 2)
!3903 = !DILocation(line: 370, column: 13, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 369, column: 8)
!3905 = !DILocation(line: 370, column: 6, scope: !3904)
!3906 = !DILocation(line: 372, column: 4, scope: !3902)
!3907 = !DILocation(line: 374, column: 14, scope: !3871)
!3908 = !DILocation(line: 374, column: 7, scope: !3871)
!3909 = !DILocation(line: 377, column: 11, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 377, column: 11)
!3911 = !DILocation(line: 377, column: 11, scope: !3871)
!3912 = !DILocation(line: 379, column: 8, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 378, column: 2)
!3914 = !DILocation(line: 382, column: 4, scope: !3913)
!3915 = !DILocation(line: 384, column: 7, scope: !3871)
!3916 = !DILocation(line: 387, column: 11, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 387, column: 11)
!3918 = !DILocation(line: 387, column: 11, scope: !3871)
!3919 = !DILocation(line: 389, column: 8, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 388, column: 2)
!3921 = !DILocation(line: 392, column: 4, scope: !3920)
!3922 = !DILocation(line: 394, column: 7, scope: !3871)
!3923 = !DILocation(line: 397, column: 14, scope: !3871)
!3924 = !DILocation(line: 397, column: 7, scope: !3871)
!3925 = !DILocation(line: 400, column: 14, scope: !3871)
!3926 = !DILocation(line: 400, column: 7, scope: !3871)
!3927 = !DILocation(line: 403, column: 7, scope: !3871)
!3928 = !DILocation(line: 406, column: 14, scope: !3871)
!3929 = !DILocation(line: 406, column: 7, scope: !3871)
!3930 = !DILocation(line: 409, column: 14, scope: !3871)
!3931 = !DILocation(line: 409, column: 7, scope: !3871)
!3932 = !DILocation(line: 412, column: 14, scope: !3871)
!3933 = !DILocation(line: 412, column: 7, scope: !3871)
!3934 = !DILocation(line: 415, column: 14, scope: !3871)
!3935 = !DILocation(line: 415, column: 7, scope: !3871)
!3936 = !DILocation(line: 418, column: 14, scope: !3871)
!3937 = !DILocation(line: 418, column: 7, scope: !3871)
!3938 = !DILocation(line: 421, column: 7, scope: !3871)
!3939 = !DILocation(line: 424, column: 7, scope: !3871)
!3940 = !DILocation(line: 427, column: 14, scope: !3871)
!3941 = !DILocation(line: 427, column: 7, scope: !3871)
!3942 = !DILocation(line: 431, column: 14, scope: !3871)
!3943 = !DILocation(line: 431, column: 7, scope: !3871)
!3944 = !DILocation(line: 435, column: 14, scope: !3871)
!3945 = !DILocation(line: 435, column: 7, scope: !3871)
!3946 = !DILocation(line: 439, column: 14, scope: !3871)
!3947 = !DILocation(line: 439, column: 7, scope: !3871)
!3948 = !DILocation(line: 444, column: 14, scope: !3871)
!3949 = !DILocation(line: 444, column: 7, scope: !3871)
!3950 = !DILocation(line: 449, column: 14, scope: !3871)
!3951 = !DILocation(line: 449, column: 7, scope: !3871)
!3952 = !DILocation(line: 453, column: 7, scope: !3871)
!3953 = !DILocation(line: 456, column: 14, scope: !3871)
!3954 = !DILocation(line: 456, column: 7, scope: !3871)
!3955 = !DILocation(line: 460, column: 14, scope: !3871)
!3956 = !DILocation(line: 460, column: 7, scope: !3871)
!3957 = !DILocation(line: 467, column: 11, scope: !3860)
!3958 = !DILocation(line: 467, column: 34, scope: !3860)
!3959 = !DILocation(line: 467, column: 37, scope: !3860)
!3960 = !DILocation(line: 468, column: 3, scope: !3860)
!3961 = !DILocation(line: 472, column: 11, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 472, column: 11)
!3963 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 469, column: 5)
!3964 = !DILocation(line: 472, column: 11, scope: !3963)
!3965 = !DILocation(line: 473, column: 9, scope: !3962)
!3966 = !DILocation(line: 473, column: 2, scope: !3962)
!3967 = !DILocation(line: 474, column: 14, scope: !3963)
!3968 = !DILocation(line: 474, column: 7, scope: !3963)
!3969 = !DILocation(line: 477, column: 11, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 477, column: 11)
!3971 = !DILocation(line: 477, column: 11, scope: !3963)
!3972 = !DILocation(line: 478, column: 9, scope: !3970)
!3973 = !DILocation(line: 478, column: 2, scope: !3970)
!3974 = !DILocation(line: 479, column: 14, scope: !3963)
!3975 = !DILocation(line: 479, column: 7, scope: !3963)
!3976 = !DILocation(line: 482, column: 11, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 482, column: 11)
!3978 = !DILocation(line: 482, column: 11, scope: !3963)
!3979 = !DILocation(line: 483, column: 9, scope: !3977)
!3980 = !DILocation(line: 483, column: 2, scope: !3977)
!3981 = !DILocation(line: 484, column: 14, scope: !3963)
!3982 = !DILocation(line: 484, column: 7, scope: !3963)
!3983 = !DILocation(line: 487, column: 11, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 487, column: 11)
!3985 = !DILocation(line: 487, column: 11, scope: !3963)
!3986 = !DILocation(line: 488, column: 9, scope: !3984)
!3987 = !DILocation(line: 488, column: 2, scope: !3984)
!3988 = !DILocation(line: 489, column: 14, scope: !3963)
!3989 = !DILocation(line: 489, column: 7, scope: !3963)
!3990 = !DILocation(line: 492, column: 14, scope: !3963)
!3991 = !DILocation(line: 492, column: 7, scope: !3963)
!3992 = !DILocation(line: 498, column: 7, scope: !3963)
!3993 = !DILocation(line: 501, column: 7, scope: !3963)
!3994 = !DILocation(line: 504, column: 7, scope: !3963)
!3995 = !DILocation(line: 507, column: 7, scope: !3963)
!3996 = !DILocation(line: 509, column: 1, scope: !3860)
!3997 = distinct !DISubprogram(name: "expand_widen_pattern_expr", scope: !3, file: !3, line: 533, type: !3998, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4010)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!2090, !4000, !2090, !2090, !2090, !2090, !2072}
!4000 = !DIDerivedType(tag: DW_TAG_typedef, name: "sepops", file: !2048, line: 279, baseType: !4001)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "separate_ops", file: !2048, line: 273, size: 384, elements: !4003)
!4003 = !{!4004, !4005, !4006, !4007, !4008, !4009}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !4002, file: !2048, line: 275, baseType: !190, size: 32)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4002, file: !2048, line: 276, baseType: !2205, size: 64, offset: 64)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "op0", scope: !4002, file: !2048, line: 277, baseType: !2205, size: 64, offset: 128)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "op1", scope: !4002, file: !2048, line: 277, baseType: !2205, size: 64, offset: 192)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "op2", scope: !4002, file: !2048, line: 277, baseType: !2205, size: 64, offset: 256)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !4002, file: !2048, line: 278, baseType: !2325, size: 32, offset: 320)
!4010 = !{!4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033}
!4011 = !DILocalVariable(name: "ops", arg: 1, scope: !3997, file: !3, line: 533, type: !4000)
!4012 = !DILocalVariable(name: "op0", arg: 2, scope: !3997, file: !3, line: 533, type: !2090)
!4013 = !DILocalVariable(name: "op1", arg: 3, scope: !3997, file: !3, line: 533, type: !2090)
!4014 = !DILocalVariable(name: "wide_op", arg: 4, scope: !3997, file: !3, line: 533, type: !2090)
!4015 = !DILocalVariable(name: "target", arg: 5, scope: !3997, file: !3, line: 534, type: !2090)
!4016 = !DILocalVariable(name: "unsignedp", arg: 6, scope: !3997, file: !3, line: 534, type: !2072)
!4017 = !DILocalVariable(name: "oprnd0", scope: !3997, file: !3, line: 536, type: !2205)
!4018 = !DILocalVariable(name: "oprnd1", scope: !3997, file: !3, line: 536, type: !2205)
!4019 = !DILocalVariable(name: "oprnd2", scope: !3997, file: !3, line: 536, type: !2205)
!4020 = !DILocalVariable(name: "wmode", scope: !3997, file: !3, line: 537, type: !5)
!4021 = !DILocalVariable(name: "tmode0", scope: !3997, file: !3, line: 537, type: !5)
!4022 = !DILocalVariable(name: "tmode1", scope: !3997, file: !3, line: 537, type: !5)
!4023 = !DILocalVariable(name: "widen_pattern_optab", scope: !3997, file: !3, line: 538, type: !3291)
!4024 = !DILocalVariable(name: "icode", scope: !3997, file: !3, line: 539, type: !2072)
!4025 = !DILocalVariable(name: "xmode0", scope: !3997, file: !3, line: 540, type: !5)
!4026 = !DILocalVariable(name: "xmode1", scope: !3997, file: !3, line: 540, type: !5)
!4027 = !DILocalVariable(name: "wxmode", scope: !3997, file: !3, line: 540, type: !5)
!4028 = !DILocalVariable(name: "temp", scope: !3997, file: !3, line: 541, type: !2090)
!4029 = !DILocalVariable(name: "pat", scope: !3997, file: !3, line: 542, type: !2090)
!4030 = !DILocalVariable(name: "xop0", scope: !3997, file: !3, line: 543, type: !2090)
!4031 = !DILocalVariable(name: "xop1", scope: !3997, file: !3, line: 543, type: !2090)
!4032 = !DILocalVariable(name: "wxop", scope: !3997, file: !3, line: 543, type: !2090)
!4033 = !DILocalVariable(name: "nops", scope: !3997, file: !3, line: 544, type: !2072)
!4034 = !DILocation(line: 0, scope: !3997)
!4035 = !DILocation(line: 544, column: 14, scope: !3997)
!4036 = !DILocation(line: 546, column: 17, scope: !3997)
!4037 = !DILocation(line: 547, column: 12, scope: !3997)
!4038 = !DILocation(line: 549, column: 31, scope: !3997)
!4039 = !DILocation(line: 549, column: 37, scope: !3997)
!4040 = !DILocation(line: 549, column: 5, scope: !3997)
!4041 = !DILocation(line: 550, column: 17, scope: !3997)
!4042 = !DILocation(line: 550, column: 62, scope: !3997)
!4043 = !DILocation(line: 551, column: 3, scope: !3997)
!4044 = !DILocation(line: 552, column: 12, scope: !3997)
!4045 = !DILocation(line: 552, column: 29, scope: !3997)
!4046 = !DILocation(line: 552, column: 40, scope: !3997)
!4047 = !DILocation(line: 554, column: 12, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 554, column: 7)
!4049 = !DILocation(line: 554, column: 7, scope: !3997)
!4050 = !DILocation(line: 556, column: 21, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 555, column: 5)
!4052 = !DILocation(line: 557, column: 16, scope: !4051)
!4053 = !DILocation(line: 558, column: 44, scope: !4051)
!4054 = !DILocation(line: 559, column: 5, scope: !4051)
!4055 = !DILocation(line: 562, column: 7, scope: !3997)
!4056 = !DILocation(line: 569, column: 7, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 568, column: 5)
!4058 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 567, column: 12)
!4059 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 562, column: 7)
!4060 = !DILocation(line: 570, column: 7, scope: !4057)
!4061 = !DILocation(line: 571, column: 21, scope: !4057)
!4062 = !DILocation(line: 572, column: 15, scope: !4057)
!4063 = !DILocation(line: 573, column: 44, scope: !4057)
!4064 = !DILocation(line: 574, column: 5, scope: !4057)
!4065 = !DILocation(line: 0, scope: !4059)
!4066 = !DILocation(line: 576, column: 8, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 576, column: 7)
!4068 = !DILocation(line: 576, column: 7, scope: !3997)
!4069 = !DILocation(line: 577, column: 50, scope: !4067)
!4070 = !DILocation(line: 577, column: 5, scope: !4067)
!4071 = !DILocation(line: 579, column: 8, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 579, column: 7)
!4073 = !DILocation(line: 580, column: 7, scope: !4072)
!4074 = !DILocation(line: 580, column: 42, scope: !4072)
!4075 = !DILocation(line: 580, column: 12, scope: !4072)
!4076 = !DILocation(line: 579, column: 7, scope: !3997)
!4077 = !DILocation(line: 581, column: 12, scope: !4072)
!4078 = !DILocation(line: 581, column: 5, scope: !4072)
!4079 = !DILocation(line: 0, scope: !4072)
!4080 = !DILocation(line: 595, column: 7, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 595, column: 7)
!4082 = !DILocation(line: 595, column: 22, scope: !4081)
!4083 = !DILocation(line: 595, column: 42, scope: !4081)
!4084 = !DILocation(line: 595, column: 32, scope: !4081)
!4085 = !DILocation(line: 597, column: 27, scope: !4081)
!4086 = !DILocation(line: 597, column: 42, scope: !4081)
!4087 = !DILocation(line: 596, column: 12, scope: !4081)
!4088 = !DILocation(line: 596, column: 5, scope: !4081)
!4089 = !DILocation(line: 602, column: 7, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 602, column: 7)
!4091 = !DILocation(line: 602, column: 7, scope: !3997)
!4092 = !DILocation(line: 603, column: 9, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 603, column: 9)
!4094 = !DILocation(line: 603, column: 24, scope: !4093)
!4095 = !DILocation(line: 603, column: 44, scope: !4093)
!4096 = !DILocation(line: 603, column: 34, scope: !4093)
!4097 = !DILocation(line: 605, column: 29, scope: !4093)
!4098 = !DILocation(line: 605, column: 44, scope: !4093)
!4099 = !DILocation(line: 604, column: 14, scope: !4093)
!4100 = !DILocation(line: 604, column: 7, scope: !4093)
!4101 = !DILocation(line: 610, column: 7, scope: !3997)
!4102 = !DILocation(line: 611, column: 9, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !3, line: 611, column: 9)
!4104 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 610, column: 7)
!4105 = !DILocation(line: 611, column: 28, scope: !4103)
!4106 = !DILocation(line: 611, column: 48, scope: !4103)
!4107 = !DILocation(line: 611, column: 38, scope: !4103)
!4108 = !DILocation(line: 613, column: 29, scope: !4103)
!4109 = !DILocation(line: 613, column: 48, scope: !4103)
!4110 = !DILocation(line: 612, column: 14, scope: !4103)
!4111 = !DILocation(line: 612, column: 7, scope: !4103)
!4112 = !DILocation(line: 621, column: 39, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 621, column: 7)
!4114 = !DILocation(line: 621, column: 9, scope: !4113)
!4115 = !DILocation(line: 622, column: 7, scope: !4113)
!4116 = !DILocation(line: 623, column: 12, scope: !4113)
!4117 = !DILocation(line: 623, column: 5, scope: !4113)
!4118 = !DILocation(line: 625, column: 7, scope: !3997)
!4119 = !DILocation(line: 627, column: 43, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 627, column: 11)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 626, column: 5)
!4122 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 625, column: 7)
!4123 = !DILocation(line: 627, column: 13, scope: !4120)
!4124 = !DILocation(line: 628, column: 21, scope: !4120)
!4125 = !DILocation(line: 628, column: 11, scope: !4120)
!4126 = !DILocation(line: 629, column: 16, scope: !4120)
!4127 = !DILocation(line: 629, column: 9, scope: !4120)
!4128 = !DILocation(line: 631, column: 11, scope: !4121)
!4129 = !DILocation(line: 633, column: 47, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 633, column: 15)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 632, column: 9)
!4132 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 631, column: 11)
!4133 = !DILocation(line: 633, column: 17, scope: !4130)
!4134 = !DILocation(line: 634, column: 25, scope: !4130)
!4135 = !DILocation(line: 634, column: 15, scope: !4130)
!4136 = !DILocation(line: 635, column: 20, scope: !4130)
!4137 = !DILocation(line: 635, column: 13, scope: !4130)
!4138 = !DILocation(line: 637, column: 17, scope: !4131)
!4139 = !DILocation(line: 638, column: 9, scope: !4131)
!4140 = !DILocation(line: 640, column: 15, scope: !4132)
!4141 = !DILocation(line: 644, column: 11, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 643, column: 5)
!4143 = !DILocation(line: 646, column: 47, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !3, line: 646, column: 15)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !3, line: 645, column: 9)
!4146 = distinct !DILexicalBlock(scope: !4142, file: !3, line: 644, column: 11)
!4147 = !DILocation(line: 646, column: 17, scope: !4144)
!4148 = !DILocation(line: 647, column: 25, scope: !4144)
!4149 = !DILocation(line: 647, column: 15, scope: !4144)
!4150 = !DILocation(line: 648, column: 20, scope: !4144)
!4151 = !DILocation(line: 648, column: 13, scope: !4144)
!4152 = !DILocation(line: 650, column: 17, scope: !4145)
!4153 = !DILocation(line: 651, column: 9, scope: !4145)
!4154 = !DILocation(line: 653, column: 15, scope: !4146)
!4155 = !DILocation(line: 0, scope: !4122)
!4156 = !DILocation(line: 656, column: 3, scope: !3997)
!4157 = !DILocation(line: 657, column: 3, scope: !3997)
!4158 = distinct !DISubprogram(name: "expand_ternary_op", scope: !3, file: !3, line: 672, type: !4159, scopeLine: 674, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4161)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{!2090, !5, !3291, !2090, !2090, !2090, !2090, !2072}
!4161 = !{!4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177}
!4162 = !DILocalVariable(name: "mode", arg: 1, scope: !4158, file: !3, line: 672, type: !5)
!4163 = !DILocalVariable(name: "ternary_optab", arg: 2, scope: !4158, file: !3, line: 672, type: !3291)
!4164 = !DILocalVariable(name: "op0", arg: 3, scope: !4158, file: !3, line: 672, type: !2090)
!4165 = !DILocalVariable(name: "op1", arg: 4, scope: !4158, file: !3, line: 673, type: !2090)
!4166 = !DILocalVariable(name: "op2", arg: 5, scope: !4158, file: !3, line: 673, type: !2090)
!4167 = !DILocalVariable(name: "target", arg: 6, scope: !4158, file: !3, line: 673, type: !2090)
!4168 = !DILocalVariable(name: "unsignedp", arg: 7, scope: !4158, file: !3, line: 673, type: !2072)
!4169 = !DILocalVariable(name: "icode", scope: !4158, file: !3, line: 675, type: !2072)
!4170 = !DILocalVariable(name: "mode0", scope: !4158, file: !3, line: 676, type: !5)
!4171 = !DILocalVariable(name: "mode1", scope: !4158, file: !3, line: 677, type: !5)
!4172 = !DILocalVariable(name: "mode2", scope: !4158, file: !3, line: 678, type: !5)
!4173 = !DILocalVariable(name: "temp", scope: !4158, file: !3, line: 679, type: !2090)
!4174 = !DILocalVariable(name: "pat", scope: !4158, file: !3, line: 680, type: !2090)
!4175 = !DILocalVariable(name: "xop0", scope: !4158, file: !3, line: 681, type: !2090)
!4176 = !DILocalVariable(name: "xop1", scope: !4158, file: !3, line: 681, type: !2090)
!4177 = !DILocalVariable(name: "xop2", scope: !4158, file: !3, line: 681, type: !2090)
!4178 = !DILocation(line: 0, scope: !4158)
!4179 = !DILocation(line: 675, column: 21, scope: !4158)
!4180 = !DILocation(line: 675, column: 58, scope: !4158)
!4181 = !DILocation(line: 676, column: 29, scope: !4158)
!4182 = !DILocation(line: 676, column: 46, scope: !4158)
!4183 = !DILocation(line: 676, column: 57, scope: !4158)
!4184 = !DILocation(line: 677, column: 57, scope: !4158)
!4185 = !DILocation(line: 678, column: 57, scope: !4158)
!4186 = !DILocation(line: 683, column: 3, scope: !4158)
!4187 = !DILocation(line: 686, column: 8, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 686, column: 7)
!4189 = !DILocation(line: 686, column: 15, scope: !4188)
!4190 = !DILocation(line: 686, column: 47, scope: !4188)
!4191 = !DILocation(line: 686, column: 19, scope: !4188)
!4192 = !DILocation(line: 686, column: 7, scope: !4158)
!4193 = !DILocation(line: 687, column: 12, scope: !4188)
!4194 = !DILocation(line: 687, column: 5, scope: !4188)
!4195 = !DILocation(line: 0, scope: !4188)
!4196 = !DILocation(line: 697, column: 7, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 697, column: 7)
!4198 = !DILocation(line: 697, column: 22, scope: !4197)
!4199 = !DILocation(line: 697, column: 40, scope: !4197)
!4200 = !DILocation(line: 697, column: 31, scope: !4197)
!4201 = !DILocation(line: 699, column: 27, scope: !4197)
!4202 = !DILocation(line: 699, column: 42, scope: !4197)
!4203 = !DILocation(line: 698, column: 12, scope: !4197)
!4204 = !DILocation(line: 698, column: 5, scope: !4197)
!4205 = !DILocation(line: 704, column: 7, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 704, column: 7)
!4207 = !DILocation(line: 704, column: 22, scope: !4206)
!4208 = !DILocation(line: 704, column: 40, scope: !4206)
!4209 = !DILocation(line: 704, column: 31, scope: !4206)
!4210 = !DILocation(line: 706, column: 27, scope: !4206)
!4211 = !DILocation(line: 706, column: 42, scope: !4206)
!4212 = !DILocation(line: 705, column: 12, scope: !4206)
!4213 = !DILocation(line: 705, column: 5, scope: !4206)
!4214 = !DILocation(line: 711, column: 7, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 711, column: 7)
!4216 = !DILocation(line: 711, column: 22, scope: !4215)
!4217 = !DILocation(line: 711, column: 40, scope: !4215)
!4218 = !DILocation(line: 711, column: 31, scope: !4215)
!4219 = !DILocation(line: 713, column: 27, scope: !4215)
!4220 = !DILocation(line: 713, column: 42, scope: !4215)
!4221 = !DILocation(line: 712, column: 12, scope: !4215)
!4222 = !DILocation(line: 712, column: 5, scope: !4215)
!4223 = !DILocation(line: 721, column: 36, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 721, column: 7)
!4225 = !DILocation(line: 721, column: 8, scope: !4224)
!4226 = !DILocation(line: 722, column: 7, scope: !4224)
!4227 = !DILocation(line: 723, column: 12, scope: !4224)
!4228 = !DILocation(line: 723, column: 5, scope: !4224)
!4229 = !DILocation(line: 725, column: 36, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 725, column: 7)
!4231 = !DILocation(line: 725, column: 8, scope: !4230)
!4232 = !DILocation(line: 726, column: 7, scope: !4230)
!4233 = !DILocation(line: 727, column: 12, scope: !4230)
!4234 = !DILocation(line: 727, column: 5, scope: !4230)
!4235 = !DILocation(line: 729, column: 36, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 729, column: 7)
!4237 = !DILocation(line: 729, column: 8, scope: !4236)
!4238 = !DILocation(line: 730, column: 7, scope: !4236)
!4239 = !DILocation(line: 731, column: 12, scope: !4236)
!4240 = !DILocation(line: 731, column: 5, scope: !4236)
!4241 = !DILocation(line: 733, column: 9, scope: !4158)
!4242 = !DILocation(line: 735, column: 3, scope: !4158)
!4243 = !DILocation(line: 736, column: 3, scope: !4158)
!4244 = distinct !DISubprogram(name: "force_expand_binop", scope: !3, file: !3, line: 764, type: !4245, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4247)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{!2071, !5, !3291, !2090, !2090, !2090, !2072, !2047}
!4247 = !{!4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255}
!4248 = !DILocalVariable(name: "mode", arg: 1, scope: !4244, file: !3, line: 764, type: !5)
!4249 = !DILocalVariable(name: "binoptab", arg: 2, scope: !4244, file: !3, line: 764, type: !3291)
!4250 = !DILocalVariable(name: "op0", arg: 3, scope: !4244, file: !3, line: 765, type: !2090)
!4251 = !DILocalVariable(name: "op1", arg: 4, scope: !4244, file: !3, line: 765, type: !2090)
!4252 = !DILocalVariable(name: "target", arg: 5, scope: !4244, file: !3, line: 765, type: !2090)
!4253 = !DILocalVariable(name: "unsignedp", arg: 6, scope: !4244, file: !3, line: 765, type: !2072)
!4254 = !DILocalVariable(name: "methods", arg: 7, scope: !4244, file: !3, line: 766, type: !2047)
!4255 = !DILocalVariable(name: "x", scope: !4244, file: !3, line: 768, type: !2090)
!4256 = !DILocation(line: 0, scope: !4244)
!4257 = !DILocation(line: 768, column: 11, scope: !4244)
!4258 = !DILocation(line: 770, column: 9, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 770, column: 7)
!4260 = !DILocation(line: 770, column: 7, scope: !4244)
!4261 = !DILocation(line: 772, column: 9, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 772, column: 7)
!4263 = !DILocation(line: 772, column: 7, scope: !4244)
!4264 = !DILocation(line: 773, column: 5, scope: !4262)
!4265 = !DILocation(line: 775, column: 1, scope: !4244)
!4266 = distinct !DISubprogram(name: "simplify_expand_binop", scope: !3, file: !3, line: 745, type: !4267, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4269)
!4267 = !DISubroutineType(types: !4268)
!4268 = !{!2090, !5, !3291, !2090, !2090, !2090, !2072, !2047}
!4269 = !{!4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277}
!4270 = !DILocalVariable(name: "mode", arg: 1, scope: !4266, file: !3, line: 745, type: !5)
!4271 = !DILocalVariable(name: "binoptab", arg: 2, scope: !4266, file: !3, line: 745, type: !3291)
!4272 = !DILocalVariable(name: "op0", arg: 3, scope: !4266, file: !3, line: 746, type: !2090)
!4273 = !DILocalVariable(name: "op1", arg: 4, scope: !4266, file: !3, line: 746, type: !2090)
!4274 = !DILocalVariable(name: "target", arg: 5, scope: !4266, file: !3, line: 746, type: !2090)
!4275 = !DILocalVariable(name: "unsignedp", arg: 6, scope: !4266, file: !3, line: 746, type: !2072)
!4276 = !DILocalVariable(name: "methods", arg: 7, scope: !4266, file: !3, line: 747, type: !2047)
!4277 = !DILocalVariable(name: "x", scope: !4278, file: !3, line: 751, type: !2090)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !3, line: 750, column: 5)
!4279 = distinct !DILexicalBlock(scope: !4266, file: !3, line: 749, column: 7)
!4280 = !DILocation(line: 0, scope: !4266)
!4281 = !DILocation(line: 749, column: 7, scope: !4279)
!4282 = !DILocation(line: 749, column: 24, scope: !4279)
!4283 = !DILocation(line: 749, column: 27, scope: !4279)
!4284 = !DILocation(line: 749, column: 7, scope: !4266)
!4285 = !DILocation(line: 751, column: 52, scope: !4278)
!4286 = !DILocation(line: 751, column: 15, scope: !4278)
!4287 = !DILocation(line: 0, scope: !4278)
!4288 = !DILocation(line: 753, column: 11, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 753, column: 11)
!4290 = !DILocation(line: 757, column: 10, scope: !4266)
!4291 = !DILocation(line: 757, column: 3, scope: !4266)
!4292 = !DILocation(line: 758, column: 1, scope: !4266)
!4293 = distinct !DISubprogram(name: "expand_vec_shift_expr", scope: !3, file: !3, line: 780, type: !4294, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4296)
!4294 = !DISubroutineType(types: !4295)
!4295 = !{!2090, !4000, !2090}
!4296 = !{!4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308}
!4297 = !DILocalVariable(name: "ops", arg: 1, scope: !4293, file: !3, line: 780, type: !4000)
!4298 = !DILocalVariable(name: "target", arg: 2, scope: !4293, file: !3, line: 780, type: !2090)
!4299 = !DILocalVariable(name: "icode", scope: !4293, file: !3, line: 782, type: !527)
!4300 = !DILocalVariable(name: "rtx_op1", scope: !4293, file: !3, line: 783, type: !2090)
!4301 = !DILocalVariable(name: "rtx_op2", scope: !4293, file: !3, line: 783, type: !2090)
!4302 = !DILocalVariable(name: "mode1", scope: !4293, file: !3, line: 784, type: !5)
!4303 = !DILocalVariable(name: "mode2", scope: !4293, file: !3, line: 785, type: !5)
!4304 = !DILocalVariable(name: "mode", scope: !4293, file: !3, line: 786, type: !5)
!4305 = !DILocalVariable(name: "vec_oprnd", scope: !4293, file: !3, line: 787, type: !2205)
!4306 = !DILocalVariable(name: "shift_oprnd", scope: !4293, file: !3, line: 788, type: !2205)
!4307 = !DILocalVariable(name: "shift_optab", scope: !4293, file: !3, line: 789, type: !3291)
!4308 = !DILocalVariable(name: "pat", scope: !4293, file: !3, line: 790, type: !2090)
!4309 = !DILocation(line: 0, scope: !4293)
!4310 = !DILocation(line: 786, column: 28, scope: !4293)
!4311 = !DILocation(line: 787, column: 25, scope: !4293)
!4312 = !DILocation(line: 788, column: 27, scope: !4293)
!4313 = !DILocation(line: 792, column: 16, scope: !4293)
!4314 = !DILocation(line: 792, column: 3, scope: !4293)
!4315 = !DILocation(line: 799, column: 2, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 793, column: 5)
!4317 = !DILocation(line: 801, column: 2, scope: !4316)
!4318 = !DILocation(line: 802, column: 5, scope: !4316)
!4319 = !DILocation(line: 804, column: 11, scope: !4293)
!4320 = !DILocation(line: 804, column: 46, scope: !4293)
!4321 = !DILocation(line: 805, column: 3, scope: !4293)
!4322 = !DILocation(line: 807, column: 11, scope: !4293)
!4323 = !DILocation(line: 807, column: 28, scope: !4293)
!4324 = !DILocation(line: 807, column: 39, scope: !4293)
!4325 = !DILocation(line: 808, column: 39, scope: !4293)
!4326 = !DILocation(line: 810, column: 13, scope: !4293)
!4327 = !DILocation(line: 811, column: 38, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 811, column: 7)
!4329 = !DILocation(line: 811, column: 8, scope: !4328)
!4330 = !DILocation(line: 812, column: 16, scope: !4328)
!4331 = !DILocation(line: 812, column: 7, scope: !4328)
!4332 = !DILocation(line: 813, column: 15, scope: !4328)
!4333 = !DILocation(line: 813, column: 5, scope: !4328)
!4334 = !DILocation(line: 815, column: 13, scope: !4293)
!4335 = !DILocation(line: 816, column: 38, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 816, column: 7)
!4337 = !DILocation(line: 816, column: 8, scope: !4336)
!4338 = !DILocation(line: 817, column: 16, scope: !4336)
!4339 = !DILocation(line: 817, column: 7, scope: !4336)
!4340 = !DILocation(line: 818, column: 15, scope: !4336)
!4341 = !DILocation(line: 818, column: 5, scope: !4336)
!4342 = !DILocation(line: 820, column: 8, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 820, column: 7)
!4344 = !DILocation(line: 821, column: 7, scope: !4343)
!4345 = !DILocation(line: 821, column: 42, scope: !4343)
!4346 = !DILocation(line: 821, column: 12, scope: !4343)
!4347 = !DILocation(line: 820, column: 7, scope: !4293)
!4348 = !DILocation(line: 822, column: 14, scope: !4343)
!4349 = !DILocation(line: 822, column: 5, scope: !4343)
!4350 = !DILocation(line: 825, column: 9, scope: !4293)
!4351 = !DILocation(line: 826, column: 3, scope: !4293)
!4352 = !DILocation(line: 827, column: 3, scope: !4293)
!4353 = !DILocation(line: 829, column: 3, scope: !4293)
!4354 = distinct !DISubprogram(name: "expand_normal", scope: !2048, file: !2048, line: 562, type: !4355, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4357)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!2090, !2205}
!4357 = !{!4358}
!4358 = !DILocalVariable(name: "exp", arg: 1, scope: !4354, file: !2048, line: 562, type: !2205)
!4359 = !DILocation(line: 0, scope: !4354)
!4360 = !DILocation(line: 564, column: 10, scope: !4354)
!4361 = !DILocation(line: 564, column: 3, scope: !4354)
!4362 = distinct !DISubprogram(name: "expand_simple_binop", scope: !3, file: !3, line: 1317, type: !4363, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4365)
!4363 = !DISubroutineType(types: !4364)
!4364 = !{!2090, !5, !384, !2090, !2090, !2090, !2072, !2047}
!4365 = !{!4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373}
!4366 = !DILocalVariable(name: "mode", arg: 1, scope: !4362, file: !3, line: 1317, type: !5)
!4367 = !DILocalVariable(name: "code", arg: 2, scope: !4362, file: !3, line: 1317, type: !384)
!4368 = !DILocalVariable(name: "op0", arg: 3, scope: !4362, file: !3, line: 1317, type: !2090)
!4369 = !DILocalVariable(name: "op1", arg: 4, scope: !4362, file: !3, line: 1318, type: !2090)
!4370 = !DILocalVariable(name: "target", arg: 5, scope: !4362, file: !3, line: 1318, type: !2090)
!4371 = !DILocalVariable(name: "unsignedp", arg: 6, scope: !4362, file: !3, line: 1318, type: !2072)
!4372 = !DILocalVariable(name: "methods", arg: 7, scope: !4362, file: !3, line: 1319, type: !2047)
!4373 = !DILocalVariable(name: "binop", scope: !4362, file: !3, line: 1321, type: !3291)
!4374 = !DILocation(line: 0, scope: !4362)
!4375 = !DILocation(line: 1321, column: 17, scope: !4362)
!4376 = !DILocation(line: 1322, column: 3, scope: !4362)
!4377 = !DILocation(line: 1324, column: 10, scope: !4362)
!4378 = !DILocation(line: 1324, column: 3, scope: !4362)
!4379 = distinct !DISubprogram(name: "expand_binop", scope: !3, file: !3, line: 1548, type: !4267, scopeLine: 1550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4380)
!4380 = !{!4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4398, !4399, !4400, !4407, !4408, !4409, !4412, !4413, !4417, !4418, !4421, !4422, !4423, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4456, !4457, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4469, !4470, !4471, !4472, !4473, !4476, !4479, !4484, !4487, !4490, !4491, !4492, !4493, !4501, !4502}
!4381 = !DILocalVariable(name: "mode", arg: 1, scope: !4379, file: !3, line: 1548, type: !5)
!4382 = !DILocalVariable(name: "binoptab", arg: 2, scope: !4379, file: !3, line: 1548, type: !3291)
!4383 = !DILocalVariable(name: "op0", arg: 3, scope: !4379, file: !3, line: 1548, type: !2090)
!4384 = !DILocalVariable(name: "op1", arg: 4, scope: !4379, file: !3, line: 1548, type: !2090)
!4385 = !DILocalVariable(name: "target", arg: 5, scope: !4379, file: !3, line: 1549, type: !2090)
!4386 = !DILocalVariable(name: "unsignedp", arg: 6, scope: !4379, file: !3, line: 1549, type: !2072)
!4387 = !DILocalVariable(name: "methods", arg: 7, scope: !4379, file: !3, line: 1549, type: !2047)
!4388 = !DILocalVariable(name: "next_methods", scope: !4379, file: !3, line: 1551, type: !2047)
!4389 = !DILocalVariable(name: "mclass", scope: !4379, file: !3, line: 1554, type: !2025)
!4390 = !DILocalVariable(name: "wider_mode", scope: !4379, file: !3, line: 1555, type: !5)
!4391 = !DILocalVariable(name: "libfunc", scope: !4379, file: !3, line: 1556, type: !2090)
!4392 = !DILocalVariable(name: "temp", scope: !4379, file: !3, line: 1557, type: !2090)
!4393 = !DILocalVariable(name: "entry_last", scope: !4379, file: !3, line: 1558, type: !2090)
!4394 = !DILocalVariable(name: "last", scope: !4379, file: !3, line: 1559, type: !2090)
!4395 = !DILocalVariable(name: "otheroptab", scope: !4396, file: !3, line: 1594, type: !3291)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 1593, column: 5)
!4397 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1588, column: 7)
!4398 = !DILocalVariable(name: "newop1", scope: !4396, file: !3, line: 1595, type: !2090)
!4399 = !DILocalVariable(name: "bits", scope: !4396, file: !3, line: 1596, type: !7)
!4400 = !DILocalVariable(name: "xop0", scope: !4401, file: !3, line: 1655, type: !2090)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 1654, column: 4)
!4402 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 1647, column: 6)
!4403 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 1646, column: 7)
!4404 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 1643, column: 5)
!4405 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 1643, column: 5)
!4406 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1641, column: 7)
!4407 = !DILocalVariable(name: "xop1", scope: !4401, file: !3, line: 1655, type: !2090)
!4408 = !DILocalVariable(name: "no_extend", scope: !4401, file: !3, line: 1656, type: !2072)
!4409 = !DILocalVariable(name: "i", scope: !4410, file: !3, line: 1721, type: !2072)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 1720, column: 5)
!4411 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1716, column: 7)
!4412 = !DILocalVariable(name: "insns", scope: !4410, file: !3, line: 1722, type: !2090)
!4413 = !DILocalVariable(name: "target_piece", scope: !4414, file: !3, line: 1734, type: !2090)
!4414 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 1733, column: 2)
!4415 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 1732, column: 7)
!4416 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 1732, column: 7)
!4417 = !DILocalVariable(name: "x", scope: !4414, file: !3, line: 1735, type: !2090)
!4418 = !DILocalVariable(name: "shift_mask", scope: !4419, file: !3, line: 1767, type: !2081)
!4419 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 1766, column: 5)
!4420 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1758, column: 7)
!4421 = !DILocalVariable(name: "double_shift_mask", scope: !4419, file: !3, line: 1767, type: !2081)
!4422 = !DILocalVariable(name: "op1_mode", scope: !4419, file: !3, line: 1768, type: !5)
!4423 = !DILocalVariable(name: "insns", scope: !4424, file: !3, line: 1787, type: !2090)
!4424 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 1786, column: 2)
!4425 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 1783, column: 11)
!4426 = !DILocalVariable(name: "into_target", scope: !4424, file: !3, line: 1788, type: !2090)
!4427 = !DILocalVariable(name: "outof_target", scope: !4424, file: !3, line: 1788, type: !2090)
!4428 = !DILocalVariable(name: "into_input", scope: !4424, file: !3, line: 1789, type: !2090)
!4429 = !DILocalVariable(name: "outof_input", scope: !4424, file: !3, line: 1789, type: !2090)
!4430 = !DILocalVariable(name: "left_shift", scope: !4424, file: !3, line: 1790, type: !2072)
!4431 = !DILocalVariable(name: "outof_word", scope: !4424, file: !3, line: 1790, type: !2072)
!4432 = !DILocalVariable(name: "insns", scope: !4433, file: !3, line: 1836, type: !2090)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 1835, column: 5)
!4434 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1829, column: 7)
!4435 = !DILocalVariable(name: "into_target", scope: !4433, file: !3, line: 1837, type: !2090)
!4436 = !DILocalVariable(name: "outof_target", scope: !4433, file: !3, line: 1837, type: !2090)
!4437 = !DILocalVariable(name: "into_input", scope: !4433, file: !3, line: 1838, type: !2090)
!4438 = !DILocalVariable(name: "outof_input", scope: !4433, file: !3, line: 1838, type: !2090)
!4439 = !DILocalVariable(name: "inter", scope: !4433, file: !3, line: 1839, type: !2090)
!4440 = !DILocalVariable(name: "shift_count", scope: !4433, file: !3, line: 1840, type: !2072)
!4441 = !DILocalVariable(name: "left_shift", scope: !4433, file: !3, line: 1840, type: !2072)
!4442 = !DILocalVariable(name: "outof_word", scope: !4433, file: !3, line: 1840, type: !2072)
!4443 = !DILocalVariable(name: "into_temp1", scope: !4444, file: !3, line: 1878, type: !2090)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 1877, column: 2)
!4445 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 1869, column: 11)
!4446 = !DILocalVariable(name: "into_temp2", scope: !4444, file: !3, line: 1878, type: !2090)
!4447 = !DILocalVariable(name: "outof_temp1", scope: !4444, file: !3, line: 1878, type: !2090)
!4448 = !DILocalVariable(name: "outof_temp2", scope: !4444, file: !3, line: 1878, type: !2090)
!4449 = !DILocalVariable(name: "first_shift_count", scope: !4444, file: !3, line: 1879, type: !2090)
!4450 = !DILocalVariable(name: "second_shift_count", scope: !4444, file: !3, line: 1879, type: !2090)
!4451 = !DILocalVariable(name: "reverse_unsigned_shift", scope: !4444, file: !3, line: 1880, type: !3291)
!4452 = !DILocalVariable(name: "unsigned_shift", scope: !4444, file: !3, line: 1880, type: !3291)
!4453 = !DILocalVariable(name: "i", scope: !4454, file: !3, line: 1947, type: !7)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 1946, column: 5)
!4455 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1942, column: 7)
!4456 = !DILocalVariable(name: "otheroptab", scope: !4454, file: !3, line: 1948, type: !3291)
!4457 = !DILocalVariable(name: "nwords", scope: !4454, file: !3, line: 1949, type: !4458)
!4458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4459 = !DILocalVariable(name: "carry_in", scope: !4454, file: !3, line: 1950, type: !2090)
!4460 = !DILocalVariable(name: "carry_out", scope: !4454, file: !3, line: 1950, type: !2090)
!4461 = !DILocalVariable(name: "xop0", scope: !4454, file: !3, line: 1951, type: !2090)
!4462 = !DILocalVariable(name: "xop1", scope: !4454, file: !3, line: 1951, type: !2090)
!4463 = !DILocalVariable(name: "xtarget", scope: !4454, file: !3, line: 1951, type: !2090)
!4464 = !DILocalVariable(name: "normalizep", scope: !4454, file: !3, line: 1957, type: !2072)
!4465 = !DILocalVariable(name: "index", scope: !4466, file: !3, line: 1978, type: !2072)
!4466 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 1977, column: 2)
!4467 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 1976, column: 7)
!4468 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 1976, column: 7)
!4469 = !DILocalVariable(name: "target_piece", scope: !4466, file: !3, line: 1979, type: !2090)
!4470 = !DILocalVariable(name: "op0_piece", scope: !4466, file: !3, line: 1980, type: !2090)
!4471 = !DILocalVariable(name: "op1_piece", scope: !4466, file: !3, line: 1981, type: !2090)
!4472 = !DILocalVariable(name: "x", scope: !4466, file: !3, line: 1982, type: !2090)
!4473 = !DILocalVariable(name: "newx", scope: !4474, file: !3, line: 2004, type: !2090)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !3, line: 2003, column: 6)
!4475 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 2002, column: 8)
!4476 = !DILocalVariable(name: "carry_tmp", scope: !4477, file: !3, line: 2015, type: !2090)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 2013, column: 3)
!4478 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 2012, column: 12)
!4479 = !DILocalVariable(name: "temp", scope: !4480, file: !3, line: 2045, type: !2090)
!4480 = distinct !DILexicalBlock(scope: !4481, file: !3, line: 2044, column: 6)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 2042, column: 8)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 2041, column: 2)
!4483 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 2040, column: 11)
!4484 = !DILocalVariable(name: "product", scope: !4485, file: !3, line: 2074, type: !2090)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !3, line: 2073, column: 5)
!4486 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 2068, column: 7)
!4487 = !DILocalVariable(name: "insns", scope: !4488, file: !3, line: 2117, type: !2090)
!4488 = distinct !DILexicalBlock(scope: !4489, file: !3, line: 2116, column: 5)
!4489 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 2114, column: 7)
!4490 = !DILocalVariable(name: "op1x", scope: !4488, file: !3, line: 2118, type: !2090)
!4491 = !DILocalVariable(name: "op1_mode", scope: !4488, file: !3, line: 2119, type: !5)
!4492 = !DILocalVariable(name: "value", scope: !4488, file: !3, line: 2120, type: !2090)
!4493 = !DILocalVariable(name: "xop0", scope: !4494, file: !3, line: 2183, type: !2090)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 2182, column: 6)
!4495 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 2178, column: 8)
!4496 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 2177, column: 2)
!4497 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 2174, column: 7)
!4498 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 2174, column: 7)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2173, column: 5)
!4500 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 2172, column: 7)
!4501 = !DILocalVariable(name: "xop1", scope: !4494, file: !3, line: 2183, type: !2090)
!4502 = !DILocalVariable(name: "no_extend", scope: !4494, file: !3, line: 2184, type: !2072)
!4503 = !DILocation(line: 0, scope: !4379)
!4504 = !DILocation(line: 1552, column: 29, scope: !4379)
!4505 = !DILocation(line: 1552, column: 8, scope: !4379)
!4506 = !DILocation(line: 1558, column: 20, scope: !4379)
!4507 = !DILocation(line: 1561, column: 12, scope: !4379)
!4508 = !DILocation(line: 1566, column: 16, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1566, column: 7)
!4510 = !DILocation(line: 1566, column: 29, scope: !4509)
!4511 = !DILocation(line: 1566, column: 32, scope: !4509)
!4512 = !DILocation(line: 1566, column: 7, scope: !4379)
!4513 = !DILocation(line: 1568, column: 13, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 1567, column: 5)
!4515 = !DILocation(line: 1570, column: 5, scope: !4514)
!4516 = !DILocation(line: 1573, column: 10, scope: !4379)
!4517 = !DILocation(line: 1577, column: 15, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1577, column: 7)
!4519 = !DILocation(line: 1578, column: 7, scope: !4518)
!4520 = !DILocation(line: 1578, column: 10, scope: !4518)
!4521 = !DILocation(line: 1578, column: 42, scope: !4518)
!4522 = !DILocation(line: 1578, column: 52, scope: !4518)
!4523 = !DILocation(line: 1577, column: 7, scope: !4379)
!4524 = !DILocation(line: 1580, column: 14, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 1579, column: 5)
!4526 = !DILocation(line: 1582, column: 11, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 1582, column: 11)
!4528 = !DILocation(line: 1582, column: 11, scope: !4525)
!4529 = !DILocation(line: 1588, column: 18, scope: !4397)
!4530 = !DILocation(line: 1589, column: 2, scope: !4397)
!4531 = !DILocation(line: 1589, column: 5, scope: !4397)
!4532 = !DILocation(line: 1589, column: 39, scope: !4397)
!4533 = !DILocation(line: 1589, column: 49, scope: !4397)
!4534 = !DILocation(line: 1590, column: 8, scope: !4397)
!4535 = !DILocation(line: 1590, column: 21, scope: !4397)
!4536 = !DILocation(line: 1591, column: 5, scope: !4397)
!4537 = !DILocation(line: 1591, column: 8, scope: !4397)
!4538 = !DILocation(line: 1591, column: 42, scope: !4397)
!4539 = !DILocation(line: 1591, column: 52, scope: !4397)
!4540 = !DILocation(line: 1592, column: 17, scope: !4397)
!4541 = !DILocation(line: 1592, column: 7, scope: !4397)
!4542 = !DILocation(line: 1588, column: 7, scope: !4379)
!4543 = !DILocation(line: 1594, column: 27, scope: !4396)
!4544 = !DILocation(line: 0, scope: !4396)
!4545 = !DILocation(line: 1596, column: 27, scope: !4396)
!4546 = !DILocation(line: 1598, column: 11, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 1598, column: 11)
!4548 = !DILocation(line: 1598, column: 11, scope: !4396)
!4549 = !DILocation(line: 1599, column: 18, scope: !4547)
!4550 = !DILocation(line: 1599, column: 9, scope: !4547)
!4551 = !DILocation(line: 1600, column: 24, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4547, file: !3, line: 1600, column: 16)
!4553 = !DILocation(line: 1600, column: 16, scope: !4552)
!4554 = !DILocation(line: 1600, column: 61, scope: !4552)
!4555 = !DILocation(line: 1600, column: 56, scope: !4552)
!4556 = !DILocation(line: 1600, column: 53, scope: !4552)
!4557 = !DILocation(line: 0, scope: !4552)
!4558 = !DILocation(line: 1600, column: 16, scope: !4547)
!4559 = !DILocation(line: 1601, column: 18, scope: !4552)
!4560 = !DILocation(line: 1601, column: 9, scope: !4552)
!4561 = !DILocation(line: 1604, column: 11, scope: !4552)
!4562 = !DILocation(line: 1603, column: 18, scope: !4552)
!4563 = !DILocation(line: 0, scope: !4547)
!4564 = !DILocation(line: 1607, column: 14, scope: !4396)
!4565 = !DILocation(line: 1609, column: 11, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 1609, column: 11)
!4567 = !DILocation(line: 1616, column: 16, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1616, column: 7)
!4569 = !DILocation(line: 1617, column: 7, scope: !4568)
!4570 = !DILocation(line: 1617, column: 10, scope: !4568)
!4571 = !DILocation(line: 1617, column: 37, scope: !4568)
!4572 = !DILocation(line: 1618, column: 7, scope: !4568)
!4573 = !DILocation(line: 1618, column: 12, scope: !4568)
!4574 = !DILocation(line: 1619, column: 35, scope: !4568)
!4575 = !DILocation(line: 1620, column: 4, scope: !4568)
!4576 = !DILocation(line: 1616, column: 7, scope: !4379)
!4577 = !DILocation(line: 1622, column: 28, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 1621, column: 5)
!4579 = !DILocation(line: 1622, column: 14, scope: !4578)
!4580 = !DILocation(line: 1626, column: 16, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 1626, column: 11)
!4582 = !DILocation(line: 1626, column: 11, scope: !4578)
!4583 = !DILocation(line: 1628, column: 30, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 1628, column: 8)
!4585 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 1627, column: 2)
!4586 = !DILocation(line: 1628, column: 8, scope: !4585)
!4587 = !DILocation(line: 1631, column: 13, scope: !4584)
!4588 = !DILocation(line: 1631, column: 6, scope: !4584)
!4589 = !DILocation(line: 1633, column: 13, scope: !4584)
!4590 = !DILocation(line: 1633, column: 6, scope: !4584)
!4591 = !DILocation(line: 1641, column: 7, scope: !4406)
!4592 = !DILocation(line: 1642, column: 34, scope: !4406)
!4593 = !DILocation(line: 0, scope: !4402)
!4594 = !DILocation(line: 0, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 1662, column: 10)
!4596 = !DILocation(line: 0, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 1667, column: 8)
!4598 = !DILocation(line: 0, scope: !4401)
!4599 = !DILocation(line: 1643, column: 10, scope: !4405)
!4600 = !DILocation(line: 0, scope: !4405)
!4601 = !DILocation(line: 1644, column: 14, scope: !4404)
!4602 = !DILocation(line: 1643, column: 5, scope: !4405)
!4603 = !DILocation(line: 1647, column: 6, scope: !4402)
!4604 = !DILocation(line: 1647, column: 44, scope: !4402)
!4605 = !DILocation(line: 1647, column: 54, scope: !4402)
!4606 = !DILocation(line: 1648, column: 6, scope: !4402)
!4607 = !DILocation(line: 1649, column: 6, scope: !4402)
!4608 = !DILocation(line: 1649, column: 39, scope: !4402)
!4609 = !DILocation(line: 1650, column: 3, scope: !4402)
!4610 = !DILocation(line: 1650, column: 8, scope: !4402)
!4611 = !DILocation(line: 1652, column: 45, scope: !4402)
!4612 = !DILocation(line: 1653, column: 7, scope: !4402)
!4613 = !DILocation(line: 1647, column: 6, scope: !4403)
!4614 = !DILocation(line: 1662, column: 33, scope: !4595)
!4615 = !DILocation(line: 1669, column: 10, scope: !4597)
!4616 = !DILocation(line: 1671, column: 7, scope: !4597)
!4617 = !DILocation(line: 1672, column: 12, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 1671, column: 7)
!4619 = !DILocation(line: 1672, column: 5, scope: !4618)
!4620 = !DILocation(line: 1676, column: 13, scope: !4401)
!4621 = !DILocation(line: 1680, column: 7, scope: !4401)
!4622 = !DILocation(line: 1680, column: 17, scope: !4401)
!4623 = !DILocation(line: 1679, column: 13, scope: !4401)
!4624 = !DILocation(line: 1682, column: 13, scope: !4401)
!4625 = !DILocation(line: 1684, column: 10, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 1684, column: 10)
!4627 = !DILocation(line: 1684, column: 10, scope: !4401)
!4628 = !DILocation(line: 1686, column: 7, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4626, file: !3, line: 1685, column: 8)
!4630 = !DILocation(line: 1690, column: 18, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 1690, column: 11)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 1689, column: 5)
!4633 = distinct !DILexicalBlock(scope: !4629, file: !3, line: 1686, column: 7)
!4634 = !DILocation(line: 1690, column: 11, scope: !4632)
!4635 = !DILocation(line: 1691, column: 18, scope: !4631)
!4636 = !DILocation(line: 1691, column: 9, scope: !4631)
!4637 = !DILocation(line: 1692, column: 7, scope: !4632)
!4638 = !DILocation(line: 1693, column: 7, scope: !4632)
!4639 = !DILocation(line: 1696, column: 12, scope: !4633)
!4640 = !DILocation(line: 1696, column: 5, scope: !4633)
!4641 = !DILocation(line: 1699, column: 8, scope: !4626)
!4642 = !DILocation(line: 1700, column: 4, scope: !4402)
!4643 = !DILocation(line: 1643, column: 5, scope: !4404)
!4644 = distinct !{!4644, !4602, !4645}
!4645 = !DILocation(line: 1701, column: 7, scope: !4405)
!4646 = !DILocation(line: 1707, column: 7, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1707, column: 7)
!4648 = !DILocation(line: 2228, column: 1, scope: !4379)
!4649 = !DILocation(line: 1649, column: 3, scope: !4402)
!4650 = !DILocation(line: 1610, column: 2, scope: !4566)
!4651 = !DILocation(line: 1708, column: 7, scope: !4647)
!4652 = !DILocation(line: 1708, column: 10, scope: !4647)
!4653 = !DILocation(line: 1707, column: 7, scope: !4379)
!4654 = !DILocation(line: 1716, column: 17, scope: !4411)
!4655 = !DILocation(line: 1716, column: 42, scope: !4411)
!4656 = !DILocation(line: 1716, column: 30, scope: !4411)
!4657 = !DILocation(line: 1716, column: 67, scope: !4411)
!4658 = !DILocation(line: 1717, column: 17, scope: !4411)
!4659 = !DILocation(line: 1718, column: 10, scope: !4411)
!4660 = !DILocation(line: 1718, column: 31, scope: !4411)
!4661 = !DILocation(line: 1719, column: 7, scope: !4411)
!4662 = !DILocation(line: 1719, column: 10, scope: !4411)
!4663 = !DILocation(line: 1719, column: 47, scope: !4411)
!4664 = !DILocation(line: 1719, column: 57, scope: !4411)
!4665 = !DILocation(line: 1716, column: 7, scope: !4379)
!4666 = !DILocation(line: 1726, column: 18, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 1726, column: 11)
!4668 = !DILocation(line: 1726, column: 33, scope: !4667)
!4669 = !DILocation(line: 1726, column: 23, scope: !4667)
!4670 = !DILocation(line: 1726, column: 50, scope: !4667)
!4671 = !DILocation(line: 1727, column: 11, scope: !4667)
!4672 = !DILocation(line: 1727, column: 2, scope: !4667)
!4673 = !DILocation(line: 1729, column: 7, scope: !4410)
!4674 = !DILocation(line: 0, scope: !4410)
!4675 = !DILocation(line: 1732, column: 12, scope: !4416)
!4676 = !DILocation(line: 0, scope: !4416)
!4677 = !DILocation(line: 1732, column: 23, scope: !4415)
!4678 = !DILocation(line: 1732, column: 47, scope: !4415)
!4679 = !DILocation(line: 1732, column: 21, scope: !4415)
!4680 = !DILocation(line: 1732, column: 7, scope: !4416)
!4681 = !DILocation(line: 1734, column: 23, scope: !4414)
!4682 = !DILocation(line: 0, scope: !4414)
!4683 = !DILocation(line: 1735, column: 26, scope: !4414)
!4684 = !DILocation(line: 1736, column: 5, scope: !4414)
!4685 = !DILocation(line: 1737, column: 5, scope: !4414)
!4686 = !DILocation(line: 1735, column: 12, scope: !4414)
!4687 = !DILocation(line: 1740, column: 10, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1740, column: 8)
!4689 = !DILocation(line: 1740, column: 8, scope: !4414)
!4690 = !DILocation(line: 1743, column: 21, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1743, column: 8)
!4692 = !DILocation(line: 1743, column: 8, scope: !4414)
!4693 = !DILocation(line: 1744, column: 6, scope: !4691)
!4694 = !DILocation(line: 1732, column: 65, scope: !4415)
!4695 = !DILocation(line: 1732, column: 7, scope: !4415)
!4696 = distinct !{!4696, !4680, !4697}
!4697 = !DILocation(line: 1745, column: 2, scope: !4416)
!4698 = !DILocation(line: 1747, column: 15, scope: !4410)
!4699 = !DILocation(line: 1748, column: 7, scope: !4410)
!4700 = !DILocation(line: 1750, column: 16, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 1750, column: 11)
!4702 = !DILocation(line: 1750, column: 40, scope: !4701)
!4703 = !DILocation(line: 1750, column: 13, scope: !4701)
!4704 = !DILocation(line: 1750, column: 11, scope: !4410)
!4705 = !DILocation(line: 1752, column: 4, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4701, file: !3, line: 1751, column: 2)
!4707 = !DILocation(line: 1753, column: 4, scope: !4706)
!4708 = !DILocation(line: 1758, column: 17, scope: !4420)
!4709 = !DILocation(line: 1758, column: 43, scope: !4420)
!4710 = !DILocation(line: 1758, column: 31, scope: !4420)
!4711 = !DILocation(line: 1759, column: 20, scope: !4420)
!4712 = !DILocation(line: 1761, column: 11, scope: !4420)
!4713 = !DILocation(line: 1761, column: 29, scope: !4420)
!4714 = !DILocation(line: 1761, column: 32, scope: !4420)
!4715 = !DILocation(line: 1762, column: 7, scope: !4420)
!4716 = !DILocation(line: 1762, column: 10, scope: !4420)
!4717 = !DILocation(line: 1762, column: 31, scope: !4420)
!4718 = !DILocation(line: 1763, column: 7, scope: !4420)
!4719 = !DILocation(line: 1763, column: 10, scope: !4420)
!4720 = !DILocation(line: 1763, column: 47, scope: !4420)
!4721 = !DILocation(line: 1763, column: 57, scope: !4420)
!4722 = !DILocation(line: 1764, column: 7, scope: !4420)
!4723 = !DILocation(line: 1764, column: 49, scope: !4420)
!4724 = !DILocation(line: 1764, column: 59, scope: !4420)
!4725 = !DILocation(line: 1765, column: 7, scope: !4420)
!4726 = !DILocation(line: 1765, column: 49, scope: !4420)
!4727 = !DILocation(line: 1765, column: 59, scope: !4420)
!4728 = !DILocation(line: 1758, column: 7, scope: !4379)
!4729 = !DILocation(line: 1770, column: 35, scope: !4419)
!4730 = !DILocation(line: 1770, column: 27, scope: !4419)
!4731 = !DILocation(line: 0, scope: !4419)
!4732 = !DILocation(line: 1771, column: 28, scope: !4419)
!4733 = !DILocation(line: 1771, column: 51, scope: !4419)
!4734 = !DILocation(line: 1771, column: 20, scope: !4419)
!4735 = !DILocation(line: 1772, column: 18, scope: !4419)
!4736 = !DILocation(line: 1772, column: 33, scope: !4419)
!4737 = !DILocation(line: 1772, column: 47, scope: !4419)
!4738 = !DILocation(line: 1772, column: 64, scope: !4419)
!4739 = !DILocation(line: 1775, column: 29, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 1775, column: 11)
!4741 = !DILocation(line: 1775, column: 33, scope: !4740)
!4742 = !DILocation(line: 1775, column: 36, scope: !4740)
!4743 = !DILocation(line: 1775, column: 11, scope: !4419)
!4744 = !DILocation(line: 1776, column: 8, scope: !4740)
!4745 = !DILocation(line: 1776, column: 2, scope: !4740)
!4746 = !DILocation(line: 1778, column: 18, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 1778, column: 11)
!4748 = !DILocation(line: 1778, column: 15, scope: !4747)
!4749 = !DILocation(line: 1778, column: 11, scope: !4419)
!4750 = !DILocation(line: 1784, column: 4, scope: !4425)
!4751 = !DILocation(line: 1784, column: 19, scope: !4425)
!4752 = !DILocation(line: 1785, column: 29, scope: !4425)
!4753 = !DILocation(line: 1785, column: 8, scope: !4425)
!4754 = !DILocation(line: 1794, column: 15, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1794, column: 8)
!4756 = !DILocation(line: 1794, column: 30, scope: !4755)
!4757 = !DILocation(line: 1794, column: 20, scope: !4755)
!4758 = !DILocation(line: 1794, column: 47, scope: !4755)
!4759 = !DILocation(line: 1795, column: 15, scope: !4755)
!4760 = !DILocation(line: 1795, column: 6, scope: !4755)
!4761 = !DILocation(line: 1797, column: 4, scope: !4424)
!4762 = !DILocation(line: 1804, column: 26, scope: !4424)
!4763 = !DILocation(line: 0, scope: !4424)
!4764 = !DILocation(line: 1805, column: 28, scope: !4424)
!4765 = !DILocation(line: 1807, column: 19, scope: !4424)
!4766 = !DILocation(line: 1808, column: 45, scope: !4424)
!4767 = !DILocation(line: 1808, column: 18, scope: !4424)
!4768 = !DILocation(line: 1810, column: 18, scope: !4424)
!4769 = !DILocation(line: 1811, column: 17, scope: !4424)
!4770 = !DILocation(line: 1813, column: 8, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1813, column: 8)
!4772 = !DILocation(line: 1813, column: 8, scope: !4424)
!4773 = !DILocation(line: 1818, column: 16, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4771, file: !3, line: 1817, column: 6)
!4775 = !DILocation(line: 1819, column: 8, scope: !4774)
!4776 = !DILocation(line: 1821, column: 8, scope: !4774)
!4777 = !DILocation(line: 1822, column: 8, scope: !4774)
!4778 = !DILocation(line: 1824, column: 4, scope: !4424)
!4779 = !DILocation(line: 1825, column: 2, scope: !4425)
!4780 = !DILocation(line: 1826, column: 5, scope: !4420)
!4781 = !DILocation(line: 1727, column: 9, scope: !4667)
!4782 = !DILocation(line: 1829, column: 43, scope: !4434)
!4783 = !DILocation(line: 1829, column: 31, scope: !4434)
!4784 = !DILocation(line: 1831, column: 10, scope: !4434)
!4785 = !DILocation(line: 1832, column: 7, scope: !4434)
!4786 = !DILocation(line: 1832, column: 10, scope: !4434)
!4787 = !DILocation(line: 1832, column: 31, scope: !4434)
!4788 = !DILocation(line: 1833, column: 7, scope: !4434)
!4789 = !DILocation(line: 1833, column: 10, scope: !4434)
!4790 = !DILocation(line: 1833, column: 49, scope: !4434)
!4791 = !DILocation(line: 1833, column: 59, scope: !4434)
!4792 = !DILocation(line: 1834, column: 7, scope: !4434)
!4793 = !DILocation(line: 1834, column: 49, scope: !4434)
!4794 = !DILocation(line: 1834, column: 59, scope: !4434)
!4795 = !DILocation(line: 1829, column: 7, scope: !4379)
!4796 = !DILocation(line: 1848, column: 18, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 1848, column: 11)
!4798 = !DILocation(line: 1848, column: 33, scope: !4797)
!4799 = !DILocation(line: 1848, column: 23, scope: !4797)
!4800 = !DILocation(line: 1848, column: 50, scope: !4797)
!4801 = !DILocation(line: 1848, column: 62, scope: !4797)
!4802 = !DILocation(line: 1848, column: 11, scope: !4433)
!4803 = !DILocation(line: 1849, column: 11, scope: !4797)
!4804 = !DILocation(line: 1849, column: 2, scope: !4797)
!4805 = !DILocation(line: 1851, column: 7, scope: !4433)
!4806 = !DILocation(line: 1853, column: 21, scope: !4433)
!4807 = !DILocation(line: 0, scope: !4433)
!4808 = !DILocation(line: 1860, column: 30, scope: !4433)
!4809 = !DILocation(line: 1861, column: 31, scope: !4433)
!4810 = !DILocation(line: 1863, column: 22, scope: !4433)
!4811 = !DILocation(line: 1864, column: 21, scope: !4433)
!4812 = !DILocation(line: 1866, column: 21, scope: !4433)
!4813 = !DILocation(line: 1867, column: 20, scope: !4433)
!4814 = !DILocation(line: 1869, column: 23, scope: !4445)
!4815 = !DILocation(line: 1869, column: 11, scope: !4433)
!4816 = !DILocation(line: 1872, column: 4, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 1870, column: 2)
!4818 = !DILocation(line: 1873, column: 4, scope: !4817)
!4819 = !DILocation(line: 1874, column: 12, scope: !4817)
!4820 = !DILocation(line: 1875, column: 2, scope: !4817)
!4821 = !DILocation(line: 1882, column: 56, scope: !4444)
!4822 = !DILocation(line: 1882, column: 41, scope: !4444)
!4823 = !DILocation(line: 1882, column: 30, scope: !4444)
!4824 = !DILocation(line: 0, scope: !4444)
!4825 = !DILocation(line: 1885, column: 22, scope: !4444)
!4826 = !DILocation(line: 1888, column: 20, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 1888, column: 8)
!4828 = !DILocation(line: 1888, column: 8, scope: !4444)
!4829 = !DILocation(line: 1890, column: 28, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 1889, column: 6)
!4831 = !DILocation(line: 1891, column: 29, scope: !4830)
!4832 = !DILocation(line: 1892, column: 6, scope: !4830)
!4833 = !DILocation(line: 1895, column: 28, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 1894, column: 6)
!4835 = !DILocation(line: 1896, column: 29, scope: !4834)
!4836 = !DILocation(line: 0, scope: !4827)
!4837 = !DILocation(line: 1899, column: 31, scope: !4444)
!4838 = !DILocation(line: 1899, column: 17, scope: !4444)
!4839 = !DILocation(line: 1902, column: 31, scope: !4444)
!4840 = !DILocation(line: 1902, column: 17, scope: !4444)
!4841 = !DILocation(line: 1906, column: 19, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 1906, column: 8)
!4843 = !DILocation(line: 1906, column: 38, scope: !4842)
!4844 = !DILocation(line: 1906, column: 24, scope: !4842)
!4845 = !DILocation(line: 1907, column: 28, scope: !4842)
!4846 = !DILocation(line: 1907, column: 14, scope: !4842)
!4847 = !DILocation(line: 1907, column: 6, scope: !4842)
!4848 = !DILocation(line: 0, scope: !4842)
!4849 = !DILocation(line: 1912, column: 14, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 1912, column: 8)
!4851 = !DILocation(line: 1912, column: 28, scope: !4850)
!4852 = !DILocation(line: 1912, column: 19, scope: !4850)
!4853 = !DILocation(line: 1913, column: 6, scope: !4850)
!4854 = !DILocation(line: 1915, column: 32, scope: !4444)
!4855 = !DILocation(line: 1915, column: 18, scope: !4444)
!4856 = !DILocation(line: 1918, column: 32, scope: !4444)
!4857 = !DILocation(line: 1918, column: 18, scope: !4444)
!4858 = !DILocation(line: 1922, column: 34, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 1922, column: 8)
!4860 = !DILocation(line: 1922, column: 19, scope: !4859)
!4861 = !DILocation(line: 1922, column: 54, scope: !4859)
!4862 = !DILocation(line: 1923, column: 28, scope: !4859)
!4863 = !DILocation(line: 1923, column: 14, scope: !4859)
!4864 = !DILocation(line: 1923, column: 6, scope: !4859)
!4865 = !DILocation(line: 1927, column: 14, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 1927, column: 8)
!4867 = !DILocation(line: 1927, column: 28, scope: !4866)
!4868 = !DILocation(line: 1927, column: 19, scope: !4866)
!4869 = !DILocation(line: 1928, column: 6, scope: !4866)
!4870 = !DILocation(line: 0, scope: !4445)
!4871 = !DILocation(line: 1931, column: 15, scope: !4433)
!4872 = !DILocation(line: 1932, column: 7, scope: !4433)
!4873 = !DILocation(line: 1934, column: 17, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 1934, column: 11)
!4875 = !DILocation(line: 1934, column: 11, scope: !4433)
!4876 = !DILocation(line: 1936, column: 4, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1935, column: 2)
!4878 = !DILocation(line: 1937, column: 4, scope: !4877)
!4879 = !DILocation(line: 1942, column: 17, scope: !4455)
!4880 = !DILocation(line: 1942, column: 42, scope: !4455)
!4881 = !DILocation(line: 1942, column: 30, scope: !4455)
!4882 = !DILocation(line: 1944, column: 10, scope: !4455)
!4883 = !DILocation(line: 1944, column: 31, scope: !4455)
!4884 = !DILocation(line: 1945, column: 7, scope: !4455)
!4885 = !DILocation(line: 1945, column: 10, scope: !4455)
!4886 = !DILocation(line: 1945, column: 47, scope: !4455)
!4887 = !DILocation(line: 1945, column: 57, scope: !4455)
!4888 = !DILocation(line: 1942, column: 7, scope: !4379)
!4889 = !DILocation(line: 1949, column: 59, scope: !4454)
!4890 = !DILocation(line: 0, scope: !4454)
!4891 = !DILocation(line: 1963, column: 14, scope: !4454)
!4892 = !DILocation(line: 1964, column: 14, scope: !4454)
!4893 = !DILocation(line: 1966, column: 17, scope: !4454)
!4894 = !DILocation(line: 1968, column: 18, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 1968, column: 11)
!4896 = !DILocation(line: 1968, column: 23, scope: !4895)
!4897 = !DILocation(line: 1968, column: 27, scope: !4895)
!4898 = !DILocation(line: 1968, column: 11, scope: !4454)
!4899 = !DILocation(line: 0, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 1972, column: 11)
!4901 = !DILocation(line: 1972, column: 11, scope: !4900)
!4902 = !DILocation(line: 1969, column: 2, scope: !4895)
!4903 = !DILocation(line: 1972, column: 11, scope: !4454)
!4904 = !DILocation(line: 1973, column: 2, scope: !4900)
!4905 = !DILocation(line: 0, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 1992, column: 6)
!4907 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 1991, column: 8)
!4908 = !DILocation(line: 1976, column: 12, scope: !4468)
!4909 = !DILocation(line: 0, scope: !4468)
!4910 = !DILocation(line: 1950, column: 11, scope: !4454)
!4911 = !DILocation(line: 1950, column: 32, scope: !4454)
!4912 = !DILocation(line: 1976, column: 21, scope: !4467)
!4913 = !DILocation(line: 1976, column: 7, scope: !4468)
!4914 = !DILocation(line: 0, scope: !4466)
!4915 = !DILocation(line: 1979, column: 23, scope: !4466)
!4916 = !DILocation(line: 1980, column: 20, scope: !4466)
!4917 = !DILocation(line: 1981, column: 20, scope: !4466)
!4918 = !DILocation(line: 1985, column: 22, scope: !4466)
!4919 = !DILocation(line: 1985, column: 8, scope: !4466)
!4920 = !DILocation(line: 1988, column: 10, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 1988, column: 8)
!4922 = !DILocation(line: 1988, column: 8, scope: !4466)
!4923 = !DILocation(line: 1991, column: 10, scope: !4907)
!4924 = !DILocation(line: 1991, column: 14, scope: !4907)
!4925 = !DILocation(line: 1991, column: 8, scope: !4466)
!4926 = !DILocation(line: 1994, column: 33, scope: !4906)
!4927 = !DILocation(line: 1994, column: 20, scope: !4906)
!4928 = !DILocation(line: 1999, column: 8, scope: !4906)
!4929 = !DILocation(line: 1995, column: 20, scope: !4906)
!4930 = !DILocation(line: 2000, column: 6, scope: !4906)
!4931 = !DILocation(line: 2002, column: 10, scope: !4475)
!4932 = !DILocation(line: 2002, column: 8, scope: !4466)
!4933 = !DILocation(line: 2007, column: 29, scope: !4474)
!4934 = !DILocation(line: 2007, column: 15, scope: !4474)
!4935 = !DILocation(line: 0, scope: !4474)
!4936 = !DILocation(line: 2012, column: 12, scope: !4474)
!4937 = !DILocation(line: 2015, column: 34, scope: !4477)
!4938 = !DILocation(line: 2015, column: 21, scope: !4477)
!4939 = !DILocation(line: 0, scope: !4477)
!4940 = !DILocation(line: 2020, column: 12, scope: !4477)
!4941 = !DILocation(line: 2016, column: 17, scope: !4477)
!4942 = !DILocation(line: 2023, column: 31, scope: !4477)
!4943 = !DILocation(line: 2023, column: 17, scope: !4477)
!4944 = !DILocation(line: 2026, column: 19, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 2026, column: 9)
!4946 = !DILocation(line: 0, scope: !4478)
!4947 = !DILocation(line: 2029, column: 8, scope: !4474)
!4948 = !DILocation(line: 2030, column: 6, scope: !4475)
!4949 = !DILocation(line: 2023, column: 15, scope: !4477)
!4950 = !DILocation(line: 2033, column: 14, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 2033, column: 12)
!4952 = distinct !DILexicalBlock(scope: !4475, file: !3, line: 2032, column: 6)
!4953 = !DILocation(line: 2033, column: 12, scope: !4952)
!4954 = !DILocation(line: 2034, column: 3, scope: !4951)
!4955 = !DILocation(line: 2038, column: 2, scope: !4467)
!4956 = !DILocation(line: 1976, column: 32, scope: !4467)
!4957 = !DILocation(line: 1976, column: 7, scope: !4467)
!4958 = distinct !{!4958, !4913, !4959}
!4959 = !DILocation(line: 2038, column: 2, scope: !4468)
!4960 = !DILocation(line: 2040, column: 16, scope: !4483)
!4961 = !DILocation(line: 2040, column: 40, scope: !4483)
!4962 = !DILocation(line: 2040, column: 13, scope: !4483)
!4963 = !DILocation(line: 2040, column: 11, scope: !4454)
!4964 = !DILocation(line: 2042, column: 8, scope: !4481)
!4965 = !DILocation(line: 2042, column: 41, scope: !4481)
!4966 = !DILocation(line: 2042, column: 51, scope: !4481)
!4967 = !DILocation(line: 2043, column: 8, scope: !4481)
!4968 = !DILocation(line: 2043, column: 13, scope: !4481)
!4969 = !DILocation(line: 2042, column: 8, scope: !4482)
!4970 = !DILocation(line: 2045, column: 19, scope: !4480)
!4971 = !DILocation(line: 0, scope: !4480)
!4972 = !DILocation(line: 2049, column: 8, scope: !4480)
!4973 = !DILocation(line: 2047, column: 8, scope: !4480)
!4974 = !DILocation(line: 2052, column: 6, scope: !4480)
!4975 = !DILocation(line: 2060, column: 2, scope: !4483)
!4976 = !DILocation(line: 2061, column: 5, scope: !4455)
!4977 = !DILocation(line: 1969, column: 9, scope: !4895)
!4978 = !DILocation(line: 2069, column: 7, scope: !4486)
!4979 = !DILocation(line: 2070, column: 10, scope: !4486)
!4980 = !DILocation(line: 2070, column: 31, scope: !4486)
!4981 = !DILocation(line: 2071, column: 7, scope: !4486)
!4982 = !DILocation(line: 2071, column: 10, scope: !4486)
!4983 = !DILocation(line: 2071, column: 49, scope: !4486)
!4984 = !DILocation(line: 2071, column: 59, scope: !4486)
!4985 = !DILocation(line: 2072, column: 7, scope: !4486)
!4986 = !DILocation(line: 2072, column: 48, scope: !4486)
!4987 = !DILocation(line: 2072, column: 58, scope: !4486)
!4988 = !DILocation(line: 2068, column: 7, scope: !4379)
!4989 = !DILocation(line: 0, scope: !4485)
!4990 = !DILocation(line: 2076, column: 11, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 2076, column: 11)
!4992 = !DILocation(line: 2076, column: 51, scope: !4991)
!4993 = !DILocation(line: 2077, column: 4, scope: !4991)
!4994 = !DILocation(line: 2076, column: 11, scope: !4485)
!4995 = !DILocation(line: 2079, column: 14, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 2078, column: 2)
!4997 = !DILocation(line: 2081, column: 9, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 2081, column: 8)
!4999 = !DILocation(line: 2081, column: 8, scope: !4996)
!5000 = !DILocation(line: 2082, column: 6, scope: !4998)
!5001 = !DILocation(line: 2085, column: 19, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 2085, column: 11)
!5003 = !DILocation(line: 2086, column: 4, scope: !5002)
!5004 = !DILocation(line: 2086, column: 47, scope: !5002)
!5005 = !DILocation(line: 2087, column: 7, scope: !5002)
!5006 = !DILocation(line: 2085, column: 11, scope: !4485)
!5007 = !DILocation(line: 2089, column: 14, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 2088, column: 2)
!5009 = !DILocation(line: 2091, column: 9, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 2091, column: 8)
!5011 = !DILocation(line: 2091, column: 8, scope: !5008)
!5012 = !DILocation(line: 2092, column: 6, scope: !5010)
!5013 = !DILocation(line: 2095, column: 19, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 2095, column: 11)
!5015 = !DILocation(line: 2095, column: 11, scope: !4485)
!5016 = !DILocation(line: 2097, column: 41, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5018, file: !3, line: 2097, column: 8)
!5018 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 2096, column: 2)
!5019 = !DILocation(line: 2097, column: 51, scope: !5017)
!5020 = !DILocation(line: 2097, column: 8, scope: !5018)
!5021 = !DILocation(line: 2099, column: 31, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 2098, column: 6)
!5023 = !DILocation(line: 2099, column: 15, scope: !5022)
!5024 = !DILocation(line: 2102, column: 8, scope: !5022)
!5025 = !DILocation(line: 2100, column: 8, scope: !5022)
!5026 = !DILocation(line: 2105, column: 6, scope: !5022)
!5027 = !DILocation(line: 2113, column: 13, scope: !4379)
!5028 = !DILocation(line: 2114, column: 7, scope: !4489)
!5029 = !DILocation(line: 2115, column: 7, scope: !4489)
!5030 = !DILocation(line: 2115, column: 32, scope: !4489)
!5031 = !DILocation(line: 0, scope: !4488)
!5032 = !DILocation(line: 2122, column: 7, scope: !4488)
!5033 = !DILocation(line: 2124, column: 11, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 2124, column: 11)
!5035 = !DILocation(line: 2124, column: 11, scope: !4488)
!5036 = !DILocation(line: 2126, column: 23, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 2125, column: 2)
!5038 = !DILocation(line: 2126, column: 15, scope: !5037)
!5039 = !DILocation(line: 2129, column: 11, scope: !5037)
!5040 = !DILocation(line: 2130, column: 2, scope: !5037)
!5041 = !DILocation(line: 2132, column: 11, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 2132, column: 11)
!5043 = !DILocation(line: 2132, column: 26, scope: !5042)
!5044 = !DILocation(line: 2133, column: 4, scope: !5042)
!5045 = !DILocation(line: 2133, column: 7, scope: !5042)
!5046 = !DILocation(line: 2133, column: 22, scope: !5042)
!5047 = !DILocation(line: 2132, column: 11, scope: !4488)
!5048 = !DILocation(line: 2134, column: 8, scope: !5042)
!5049 = !DILocation(line: 2134, column: 2, scope: !5042)
!5050 = !DILocation(line: 2138, column: 15, scope: !4488)
!5051 = !DILocation(line: 2142, column: 15, scope: !4488)
!5052 = !DILocation(line: 2143, column: 7, scope: !4488)
!5053 = !DILocation(line: 2145, column: 16, scope: !4488)
!5054 = !DILocation(line: 2147, column: 6, scope: !4488)
!5055 = !DILocation(line: 2146, column: 7, scope: !4488)
!5056 = !DILocation(line: 2152, column: 3, scope: !4379)
!5057 = !DILocation(line: 2156, column: 33, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 2156, column: 7)
!5059 = !DILocation(line: 2160, column: 7, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 2158, column: 5)
!5061 = !DILocation(line: 2161, column: 7, scope: !5060)
!5062 = !DILocation(line: 2167, column: 22, scope: !4379)
!5063 = !DILocation(line: 2167, column: 14, scope: !4379)
!5064 = !DILocation(line: 2172, column: 7, scope: !4500)
!5065 = !DILocation(line: 0, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 2190, column: 12)
!5067 = !DILocation(line: 0, scope: !4494)
!5068 = !DILocation(line: 2174, column: 12, scope: !4498)
!5069 = !DILocation(line: 0, scope: !4498)
!5070 = !DILocation(line: 2175, column: 16, scope: !4497)
!5071 = !DILocation(line: 2174, column: 7, scope: !4498)
!5072 = !DILocation(line: 2178, column: 9, scope: !4495)
!5073 = !DILocation(line: 2178, column: 47, scope: !4495)
!5074 = !DILocation(line: 2179, column: 9, scope: !4495)
!5075 = !DILocation(line: 2180, column: 8, scope: !4495)
!5076 = !DILocation(line: 2181, column: 8, scope: !4495)
!5077 = !DILocation(line: 2178, column: 8, scope: !4496)
!5078 = !DILocation(line: 2197, column: 15, scope: !4494)
!5079 = !DILocation(line: 2201, column: 15, scope: !4494)
!5080 = !DILocation(line: 2204, column: 15, scope: !4494)
!5081 = !DILocation(line: 2206, column: 12, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 2206, column: 12)
!5083 = !DILocation(line: 2206, column: 12, scope: !4494)
!5084 = !DILocation(line: 2208, column: 9, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 2207, column: 3)
!5086 = !DILocation(line: 2212, column: 20, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 2212, column: 13)
!5088 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 2211, column: 7)
!5089 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 2208, column: 9)
!5090 = !DILocation(line: 2212, column: 13, scope: !5088)
!5091 = !DILocation(line: 2213, column: 13, scope: !5087)
!5092 = !DILocation(line: 2213, column: 4, scope: !5087)
!5093 = !DILocation(line: 2214, column: 9, scope: !5088)
!5094 = !DILocation(line: 2215, column: 9, scope: !5088)
!5095 = !DILocation(line: 2218, column: 14, scope: !5089)
!5096 = !DILocation(line: 2218, column: 7, scope: !5089)
!5097 = !DILocation(line: 2221, column: 3, scope: !5082)
!5098 = !DILocation(line: 2222, column: 6, scope: !4495)
!5099 = !DILocation(line: 2174, column: 7, scope: !4497)
!5100 = distinct !{!5100, !5071, !5101}
!5101 = !DILocation(line: 2223, column: 2, scope: !4498)
!5102 = !DILocation(line: 2226, column: 3, scope: !4379)
!5103 = !DILocation(line: 2181, column: 5, scope: !4495)
!5104 = !DILocation(line: 2227, column: 3, scope: !4379)
!5105 = distinct !DISubprogram(name: "expand_binop_directly", scope: !3, file: !3, line: 1416, type: !5106, scopeLine: 1420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5108)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{!2090, !5, !3291, !2090, !2090, !2090, !2072, !2047, !2090}
!5108 = !{!5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124, !5125, !5126}
!5109 = !DILocalVariable(name: "mode", arg: 1, scope: !5105, file: !3, line: 1416, type: !5)
!5110 = !DILocalVariable(name: "binoptab", arg: 2, scope: !5105, file: !3, line: 1416, type: !3291)
!5111 = !DILocalVariable(name: "op0", arg: 3, scope: !5105, file: !3, line: 1417, type: !2090)
!5112 = !DILocalVariable(name: "op1", arg: 4, scope: !5105, file: !3, line: 1417, type: !2090)
!5113 = !DILocalVariable(name: "target", arg: 5, scope: !5105, file: !3, line: 1418, type: !2090)
!5114 = !DILocalVariable(name: "unsignedp", arg: 6, scope: !5105, file: !3, line: 1418, type: !2072)
!5115 = !DILocalVariable(name: "methods", arg: 7, scope: !5105, file: !3, line: 1418, type: !2047)
!5116 = !DILocalVariable(name: "last", arg: 8, scope: !5105, file: !3, line: 1419, type: !2090)
!5117 = !DILocalVariable(name: "icode", scope: !5105, file: !3, line: 1421, type: !2072)
!5118 = !DILocalVariable(name: "mode0", scope: !5105, file: !3, line: 1422, type: !5)
!5119 = !DILocalVariable(name: "mode1", scope: !5105, file: !3, line: 1423, type: !5)
!5120 = !DILocalVariable(name: "tmp_mode", scope: !5105, file: !3, line: 1424, type: !5)
!5121 = !DILocalVariable(name: "commutative_p", scope: !5105, file: !3, line: 1425, type: !2071)
!5122 = !DILocalVariable(name: "pat", scope: !5105, file: !3, line: 1426, type: !2090)
!5123 = !DILocalVariable(name: "xop0", scope: !5105, file: !3, line: 1427, type: !2090)
!5124 = !DILocalVariable(name: "xop1", scope: !5105, file: !3, line: 1427, type: !2090)
!5125 = !DILocalVariable(name: "temp", scope: !5105, file: !3, line: 1428, type: !2090)
!5126 = !DILocalVariable(name: "swap", scope: !5105, file: !3, line: 1429, type: !2090)
!5127 = !DILocation(line: 0, scope: !5105)
!5128 = !DILocation(line: 1421, column: 21, scope: !5105)
!5129 = !DILocation(line: 1421, column: 53, scope: !5105)
!5130 = !DILocation(line: 1422, column: 29, scope: !5105)
!5131 = !DILocation(line: 1422, column: 46, scope: !5105)
!5132 = !DILocation(line: 1422, column: 57, scope: !5105)
!5133 = !DILocation(line: 1423, column: 57, scope: !5105)
!5134 = !DILocation(line: 1431, column: 7, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1431, column: 7)
!5136 = !DILocation(line: 1431, column: 7, scope: !5105)
!5137 = !DILocation(line: 1434, column: 12, scope: !5135)
!5138 = !DILocation(line: 0, scope: !5135)
!5139 = !DILocation(line: 1438, column: 19, scope: !5105)
!5140 = !DILocation(line: 1439, column: 7, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1439, column: 7)
!5142 = !DILocation(line: 1440, column: 7, scope: !5141)
!5143 = !DILocation(line: 1440, column: 35, scope: !5141)
!5144 = !DILocation(line: 1441, column: 7, scope: !5141)
!5145 = !DILocation(line: 1441, column: 35, scope: !5141)
!5146 = !DILocation(line: 1439, column: 7, scope: !5105)
!5147 = !DILocation(line: 1449, column: 59, scope: !5105)
!5148 = !DILocation(line: 1449, column: 10, scope: !5105)
!5149 = !DILocation(line: 1450, column: 8, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1450, column: 7)
!5151 = !DILocation(line: 1450, column: 7, scope: !5105)
!5152 = !DILocation(line: 1451, column: 12, scope: !5150)
!5153 = !DILocation(line: 1451, column: 5, scope: !5150)
!5154 = !DILocation(line: 1459, column: 7, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1459, column: 7)
!5156 = !DILocation(line: 1459, column: 23, scope: !5155)
!5157 = !DILocation(line: 1459, column: 41, scope: !5155)
!5158 = !DILocation(line: 1459, column: 32, scope: !5155)
!5159 = !DILocation(line: 1461, column: 6, scope: !5155)
!5160 = !DILocation(line: 1461, column: 22, scope: !5155)
!5161 = !DILocation(line: 1460, column: 12, scope: !5155)
!5162 = !DILocation(line: 1460, column: 5, scope: !5155)
!5163 = !DILocation(line: 1466, column: 7, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1466, column: 7)
!5165 = !DILocation(line: 1466, column: 23, scope: !5164)
!5166 = !DILocation(line: 1466, column: 41, scope: !5164)
!5167 = !DILocation(line: 1466, column: 32, scope: !5164)
!5168 = !DILocation(line: 1468, column: 6, scope: !5164)
!5169 = !DILocation(line: 1468, column: 22, scope: !5164)
!5170 = !DILocation(line: 1467, column: 12, scope: !5164)
!5171 = !DILocation(line: 1467, column: 5, scope: !5164)
!5172 = !DILocation(line: 1478, column: 7, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1477, column: 7)
!5174 = !DILocation(line: 1478, column: 10, scope: !5173)
!5175 = !DILocation(line: 1477, column: 7, scope: !5105)
!5176 = !DILocation(line: 1488, column: 36, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1488, column: 7)
!5178 = !DILocation(line: 1488, column: 8, scope: !5177)
!5179 = !DILocation(line: 1489, column: 7, scope: !5177)
!5180 = !DILocation(line: 1490, column: 12, scope: !5177)
!5181 = !DILocation(line: 1490, column: 5, scope: !5177)
!5182 = !DILocation(line: 1492, column: 36, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1492, column: 7)
!5184 = !DILocation(line: 1492, column: 8, scope: !5183)
!5185 = !DILocation(line: 1493, column: 7, scope: !5183)
!5186 = !DILocation(line: 1494, column: 12, scope: !5183)
!5187 = !DILocation(line: 1494, column: 5, scope: !5183)
!5188 = !DILocation(line: 1496, column: 16, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1496, column: 7)
!5190 = !DILocation(line: 1497, column: 19, scope: !5189)
!5191 = !DILocation(line: 1497, column: 7, scope: !5189)
!5192 = !DILocation(line: 1498, column: 19, scope: !5189)
!5193 = !DILocation(line: 1499, column: 19, scope: !5189)
!5194 = !DILocation(line: 1500, column: 19, scope: !5189)
!5195 = !DILocation(line: 1504, column: 46, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 1501, column: 5)
!5197 = !DILocation(line: 1505, column: 11, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 1505, column: 11)
!5199 = !DILocation(line: 1505, column: 45, scope: !5198)
!5200 = !DILocation(line: 1505, column: 43, scope: !5198)
!5201 = !DILocation(line: 1505, column: 38, scope: !5198)
!5202 = !DILocation(line: 1505, column: 11, scope: !5196)
!5203 = !DILocation(line: 0, scope: !5189)
!5204 = !DILocation(line: 1511, column: 36, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1511, column: 7)
!5206 = !DILocation(line: 1511, column: 8, scope: !5205)
!5207 = !DILocation(line: 1511, column: 7, scope: !5105)
!5208 = !DILocation(line: 1512, column: 12, scope: !5205)
!5209 = !DILocation(line: 1512, column: 5, scope: !5205)
!5210 = !DILocation(line: 1514, column: 9, scope: !5105)
!5211 = !DILocation(line: 1515, column: 7, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1515, column: 7)
!5213 = !DILocation(line: 1515, column: 7, scope: !5105)
!5214 = !DILocation(line: 1520, column: 11, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 1520, column: 11)
!5216 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 1516, column: 5)
!5217 = !DILocation(line: 1520, column: 24, scope: !5215)
!5218 = !DILocation(line: 1520, column: 27, scope: !5215)
!5219 = !DILocation(line: 1520, column: 43, scope: !5215)
!5220 = !DILocation(line: 1521, column: 4, scope: !5215)
!5221 = !DILocation(line: 1521, column: 46, scope: !5215)
!5222 = !DILocation(line: 1521, column: 9, scope: !5215)
!5223 = !DILocation(line: 1520, column: 11, scope: !5216)
!5224 = !DILocation(line: 1523, column: 4, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 1522, column: 2)
!5226 = !DILocation(line: 1524, column: 11, scope: !5225)
!5227 = !DILocation(line: 1524, column: 4, scope: !5225)
!5228 = !DILocation(line: 1528, column: 7, scope: !5216)
!5229 = !DILocation(line: 1529, column: 7, scope: !5216)
!5230 = !DILocation(line: 1532, column: 3, scope: !5105)
!5231 = !DILocation(line: 1533, column: 3, scope: !5105)
!5232 = !DILocation(line: 1534, column: 1, scope: !5105)
!5233 = distinct !DISubprogram(name: "avoid_expensive_constant", scope: !3, file: !3, line: 1389, type: !5234, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5236)
!5234 = !DISubroutineType(types: !5235)
!5235 = !{!2090, !5, !3291, !2090, !2071}
!5236 = !{!5237, !5238, !5239, !5240, !5241, !5242}
!5237 = !DILocalVariable(name: "mode", arg: 1, scope: !5233, file: !3, line: 1389, type: !5)
!5238 = !DILocalVariable(name: "binoptab", arg: 2, scope: !5233, file: !3, line: 1389, type: !3291)
!5239 = !DILocalVariable(name: "x", arg: 3, scope: !5233, file: !3, line: 1390, type: !2090)
!5240 = !DILocalVariable(name: "unsignedp", arg: 4, scope: !5233, file: !3, line: 1390, type: !2071)
!5241 = !DILocalVariable(name: "speed", scope: !5233, file: !3, line: 1392, type: !2071)
!5242 = !DILocalVariable(name: "intval", scope: !5243, file: !3, line: 1401, type: !2176)
!5243 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 1400, column: 2)
!5244 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 1399, column: 11)
!5245 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 1398, column: 5)
!5246 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 1394, column: 7)
!5247 = !DILocation(line: 0, scope: !5233)
!5248 = !DILocation(line: 1392, column: 16, scope: !5233)
!5249 = !DILocation(line: 1394, column: 12, scope: !5246)
!5250 = !DILocation(line: 1395, column: 10, scope: !5246)
!5251 = !DILocation(line: 1395, column: 7, scope: !5246)
!5252 = !DILocation(line: 1396, column: 10, scope: !5246)
!5253 = !DILocation(line: 1397, column: 7, scope: !5246)
!5254 = !DILocation(line: 1397, column: 33, scope: !5246)
!5255 = !DILocation(line: 1397, column: 10, scope: !5246)
!5256 = !DILocation(line: 1397, column: 48, scope: !5246)
!5257 = !DILocation(line: 1397, column: 46, scope: !5246)
!5258 = !DILocation(line: 1394, column: 7, scope: !5233)
!5259 = !DILocation(line: 1399, column: 11, scope: !5244)
!5260 = !DILocation(line: 1399, column: 11, scope: !5245)
!5261 = !DILocation(line: 1401, column: 47, scope: !5243)
!5262 = !DILocation(line: 1401, column: 27, scope: !5243)
!5263 = !DILocation(line: 0, scope: !5243)
!5264 = !DILocation(line: 1402, column: 18, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5243, file: !3, line: 1402, column: 8)
!5266 = !DILocation(line: 1402, column: 15, scope: !5265)
!5267 = !DILocation(line: 1402, column: 8, scope: !5243)
!5268 = !DILocation(line: 1403, column: 10, scope: !5265)
!5269 = !DILocation(line: 1403, column: 6, scope: !5265)
!5270 = !DILocation(line: 1406, column: 40, scope: !5244)
!5271 = !DILocation(line: 1406, column: 6, scope: !5244)
!5272 = !DILocation(line: 0, scope: !5244)
!5273 = !DILocation(line: 1407, column: 11, scope: !5245)
!5274 = !DILocation(line: 1408, column: 5, scope: !5245)
!5275 = !DILocation(line: 1409, column: 3, scope: !5233)
!5276 = distinct !DISubprogram(name: "widen_operand", scope: !3, file: !3, line: 284, type: !5277, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5279)
!5277 = !DISubroutineType(types: !5278)
!5278 = !{!2090, !2090, !5, !5, !2072, !2072}
!5279 = !{!5280, !5281, !5282, !5283, !5284, !5285}
!5280 = !DILocalVariable(name: "op", arg: 1, scope: !5276, file: !3, line: 284, type: !2090)
!5281 = !DILocalVariable(name: "mode", arg: 2, scope: !5276, file: !3, line: 284, type: !5)
!5282 = !DILocalVariable(name: "oldmode", arg: 3, scope: !5276, file: !3, line: 284, type: !5)
!5283 = !DILocalVariable(name: "unsignedp", arg: 4, scope: !5276, file: !3, line: 285, type: !2072)
!5284 = !DILocalVariable(name: "no_extend", arg: 5, scope: !5276, file: !3, line: 285, type: !2072)
!5285 = !DILocalVariable(name: "result", scope: !5276, file: !3, line: 287, type: !2090)
!5286 = !DILocation(line: 0, scope: !5276)
!5287 = !DILocation(line: 290, column: 17, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 290, column: 7)
!5289 = !DILocation(line: 290, column: 20, scope: !5288)
!5290 = !DILocation(line: 290, column: 34, scope: !5288)
!5291 = !DILocation(line: 290, column: 7, scope: !5276)
!5292 = !DILocation(line: 297, column: 7, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 296, column: 7)
!5294 = !DILocation(line: 297, column: 11, scope: !5293)
!5295 = !DILocation(line: 297, column: 25, scope: !5293)
!5296 = !DILocation(line: 297, column: 35, scope: !5293)
!5297 = !DILocation(line: 297, column: 38, scope: !5293)
!5298 = !DILocation(line: 298, column: 4, scope: !5293)
!5299 = !DILocation(line: 298, column: 7, scope: !5293)
!5300 = !DILocation(line: 298, column: 39, scope: !5293)
!5301 = !DILocation(line: 296, column: 7, scope: !5276)
!5302 = !DILocation(line: 299, column: 12, scope: !5293)
!5303 = !DILocation(line: 299, column: 5, scope: !5293)
!5304 = !DILocation(line: 303, column: 7, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 303, column: 7)
!5306 = !DILocation(line: 303, column: 28, scope: !5305)
!5307 = !DILocation(line: 303, column: 7, scope: !5276)
!5308 = !DILocation(line: 304, column: 45, scope: !5305)
!5309 = !DILocation(line: 304, column: 34, scope: !5305)
!5310 = !DILocation(line: 304, column: 12, scope: !5305)
!5311 = !DILocation(line: 304, column: 5, scope: !5305)
!5312 = !DILocation(line: 309, column: 12, scope: !5276)
!5313 = !DILocation(line: 310, column: 3, scope: !5276)
!5314 = !DILocation(line: 311, column: 19, scope: !5276)
!5315 = !DILocation(line: 311, column: 32, scope: !5276)
!5316 = !DILocation(line: 311, column: 3, scope: !5276)
!5317 = !DILocation(line: 312, column: 3, scope: !5276)
!5318 = !DILocation(line: 313, column: 1, scope: !5276)
!5319 = distinct !DISubprogram(name: "commutative_optab_p", scope: !3, file: !3, line: 1374, type: !5320, scopeLine: 1375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5322)
!5320 = !DISubroutineType(types: !5321)
!5321 = !{!2071, !3291}
!5322 = !{!5323}
!5323 = !DILocalVariable(name: "binoptab", arg: 1, scope: !5319, file: !3, line: 1374, type: !3291)
!5324 = !DILocation(line: 0, scope: !5319)
!5325 = !DILocation(line: 1376, column: 11, scope: !5319)
!5326 = !DILocation(line: 1376, column: 42, scope: !5319)
!5327 = !DILocation(line: 1377, column: 16, scope: !5319)
!5328 = !DILocation(line: 1377, column: 4, scope: !5319)
!5329 = !DILocation(line: 1378, column: 16, scope: !5319)
!5330 = !DILocation(line: 1379, column: 16, scope: !5319)
!5331 = !DILocation(line: 1380, column: 16, scope: !5319)
!5332 = !DILocation(line: 1376, column: 10, scope: !5319)
!5333 = !DILocation(line: 1376, column: 3, scope: !5319)
!5334 = distinct !DISubprogram(name: "swap_commutative_operands_with_target", scope: !3, file: !3, line: 1331, type: !5335, scopeLine: 1332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5337)
!5335 = !DISubroutineType(types: !5336)
!5336 = !{!2071, !2090, !2090, !2090}
!5337 = !{!5338, !5339, !5340, !5341, !5342}
!5338 = !DILocalVariable(name: "target", arg: 1, scope: !5334, file: !3, line: 1331, type: !2090)
!5339 = !DILocalVariable(name: "op0", arg: 2, scope: !5334, file: !3, line: 1331, type: !2090)
!5340 = !DILocalVariable(name: "op1", arg: 3, scope: !5334, file: !3, line: 1331, type: !2090)
!5341 = !DILocalVariable(name: "op0_prec", scope: !5334, file: !3, line: 1333, type: !2072)
!5342 = !DILocalVariable(name: "op1_prec", scope: !5334, file: !3, line: 1334, type: !2072)
!5343 = !DILocation(line: 0, scope: !5334)
!5344 = !DILocation(line: 1333, column: 18, scope: !5334)
!5345 = !DILocation(line: 1334, column: 18, scope: !5334)
!5346 = !DILocation(line: 1336, column: 16, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 1336, column: 7)
!5348 = !DILocation(line: 1336, column: 7, scope: !5334)
!5349 = !DILocation(line: 1339, column: 16, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 1339, column: 7)
!5351 = !DILocation(line: 1339, column: 7, scope: !5334)
!5352 = !DILocation(line: 1344, column: 14, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 1344, column: 7)
!5354 = !DILocation(line: 1344, column: 19, scope: !5353)
!5355 = !DILocation(line: 1344, column: 22, scope: !5353)
!5356 = !DILocation(line: 1344, column: 7, scope: !5334)
!5357 = !DILocation(line: 1345, column: 13, scope: !5353)
!5358 = !DILocation(line: 1345, column: 25, scope: !5353)
!5359 = !DILocation(line: 1345, column: 29, scope: !5353)
!5360 = !DILocation(line: 1345, column: 42, scope: !5353)
!5361 = !DILocation(line: 1345, column: 52, scope: !5353)
!5362 = !DILocation(line: 1345, column: 5, scope: !5353)
!5363 = !DILocation(line: 1347, column: 12, scope: !5353)
!5364 = !DILocation(line: 1347, column: 5, scope: !5353)
!5365 = !DILocation(line: 1348, column: 1, scope: !5334)
!5366 = distinct !DISubprogram(name: "expand_doubleword_shift", scope: !3, file: !3, line: 1033, type: !5367, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5369)
!5367 = !DISubroutineType(types: !5368)
!5368 = !{!2071, !5, !3291, !2090, !2090, !2090, !2090, !2090, !2072, !2047, !2081}
!5369 = !{!5370, !5371, !5372, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380, !5381, !5382, !5383, !5384, !5385, !5386, !5387}
!5370 = !DILocalVariable(name: "op1_mode", arg: 1, scope: !5366, file: !3, line: 1033, type: !5)
!5371 = !DILocalVariable(name: "binoptab", arg: 2, scope: !5366, file: !3, line: 1033, type: !3291)
!5372 = !DILocalVariable(name: "outof_input", arg: 3, scope: !5366, file: !3, line: 1034, type: !2090)
!5373 = !DILocalVariable(name: "into_input", arg: 4, scope: !5366, file: !3, line: 1034, type: !2090)
!5374 = !DILocalVariable(name: "op1", arg: 5, scope: !5366, file: !3, line: 1034, type: !2090)
!5375 = !DILocalVariable(name: "outof_target", arg: 6, scope: !5366, file: !3, line: 1035, type: !2090)
!5376 = !DILocalVariable(name: "into_target", arg: 7, scope: !5366, file: !3, line: 1035, type: !2090)
!5377 = !DILocalVariable(name: "unsignedp", arg: 8, scope: !5366, file: !3, line: 1036, type: !2072)
!5378 = !DILocalVariable(name: "methods", arg: 9, scope: !5366, file: !3, line: 1036, type: !2047)
!5379 = !DILocalVariable(name: "shift_mask", arg: 10, scope: !5366, file: !3, line: 1037, type: !2081)
!5380 = !DILocalVariable(name: "superword_op1", scope: !5366, file: !3, line: 1039, type: !2090)
!5381 = !DILocalVariable(name: "tmp", scope: !5366, file: !3, line: 1039, type: !2090)
!5382 = !DILocalVariable(name: "cmp1", scope: !5366, file: !3, line: 1039, type: !2090)
!5383 = !DILocalVariable(name: "cmp2", scope: !5366, file: !3, line: 1039, type: !2090)
!5384 = !DILocalVariable(name: "subword_label", scope: !5366, file: !3, line: 1040, type: !2090)
!5385 = !DILocalVariable(name: "done_label", scope: !5366, file: !3, line: 1040, type: !2090)
!5386 = !DILocalVariable(name: "cmp_code", scope: !5366, file: !3, line: 1041, type: !384)
!5387 = !DILocalVariable(name: "start", scope: !5388, file: !3, line: 1112, type: !2090)
!5388 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 1111, column: 3)
!5389 = !DILocation(line: 0, scope: !5366)
!5390 = !DILocation(line: 1051, column: 18, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 1051, column: 7)
!5392 = !DILocation(line: 1052, column: 23, scope: !5391)
!5393 = !DILocation(line: 1052, column: 7, scope: !5391)
!5394 = !DILocation(line: 1053, column: 11, scope: !5391)
!5395 = !DILocation(line: 1051, column: 7, scope: !5366)
!5396 = !DILocation(line: 1055, column: 12, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 1055, column: 11)
!5398 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 1054, column: 5)
!5399 = !DILocation(line: 1055, column: 11, scope: !5398)
!5400 = !DILocation(line: 1060, column: 32, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 1060, column: 11)
!5402 = !DILocation(line: 1060, column: 12, scope: !5401)
!5403 = !DILocation(line: 0, scope: !5398)
!5404 = !DILocation(line: 1070, column: 9, scope: !5366)
!5405 = !DILocation(line: 1071, column: 8, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 1071, column: 7)
!5407 = !DILocation(line: 1071, column: 39, scope: !5406)
!5408 = !DILocation(line: 1071, column: 25, scope: !5406)
!5409 = !DILocation(line: 1075, column: 14, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 1072, column: 5)
!5411 = !DILocation(line: 1080, column: 5, scope: !5410)
!5412 = !DILocation(line: 1084, column: 14, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 1082, column: 5)
!5414 = !DILocation(line: 0, scope: !5406)
!5415 = !DILocation(line: 1090, column: 12, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 1090, column: 7)
!5417 = !DILocation(line: 1090, column: 7, scope: !5366)
!5418 = !DILocation(line: 1095, column: 9, scope: !5366)
!5419 = !DILocation(line: 1096, column: 11, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 1096, column: 7)
!5421 = !DILocation(line: 1096, column: 16, scope: !5420)
!5422 = !DILocation(line: 1096, column: 19, scope: !5420)
!5423 = !DILocation(line: 1096, column: 7, scope: !5366)
!5424 = !DILocation(line: 1098, column: 18, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 1098, column: 11)
!5426 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 1097, column: 5)
!5427 = !DILocation(line: 1098, column: 15, scope: !5425)
!5428 = !DILocation(line: 1098, column: 11, scope: !5426)
!5429 = !DILocation(line: 1099, column: 9, scope: !5425)
!5430 = !DILocation(line: 1099, column: 2, scope: !5425)
!5431 = !DILocation(line: 1103, column: 9, scope: !5425)
!5432 = !DILocation(line: 1103, column: 2, scope: !5425)
!5433 = !DILocation(line: 1112, column: 17, scope: !5388)
!5434 = !DILocation(line: 0, scope: !5388)
!5435 = !DILocation(line: 1113, column: 9, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 1113, column: 9)
!5437 = !DILocation(line: 1113, column: 9, scope: !5388)
!5438 = !DILocation(line: 1120, column: 5, scope: !5388)
!5439 = !DILocation(line: 1121, column: 3, scope: !5366)
!5440 = !DILocation(line: 1125, column: 19, scope: !5366)
!5441 = !DILocation(line: 1126, column: 16, scope: !5366)
!5442 = !DILocation(line: 1128, column: 3, scope: !5366)
!5443 = !DILocation(line: 1129, column: 3, scope: !5366)
!5444 = !DILocation(line: 1131, column: 3, scope: !5366)
!5445 = !DILocation(line: 1133, column: 8, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 1133, column: 7)
!5447 = !DILocation(line: 1133, column: 7, scope: !5366)
!5448 = !DILocation(line: 1138, column: 19, scope: !5366)
!5449 = !DILocation(line: 1138, column: 3, scope: !5366)
!5450 = !DILocation(line: 1139, column: 3, scope: !5366)
!5451 = !DILocation(line: 1140, column: 3, scope: !5366)
!5452 = !DILocation(line: 1142, column: 8, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 1142, column: 7)
!5454 = !DILocation(line: 1142, column: 7, scope: !5366)
!5455 = !DILocation(line: 1148, column: 3, scope: !5366)
!5456 = !DILocation(line: 1149, column: 3, scope: !5366)
!5457 = !DILocation(line: 1150, column: 1, scope: !5366)
!5458 = distinct !DISubprogram(name: "expand_doubleword_mult", scope: !3, file: !3, line: 1208, type: !5459, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5461)
!5459 = !DISubroutineType(types: !5460)
!5460 = !{!2090, !5, !2090, !2090, !2090, !2071, !2047}
!5461 = !{!5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473, !5474, !5475, !5476, !5477, !5478}
!5462 = !DILocalVariable(name: "mode", arg: 1, scope: !5458, file: !3, line: 1208, type: !5)
!5463 = !DILocalVariable(name: "op0", arg: 2, scope: !5458, file: !3, line: 1208, type: !2090)
!5464 = !DILocalVariable(name: "op1", arg: 3, scope: !5458, file: !3, line: 1208, type: !2090)
!5465 = !DILocalVariable(name: "target", arg: 4, scope: !5458, file: !3, line: 1208, type: !2090)
!5466 = !DILocalVariable(name: "umulp", arg: 5, scope: !5458, file: !3, line: 1209, type: !2071)
!5467 = !DILocalVariable(name: "methods", arg: 6, scope: !5458, file: !3, line: 1209, type: !2047)
!5468 = !DILocalVariable(name: "low", scope: !5458, file: !3, line: 1211, type: !2072)
!5469 = !DILocalVariable(name: "high", scope: !5458, file: !3, line: 1212, type: !2072)
!5470 = !DILocalVariable(name: "wordm1", scope: !5458, file: !3, line: 1213, type: !2090)
!5471 = !DILocalVariable(name: "product", scope: !5458, file: !3, line: 1214, type: !2090)
!5472 = !DILocalVariable(name: "adjust", scope: !5458, file: !3, line: 1214, type: !2090)
!5473 = !DILocalVariable(name: "product_high", scope: !5458, file: !3, line: 1214, type: !2090)
!5474 = !DILocalVariable(name: "temp", scope: !5458, file: !3, line: 1214, type: !2090)
!5475 = !DILocalVariable(name: "op0_high", scope: !5458, file: !3, line: 1216, type: !2090)
!5476 = !DILocalVariable(name: "op0_low", scope: !5458, file: !3, line: 1217, type: !2090)
!5477 = !DILocalVariable(name: "op1_high", scope: !5458, file: !3, line: 1218, type: !2090)
!5478 = !DILocalVariable(name: "op1_low", scope: !5458, file: !3, line: 1219, type: !2090)
!5479 = !DILocation(line: 0, scope: !5458)
!5480 = !DILocation(line: 1213, column: 16, scope: !5458)
!5481 = !DILocation(line: 1213, column: 35, scope: !5458)
!5482 = !DILocation(line: 1216, column: 18, scope: !5458)
!5483 = !DILocation(line: 1217, column: 17, scope: !5458)
!5484 = !DILocation(line: 1218, column: 18, scope: !5458)
!5485 = !DILocation(line: 1219, column: 17, scope: !5458)
!5486 = !DILocation(line: 1231, column: 7, scope: !5458)
!5487 = !DILocation(line: 1234, column: 28, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 1232, column: 5)
!5489 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1231, column: 7)
!5490 = !DILocation(line: 1234, column: 14, scope: !5488)
!5491 = !DILocation(line: 1236, column: 11, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 1236, column: 11)
!5493 = !DILocation(line: 0, scope: !5492)
!5494 = !DILocation(line: 1236, column: 11, scope: !5488)
!5495 = !DILocation(line: 1237, column: 13, scope: !5492)
!5496 = !DILocation(line: 1237, column: 2, scope: !5492)
!5497 = !DILocation(line: 1241, column: 11, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 1240, column: 2)
!5499 = !DILocation(line: 1243, column: 9, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 1243, column: 8)
!5501 = !DILocation(line: 1243, column: 8, scope: !5498)
!5502 = !DILocation(line: 1245, column: 29, scope: !5498)
!5503 = !DILocation(line: 1245, column: 15, scope: !5498)
!5504 = !DILocation(line: 1249, column: 12, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 1249, column: 11)
!5506 = !DILocation(line: 1249, column: 11, scope: !5488)
!5507 = !DILocation(line: 1253, column: 26, scope: !5458)
!5508 = !DILocation(line: 1253, column: 12, scope: !5458)
!5509 = !DILocation(line: 1255, column: 8, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1255, column: 7)
!5511 = !DILocation(line: 1255, column: 7, scope: !5458)
!5512 = !DILocation(line: 1260, column: 7, scope: !5458)
!5513 = !DILocation(line: 1263, column: 28, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 1261, column: 5)
!5515 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1260, column: 7)
!5516 = !DILocation(line: 1263, column: 14, scope: !5514)
!5517 = !DILocation(line: 1265, column: 11, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 1265, column: 11)
!5519 = !DILocation(line: 0, scope: !5518)
!5520 = !DILocation(line: 1265, column: 11, scope: !5514)
!5521 = !DILocation(line: 1266, column: 13, scope: !5518)
!5522 = !DILocation(line: 1266, column: 2, scope: !5518)
!5523 = !DILocation(line: 1270, column: 11, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 1269, column: 2)
!5525 = !DILocation(line: 1272, column: 9, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 1272, column: 8)
!5527 = !DILocation(line: 1272, column: 8, scope: !5524)
!5528 = !DILocation(line: 1274, column: 29, scope: !5524)
!5529 = !DILocation(line: 1274, column: 15, scope: !5524)
!5530 = !DILocation(line: 1278, column: 12, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 1278, column: 11)
!5532 = !DILocation(line: 1278, column: 11, scope: !5514)
!5533 = !DILocation(line: 1282, column: 24, scope: !5458)
!5534 = !DILocation(line: 1282, column: 10, scope: !5458)
!5535 = !DILocation(line: 1284, column: 8, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1284, column: 7)
!5537 = !DILocation(line: 1284, column: 7, scope: !5458)
!5538 = !DILocation(line: 1289, column: 26, scope: !5458)
!5539 = !DILocation(line: 1289, column: 12, scope: !5458)
!5540 = !DILocation(line: 1292, column: 7, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1292, column: 7)
!5542 = !DILocation(line: 1292, column: 14, scope: !5541)
!5543 = !DILocation(line: 1292, column: 18, scope: !5541)
!5544 = !DILocation(line: 1292, column: 7, scope: !5458)
!5545 = !DILocation(line: 1295, column: 7, scope: !5458)
!5546 = !DILocation(line: 1296, column: 15, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1295, column: 7)
!5548 = !DILocation(line: 1296, column: 5, scope: !5547)
!5549 = !DILocation(line: 1299, column: 15, scope: !5547)
!5550 = !DILocation(line: 0, scope: !5547)
!5551 = !DILocation(line: 1302, column: 8, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1302, column: 7)
!5553 = !DILocation(line: 1302, column: 7, scope: !5458)
!5554 = !DILocation(line: 1305, column: 18, scope: !5458)
!5555 = !DILocation(line: 1306, column: 26, scope: !5458)
!5556 = !DILocation(line: 1307, column: 5, scope: !5458)
!5557 = !DILocation(line: 1306, column: 12, scope: !5458)
!5558 = !DILocation(line: 1309, column: 3, scope: !5458)
!5559 = !DILocation(line: 1310, column: 3, scope: !5458)
!5560 = !DILocation(line: 1311, column: 1, scope: !5458)
!5561 = distinct !DISubprogram(name: "shift_optab_p", scope: !3, file: !3, line: 1353, type: !5320, scopeLine: 1354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5562)
!5562 = !{!5563}
!5563 = !DILocalVariable(name: "binoptab", arg: 1, scope: !5561, file: !3, line: 1353, type: !3291)
!5564 = !DILocation(line: 0, scope: !5561)
!5565 = !DILocation(line: 1355, column: 21, scope: !5561)
!5566 = !DILocation(line: 1355, column: 3, scope: !5561)
!5567 = !DILocation(line: 1367, column: 7, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 1356, column: 5)
!5569 = !DILocation(line: 0, scope: !5568)
!5570 = !DILocation(line: 1369, column: 1, scope: !5561)
!5571 = distinct !DISubprogram(name: "emit_libcall_block", scope: !3, file: !3, line: 3896, type: !5572, scopeLine: 3897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5574)
!5572 = !DISubroutineType(types: !5573)
!5573 = !{null, !2090, !2090, !2090, !2090}
!5574 = !{!5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582, !5583, !5590, !5593, !5597}
!5575 = !DILocalVariable(name: "insns", arg: 1, scope: !5571, file: !3, line: 3896, type: !2090)
!5576 = !DILocalVariable(name: "target", arg: 2, scope: !5571, file: !3, line: 3896, type: !2090)
!5577 = !DILocalVariable(name: "result", arg: 3, scope: !5571, file: !3, line: 3896, type: !2090)
!5578 = !DILocalVariable(name: "equiv", arg: 4, scope: !5571, file: !3, line: 3896, type: !2090)
!5579 = !DILocalVariable(name: "final_dest", scope: !5571, file: !3, line: 3898, type: !2090)
!5580 = !DILocalVariable(name: "next", scope: !5571, file: !3, line: 3899, type: !2090)
!5581 = !DILocalVariable(name: "last", scope: !5571, file: !3, line: 3899, type: !2090)
!5582 = !DILocalVariable(name: "insn", scope: !5571, file: !3, line: 3899, type: !2090)
!5583 = !DILocalVariable(name: "note", scope: !5584, file: !3, line: 3914, type: !2090)
!5584 = distinct !DILexicalBlock(scope: !5585, file: !3, line: 3913, column: 4)
!5585 = distinct !DILexicalBlock(scope: !5586, file: !3, line: 3912, column: 6)
!5586 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 3911, column: 7)
!5587 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 3911, column: 7)
!5588 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 3910, column: 5)
!5589 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 3909, column: 7)
!5590 = !DILocalVariable(name: "lp_nr", scope: !5591, file: !3, line: 3917, type: !2072)
!5591 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 3916, column: 8)
!5592 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 3915, column: 10)
!5593 = !DILocalVariable(name: "set", scope: !5594, file: !3, line: 3942, type: !2090)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 3941, column: 5)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 3940, column: 3)
!5596 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 3940, column: 3)
!5597 = !DILocalVariable(name: "data", scope: !5598, file: !3, line: 3949, type: !3227)
!5598 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 3948, column: 2)
!5599 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 3946, column: 11)
!5600 = !DILocation(line: 0, scope: !5571)
!5601 = !DILocation(line: 3903, column: 9, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 3903, column: 7)
!5603 = !DILocation(line: 3903, column: 24, scope: !5602)
!5604 = !DILocation(line: 3903, column: 27, scope: !5602)
!5605 = !DILocation(line: 3903, column: 7, scope: !5571)
!5606 = !DILocation(line: 3904, column: 27, scope: !5602)
!5607 = !DILocation(line: 3904, column: 14, scope: !5602)
!5608 = !DILocation(line: 3904, column: 5, scope: !5602)
!5609 = !DILocation(line: 3909, column: 7, scope: !5589)
!5610 = !DILocation(line: 3909, column: 32, scope: !5589)
!5611 = !DILocation(line: 3909, column: 35, scope: !5589)
!5612 = !DILocation(line: 3909, column: 7, scope: !5571)
!5613 = !DILocation(line: 3911, column: 7, scope: !5587)
!5614 = !DILocation(line: 0, scope: !5587)
!5615 = !DILocation(line: 3912, column: 6, scope: !5585)
!5616 = !DILocation(line: 3912, column: 6, scope: !5586)
!5617 = !DILocation(line: 3914, column: 17, scope: !5584)
!5618 = !DILocation(line: 0, scope: !5584)
!5619 = !DILocation(line: 3915, column: 10, scope: !5592)
!5620 = !DILocation(line: 3915, column: 10, scope: !5584)
!5621 = !DILocation(line: 3917, column: 15, scope: !5591)
!5622 = !DILocation(line: 0, scope: !5591)
!5623 = !DILocation(line: 3918, column: 18, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 3918, column: 7)
!5625 = !DILocation(line: 3919, column: 5, scope: !5624)
!5626 = !DILocation(line: 3911, column: 39, scope: !5586)
!5627 = !DILocation(line: 3911, column: 7, scope: !5586)
!5628 = distinct !{!5628, !5613, !5629}
!5629 = !DILocation(line: 3921, column: 4, scope: !5587)
!5630 = !DILocation(line: 3929, column: 12, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 3929, column: 7)
!5632 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 3924, column: 5)
!5633 = !DILocation(line: 0, scope: !5631)
!5634 = !DILocation(line: 3929, column: 7, scope: !5631)
!5635 = !DILocation(line: 3930, column: 6, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 3930, column: 6)
!5637 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 3929, column: 7)
!5638 = !DILocation(line: 3930, column: 6, scope: !5637)
!5639 = !DILocation(line: 3931, column: 4, scope: !5636)
!5640 = !DILocation(line: 3929, column: 39, scope: !5637)
!5641 = !DILocation(line: 3929, column: 7, scope: !5637)
!5642 = distinct !{!5642, !5634, !5643}
!5643 = !DILocation(line: 3931, column: 52, scope: !5631)
!5644 = !DILocation(line: 3940, column: 8, scope: !5596)
!5645 = !DILocation(line: 0, scope: !5598)
!5646 = !DILocation(line: 0, scope: !5596)
!5647 = !DILocation(line: 3940, column: 3, scope: !5596)
!5648 = !DILocation(line: 3942, column: 17, scope: !5594)
!5649 = !DILocation(line: 0, scope: !5594)
!5650 = !DILocation(line: 3944, column: 14, scope: !5594)
!5651 = !DILocation(line: 3946, column: 15, scope: !5599)
!5652 = !DILocation(line: 3946, column: 20, scope: !5599)
!5653 = !DILocation(line: 3946, column: 23, scope: !5599)
!5654 = !DILocation(line: 3947, column: 4, scope: !5599)
!5655 = !DILocation(line: 3947, column: 7, scope: !5599)
!5656 = !DILocation(line: 3947, column: 30, scope: !5599)
!5657 = !DILocation(line: 3946, column: 11, scope: !5594)
!5658 = !DILocation(line: 3949, column: 4, scope: !5598)
!5659 = !DILocation(line: 3951, column: 18, scope: !5598)
!5660 = !DILocation(line: 3951, column: 16, scope: !5598)
!5661 = !DILocation(line: 3952, column: 15, scope: !5598)
!5662 = !DILocation(line: 3953, column: 14, scope: !5598)
!5663 = !DILocation(line: 3954, column: 19, scope: !5598)
!5664 = !DILocation(line: 3955, column: 17, scope: !5598)
!5665 = !DILocation(line: 3955, column: 4, scope: !5598)
!5666 = !DILocation(line: 3956, column: 15, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5598, file: !3, line: 3956, column: 8)
!5668 = !DILocation(line: 3956, column: 10, scope: !5667)
!5669 = !DILocation(line: 3956, column: 8, scope: !5598)
!5670 = !DILocation(line: 3958, column: 12, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5672, file: !3, line: 3958, column: 12)
!5672 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 3957, column: 6)
!5673 = !DILocation(line: 3958, column: 12, scope: !5672)
!5674 = !DILocation(line: 3959, column: 3, scope: !5671)
!5675 = !DILocation(line: 3959, column: 32, scope: !5671)
!5676 = !DILocation(line: 3963, column: 12, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5672, file: !3, line: 3963, column: 12)
!5678 = !DILocation(line: 3963, column: 12, scope: !5672)
!5679 = !DILocation(line: 3964, column: 22, scope: !5677)
!5680 = !DILocation(line: 3964, column: 3, scope: !5677)
!5681 = !DILocation(line: 3964, column: 20, scope: !5677)
!5682 = !DILocation(line: 3966, column: 8, scope: !5672)
!5683 = !DILocation(line: 3967, column: 6, scope: !5672)
!5684 = !DILocation(line: 3968, column: 2, scope: !5599)
!5685 = !DILocation(line: 3968, column: 2, scope: !5598)
!5686 = !DILocation(line: 3972, column: 11, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 3972, column: 11)
!5688 = !DILocation(line: 3977, column: 8, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 3977, column: 3)
!5690 = !DILocation(line: 0, scope: !5689)
!5691 = !DILocation(line: 3977, column: 3, scope: !5689)
!5692 = !DILocation(line: 3979, column: 14, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5694, file: !3, line: 3978, column: 5)
!5694 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 3977, column: 3)
!5695 = !DILocation(line: 3981, column: 7, scope: !5693)
!5696 = !DILocation(line: 3977, column: 3, scope: !5694)
!5697 = distinct !{!5697, !5691, !5698}
!5698 = !DILocation(line: 3982, column: 5, scope: !5689)
!5699 = !DILocation(line: 3984, column: 10, scope: !5571)
!5700 = !DILocation(line: 3985, column: 7, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 3985, column: 7)
!5702 = !DILocation(line: 3985, column: 53, scope: !5701)
!5703 = !DILocation(line: 3986, column: 7, scope: !5701)
!5704 = !DILocation(line: 3985, column: 7, scope: !5571)
!5705 = !DILocation(line: 3987, column: 43, scope: !5701)
!5706 = !DILocation(line: 3987, column: 5, scope: !5701)
!5707 = !DILocation(line: 3989, column: 18, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 3989, column: 7)
!5709 = !DILocation(line: 3989, column: 7, scope: !5571)
!5710 = !DILocation(line: 3990, column: 5, scope: !5708)
!5711 = !DILocation(line: 3991, column: 1, scope: !5571)
!5712 = distinct !DISubprogram(name: "sign_expand_binop", scope: !3, file: !3, line: 2238, type: !5713, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5715)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{!2090, !5, !3291, !3291, !2090, !2090, !2090, !2072, !2047}
!5715 = !{!5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726}
!5716 = !DILocalVariable(name: "mode", arg: 1, scope: !5712, file: !3, line: 2238, type: !5)
!5717 = !DILocalVariable(name: "uoptab", arg: 2, scope: !5712, file: !3, line: 2238, type: !3291)
!5718 = !DILocalVariable(name: "soptab", arg: 3, scope: !5712, file: !3, line: 2238, type: !3291)
!5719 = !DILocalVariable(name: "op0", arg: 4, scope: !5712, file: !3, line: 2239, type: !2090)
!5720 = !DILocalVariable(name: "op1", arg: 5, scope: !5712, file: !3, line: 2239, type: !2090)
!5721 = !DILocalVariable(name: "target", arg: 6, scope: !5712, file: !3, line: 2239, type: !2090)
!5722 = !DILocalVariable(name: "unsignedp", arg: 7, scope: !5712, file: !3, line: 2239, type: !2072)
!5723 = !DILocalVariable(name: "methods", arg: 8, scope: !5712, file: !3, line: 2240, type: !2047)
!5724 = !DILocalVariable(name: "temp", scope: !5712, file: !3, line: 2242, type: !2090)
!5725 = !DILocalVariable(name: "direct_optab", scope: !5712, file: !3, line: 2243, type: !3291)
!5726 = !DILocalVariable(name: "wide_soptab", scope: !5712, file: !3, line: 2244, type: !3264)
!5727 = !DILocation(line: 0, scope: !5712)
!5728 = !DILocation(line: 2243, column: 24, scope: !5712)
!5729 = !DILocation(line: 2244, column: 3, scope: !5712)
!5730 = !DILocation(line: 2247, column: 10, scope: !5712)
!5731 = !DILocation(line: 2249, column: 7, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 2249, column: 7)
!5733 = !DILocation(line: 2249, column: 23, scope: !5732)
!5734 = !DILocation(line: 2249, column: 12, scope: !5732)
!5735 = !DILocation(line: 2254, column: 17, scope: !5712)
!5736 = !DILocation(line: 2255, column: 3, scope: !5712)
!5737 = !DILocation(line: 2255, column: 39, scope: !5712)
!5738 = !DILocation(line: 2255, column: 49, scope: !5712)
!5739 = !DILocation(line: 2258, column: 15, scope: !5712)
!5740 = !DILocation(line: 2258, column: 27, scope: !5712)
!5741 = !DILocation(line: 2260, column: 10, scope: !5712)
!5742 = !DILocation(line: 2264, column: 12, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 2264, column: 7)
!5744 = !DILocation(line: 2264, column: 20, scope: !5743)
!5745 = !DILocation(line: 2264, column: 17, scope: !5743)
!5746 = !DILocation(line: 2265, column: 12, scope: !5743)
!5747 = !DILocation(line: 2265, column: 5, scope: !5743)
!5748 = !DILocation(line: 2267, column: 7, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 2267, column: 7)
!5750 = !DILocation(line: 2267, column: 23, scope: !5749)
!5751 = !DILocation(line: 2267, column: 12, scope: !5749)
!5752 = !DILocation(line: 2271, column: 10, scope: !5712)
!5753 = !DILocation(line: 2272, column: 7, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 2272, column: 7)
!5755 = !DILocation(line: 2272, column: 23, scope: !5754)
!5756 = !DILocation(line: 2272, column: 12, scope: !5754)
!5757 = !DILocation(line: 2276, column: 10, scope: !5712)
!5758 = !DILocation(line: 2278, column: 12, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 2278, column: 7)
!5760 = !DILocation(line: 2278, column: 7, scope: !5712)
!5761 = !DILocation(line: 2280, column: 7, scope: !5712)
!5762 = !DILocation(line: 2281, column: 12, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 2280, column: 7)
!5764 = !DILocation(line: 2281, column: 5, scope: !5763)
!5765 = !DILocation(line: 2284, column: 1, scope: !5712)
!5766 = distinct !DISubprogram(name: "expand_twoval_unop", scope: !3, file: !3, line: 2298, type: !5767, scopeLine: 2300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5769)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{!2072, !3291, !2090, !2090, !2090, !2072}
!5769 = !{!5770, !5771, !5772, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5780, !5783, !5784, !5785, !5786, !5794, !5795}
!5770 = !DILocalVariable(name: "unoptab", arg: 1, scope: !5766, file: !3, line: 2298, type: !3291)
!5771 = !DILocalVariable(name: "op0", arg: 2, scope: !5766, file: !3, line: 2298, type: !2090)
!5772 = !DILocalVariable(name: "targ0", arg: 3, scope: !5766, file: !3, line: 2298, type: !2090)
!5773 = !DILocalVariable(name: "targ1", arg: 4, scope: !5766, file: !3, line: 2298, type: !2090)
!5774 = !DILocalVariable(name: "unsignedp", arg: 5, scope: !5766, file: !3, line: 2299, type: !2072)
!5775 = !DILocalVariable(name: "mode", scope: !5766, file: !3, line: 2301, type: !5)
!5776 = !DILocalVariable(name: "mclass", scope: !5766, file: !3, line: 2302, type: !2025)
!5777 = !DILocalVariable(name: "wider_mode", scope: !5766, file: !3, line: 2303, type: !5)
!5778 = !DILocalVariable(name: "entry_last", scope: !5766, file: !3, line: 2304, type: !2090)
!5779 = !DILocalVariable(name: "last", scope: !5766, file: !3, line: 2305, type: !2090)
!5780 = !DILocalVariable(name: "icode", scope: !5781, file: !3, line: 2319, type: !2072)
!5781 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 2318, column: 5)
!5782 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 2317, column: 7)
!5783 = !DILocalVariable(name: "mode0", scope: !5781, file: !3, line: 2320, type: !5)
!5784 = !DILocalVariable(name: "pat", scope: !5781, file: !3, line: 2321, type: !2090)
!5785 = !DILocalVariable(name: "xop0", scope: !5781, file: !3, line: 2322, type: !2090)
!5786 = !DILocalVariable(name: "t0", scope: !5787, file: !3, line: 2358, type: !2090)
!5787 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 2357, column: 6)
!5788 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 2355, column: 8)
!5789 = distinct !DILexicalBlock(scope: !5790, file: !3, line: 2354, column: 2)
!5790 = distinct !DILexicalBlock(scope: !5791, file: !3, line: 2351, column: 7)
!5791 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 2351, column: 7)
!5792 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 2350, column: 5)
!5793 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 2349, column: 7)
!5794 = !DILocalVariable(name: "t1", scope: !5787, file: !3, line: 2359, type: !2090)
!5795 = !DILocalVariable(name: "cop0", scope: !5787, file: !3, line: 2360, type: !2090)
!5796 = !DILocation(line: 0, scope: !5766)
!5797 = !DILocation(line: 2301, column: 28, scope: !5766)
!5798 = !DILocation(line: 2304, column: 20, scope: !5766)
!5799 = !DILocation(line: 2307, column: 12, scope: !5766)
!5800 = !DILocation(line: 2309, column: 7, scope: !5766)
!5801 = !DILocation(line: 2310, column: 13, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 2309, column: 7)
!5803 = !DILocation(line: 2310, column: 5, scope: !5802)
!5804 = !DILocation(line: 2311, column: 8, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 2311, column: 7)
!5806 = !DILocation(line: 2311, column: 7, scope: !5766)
!5807 = !DILocation(line: 2312, column: 13, scope: !5805)
!5808 = !DILocation(line: 2312, column: 5, scope: !5805)
!5809 = !DILocation(line: 2315, column: 10, scope: !5766)
!5810 = !DILocation(line: 2317, column: 38, scope: !5782)
!5811 = !DILocation(line: 2317, column: 48, scope: !5782)
!5812 = !DILocation(line: 2317, column: 7, scope: !5766)
!5813 = !DILocation(line: 0, scope: !5781)
!5814 = !DILocation(line: 2320, column: 33, scope: !5781)
!5815 = !DILocation(line: 2320, column: 50, scope: !5781)
!5816 = !DILocation(line: 2320, column: 61, scope: !5781)
!5817 = !DILocation(line: 2324, column: 11, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 2324, column: 11)
!5819 = !DILocation(line: 2324, column: 27, scope: !5818)
!5820 = !DILocation(line: 2325, column: 4, scope: !5818)
!5821 = !DILocation(line: 2325, column: 7, scope: !5818)
!5822 = !DILocation(line: 2325, column: 23, scope: !5818)
!5823 = !DILocation(line: 2324, column: 11, scope: !5781)
!5824 = !DILocation(line: 2326, column: 9, scope: !5818)
!5825 = !DILocation(line: 2326, column: 2, scope: !5818)
!5826 = !DILocation(line: 2329, column: 40, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 2329, column: 11)
!5828 = !DILocation(line: 2329, column: 12, scope: !5827)
!5829 = !DILocation(line: 2329, column: 11, scope: !5781)
!5830 = !DILocation(line: 2330, column: 9, scope: !5827)
!5831 = !DILocation(line: 2330, column: 2, scope: !5827)
!5832 = !DILocation(line: 2334, column: 7, scope: !5781)
!5833 = !DILocation(line: 2335, column: 7, scope: !5781)
!5834 = !DILocation(line: 2337, column: 13, scope: !5781)
!5835 = !DILocation(line: 2338, column: 11, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 2338, column: 11)
!5837 = !DILocation(line: 2338, column: 11, scope: !5781)
!5838 = !DILocation(line: 2340, column: 4, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5836, file: !3, line: 2339, column: 2)
!5840 = !DILocation(line: 2341, column: 4, scope: !5839)
!5841 = !DILocation(line: 2344, column: 2, scope: !5836)
!5842 = !DILocation(line: 2345, column: 5, scope: !5782)
!5843 = !DILocation(line: 2349, column: 7, scope: !5793)
!5844 = !DILocation(line: 2351, column: 12, scope: !5791)
!5845 = !DILocation(line: 0, scope: !5791)
!5846 = !DILocation(line: 2352, column: 16, scope: !5790)
!5847 = !DILocation(line: 2351, column: 7, scope: !5791)
!5848 = !DILocation(line: 2355, column: 8, scope: !5788)
!5849 = !DILocation(line: 2355, column: 45, scope: !5788)
!5850 = !DILocation(line: 2356, column: 8, scope: !5788)
!5851 = !DILocation(line: 2355, column: 8, scope: !5789)
!5852 = !DILocation(line: 2358, column: 17, scope: !5787)
!5853 = !DILocation(line: 0, scope: !5787)
!5854 = !DILocation(line: 2359, column: 17, scope: !5787)
!5855 = !DILocation(line: 2360, column: 19, scope: !5787)
!5856 = !DILocation(line: 2362, column: 12, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 2362, column: 12)
!5858 = !DILocation(line: 2362, column: 12, scope: !5787)
!5859 = !DILocation(line: 2364, column: 5, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 2363, column: 3)
!5861 = !DILocation(line: 2365, column: 5, scope: !5860)
!5862 = !DILocation(line: 2366, column: 5, scope: !5860)
!5863 = !DILocation(line: 2369, column: 3, scope: !5857)
!5864 = !DILocation(line: 2370, column: 6, scope: !5788)
!5865 = !DILocation(line: 2351, column: 7, scope: !5790)
!5866 = distinct !{!5866, !5847, !5867}
!5867 = !DILocation(line: 2371, column: 2, scope: !5791)
!5868 = !DILocation(line: 2374, column: 3, scope: !5766)
!5869 = !DILocation(line: 2375, column: 3, scope: !5766)
!5870 = !DILocation(line: 2376, column: 1, scope: !5766)
!5871 = distinct !DISubprogram(name: "expand_twoval_binop", scope: !3, file: !3, line: 2391, type: !5872, scopeLine: 2393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5874)
!5872 = !DISubroutineType(types: !5873)
!5873 = !{!2072, !3291, !2090, !2090, !2090, !2090, !2072}
!5874 = !{!5875, !5876, !5877, !5878, !5879, !5880, !5881, !5882, !5883, !5884, !5885, !5886, !5889, !5890, !5891, !5892, !5893, !5894, !5902, !5903, !5904}
!5875 = !DILocalVariable(name: "binoptab", arg: 1, scope: !5871, file: !3, line: 2391, type: !3291)
!5876 = !DILocalVariable(name: "op0", arg: 2, scope: !5871, file: !3, line: 2391, type: !2090)
!5877 = !DILocalVariable(name: "op1", arg: 3, scope: !5871, file: !3, line: 2391, type: !2090)
!5878 = !DILocalVariable(name: "targ0", arg: 4, scope: !5871, file: !3, line: 2391, type: !2090)
!5879 = !DILocalVariable(name: "targ1", arg: 5, scope: !5871, file: !3, line: 2391, type: !2090)
!5880 = !DILocalVariable(name: "unsignedp", arg: 6, scope: !5871, file: !3, line: 2392, type: !2072)
!5881 = !DILocalVariable(name: "mode", scope: !5871, file: !3, line: 2394, type: !5)
!5882 = !DILocalVariable(name: "mclass", scope: !5871, file: !3, line: 2395, type: !2025)
!5883 = !DILocalVariable(name: "wider_mode", scope: !5871, file: !3, line: 2396, type: !5)
!5884 = !DILocalVariable(name: "entry_last", scope: !5871, file: !3, line: 2397, type: !2090)
!5885 = !DILocalVariable(name: "last", scope: !5871, file: !3, line: 2398, type: !2090)
!5886 = !DILocalVariable(name: "icode", scope: !5887, file: !3, line: 2412, type: !2072)
!5887 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 2411, column: 5)
!5888 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 2410, column: 7)
!5889 = !DILocalVariable(name: "mode0", scope: !5887, file: !3, line: 2413, type: !5)
!5890 = !DILocalVariable(name: "mode1", scope: !5887, file: !3, line: 2414, type: !5)
!5891 = !DILocalVariable(name: "pat", scope: !5887, file: !3, line: 2415, type: !2090)
!5892 = !DILocalVariable(name: "xop0", scope: !5887, file: !3, line: 2416, type: !2090)
!5893 = !DILocalVariable(name: "xop1", scope: !5887, file: !3, line: 2416, type: !2090)
!5894 = !DILocalVariable(name: "t0", scope: !5895, file: !3, line: 2475, type: !2090)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 2474, column: 6)
!5896 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 2472, column: 8)
!5897 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 2471, column: 2)
!5898 = distinct !DILexicalBlock(scope: !5899, file: !3, line: 2468, column: 7)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 2468, column: 7)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 2467, column: 5)
!5901 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 2466, column: 7)
!5902 = !DILocalVariable(name: "t1", scope: !5895, file: !3, line: 2476, type: !2090)
!5903 = !DILocalVariable(name: "cop0", scope: !5895, file: !3, line: 2477, type: !2090)
!5904 = !DILocalVariable(name: "cop1", scope: !5895, file: !3, line: 2478, type: !2090)
!5905 = !DILocation(line: 0, scope: !5871)
!5906 = !DILocation(line: 2394, column: 28, scope: !5871)
!5907 = !DILocation(line: 2397, column: 20, scope: !5871)
!5908 = !DILocation(line: 2400, column: 12, scope: !5871)
!5909 = !DILocation(line: 2402, column: 7, scope: !5871)
!5910 = !DILocation(line: 2403, column: 13, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 2402, column: 7)
!5912 = !DILocation(line: 2403, column: 5, scope: !5911)
!5913 = !DILocation(line: 2404, column: 8, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 2404, column: 7)
!5915 = !DILocation(line: 2404, column: 7, scope: !5871)
!5916 = !DILocation(line: 2405, column: 13, scope: !5914)
!5917 = !DILocation(line: 2405, column: 5, scope: !5914)
!5918 = !DILocation(line: 2408, column: 10, scope: !5871)
!5919 = !DILocation(line: 2410, column: 39, scope: !5888)
!5920 = !DILocation(line: 2410, column: 49, scope: !5888)
!5921 = !DILocation(line: 2410, column: 7, scope: !5871)
!5922 = !DILocation(line: 0, scope: !5887)
!5923 = !DILocation(line: 2413, column: 33, scope: !5887)
!5924 = !DILocation(line: 2413, column: 50, scope: !5887)
!5925 = !DILocation(line: 2413, column: 61, scope: !5887)
!5926 = !DILocation(line: 2414, column: 61, scope: !5887)
!5927 = !DILocation(line: 2419, column: 63, scope: !5887)
!5928 = !DILocation(line: 2419, column: 14, scope: !5887)
!5929 = !DILocation(line: 2420, column: 14, scope: !5887)
!5930 = !DILocation(line: 2428, column: 11, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 2428, column: 11)
!5932 = !DILocation(line: 2428, column: 26, scope: !5931)
!5933 = !DILocation(line: 2428, column: 44, scope: !5931)
!5934 = !DILocation(line: 2428, column: 35, scope: !5931)
!5935 = !DILocation(line: 2430, column: 10, scope: !5931)
!5936 = !DILocation(line: 2430, column: 25, scope: !5931)
!5937 = !DILocation(line: 2429, column: 9, scope: !5931)
!5938 = !DILocation(line: 2429, column: 2, scope: !5931)
!5939 = !DILocation(line: 2435, column: 11, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 2435, column: 11)
!5941 = !DILocation(line: 2435, column: 26, scope: !5940)
!5942 = !DILocation(line: 2435, column: 44, scope: !5940)
!5943 = !DILocation(line: 2435, column: 35, scope: !5940)
!5944 = !DILocation(line: 2437, column: 10, scope: !5940)
!5945 = !DILocation(line: 2437, column: 25, scope: !5940)
!5946 = !DILocation(line: 2436, column: 9, scope: !5940)
!5947 = !DILocation(line: 2436, column: 2, scope: !5940)
!5948 = !DILocation(line: 2443, column: 40, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 2443, column: 11)
!5950 = !DILocation(line: 2443, column: 12, scope: !5949)
!5951 = !DILocation(line: 2443, column: 11, scope: !5887)
!5952 = !DILocation(line: 2444, column: 9, scope: !5949)
!5953 = !DILocation(line: 2444, column: 2, scope: !5949)
!5954 = !DILocation(line: 2446, column: 40, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 2446, column: 11)
!5956 = !DILocation(line: 2446, column: 12, scope: !5955)
!5957 = !DILocation(line: 2446, column: 11, scope: !5887)
!5958 = !DILocation(line: 2447, column: 9, scope: !5955)
!5959 = !DILocation(line: 2447, column: 2, scope: !5955)
!5960 = !DILocation(line: 2451, column: 7, scope: !5887)
!5961 = !DILocation(line: 2452, column: 7, scope: !5887)
!5962 = !DILocation(line: 2454, column: 13, scope: !5887)
!5963 = !DILocation(line: 2455, column: 11, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 2455, column: 11)
!5965 = !DILocation(line: 2455, column: 11, scope: !5887)
!5966 = !DILocation(line: 2457, column: 4, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 2456, column: 2)
!5968 = !DILocation(line: 2458, column: 4, scope: !5967)
!5969 = !DILocation(line: 2461, column: 2, scope: !5964)
!5970 = !DILocation(line: 2462, column: 5, scope: !5888)
!5971 = !DILocation(line: 2466, column: 7, scope: !5901)
!5972 = !DILocation(line: 2468, column: 12, scope: !5899)
!5973 = !DILocation(line: 0, scope: !5899)
!5974 = !DILocation(line: 2469, column: 16, scope: !5898)
!5975 = !DILocation(line: 2468, column: 7, scope: !5899)
!5976 = !DILocation(line: 2472, column: 8, scope: !5896)
!5977 = !DILocation(line: 2472, column: 46, scope: !5896)
!5978 = !DILocation(line: 2473, column: 8, scope: !5896)
!5979 = !DILocation(line: 2472, column: 8, scope: !5897)
!5980 = !DILocation(line: 2475, column: 17, scope: !5895)
!5981 = !DILocation(line: 0, scope: !5895)
!5982 = !DILocation(line: 2476, column: 17, scope: !5895)
!5983 = !DILocation(line: 2477, column: 19, scope: !5895)
!5984 = !DILocation(line: 2478, column: 19, scope: !5895)
!5985 = !DILocation(line: 2480, column: 12, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 2480, column: 12)
!5987 = !DILocation(line: 2480, column: 12, scope: !5895)
!5988 = !DILocation(line: 2483, column: 5, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 2482, column: 3)
!5990 = !DILocation(line: 2484, column: 5, scope: !5989)
!5991 = !DILocation(line: 2485, column: 5, scope: !5989)
!5992 = !DILocation(line: 2488, column: 3, scope: !5986)
!5993 = !DILocation(line: 2489, column: 6, scope: !5896)
!5994 = !DILocation(line: 2468, column: 7, scope: !5898)
!5995 = distinct !{!5995, !5975, !5996}
!5996 = !DILocation(line: 2490, column: 2, scope: !5899)
!5997 = !DILocation(line: 2493, column: 3, scope: !5871)
!5998 = !DILocation(line: 2494, column: 3, scope: !5871)
!5999 = !DILocation(line: 2495, column: 1, scope: !5871)
!6000 = distinct !DISubprogram(name: "expand_twoval_binop_libfunc", scope: !3, file: !3, line: 2507, type: !6001, scopeLine: 2509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6003)
!6001 = !DISubroutineType(types: !6002)
!6002 = !{!2071, !3291, !2090, !2090, !2090, !2090, !384}
!6003 = !{!6004, !6005, !6006, !6007, !6008, !6009, !6010, !6011, !6012, !6013, !6014}
!6004 = !DILocalVariable(name: "binoptab", arg: 1, scope: !6000, file: !3, line: 2507, type: !3291)
!6005 = !DILocalVariable(name: "op0", arg: 2, scope: !6000, file: !3, line: 2507, type: !2090)
!6006 = !DILocalVariable(name: "op1", arg: 3, scope: !6000, file: !3, line: 2507, type: !2090)
!6007 = !DILocalVariable(name: "targ0", arg: 4, scope: !6000, file: !3, line: 2508, type: !2090)
!6008 = !DILocalVariable(name: "targ1", arg: 5, scope: !6000, file: !3, line: 2508, type: !2090)
!6009 = !DILocalVariable(name: "code", arg: 6, scope: !6000, file: !3, line: 2508, type: !384)
!6010 = !DILocalVariable(name: "mode", scope: !6000, file: !3, line: 2510, type: !5)
!6011 = !DILocalVariable(name: "libval_mode", scope: !6000, file: !3, line: 2511, type: !5)
!6012 = !DILocalVariable(name: "libval", scope: !6000, file: !3, line: 2512, type: !2090)
!6013 = !DILocalVariable(name: "insns", scope: !6000, file: !3, line: 2513, type: !2090)
!6014 = !DILocalVariable(name: "libfunc", scope: !6000, file: !3, line: 2514, type: !2090)
!6015 = !DILocation(line: 0, scope: !6000)
!6016 = !DILocation(line: 2517, column: 3, scope: !6000)
!6017 = !DILocation(line: 2519, column: 10, scope: !6000)
!6018 = !DILocation(line: 2520, column: 13, scope: !6000)
!6019 = !DILocation(line: 2521, column: 8, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 2521, column: 7)
!6021 = !DILocation(line: 2521, column: 7, scope: !6000)
!6022 = !DILocation(line: 2526, column: 45, scope: !6000)
!6023 = !DILocation(line: 2526, column: 43, scope: !6000)
!6024 = !DILocation(line: 2526, column: 17, scope: !6000)
!6025 = !DILocation(line: 2528, column: 3, scope: !6000)
!6026 = !DILocation(line: 2529, column: 12, scope: !6000)
!6027 = !DILocation(line: 2535, column: 5, scope: !6000)
!6028 = !DILocation(line: 2535, column: 17, scope: !6000)
!6029 = !DILocation(line: 2534, column: 12, scope: !6000)
!6030 = !DILocation(line: 2536, column: 11, scope: !6000)
!6031 = !DILocation(line: 2537, column: 3, scope: !6000)
!6032 = !DILocation(line: 2539, column: 30, scope: !6000)
!6033 = !DILocation(line: 2540, column: 9, scope: !6000)
!6034 = !DILocation(line: 2539, column: 3, scope: !6000)
!6035 = !DILocation(line: 2542, column: 3, scope: !6000)
!6036 = !DILocation(line: 2543, column: 1, scope: !6000)
!6037 = distinct !DISubprogram(name: "expand_simple_unop", scope: !3, file: !3, line: 2550, type: !6038, scopeLine: 2552, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6040)
!6038 = !DISubroutineType(types: !6039)
!6039 = !{!2090, !5, !384, !2090, !2090, !2072}
!6040 = !{!6041, !6042, !6043, !6044, !6045, !6046}
!6041 = !DILocalVariable(name: "mode", arg: 1, scope: !6037, file: !3, line: 2550, type: !5)
!6042 = !DILocalVariable(name: "code", arg: 2, scope: !6037, file: !3, line: 2550, type: !384)
!6043 = !DILocalVariable(name: "op0", arg: 3, scope: !6037, file: !3, line: 2550, type: !2090)
!6044 = !DILocalVariable(name: "target", arg: 4, scope: !6037, file: !3, line: 2551, type: !2090)
!6045 = !DILocalVariable(name: "unsignedp", arg: 5, scope: !6037, file: !3, line: 2551, type: !2072)
!6046 = !DILocalVariable(name: "unop", scope: !6037, file: !3, line: 2553, type: !3291)
!6047 = !DILocation(line: 0, scope: !6037)
!6048 = !DILocation(line: 2553, column: 16, scope: !6037)
!6049 = !DILocation(line: 2554, column: 3, scope: !6037)
!6050 = !DILocation(line: 2556, column: 10, scope: !6037)
!6051 = !DILocation(line: 2556, column: 3, scope: !6037)
!6052 = distinct !DISubprogram(name: "expand_unop", scope: !3, file: !3, line: 3088, type: !6053, scopeLine: 3090, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6055)
!6053 = !DISubroutineType(types: !6054)
!6054 = !{!2090, !5, !3291, !2090, !2090, !2072}
!6055 = !{!6056, !6057, !6058, !6059, !6060, !6061, !6062, !6063, !6064, !6065, !6072, !6073, !6076, !6077, !6081, !6082, !6085, !6086, !6087, !6088, !6096, !6097, !6100}
!6056 = !DILocalVariable(name: "mode", arg: 1, scope: !6052, file: !3, line: 3088, type: !5)
!6057 = !DILocalVariable(name: "unoptab", arg: 2, scope: !6052, file: !3, line: 3088, type: !3291)
!6058 = !DILocalVariable(name: "op0", arg: 3, scope: !6052, file: !3, line: 3088, type: !2090)
!6059 = !DILocalVariable(name: "target", arg: 4, scope: !6052, file: !3, line: 3088, type: !2090)
!6060 = !DILocalVariable(name: "unsignedp", arg: 5, scope: !6052, file: !3, line: 3089, type: !2072)
!6061 = !DILocalVariable(name: "mclass", scope: !6052, file: !3, line: 3091, type: !2025)
!6062 = !DILocalVariable(name: "wider_mode", scope: !6052, file: !3, line: 3092, type: !5)
!6063 = !DILocalVariable(name: "temp", scope: !6052, file: !3, line: 3093, type: !2090)
!6064 = !DILocalVariable(name: "libfunc", scope: !6052, file: !3, line: 3094, type: !2090)
!6065 = !DILocalVariable(name: "xop0", scope: !6066, file: !3, line: 3145, type: !2090)
!6066 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 3144, column: 4)
!6067 = distinct !DILexicalBlock(scope: !6068, file: !3, line: 3143, column: 6)
!6068 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 3142, column: 7)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 3139, column: 5)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 3139, column: 5)
!6071 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3138, column: 7)
!6072 = !DILocalVariable(name: "last", scope: !6066, file: !3, line: 3146, type: !2090)
!6073 = !DILocalVariable(name: "i", scope: !6074, file: !3, line: 3185, type: !2072)
!6074 = distinct !DILexicalBlock(scope: !6075, file: !3, line: 3184, column: 5)
!6075 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3180, column: 7)
!6076 = !DILocalVariable(name: "insns", scope: !6074, file: !3, line: 3186, type: !2090)
!6077 = !DILocalVariable(name: "target_piece", scope: !6078, file: !3, line: 3196, type: !2090)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 3195, column: 2)
!6079 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 3194, column: 7)
!6080 = distinct !DILexicalBlock(scope: !6074, file: !3, line: 3194, column: 7)
!6081 = !DILocalVariable(name: "x", scope: !6078, file: !3, line: 3197, type: !2090)
!6082 = !DILocalVariable(name: "insns", scope: !6083, file: !3, line: 3264, type: !2090)
!6083 = distinct !DILexicalBlock(scope: !6084, file: !3, line: 3263, column: 5)
!6084 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3262, column: 7)
!6085 = !DILocalVariable(name: "value", scope: !6083, file: !3, line: 3265, type: !2090)
!6086 = !DILocalVariable(name: "eq_value", scope: !6083, file: !3, line: 3266, type: !2090)
!6087 = !DILocalVariable(name: "outmode", scope: !6083, file: !3, line: 3267, type: !5)
!6088 = !DILocalVariable(name: "xop0", scope: !6089, file: !3, line: 3309, type: !2090)
!6089 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 3308, column: 6)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 3305, column: 8)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 3304, column: 2)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 3301, column: 7)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 3301, column: 7)
!6094 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 3300, column: 5)
!6095 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3299, column: 7)
!6096 = !DILocalVariable(name: "last", scope: !6089, file: !3, line: 3310, type: !2090)
!6097 = !DILocalVariable(name: "temp", scope: !6098, file: !3, line: 3354, type: !2090)
!6098 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 3353, column: 5)
!6099 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3352, column: 7)
!6100 = !DILabel(scope: !6052, name: "try_libcall", file: !3, line: 3259)
!6101 = !DILocation(line: 0, scope: !6052)
!6102 = !DILocation(line: 3091, column: 28, scope: !6052)
!6103 = !DILocation(line: 3096, column: 10, scope: !6052)
!6104 = !DILocation(line: 3097, column: 7, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3097, column: 7)
!6106 = !DILocation(line: 3097, column: 7, scope: !6052)
!6107 = !DILocation(line: 3103, column: 15, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3103, column: 7)
!6109 = !DILocation(line: 3103, column: 7, scope: !6052)
!6110 = !DILocation(line: 3105, column: 14, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 3104, column: 5)
!6112 = !DILocation(line: 3106, column: 11, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6111, file: !3, line: 3106, column: 11)
!6114 = !DILocation(line: 3106, column: 11, scope: !6111)
!6115 = !DILocation(line: 3109, column: 11, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6111, file: !3, line: 3109, column: 11)
!6117 = !DILocation(line: 3109, column: 32, scope: !6116)
!6118 = !DILocation(line: 3110, column: 4, scope: !6116)
!6119 = !DILocation(line: 3110, column: 7, scope: !6116)
!6120 = !DILocation(line: 3110, column: 43, scope: !6116)
!6121 = !DILocation(line: 3110, column: 53, scope: !6116)
!6122 = !DILocation(line: 3109, column: 11, scope: !6111)
!6123 = !DILocation(line: 3112, column: 11, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 3111, column: 2)
!6125 = !DILocation(line: 3113, column: 8, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 3113, column: 8)
!6127 = !DILocation(line: 3113, column: 8, scope: !6124)
!6128 = !DILocation(line: 3121, column: 15, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3121, column: 7)
!6130 = !DILocation(line: 3121, column: 7, scope: !6052)
!6131 = !DILocation(line: 3123, column: 14, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 3122, column: 5)
!6133 = !DILocation(line: 3124, column: 11, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 3124, column: 11)
!6135 = !DILocation(line: 3124, column: 11, scope: !6132)
!6136 = !DILocation(line: 3127, column: 11, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 3127, column: 11)
!6138 = !DILocation(line: 3127, column: 32, scope: !6137)
!6139 = !DILocation(line: 3128, column: 4, scope: !6137)
!6140 = !DILocation(line: 3128, column: 7, scope: !6137)
!6141 = !DILocation(line: 3128, column: 43, scope: !6137)
!6142 = !DILocation(line: 3128, column: 53, scope: !6137)
!6143 = !DILocation(line: 3127, column: 11, scope: !6132)
!6144 = !DILocation(line: 3130, column: 11, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 3129, column: 2)
!6146 = !DILocation(line: 3131, column: 8, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 3131, column: 8)
!6148 = !DILocation(line: 3131, column: 8, scope: !6145)
!6149 = !DILocation(line: 3138, column: 7, scope: !6071)
!6150 = !DILocation(line: 0, scope: !6066)
!6151 = !DILocation(line: 3139, column: 10, scope: !6070)
!6152 = !DILocation(line: 0, scope: !6070)
!6153 = !DILocation(line: 3140, column: 14, scope: !6069)
!6154 = !DILocation(line: 3139, column: 5, scope: !6070)
!6155 = !DILocation(line: 3143, column: 6, scope: !6067)
!6156 = !DILocation(line: 3143, column: 43, scope: !6067)
!6157 = !DILocation(line: 3143, column: 53, scope: !6067)
!6158 = !DILocation(line: 3143, column: 6, scope: !6068)
!6159 = !DILocation(line: 3146, column: 17, scope: !6066)
!6160 = !DILocation(line: 3152, column: 13, scope: !6066)
!6161 = !DILocation(line: 3157, column: 13, scope: !6066)
!6162 = !DILocation(line: 3160, column: 10, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 3160, column: 10)
!6164 = !DILocation(line: 3160, column: 10, scope: !6066)
!6165 = !DILocation(line: 3172, column: 12, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 3162, column: 7)
!6167 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 3161, column: 8)
!6168 = !DILocation(line: 3172, column: 5, scope: !6166)
!6169 = !DILocation(line: 3175, column: 8, scope: !6163)
!6170 = !DILocation(line: 3176, column: 4, scope: !6067)
!6171 = !DILocation(line: 3139, column: 5, scope: !6069)
!6172 = distinct !{!6172, !6154, !6173}
!6173 = !DILocation(line: 3177, column: 7, scope: !6070)
!6174 = !DILocation(line: 3180, column: 15, scope: !6075)
!6175 = !DILocation(line: 3364, column: 1, scope: !6052)
!6176 = !DILocation(line: 3166, column: 18, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 3166, column: 11)
!6178 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 3165, column: 5)
!6179 = !DILocation(line: 3166, column: 11, scope: !6178)
!6180 = !DILocation(line: 3167, column: 18, scope: !6177)
!6181 = !DILocation(line: 3167, column: 9, scope: !6177)
!6182 = !DILocation(line: 3168, column: 7, scope: !6178)
!6183 = !DILocation(line: 3169, column: 7, scope: !6178)
!6184 = !DILocation(line: 3181, column: 17, scope: !6075)
!6185 = !DILocation(line: 3181, column: 7, scope: !6075)
!6186 = !DILocation(line: 3182, column: 10, scope: !6075)
!6187 = !DILocation(line: 3182, column: 31, scope: !6075)
!6188 = !DILocation(line: 3183, column: 7, scope: !6075)
!6189 = !DILocation(line: 3183, column: 10, scope: !6075)
!6190 = !DILocation(line: 3183, column: 46, scope: !6075)
!6191 = !DILocation(line: 3183, column: 56, scope: !6075)
!6192 = !DILocation(line: 3180, column: 7, scope: !6052)
!6193 = !DILocation(line: 3188, column: 18, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6074, file: !3, line: 3188, column: 11)
!6195 = !DILocation(line: 3188, column: 33, scope: !6194)
!6196 = !DILocation(line: 3188, column: 23, scope: !6194)
!6197 = !DILocation(line: 3189, column: 11, scope: !6194)
!6198 = !DILocation(line: 3189, column: 2, scope: !6194)
!6199 = !DILocation(line: 3191, column: 7, scope: !6074)
!6200 = !DILocation(line: 0, scope: !6074)
!6201 = !DILocation(line: 3194, column: 12, scope: !6080)
!6202 = !DILocation(line: 0, scope: !6080)
!6203 = !DILocation(line: 3194, column: 23, scope: !6079)
!6204 = !DILocation(line: 3194, column: 47, scope: !6079)
!6205 = !DILocation(line: 3194, column: 21, scope: !6079)
!6206 = !DILocation(line: 3194, column: 7, scope: !6080)
!6207 = !DILocation(line: 3196, column: 23, scope: !6078)
!6208 = !DILocation(line: 0, scope: !6078)
!6209 = !DILocation(line: 3197, column: 25, scope: !6078)
!6210 = !DILocation(line: 3198, column: 11, scope: !6078)
!6211 = !DILocation(line: 3197, column: 12, scope: !6078)
!6212 = !DILocation(line: 3201, column: 21, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 3201, column: 8)
!6214 = !DILocation(line: 3201, column: 8, scope: !6078)
!6215 = !DILocation(line: 3202, column: 6, scope: !6213)
!6216 = !DILocation(line: 3194, column: 65, scope: !6079)
!6217 = !DILocation(line: 3194, column: 7, scope: !6079)
!6218 = distinct !{!6218, !6206, !6219}
!6219 = !DILocation(line: 3203, column: 2, scope: !6080)
!6220 = !DILocation(line: 3205, column: 15, scope: !6074)
!6221 = !DILocation(line: 3206, column: 7, scope: !6074)
!6222 = !DILocation(line: 3208, column: 7, scope: !6074)
!6223 = !DILocation(line: 3212, column: 16, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3212, column: 7)
!6225 = !DILocation(line: 3212, column: 21, scope: !6224)
!6226 = !DILocation(line: 3212, column: 7, scope: !6052)
!6227 = !DILocation(line: 3215, column: 11, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 3215, column: 11)
!6229 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 3213, column: 5)
!6230 = !DILocation(line: 3215, column: 11, scope: !6229)
!6231 = !DILocation(line: 3217, column: 11, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6228, file: !3, line: 3216, column: 2)
!6233 = !DILocation(line: 3218, column: 8, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 3218, column: 8)
!6235 = !DILocation(line: 3218, column: 8, scope: !6232)
!6236 = !DILocation(line: 3224, column: 12, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 3224, column: 11)
!6238 = !DILocation(line: 0, scope: !6237)
!6239 = !DILocation(line: 3226, column: 40, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 3225, column: 2)
!6241 = !DILocation(line: 3226, column: 32, scope: !6240)
!6242 = !DILocation(line: 3228, column: 11, scope: !6240)
!6243 = !DILocation(line: 3226, column: 11, scope: !6240)
!6244 = !DILocation(line: 3230, column: 8, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 3230, column: 8)
!6246 = !DILocation(line: 3230, column: 8, scope: !6240)
!6247 = !DILocation(line: 3236, column: 15, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3236, column: 7)
!6249 = !DILocation(line: 3236, column: 7, scope: !6052)
!6250 = !DILocation(line: 3238, column: 14, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 3237, column: 5)
!6252 = !DILocation(line: 3239, column: 11, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6251, file: !3, line: 3239, column: 11)
!6254 = !DILocation(line: 3239, column: 11, scope: !6251)
!6255 = !DILocation(line: 3244, column: 15, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3244, column: 7)
!6257 = !DILocation(line: 3244, column: 7, scope: !6052)
!6258 = !DILocation(line: 3246, column: 14, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 3245, column: 5)
!6260 = !DILocation(line: 3247, column: 11, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 3247, column: 11)
!6262 = !DILocation(line: 3247, column: 11, scope: !6259)
!6263 = !DILocation(line: 3252, column: 15, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3252, column: 7)
!6265 = !DILocation(line: 3252, column: 7, scope: !6052)
!6266 = !DILocation(line: 3254, column: 14, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 3253, column: 5)
!6268 = !DILocation(line: 3255, column: 11, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 3255, column: 11)
!6270 = !DILocation(line: 3255, column: 11, scope: !6267)
!6271 = !DILocation(line: 3259, column: 2, scope: !6052)
!6272 = !DILocation(line: 3261, column: 13, scope: !6052)
!6273 = !DILocation(line: 3262, column: 7, scope: !6084)
!6274 = !DILocation(line: 3262, column: 7, scope: !6052)
!6275 = !DILocation(line: 0, scope: !6083)
!6276 = !DILocation(line: 3271, column: 19, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 3271, column: 11)
!6278 = !DILocation(line: 3271, column: 32, scope: !6277)
!6279 = !DILocation(line: 3271, column: 67, scope: !6277)
!6280 = !DILocation(line: 3272, column: 15, scope: !6277)
!6281 = !DILocation(line: 3272, column: 44, scope: !6277)
!6282 = !DILocation(line: 3274, column: 6, scope: !6277)
!6283 = !DILocation(line: 3288, column: 11, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 3288, column: 11)
!6285 = !DILocation(line: 3273, column: 2, scope: !6277)
!6286 = !DILocation(line: 3277, column: 7, scope: !6083)
!6287 = !DILocation(line: 3281, column: 15, scope: !6083)
!6288 = !DILocation(line: 3283, column: 15, scope: !6083)
!6289 = !DILocation(line: 3284, column: 7, scope: !6083)
!6290 = !DILocation(line: 3286, column: 16, scope: !6083)
!6291 = !DILocation(line: 3287, column: 18, scope: !6083)
!6292 = !DILocation(line: 3288, column: 37, scope: !6284)
!6293 = !DILocation(line: 3288, column: 35, scope: !6284)
!6294 = !DILocation(line: 3288, column: 11, scope: !6083)
!6295 = !DILocation(line: 3289, column: 13, scope: !6284)
!6296 = !DILocation(line: 3289, column: 2, scope: !6284)
!6297 = !DILocation(line: 3290, column: 40, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 3290, column: 16)
!6299 = !DILocation(line: 3290, column: 16, scope: !6284)
!6300 = !DILocation(line: 3291, column: 13, scope: !6298)
!6301 = !DILocation(line: 3291, column: 2, scope: !6298)
!6302 = !DILocation(line: 0, scope: !6284)
!6303 = !DILocation(line: 3292, column: 7, scope: !6083)
!6304 = !DILocation(line: 3299, column: 7, scope: !6095)
!6305 = !DILocation(line: 0, scope: !6089)
!6306 = !DILocation(line: 0, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 3326, column: 12)
!6308 = !DILocation(line: 3301, column: 12, scope: !6093)
!6309 = !DILocation(line: 0, scope: !6093)
!6310 = !DILocation(line: 3302, column: 16, scope: !6092)
!6311 = !DILocation(line: 3301, column: 7, scope: !6093)
!6312 = !DILocation(line: 3305, column: 9, scope: !6090)
!6313 = !DILocation(line: 3305, column: 46, scope: !6090)
!6314 = !DILocation(line: 3306, column: 9, scope: !6090)
!6315 = !DILocation(line: 3307, column: 8, scope: !6090)
!6316 = !DILocation(line: 3307, column: 11, scope: !6090)
!6317 = !DILocation(line: 3305, column: 8, scope: !6091)
!6318 = !DILocation(line: 3310, column: 19, scope: !6089)
!6319 = !DILocation(line: 3316, column: 15, scope: !6089)
!6320 = !DILocation(line: 3321, column: 15, scope: !6089)
!6321 = !DILocation(line: 3326, column: 41, scope: !6307)
!6322 = !DILocation(line: 3326, column: 33, scope: !6307)
!6323 = !DILocation(line: 3328, column: 10, scope: !6307)
!6324 = !DILocation(line: 3327, column: 10, scope: !6307)
!6325 = !DILocation(line: 3327, column: 3, scope: !6307)
!6326 = !DILocation(line: 3332, column: 12, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 3332, column: 12)
!6328 = !DILocation(line: 3332, column: 12, scope: !6089)
!6329 = !DILocation(line: 3334, column: 9, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 3333, column: 3)
!6331 = !DILocation(line: 3336, column: 20, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 3336, column: 13)
!6333 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 3335, column: 7)
!6334 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 3334, column: 9)
!6335 = !DILocation(line: 3336, column: 13, scope: !6333)
!6336 = !DILocation(line: 3337, column: 13, scope: !6332)
!6337 = !DILocation(line: 3337, column: 4, scope: !6332)
!6338 = !DILocation(line: 3338, column: 9, scope: !6333)
!6339 = !DILocation(line: 3339, column: 9, scope: !6333)
!6340 = !DILocation(line: 3342, column: 14, scope: !6334)
!6341 = !DILocation(line: 3342, column: 7, scope: !6334)
!6342 = !DILocation(line: 3345, column: 3, scope: !6327)
!6343 = !DILocation(line: 3346, column: 6, scope: !6090)
!6344 = !DILocation(line: 3301, column: 7, scope: !6092)
!6345 = distinct !{!6345, !6311, !6346}
!6346 = !DILocation(line: 3347, column: 2, scope: !6093)
!6347 = !DILocation(line: 3352, column: 16, scope: !6099)
!6348 = !DILocation(line: 3352, column: 21, scope: !6099)
!6349 = !DILocation(line: 3352, column: 28, scope: !6099)
!6350 = !DILocation(line: 3352, column: 32, scope: !6099)
!6351 = !DILocation(line: 0, scope: !6099)
!6352 = !DILocation(line: 3356, column: 36, scope: !6098)
!6353 = !DILocation(line: 3356, column: 28, scope: !6098)
!6354 = !DILocation(line: 3357, column: 28, scope: !6098)
!6355 = !DILocation(line: 3355, column: 14, scope: !6098)
!6356 = !DILocation(line: 0, scope: !6098)
!6357 = !DILocation(line: 3359, column: 11, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 3359, column: 11)
!6359 = !DILocation(line: 3363, column: 3, scope: !6052)
!6360 = distinct !DISubprogram(name: "expand_unop_direct", scope: !3, file: !3, line: 3028, type: !6053, scopeLine: 3030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6361)
!6361 = !{!6362, !6363, !6364, !6365, !6366, !6367, !6370, !6371, !6372, !6373, !6374}
!6362 = !DILocalVariable(name: "mode", arg: 1, scope: !6360, file: !3, line: 3028, type: !5)
!6363 = !DILocalVariable(name: "unoptab", arg: 2, scope: !6360, file: !3, line: 3028, type: !3291)
!6364 = !DILocalVariable(name: "op0", arg: 3, scope: !6360, file: !3, line: 3028, type: !2090)
!6365 = !DILocalVariable(name: "target", arg: 4, scope: !6360, file: !3, line: 3028, type: !2090)
!6366 = !DILocalVariable(name: "unsignedp", arg: 5, scope: !6360, file: !3, line: 3029, type: !2072)
!6367 = !DILocalVariable(name: "icode", scope: !6368, file: !3, line: 3033, type: !2072)
!6368 = distinct !DILexicalBlock(scope: !6369, file: !3, line: 3032, column: 5)
!6369 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 3031, column: 7)
!6370 = !DILocalVariable(name: "mode0", scope: !6368, file: !3, line: 3034, type: !5)
!6371 = !DILocalVariable(name: "xop0", scope: !6368, file: !3, line: 3035, type: !2090)
!6372 = !DILocalVariable(name: "last", scope: !6368, file: !3, line: 3036, type: !2090)
!6373 = !DILocalVariable(name: "pat", scope: !6368, file: !3, line: 3037, type: !2090)
!6374 = !DILocalVariable(name: "temp", scope: !6368, file: !3, line: 3037, type: !2090)
!6375 = !DILocation(line: 0, scope: !6360)
!6376 = !DILocation(line: 3031, column: 7, scope: !6369)
!6377 = !DILocation(line: 3031, column: 38, scope: !6369)
!6378 = !DILocation(line: 3031, column: 48, scope: !6369)
!6379 = !DILocation(line: 3031, column: 7, scope: !6360)
!6380 = !DILocation(line: 0, scope: !6368)
!6381 = !DILocation(line: 3034, column: 33, scope: !6368)
!6382 = !DILocation(line: 3034, column: 50, scope: !6368)
!6383 = !DILocation(line: 3034, column: 61, scope: !6368)
!6384 = !DILocation(line: 3036, column: 18, scope: !6368)
!6385 = !DILocation(line: 3039, column: 11, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 3039, column: 11)
!6387 = !DILocation(line: 3039, column: 11, scope: !6368)
!6388 = !DILocation(line: 3042, column: 9, scope: !6386)
!6389 = !DILocation(line: 0, scope: !6386)
!6390 = !DILocation(line: 3044, column: 11, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 3044, column: 11)
!6392 = !DILocation(line: 3044, column: 27, scope: !6391)
!6393 = !DILocation(line: 3045, column: 4, scope: !6391)
!6394 = !DILocation(line: 3045, column: 7, scope: !6391)
!6395 = !DILocation(line: 3045, column: 23, scope: !6391)
!6396 = !DILocation(line: 3044, column: 11, scope: !6368)
!6397 = !DILocation(line: 3046, column: 9, scope: !6391)
!6398 = !DILocation(line: 3046, column: 2, scope: !6391)
!6399 = !DILocation(line: 3050, column: 40, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 3050, column: 11)
!6401 = !DILocation(line: 3050, column: 12, scope: !6400)
!6402 = !DILocation(line: 3050, column: 11, scope: !6368)
!6403 = !DILocation(line: 3051, column: 9, scope: !6400)
!6404 = !DILocation(line: 3051, column: 2, scope: !6400)
!6405 = !DILocation(line: 3053, column: 40, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 3053, column: 11)
!6407 = !DILocation(line: 3053, column: 12, scope: !6406)
!6408 = !DILocation(line: 3053, column: 11, scope: !6368)
!6409 = !DILocation(line: 3054, column: 9, scope: !6406)
!6410 = !DILocation(line: 3054, column: 2, scope: !6406)
!6411 = !DILocation(line: 3056, column: 13, scope: !6368)
!6412 = !DILocation(line: 3057, column: 11, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 3057, column: 11)
!6414 = !DILocation(line: 3057, column: 11, scope: !6368)
!6415 = !DILocation(line: 3059, column: 8, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6417, file: !3, line: 3059, column: 8)
!6417 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 3058, column: 2)
!6418 = !DILocation(line: 3059, column: 21, scope: !6416)
!6419 = !DILocation(line: 3059, column: 24, scope: !6416)
!6420 = !DILocation(line: 3059, column: 40, scope: !6416)
!6421 = !DILocation(line: 3060, column: 8, scope: !6416)
!6422 = !DILocation(line: 3060, column: 49, scope: !6416)
!6423 = !DILocation(line: 3060, column: 13, scope: !6416)
!6424 = !DILocation(line: 3059, column: 8, scope: !6417)
!6425 = !DILocation(line: 3062, column: 8, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6416, file: !3, line: 3061, column: 6)
!6427 = !DILocation(line: 3063, column: 15, scope: !6426)
!6428 = !DILocation(line: 3063, column: 8, scope: !6426)
!6429 = !DILocation(line: 3066, column: 4, scope: !6417)
!6430 = !DILocation(line: 3068, column: 4, scope: !6417)
!6431 = !DILocation(line: 3071, column: 2, scope: !6413)
!6432 = !DILocation(line: 3072, column: 5, scope: !6369)
!6433 = !DILocation(line: 3073, column: 3, scope: !6360)
!6434 = !DILocation(line: 3074, column: 1, scope: !6360)
!6435 = distinct !DISubprogram(name: "widen_clz", scope: !3, file: !3, line: 2564, type: !6436, scopeLine: 2565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6438)
!6436 = !DISubroutineType(types: !6437)
!6437 = !{!2090, !5, !2090, !2090}
!6438 = !{!6439, !6440, !6441, !6442, !6443, !6446, !6452, !6453}
!6439 = !DILocalVariable(name: "mode", arg: 1, scope: !6435, file: !3, line: 2564, type: !5)
!6440 = !DILocalVariable(name: "op0", arg: 2, scope: !6435, file: !3, line: 2564, type: !2090)
!6441 = !DILocalVariable(name: "target", arg: 3, scope: !6435, file: !3, line: 2564, type: !2090)
!6442 = !DILocalVariable(name: "mclass", scope: !6435, file: !3, line: 2566, type: !2025)
!6443 = !DILocalVariable(name: "wider_mode", scope: !6444, file: !3, line: 2569, type: !5)
!6444 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 2568, column: 5)
!6445 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 2567, column: 7)
!6446 = !DILocalVariable(name: "xop0", scope: !6447, file: !3, line: 2577, type: !2090)
!6447 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 2576, column: 6)
!6448 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 2574, column: 8)
!6449 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 2573, column: 2)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 2570, column: 7)
!6451 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 2570, column: 7)
!6452 = !DILocalVariable(name: "temp", scope: !6447, file: !3, line: 2577, type: !2090)
!6453 = !DILocalVariable(name: "last", scope: !6447, file: !3, line: 2577, type: !2090)
!6454 = !DILocation(line: 0, scope: !6435)
!6455 = !DILocation(line: 2566, column: 28, scope: !6435)
!6456 = !DILocation(line: 2567, column: 7, scope: !6445)
!6457 = !DILocation(line: 2570, column: 12, scope: !6451)
!6458 = !DILocation(line: 0, scope: !6451)
!6459 = !DILocation(line: 2571, column: 16, scope: !6450)
!6460 = !DILocation(line: 2570, column: 7, scope: !6451)
!6461 = !DILocation(line: 2574, column: 8, scope: !6448)
!6462 = !DILocation(line: 2574, column: 47, scope: !6448)
!6463 = !DILocation(line: 2575, column: 8, scope: !6448)
!6464 = !DILocation(line: 2574, column: 8, scope: !6449)
!6465 = !DILocation(line: 2579, column: 15, scope: !6447)
!6466 = !DILocation(line: 0, scope: !6447)
!6467 = !DILocation(line: 2581, column: 19, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2581, column: 12)
!6469 = !DILocation(line: 2581, column: 12, scope: !6447)
!6470 = !DILocation(line: 2582, column: 12, scope: !6468)
!6471 = !DILocation(line: 2582, column: 3, scope: !6468)
!6472 = !DILocation(line: 2583, column: 15, scope: !6447)
!6473 = !DILocation(line: 2584, column: 15, scope: !6447)
!6474 = !DILocation(line: 2585, column: 17, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2585, column: 12)
!6476 = !DILocation(line: 2585, column: 12, scope: !6447)
!6477 = !DILocation(line: 2587, column: 10, scope: !6475)
!6478 = !DILocation(line: 2586, column: 10, scope: !6475)
!6479 = !DILocation(line: 2586, column: 3, scope: !6475)
!6480 = !DILocation(line: 2590, column: 17, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2590, column: 12)
!6482 = !DILocation(line: 2590, column: 12, scope: !6447)
!6483 = !DILocation(line: 2591, column: 3, scope: !6481)
!6484 = !DILocation(line: 2570, column: 7, scope: !6450)
!6485 = distinct !{!6485, !6460, !6486}
!6486 = !DILocation(line: 2595, column: 2, scope: !6451)
!6487 = !DILocation(line: 2597, column: 3, scope: !6435)
!6488 = !DILocation(line: 2598, column: 1, scope: !6435)
!6489 = distinct !DISubprogram(name: "expand_doubleword_clz", scope: !3, file: !3, line: 2603, type: !6436, scopeLine: 2604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6490)
!6490 = !{!6491, !6492, !6493, !6494, !6495, !6496, !6497, !6498, !6499, !6500, !6501, !6502}
!6491 = !DILocalVariable(name: "mode", arg: 1, scope: !6489, file: !3, line: 2603, type: !5)
!6492 = !DILocalVariable(name: "op0", arg: 2, scope: !6489, file: !3, line: 2603, type: !2090)
!6493 = !DILocalVariable(name: "target", arg: 3, scope: !6489, file: !3, line: 2603, type: !2090)
!6494 = !DILocalVariable(name: "xop0", scope: !6489, file: !3, line: 2605, type: !2090)
!6495 = !DILocalVariable(name: "subhi", scope: !6489, file: !3, line: 2606, type: !2090)
!6496 = !DILocalVariable(name: "sublo", scope: !6489, file: !3, line: 2607, type: !2090)
!6497 = !DILocalVariable(name: "hi0_label", scope: !6489, file: !3, line: 2608, type: !2090)
!6498 = !DILocalVariable(name: "after_label", scope: !6489, file: !3, line: 2609, type: !2090)
!6499 = !DILocalVariable(name: "seq", scope: !6489, file: !3, line: 2610, type: !2090)
!6500 = !DILocalVariable(name: "temp", scope: !6489, file: !3, line: 2610, type: !2090)
!6501 = !DILocalVariable(name: "result", scope: !6489, file: !3, line: 2610, type: !2090)
!6502 = !DILabel(scope: !6489, name: "fail", file: !3, line: 2665)
!6503 = !DILocation(line: 0, scope: !6489)
!6504 = !DILocation(line: 2605, column: 14, scope: !6489)
!6505 = !DILocation(line: 2606, column: 29, scope: !6489)
!6506 = !DILocation(line: 2606, column: 15, scope: !6489)
!6507 = !DILocation(line: 2607, column: 15, scope: !6489)
!6508 = !DILocation(line: 2607, column: 28, scope: !6489)
!6509 = !DILocation(line: 2608, column: 19, scope: !6489)
!6510 = !DILocation(line: 2609, column: 21, scope: !6489)
!6511 = !DILocation(line: 2615, column: 8, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2615, column: 7)
!6513 = !DILocation(line: 2615, column: 7, scope: !6489)
!6514 = !DILocation(line: 2616, column: 27, scope: !6512)
!6515 = !DILocation(line: 2616, column: 14, scope: !6512)
!6516 = !DILocation(line: 2616, column: 5, scope: !6512)
!6517 = !DILocation(line: 2621, column: 25, scope: !6489)
!6518 = !DILocation(line: 2621, column: 12, scope: !6489)
!6519 = !DILocation(line: 2623, column: 3, scope: !6489)
!6520 = !DILocation(line: 2627, column: 35, scope: !6489)
!6521 = !DILocation(line: 2627, column: 3, scope: !6489)
!6522 = !DILocation(line: 2630, column: 30, scope: !6489)
!6523 = !DILocation(line: 2630, column: 10, scope: !6489)
!6524 = !DILocation(line: 2631, column: 8, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2631, column: 7)
!6526 = !DILocation(line: 2631, column: 7, scope: !6489)
!6527 = !DILocation(line: 2634, column: 12, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2634, column: 7)
!6529 = !DILocation(line: 2634, column: 7, scope: !6489)
!6530 = !DILocation(line: 2635, column: 5, scope: !6528)
!6531 = !DILocation(line: 2637, column: 19, scope: !6489)
!6532 = !DILocation(line: 2637, column: 3, scope: !6489)
!6533 = !DILocation(line: 2638, column: 3, scope: !6489)
!6534 = !DILocation(line: 2642, column: 3, scope: !6489)
!6535 = !DILocation(line: 2644, column: 30, scope: !6489)
!6536 = !DILocation(line: 2644, column: 10, scope: !6489)
!6537 = !DILocation(line: 2645, column: 8, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2645, column: 7)
!6539 = !DILocation(line: 2645, column: 7, scope: !6489)
!6540 = !DILocation(line: 2647, column: 24, scope: !6489)
!6541 = !DILocation(line: 2648, column: 10, scope: !6489)
!6542 = !DILocation(line: 2647, column: 10, scope: !6489)
!6543 = !DILocation(line: 2650, column: 8, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2650, column: 7)
!6545 = !DILocation(line: 2650, column: 7, scope: !6489)
!6546 = !DILocation(line: 2652, column: 12, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2652, column: 7)
!6548 = !DILocation(line: 2652, column: 7, scope: !6489)
!6549 = !DILocation(line: 2653, column: 5, scope: !6547)
!6550 = !DILocation(line: 2655, column: 3, scope: !6489)
!6551 = !DILocation(line: 2656, column: 3, scope: !6489)
!6552 = !DILocation(line: 2658, column: 9, scope: !6489)
!6553 = !DILocation(line: 2659, column: 3, scope: !6489)
!6554 = !DILocation(line: 2661, column: 3, scope: !6489)
!6555 = !DILocation(line: 2662, column: 3, scope: !6489)
!6556 = !DILocation(line: 2663, column: 3, scope: !6489)
!6557 = !DILocation(line: 2665, column: 2, scope: !6489)
!6558 = !DILocation(line: 2666, column: 3, scope: !6489)
!6559 = !DILocation(line: 2667, column: 3, scope: !6489)
!6560 = !DILocation(line: 2668, column: 1, scope: !6489)
!6561 = distinct !DISubprogram(name: "widen_bswap", scope: !3, file: !3, line: 2675, type: !6436, scopeLine: 2676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6562)
!6562 = !{!6563, !6564, !6565, !6566, !6567, !6568, !6569, !6570}
!6563 = !DILocalVariable(name: "mode", arg: 1, scope: !6561, file: !3, line: 2675, type: !5)
!6564 = !DILocalVariable(name: "op0", arg: 2, scope: !6561, file: !3, line: 2675, type: !2090)
!6565 = !DILocalVariable(name: "target", arg: 3, scope: !6561, file: !3, line: 2675, type: !2090)
!6566 = !DILocalVariable(name: "mclass", scope: !6561, file: !3, line: 2677, type: !2025)
!6567 = !DILocalVariable(name: "wider_mode", scope: !6561, file: !3, line: 2678, type: !5)
!6568 = !DILocalVariable(name: "x", scope: !6561, file: !3, line: 2679, type: !2090)
!6569 = !DILocalVariable(name: "last", scope: !6561, file: !3, line: 2679, type: !2090)
!6570 = !DILabel(scope: !6561, name: "found", file: !3, line: 2691)
!6571 = !DILocation(line: 0, scope: !6561)
!6572 = !DILocation(line: 2677, column: 28, scope: !6561)
!6573 = !DILocation(line: 2681, column: 8, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 2681, column: 7)
!6575 = !DILocation(line: 2684, column: 8, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 2684, column: 3)
!6577 = !DILocation(line: 0, scope: !6576)
!6578 = !DILocation(line: 2685, column: 19, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 2684, column: 3)
!6580 = !DILocation(line: 2684, column: 3, scope: !6576)
!6581 = !DILocation(line: 2687, column: 9, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 2687, column: 9)
!6583 = !DILocation(line: 2687, column: 50, scope: !6582)
!6584 = !DILocation(line: 2687, column: 60, scope: !6582)
!6585 = !DILocation(line: 2687, column: 9, scope: !6579)
!6586 = !DILocation(line: 2684, column: 3, scope: !6579)
!6587 = distinct !{!6587, !6580, !6588}
!6588 = !DILocation(line: 2688, column: 12, scope: !6576)
!6589 = !DILocation(line: 2691, column: 2, scope: !6561)
!6590 = !DILocation(line: 2692, column: 10, scope: !6561)
!6591 = !DILocation(line: 2694, column: 7, scope: !6561)
!6592 = !DILocation(line: 2695, column: 7, scope: !6561)
!6593 = !DILocation(line: 2697, column: 9, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 2697, column: 7)
!6595 = !DILocation(line: 2697, column: 7, scope: !6561)
!6596 = !DILocation(line: 2699, column: 9, scope: !6594)
!6597 = !DILocation(line: 2698, column: 9, scope: !6594)
!6598 = !DILocation(line: 2698, column: 5, scope: !6594)
!6599 = !DILocation(line: 2703, column: 9, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 2703, column: 7)
!6601 = !DILocation(line: 2703, column: 7, scope: !6561)
!6602 = !DILocation(line: 2705, column: 18, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2705, column: 11)
!6604 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 2704, column: 5)
!6605 = !DILocation(line: 2705, column: 11, scope: !6604)
!6606 = !DILocation(line: 2706, column: 11, scope: !6603)
!6607 = !DILocation(line: 2706, column: 2, scope: !6603)
!6608 = !DILocation(line: 2707, column: 31, scope: !6604)
!6609 = !DILocation(line: 2707, column: 7, scope: !6604)
!6610 = !DILocation(line: 2708, column: 5, scope: !6604)
!6611 = !DILocation(line: 2710, column: 5, scope: !6600)
!6612 = !DILocation(line: 2713, column: 1, scope: !6561)
!6613 = distinct !DISubprogram(name: "expand_doubleword_bswap", scope: !3, file: !3, line: 2718, type: !6436, scopeLine: 2719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6614)
!6614 = !{!6615, !6616, !6617, !6618, !6619}
!6615 = !DILocalVariable(name: "mode", arg: 1, scope: !6613, file: !3, line: 2718, type: !5)
!6616 = !DILocalVariable(name: "op", arg: 2, scope: !6613, file: !3, line: 2718, type: !2090)
!6617 = !DILocalVariable(name: "target", arg: 3, scope: !6613, file: !3, line: 2718, type: !2090)
!6618 = !DILocalVariable(name: "t0", scope: !6613, file: !3, line: 2720, type: !2090)
!6619 = !DILocalVariable(name: "t1", scope: !6613, file: !3, line: 2720, type: !2090)
!6620 = !DILocation(line: 0, scope: !6613)
!6621 = !DILocation(line: 2722, column: 21, scope: !6613)
!6622 = !DILocation(line: 2723, column: 7, scope: !6613)
!6623 = !DILocation(line: 2722, column: 8, scope: !6613)
!6624 = !DILocation(line: 2724, column: 21, scope: !6613)
!6625 = !DILocation(line: 2725, column: 7, scope: !6613)
!6626 = !DILocation(line: 2724, column: 8, scope: !6613)
!6627 = !DILocation(line: 2727, column: 14, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 2727, column: 7)
!6629 = !DILocation(line: 2727, column: 7, scope: !6613)
!6630 = !DILocation(line: 2728, column: 14, scope: !6628)
!6631 = !DILocation(line: 2728, column: 5, scope: !6628)
!6632 = !DILocation(line: 2729, column: 7, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 2729, column: 7)
!6634 = !DILocation(line: 2729, column: 7, scope: !6613)
!6635 = !DILocation(line: 2730, column: 5, scope: !6633)
!6636 = !DILocation(line: 2731, column: 19, scope: !6613)
!6637 = !DILocation(line: 2731, column: 3, scope: !6613)
!6638 = !DILocation(line: 2732, column: 19, scope: !6613)
!6639 = !DILocation(line: 2732, column: 3, scope: !6613)
!6640 = !DILocation(line: 2734, column: 3, scope: !6613)
!6641 = distinct !DISubprogram(name: "expand_absneg_bit", scope: !3, file: !3, line: 2925, type: !6642, scopeLine: 2927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6644)
!6642 = !DISubroutineType(types: !6643)
!6643 = !{!2090, !384, !5, !2090, !2090}
!6644 = !{!6645, !6646, !6647, !6648, !6649, !6680, !6681, !6682, !6683, !6684, !6685, !6686, !6687, !6688, !6689, !6695}
!6645 = !DILocalVariable(name: "code", arg: 1, scope: !6641, file: !3, line: 2925, type: !384)
!6646 = !DILocalVariable(name: "mode", arg: 2, scope: !6641, file: !3, line: 2925, type: !5)
!6647 = !DILocalVariable(name: "op0", arg: 3, scope: !6641, file: !3, line: 2926, type: !2090)
!6648 = !DILocalVariable(name: "target", arg: 4, scope: !6641, file: !3, line: 2926, type: !2090)
!6649 = !DILocalVariable(name: "fmt", scope: !6641, file: !3, line: 2928, type: !6650)
!6650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6651, size: 64)
!6651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6652)
!6652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_format", file: !2266, line: 124, size: 448, elements: !6653)
!6653 = !{!6654, !6659, !6665, !6666, !6667, !6668, !6669, !6670, !6671, !6672, !6673, !6674, !6675, !6676, !6677, !6678, !6679}
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "encode", scope: !6652, file: !2266, line: 127, baseType: !6655, size: 64)
!6655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6656, size: 64)
!6656 = !DISubroutineType(types: !6657)
!6657 = !{null, !6650, !6658, !3224}
!6658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !6652, file: !2266, line: 129, baseType: !6660, size: 64, offset: 64)
!6660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6661, size: 64)
!6661 = !DISubroutineType(types: !6662)
!6662 = !{null, !6650, !2264, !6663}
!6663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6664, size: 64)
!6664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2176)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6652, file: !2266, line: 133, baseType: !2072, size: 32, offset: 128)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6652, file: !2266, line: 136, baseType: !2072, size: 32, offset: 160)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "pnan", scope: !6652, file: !2266, line: 139, baseType: !2072, size: 32, offset: 192)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "emin", scope: !6652, file: !2266, line: 142, baseType: !2072, size: 32, offset: 224)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "emax", scope: !6652, file: !2266, line: 145, baseType: !2072, size: 32, offset: 256)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "signbit_ro", scope: !6652, file: !2266, line: 149, baseType: !2072, size: 32, offset: 288)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "signbit_rw", scope: !6652, file: !2266, line: 153, baseType: !2072, size: 32, offset: 320)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "round_towards_zero", scope: !6652, file: !2266, line: 156, baseType: !2071, size: 8, offset: 352)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "has_sign_dependent_rounding", scope: !6652, file: !2266, line: 157, baseType: !2071, size: 8, offset: 360)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "has_nans", scope: !6652, file: !2266, line: 160, baseType: !2071, size: 8, offset: 368)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "has_inf", scope: !6652, file: !2266, line: 161, baseType: !2071, size: 8, offset: 376)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "has_denorm", scope: !6652, file: !2266, line: 162, baseType: !2071, size: 8, offset: 384)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "has_signed_zero", scope: !6652, file: !2266, line: 163, baseType: !2071, size: 8, offset: 392)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "qnan_msb_set", scope: !6652, file: !2266, line: 164, baseType: !2071, size: 8, offset: 400)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "canonical_nan_lsbs_set", scope: !6652, file: !2266, line: 165, baseType: !2071, size: 8, offset: 408)
!6680 = !DILocalVariable(name: "bitpos", scope: !6641, file: !3, line: 2929, type: !2072)
!6681 = !DILocalVariable(name: "word", scope: !6641, file: !3, line: 2929, type: !2072)
!6682 = !DILocalVariable(name: "nwords", scope: !6641, file: !3, line: 2929, type: !2072)
!6683 = !DILocalVariable(name: "i", scope: !6641, file: !3, line: 2929, type: !2072)
!6684 = !DILocalVariable(name: "imode", scope: !6641, file: !3, line: 2930, type: !5)
!6685 = !DILocalVariable(name: "hi", scope: !6641, file: !3, line: 2931, type: !2176)
!6686 = !DILocalVariable(name: "lo", scope: !6641, file: !3, line: 2931, type: !2176)
!6687 = !DILocalVariable(name: "temp", scope: !6641, file: !3, line: 2932, type: !2090)
!6688 = !DILocalVariable(name: "insns", scope: !6641, file: !3, line: 2932, type: !2090)
!6689 = !DILocalVariable(name: "targ_piece", scope: !6690, file: !3, line: 2989, type: !2090)
!6690 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 2988, column: 2)
!6691 = distinct !DILexicalBlock(scope: !6692, file: !3, line: 2987, column: 7)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 2987, column: 7)
!6693 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 2984, column: 5)
!6694 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 2983, column: 7)
!6695 = !DILocalVariable(name: "op0_piece", scope: !6690, file: !3, line: 2990, type: !2090)
!6696 = !DILocation(line: 0, scope: !6641)
!6697 = !DILocation(line: 2935, column: 9, scope: !6641)
!6698 = !DILocation(line: 2936, column: 11, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 2936, column: 7)
!6700 = !DILocation(line: 2936, column: 7, scope: !6641)
!6701 = !DILocation(line: 2939, column: 17, scope: !6641)
!6702 = !DILocation(line: 2940, column: 14, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 2940, column: 7)
!6704 = !DILocation(line: 2940, column: 7, scope: !6641)
!6705 = !DILocation(line: 2944, column: 12, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 2944, column: 7)
!6707 = !DILocation(line: 2944, column: 19, scope: !6706)
!6708 = !DILocation(line: 2944, column: 28, scope: !6706)
!6709 = !DILocation(line: 2944, column: 23, scope: !6706)
!6710 = !DILocation(line: 2944, column: 7, scope: !6641)
!6711 = !DILocation(line: 2947, column: 7, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 2947, column: 7)
!6713 = !DILocation(line: 2947, column: 28, scope: !6712)
!6714 = !DILocation(line: 2947, column: 7, scope: !6641)
!6715 = !DILocation(line: 2949, column: 15, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 2948, column: 5)
!6717 = !DILocation(line: 2950, column: 17, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 2950, column: 11)
!6719 = !DILocation(line: 2950, column: 11, scope: !6716)
!6720 = !DILocation(line: 2957, column: 15, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 2956, column: 5)
!6722 = !DILocation(line: 2962, column: 16, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 2959, column: 11)
!6724 = !DILocation(line: 2963, column: 23, scope: !6721)
!6725 = !DILocation(line: 2964, column: 17, scope: !6721)
!6726 = !DILocation(line: 2964, column: 57, scope: !6721)
!6727 = !DILocation(line: 2964, column: 62, scope: !6721)
!6728 = !DILocation(line: 0, scope: !6712)
!6729 = !DILocation(line: 2967, column: 14, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 2967, column: 7)
!6731 = !DILocation(line: 2967, column: 7, scope: !6641)
!6732 = !DILocation(line: 2977, column: 12, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 2977, column: 7)
!6734 = !DILocation(line: 2977, column: 7, scope: !6641)
!6735 = !DILocation(line: 2980, column: 14, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 2980, column: 7)
!6737 = !DILocation(line: 2980, column: 29, scope: !6736)
!6738 = !DILocation(line: 2980, column: 19, scope: !6736)
!6739 = !DILocation(line: 2981, column: 14, scope: !6736)
!6740 = !DILocation(line: 2981, column: 5, scope: !6736)
!6741 = !DILocation(line: 2983, column: 14, scope: !6694)
!6742 = !DILocation(line: 2983, column: 7, scope: !6641)
!6743 = !DILocation(line: 2985, column: 7, scope: !6693)
!6744 = !DILocation(line: 0, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 2993, column: 6)
!6746 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 2992, column: 8)
!6747 = !DILocation(line: 2987, column: 12, scope: !6692)
!6748 = !DILocation(line: 0, scope: !6692)
!6749 = !DILocation(line: 2987, column: 21, scope: !6691)
!6750 = !DILocation(line: 2987, column: 7, scope: !6692)
!6751 = !DILocation(line: 2989, column: 21, scope: !6690)
!6752 = !DILocation(line: 0, scope: !6690)
!6753 = !DILocation(line: 2990, column: 20, scope: !6690)
!6754 = !DILocation(line: 2992, column: 10, scope: !6746)
!6755 = !DILocation(line: 2992, column: 8, scope: !6690)
!6756 = !DILocation(line: 2996, column: 8, scope: !6745)
!6757 = !DILocation(line: 2994, column: 15, scope: !6745)
!6758 = !DILocation(line: 2998, column: 17, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 2998, column: 12)
!6760 = !DILocation(line: 2998, column: 12, scope: !6745)
!6761 = !DILocation(line: 2999, column: 3, scope: !6759)
!6762 = !DILocation(line: 3002, column: 6, scope: !6746)
!6763 = !DILocation(line: 2987, column: 31, scope: !6691)
!6764 = !DILocation(line: 2987, column: 7, scope: !6691)
!6765 = distinct !{!6765, !6750, !6766}
!6766 = !DILocation(line: 3003, column: 2, scope: !6692)
!6767 = !DILocation(line: 3005, column: 15, scope: !6693)
!6768 = !DILocation(line: 3006, column: 7, scope: !6693)
!6769 = !DILocation(line: 3008, column: 7, scope: !6693)
!6770 = !DILocation(line: 3009, column: 5, scope: !6693)
!6771 = !DILocation(line: 3012, column: 35, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 3011, column: 5)
!6773 = !DILocation(line: 3013, column: 7, scope: !6772)
!6774 = !DILocation(line: 3014, column: 7, scope: !6772)
!6775 = !DILocation(line: 3015, column: 14, scope: !6772)
!6776 = !DILocation(line: 3012, column: 14, scope: !6772)
!6777 = !DILocation(line: 3016, column: 16, scope: !6772)
!6778 = !DILocation(line: 3018, column: 28, scope: !6772)
!6779 = !DILocation(line: 3019, column: 7, scope: !6772)
!6780 = !DILocation(line: 3018, column: 7, scope: !6772)
!6781 = !DILocation(line: 3023, column: 1, scope: !6641)
!6782 = distinct !DISubprogram(name: "expand_parity", scope: !3, file: !3, line: 2740, type: !6436, scopeLine: 2741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6783)
!6783 = !{!6784, !6785, !6786, !6787, !6788, !6791, !6797, !6798}
!6784 = !DILocalVariable(name: "mode", arg: 1, scope: !6782, file: !3, line: 2740, type: !5)
!6785 = !DILocalVariable(name: "op0", arg: 2, scope: !6782, file: !3, line: 2740, type: !2090)
!6786 = !DILocalVariable(name: "target", arg: 3, scope: !6782, file: !3, line: 2740, type: !2090)
!6787 = !DILocalVariable(name: "mclass", scope: !6782, file: !3, line: 2742, type: !2025)
!6788 = !DILocalVariable(name: "wider_mode", scope: !6789, file: !3, line: 2745, type: !5)
!6789 = distinct !DILexicalBlock(scope: !6790, file: !3, line: 2744, column: 5)
!6790 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 2743, column: 7)
!6791 = !DILocalVariable(name: "xop0", scope: !6792, file: !3, line: 2752, type: !2090)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 2751, column: 6)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 2749, column: 8)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 2748, column: 2)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 2746, column: 7)
!6796 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 2746, column: 7)
!6797 = !DILocalVariable(name: "temp", scope: !6792, file: !3, line: 2752, type: !2090)
!6798 = !DILocalVariable(name: "last", scope: !6792, file: !3, line: 2752, type: !2090)
!6799 = !DILocation(line: 0, scope: !6782)
!6800 = !DILocation(line: 2742, column: 28, scope: !6782)
!6801 = !DILocation(line: 2743, column: 7, scope: !6790)
!6802 = !DILocation(line: 0, scope: !6789)
!6803 = !DILocation(line: 2746, column: 12, scope: !6796)
!6804 = !DILocation(line: 0, scope: !6796)
!6805 = !DILocation(line: 2746, column: 42, scope: !6795)
!6806 = !DILocation(line: 2746, column: 7, scope: !6796)
!6807 = !DILocation(line: 2749, column: 8, scope: !6793)
!6808 = !DILocation(line: 2749, column: 52, scope: !6793)
!6809 = !DILocation(line: 2750, column: 8, scope: !6793)
!6810 = !DILocation(line: 2749, column: 8, scope: !6794)
!6811 = !DILocation(line: 2754, column: 15, scope: !6792)
!6812 = !DILocation(line: 0, scope: !6792)
!6813 = !DILocation(line: 2756, column: 19, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 2756, column: 12)
!6815 = !DILocation(line: 2756, column: 12, scope: !6792)
!6816 = !DILocation(line: 2757, column: 12, scope: !6814)
!6817 = !DILocation(line: 2757, column: 3, scope: !6814)
!6818 = !DILocation(line: 2758, column: 15, scope: !6792)
!6819 = !DILocation(line: 2759, column: 15, scope: !6792)
!6820 = !DILocation(line: 2761, column: 17, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 2761, column: 12)
!6822 = !DILocation(line: 2761, column: 12, scope: !6792)
!6823 = !DILocation(line: 2762, column: 53, scope: !6821)
!6824 = !DILocation(line: 2762, column: 10, scope: !6821)
!6825 = !DILocation(line: 2762, column: 3, scope: !6821)
!6826 = !DILocation(line: 2764, column: 17, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 2764, column: 12)
!6828 = !DILocation(line: 2764, column: 12, scope: !6792)
!6829 = !DILocation(line: 2765, column: 3, scope: !6827)
!6830 = !DILocation(line: 2747, column: 18, scope: !6795)
!6831 = !DILocation(line: 2746, column: 7, scope: !6795)
!6832 = distinct !{!6832, !6806, !6833}
!6833 = !DILocation(line: 2769, column: 2, scope: !6796)
!6834 = !DILocation(line: 2771, column: 3, scope: !6782)
!6835 = !DILocation(line: 2772, column: 1, scope: !6782)
!6836 = distinct !DISubprogram(name: "expand_ffs", scope: !3, file: !3, line: 2828, type: !6436, scopeLine: 2829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6837)
!6837 = !{!6838, !6839, !6840, !6841, !6842, !6843, !6844, !6845, !6848}
!6838 = !DILocalVariable(name: "mode", arg: 1, scope: !6836, file: !3, line: 2828, type: !5)
!6839 = !DILocalVariable(name: "op0", arg: 2, scope: !6836, file: !3, line: 2828, type: !2090)
!6840 = !DILocalVariable(name: "target", arg: 3, scope: !6836, file: !3, line: 2828, type: !2090)
!6841 = !DILocalVariable(name: "val", scope: !6836, file: !3, line: 2830, type: !2176)
!6842 = !DILocalVariable(name: "defined_at_zero", scope: !6836, file: !3, line: 2831, type: !2071)
!6843 = !DILocalVariable(name: "temp", scope: !6836, file: !3, line: 2832, type: !2090)
!6844 = !DILocalVariable(name: "seq", scope: !6836, file: !3, line: 2832, type: !2090)
!6845 = !DILocalVariable(name: "nonzero_label", scope: !6846, file: !3, line: 2874, type: !2090)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 2863, column: 5)
!6847 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 2860, column: 7)
!6848 = !DILabel(scope: !6836, name: "fail", file: !3, line: 2896)
!6849 = !DILocation(line: 0, scope: !6836)
!6850 = !DILocation(line: 2834, column: 7, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 2834, column: 7)
!6852 = !DILocation(line: 2834, column: 40, scope: !6851)
!6853 = !DILocation(line: 2834, column: 50, scope: !6851)
!6854 = !DILocation(line: 2834, column: 7, scope: !6836)
!6855 = !DILocation(line: 2836, column: 7, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 2835, column: 5)
!6857 = !DILocation(line: 2838, column: 14, scope: !6856)
!6858 = !DILocation(line: 2839, column: 12, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 2839, column: 11)
!6860 = !DILocation(line: 2839, column: 11, scope: !6856)
!6861 = !DILocation(line: 2844, column: 45, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 2844, column: 12)
!6863 = !DILocation(line: 2844, column: 55, scope: !6862)
!6864 = !DILocation(line: 2844, column: 12, scope: !6851)
!6865 = !DILocation(line: 2846, column: 7, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 2845, column: 5)
!6867 = !DILocation(line: 2847, column: 14, scope: !6866)
!6868 = !DILocation(line: 2848, column: 12, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 2848, column: 11)
!6870 = !DILocation(line: 2848, column: 11, scope: !6866)
!6871 = !DILocation(line: 0, scope: !6851)
!6872 = !DILocation(line: 2874, column: 27, scope: !6846)
!6873 = !DILocation(line: 0, scope: !6846)
!6874 = !DILocation(line: 2875, column: 37, scope: !6846)
!6875 = !DILocation(line: 2875, column: 7, scope: !6846)
!6876 = !DILocation(line: 2878, column: 27, scope: !6846)
!6877 = !DILocation(line: 2878, column: 7, scope: !6846)
!6878 = !DILocation(line: 2879, column: 7, scope: !6846)
!6879 = !DILocation(line: 2884, column: 47, scope: !6836)
!6880 = !DILocation(line: 2884, column: 10, scope: !6836)
!6881 = !DILocation(line: 2886, column: 8, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 2886, column: 7)
!6883 = !DILocation(line: 2886, column: 7, scope: !6836)
!6884 = !DILocation(line: 2889, column: 9, scope: !6836)
!6885 = !DILocation(line: 2890, column: 3, scope: !6836)
!6886 = !DILocation(line: 2892, column: 3, scope: !6836)
!6887 = !DILocation(line: 2893, column: 3, scope: !6836)
!6888 = !DILocation(line: 2894, column: 3, scope: !6836)
!6889 = !DILocation(line: 2896, column: 2, scope: !6836)
!6890 = !DILocation(line: 2897, column: 3, scope: !6836)
!6891 = !DILocation(line: 2898, column: 3, scope: !6836)
!6892 = !DILocation(line: 2899, column: 1, scope: !6836)
!6893 = distinct !DISubprogram(name: "expand_ctz", scope: !3, file: !3, line: 2787, type: !6436, scopeLine: 2788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6894)
!6894 = !{!6895, !6896, !6897, !6898, !6899}
!6895 = !DILocalVariable(name: "mode", arg: 1, scope: !6893, file: !3, line: 2787, type: !5)
!6896 = !DILocalVariable(name: "op0", arg: 2, scope: !6893, file: !3, line: 2787, type: !2090)
!6897 = !DILocalVariable(name: "target", arg: 3, scope: !6893, file: !3, line: 2787, type: !2090)
!6898 = !DILocalVariable(name: "seq", scope: !6893, file: !3, line: 2789, type: !2090)
!6899 = !DILocalVariable(name: "temp", scope: !6893, file: !3, line: 2789, type: !2090)
!6900 = !DILocation(line: 0, scope: !6893)
!6901 = !DILocation(line: 2791, column: 7, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 2791, column: 7)
!6903 = !DILocation(line: 2791, column: 40, scope: !6902)
!6904 = !DILocation(line: 2791, column: 50, scope: !6902)
!6905 = !DILocation(line: 2791, column: 7, scope: !6893)
!6906 = !DILocation(line: 2794, column: 3, scope: !6893)
!6907 = !DILocation(line: 2796, column: 10, scope: !6893)
!6908 = !DILocation(line: 2797, column: 7, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 2797, column: 7)
!6910 = !DILocation(line: 2797, column: 7, scope: !6893)
!6911 = !DILocation(line: 2798, column: 12, scope: !6909)
!6912 = !DILocation(line: 2798, column: 5, scope: !6909)
!6913 = !DILocation(line: 2800, column: 7, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 2800, column: 7)
!6915 = !DILocation(line: 2800, column: 7, scope: !6893)
!6916 = !DILocation(line: 2801, column: 12, scope: !6914)
!6917 = !DILocation(line: 2801, column: 5, scope: !6914)
!6918 = !DILocation(line: 2802, column: 7, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 2802, column: 7)
!6920 = !DILocation(line: 2802, column: 7, scope: !6893)
!6921 = !DILocation(line: 2803, column: 43, scope: !6919)
!6922 = !DILocation(line: 2803, column: 12, scope: !6919)
!6923 = !DILocation(line: 2803, column: 5, scope: !6919)
!6924 = !DILocation(line: 2806, column: 12, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 2806, column: 7)
!6926 = !DILocation(line: 2806, column: 7, scope: !6893)
!6927 = !DILocation(line: 2808, column: 7, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 2807, column: 5)
!6929 = !DILocation(line: 2809, column: 7, scope: !6928)
!6930 = !DILocation(line: 2812, column: 9, scope: !6893)
!6931 = !DILocation(line: 2813, column: 3, scope: !6893)
!6932 = !DILocation(line: 2815, column: 3, scope: !6893)
!6933 = !DILocation(line: 2816, column: 3, scope: !6893)
!6934 = !DILocation(line: 2817, column: 3, scope: !6893)
!6935 = !DILocation(line: 2818, column: 1, scope: !6893)
!6936 = distinct !DISubprogram(name: "expand_abs_nojump", scope: !3, file: !3, line: 3376, type: !6937, scopeLine: 3378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6939)
!6937 = !DISubroutineType(types: !6938)
!6938 = !{!2090, !5, !2090, !2090, !2072}
!6939 = !{!6940, !6941, !6942, !6943, !6944, !6945, !6948}
!6940 = !DILocalVariable(name: "mode", arg: 1, scope: !6936, file: !3, line: 3376, type: !5)
!6941 = !DILocalVariable(name: "op0", arg: 2, scope: !6936, file: !3, line: 3376, type: !2090)
!6942 = !DILocalVariable(name: "target", arg: 3, scope: !6936, file: !3, line: 3376, type: !2090)
!6943 = !DILocalVariable(name: "result_unsignedp", arg: 4, scope: !6936, file: !3, line: 3377, type: !2072)
!6944 = !DILocalVariable(name: "temp", scope: !6936, file: !3, line: 3379, type: !2090)
!6945 = !DILocalVariable(name: "last", scope: !6946, file: !3, line: 3402, type: !2090)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 3401, column: 5)
!6947 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 3399, column: 7)
!6948 = !DILocalVariable(name: "extended", scope: !6949, file: !3, line: 3423, type: !2090)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 3422, column: 5)
!6950 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 3419, column: 7)
!6951 = !DILocation(line: 0, scope: !6936)
!6952 = !DILocation(line: 3381, column: 9, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 3381, column: 7)
!6954 = !DILocation(line: 3385, column: 29, scope: !6936)
!6955 = !DILocation(line: 3385, column: 10, scope: !6936)
!6956 = !DILocation(line: 3387, column: 12, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 3387, column: 7)
!6958 = !DILocation(line: 3387, column: 7, scope: !6936)
!6959 = !DILocation(line: 3391, column: 7, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 3391, column: 7)
!6961 = !DILocation(line: 3391, column: 7, scope: !6936)
!6962 = !DILocation(line: 3393, column: 14, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 3392, column: 5)
!6964 = !DILocation(line: 3394, column: 11, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 3394, column: 11)
!6966 = !DILocation(line: 3394, column: 11, scope: !6963)
!6967 = !DILocation(line: 3399, column: 7, scope: !6947)
!6968 = !DILocation(line: 3399, column: 41, scope: !6947)
!6969 = !DILocation(line: 3399, column: 51, scope: !6947)
!6970 = !DILocation(line: 3400, column: 7, scope: !6947)
!6971 = !DILocation(line: 3400, column: 11, scope: !6947)
!6972 = !DILocation(line: 0, scope: !6947)
!6973 = !DILocation(line: 3402, column: 18, scope: !6946)
!6974 = !DILocation(line: 0, scope: !6946)
!6975 = !DILocation(line: 3404, column: 14, scope: !6946)
!6976 = !DILocation(line: 3405, column: 16, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 3405, column: 11)
!6978 = !DILocation(line: 3405, column: 11, scope: !6946)
!6979 = !DILocation(line: 3406, column: 9, scope: !6977)
!6980 = !DILocation(line: 3406, column: 2, scope: !6977)
!6981 = !DILocation(line: 3409, column: 16, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 3409, column: 11)
!6983 = !DILocation(line: 3409, column: 11, scope: !6946)
!6984 = !DILocation(line: 3412, column: 7, scope: !6946)
!6985 = !DILocation(line: 3413, column: 5, scope: !6947)
!6986 = !DILocation(line: 3419, column: 29, scope: !6950)
!6987 = !DILocation(line: 3420, column: 7, scope: !6950)
!6988 = !DILocation(line: 3420, column: 10, scope: !6950)
!6989 = !DILocation(line: 3421, column: 22, scope: !6950)
!6990 = !DILocation(line: 3419, column: 7, scope: !6936)
!6991 = !DILocation(line: 3424, column: 8, scope: !6949)
!6992 = !DILocation(line: 3423, column: 22, scope: !6949)
!6993 = !DILocation(line: 0, scope: !6949)
!6994 = !DILocation(line: 3427, column: 14, scope: !6949)
!6995 = !DILocation(line: 3429, column: 16, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3429, column: 11)
!6997 = !DILocation(line: 3429, column: 11, scope: !6949)
!6998 = !DILocation(line: 3430, column: 29, scope: !6996)
!6999 = !DILocation(line: 3430, column: 9, scope: !6996)
!7000 = !DILocation(line: 3430, column: 2, scope: !6996)
!7001 = !DILocation(line: 3433, column: 16, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3433, column: 11)
!7003 = !DILocation(line: 0, scope: !6950)
!7004 = !DILocation(line: 3437, column: 3, scope: !6936)
!7005 = !DILocation(line: 3438, column: 1, scope: !6936)
!7006 = distinct !DISubprogram(name: "expand_abs", scope: !3, file: !3, line: 3441, type: !7007, scopeLine: 3443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7009)
!7007 = !DISubroutineType(types: !7008)
!7008 = !{!2090, !5, !2090, !2090, !2072, !2072}
!7009 = !{!7010, !7011, !7012, !7013, !7014, !7015, !7016}
!7010 = !DILocalVariable(name: "mode", arg: 1, scope: !7006, file: !3, line: 3441, type: !5)
!7011 = !DILocalVariable(name: "op0", arg: 2, scope: !7006, file: !3, line: 3441, type: !2090)
!7012 = !DILocalVariable(name: "target", arg: 3, scope: !7006, file: !3, line: 3441, type: !2090)
!7013 = !DILocalVariable(name: "result_unsignedp", arg: 4, scope: !7006, file: !3, line: 3442, type: !2072)
!7014 = !DILocalVariable(name: "safe", arg: 5, scope: !7006, file: !3, line: 3442, type: !2072)
!7015 = !DILocalVariable(name: "temp", scope: !7006, file: !3, line: 3444, type: !2090)
!7016 = !DILocalVariable(name: "op1", scope: !7006, file: !3, line: 3444, type: !2090)
!7017 = !DILocation(line: 0, scope: !7006)
!7018 = !DILocation(line: 3446, column: 9, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 3446, column: 7)
!7020 = !DILocation(line: 3446, column: 7, scope: !7006)
!7021 = !DILocation(line: 3449, column: 10, scope: !7006)
!7022 = !DILocation(line: 3450, column: 12, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 3450, column: 7)
!7024 = !DILocation(line: 3450, column: 7, scope: !7006)
!7025 = !DILocation(line: 3457, column: 11, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 3457, column: 7)
!7027 = !DILocation(line: 3457, column: 21, scope: !7026)
!7028 = !DILocation(line: 3457, column: 24, scope: !7026)
!7029 = !DILocation(line: 3458, column: 7, scope: !7026)
!7030 = !DILocation(line: 3458, column: 10, scope: !7026)
!7031 = !DILocation(line: 3458, column: 22, scope: !7026)
!7032 = !DILocation(line: 3457, column: 7, scope: !7006)
!7033 = !DILocation(line: 3461, column: 9, scope: !7006)
!7034 = !DILocation(line: 3462, column: 14, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 3462, column: 7)
!7036 = !DILocation(line: 3462, column: 24, scope: !7035)
!7037 = !DILocation(line: 3462, column: 19, scope: !7035)
!7038 = !DILocation(line: 3463, column: 10, scope: !7035)
!7039 = !DILocation(line: 3463, column: 28, scope: !7035)
!7040 = !DILocation(line: 3464, column: 7, scope: !7035)
!7041 = !DILocation(line: 3464, column: 11, scope: !7035)
!7042 = !DILocation(line: 3464, column: 26, scope: !7035)
!7043 = !DILocation(line: 3464, column: 29, scope: !7035)
!7044 = !DILocation(line: 3465, column: 7, scope: !7035)
!7045 = !DILocation(line: 3465, column: 11, scope: !7035)
!7046 = !DILocation(line: 3466, column: 4, scope: !7035)
!7047 = !DILocation(line: 3466, column: 7, scope: !7035)
!7048 = !DILocation(line: 3466, column: 22, scope: !7035)
!7049 = !DILocation(line: 3462, column: 7, scope: !7006)
!7050 = !DILocation(line: 3467, column: 14, scope: !7035)
!7051 = !DILocation(line: 3467, column: 5, scope: !7035)
!7052 = !DILocation(line: 3469, column: 3, scope: !7006)
!7053 = !DILocation(line: 3470, column: 3, scope: !7006)
!7054 = !DILocation(line: 3472, column: 36, scope: !7006)
!7055 = !DILocation(line: 3472, column: 3, scope: !7006)
!7056 = !DILocation(line: 3475, column: 28, scope: !7006)
!7057 = !DILocation(line: 3475, column: 9, scope: !7006)
!7058 = !DILocation(line: 3477, column: 11, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 3477, column: 7)
!7060 = !DILocation(line: 3477, column: 7, scope: !7006)
!7061 = !DILocation(line: 3478, column: 5, scope: !7059)
!7062 = !DILocation(line: 3479, column: 3, scope: !7006)
!7063 = !DILocation(line: 3480, column: 3, scope: !7006)
!7064 = !DILocation(line: 3481, column: 3, scope: !7006)
!7065 = !DILocation(line: 3482, column: 1, scope: !7006)
!7066 = distinct !DISubprogram(name: "rhs_regno", scope: !385, file: !385, line: 1051, type: !7067, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7072)
!7067 = !DISubroutineType(types: !7068)
!7068 = !{!7, !7069}
!7069 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !2091, line: 51, baseType: !7070)
!7070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7071, size: 64)
!7071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2093)
!7072 = !{!7073}
!7073 = !DILocalVariable(name: "x", arg: 1, scope: !7066, file: !385, line: 1051, type: !7069)
!7074 = !DILocation(line: 0, scope: !7066)
!7075 = !DILocation(line: 1053, column: 10, scope: !7066)
!7076 = !DILocation(line: 1053, column: 3, scope: !7066)
!7077 = distinct !DISubprogram(name: "expand_one_cmpl_abs_nojump", scope: !3, file: !3, line: 3493, type: !6436, scopeLine: 3494, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7078)
!7078 = !{!7079, !7080, !7081, !7082, !7083, !7086}
!7079 = !DILocalVariable(name: "mode", arg: 1, scope: !7077, file: !3, line: 3493, type: !5)
!7080 = !DILocalVariable(name: "op0", arg: 2, scope: !7077, file: !3, line: 3493, type: !2090)
!7081 = !DILocalVariable(name: "target", arg: 3, scope: !7077, file: !3, line: 3493, type: !2090)
!7082 = !DILocalVariable(name: "temp", scope: !7077, file: !3, line: 3495, type: !2090)
!7083 = !DILocalVariable(name: "last", scope: !7084, file: !3, line: 3504, type: !2090)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 3503, column: 5)
!7085 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 3502, column: 7)
!7086 = !DILocalVariable(name: "extended", scope: !7087, file: !3, line: 3524, type: !2090)
!7087 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 3523, column: 5)
!7088 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 3520, column: 7)
!7089 = !DILocation(line: 0, scope: !7077)
!7090 = !DILocation(line: 3498, column: 7, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 3498, column: 7)
!7092 = !DILocation(line: 3498, column: 7, scope: !7077)
!7093 = !DILocation(line: 3502, column: 7, scope: !7085)
!7094 = !DILocation(line: 3502, column: 41, scope: !7085)
!7095 = !DILocation(line: 3502, column: 51, scope: !7085)
!7096 = !DILocation(line: 3502, column: 7, scope: !7077)
!7097 = !DILocation(line: 3504, column: 18, scope: !7084)
!7098 = !DILocation(line: 0, scope: !7084)
!7099 = !DILocation(line: 3506, column: 14, scope: !7084)
!7100 = !DILocation(line: 3507, column: 16, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 3507, column: 11)
!7102 = !DILocation(line: 3507, column: 11, scope: !7084)
!7103 = !DILocation(line: 3508, column: 9, scope: !7101)
!7104 = !DILocation(line: 3508, column: 2, scope: !7101)
!7105 = !DILocation(line: 3511, column: 16, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 3511, column: 11)
!7107 = !DILocation(line: 3511, column: 11, scope: !7084)
!7108 = !DILocation(line: 3514, column: 7, scope: !7084)
!7109 = !DILocation(line: 3515, column: 5, scope: !7085)
!7110 = !DILocation(line: 3520, column: 29, scope: !7088)
!7111 = !DILocation(line: 3521, column: 7, scope: !7088)
!7112 = !DILocation(line: 3521, column: 10, scope: !7088)
!7113 = !DILocation(line: 3522, column: 22, scope: !7088)
!7114 = !DILocation(line: 3520, column: 7, scope: !7077)
!7115 = !DILocation(line: 3525, column: 8, scope: !7087)
!7116 = !DILocation(line: 3524, column: 22, scope: !7087)
!7117 = !DILocation(line: 0, scope: !7087)
!7118 = !DILocation(line: 3528, column: 14, scope: !7087)
!7119 = !DILocation(line: 3531, column: 16, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 3531, column: 11)
!7121 = !DILocation(line: 0, scope: !7088)
!7122 = !DILocation(line: 3535, column: 3, scope: !7077)
!7123 = !DILocation(line: 3536, column: 1, scope: !7077)
!7124 = distinct !DISubprogram(name: "expand_copysign", scope: !3, file: !3, line: 3742, type: !7125, scopeLine: 3743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7127)
!7125 = !DISubroutineType(types: !7126)
!7126 = !{!2090, !2090, !2090, !2090}
!7127 = !{!7128, !7129, !7130, !7131, !7132, !7133, !7134}
!7128 = !DILocalVariable(name: "op0", arg: 1, scope: !7124, file: !3, line: 3742, type: !2090)
!7129 = !DILocalVariable(name: "op1", arg: 2, scope: !7124, file: !3, line: 3742, type: !2090)
!7130 = !DILocalVariable(name: "target", arg: 3, scope: !7124, file: !3, line: 3742, type: !2090)
!7131 = !DILocalVariable(name: "mode", scope: !7124, file: !3, line: 3744, type: !5)
!7132 = !DILocalVariable(name: "fmt", scope: !7124, file: !3, line: 3745, type: !6650)
!7133 = !DILocalVariable(name: "op0_is_abs", scope: !7124, file: !3, line: 3746, type: !2071)
!7134 = !DILocalVariable(name: "temp", scope: !7124, file: !3, line: 3747, type: !2090)
!7135 = !DILocation(line: 0, scope: !7124)
!7136 = !DILocation(line: 3744, column: 28, scope: !7124)
!7137 = !DILocation(line: 3749, column: 3, scope: !7124)
!7138 = !DILocation(line: 3750, column: 3, scope: !7124)
!7139 = !DILocation(line: 3753, column: 10, scope: !7124)
!7140 = !DILocation(line: 3755, column: 7, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 3755, column: 7)
!7142 = !DILocation(line: 3755, column: 7, scope: !7124)
!7143 = !DILocation(line: 3758, column: 9, scope: !7124)
!7144 = !DILocation(line: 3759, column: 11, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 3759, column: 7)
!7146 = !DILocation(line: 3759, column: 19, scope: !7145)
!7147 = !DILocation(line: 3759, column: 28, scope: !7145)
!7148 = !DILocation(line: 3759, column: 23, scope: !7145)
!7149 = !DILocation(line: 3759, column: 7, scope: !7124)
!7150 = !DILocation(line: 3763, column: 7, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 3763, column: 7)
!7152 = !DILocation(line: 3763, column: 22, scope: !7151)
!7153 = !DILocation(line: 3763, column: 7, scope: !7124)
!7154 = !DILocation(line: 3765, column: 23, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 3765, column: 11)
!7156 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 3764, column: 5)
!7157 = !DILocation(line: 3765, column: 11, scope: !7155)
!7158 = !DILocation(line: 3765, column: 11, scope: !7156)
!7159 = !DILocation(line: 3766, column: 8, scope: !7155)
!7160 = !DILocation(line: 3766, column: 2, scope: !7155)
!7161 = !DILocation(line: 3770, column: 12, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 3770, column: 7)
!7163 = !DILocation(line: 3770, column: 23, scope: !7162)
!7164 = !DILocation(line: 3771, column: 7, scope: !7162)
!7165 = !DILocation(line: 3771, column: 11, scope: !7162)
!7166 = !DILocation(line: 3771, column: 26, scope: !7162)
!7167 = !DILocation(line: 3772, column: 4, scope: !7162)
!7168 = !DILocation(line: 3772, column: 41, scope: !7162)
!7169 = !DILocation(line: 3772, column: 51, scope: !7162)
!7170 = !DILocation(line: 3773, column: 8, scope: !7162)
!7171 = !DILocation(line: 3773, column: 44, scope: !7162)
!7172 = !DILocation(line: 3773, column: 54, scope: !7162)
!7173 = !DILocation(line: 3770, column: 7, scope: !7124)
!7174 = !DILocation(line: 3775, column: 14, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 3774, column: 5)
!7176 = !DILocation(line: 3777, column: 11, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 3777, column: 11)
!7178 = !DILocation(line: 3777, column: 11, scope: !7175)
!7179 = !DILocation(line: 3781, column: 12, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 3781, column: 7)
!7181 = !DILocation(line: 3781, column: 23, scope: !7180)
!7182 = !DILocation(line: 3781, column: 7, scope: !7124)
!7183 = !DILocation(line: 3783, column: 10, scope: !7124)
!7184 = !DILocation(line: 3783, column: 3, scope: !7124)
!7185 = !DILocation(line: 3785, column: 1, scope: !7124)
!7186 = distinct !DISubprogram(name: "expand_copysign_absneg", scope: !3, file: !3, line: 3544, type: !7187, scopeLine: 3546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7189)
!7187 = !DISubroutineType(types: !7188)
!7188 = !{!2090, !5, !2090, !2090, !2090, !2072, !2071}
!7189 = !{!7190, !7191, !7192, !7193, !7194, !7195, !7196, !7197, !7198, !7199, !7200, !7203, !7204}
!7190 = !DILocalVariable(name: "mode", arg: 1, scope: !7186, file: !3, line: 3544, type: !5)
!7191 = !DILocalVariable(name: "op0", arg: 2, scope: !7186, file: !3, line: 3544, type: !2090)
!7192 = !DILocalVariable(name: "op1", arg: 3, scope: !7186, file: !3, line: 3544, type: !2090)
!7193 = !DILocalVariable(name: "target", arg: 4, scope: !7186, file: !3, line: 3544, type: !2090)
!7194 = !DILocalVariable(name: "bitpos", arg: 5, scope: !7186, file: !3, line: 3545, type: !2072)
!7195 = !DILocalVariable(name: "op0_is_abs", arg: 6, scope: !7186, file: !3, line: 3545, type: !2071)
!7196 = !DILocalVariable(name: "imode", scope: !7186, file: !3, line: 3547, type: !5)
!7197 = !DILocalVariable(name: "icode", scope: !7186, file: !3, line: 3548, type: !2072)
!7198 = !DILocalVariable(name: "sign", scope: !7186, file: !3, line: 3549, type: !2090)
!7199 = !DILocalVariable(name: "label", scope: !7186, file: !3, line: 3549, type: !2090)
!7200 = !DILocalVariable(name: "hi", scope: !7201, file: !3, line: 3565, type: !2176)
!7201 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 3564, column: 5)
!7202 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 3557, column: 7)
!7203 = !DILocalVariable(name: "lo", scope: !7201, file: !3, line: 3565, type: !2176)
!7204 = !DILocalVariable(name: "word", scope: !7205, file: !3, line: 3576, type: !2072)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 3575, column: 2)
!7206 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 3567, column: 11)
!7207 = !DILocation(line: 0, scope: !7186)
!7208 = !DILocation(line: 3551, column: 14, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 3551, column: 7)
!7210 = !DILocation(line: 3551, column: 7, scope: !7186)
!7211 = !DILocation(line: 3556, column: 17, scope: !7186)
!7212 = !DILocation(line: 3556, column: 54, scope: !7186)
!7213 = !DILocation(line: 3557, column: 13, scope: !7202)
!7214 = !DILocation(line: 3557, column: 7, scope: !7186)
!7215 = !DILocation(line: 3559, column: 15, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 3558, column: 5)
!7217 = !DILocation(line: 3559, column: 32, scope: !7216)
!7218 = !DILocation(line: 3559, column: 43, scope: !7216)
!7219 = !DILocation(line: 3560, column: 14, scope: !7216)
!7220 = !DILocation(line: 3561, column: 7, scope: !7216)
!7221 = !DILocation(line: 3562, column: 5, scope: !7216)
!7222 = !DILocation(line: 3567, column: 11, scope: !7206)
!7223 = !DILocation(line: 3567, column: 32, scope: !7206)
!7224 = !DILocation(line: 3567, column: 11, scope: !7201)
!7225 = !DILocation(line: 3569, column: 12, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 3568, column: 2)
!7227 = !DILocation(line: 3570, column: 14, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 3570, column: 8)
!7229 = !DILocation(line: 3570, column: 8, scope: !7226)
!7230 = !DILocation(line: 3572, column: 10, scope: !7226)
!7231 = !DILocation(line: 3573, column: 2, scope: !7226)
!7232 = !DILocation(line: 3578, column: 12, scope: !7205)
!7233 = !DILocation(line: 3582, column: 20, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 3579, column: 8)
!7235 = !DILocation(line: 0, scope: !7205)
!7236 = !DILocation(line: 3583, column: 20, scope: !7205)
!7237 = !DILocation(line: 3584, column: 10, scope: !7205)
!7238 = !DILocation(line: 0, scope: !7206)
!7239 = !DILocation(line: 3587, column: 18, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 3587, column: 11)
!7241 = !DILocation(line: 3587, column: 11, scope: !7201)
!7242 = !DILocation(line: 0, scope: !7201)
!7243 = !DILocation(line: 3598, column: 14, scope: !7201)
!7244 = !DILocation(line: 3600, column: 7, scope: !7201)
!7245 = !DILocation(line: 3599, column: 14, scope: !7201)
!7246 = !DILocation(line: 3602, column: 5, scope: !7202)
!7247 = !DILocation(line: 3569, column: 10, scope: !7226)
!7248 = !DILocation(line: 0, scope: !7202)
!7249 = !DILocation(line: 3604, column: 8, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 3604, column: 7)
!7251 = !DILocation(line: 3604, column: 7, scope: !7186)
!7252 = !DILocation(line: 3606, column: 13, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 3605, column: 5)
!7254 = !DILocation(line: 3607, column: 15, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 3607, column: 11)
!7256 = !DILocation(line: 3607, column: 11, scope: !7253)
!7257 = !DILocation(line: 3613, column: 18, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 3613, column: 11)
!7259 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 3612, column: 5)
!7260 = !DILocation(line: 3613, column: 11, scope: !7259)
!7261 = !DILocation(line: 3614, column: 18, scope: !7258)
!7262 = !DILocation(line: 3614, column: 9, scope: !7258)
!7263 = !DILocation(line: 3616, column: 2, scope: !7258)
!7264 = !DILocation(line: 0, scope: !7250)
!7265 = !DILocation(line: 3619, column: 11, scope: !7186)
!7266 = !DILocation(line: 3620, column: 34, scope: !7186)
!7267 = !DILocation(line: 3620, column: 3, scope: !7186)
!7268 = !DILocation(line: 3622, column: 7, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 3622, column: 7)
!7270 = !DILocation(line: 3622, column: 22, scope: !7269)
!7271 = !DILocation(line: 3622, column: 7, scope: !7186)
!7272 = !DILocation(line: 3623, column: 11, scope: !7269)
!7273 = !DILocation(line: 3623, column: 5, scope: !7269)
!7274 = !DILocation(line: 3625, column: 11, scope: !7269)
!7275 = !DILocation(line: 0, scope: !7269)
!7276 = !DILocation(line: 3626, column: 11, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 3626, column: 7)
!7278 = !DILocation(line: 3626, column: 7, scope: !7186)
!7279 = !DILocation(line: 3627, column: 5, scope: !7277)
!7280 = !DILocation(line: 3629, column: 3, scope: !7186)
!7281 = !DILocation(line: 3631, column: 3, scope: !7186)
!7282 = !DILocation(line: 3632, column: 1, scope: !7186)
!7283 = distinct !DISubprogram(name: "expand_copysign_bit", scope: !3, file: !3, line: 3640, type: !7187, scopeLine: 3642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7284)
!7284 = !{!7285, !7286, !7287, !7288, !7289, !7290, !7291, !7292, !7293, !7294, !7295, !7296, !7297, !7298, !7299, !7305}
!7285 = !DILocalVariable(name: "mode", arg: 1, scope: !7283, file: !3, line: 3640, type: !5)
!7286 = !DILocalVariable(name: "op0", arg: 2, scope: !7283, file: !3, line: 3640, type: !2090)
!7287 = !DILocalVariable(name: "op1", arg: 3, scope: !7283, file: !3, line: 3640, type: !2090)
!7288 = !DILocalVariable(name: "target", arg: 4, scope: !7283, file: !3, line: 3640, type: !2090)
!7289 = !DILocalVariable(name: "bitpos", arg: 5, scope: !7283, file: !3, line: 3641, type: !2072)
!7290 = !DILocalVariable(name: "op0_is_abs", arg: 6, scope: !7283, file: !3, line: 3641, type: !2071)
!7291 = !DILocalVariable(name: "imode", scope: !7283, file: !3, line: 3643, type: !5)
!7292 = !DILocalVariable(name: "hi", scope: !7283, file: !3, line: 3644, type: !2176)
!7293 = !DILocalVariable(name: "lo", scope: !7283, file: !3, line: 3644, type: !2176)
!7294 = !DILocalVariable(name: "word", scope: !7283, file: !3, line: 3645, type: !2072)
!7295 = !DILocalVariable(name: "nwords", scope: !7283, file: !3, line: 3645, type: !2072)
!7296 = !DILocalVariable(name: "i", scope: !7283, file: !3, line: 3645, type: !2072)
!7297 = !DILocalVariable(name: "temp", scope: !7283, file: !3, line: 3646, type: !2090)
!7298 = !DILocalVariable(name: "insns", scope: !7283, file: !3, line: 3646, type: !2090)
!7299 = !DILocalVariable(name: "targ_piece", scope: !7300, file: !3, line: 3688, type: !2090)
!7300 = distinct !DILexicalBlock(scope: !7301, file: !3, line: 3687, column: 2)
!7301 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 3686, column: 7)
!7302 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 3686, column: 7)
!7303 = distinct !DILexicalBlock(scope: !7304, file: !3, line: 3683, column: 5)
!7304 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 3682, column: 7)
!7305 = !DILocalVariable(name: "op0_piece", scope: !7300, file: !3, line: 3689, type: !2090)
!7306 = !DILocation(line: 0, scope: !7283)
!7307 = !DILocation(line: 3648, column: 7, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 3648, column: 7)
!7309 = !DILocation(line: 3648, column: 28, scope: !7308)
!7310 = !DILocation(line: 3648, column: 7, scope: !7283)
!7311 = !DILocation(line: 3650, column: 15, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 3649, column: 5)
!7313 = !DILocation(line: 3651, column: 17, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 3651, column: 11)
!7315 = !DILocation(line: 3651, column: 11, scope: !7312)
!7316 = !DILocation(line: 3658, column: 15, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 3657, column: 5)
!7318 = !DILocation(line: 3663, column: 16, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 3660, column: 11)
!7320 = !DILocation(line: 3664, column: 23, scope: !7317)
!7321 = !DILocation(line: 3665, column: 17, scope: !7317)
!7322 = !DILocation(line: 3665, column: 57, scope: !7317)
!7323 = !DILocation(line: 3665, column: 62, scope: !7317)
!7324 = !DILocation(line: 0, scope: !7308)
!7325 = !DILocation(line: 3668, column: 14, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 3668, column: 7)
!7327 = !DILocation(line: 3668, column: 7, scope: !7283)
!7328 = !DILocation(line: 3679, column: 14, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 3679, column: 7)
!7330 = !DILocation(line: 3679, column: 29, scope: !7329)
!7331 = !DILocation(line: 3679, column: 19, scope: !7329)
!7332 = !DILocation(line: 3679, column: 46, scope: !7329)
!7333 = !DILocation(line: 3680, column: 14, scope: !7329)
!7334 = !DILocation(line: 3680, column: 5, scope: !7329)
!7335 = !DILocation(line: 3682, column: 14, scope: !7304)
!7336 = !DILocation(line: 3682, column: 7, scope: !7283)
!7337 = !DILocation(line: 3684, column: 7, scope: !7303)
!7338 = !DILocation(line: 0, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 3693, column: 12)
!7340 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 3692, column: 6)
!7341 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 3691, column: 8)
!7342 = !DILocation(line: 3686, column: 12, scope: !7302)
!7343 = !DILocation(line: 0, scope: !7302)
!7344 = !DILocation(line: 3686, column: 21, scope: !7301)
!7345 = !DILocation(line: 3686, column: 7, scope: !7302)
!7346 = !DILocation(line: 3688, column: 21, scope: !7300)
!7347 = !DILocation(line: 0, scope: !7300)
!7348 = !DILocation(line: 3689, column: 20, scope: !7300)
!7349 = !DILocation(line: 3691, column: 10, scope: !7341)
!7350 = !DILocation(line: 3691, column: 8, scope: !7300)
!7351 = !DILocation(line: 3709, column: 6, scope: !7341)
!7352 = !DILocation(line: 3695, column: 8, scope: !7339)
!7353 = !DILocation(line: 3694, column: 15, scope: !7339)
!7354 = !DILocation(line: 3699, column: 7, scope: !7340)
!7355 = !DILocation(line: 3700, column: 7, scope: !7340)
!7356 = !DILocation(line: 3698, column: 14, scope: !7340)
!7357 = !DILocation(line: 3703, column: 15, scope: !7340)
!7358 = !DILocation(line: 3705, column: 17, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 3705, column: 12)
!7360 = !DILocation(line: 3705, column: 12, scope: !7340)
!7361 = !DILocation(line: 3706, column: 3, scope: !7359)
!7362 = !DILocation(line: 3686, column: 31, scope: !7301)
!7363 = !DILocation(line: 3686, column: 7, scope: !7301)
!7364 = distinct !{!7364, !7345, !7365}
!7365 = !DILocation(line: 3710, column: 2, scope: !7302)
!7366 = !DILocation(line: 3712, column: 15, scope: !7303)
!7367 = !DILocation(line: 3713, column: 7, scope: !7303)
!7368 = !DILocation(line: 3715, column: 7, scope: !7303)
!7369 = !DILocation(line: 3716, column: 5, scope: !7303)
!7370 = !DILocation(line: 3719, column: 45, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7304, file: !3, line: 3718, column: 5)
!7372 = !DILocation(line: 3720, column: 13, scope: !7371)
!7373 = !DILocation(line: 3719, column: 13, scope: !7371)
!7374 = !DILocation(line: 3723, column: 13, scope: !7371)
!7375 = !DILocation(line: 3724, column: 12, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 3724, column: 11)
!7377 = !DILocation(line: 3724, column: 11, scope: !7371)
!7378 = !DILocation(line: 3726, column: 28, scope: !7376)
!7379 = !DILocation(line: 3726, column: 33, scope: !7376)
!7380 = !DILocation(line: 3726, column: 8, scope: !7376)
!7381 = !DILocation(line: 3725, column: 8, scope: !7376)
!7382 = !DILocation(line: 3725, column: 2, scope: !7376)
!7383 = !DILocation(line: 0, scope: !7371)
!7384 = !DILocation(line: 3730, column: 7, scope: !7371)
!7385 = !DILocation(line: 3729, column: 14, scope: !7371)
!7386 = !DILocation(line: 3731, column: 16, scope: !7371)
!7387 = !DILocation(line: 3735, column: 1, scope: !7283)
!7388 = distinct !DISubprogram(name: "maybe_emit_unop_insn", scope: !3, file: !3, line: 3796, type: !7389, scopeLine: 3797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7391)
!7389 = !DISubroutineType(types: !7390)
!7390 = !{!2071, !2072, !2090, !2090, !384}
!7391 = !{!7392, !7393, !7394, !7395, !7396, !7397, !7398, !7399}
!7392 = !DILocalVariable(name: "icode", arg: 1, scope: !7388, file: !3, line: 3796, type: !2072)
!7393 = !DILocalVariable(name: "target", arg: 2, scope: !7388, file: !3, line: 3796, type: !2090)
!7394 = !DILocalVariable(name: "op0", arg: 3, scope: !7388, file: !3, line: 3796, type: !2090)
!7395 = !DILocalVariable(name: "code", arg: 4, scope: !7388, file: !3, line: 3796, type: !384)
!7396 = !DILocalVariable(name: "temp", scope: !7388, file: !3, line: 3798, type: !2090)
!7397 = !DILocalVariable(name: "mode0", scope: !7388, file: !3, line: 3799, type: !5)
!7398 = !DILocalVariable(name: "pat", scope: !7388, file: !3, line: 3800, type: !2090)
!7399 = !DILocalVariable(name: "last", scope: !7388, file: !3, line: 3801, type: !2090)
!7400 = !DILocation(line: 0, scope: !7388)
!7401 = !DILocation(line: 3799, column: 29, scope: !7388)
!7402 = !DILocation(line: 3799, column: 46, scope: !7388)
!7403 = !DILocation(line: 3799, column: 57, scope: !7388)
!7404 = !DILocation(line: 3801, column: 14, scope: !7388)
!7405 = !DILocation(line: 3807, column: 36, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 3807, column: 7)
!7407 = !DILocation(line: 3807, column: 8, scope: !7406)
!7408 = !DILocation(line: 3807, column: 7, scope: !7388)
!7409 = !DILocation(line: 3808, column: 11, scope: !7406)
!7410 = !DILocation(line: 3808, column: 5, scope: !7406)
!7411 = !DILocation(line: 3810, column: 36, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 3810, column: 7)
!7413 = !DILocation(line: 3810, column: 53, scope: !7412)
!7414 = !DILocation(line: 3810, column: 8, scope: !7412)
!7415 = !DILocation(line: 3810, column: 7, scope: !7388)
!7416 = !DILocation(line: 3811, column: 25, scope: !7412)
!7417 = !DILocation(line: 3811, column: 12, scope: !7412)
!7418 = !DILocation(line: 3811, column: 5, scope: !7412)
!7419 = !DILocation(line: 3813, column: 9, scope: !7388)
!7420 = !DILocation(line: 3814, column: 8, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 3814, column: 7)
!7422 = !DILocation(line: 3814, column: 7, scope: !7388)
!7423 = !DILocation(line: 3816, column: 7, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 3815, column: 5)
!7425 = !DILocation(line: 3817, column: 7, scope: !7424)
!7426 = !DILocation(line: 3820, column: 7, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 3820, column: 7)
!7428 = !DILocation(line: 3820, column: 20, scope: !7427)
!7429 = !DILocation(line: 3820, column: 23, scope: !7427)
!7430 = !DILocation(line: 3820, column: 39, scope: !7427)
!7431 = !DILocation(line: 3820, column: 59, scope: !7427)
!7432 = !DILocation(line: 3820, column: 51, scope: !7427)
!7433 = !DILocation(line: 3821, column: 5, scope: !7427)
!7434 = !DILocation(line: 3823, column: 3, scope: !7388)
!7435 = !DILocation(line: 3825, column: 12, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 3825, column: 7)
!7437 = !DILocation(line: 3825, column: 7, scope: !7388)
!7438 = !DILocation(line: 3826, column: 5, scope: !7436)
!7439 = !DILocation(line: 3828, column: 1, scope: !7388)
!7440 = distinct !DISubprogram(name: "add_equal_note", scope: !3, file: !3, line: 220, type: !7441, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7443)
!7441 = !DISubroutineType(types: !7442)
!7442 = !{!2072, !2090, !2090, !384, !2090, !2090}
!7443 = !{!7444, !7445, !7446, !7447, !7448, !7449, !7450, !7451, !7452}
!7444 = !DILocalVariable(name: "insns", arg: 1, scope: !7440, file: !3, line: 220, type: !2090)
!7445 = !DILocalVariable(name: "target", arg: 2, scope: !7440, file: !3, line: 220, type: !2090)
!7446 = !DILocalVariable(name: "code", arg: 3, scope: !7440, file: !3, line: 220, type: !384)
!7447 = !DILocalVariable(name: "op0", arg: 4, scope: !7440, file: !3, line: 220, type: !2090)
!7448 = !DILocalVariable(name: "op1", arg: 5, scope: !7440, file: !3, line: 220, type: !2090)
!7449 = !DILocalVariable(name: "last_insn", scope: !7440, file: !3, line: 222, type: !2090)
!7450 = !DILocalVariable(name: "insn", scope: !7440, file: !3, line: 222, type: !2090)
!7451 = !DILocalVariable(name: "set", scope: !7440, file: !3, line: 222, type: !2090)
!7452 = !DILocalVariable(name: "note", scope: !7440, file: !3, line: 223, type: !2090)
!7453 = !DILocation(line: 0, scope: !7440)
!7454 = !DILocation(line: 225, column: 3, scope: !7440)
!7455 = !DILocation(line: 227, column: 7, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 227, column: 7)
!7457 = !DILocation(line: 227, column: 28, scope: !7456)
!7458 = !DILocation(line: 228, column: 7, scope: !7456)
!7459 = !DILocation(line: 228, column: 31, scope: !7456)
!7460 = !DILocation(line: 229, column: 7, scope: !7456)
!7461 = !DILocation(line: 229, column: 31, scope: !7456)
!7462 = !DILocation(line: 230, column: 7, scope: !7456)
!7463 = !DILocation(line: 230, column: 31, scope: !7456)
!7464 = !DILocation(line: 231, column: 7, scope: !7456)
!7465 = !DILocation(line: 231, column: 31, scope: !7456)
!7466 = !DILocation(line: 227, column: 7, scope: !7440)
!7467 = !DILocation(line: 234, column: 7, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 234, column: 7)
!7469 = !DILocation(line: 234, column: 25, scope: !7468)
!7470 = !DILocation(line: 234, column: 7, scope: !7440)
!7471 = !DILocation(line: 237, column: 3, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 237, column: 3)
!7473 = !DILocation(line: 0, scope: !7472)
!7474 = !DILocation(line: 238, column: 8, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7472, file: !3, line: 237, column: 3)
!7476 = !DILocation(line: 238, column: 30, scope: !7475)
!7477 = !DILocation(line: 237, column: 3, scope: !7475)
!7478 = distinct !{!7478, !7471, !7479}
!7479 = !DILocation(line: 240, column: 5, scope: !7472)
!7480 = !DILocation(line: 242, column: 9, scope: !7440)
!7481 = !DILocation(line: 243, column: 11, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 243, column: 7)
!7483 = !DILocation(line: 243, column: 7, scope: !7440)
!7484 = !DILocation(line: 246, column: 22, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 246, column: 7)
!7486 = !DILocation(line: 246, column: 9, scope: !7485)
!7487 = !DILocation(line: 248, column: 7, scope: !7485)
!7488 = !DILocation(line: 248, column: 11, scope: !7485)
!7489 = !DILocation(line: 248, column: 37, scope: !7485)
!7490 = !DILocation(line: 249, column: 4, scope: !7485)
!7491 = !DILocation(line: 249, column: 22, scope: !7485)
!7492 = !DILocation(line: 249, column: 9, scope: !7485)
!7493 = !DILocation(line: 246, column: 7, scope: !7440)
!7494 = !DILocation(line: 254, column: 7, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 254, column: 7)
!7496 = !DILocation(line: 255, column: 7, scope: !7495)
!7497 = !DILocation(line: 255, column: 11, scope: !7495)
!7498 = !DILocation(line: 255, column: 15, scope: !7495)
!7499 = !DILocation(line: 255, column: 18, scope: !7495)
!7500 = !DILocation(line: 254, column: 7, scope: !7440)
!7501 = !DILocation(line: 258, column: 7, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 256, column: 5)
!7503 = !DILocation(line: 0, scope: !7502)
!7504 = !DILocation(line: 258, column: 19, scope: !7502)
!7505 = !DILocation(line: 260, column: 8, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7507, file: !3, line: 260, column: 8)
!7507 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 259, column: 2)
!7508 = !DILocation(line: 260, column: 8, scope: !7507)
!7509 = distinct !{!7509, !7501, !7510}
!7510 = !DILocation(line: 264, column: 2, scope: !7502)
!7511 = !DILocation(line: 267, column: 7, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 267, column: 7)
!7513 = !DILocation(line: 267, column: 28, scope: !7512)
!7514 = !DILocation(line: 0, scope: !7512)
!7515 = !DILocation(line: 267, column: 7, scope: !7440)
!7516 = !DILocation(line: 268, column: 12, scope: !7512)
!7517 = !DILocation(line: 268, column: 5, scope: !7512)
!7518 = !DILocation(line: 270, column: 12, scope: !7512)
!7519 = !DILocation(line: 272, column: 3, scope: !7440)
!7520 = !DILocation(line: 274, column: 3, scope: !7440)
!7521 = !DILocation(line: 275, column: 1, scope: !7440)
!7522 = distinct !DISubprogram(name: "emit_unop_insn", scope: !3, file: !3, line: 3836, type: !7523, scopeLine: 3837, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7525)
!7523 = !DISubroutineType(types: !7524)
!7524 = !{null, !2072, !2090, !2090, !384}
!7525 = !{!7526, !7527, !7528, !7529, !7530}
!7526 = !DILocalVariable(name: "icode", arg: 1, scope: !7522, file: !3, line: 3836, type: !2072)
!7527 = !DILocalVariable(name: "target", arg: 2, scope: !7522, file: !3, line: 3836, type: !2090)
!7528 = !DILocalVariable(name: "op0", arg: 3, scope: !7522, file: !3, line: 3836, type: !2090)
!7529 = !DILocalVariable(name: "code", arg: 4, scope: !7522, file: !3, line: 3836, type: !384)
!7530 = !DILocalVariable(name: "ok", scope: !7522, file: !3, line: 3838, type: !2071)
!7531 = !DILocation(line: 0, scope: !7522)
!7532 = !DILocation(line: 3838, column: 13, scope: !7522)
!7533 = !DILocation(line: 3839, column: 3, scope: !7522)
!7534 = !DILocation(line: 3840, column: 1, scope: !7522)
!7535 = distinct !DISubprogram(name: "no_conflict_move_test", scope: !3, file: !3, line: 3852, type: !7536, scopeLine: 3853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7538)
!7536 = !DISubroutineType(types: !7537)
!7537 = !{null, !2090, !7069, !2076}
!7538 = !{!7539, !7540, !7541, !7542}
!7539 = !DILocalVariable(name: "dest", arg: 1, scope: !7535, file: !3, line: 3852, type: !2090)
!7540 = !DILocalVariable(name: "set", arg: 2, scope: !7535, file: !3, line: 3852, type: !7069)
!7541 = !DILocalVariable(name: "p0", arg: 3, scope: !7535, file: !3, line: 3852, type: !2076)
!7542 = !DILocalVariable(name: "p", scope: !7535, file: !3, line: 3854, type: !3226)
!7543 = !DILocation(line: 0, scope: !7535)
!7544 = !DILocation(line: 3857, column: 35, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 3857, column: 7)
!7546 = !DILocation(line: 3857, column: 7, scope: !7545)
!7547 = !DILocation(line: 3857, column: 7, scope: !7535)
!7548 = !DILocation(line: 3858, column: 8, scope: !7545)
!7549 = !DILocation(line: 3858, column: 18, scope: !7545)
!7550 = !DILocation(line: 3858, column: 5, scope: !7545)
!7551 = !DILocation(line: 3861, column: 15, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 3861, column: 12)
!7553 = !DILocation(line: 3861, column: 26, scope: !7552)
!7554 = !DILocation(line: 3861, column: 20, scope: !7552)
!7555 = !DILocation(line: 3861, column: 12, scope: !7545)
!7556 = !DILocation(line: 3865, column: 43, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 3865, column: 12)
!7558 = !DILocation(line: 3865, column: 12, scope: !7557)
!7559 = !DILocation(line: 3866, column: 5, scope: !7557)
!7560 = !DILocation(line: 3866, column: 9, scope: !7557)
!7561 = !DILocation(line: 3866, column: 27, scope: !7557)
!7562 = !DILocation(line: 3866, column: 31, scope: !7557)
!7563 = !DILocation(line: 3867, column: 5, scope: !7557)
!7564 = !DILocation(line: 3867, column: 37, scope: !7557)
!7565 = !DILocation(line: 3867, column: 47, scope: !7557)
!7566 = !DILocation(line: 3867, column: 8, scope: !7557)
!7567 = !DILocation(line: 3874, column: 5, scope: !7557)
!7568 = !DILocation(line: 3874, column: 9, scope: !7557)
!7569 = !DILocation(line: 3874, column: 24, scope: !7557)
!7570 = !DILocation(line: 3875, column: 9, scope: !7557)
!7571 = !DILocation(line: 3875, column: 28, scope: !7557)
!7572 = !DILocation(line: 3875, column: 46, scope: !7557)
!7573 = !DILocation(line: 3875, column: 13, scope: !7557)
!7574 = !DILocation(line: 3876, column: 6, scope: !7557)
!7575 = !DILocation(line: 3876, column: 24, scope: !7557)
!7576 = !DILocation(line: 3876, column: 43, scope: !7557)
!7577 = !DILocation(line: 3876, column: 9, scope: !7557)
!7578 = !DILocation(line: 3877, column: 6, scope: !7557)
!7579 = !DILocation(line: 3877, column: 29, scope: !7557)
!7580 = !DILocation(line: 3877, column: 47, scope: !7557)
!7581 = !DILocation(line: 3877, column: 57, scope: !7557)
!7582 = !DILocation(line: 3877, column: 9, scope: !7557)
!7583 = !DILocation(line: 3878, column: 6, scope: !7557)
!7584 = !DILocation(line: 3878, column: 29, scope: !7557)
!7585 = !DILocation(line: 3878, column: 48, scope: !7557)
!7586 = !DILocation(line: 3878, column: 58, scope: !7557)
!7587 = !DILocation(line: 3878, column: 9, scope: !7557)
!7588 = !DILocation(line: 3865, column: 12, scope: !7552)
!7589 = !DILocation(line: 3879, column: 8, scope: !7557)
!7590 = !DILocation(line: 3879, column: 18, scope: !7557)
!7591 = !DILocation(line: 3879, column: 5, scope: !7557)
!7592 = !DILocation(line: 3880, column: 1, scope: !7535)
!7593 = distinct !DISubprogram(name: "can_compare_p", scope: !3, file: !3, line: 4002, type: !7594, scopeLine: 4004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7596)
!7594 = !DISubroutineType(types: !7595)
!7595 = !{!2072, !384, !5, !2055}
!7596 = !{!7597, !7598, !7599, !7600, !7601}
!7597 = !DILocalVariable(name: "code", arg: 1, scope: !7593, file: !3, line: 4002, type: !384)
!7598 = !DILocalVariable(name: "mode", arg: 2, scope: !7593, file: !3, line: 4002, type: !5)
!7599 = !DILocalVariable(name: "purpose", arg: 3, scope: !7593, file: !3, line: 4003, type: !2055)
!7600 = !DILocalVariable(name: "test", scope: !7593, file: !3, line: 4005, type: !2090)
!7601 = !DILocalVariable(name: "icode", scope: !7602, file: !3, line: 4009, type: !2072)
!7602 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 4008, column: 5)
!7603 = !DILocation(line: 0, scope: !7593)
!7604 = !DILocation(line: 4006, column: 10, scope: !7593)
!7605 = !DILocation(line: 0, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 4019, column: 11)
!7607 = !DILocation(line: 0, scope: !7602)
!7608 = !DILocation(line: 4007, column: 3, scope: !7593)
!7609 = !DILocation(line: 4012, column: 23, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 4011, column: 11)
!7611 = !DILocation(line: 4012, column: 60, scope: !7610)
!7612 = !DILocation(line: 4012, column: 71, scope: !7610)
!7613 = !DILocation(line: 4013, column: 11, scope: !7610)
!7614 = !DILocation(line: 4013, column: 14, scope: !7610)
!7615 = !DILocation(line: 4013, column: 31, scope: !7610)
!7616 = !DILocation(line: 4013, column: 42, scope: !7610)
!7617 = !DILocation(line: 4011, column: 11, scope: !7602)
!7618 = !DILocation(line: 4023, column: 14, scope: !7602)
!7619 = !DILocation(line: 4024, column: 7, scope: !7602)
!7620 = !DILocation(line: 4025, column: 5, scope: !7593)
!7621 = !DILocation(line: 4026, column: 15, scope: !7593)
!7622 = !DILocation(line: 4025, column: 5, scope: !7602)
!7623 = distinct !{!7623, !7608, !7624}
!7624 = !DILocation(line: 4026, column: 26, scope: !7593)
!7625 = !DILocation(line: 4029, column: 1, scope: !7593)
!7626 = !DILocation(line: 4016, column: 23, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 4015, column: 11)
!7628 = !DILocation(line: 4016, column: 59, scope: !7627)
!7629 = !DILocation(line: 4016, column: 70, scope: !7627)
!7630 = !DILocation(line: 4017, column: 11, scope: !7627)
!7631 = !DILocation(line: 4017, column: 14, scope: !7627)
!7632 = !DILocation(line: 4017, column: 31, scope: !7627)
!7633 = !DILocation(line: 4017, column: 42, scope: !7627)
!7634 = !DILocation(line: 4015, column: 11, scope: !7602)
!7635 = !DILocation(line: 4020, column: 4, scope: !7606)
!7636 = !DILocation(line: 4020, column: 41, scope: !7606)
!7637 = !DILocation(line: 4020, column: 51, scope: !7606)
!7638 = !DILocation(line: 4019, column: 11, scope: !7602)
!7639 = !DILocation(line: 4012, column: 11, scope: !7610)
!7640 = !DILocation(line: 4020, column: 7, scope: !7606)
!7641 = distinct !DISubprogram(name: "prepare_operand", scope: !3, file: !3, line: 4266, type: !7642, scopeLine: 4268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7644)
!7642 = !DISubroutineType(types: !7643)
!7643 = !{!2090, !2072, !2090, !2072, !5, !5, !2072}
!7644 = !{!7645, !7646, !7647, !7648, !7649, !7650}
!7645 = !DILocalVariable(name: "icode", arg: 1, scope: !7641, file: !3, line: 4266, type: !2072)
!7646 = !DILocalVariable(name: "x", arg: 2, scope: !7641, file: !3, line: 4266, type: !2090)
!7647 = !DILocalVariable(name: "opnum", arg: 3, scope: !7641, file: !3, line: 4266, type: !2072)
!7648 = !DILocalVariable(name: "mode", arg: 4, scope: !7641, file: !3, line: 4266, type: !5)
!7649 = !DILocalVariable(name: "wider_mode", arg: 5, scope: !7641, file: !3, line: 4267, type: !5)
!7650 = !DILocalVariable(name: "unsignedp", arg: 6, scope: !7641, file: !3, line: 4267, type: !2072)
!7651 = !DILocation(line: 0, scope: !7641)
!7652 = !DILocation(line: 4269, column: 12, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 4269, column: 7)
!7654 = !DILocation(line: 4269, column: 7, scope: !7641)
!7655 = !DILocation(line: 4270, column: 9, scope: !7653)
!7656 = !DILocation(line: 4270, column: 5, scope: !7653)
!7657 = !DILocation(line: 4272, column: 8, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 4272, column: 7)
!7659 = !DILocation(line: 4272, column: 25, scope: !7658)
!7660 = !DILocation(line: 4272, column: 40, scope: !7658)
!7661 = !DILocation(line: 4273, column: 43, scope: !7658)
!7662 = !DILocation(line: 4272, column: 7, scope: !7641)
!7663 = !DILocation(line: 4275, column: 11, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 4275, column: 11)
!7665 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 4274, column: 5)
!7666 = !DILocation(line: 4275, column: 11, scope: !7665)
!7667 = !DILocation(line: 4277, column: 61, scope: !7665)
!7668 = !DILocation(line: 4277, column: 11, scope: !7665)
!7669 = !DILocation(line: 4278, column: 5, scope: !7665)
!7670 = !DILocation(line: 4281, column: 1, scope: !7641)
!7671 = distinct !DISubprogram(name: "emit_cmp_and_jump_insns", scope: !3, file: !3, line: 4320, type: !7672, scopeLine: 4322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7674)
!7672 = !DISubroutineType(types: !7673)
!7673 = !{null, !2090, !2090, !384, !2090, !5, !2072, !2090}
!7674 = !{!7675, !7676, !7677, !7678, !7679, !7680, !7681, !7682, !7683, !7684}
!7675 = !DILocalVariable(name: "x", arg: 1, scope: !7671, file: !3, line: 4320, type: !2090)
!7676 = !DILocalVariable(name: "y", arg: 2, scope: !7671, file: !3, line: 4320, type: !2090)
!7677 = !DILocalVariable(name: "comparison", arg: 3, scope: !7671, file: !3, line: 4320, type: !384)
!7678 = !DILocalVariable(name: "size", arg: 4, scope: !7671, file: !3, line: 4320, type: !2090)
!7679 = !DILocalVariable(name: "mode", arg: 5, scope: !7671, file: !3, line: 4321, type: !5)
!7680 = !DILocalVariable(name: "unsignedp", arg: 6, scope: !7671, file: !3, line: 4321, type: !2072)
!7681 = !DILocalVariable(name: "label", arg: 7, scope: !7671, file: !3, line: 4321, type: !2090)
!7682 = !DILocalVariable(name: "op0", scope: !7671, file: !3, line: 4323, type: !2090)
!7683 = !DILocalVariable(name: "op1", scope: !7671, file: !3, line: 4323, type: !2090)
!7684 = !DILocalVariable(name: "test", scope: !7671, file: !3, line: 4324, type: !2090)
!7685 = !DILocation(line: 0, scope: !7671)
!7686 = !DILocation(line: 4324, column: 3, scope: !7671)
!7687 = !DILocation(line: 4327, column: 7, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 4327, column: 7)
!7689 = !DILocation(line: 4328, column: 7, scope: !7688)
!7690 = !DILocation(line: 4328, column: 25, scope: !7688)
!7691 = !DILocation(line: 4328, column: 10, scope: !7688)
!7692 = !DILocation(line: 4327, column: 7, scope: !7671)
!7693 = !DILocation(line: 4331, column: 20, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 4329, column: 5)
!7695 = !DILocation(line: 4332, column: 5, scope: !7694)
!7696 = !DILocation(line: 4337, column: 7, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 4337, column: 7)
!7698 = !DILocation(line: 4337, column: 7, scope: !7671)
!7699 = !DILocation(line: 4338, column: 11, scope: !7697)
!7700 = !DILocation(line: 4338, column: 5, scope: !7697)
!7701 = !DILocation(line: 4340, column: 7, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 4340, column: 7)
!7703 = !DILocation(line: 4340, column: 7, scope: !7671)
!7704 = !DILocation(line: 4341, column: 18, scope: !7702)
!7705 = !DILocation(line: 4341, column: 5, scope: !7702)
!7706 = !DILocation(line: 4343, column: 3, scope: !7671)
!7707 = !DILocation(line: 4345, column: 29, scope: !7671)
!7708 = !DILocation(line: 4345, column: 35, scope: !7671)
!7709 = !DILocation(line: 4345, column: 3, scope: !7671)
!7710 = !DILocation(line: 4346, column: 1, scope: !7671)
!7711 = distinct !DISubprogram(name: "prepare_cmp_insn", scope: !3, file: !3, line: 4049, type: !7712, scopeLine: 4052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7715)
!7712 = !DISubroutineType(types: !7713)
!7713 = !{null, !2090, !2090, !384, !2090, !2072, !2047, !3238, !7714}
!7714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!7715 = !{!7716, !7717, !7718, !7719, !7720, !7721, !7722, !7723, !7724, !7725, !7726, !7727, !7728, !7729, !7732, !7733, !7734, !7735, !7736, !7737, !7739, !7742, !7743, !7744, !7747, !7750}
!7716 = !DILocalVariable(name: "x", arg: 1, scope: !7711, file: !3, line: 4049, type: !2090)
!7717 = !DILocalVariable(name: "y", arg: 2, scope: !7711, file: !3, line: 4049, type: !2090)
!7718 = !DILocalVariable(name: "comparison", arg: 3, scope: !7711, file: !3, line: 4049, type: !384)
!7719 = !DILocalVariable(name: "size", arg: 4, scope: !7711, file: !3, line: 4049, type: !2090)
!7720 = !DILocalVariable(name: "unsignedp", arg: 5, scope: !7711, file: !3, line: 4050, type: !2072)
!7721 = !DILocalVariable(name: "methods", arg: 6, scope: !7711, file: !3, line: 4050, type: !2047)
!7722 = !DILocalVariable(name: "ptest", arg: 7, scope: !7711, file: !3, line: 4051, type: !3238)
!7723 = !DILocalVariable(name: "pmode", arg: 8, scope: !7711, file: !3, line: 4051, type: !7714)
!7724 = !DILocalVariable(name: "mode", scope: !7711, file: !3, line: 4053, type: !5)
!7725 = !DILocalVariable(name: "libfunc", scope: !7711, file: !3, line: 4054, type: !2090)
!7726 = !DILocalVariable(name: "test", scope: !7711, file: !3, line: 4054, type: !2090)
!7727 = !DILocalVariable(name: "cmp_mode", scope: !7711, file: !3, line: 4055, type: !5)
!7728 = !DILocalVariable(name: "mclass", scope: !7711, file: !3, line: 4056, type: !2025)
!7729 = !DILocalVariable(name: "result_mode", scope: !7730, file: !3, line: 4090, type: !5)
!7730 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 4089, column: 5)
!7731 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 4088, column: 7)
!7732 = !DILocalVariable(name: "cmp_code", scope: !7730, file: !3, line: 4091, type: !527)
!7733 = !DILocalVariable(name: "length_type", scope: !7730, file: !3, line: 4092, type: !2205)
!7734 = !DILocalVariable(name: "libfunc", scope: !7730, file: !3, line: 4093, type: !2090)
!7735 = !DILocalVariable(name: "result", scope: !7730, file: !3, line: 4094, type: !2090)
!7736 = !DILocalVariable(name: "opalign", scope: !7730, file: !3, line: 4095, type: !2090)
!7737 = !DILocalVariable(name: "icode", scope: !7738, file: !3, line: 4175, type: !527)
!7738 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 4174, column: 4)
!7739 = !DILocalVariable(name: "last", scope: !7740, file: !3, line: 4180, type: !2090)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 4179, column: 2)
!7741 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 4177, column: 11)
!7742 = !DILocalVariable(name: "op0", scope: !7740, file: !3, line: 4181, type: !2090)
!7743 = !DILocalVariable(name: "op1", scope: !7740, file: !3, line: 4182, type: !2090)
!7744 = !DILocalVariable(name: "result", scope: !7745, file: !3, line: 4209, type: !2090)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 4208, column: 5)
!7746 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 4207, column: 7)
!7747 = !DILocalVariable(name: "ulibfunc", scope: !7748, file: !3, line: 4219, type: !2090)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 4218, column: 2)
!7749 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 4217, column: 11)
!7750 = !DILabel(scope: !7711, name: "fail", file: !3, line: 4256)
!7751 = !DILocation(line: 0, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 4198, column: 11)
!7753 = !DILocation(line: 0, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 4204, column: 7)
!7755 = !DILocation(line: 0, scope: !7749)
!7756 = !DILocation(line: 4053, column: 28, scope: !7711)
!7757 = !DILocation(line: 4248, column: 7, scope: !7745)
!7758 = !DILocation(line: 0, scope: !7711)
!7759 = !DILocation(line: 4059, column: 3, scope: !7711)
!7760 = !DILocation(line: 4063, column: 7, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 4063, column: 7)
!7762 = !DILocation(line: 4063, column: 25, scope: !7761)
!7763 = !DILocation(line: 4063, column: 22, scope: !7761)
!7764 = !DILocation(line: 4064, column: 33, scope: !7761)
!7765 = !DILocation(line: 4064, column: 11, scope: !7761)
!7766 = !DILocation(line: 4065, column: 11, scope: !7761)
!7767 = !DILocation(line: 4063, column: 7, scope: !7711)
!7768 = !DILocation(line: 4066, column: 9, scope: !7761)
!7769 = !DILocation(line: 4066, column: 5, scope: !7761)
!7770 = !DILocation(line: 4068, column: 7, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 4068, column: 7)
!7772 = !DILocation(line: 4068, column: 25, scope: !7771)
!7773 = !DILocation(line: 4068, column: 22, scope: !7771)
!7774 = !DILocation(line: 4069, column: 33, scope: !7771)
!7775 = !DILocation(line: 4069, column: 11, scope: !7771)
!7776 = !DILocation(line: 4070, column: 11, scope: !7771)
!7777 = !DILocation(line: 4068, column: 7, scope: !7711)
!7778 = !DILocation(line: 4071, column: 9, scope: !7771)
!7779 = !DILocation(line: 4071, column: 5, scope: !7771)
!7780 = !DILocation(line: 4081, column: 7, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 4081, column: 7)
!7782 = !DILocation(line: 4081, column: 20, scope: !7781)
!7783 = !DILocation(line: 4081, column: 32, scope: !7781)
!7784 = !DILocation(line: 4081, column: 35, scope: !7781)
!7785 = !DILocation(line: 4081, column: 48, scope: !7781)
!7786 = !DILocation(line: 4081, column: 7, scope: !7711)
!7787 = !DILocation(line: 4082, column: 9, scope: !7781)
!7788 = !DILocation(line: 4082, column: 5, scope: !7781)
!7789 = !DILocation(line: 4083, column: 12, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 4083, column: 7)
!7791 = !DILocation(line: 4083, column: 7, scope: !7711)
!7792 = !DILocation(line: 4084, column: 12, scope: !7790)
!7793 = !DILocation(line: 4084, column: 25, scope: !7790)
!7794 = !DILocation(line: 4084, column: 39, scope: !7790)
!7795 = !DILocation(line: 4084, column: 54, scope: !7790)
!7796 = !DILocation(line: 4088, column: 12, scope: !7731)
!7797 = !DILocation(line: 4088, column: 7, scope: !7711)
!7798 = !DILocation(line: 4096, column: 4, scope: !7730)
!7799 = !DILocation(line: 0, scope: !7730)
!7800 = !DILocation(line: 4098, column: 7, scope: !7730)
!7801 = !DILocation(line: 0, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 4115, column: 8)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 4105, column: 2)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !3, line: 4102, column: 7)
!7805 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 4102, column: 7)
!7806 = !DILocation(line: 4102, column: 12, scope: !7805)
!7807 = !DILocation(line: 0, scope: !7805)
!7808 = !DILocation(line: 4103, column: 14, scope: !7804)
!7809 = !DILocation(line: 4102, column: 7, scope: !7805)
!7810 = !DILocation(line: 4106, column: 15, scope: !7803)
!7811 = !DILocation(line: 4107, column: 17, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 4107, column: 8)
!7813 = !DILocation(line: 4107, column: 8, scope: !7803)
!7814 = !DILocation(line: 4108, column: 17, scope: !7812)
!7815 = !DILocation(line: 4108, column: 6, scope: !7812)
!7816 = !DILocation(line: 0, scope: !7803)
!7817 = !DILocation(line: 4109, column: 17, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 4109, column: 8)
!7819 = !DILocation(line: 4109, column: 8, scope: !7803)
!7820 = !DILocation(line: 4110, column: 17, scope: !7818)
!7821 = !DILocation(line: 4110, column: 6, scope: !7818)
!7822 = !DILocation(line: 4111, column: 17, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 4111, column: 8)
!7824 = !DILocation(line: 4111, column: 8, scope: !7803)
!7825 = !DILocation(line: 4115, column: 9, scope: !7802)
!7826 = !DILocation(line: 4116, column: 9, scope: !7802)
!7827 = !DILocation(line: 4118, column: 7, scope: !7802)
!7828 = !DILocation(line: 4116, column: 12, scope: !7802)
!7829 = !DILocation(line: 4116, column: 35, scope: !7802)
!7830 = !DILocation(line: 4116, column: 32, scope: !7802)
!7831 = !DILocation(line: 4116, column: 29, scope: !7802)
!7832 = !DILocation(line: 4116, column: 26, scope: !7802)
!7833 = !DILocation(line: 4117, column: 8, scope: !7802)
!7834 = !DILocation(line: 4117, column: 12, scope: !7802)
!7835 = !DILocation(line: 4118, column: 5, scope: !7802)
!7836 = !DILocation(line: 4115, column: 8, scope: !7803)
!7837 = !DILocation(line: 4121, column: 18, scope: !7803)
!7838 = !DILocation(line: 4121, column: 38, scope: !7803)
!7839 = !DILocation(line: 4121, column: 49, scope: !7803)
!7840 = !DILocation(line: 4122, column: 13, scope: !7803)
!7841 = !DILocation(line: 4123, column: 11, scope: !7803)
!7842 = !DILocation(line: 4124, column: 15, scope: !7803)
!7843 = !DILocation(line: 4124, column: 4, scope: !7803)
!7844 = !DILocation(line: 4126, column: 20, scope: !7803)
!7845 = !DILocation(line: 4126, column: 18, scope: !7803)
!7846 = !DILocation(line: 4127, column: 18, scope: !7803)
!7847 = !DILocation(line: 4128, column: 4, scope: !7803)
!7848 = !DILocation(line: 4104, column: 16, scope: !7804)
!7849 = !DILocation(line: 4102, column: 7, scope: !7804)
!7850 = distinct !{!7850, !7809, !7851}
!7851 = !DILocation(line: 4129, column: 2, scope: !7805)
!7852 = !DILocation(line: 4131, column: 32, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 4131, column: 11)
!7854 = !DILocation(line: 4135, column: 17, scope: !7730)
!7855 = !DILocation(line: 4136, column: 21, scope: !7730)
!7856 = !DILocation(line: 4137, column: 21, scope: !7730)
!7857 = !DILocation(line: 4138, column: 18, scope: !7730)
!7858 = !DILocation(line: 4139, column: 31, scope: !7730)
!7859 = !DILocation(line: 4140, column: 10, scope: !7730)
!7860 = !DILocation(line: 4139, column: 14, scope: !7730)
!7861 = !DILocation(line: 4144, column: 6, scope: !7730)
!7862 = !DILocation(line: 4145, column: 6, scope: !7730)
!7863 = !DILocation(line: 4142, column: 16, scope: !7730)
!7864 = !DILocation(line: 4148, column: 16, scope: !7730)
!7865 = !DILocation(line: 4148, column: 14, scope: !7730)
!7866 = !DILocation(line: 4149, column: 14, scope: !7730)
!7867 = !DILocation(line: 4150, column: 7, scope: !7730)
!7868 = !DILocation(line: 4155, column: 7, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 4155, column: 7)
!7870 = !DILocation(line: 4155, column: 7, scope: !7711)
!7871 = !DILocation(line: 4157, column: 11, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 4157, column: 11)
!7873 = distinct !DILexicalBlock(scope: !7869, file: !3, line: 4156, column: 5)
!7874 = !DILocation(line: 4157, column: 11, scope: !7873)
!7875 = !DILocation(line: 4158, column: 6, scope: !7872)
!7876 = !DILocation(line: 4158, column: 2, scope: !7872)
!7877 = !DILocation(line: 4159, column: 11, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 4159, column: 11)
!7879 = !DILocation(line: 4159, column: 11, scope: !7873)
!7880 = !DILocation(line: 4160, column: 6, scope: !7878)
!7881 = !DILocation(line: 4160, column: 2, scope: !7878)
!7882 = !DILocation(line: 4163, column: 7, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 4163, column: 7)
!7884 = !DILocation(line: 4163, column: 29, scope: !7883)
!7885 = !DILocation(line: 4163, column: 7, scope: !7711)
!7886 = !DILocation(line: 4165, column: 7, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 4164, column: 5)
!7888 = !DILocation(line: 4166, column: 16, scope: !7887)
!7889 = !DILocation(line: 4166, column: 14, scope: !7887)
!7890 = !DILocation(line: 4167, column: 7, scope: !7887)
!7891 = !DILocation(line: 4171, column: 10, scope: !7711)
!7892 = !DILocation(line: 0, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 4188, column: 6)
!7894 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 4183, column: 8)
!7895 = !DILocation(line: 4173, column: 3, scope: !7711)
!7896 = !DILocation(line: 4176, column: 15, scope: !7738)
!7897 = !DILocation(line: 4176, column: 56, scope: !7738)
!7898 = !DILocation(line: 0, scope: !7738)
!7899 = !DILocation(line: 4177, column: 17, scope: !7741)
!7900 = !DILocation(line: 4178, column: 4, scope: !7741)
!7901 = !DILocation(line: 4178, column: 7, scope: !7741)
!7902 = !DILocation(line: 4178, column: 24, scope: !7741)
!7903 = !DILocation(line: 4178, column: 35, scope: !7741)
!7904 = !DILocation(line: 4177, column: 11, scope: !7738)
!7905 = !DILocation(line: 4180, column: 15, scope: !7740)
!7906 = !DILocation(line: 0, scope: !7740)
!7907 = !DILocation(line: 4181, column: 14, scope: !7740)
!7908 = !DILocation(line: 4182, column: 14, scope: !7740)
!7909 = !DILocation(line: 4183, column: 8, scope: !7894)
!7910 = !DILocation(line: 4183, column: 15, scope: !7894)
!7911 = !DILocation(line: 4183, column: 12, scope: !7894)
!7912 = !DILocation(line: 4184, column: 39, scope: !7894)
!7913 = !DILocation(line: 4185, column: 38, scope: !7894)
!7914 = !DILocation(line: 4184, column: 11, scope: !7894)
!7915 = !DILocation(line: 4186, column: 8, scope: !7894)
!7916 = !DILocation(line: 4186, column: 39, scope: !7894)
!7917 = !DILocation(line: 4187, column: 38, scope: !7894)
!7918 = !DILocation(line: 4186, column: 11, scope: !7894)
!7919 = !DILocation(line: 4183, column: 8, scope: !7740)
!7920 = !DILocation(line: 4189, column: 23, scope: !7893)
!7921 = !DILocation(line: 4190, column: 23, scope: !7893)
!7922 = !DILocation(line: 4191, column: 15, scope: !7893)
!7923 = !DILocation(line: 4192, column: 15, scope: !7893)
!7924 = !DILocation(line: 4193, column: 8, scope: !7893)
!7925 = !DILocation(line: 4195, column: 4, scope: !7740)
!7926 = !DILocation(line: 4196, column: 2, scope: !7741)
!7927 = !DILocation(line: 4198, column: 35, scope: !7752)
!7928 = !DILocation(line: 4202, column: 19, scope: !7711)
!7929 = !DILocation(line: 4201, column: 5, scope: !7738)
!7930 = distinct !{!7930, !7895, !7931}
!7931 = !DILocation(line: 4202, column: 30, scope: !7711)
!7932 = !DILocation(line: 4258, column: 1, scope: !7711)
!7933 = !DILocation(line: 4204, column: 15, scope: !7754)
!7934 = !DILocation(line: 4172, column: 12, scope: !7711)
!7935 = !DILocation(line: 4198, column: 39, scope: !7752)
!7936 = !DILocation(line: 4200, column: 18, scope: !7738)
!7937 = !DILocation(line: 4201, column: 5, scope: !7711)
!7938 = !DILocation(line: 4204, column: 7, scope: !7711)
!7939 = !DILocation(line: 4207, column: 8, scope: !7746)
!7940 = !DILocation(line: 4207, column: 7, scope: !7711)
!7941 = !DILocation(line: 4212, column: 17, scope: !7745)
!7942 = !DILocation(line: 4213, column: 7, scope: !7745)
!7943 = !DILocation(line: 4217, column: 11, scope: !7745)
!7944 = !DILocation(line: 4219, column: 19, scope: !7748)
!7945 = !DILocation(line: 0, scope: !7748)
!7946 = !DILocation(line: 4220, column: 8, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 4220, column: 8)
!7948 = !DILocation(line: 4220, column: 8, scope: !7748)
!7949 = !DILocation(line: 4222, column: 2, scope: !7748)
!7950 = !DILocation(line: 0, scope: !7745)
!7951 = !DILocation(line: 4225, column: 14, scope: !7745)
!7952 = !DILocation(line: 4225, column: 6, scope: !7745)
!7953 = !DILocation(line: 4224, column: 16, scope: !7745)
!7954 = !DILocation(line: 4237, column: 11, scope: !7745)
!7955 = !DILocation(line: 4247, column: 16, scope: !7745)
!7956 = !DILocation(line: 4247, column: 14, scope: !7745)
!7957 = !DILocation(line: 4252, column: 5, scope: !7746)
!7958 = !DILocation(line: 4257, column: 10, scope: !7711)
!7959 = !DILocation(line: 4256, column: 2, scope: !7711)
!7960 = distinct !DISubprogram(name: "emit_cmp_and_jump_insn_1", scope: !3, file: !3, line: 4287, type: !7961, scopeLine: 4288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7963)
!7961 = !DISubroutineType(types: !7962)
!7962 = !{null, !2090, !5, !2090}
!7963 = !{!7964, !7965, !7966, !7967, !7968, !7969}
!7964 = !DILocalVariable(name: "test", arg: 1, scope: !7960, file: !3, line: 4287, type: !2090)
!7965 = !DILocalVariable(name: "mode", arg: 2, scope: !7960, file: !3, line: 4287, type: !5)
!7966 = !DILocalVariable(name: "label", arg: 3, scope: !7960, file: !3, line: 4287, type: !2090)
!7967 = !DILocalVariable(name: "optab_mode", scope: !7960, file: !3, line: 4289, type: !5)
!7968 = !DILocalVariable(name: "mclass", scope: !7960, file: !3, line: 4290, type: !2025)
!7969 = !DILocalVariable(name: "icode", scope: !7960, file: !3, line: 4291, type: !527)
!7970 = !DILocation(line: 0, scope: !7960)
!7971 = !DILocation(line: 4293, column: 12, scope: !7960)
!7972 = !DILocation(line: 4294, column: 24, scope: !7960)
!7973 = !DILocation(line: 4295, column: 11, scope: !7960)
!7974 = !DILocation(line: 4295, column: 54, scope: !7960)
!7975 = !DILocation(line: 4297, column: 3, scope: !7960)
!7976 = !DILocation(line: 4298, column: 3, scope: !7960)
!7977 = !DILocation(line: 4299, column: 19, scope: !7960)
!7978 = !DILocation(line: 4299, column: 42, scope: !7960)
!7979 = !DILocation(line: 4299, column: 58, scope: !7960)
!7980 = !DILocation(line: 4299, column: 3, scope: !7960)
!7981 = !DILocation(line: 4300, column: 1, scope: !7960)
!7982 = distinct !DISubprogram(name: "emit_indirect_jump", scope: !3, file: !3, line: 4477, type: !7983, scopeLine: 4478, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7985)
!7983 = !DISubroutineType(types: !7984)
!7984 = !{null, !2090}
!7985 = !{!7986}
!7986 = !DILocalVariable(name: "loc", arg: 1, scope: !7982, file: !3, line: 4477, type: !2090)
!7987 = !DILocation(line: 0, scope: !7982)
!7988 = !DILocation(line: 4479, column: 48, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 4479, column: 7)
!7990 = !DILocation(line: 4479, column: 59, scope: !7989)
!7991 = !DILocation(line: 4479, column: 8, scope: !7989)
!7992 = !DILocation(line: 4479, column: 7, scope: !7982)
!7993 = !DILocation(line: 4481, column: 11, scope: !7989)
!7994 = !DILocation(line: 4481, column: 5, scope: !7989)
!7995 = !DILocation(line: 4483, column: 19, scope: !7982)
!7996 = !DILocation(line: 4483, column: 3, scope: !7982)
!7997 = !DILocation(line: 4484, column: 3, scope: !7982)
!7998 = !DILocation(line: 4485, column: 1, scope: !7982)
!7999 = distinct !DISubprogram(name: "emit_conditional_move", scope: !3, file: !3, line: 4504, type: !8000, scopeLine: 4507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8002)
!8000 = !DISubroutineType(types: !8001)
!8001 = !{!2090, !2090, !384, !2090, !2090, !5, !2090, !2090, !5, !2072}
!8002 = !{!8003, !8004, !8005, !8006, !8007, !8008, !8009, !8010, !8011, !8012, !8013, !8014, !8015, !8016, !8017}
!8003 = !DILocalVariable(name: "target", arg: 1, scope: !7999, file: !3, line: 4504, type: !2090)
!8004 = !DILocalVariable(name: "code", arg: 2, scope: !7999, file: !3, line: 4504, type: !384)
!8005 = !DILocalVariable(name: "op0", arg: 3, scope: !7999, file: !3, line: 4504, type: !2090)
!8006 = !DILocalVariable(name: "op1", arg: 4, scope: !7999, file: !3, line: 4504, type: !2090)
!8007 = !DILocalVariable(name: "cmode", arg: 5, scope: !7999, file: !3, line: 4505, type: !5)
!8008 = !DILocalVariable(name: "op2", arg: 6, scope: !7999, file: !3, line: 4505, type: !2090)
!8009 = !DILocalVariable(name: "op3", arg: 7, scope: !7999, file: !3, line: 4505, type: !2090)
!8010 = !DILocalVariable(name: "mode", arg: 8, scope: !7999, file: !3, line: 4506, type: !5)
!8011 = !DILocalVariable(name: "unsignedp", arg: 9, scope: !7999, file: !3, line: 4506, type: !2072)
!8012 = !DILocalVariable(name: "tem", scope: !7999, file: !3, line: 4508, type: !2090)
!8013 = !DILocalVariable(name: "subtarget", scope: !7999, file: !3, line: 4508, type: !2090)
!8014 = !DILocalVariable(name: "comparison", scope: !7999, file: !3, line: 4508, type: !2090)
!8015 = !DILocalVariable(name: "insn", scope: !7999, file: !3, line: 4508, type: !2090)
!8016 = !DILocalVariable(name: "icode", scope: !7999, file: !3, line: 4509, type: !527)
!8017 = !DILocalVariable(name: "reversed", scope: !7999, file: !3, line: 4510, type: !384)
!8018 = !DILocation(line: 0, scope: !7999)
!8019 = !DILocation(line: 4508, column: 3, scope: !7999)
!8020 = !DILocation(line: 4515, column: 7, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4515, column: 7)
!8022 = !DILocation(line: 4515, column: 7, scope: !7999)
!8023 = !DILocation(line: 4520, column: 14, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 4516, column: 5)
!8025 = !DILocation(line: 4521, column: 5, scope: !8024)
!8026 = !DILocation(line: 4526, column: 12, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4526, column: 7)
!8028 = !DILocation(line: 4526, column: 28, scope: !8027)
!8029 = !DILocation(line: 4526, column: 25, scope: !8027)
!8030 = !DILocation(line: 4526, column: 18, scope: !8027)
!8031 = !DILocation(line: 4527, column: 22, scope: !8027)
!8032 = !DILocation(line: 4527, column: 5, scope: !8027)
!8033 = !DILocation(line: 4528, column: 17, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 4528, column: 12)
!8035 = !DILocation(line: 4528, column: 33, scope: !8034)
!8036 = !DILocation(line: 4528, column: 30, scope: !8034)
!8037 = !DILocation(line: 4528, column: 23, scope: !8034)
!8038 = !DILocation(line: 0, scope: !8027)
!8039 = !DILocation(line: 4531, column: 13, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4531, column: 7)
!8041 = !DILocation(line: 4531, column: 7, scope: !7999)
!8042 = !DILocation(line: 4532, column: 13, scope: !8040)
!8043 = !DILocation(line: 4532, column: 11, scope: !8040)
!8044 = !DILocation(line: 4532, column: 5, scope: !8040)
!8045 = !DILocation(line: 4534, column: 7, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4534, column: 7)
!8047 = !DILocation(line: 4535, column: 7, scope: !8046)
!8048 = !DILocation(line: 4535, column: 23, scope: !8046)
!8049 = !DILocation(line: 4536, column: 11, scope: !8046)
!8050 = !DILocation(line: 4534, column: 7, scope: !7999)
!8051 = !DILocation(line: 4544, column: 12, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4544, column: 7)
!8053 = !DILocation(line: 4544, column: 7, scope: !7999)
!8054 = !DILocation(line: 4545, column: 12, scope: !8052)
!8055 = !DILocation(line: 4545, column: 5, scope: !8052)
!8056 = !DILocation(line: 4547, column: 11, scope: !7999)
!8057 = !DILocation(line: 4549, column: 13, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4549, column: 7)
!8059 = !DILocation(line: 4549, column: 7, scope: !7999)
!8060 = !DILocation(line: 4552, column: 8, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4552, column: 7)
!8062 = !DILocation(line: 4552, column: 7, scope: !7999)
!8063 = !DILocation(line: 4553, column: 14, scope: !8061)
!8064 = !DILocation(line: 4553, column: 5, scope: !8061)
!8065 = !DILocation(line: 4559, column: 8, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4559, column: 7)
!8067 = !DILocation(line: 4559, column: 25, scope: !8066)
!8068 = !DILocation(line: 4559, column: 36, scope: !8066)
!8069 = !DILocation(line: 4560, column: 47, scope: !8066)
!8070 = !DILocation(line: 4559, column: 7, scope: !7999)
!8071 = !DILocation(line: 4561, column: 58, scope: !8066)
!8072 = !DILocation(line: 4561, column: 17, scope: !8066)
!8073 = !DILocation(line: 4561, column: 5, scope: !8066)
!8074 = !DILocation(line: 4563, column: 36, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4563, column: 7)
!8076 = !DILocation(line: 4564, column: 41, scope: !8075)
!8077 = !DILocation(line: 4563, column: 8, scope: !8075)
!8078 = !DILocation(line: 4563, column: 7, scope: !7999)
!8079 = !DILocation(line: 4565, column: 57, scope: !8075)
!8080 = !DILocation(line: 4565, column: 11, scope: !8075)
!8081 = !DILocation(line: 4565, column: 5, scope: !8075)
!8082 = !DILocation(line: 4567, column: 36, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4567, column: 7)
!8084 = !DILocation(line: 4568, column: 41, scope: !8083)
!8085 = !DILocation(line: 4567, column: 8, scope: !8083)
!8086 = !DILocation(line: 4567, column: 7, scope: !7999)
!8087 = !DILocation(line: 4569, column: 57, scope: !8083)
!8088 = !DILocation(line: 4569, column: 11, scope: !8083)
!8089 = !DILocation(line: 4569, column: 5, scope: !8083)
!8090 = !DILocation(line: 4573, column: 10, scope: !7999)
!8091 = !DILocation(line: 4573, column: 22, scope: !7999)
!8092 = !DILocation(line: 4574, column: 16, scope: !7999)
!8093 = !DILocation(line: 4574, column: 14, scope: !7999)
!8094 = !DILocation(line: 4579, column: 8, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4579, column: 7)
!8096 = !DILocation(line: 4579, column: 7, scope: !7999)
!8097 = !DILocation(line: 4582, column: 3, scope: !7999)
!8098 = !DILocation(line: 4583, column: 3, scope: !7999)
!8099 = !DILocation(line: 4584, column: 21, scope: !7999)
!8100 = !DILocation(line: 4584, column: 43, scope: !7999)
!8101 = !DILocation(line: 4585, column: 7, scope: !7999)
!8102 = !DILocation(line: 4584, column: 3, scope: !7999)
!8103 = !DILocation(line: 4587, column: 8, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4587, column: 7)
!8105 = !DILocation(line: 4587, column: 7, scope: !7999)
!8106 = !DILocation(line: 4590, column: 12, scope: !8104)
!8107 = !DILocation(line: 0, scope: !8104)
!8108 = !DILocation(line: 4593, column: 12, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4593, column: 7)
!8110 = !DILocation(line: 4593, column: 7, scope: !7999)
!8111 = !DILocation(line: 4595, column: 7, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 4594, column: 5)
!8113 = !DILocation(line: 4596, column: 7, scope: !8112)
!8114 = !DILocation(line: 4599, column: 3, scope: !7999)
!8115 = !DILocation(line: 4600, column: 10, scope: !7999)
!8116 = !DILocation(line: 4601, column: 3, scope: !7999)
!8117 = !DILocation(line: 4602, column: 3, scope: !7999)
!8118 = !DILocation(line: 4603, column: 17, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4603, column: 7)
!8120 = !DILocation(line: 4603, column: 7, scope: !7999)
!8121 = !DILocation(line: 4604, column: 5, scope: !8119)
!8122 = !DILocation(line: 4607, column: 1, scope: !7999)
!8123 = distinct !DISubprogram(name: "can_conditionally_move_p", scope: !3, file: !3, line: 4618, type: !8124, scopeLine: 4619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8126)
!8124 = !DISubroutineType(types: !8125)
!8125 = !{!2072, !5}
!8126 = !{!8127}
!8127 = !DILocalVariable(name: "mode", arg: 1, scope: !8123, file: !3, line: 4618, type: !5)
!8128 = !DILocation(line: 0, scope: !8123)
!8129 = !DILocation(line: 4620, column: 7, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 4620, column: 7)
!8131 = !DILocation(line: 4620, column: 28, scope: !8130)
!8132 = !DILocation(line: 4624, column: 1, scope: !8123)
!8133 = distinct !DISubprogram(name: "emit_conditional_add", scope: !3, file: !3, line: 4643, type: !8000, scopeLine: 4646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8134)
!8134 = !{!8135, !8136, !8137, !8138, !8139, !8140, !8141, !8142, !8143, !8144, !8145, !8146, !8147, !8148, !8149}
!8135 = !DILocalVariable(name: "target", arg: 1, scope: !8133, file: !3, line: 4643, type: !2090)
!8136 = !DILocalVariable(name: "code", arg: 2, scope: !8133, file: !3, line: 4643, type: !384)
!8137 = !DILocalVariable(name: "op0", arg: 3, scope: !8133, file: !3, line: 4643, type: !2090)
!8138 = !DILocalVariable(name: "op1", arg: 4, scope: !8133, file: !3, line: 4643, type: !2090)
!8139 = !DILocalVariable(name: "cmode", arg: 5, scope: !8133, file: !3, line: 4644, type: !5)
!8140 = !DILocalVariable(name: "op2", arg: 6, scope: !8133, file: !3, line: 4644, type: !2090)
!8141 = !DILocalVariable(name: "op3", arg: 7, scope: !8133, file: !3, line: 4644, type: !2090)
!8142 = !DILocalVariable(name: "mode", arg: 8, scope: !8133, file: !3, line: 4645, type: !5)
!8143 = !DILocalVariable(name: "unsignedp", arg: 9, scope: !8133, file: !3, line: 4645, type: !2072)
!8144 = !DILocalVariable(name: "tem", scope: !8133, file: !3, line: 4647, type: !2090)
!8145 = !DILocalVariable(name: "subtarget", scope: !8133, file: !3, line: 4647, type: !2090)
!8146 = !DILocalVariable(name: "comparison", scope: !8133, file: !3, line: 4647, type: !2090)
!8147 = !DILocalVariable(name: "insn", scope: !8133, file: !3, line: 4647, type: !2090)
!8148 = !DILocalVariable(name: "icode", scope: !8133, file: !3, line: 4648, type: !527)
!8149 = !DILocalVariable(name: "reversed", scope: !8133, file: !3, line: 4649, type: !384)
!8150 = !DILocation(line: 0, scope: !8133)
!8151 = !DILocation(line: 4647, column: 3, scope: !8133)
!8152 = !DILocation(line: 4654, column: 7, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4654, column: 7)
!8154 = !DILocation(line: 4654, column: 7, scope: !8133)
!8155 = !DILocation(line: 4659, column: 14, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8153, file: !3, line: 4655, column: 5)
!8157 = !DILocation(line: 4660, column: 5, scope: !8156)
!8158 = !DILocation(line: 4665, column: 12, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4665, column: 7)
!8160 = !DILocation(line: 4665, column: 28, scope: !8159)
!8161 = !DILocation(line: 4665, column: 25, scope: !8159)
!8162 = !DILocation(line: 4665, column: 18, scope: !8159)
!8163 = !DILocation(line: 4666, column: 22, scope: !8159)
!8164 = !DILocation(line: 4666, column: 5, scope: !8159)
!8165 = !DILocation(line: 4667, column: 17, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 4667, column: 12)
!8167 = !DILocation(line: 4667, column: 33, scope: !8166)
!8168 = !DILocation(line: 4667, column: 30, scope: !8166)
!8169 = !DILocation(line: 4667, column: 23, scope: !8166)
!8170 = !DILocation(line: 0, scope: !8159)
!8171 = !DILocation(line: 4670, column: 13, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4670, column: 7)
!8173 = !DILocation(line: 4670, column: 7, scope: !8133)
!8174 = !DILocation(line: 4671, column: 13, scope: !8172)
!8175 = !DILocation(line: 4671, column: 11, scope: !8172)
!8176 = !DILocation(line: 4671, column: 5, scope: !8172)
!8177 = !DILocation(line: 4673, column: 7, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4673, column: 7)
!8179 = !DILocation(line: 4674, column: 7, scope: !8178)
!8180 = !DILocation(line: 4674, column: 23, scope: !8178)
!8181 = !DILocation(line: 4675, column: 11, scope: !8178)
!8182 = !DILocation(line: 4673, column: 7, scope: !8133)
!8183 = !DILocation(line: 4683, column: 12, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4683, column: 7)
!8185 = !DILocation(line: 4683, column: 7, scope: !8133)
!8186 = !DILocation(line: 4684, column: 12, scope: !8184)
!8187 = !DILocation(line: 4684, column: 5, scope: !8184)
!8188 = !DILocation(line: 4686, column: 11, scope: !8133)
!8189 = !DILocation(line: 4686, column: 46, scope: !8133)
!8190 = !DILocation(line: 4688, column: 13, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4688, column: 7)
!8192 = !DILocation(line: 4688, column: 7, scope: !8133)
!8193 = !DILocation(line: 4691, column: 8, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4691, column: 7)
!8195 = !DILocation(line: 4691, column: 7, scope: !8133)
!8196 = !DILocation(line: 4692, column: 14, scope: !8194)
!8197 = !DILocation(line: 4692, column: 5, scope: !8194)
!8198 = !DILocation(line: 4696, column: 8, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4696, column: 7)
!8200 = !DILocation(line: 4696, column: 25, scope: !8199)
!8201 = !DILocation(line: 4696, column: 36, scope: !8199)
!8202 = !DILocation(line: 4697, column: 44, scope: !8199)
!8203 = !DILocation(line: 4696, column: 7, scope: !8133)
!8204 = !DILocation(line: 4698, column: 58, scope: !8199)
!8205 = !DILocation(line: 4698, column: 17, scope: !8199)
!8206 = !DILocation(line: 4698, column: 5, scope: !8199)
!8207 = !DILocation(line: 0, scope: !8199)
!8208 = !DILocation(line: 4702, column: 36, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4702, column: 7)
!8210 = !DILocation(line: 4703, column: 41, scope: !8209)
!8211 = !DILocation(line: 4702, column: 8, scope: !8209)
!8212 = !DILocation(line: 4702, column: 7, scope: !8133)
!8213 = !DILocation(line: 4704, column: 57, scope: !8209)
!8214 = !DILocation(line: 4704, column: 11, scope: !8209)
!8215 = !DILocation(line: 4704, column: 5, scope: !8209)
!8216 = !DILocation(line: 4706, column: 36, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4706, column: 7)
!8218 = !DILocation(line: 4707, column: 41, scope: !8217)
!8219 = !DILocation(line: 4706, column: 8, scope: !8217)
!8220 = !DILocation(line: 4706, column: 7, scope: !8133)
!8221 = !DILocation(line: 4708, column: 57, scope: !8217)
!8222 = !DILocation(line: 4708, column: 11, scope: !8217)
!8223 = !DILocation(line: 4708, column: 5, scope: !8217)
!8224 = !DILocation(line: 4712, column: 10, scope: !8133)
!8225 = !DILocation(line: 4712, column: 22, scope: !8133)
!8226 = !DILocation(line: 4713, column: 16, scope: !8133)
!8227 = !DILocation(line: 4713, column: 14, scope: !8133)
!8228 = !DILocation(line: 4718, column: 8, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4718, column: 7)
!8230 = !DILocation(line: 4718, column: 7, scope: !8133)
!8231 = !DILocation(line: 4721, column: 3, scope: !8133)
!8232 = !DILocation(line: 4722, column: 3, scope: !8133)
!8233 = !DILocation(line: 4723, column: 21, scope: !8133)
!8234 = !DILocation(line: 4723, column: 43, scope: !8133)
!8235 = !DILocation(line: 4724, column: 21, scope: !8133)
!8236 = !DILocation(line: 4723, column: 3, scope: !8133)
!8237 = !DILocation(line: 4726, column: 8, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4726, column: 7)
!8239 = !DILocation(line: 4726, column: 7, scope: !8133)
!8240 = !DILocation(line: 4729, column: 12, scope: !8238)
!8241 = !DILocation(line: 0, scope: !8238)
!8242 = !DILocation(line: 4732, column: 12, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4732, column: 7)
!8244 = !DILocation(line: 4732, column: 7, scope: !8133)
!8245 = !DILocation(line: 4734, column: 7, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 4733, column: 5)
!8247 = !DILocation(line: 4735, column: 7, scope: !8246)
!8248 = !DILocation(line: 4738, column: 3, scope: !8133)
!8249 = !DILocation(line: 4739, column: 10, scope: !8133)
!8250 = !DILocation(line: 4740, column: 3, scope: !8133)
!8251 = !DILocation(line: 4741, column: 3, scope: !8133)
!8252 = !DILocation(line: 4742, column: 17, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4742, column: 7)
!8254 = !DILocation(line: 4742, column: 7, scope: !8133)
!8255 = !DILocation(line: 4743, column: 5, scope: !8253)
!8256 = !DILocation(line: 4746, column: 1, scope: !8133)
!8257 = distinct !DISubprogram(name: "gen_add2_insn", scope: !3, file: !3, line: 4755, type: !8258, scopeLine: 4756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8260)
!8258 = !DISubroutineType(types: !8259)
!8259 = !{!2090, !2090, !2090}
!8260 = !{!8261, !8262, !8263}
!8261 = !DILocalVariable(name: "x", arg: 1, scope: !8257, file: !3, line: 4755, type: !2090)
!8262 = !DILocalVariable(name: "y", arg: 2, scope: !8257, file: !3, line: 4755, type: !2090)
!8263 = !DILocalVariable(name: "icode", scope: !8257, file: !3, line: 4757, type: !2072)
!8264 = !DILocation(line: 0, scope: !8257)
!8265 = !DILocation(line: 4757, column: 21, scope: !8257)
!8266 = !DILocation(line: 4757, column: 62, scope: !8257)
!8267 = !DILocation(line: 4759, column: 3, scope: !8257)
!8268 = !DILocation(line: 4761, column: 3, scope: !8257)
!8269 = !DILocation(line: 4763, column: 3, scope: !8257)
!8270 = !DILocation(line: 4766, column: 10, scope: !8257)
!8271 = !DILocation(line: 4766, column: 3, scope: !8257)
!8272 = distinct !DISubprogram(name: "gen_add3_insn", scope: !3, file: !3, line: 4773, type: !7125, scopeLine: 4774, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8273)
!8273 = !{!8274, !8275, !8276, !8277}
!8274 = !DILocalVariable(name: "r0", arg: 1, scope: !8272, file: !3, line: 4773, type: !2090)
!8275 = !DILocalVariable(name: "r1", arg: 2, scope: !8272, file: !3, line: 4773, type: !2090)
!8276 = !DILocalVariable(name: "c", arg: 3, scope: !8272, file: !3, line: 4773, type: !2090)
!8277 = !DILocalVariable(name: "icode", scope: !8272, file: !3, line: 4775, type: !2072)
!8278 = !DILocation(line: 0, scope: !8272)
!8279 = !DILocation(line: 4775, column: 21, scope: !8272)
!8280 = !DILocation(line: 4775, column: 63, scope: !8272)
!8281 = !DILocation(line: 4777, column: 13, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 4777, column: 7)
!8283 = !DILocation(line: 4778, column: 7, scope: !8282)
!8284 = !DILocation(line: 4778, column: 12, scope: !8282)
!8285 = !DILocation(line: 4778, column: 29, scope: !8282)
!8286 = !DILocation(line: 4778, column: 40, scope: !8282)
!8287 = !DILocation(line: 4779, column: 38, scope: !8282)
!8288 = !DILocation(line: 4780, column: 7, scope: !8282)
!8289 = !DILocation(line: 4780, column: 40, scope: !8282)
!8290 = !DILocation(line: 4781, column: 38, scope: !8282)
!8291 = !DILocation(line: 4780, column: 12, scope: !8282)
!8292 = !DILocation(line: 4782, column: 7, scope: !8282)
!8293 = !DILocation(line: 4782, column: 40, scope: !8282)
!8294 = !DILocation(line: 4783, column: 37, scope: !8282)
!8295 = !DILocation(line: 4782, column: 12, scope: !8282)
!8296 = !DILocation(line: 4777, column: 7, scope: !8272)
!8297 = !DILocation(line: 4786, column: 10, scope: !8272)
!8298 = !DILocation(line: 4786, column: 3, scope: !8272)
!8299 = !DILocation(line: 4787, column: 1, scope: !8272)
!8300 = distinct !DISubprogram(name: "have_add2_insn", scope: !3, file: !3, line: 4790, type: !8301, scopeLine: 4791, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8303)
!8301 = !DISubroutineType(types: !8302)
!8302 = !{!2072, !2090, !2090}
!8303 = !{!8304, !8305, !8306}
!8304 = !DILocalVariable(name: "x", arg: 1, scope: !8300, file: !3, line: 4790, type: !2090)
!8305 = !DILocalVariable(name: "y", arg: 2, scope: !8300, file: !3, line: 4790, type: !2090)
!8306 = !DILocalVariable(name: "icode", scope: !8300, file: !3, line: 4792, type: !2072)
!8307 = !DILocation(line: 0, scope: !8300)
!8308 = !DILocation(line: 4794, column: 3, scope: !8300)
!8309 = !DILocation(line: 4796, column: 17, scope: !8300)
!8310 = !DILocation(line: 4796, column: 58, scope: !8300)
!8311 = !DILocation(line: 4798, column: 13, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 4798, column: 7)
!8313 = !DILocation(line: 4798, column: 7, scope: !8300)
!8314 = !DILocation(line: 4801, column: 9, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 4801, column: 7)
!8316 = !DILocation(line: 4801, column: 26, scope: !8315)
!8317 = !DILocation(line: 4801, column: 37, scope: !8315)
!8318 = !DILocation(line: 4802, column: 34, scope: !8315)
!8319 = !DILocation(line: 4803, column: 7, scope: !8315)
!8320 = !DILocation(line: 4803, column: 40, scope: !8315)
!8321 = !DILocation(line: 4804, column: 37, scope: !8315)
!8322 = !DILocation(line: 4803, column: 12, scope: !8315)
!8323 = !DILocation(line: 4805, column: 7, scope: !8315)
!8324 = !DILocation(line: 4805, column: 40, scope: !8315)
!8325 = !DILocation(line: 4806, column: 37, scope: !8315)
!8326 = !DILocation(line: 4805, column: 12, scope: !8315)
!8327 = !DILocation(line: 4801, column: 7, scope: !8300)
!8328 = !DILocation(line: 4810, column: 1, scope: !8300)
!8329 = distinct !DISubprogram(name: "gen_sub2_insn", scope: !3, file: !3, line: 4815, type: !8258, scopeLine: 4816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8330)
!8330 = !{!8331, !8332, !8333}
!8331 = !DILocalVariable(name: "x", arg: 1, scope: !8329, file: !3, line: 4815, type: !2090)
!8332 = !DILocalVariable(name: "y", arg: 2, scope: !8329, file: !3, line: 4815, type: !2090)
!8333 = !DILocalVariable(name: "icode", scope: !8329, file: !3, line: 4817, type: !2072)
!8334 = !DILocation(line: 0, scope: !8329)
!8335 = !DILocation(line: 4817, column: 21, scope: !8329)
!8336 = !DILocation(line: 4817, column: 62, scope: !8329)
!8337 = !DILocation(line: 4819, column: 3, scope: !8329)
!8338 = !DILocation(line: 4821, column: 3, scope: !8329)
!8339 = !DILocation(line: 4823, column: 3, scope: !8329)
!8340 = !DILocation(line: 4826, column: 10, scope: !8329)
!8341 = !DILocation(line: 4826, column: 3, scope: !8329)
!8342 = distinct !DISubprogram(name: "gen_sub3_insn", scope: !3, file: !3, line: 4833, type: !7125, scopeLine: 4834, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8343)
!8343 = !{!8344, !8345, !8346, !8347}
!8344 = !DILocalVariable(name: "r0", arg: 1, scope: !8342, file: !3, line: 4833, type: !2090)
!8345 = !DILocalVariable(name: "r1", arg: 2, scope: !8342, file: !3, line: 4833, type: !2090)
!8346 = !DILocalVariable(name: "c", arg: 3, scope: !8342, file: !3, line: 4833, type: !2090)
!8347 = !DILocalVariable(name: "icode", scope: !8342, file: !3, line: 4835, type: !2072)
!8348 = !DILocation(line: 0, scope: !8342)
!8349 = !DILocation(line: 4835, column: 21, scope: !8342)
!8350 = !DILocation(line: 4835, column: 63, scope: !8342)
!8351 = !DILocation(line: 4837, column: 13, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 4837, column: 7)
!8353 = !DILocation(line: 4838, column: 7, scope: !8352)
!8354 = !DILocation(line: 4838, column: 12, scope: !8352)
!8355 = !DILocation(line: 4838, column: 29, scope: !8352)
!8356 = !DILocation(line: 4838, column: 40, scope: !8352)
!8357 = !DILocation(line: 4839, column: 38, scope: !8352)
!8358 = !DILocation(line: 4840, column: 7, scope: !8352)
!8359 = !DILocation(line: 4840, column: 40, scope: !8352)
!8360 = !DILocation(line: 4841, column: 38, scope: !8352)
!8361 = !DILocation(line: 4840, column: 12, scope: !8352)
!8362 = !DILocation(line: 4842, column: 7, scope: !8352)
!8363 = !DILocation(line: 4842, column: 40, scope: !8352)
!8364 = !DILocation(line: 4843, column: 37, scope: !8352)
!8365 = !DILocation(line: 4842, column: 12, scope: !8352)
!8366 = !DILocation(line: 4837, column: 7, scope: !8342)
!8367 = !DILocation(line: 4846, column: 10, scope: !8342)
!8368 = !DILocation(line: 4846, column: 3, scope: !8342)
!8369 = !DILocation(line: 4847, column: 1, scope: !8342)
!8370 = distinct !DISubprogram(name: "have_sub2_insn", scope: !3, file: !3, line: 4850, type: !8301, scopeLine: 4851, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8371)
!8371 = !{!8372, !8373, !8374}
!8372 = !DILocalVariable(name: "x", arg: 1, scope: !8370, file: !3, line: 4850, type: !2090)
!8373 = !DILocalVariable(name: "y", arg: 2, scope: !8370, file: !3, line: 4850, type: !2090)
!8374 = !DILocalVariable(name: "icode", scope: !8370, file: !3, line: 4852, type: !2072)
!8375 = !DILocation(line: 0, scope: !8370)
!8376 = !DILocation(line: 4854, column: 3, scope: !8370)
!8377 = !DILocation(line: 4856, column: 17, scope: !8370)
!8378 = !DILocation(line: 4856, column: 58, scope: !8370)
!8379 = !DILocation(line: 4858, column: 13, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 4858, column: 7)
!8381 = !DILocation(line: 4858, column: 7, scope: !8370)
!8382 = !DILocation(line: 4861, column: 9, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 4861, column: 7)
!8384 = !DILocation(line: 4861, column: 26, scope: !8383)
!8385 = !DILocation(line: 4861, column: 37, scope: !8383)
!8386 = !DILocation(line: 4862, column: 34, scope: !8383)
!8387 = !DILocation(line: 4863, column: 7, scope: !8383)
!8388 = !DILocation(line: 4863, column: 40, scope: !8383)
!8389 = !DILocation(line: 4864, column: 37, scope: !8383)
!8390 = !DILocation(line: 4863, column: 12, scope: !8383)
!8391 = !DILocation(line: 4865, column: 7, scope: !8383)
!8392 = !DILocation(line: 4865, column: 40, scope: !8383)
!8393 = !DILocation(line: 4866, column: 37, scope: !8383)
!8394 = !DILocation(line: 4865, column: 12, scope: !8383)
!8395 = !DILocation(line: 4861, column: 7, scope: !8370)
!8396 = !DILocation(line: 4870, column: 1, scope: !8370)
!8397 = distinct !DISubprogram(name: "gen_move_insn", scope: !3, file: !3, line: 4876, type: !8258, scopeLine: 4877, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8398)
!8398 = !{!8399, !8400, !8401}
!8399 = !DILocalVariable(name: "x", arg: 1, scope: !8397, file: !3, line: 4876, type: !2090)
!8400 = !DILocalVariable(name: "y", arg: 2, scope: !8397, file: !3, line: 4876, type: !2090)
!8401 = !DILocalVariable(name: "seq", scope: !8397, file: !3, line: 4878, type: !2090)
!8402 = !DILocation(line: 0, scope: !8397)
!8403 = !DILocation(line: 4880, column: 3, scope: !8397)
!8404 = !DILocation(line: 4881, column: 3, scope: !8397)
!8405 = !DILocation(line: 4882, column: 9, scope: !8397)
!8406 = !DILocation(line: 4883, column: 3, scope: !8397)
!8407 = !DILocation(line: 4884, column: 3, scope: !8397)
!8408 = distinct !DISubprogram(name: "can_extend_p", scope: !3, file: !3, line: 4892, type: !8409, scopeLine: 4894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8411)
!8409 = !DISubroutineType(types: !8410)
!8410 = !{!527, !5, !5, !2072}
!8411 = !{!8412, !8413, !8414, !8415}
!8412 = !DILocalVariable(name: "to_mode", arg: 1, scope: !8408, file: !3, line: 4892, type: !5)
!8413 = !DILocalVariable(name: "from_mode", arg: 2, scope: !8408, file: !3, line: 4892, type: !5)
!8414 = !DILocalVariable(name: "unsignedp", arg: 3, scope: !8408, file: !3, line: 4893, type: !2072)
!8415 = !DILocalVariable(name: "tab", scope: !8408, file: !3, line: 4895, type: !3772)
!8416 = !DILocation(line: 0, scope: !8408)
!8417 = !DILocation(line: 4901, column: 9, scope: !8408)
!8418 = !DILocation(line: 4902, column: 10, scope: !8408)
!8419 = !DILocation(line: 4902, column: 59, scope: !8408)
!8420 = !DILocation(line: 4902, column: 3, scope: !8408)
!8421 = distinct !DISubprogram(name: "gen_extend_insn", scope: !3, file: !3, line: 4909, type: !8422, scopeLine: 4911, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8424)
!8422 = !DISubroutineType(types: !8423)
!8423 = !{!2090, !2090, !2090, !5, !5, !2072}
!8424 = !{!8425, !8426, !8427, !8428, !8429, !8430}
!8425 = !DILocalVariable(name: "x", arg: 1, scope: !8421, file: !3, line: 4909, type: !2090)
!8426 = !DILocalVariable(name: "y", arg: 2, scope: !8421, file: !3, line: 4909, type: !2090)
!8427 = !DILocalVariable(name: "mto", arg: 3, scope: !8421, file: !3, line: 4909, type: !5)
!8428 = !DILocalVariable(name: "mfrom", arg: 4, scope: !8421, file: !3, line: 4910, type: !5)
!8429 = !DILocalVariable(name: "unsignedp", arg: 5, scope: !8421, file: !3, line: 4910, type: !2072)
!8430 = !DILocalVariable(name: "icode", scope: !8421, file: !3, line: 4912, type: !527)
!8431 = !DILocation(line: 0, scope: !8421)
!8432 = !DILocation(line: 4912, column: 26, scope: !8421)
!8433 = !DILocation(line: 4913, column: 10, scope: !8421)
!8434 = !DILocation(line: 4913, column: 3, scope: !8421)
!8435 = distinct !DISubprogram(name: "expand_float", scope: !3, file: !3, line: 4973, type: !8436, scopeLine: 4974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8438)
!8436 = !DISubroutineType(types: !8437)
!8437 = !{null, !2090, !2090, !2072}
!8438 = !{!8439, !8440, !8441, !8442, !8443, !8444, !8445, !8446, !8447, !8453, !8456, !8459, !8460, !8461, !8466, !8467, !8469, !8470, !8471, !8472}
!8439 = !DILocalVariable(name: "to", arg: 1, scope: !8435, file: !3, line: 4973, type: !2090)
!8440 = !DILocalVariable(name: "from", arg: 2, scope: !8435, file: !3, line: 4973, type: !2090)
!8441 = !DILocalVariable(name: "unsignedp", arg: 3, scope: !8435, file: !3, line: 4973, type: !2072)
!8442 = !DILocalVariable(name: "icode", scope: !8435, file: !3, line: 4975, type: !527)
!8443 = !DILocalVariable(name: "target", scope: !8435, file: !3, line: 4976, type: !2090)
!8444 = !DILocalVariable(name: "fmode", scope: !8435, file: !3, line: 4977, type: !5)
!8445 = !DILocalVariable(name: "imode", scope: !8435, file: !3, line: 4977, type: !5)
!8446 = !DILocalVariable(name: "can_do_signed", scope: !8435, file: !3, line: 4978, type: !2071)
!8447 = !DILocalVariable(name: "doing_unsigned", scope: !8448, file: !3, line: 4993, type: !2072)
!8448 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 4992, column: 7)
!8449 = distinct !DILexicalBlock(scope: !8450, file: !3, line: 4990, column: 5)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 4990, column: 5)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 4988, column: 3)
!8452 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 4988, column: 3)
!8453 = !DILocalVariable(name: "scode", scope: !8454, file: !3, line: 5002, type: !527)
!8454 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 5001, column: 4)
!8455 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 5000, column: 6)
!8456 = !DILocalVariable(name: "label", scope: !8457, file: !3, line: 5030, type: !2090)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 5029, column: 5)
!8458 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 5028, column: 7)
!8459 = !DILocalVariable(name: "temp", scope: !8457, file: !3, line: 5031, type: !2090)
!8460 = !DILocalVariable(name: "offset", scope: !8457, file: !3, line: 5032, type: !2265)
!8461 = !DILocalVariable(name: "temp1", scope: !8462, file: !3, line: 5053, type: !2090)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 5052, column: 6)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 5050, column: 8)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 5045, column: 2)
!8465 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 5044, column: 11)
!8466 = !DILocalVariable(name: "neglabel", scope: !8462, file: !3, line: 5054, type: !2090)
!8467 = !DILocalVariable(name: "libfunc", scope: !8468, file: !3, line: 5133, type: !2090)
!8468 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 5132, column: 5)
!8469 = !DILocalVariable(name: "insns", scope: !8468, file: !3, line: 5134, type: !2090)
!8470 = !DILocalVariable(name: "value", scope: !8468, file: !3, line: 5135, type: !2090)
!8471 = !DILocalVariable(name: "tab", scope: !8468, file: !3, line: 5136, type: !3772)
!8472 = !DILabel(scope: !8435, name: "done", file: !3, line: 5157)
!8473 = !DILocation(line: 0, scope: !8435)
!8474 = !DILocation(line: 4981, column: 3, scope: !8435)
!8475 = !DILocation(line: 4988, column: 16, scope: !8452)
!8476 = !DILocation(line: 0, scope: !8455)
!8477 = !DILocation(line: 4988, column: 8, scope: !8452)
!8478 = !DILocation(line: 4978, column: 8, scope: !8435)
!8479 = !DILocation(line: 0, scope: !8452)
!8480 = !DILocation(line: 4976, column: 7, scope: !8435)
!8481 = !DILocation(line: 4988, column: 37, scope: !8451)
!8482 = !DILocation(line: 4988, column: 3, scope: !8452)
!8483 = !DILocation(line: 4990, column: 18, scope: !8450)
!8484 = !DILocation(line: 4990, column: 10, scope: !8450)
!8485 = !DILocation(line: 0, scope: !8450)
!8486 = !DILocation(line: 4990, column: 41, scope: !8449)
!8487 = !DILocation(line: 4990, column: 5, scope: !8450)
!8488 = !DILocation(line: 0, scope: !8448)
!8489 = !DILocation(line: 4995, column: 15, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 4995, column: 6)
!8491 = !DILocation(line: 4995, column: 12, scope: !8490)
!8492 = !DILocation(line: 4996, column: 6, scope: !8490)
!8493 = !DILocation(line: 4996, column: 9, scope: !8490)
!8494 = !DILocation(line: 4996, column: 36, scope: !8490)
!8495 = !DILocation(line: 4996, column: 34, scope: !8490)
!8496 = !DILocation(line: 4995, column: 6, scope: !8448)
!8497 = !DILocation(line: 4999, column: 10, scope: !8448)
!8498 = !DILocation(line: 5000, column: 12, scope: !8455)
!8499 = !DILocation(line: 5000, column: 32, scope: !8455)
!8500 = !DILocation(line: 5002, column: 29, scope: !8454)
!8501 = !DILocation(line: 0, scope: !8454)
!8502 = !DILocation(line: 5003, column: 16, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 5003, column: 10)
!8504 = !DILocation(line: 5003, column: 10, scope: !8454)
!8505 = !DILocation(line: 5005, column: 19, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 5005, column: 10)
!8507 = !DILocation(line: 5005, column: 16, scope: !8506)
!8508 = !DILocation(line: 5005, column: 10, scope: !8454)
!8509 = !DILocation(line: 5009, column: 12, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 5009, column: 6)
!8511 = !DILocation(line: 5009, column: 6, scope: !8448)
!8512 = !DILocation(line: 5011, column: 19, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 5011, column: 10)
!8514 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 5010, column: 4)
!8515 = !DILocation(line: 5011, column: 16, scope: !8513)
!8516 = !DILocation(line: 5011, column: 10, scope: !8514)
!8517 = !DILocation(line: 5012, column: 15, scope: !8513)
!8518 = !DILocation(line: 5012, column: 8, scope: !8513)
!8519 = !DILocation(line: 5014, column: 19, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 5014, column: 10)
!8521 = !DILocation(line: 5014, column: 16, scope: !8520)
!8522 = !DILocation(line: 5014, column: 10, scope: !8514)
!8523 = !DILocation(line: 5015, column: 17, scope: !8520)
!8524 = !DILocation(line: 5015, column: 8, scope: !8520)
!8525 = !DILocation(line: 5018, column: 8, scope: !8514)
!8526 = !DILocation(line: 5017, column: 6, scope: !8514)
!8527 = !DILocation(line: 5020, column: 17, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 5020, column: 10)
!8529 = !DILocation(line: 5020, column: 10, scope: !8514)
!8530 = !DILocation(line: 5021, column: 8, scope: !8528)
!8531 = !DILocation(line: 4991, column: 11, scope: !8449)
!8532 = !DILocation(line: 4990, column: 5, scope: !8449)
!8533 = distinct !{!8533, !8487, !8534}
!8534 = !DILocation(line: 5024, column: 7, scope: !8450)
!8535 = !DILocation(line: 4989, column: 16, scope: !8451)
!8536 = !DILocation(line: 5169, column: 1, scope: !8435)
!8537 = !DILocation(line: 4988, column: 3, scope: !8451)
!8538 = distinct !{!8538, !8482, !8539}
!8539 = !DILocation(line: 5024, column: 7, scope: !8452)
!8540 = !DILocation(line: 5028, column: 7, scope: !8458)
!8541 = !DILocation(line: 5028, column: 20, scope: !8458)
!8542 = !DILocation(line: 5028, column: 17, scope: !8458)
!8543 = !DILocation(line: 5030, column: 19, scope: !8457)
!8544 = !DILocation(line: 0, scope: !8457)
!8545 = !DILocation(line: 5032, column: 7, scope: !8457)
!8546 = !DILocation(line: 5038, column: 20, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 5038, column: 7)
!8548 = !DILocation(line: 0, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 5040, column: 6)
!8550 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 5038, column: 7)
!8551 = !DILocation(line: 5038, column: 12, scope: !8547)
!8552 = !DILocation(line: 0, scope: !8547)
!8553 = !DILocation(line: 5038, column: 7, scope: !8547)
!8554 = !DILocation(line: 5040, column: 6, scope: !8549)
!8555 = !DILocation(line: 5040, column: 43, scope: !8549)
!8556 = !DILocation(line: 5040, column: 41, scope: !8549)
!8557 = !DILocation(line: 5041, column: 6, scope: !8549)
!8558 = !DILocation(line: 5041, column: 9, scope: !8549)
!8559 = !DILocation(line: 5041, column: 49, scope: !8549)
!8560 = !DILocation(line: 5040, column: 6, scope: !8550)
!8561 = !DILocation(line: 5039, column: 13, scope: !8550)
!8562 = !DILocation(line: 5038, column: 7, scope: !8550)
!8563 = distinct !{!8563, !8553, !8564}
!8564 = !DILocation(line: 5042, column: 4, scope: !8547)
!8565 = !DILocation(line: 5044, column: 11, scope: !8457)
!8566 = !DILocation(line: 5047, column: 12, scope: !8464)
!8567 = !DILocation(line: 5050, column: 9, scope: !8463)
!8568 = !DILocation(line: 5050, column: 34, scope: !8463)
!8569 = !DILocation(line: 5051, column: 10, scope: !8463)
!8570 = !DILocation(line: 5051, column: 8, scope: !8463)
!8571 = !DILocation(line: 5050, column: 8, scope: !8464)
!8572 = !DILocation(line: 5054, column: 23, scope: !8462)
!8573 = !DILocation(line: 0, scope: !8462)
!8574 = !DILocation(line: 5058, column: 13, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 5058, column: 12)
!8576 = !DILocation(line: 5059, column: 5, scope: !8575)
!8577 = !DILocation(line: 5059, column: 8, scope: !8575)
!8578 = !DILocation(line: 5059, column: 23, scope: !8575)
!8579 = !DILocation(line: 5060, column: 5, scope: !8575)
!8580 = !DILocation(line: 5060, column: 8, scope: !8575)
!8581 = !DILocation(line: 5060, column: 26, scope: !8575)
!8582 = !DILocation(line: 5058, column: 12, scope: !8462)
!8583 = !DILocation(line: 5061, column: 12, scope: !8575)
!8584 = !DILocation(line: 5061, column: 3, scope: !8575)
!8585 = !DILocation(line: 5063, column: 16, scope: !8462)
!8586 = !DILocation(line: 5064, column: 8, scope: !8462)
!8587 = !DILocation(line: 5067, column: 39, scope: !8462)
!8588 = !DILocation(line: 5067, column: 8, scope: !8462)
!8589 = !DILocation(line: 5071, column: 8, scope: !8462)
!8590 = !DILocation(line: 5072, column: 24, scope: !8462)
!8591 = !DILocation(line: 5072, column: 8, scope: !8462)
!8592 = !DILocation(line: 5073, column: 8, scope: !8462)
!8593 = !DILocation(line: 5080, column: 8, scope: !8462)
!8594 = !DILocation(line: 5081, column: 53, scope: !8462)
!8595 = !DILocation(line: 5081, column: 15, scope: !8462)
!8596 = !DILocation(line: 5083, column: 56, scope: !8462)
!8597 = !DILocation(line: 5083, column: 16, scope: !8462)
!8598 = !DILocation(line: 5085, column: 15, scope: !8462)
!8599 = !DILocation(line: 5087, column: 8, scope: !8462)
!8600 = !DILocation(line: 5090, column: 15, scope: !8462)
!8601 = !DILocation(line: 5092, column: 17, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 5092, column: 12)
!8603 = !DILocation(line: 5092, column: 12, scope: !8462)
!8604 = !DILocation(line: 5093, column: 3, scope: !8602)
!8605 = !DILocation(line: 5095, column: 8, scope: !8462)
!8606 = !DILocation(line: 5096, column: 8, scope: !8462)
!8607 = !DILocation(line: 5104, column: 11, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 5104, column: 11)
!8609 = !DILocation(line: 5104, column: 25, scope: !8608)
!8610 = !DILocation(line: 5105, column: 4, scope: !8608)
!8611 = !DILocation(line: 5105, column: 8, scope: !8608)
!8612 = !DILocation(line: 5105, column: 19, scope: !8608)
!8613 = !DILocation(line: 5105, column: 22, scope: !8608)
!8614 = !DILocation(line: 5105, column: 33, scope: !8608)
!8615 = !DILocation(line: 5104, column: 11, scope: !8457)
!8616 = !DILocation(line: 5106, column: 11, scope: !8608)
!8617 = !DILocation(line: 5106, column: 2, scope: !8608)
!8618 = !DILocation(line: 5109, column: 7, scope: !8457)
!8619 = !DILocation(line: 5114, column: 7, scope: !8457)
!8620 = !DILocation(line: 5115, column: 38, scope: !8457)
!8621 = !DILocation(line: 5115, column: 64, scope: !8457)
!8622 = !DILocation(line: 5115, column: 7, scope: !8457)
!8623 = !DILocation(line: 5119, column: 28, scope: !8457)
!8624 = !DILocation(line: 5119, column: 7, scope: !8457)
!8625 = !DILocation(line: 5121, column: 7, scope: !8457)
!8626 = !DILocation(line: 5120, column: 14, scope: !8457)
!8627 = !DILocation(line: 5123, column: 16, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 5123, column: 11)
!8629 = !DILocation(line: 5123, column: 11, scope: !8457)
!8630 = !DILocation(line: 5124, column: 2, scope: !8628)
!8631 = !DILocation(line: 5126, column: 7, scope: !8457)
!8632 = !DILocation(line: 5127, column: 7, scope: !8457)
!8633 = !DILocation(line: 5128, column: 7, scope: !8457)
!8634 = !DILocation(line: 5129, column: 5, scope: !8458)
!8635 = !DILocation(line: 5136, column: 27, scope: !8468)
!8636 = !DILocation(line: 0, scope: !8468)
!8637 = !DILocation(line: 5138, column: 11, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8468, file: !3, line: 5138, column: 11)
!8639 = !DILocation(line: 5138, column: 45, scope: !8638)
!8640 = !DILocation(line: 5138, column: 43, scope: !8638)
!8641 = !DILocation(line: 5138, column: 11, scope: !8468)
!8642 = !DILocation(line: 5139, column: 9, scope: !8638)
!8643 = !DILocation(line: 5141, column: 60, scope: !8468)
!8644 = !DILocation(line: 5139, column: 2, scope: !8638)
!8645 = !DILocation(line: 5141, column: 45, scope: !8468)
!8646 = !DILocation(line: 5141, column: 17, scope: !8468)
!8647 = !DILocation(line: 5142, column: 7, scope: !8468)
!8648 = !DILocation(line: 5144, column: 7, scope: !8468)
!8649 = !DILocation(line: 5147, column: 12, scope: !8468)
!8650 = !DILocation(line: 5148, column: 12, scope: !8468)
!8651 = !DILocation(line: 5146, column: 15, scope: !8468)
!8652 = !DILocation(line: 5149, column: 15, scope: !8468)
!8653 = !DILocation(line: 5150, column: 7, scope: !8468)
!8654 = !DILocation(line: 5153, column: 6, scope: !8468)
!8655 = !DILocation(line: 5152, column: 7, scope: !8468)
!8656 = !DILocation(line: 5155, column: 5, scope: !8468)
!8657 = !DILocation(line: 5157, column: 2, scope: !8435)
!8658 = !DILocation(line: 5162, column: 14, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 5162, column: 7)
!8660 = !DILocation(line: 5162, column: 7, scope: !8435)
!8661 = !DILocation(line: 5164, column: 11, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8663, file: !3, line: 5164, column: 11)
!8663 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 5163, column: 5)
!8664 = !DILocation(line: 5164, column: 32, scope: !8662)
!8665 = !DILocation(line: 5164, column: 29, scope: !8662)
!8666 = !DILocation(line: 5164, column: 11, scope: !8663)
!8667 = !DILocation(line: 5165, column: 2, scope: !8662)
!8668 = !DILocation(line: 5167, column: 2, scope: !8662)
!8669 = distinct !DISubprogram(name: "can_float_p", scope: !3, file: !3, line: 4957, type: !8409, scopeLine: 4959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8670)
!8670 = !{!8671, !8672, !8673, !8674}
!8671 = !DILocalVariable(name: "fltmode", arg: 1, scope: !8669, file: !3, line: 4957, type: !5)
!8672 = !DILocalVariable(name: "fixmode", arg: 2, scope: !8669, file: !3, line: 4957, type: !5)
!8673 = !DILocalVariable(name: "unsignedp", arg: 3, scope: !8669, file: !3, line: 4958, type: !2072)
!8674 = !DILocalVariable(name: "tab", scope: !8669, file: !3, line: 4960, type: !3772)
!8675 = !DILocation(line: 0, scope: !8669)
!8676 = !DILocation(line: 4962, column: 9, scope: !8669)
!8677 = !DILocation(line: 4963, column: 10, scope: !8669)
!8678 = !DILocation(line: 4963, column: 57, scope: !8669)
!8679 = !DILocation(line: 4963, column: 3, scope: !8669)
!8680 = distinct !DISubprogram(name: "expand_fix", scope: !3, file: !3, line: 5175, type: !8436, scopeLine: 5176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8681)
!8681 = !{!8682, !8683, !8684, !8685, !8686, !8687, !8688, !8689, !8690, !8696, !8699, !8702, !8708, !8709, !8710, !8711, !8712, !8713, !8716, !8717, !8718}
!8682 = !DILocalVariable(name: "to", arg: 1, scope: !8680, file: !3, line: 5175, type: !2090)
!8683 = !DILocalVariable(name: "from", arg: 2, scope: !8680, file: !3, line: 5175, type: !2090)
!8684 = !DILocalVariable(name: "unsignedp", arg: 3, scope: !8680, file: !3, line: 5175, type: !2072)
!8685 = !DILocalVariable(name: "icode", scope: !8680, file: !3, line: 5177, type: !527)
!8686 = !DILocalVariable(name: "target", scope: !8680, file: !3, line: 5178, type: !2090)
!8687 = !DILocalVariable(name: "fmode", scope: !8680, file: !3, line: 5179, type: !5)
!8688 = !DILocalVariable(name: "imode", scope: !8680, file: !3, line: 5179, type: !5)
!8689 = !DILocalVariable(name: "must_trunc", scope: !8680, file: !3, line: 5180, type: !2072)
!8690 = !DILocalVariable(name: "doing_unsigned", scope: !8691, file: !3, line: 5192, type: !2072)
!8691 = distinct !DILexicalBlock(scope: !8692, file: !3, line: 5191, column: 7)
!8692 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 5189, column: 5)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 5189, column: 5)
!8694 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 5187, column: 3)
!8695 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 5187, column: 3)
!8696 = !DILocalVariable(name: "last", scope: !8697, file: !3, line: 5200, type: !2090)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 5199, column: 4)
!8698 = distinct !DILexicalBlock(scope: !8691, file: !3, line: 5198, column: 6)
!8699 = !DILocalVariable(name: "temp", scope: !8700, file: !3, line: 5206, type: !2090)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 5205, column: 8)
!8701 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 5204, column: 10)
!8702 = !DILocalVariable(name: "bitsize", scope: !8703, file: !3, line: 5256, type: !2072)
!8703 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 5255, column: 2)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 5252, column: 11)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 5250, column: 5)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !3, line: 5250, column: 5)
!8707 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 5249, column: 7)
!8708 = !DILocalVariable(name: "offset", scope: !8703, file: !3, line: 5257, type: !2265)
!8709 = !DILocalVariable(name: "limit", scope: !8703, file: !3, line: 5258, type: !2090)
!8710 = !DILocalVariable(name: "lab1", scope: !8703, file: !3, line: 5258, type: !2090)
!8711 = !DILocalVariable(name: "lab2", scope: !8703, file: !3, line: 5258, type: !2090)
!8712 = !DILocalVariable(name: "insn", scope: !8703, file: !3, line: 5258, type: !2090)
!8713 = !DILocalVariable(name: "insns", scope: !8714, file: !3, line: 5324, type: !2090)
!8714 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 5323, column: 5)
!8715 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 5316, column: 7)
!8716 = !DILocalVariable(name: "value", scope: !8714, file: !3, line: 5325, type: !2090)
!8717 = !DILocalVariable(name: "libfunc", scope: !8714, file: !3, line: 5326, type: !2090)
!8718 = !DILocalVariable(name: "tab", scope: !8714, file: !3, line: 5328, type: !3772)
!8719 = !DILocation(line: 0, scope: !8680)
!8720 = !DILocation(line: 5180, column: 3, scope: !8680)
!8721 = !DILocation(line: 5180, column: 7, scope: !8680)
!8722 = !DILocation(line: 5187, column: 16, scope: !8695)
!8723 = !DILocation(line: 0, scope: !8693)
!8724 = !DILocation(line: 0, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8691, file: !3, line: 5195, column: 6)
!8726 = !DILocation(line: 5187, column: 8, scope: !8695)
!8727 = !DILocation(line: 0, scope: !8695)
!8728 = !DILocation(line: 5178, column: 7, scope: !8680)
!8729 = !DILocation(line: 5187, column: 39, scope: !8694)
!8730 = !DILocation(line: 5187, column: 3, scope: !8695)
!8731 = !DILocation(line: 5189, column: 18, scope: !8693)
!8732 = !DILocation(line: 5189, column: 10, scope: !8693)
!8733 = !DILocation(line: 5189, column: 39, scope: !8692)
!8734 = !DILocation(line: 5189, column: 5, scope: !8693)
!8735 = !DILocation(line: 0, scope: !8691)
!8736 = !DILocation(line: 5194, column: 10, scope: !8691)
!8737 = !DILocation(line: 5195, column: 12, scope: !8725)
!8738 = !DILocation(line: 5195, column: 32, scope: !8725)
!8739 = !DILocation(line: 5195, column: 44, scope: !8725)
!8740 = !DILocation(line: 5195, column: 41, scope: !8725)
!8741 = !DILocation(line: 5195, column: 58, scope: !8725)
!8742 = !DILocation(line: 5196, column: 12, scope: !8725)
!8743 = !DILocation(line: 5196, column: 4, scope: !8725)
!8744 = !DILocation(line: 5198, column: 12, scope: !8698)
!8745 = !DILocation(line: 5198, column: 6, scope: !8691)
!8746 = !DILocation(line: 5200, column: 17, scope: !8697)
!8747 = !DILocation(line: 0, scope: !8697)
!8748 = !DILocation(line: 5201, column: 19, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 5201, column: 10)
!8750 = !DILocation(line: 5201, column: 16, scope: !8749)
!8751 = !DILocation(line: 5201, column: 10, scope: !8697)
!8752 = !DILocation(line: 5202, column: 15, scope: !8749)
!8753 = !DILocation(line: 5202, column: 8, scope: !8749)
!8754 = !DILocation(line: 5204, column: 10, scope: !8701)
!8755 = !DILocation(line: 5204, column: 10, scope: !8697)
!8756 = !DILocation(line: 5206, column: 27, scope: !8700)
!8757 = !DILocation(line: 5206, column: 14, scope: !8700)
!8758 = !DILocation(line: 0, scope: !8700)
!8759 = !DILocation(line: 5207, column: 23, scope: !8700)
!8760 = !DILocation(line: 5207, column: 10, scope: !8700)
!8761 = !DILocation(line: 5209, column: 8, scope: !8700)
!8762 = !DILocation(line: 5211, column: 19, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 5211, column: 10)
!8764 = !DILocation(line: 5211, column: 16, scope: !8763)
!8765 = !DILocation(line: 5211, column: 10, scope: !8697)
!8766 = !DILocation(line: 5212, column: 17, scope: !8763)
!8767 = !DILocation(line: 5212, column: 8, scope: !8763)
!8768 = !DILocation(line: 5215, column: 11, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 5214, column: 10)
!8770 = !DILocation(line: 5214, column: 10, scope: !8769)
!8771 = !DILocation(line: 5214, column: 10, scope: !8697)
!8772 = !DILocation(line: 5217, column: 14, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8774, file: !3, line: 5217, column: 7)
!8774 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 5216, column: 8)
!8775 = !DILocation(line: 5217, column: 7, scope: !8774)
!8776 = !DILocation(line: 5218, column: 5, scope: !8773)
!8777 = !DILocation(line: 5221, column: 6, scope: !8697)
!8778 = !DILocation(line: 5222, column: 4, scope: !8698)
!8779 = !DILocation(line: 5223, column: 7, scope: !8692)
!8780 = !DILocation(line: 5212, column: 15, scope: !8763)
!8781 = !DILocation(line: 5207, column: 8, scope: !8700)
!8782 = !DILocation(line: 5190, column: 11, scope: !8692)
!8783 = !DILocation(line: 5189, column: 5, scope: !8692)
!8784 = distinct !{!8784, !8734, !8785}
!8785 = !DILocation(line: 5223, column: 7, scope: !8693)
!8786 = !DILocation(line: 5188, column: 16, scope: !8694)
!8787 = !DILocation(line: 5352, column: 1, scope: !8680)
!8788 = !DILocation(line: 5187, column: 3, scope: !8694)
!8789 = distinct !{!8789, !8730, !8790}
!8790 = !DILocation(line: 5223, column: 7, scope: !8695)
!8791 = !DILocation(line: 5249, column: 17, scope: !8707)
!8792 = !DILocation(line: 5249, column: 20, scope: !8707)
!8793 = !DILocation(line: 5249, column: 53, scope: !8707)
!8794 = !DILocation(line: 5249, column: 7, scope: !8680)
!8795 = !DILocation(line: 5250, column: 18, scope: !8706)
!8796 = !DILocation(line: 5250, column: 10, scope: !8706)
!8797 = !DILocation(line: 0, scope: !8706)
!8798 = !DILocation(line: 5250, column: 41, scope: !8705)
!8799 = !DILocation(line: 5250, column: 5, scope: !8706)
!8800 = !DILocation(line: 5252, column: 42, scope: !8704)
!8801 = !DILocation(line: 5252, column: 31, scope: !8704)
!8802 = !DILocation(line: 5252, column: 28, scope: !8704)
!8803 = !DILocation(line: 5253, column: 4, scope: !8704)
!8804 = !DILocation(line: 5251, column: 11, scope: !8705)
!8805 = !DILocation(line: 5253, column: 9, scope: !8704)
!8806 = !DILocation(line: 5254, column: 8, scope: !8704)
!8807 = !DILocation(line: 5260, column: 14, scope: !8703)
!8808 = !DILocation(line: 5254, column: 11, scope: !8704)
!8809 = !DILocation(line: 5254, column: 38, scope: !8704)
!8810 = !DILocation(line: 5254, column: 36, scope: !8704)
!8811 = !DILocation(line: 5252, column: 11, scope: !8705)
!8812 = !DILocation(line: 5257, column: 4, scope: !8703)
!8813 = !DILocation(line: 0, scope: !8703)
!8814 = !DILocation(line: 5261, column: 33, scope: !8703)
!8815 = !DILocation(line: 5261, column: 4, scope: !8703)
!8816 = !DILocation(line: 5262, column: 12, scope: !8703)
!8817 = !DILocation(line: 5263, column: 11, scope: !8703)
!8818 = !DILocation(line: 5264, column: 11, scope: !8703)
!8819 = !DILocation(line: 5266, column: 17, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 5266, column: 8)
!8821 = !DILocation(line: 5266, column: 14, scope: !8820)
!8822 = !DILocation(line: 5266, column: 8, scope: !8703)
!8823 = !DILocation(line: 5267, column: 13, scope: !8820)
!8824 = !DILocation(line: 5267, column: 6, scope: !8820)
!8825 = !DILocation(line: 5270, column: 4, scope: !8703)
!8826 = !DILocation(line: 5271, column: 56, scope: !8703)
!8827 = !DILocation(line: 5271, column: 4, scope: !8703)
!8828 = !DILocation(line: 5275, column: 4, scope: !8703)
!8829 = !DILocation(line: 5276, column: 20, scope: !8703)
!8830 = !DILocation(line: 5276, column: 4, scope: !8703)
!8831 = !DILocation(line: 5277, column: 4, scope: !8703)
!8832 = !DILocation(line: 5282, column: 4, scope: !8703)
!8833 = !DILocation(line: 5283, column: 27, scope: !8703)
!8834 = !DILocation(line: 5283, column: 13, scope: !8703)
!8835 = !DILocation(line: 5285, column: 4, scope: !8703)
!8836 = !DILocation(line: 5286, column: 27, scope: !8703)
!8837 = !DILocation(line: 5288, column: 25, scope: !8703)
!8838 = !DILocation(line: 5287, column: 6, scope: !8703)
!8839 = !DILocation(line: 5286, column: 13, scope: !8703)
!8840 = !DILocation(line: 5292, column: 15, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 5292, column: 8)
!8842 = !DILocation(line: 5292, column: 8, scope: !8703)
!8843 = !DILocation(line: 5293, column: 6, scope: !8841)
!8844 = !DILocation(line: 5295, column: 4, scope: !8703)
!8845 = !DILocation(line: 5297, column: 8, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 5297, column: 8)
!8847 = !DILocation(line: 5297, column: 50, scope: !8846)
!8848 = !DILocation(line: 5298, column: 8, scope: !8846)
!8849 = !DILocation(line: 5297, column: 8, scope: !8703)
!8850 = !DILocation(line: 5301, column: 15, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 5299, column: 6)
!8852 = !DILocation(line: 5304, column: 8, scope: !8851)
!8853 = !DILocation(line: 5302, column: 8, scope: !8851)
!8854 = !DILocation(line: 5307, column: 6, scope: !8851)
!8855 = !DILocation(line: 5310, column: 2, scope: !8704)
!8856 = !DILocation(line: 5250, column: 5, scope: !8705)
!8857 = distinct !{!8857, !8799, !8858}
!8858 = !DILocation(line: 5310, column: 2, scope: !8706)
!8859 = !DILocation(line: 5316, column: 7, scope: !8715)
!8860 = !DILocation(line: 5316, column: 39, scope: !8715)
!8861 = !DILocation(line: 5316, column: 37, scope: !8715)
!8862 = !DILocation(line: 5316, column: 7, scope: !8680)
!8863 = !DILocation(line: 5318, column: 16, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 5317, column: 5)
!8865 = !DILocation(line: 5320, column: 7, scope: !8864)
!8866 = !DILocation(line: 5321, column: 5, scope: !8864)
!8867 = !DILocation(line: 5328, column: 27, scope: !8714)
!8868 = !DILocation(line: 0, scope: !8714)
!8869 = !DILocation(line: 5329, column: 60, scope: !8714)
!8870 = !DILocation(line: 5329, column: 17, scope: !8714)
!8871 = !DILocation(line: 5330, column: 7, scope: !8714)
!8872 = !DILocation(line: 5332, column: 7, scope: !8714)
!8873 = !DILocation(line: 5335, column: 12, scope: !8714)
!8874 = !DILocation(line: 5336, column: 12, scope: !8714)
!8875 = !DILocation(line: 5334, column: 15, scope: !8714)
!8876 = !DILocation(line: 5337, column: 15, scope: !8714)
!8877 = !DILocation(line: 5338, column: 7, scope: !8714)
!8878 = !DILocation(line: 5341, column: 6, scope: !8714)
!8879 = !DILocation(line: 5340, column: 7, scope: !8714)
!8880 = !DILocation(line: 5345, column: 14, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 5345, column: 7)
!8882 = !DILocation(line: 5345, column: 7, scope: !8680)
!8883 = !DILocation(line: 5347, column: 11, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 5347, column: 11)
!8885 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 5346, column: 5)
!8886 = !DILocation(line: 5347, column: 28, scope: !8884)
!8887 = !DILocation(line: 5347, column: 25, scope: !8884)
!8888 = !DILocation(line: 5347, column: 11, scope: !8885)
!8889 = !DILocation(line: 5348, column: 9, scope: !8884)
!8890 = !DILocation(line: 5350, column: 9, scope: !8884)
!8891 = distinct !DISubprogram(name: "can_fix_p", scope: !3, file: !3, line: 4926, type: !8892, scopeLine: 4928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8895)
!8892 = !DISubroutineType(types: !8893)
!8893 = !{!527, !5, !5, !2072, !8894}
!8894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!8895 = !{!8896, !8897, !8898, !8899, !8900, !8901}
!8896 = !DILocalVariable(name: "fixmode", arg: 1, scope: !8891, file: !3, line: 4926, type: !5)
!8897 = !DILocalVariable(name: "fltmode", arg: 2, scope: !8891, file: !3, line: 4926, type: !5)
!8898 = !DILocalVariable(name: "unsignedp", arg: 3, scope: !8891, file: !3, line: 4927, type: !2072)
!8899 = !DILocalVariable(name: "truncp_ptr", arg: 4, scope: !8891, file: !3, line: 4927, type: !8894)
!8900 = !DILocalVariable(name: "tab", scope: !8891, file: !3, line: 4929, type: !3772)
!8901 = !DILocalVariable(name: "icode", scope: !8891, file: !3, line: 4930, type: !527)
!8902 = !DILocation(line: 0, scope: !8891)
!8903 = !DILocation(line: 4932, column: 9, scope: !8891)
!8904 = !DILocation(line: 4933, column: 11, scope: !8891)
!8905 = !DILocation(line: 4933, column: 58, scope: !8891)
!8906 = !DILocation(line: 4934, column: 13, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 4934, column: 7)
!8908 = !DILocation(line: 4934, column: 7, scope: !8891)
!8909 = !DILocation(line: 4936, column: 19, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 4935, column: 5)
!8911 = !DILocation(line: 4937, column: 7, scope: !8910)
!8912 = !DILocation(line: 4943, column: 9, scope: !8891)
!8913 = !DILocation(line: 4944, column: 58, scope: !8891)
!8914 = !DILocation(line: 4945, column: 13, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 4945, column: 7)
!8916 = !DILocation(line: 4946, column: 7, scope: !8915)
!8917 = !DILocation(line: 4946, column: 49, scope: !8915)
!8918 = !DILocation(line: 4946, column: 59, scope: !8915)
!8919 = !DILocation(line: 4945, column: 7, scope: !8891)
!8920 = !DILocation(line: 4948, column: 19, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 4947, column: 5)
!8922 = !DILocation(line: 4949, column: 7, scope: !8921)
!8923 = !DILocation(line: 4952, column: 15, scope: !8891)
!8924 = !DILocation(line: 4953, column: 3, scope: !8891)
!8925 = !DILocation(line: 4954, column: 1, scope: !8891)
!8926 = distinct !DISubprogram(name: "expand_fixed_convert", scope: !3, file: !3, line: 5359, type: !8927, scopeLine: 5360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8929)
!8927 = !DISubroutineType(types: !8928)
!8928 = !{null, !2090, !2090, !2072, !2072}
!8929 = !{!8930, !8931, !8932, !8933, !8934, !8935, !8936, !8937, !8938, !8939, !8940, !8941}
!8930 = !DILocalVariable(name: "to", arg: 1, scope: !8926, file: !3, line: 5359, type: !2090)
!8931 = !DILocalVariable(name: "from", arg: 2, scope: !8926, file: !3, line: 5359, type: !2090)
!8932 = !DILocalVariable(name: "uintp", arg: 3, scope: !8926, file: !3, line: 5359, type: !2072)
!8933 = !DILocalVariable(name: "satp", arg: 4, scope: !8926, file: !3, line: 5359, type: !2072)
!8934 = !DILocalVariable(name: "to_mode", scope: !8926, file: !3, line: 5361, type: !5)
!8935 = !DILocalVariable(name: "from_mode", scope: !8926, file: !3, line: 5362, type: !5)
!8936 = !DILocalVariable(name: "tab", scope: !8926, file: !3, line: 5363, type: !3772)
!8937 = !DILocalVariable(name: "this_code", scope: !8926, file: !3, line: 5364, type: !384)
!8938 = !DILocalVariable(name: "code", scope: !8926, file: !3, line: 5365, type: !527)
!8939 = !DILocalVariable(name: "insns", scope: !8926, file: !3, line: 5366, type: !2090)
!8940 = !DILocalVariable(name: "value", scope: !8926, file: !3, line: 5366, type: !2090)
!8941 = !DILocalVariable(name: "libfunc", scope: !8926, file: !3, line: 5367, type: !2090)
!8942 = !DILocation(line: 0, scope: !8926)
!8943 = !DILocation(line: 5361, column: 31, scope: !8926)
!8944 = !DILocation(line: 5362, column: 33, scope: !8926)
!8945 = !DILocation(line: 5369, column: 15, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 5369, column: 7)
!8947 = !DILocation(line: 5369, column: 7, scope: !8926)
!8948 = !DILocation(line: 5371, column: 7, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 5370, column: 5)
!8950 = !DILocation(line: 5372, column: 7, scope: !8949)
!8951 = !DILocation(line: 5375, column: 7, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 5375, column: 7)
!8953 = !DILocation(line: 0, scope: !8952)
!8954 = !DILocation(line: 5375, column: 7, scope: !8926)
!8955 = !DILocation(line: 5377, column: 13, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8952, file: !3, line: 5376, column: 5)
!8957 = !DILocation(line: 5378, column: 19, scope: !8956)
!8958 = !DILocation(line: 5379, column: 5, scope: !8956)
!8959 = !DILocation(line: 5382, column: 13, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8952, file: !3, line: 5381, column: 5)
!8961 = !DILocation(line: 5383, column: 19, scope: !8960)
!8962 = !DILocation(line: 5385, column: 10, scope: !8926)
!8963 = !DILocation(line: 5385, column: 44, scope: !8926)
!8964 = !DILocation(line: 5386, column: 12, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 5386, column: 7)
!8966 = !DILocation(line: 5386, column: 7, scope: !8926)
!8967 = !DILocation(line: 5388, column: 7, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8965, file: !3, line: 5387, column: 5)
!8969 = !DILocation(line: 5389, column: 7, scope: !8968)
!8970 = !DILocation(line: 5392, column: 13, scope: !8926)
!8971 = !DILocation(line: 5393, column: 3, scope: !8926)
!8972 = !DILocation(line: 5395, column: 3, scope: !8926)
!8973 = !DILocation(line: 5396, column: 11, scope: !8926)
!8974 = !DILocation(line: 5398, column: 11, scope: !8926)
!8975 = !DILocation(line: 5399, column: 3, scope: !8926)
!8976 = !DILocation(line: 5402, column: 9, scope: !8926)
!8977 = !DILocation(line: 5401, column: 3, scope: !8926)
!8978 = !DILocation(line: 5403, column: 1, scope: !8926)
!8979 = distinct !DISubprogram(name: "expand_sfix_optab", scope: !3, file: !3, line: 5410, type: !8980, scopeLine: 5411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8982)
!8980 = !DISubroutineType(types: !8981)
!8981 = !{!2071, !2090, !2090, !3772}
!8982 = !{!8983, !8984, !8985, !8986, !8987, !8988, !8989, !8990}
!8983 = !DILocalVariable(name: "to", arg: 1, scope: !8979, file: !3, line: 5410, type: !2090)
!8984 = !DILocalVariable(name: "from", arg: 2, scope: !8979, file: !3, line: 5410, type: !2090)
!8985 = !DILocalVariable(name: "tab", arg: 3, scope: !8979, file: !3, line: 5410, type: !3772)
!8986 = !DILocalVariable(name: "icode", scope: !8979, file: !3, line: 5412, type: !527)
!8987 = !DILocalVariable(name: "target", scope: !8979, file: !3, line: 5413, type: !2090)
!8988 = !DILocalVariable(name: "fmode", scope: !8979, file: !3, line: 5414, type: !5)
!8989 = !DILocalVariable(name: "imode", scope: !8979, file: !3, line: 5414, type: !5)
!8990 = !DILocalVariable(name: "last", scope: !8991, file: !3, line: 5429, type: !2090)
!8991 = distinct !DILexicalBlock(scope: !8992, file: !3, line: 5428, column: 4)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 5427, column: 6)
!8993 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 5425, column: 7)
!8994 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 5423, column: 5)
!8995 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 5423, column: 5)
!8996 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 5421, column: 3)
!8997 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 5421, column: 3)
!8998 = !DILocation(line: 0, scope: !8979)
!8999 = !DILocation(line: 5421, column: 16, scope: !8997)
!9000 = !DILocation(line: 0, scope: !8995)
!9001 = !DILocation(line: 5421, column: 8, scope: !8997)
!9002 = !DILocation(line: 5413, column: 7, scope: !8979)
!9003 = !DILocation(line: 0, scope: !8997)
!9004 = !DILocation(line: 5421, column: 39, scope: !8996)
!9005 = !DILocation(line: 5421, column: 3, scope: !8997)
!9006 = !DILocation(line: 5423, column: 18, scope: !8995)
!9007 = !DILocation(line: 0, scope: !8993)
!9008 = !DILocation(line: 5423, column: 10, scope: !8995)
!9009 = !DILocation(line: 5423, column: 39, scope: !8994)
!9010 = !DILocation(line: 5423, column: 5, scope: !8995)
!9011 = !DILocation(line: 5426, column: 10, scope: !8993)
!9012 = !DILocation(line: 5426, column: 53, scope: !8993)
!9013 = !DILocation(line: 5427, column: 12, scope: !8992)
!9014 = !DILocation(line: 5427, column: 6, scope: !8993)
!9015 = !DILocation(line: 5429, column: 17, scope: !8991)
!9016 = !DILocation(line: 0, scope: !8991)
!9017 = !DILocation(line: 5430, column: 19, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 5430, column: 10)
!9019 = !DILocation(line: 5430, column: 16, scope: !9018)
!9020 = !DILocation(line: 5430, column: 10, scope: !8991)
!9021 = !DILocation(line: 5431, column: 15, scope: !9018)
!9022 = !DILocation(line: 5431, column: 8, scope: !9018)
!9023 = !DILocation(line: 5433, column: 19, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 5433, column: 10)
!9025 = !DILocation(line: 5433, column: 16, scope: !9024)
!9026 = !DILocation(line: 5433, column: 10, scope: !8991)
!9027 = !DILocation(line: 5434, column: 17, scope: !9024)
!9028 = !DILocation(line: 5434, column: 8, scope: !9024)
!9029 = !DILocation(line: 5436, column: 11, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 5436, column: 10)
!9031 = !DILocation(line: 5436, column: 10, scope: !8991)
!9032 = !DILocation(line: 5438, column: 10, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 5437, column: 8)
!9034 = !DILocation(line: 5439, column: 3, scope: !9033)
!9035 = !DILocation(line: 5441, column: 17, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 5441, column: 10)
!9037 = !DILocation(line: 5441, column: 10, scope: !8991)
!9038 = !DILocation(line: 5442, column: 8, scope: !9036)
!9039 = !DILocation(line: 5424, column: 11, scope: !8994)
!9040 = !DILocation(line: 5423, column: 5, scope: !8994)
!9041 = distinct !{!9041, !9010, !9042}
!9042 = !DILocation(line: 5445, column: 7, scope: !8995)
!9043 = !DILocation(line: 5422, column: 16, scope: !8996)
!9044 = !DILocation(line: 5421, column: 3, scope: !8996)
!9045 = distinct !{!9045, !9005, !9046}
!9046 = !DILocation(line: 5445, column: 7, scope: !8997)
!9047 = !DILocation(line: 5448, column: 1, scope: !8979)
!9048 = distinct !DISubprogram(name: "have_insn_for", scope: !3, file: !3, line: 5453, type: !9049, scopeLine: 5454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9051)
!9049 = !DISubroutineType(types: !9050)
!9050 = !{!2072, !384, !5}
!9051 = !{!9052, !9053}
!9052 = !DILocalVariable(name: "code", arg: 1, scope: !9048, file: !3, line: 5453, type: !384)
!9053 = !DILocalVariable(name: "mode", arg: 2, scope: !9048, file: !3, line: 5453, type: !5)
!9054 = !DILocation(line: 0, scope: !9048)
!9055 = !DILocation(line: 5455, column: 11, scope: !9048)
!9056 = !DILocation(line: 5455, column: 37, scope: !9048)
!9057 = !DILocation(line: 5456, column: 4, scope: !9048)
!9058 = !DILocation(line: 5456, column: 8, scope: !9048)
!9059 = !DILocation(line: 5456, column: 57, scope: !9048)
!9060 = !DILocation(line: 5457, column: 8, scope: !9048)
!9061 = !DILocation(line: 5455, column: 3, scope: !9048)
!9062 = distinct !DISubprogram(name: "build_libfunc_function", scope: !3, file: !3, line: 6072, type: !9063, scopeLine: 6073, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9065)
!9063 = !DISubroutineType(types: !9064)
!9064 = !{!2205, !2077}
!9065 = !{!9066, !9067}
!9066 = !DILocalVariable(name: "name", arg: 1, scope: !9062, file: !3, line: 6072, type: !2077)
!9067 = !DILocalVariable(name: "decl", scope: !9062, file: !3, line: 6074, type: !2205)
!9068 = !DILocation(line: 0, scope: !9062)
!9069 = !DILocation(line: 6074, column: 15, scope: !9062)
!9070 = !DILocation(line: 6079, column: 3, scope: !9062)
!9071 = !DILocation(line: 6079, column: 26, scope: !9062)
!9072 = !DILocation(line: 6080, column: 24, scope: !9062)
!9073 = !DILocation(line: 6081, column: 3, scope: !9062)
!9074 = !DILocation(line: 6081, column: 22, scope: !9062)
!9075 = !DILocation(line: 6082, column: 3, scope: !9062)
!9076 = !DILocation(line: 6086, column: 3, scope: !9062)
!9077 = !DILocation(line: 6088, column: 3, scope: !9062)
!9078 = distinct !DISubprogram(name: "init_one_libfunc", scope: !3, file: !3, line: 6092, type: !9079, scopeLine: 6093, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9081)
!9079 = !DISubroutineType(types: !9080)
!9080 = !{!2090, !2077}
!9081 = !{!9082, !9083, !9084, !9085, !9086}
!9082 = !DILocalVariable(name: "name", arg: 1, scope: !9078, file: !3, line: 6092, type: !2077)
!9083 = !DILocalVariable(name: "id", scope: !9078, file: !3, line: 6094, type: !2205)
!9084 = !DILocalVariable(name: "decl", scope: !9078, file: !3, line: 6094, type: !2205)
!9085 = !DILocalVariable(name: "slot", scope: !9078, file: !3, line: 6095, type: !2559)
!9086 = !DILocalVariable(name: "hash", scope: !9078, file: !3, line: 6096, type: !2545)
!9087 = !DILocation(line: 0, scope: !9078)
!9088 = !DILocation(line: 6098, column: 7, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 6098, column: 7)
!9090 = !DILocation(line: 6098, column: 21, scope: !9089)
!9091 = !DILocation(line: 6098, column: 7, scope: !9078)
!9092 = !DILocation(line: 6099, column: 21, scope: !9089)
!9093 = !DILocation(line: 6099, column: 19, scope: !9089)
!9094 = !DILocation(line: 6099, column: 5, scope: !9089)
!9095 = !DILocation(line: 6103, column: 8, scope: !9078)
!9096 = !DILocation(line: 6104, column: 10, scope: !9078)
!9097 = !DILocation(line: 6105, column: 36, scope: !9078)
!9098 = !DILocation(line: 6105, column: 51, scope: !9078)
!9099 = !DILocation(line: 6105, column: 10, scope: !9078)
!9100 = !DILocation(line: 6106, column: 17, scope: !9078)
!9101 = !DILocation(line: 6107, column: 12, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 6107, column: 7)
!9103 = !DILocation(line: 6107, column: 7, scope: !9078)
!9104 = !DILocation(line: 6111, column: 14, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9102, file: !3, line: 6108, column: 5)
!9106 = !DILocation(line: 6112, column: 13, scope: !9105)
!9107 = !DILocation(line: 6113, column: 5, scope: !9105)
!9108 = !DILocation(line: 6114, column: 10, scope: !9078)
!9109 = !DILocation(line: 6114, column: 3, scope: !9078)
!9110 = distinct !DISubprogram(name: "libfunc_decl_hash", scope: !3, file: !3, line: 6058, type: !2543, scopeLine: 6059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9111)
!9111 = !{!9112}
!9112 = !DILocalVariable(name: "entry", arg: 1, scope: !9110, file: !3, line: 6058, type: !2546)
!9113 = !DILocation(line: 0, scope: !9110)
!9114 = !DILocation(line: 6060, column: 28, scope: !9110)
!9115 = !DILocation(line: 6060, column: 10, scope: !9110)
!9116 = !DILocation(line: 6060, column: 3, scope: !9110)
!9117 = distinct !DISubprogram(name: "libfunc_decl_eq", scope: !3, file: !3, line: 6064, type: !2551, scopeLine: 6065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9118)
!9118 = !{!9119, !9120}
!9119 = !DILocalVariable(name: "entry1", arg: 1, scope: !9117, file: !3, line: 6064, type: !2546)
!9120 = !DILocalVariable(name: "entry2", arg: 2, scope: !9117, file: !3, line: 6064, type: !2546)
!9121 = !DILocation(line: 0, scope: !9117)
!9122 = !DILocation(line: 6066, column: 10, scope: !9117)
!9123 = !DILocation(line: 6066, column: 45, scope: !9117)
!9124 = !DILocation(line: 6066, column: 42, scope: !9117)
!9125 = !DILocation(line: 6066, column: 3, scope: !9117)
!9126 = distinct !DISubprogram(name: "set_user_assembler_libfunc", scope: !3, file: !3, line: 6120, type: !9127, scopeLine: 6121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9129)
!9127 = !DISubroutineType(types: !9128)
!9128 = !{!2090, !2077, !2077}
!9129 = !{!9130, !9131, !9132, !9133, !9134, !9135}
!9130 = !DILocalVariable(name: "name", arg: 1, scope: !9126, file: !3, line: 6120, type: !2077)
!9131 = !DILocalVariable(name: "asmspec", arg: 2, scope: !9126, file: !3, line: 6120, type: !2077)
!9132 = !DILocalVariable(name: "id", scope: !9126, file: !3, line: 6122, type: !2205)
!9133 = !DILocalVariable(name: "decl", scope: !9126, file: !3, line: 6122, type: !2205)
!9134 = !DILocalVariable(name: "slot", scope: !9126, file: !3, line: 6123, type: !2559)
!9135 = !DILocalVariable(name: "hash", scope: !9126, file: !3, line: 6124, type: !2545)
!9136 = !DILocation(line: 0, scope: !9126)
!9137 = !DILocation(line: 6126, column: 8, scope: !9126)
!9138 = !DILocation(line: 6127, column: 10, scope: !9126)
!9139 = !DILocation(line: 6128, column: 36, scope: !9126)
!9140 = !DILocation(line: 6128, column: 51, scope: !9126)
!9141 = !DILocation(line: 6128, column: 10, scope: !9126)
!9142 = !DILocation(line: 6129, column: 3, scope: !9126)
!9143 = !DILocation(line: 6130, column: 17, scope: !9126)
!9144 = !DILocation(line: 6131, column: 3, scope: !9126)
!9145 = !DILocation(line: 6132, column: 10, scope: !9126)
!9146 = !DILocation(line: 6132, column: 3, scope: !9126)
!9147 = distinct !DISubprogram(name: "set_optab_libfunc", scope: !3, file: !3, line: 6138, type: !9148, scopeLine: 6139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9150)
!9148 = !DISubroutineType(types: !9149)
!9149 = !{null, !3291, !5, !2077}
!9150 = !{!9151, !9152, !9153, !9154, !9155, !9156}
!9151 = !DILocalVariable(name: "optable", arg: 1, scope: !9147, file: !3, line: 6138, type: !3291)
!9152 = !DILocalVariable(name: "mode", arg: 2, scope: !9147, file: !3, line: 6138, type: !5)
!9153 = !DILocalVariable(name: "name", arg: 3, scope: !9147, file: !3, line: 6138, type: !2077)
!9154 = !DILocalVariable(name: "val", scope: !9147, file: !3, line: 6140, type: !2090)
!9155 = !DILocalVariable(name: "e", scope: !9147, file: !3, line: 6141, type: !2084)
!9156 = !DILocalVariable(name: "slot", scope: !9147, file: !3, line: 6142, type: !2082)
!9157 = !DILocation(line: 0, scope: !9147)
!9158 = !DILocation(line: 6141, column: 3, scope: !9147)
!9159 = !DILocation(line: 6143, column: 31, scope: !9147)
!9160 = !DILocation(line: 6143, column: 5, scope: !9147)
!9161 = !DILocation(line: 6143, column: 11, scope: !9147)
!9162 = !DILocation(line: 6144, column: 5, scope: !9147)
!9163 = !DILocation(line: 6144, column: 11, scope: !9147)
!9164 = !DILocation(line: 6145, column: 5, scope: !9147)
!9165 = !DILocation(line: 6145, column: 11, scope: !9147)
!9166 = !DILocation(line: 6147, column: 7, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 6147, column: 7)
!9168 = !DILocation(line: 6147, column: 7, scope: !9147)
!9169 = !DILocation(line: 6148, column: 11, scope: !9167)
!9170 = !DILocation(line: 6148, column: 5, scope: !9167)
!9171 = !DILocation(line: 0, scope: !9167)
!9172 = !DILocation(line: 6151, column: 52, scope: !9147)
!9173 = !DILocation(line: 6151, column: 36, scope: !9147)
!9174 = !DILocation(line: 6151, column: 10, scope: !9147)
!9175 = !DILocation(line: 6152, column: 7, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 6152, column: 7)
!9177 = !DILocation(line: 6152, column: 13, scope: !9176)
!9178 = !DILocation(line: 6152, column: 7, scope: !9147)
!9179 = !DILocation(line: 6153, column: 13, scope: !9176)
!9180 = !DILocation(line: 6153, column: 11, scope: !9176)
!9181 = !DILocation(line: 6153, column: 5, scope: !9176)
!9182 = !DILocation(line: 6154, column: 4, scope: !9147)
!9183 = !DILocation(line: 6154, column: 12, scope: !9147)
!9184 = !DILocation(line: 6154, column: 18, scope: !9147)
!9185 = !DILocation(line: 6155, column: 4, scope: !9147)
!9186 = !DILocation(line: 6155, column: 12, scope: !9147)
!9187 = !DILocation(line: 6155, column: 18, scope: !9147)
!9188 = !DILocation(line: 6156, column: 4, scope: !9147)
!9189 = !DILocation(line: 6156, column: 12, scope: !9147)
!9190 = !DILocation(line: 6156, column: 18, scope: !9147)
!9191 = !DILocation(line: 6157, column: 4, scope: !9147)
!9192 = !DILocation(line: 6157, column: 12, scope: !9147)
!9193 = !DILocation(line: 6157, column: 20, scope: !9147)
!9194 = !DILocation(line: 6158, column: 1, scope: !9147)
!9195 = distinct !DISubprogram(name: "set_conv_libfunc", scope: !3, file: !3, line: 6164, type: !9196, scopeLine: 6166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9198)
!9196 = !DISubroutineType(types: !9197)
!9197 = !{null, !3772, !5, !5, !2077}
!9198 = !{!9199, !9200, !9201, !9202, !9203, !9204, !9205}
!9199 = !DILocalVariable(name: "optable", arg: 1, scope: !9195, file: !3, line: 6164, type: !3772)
!9200 = !DILocalVariable(name: "tmode", arg: 2, scope: !9195, file: !3, line: 6164, type: !5)
!9201 = !DILocalVariable(name: "fmode", arg: 3, scope: !9195, file: !3, line: 6165, type: !5)
!9202 = !DILocalVariable(name: "name", arg: 4, scope: !9195, file: !3, line: 6165, type: !2077)
!9203 = !DILocalVariable(name: "val", scope: !9195, file: !3, line: 6167, type: !2090)
!9204 = !DILocalVariable(name: "e", scope: !9195, file: !3, line: 6168, type: !2084)
!9205 = !DILocalVariable(name: "slot", scope: !9195, file: !3, line: 6169, type: !2082)
!9206 = !DILocation(line: 0, scope: !9195)
!9207 = !DILocation(line: 6168, column: 3, scope: !9195)
!9208 = !DILocation(line: 6170, column: 31, scope: !9195)
!9209 = !DILocation(line: 6170, column: 5, scope: !9195)
!9210 = !DILocation(line: 6170, column: 11, scope: !9195)
!9211 = !DILocation(line: 6171, column: 5, scope: !9195)
!9212 = !DILocation(line: 6171, column: 11, scope: !9195)
!9213 = !DILocation(line: 6172, column: 5, scope: !9195)
!9214 = !DILocation(line: 6172, column: 11, scope: !9195)
!9215 = !DILocation(line: 6174, column: 7, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 6174, column: 7)
!9217 = !DILocation(line: 6174, column: 7, scope: !9195)
!9218 = !DILocation(line: 6175, column: 11, scope: !9216)
!9219 = !DILocation(line: 6175, column: 5, scope: !9216)
!9220 = !DILocation(line: 0, scope: !9216)
!9221 = !DILocation(line: 6178, column: 52, scope: !9195)
!9222 = !DILocation(line: 6178, column: 36, scope: !9195)
!9223 = !DILocation(line: 6178, column: 10, scope: !9195)
!9224 = !DILocation(line: 6179, column: 7, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 6179, column: 7)
!9226 = !DILocation(line: 6179, column: 13, scope: !9225)
!9227 = !DILocation(line: 6179, column: 7, scope: !9195)
!9228 = !DILocation(line: 6180, column: 13, scope: !9225)
!9229 = !DILocation(line: 6180, column: 11, scope: !9225)
!9230 = !DILocation(line: 6180, column: 5, scope: !9225)
!9231 = !DILocation(line: 6181, column: 4, scope: !9195)
!9232 = !DILocation(line: 6181, column: 12, scope: !9195)
!9233 = !DILocation(line: 6181, column: 18, scope: !9195)
!9234 = !DILocation(line: 6182, column: 4, scope: !9195)
!9235 = !DILocation(line: 6182, column: 12, scope: !9195)
!9236 = !DILocation(line: 6182, column: 18, scope: !9195)
!9237 = !DILocation(line: 6183, column: 4, scope: !9195)
!9238 = !DILocation(line: 6183, column: 12, scope: !9195)
!9239 = !DILocation(line: 6183, column: 18, scope: !9195)
!9240 = !DILocation(line: 6184, column: 4, scope: !9195)
!9241 = !DILocation(line: 6184, column: 12, scope: !9195)
!9242 = !DILocation(line: 6184, column: 20, scope: !9195)
!9243 = !DILocation(line: 6185, column: 1, scope: !9195)
!9244 = !DILocation(line: 6196, column: 18, scope: !3242)
!9245 = !DILocation(line: 6196, column: 16, scope: !3242)
!9246 = !DILocation(line: 0, scope: !3242)
!9247 = !DILocation(line: 6200, column: 8, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 6200, column: 3)
!9249 = !DILocation(line: 0, scope: !9248)
!9250 = !DILocation(line: 6200, column: 17, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 6200, column: 3)
!9252 = !DILocation(line: 6200, column: 3, scope: !9248)
!9253 = !DILocation(line: 6204, column: 3, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 6204, column: 3)
!9255 = !DILocation(line: 6201, column: 5, scope: !9251)
!9256 = !DILocation(line: 6201, column: 23, scope: !9251)
!9257 = !DILocation(line: 6200, column: 39, scope: !9251)
!9258 = !DILocation(line: 6200, column: 3, scope: !9251)
!9259 = distinct !{!9259, !9252, !9260}
!9260 = !DILocation(line: 6201, column: 25, scope: !9248)
!9261 = !DILocation(line: 0, scope: !9254)
!9262 = !DILocation(line: 6204, column: 17, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 6204, column: 3)
!9264 = !DILocation(line: 6206, column: 7, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9263, file: !3, line: 6205, column: 5)
!9266 = !DILocation(line: 6206, column: 25, scope: !9265)
!9267 = !DILocation(line: 6207, column: 7, scope: !9265)
!9268 = !DILocation(line: 6207, column: 26, scope: !9265)
!9269 = !DILocation(line: 6204, column: 39, scope: !9263)
!9270 = !DILocation(line: 6204, column: 3, scope: !9263)
!9271 = distinct !{!9271, !9253, !9272}
!9272 = !DILocation(line: 6208, column: 5, scope: !9254)
!9273 = !DILocation(line: 6215, column: 3, scope: !3242)
!9274 = !DILocation(line: 6218, column: 3, scope: !3242)
!9275 = !DILocation(line: 6219, column: 3, scope: !3242)
!9276 = !DILocation(line: 6220, column: 3, scope: !3242)
!9277 = !DILocation(line: 6221, column: 3, scope: !3242)
!9278 = !DILocation(line: 6222, column: 3, scope: !3242)
!9279 = !DILocation(line: 6223, column: 3, scope: !3242)
!9280 = !DILocation(line: 6224, column: 3, scope: !3242)
!9281 = !DILocation(line: 6225, column: 3, scope: !3242)
!9282 = !DILocation(line: 6226, column: 3, scope: !3242)
!9283 = !DILocation(line: 6227, column: 3, scope: !3242)
!9284 = !DILocation(line: 6228, column: 3, scope: !3242)
!9285 = !DILocation(line: 6229, column: 3, scope: !3242)
!9286 = !DILocation(line: 6230, column: 3, scope: !3242)
!9287 = !DILocation(line: 6231, column: 3, scope: !3242)
!9288 = !DILocation(line: 6232, column: 3, scope: !3242)
!9289 = !DILocation(line: 6233, column: 3, scope: !3242)
!9290 = !DILocation(line: 6234, column: 3, scope: !3242)
!9291 = !DILocation(line: 6235, column: 3, scope: !3242)
!9292 = !DILocation(line: 6236, column: 3, scope: !3242)
!9293 = !DILocation(line: 6237, column: 3, scope: !3242)
!9294 = !DILocation(line: 6238, column: 3, scope: !3242)
!9295 = !DILocation(line: 6239, column: 3, scope: !3242)
!9296 = !DILocation(line: 6240, column: 3, scope: !3242)
!9297 = !DILocation(line: 6241, column: 3, scope: !3242)
!9298 = !DILocation(line: 6242, column: 3, scope: !3242)
!9299 = !DILocation(line: 6243, column: 3, scope: !3242)
!9300 = !DILocation(line: 6244, column: 3, scope: !3242)
!9301 = !DILocation(line: 6245, column: 3, scope: !3242)
!9302 = !DILocation(line: 6246, column: 3, scope: !3242)
!9303 = !DILocation(line: 6247, column: 3, scope: !3242)
!9304 = !DILocation(line: 6248, column: 3, scope: !3242)
!9305 = !DILocation(line: 6249, column: 3, scope: !3242)
!9306 = !DILocation(line: 6250, column: 3, scope: !3242)
!9307 = !DILocation(line: 6251, column: 3, scope: !3242)
!9308 = !DILocation(line: 6252, column: 3, scope: !3242)
!9309 = !DILocation(line: 6253, column: 3, scope: !3242)
!9310 = !DILocation(line: 6254, column: 3, scope: !3242)
!9311 = !DILocation(line: 6255, column: 3, scope: !3242)
!9312 = !DILocation(line: 6256, column: 3, scope: !3242)
!9313 = !DILocation(line: 6257, column: 3, scope: !3242)
!9314 = !DILocation(line: 6258, column: 3, scope: !3242)
!9315 = !DILocation(line: 6259, column: 3, scope: !3242)
!9316 = !DILocation(line: 6260, column: 3, scope: !3242)
!9317 = !DILocation(line: 6261, column: 3, scope: !3242)
!9318 = !DILocation(line: 6262, column: 3, scope: !3242)
!9319 = !DILocation(line: 6263, column: 3, scope: !3242)
!9320 = !DILocation(line: 6264, column: 3, scope: !3242)
!9321 = !DILocation(line: 6265, column: 3, scope: !3242)
!9322 = !DILocation(line: 6266, column: 3, scope: !3242)
!9323 = !DILocation(line: 6267, column: 3, scope: !3242)
!9324 = !DILocation(line: 6268, column: 3, scope: !3242)
!9325 = !DILocation(line: 6269, column: 3, scope: !3242)
!9326 = !DILocation(line: 6270, column: 3, scope: !3242)
!9327 = !DILocation(line: 6274, column: 3, scope: !3242)
!9328 = !DILocation(line: 6275, column: 3, scope: !3242)
!9329 = !DILocation(line: 6276, column: 3, scope: !3242)
!9330 = !DILocation(line: 6278, column: 3, scope: !3242)
!9331 = !DILocation(line: 6279, column: 3, scope: !3242)
!9332 = !DILocation(line: 6280, column: 3, scope: !3242)
!9333 = !DILocation(line: 6282, column: 3, scope: !3242)
!9334 = !DILocation(line: 6284, column: 3, scope: !3242)
!9335 = !DILocation(line: 6285, column: 3, scope: !3242)
!9336 = !DILocation(line: 6287, column: 3, scope: !3242)
!9337 = !DILocation(line: 6288, column: 3, scope: !3242)
!9338 = !DILocation(line: 6289, column: 3, scope: !3242)
!9339 = !DILocation(line: 6290, column: 3, scope: !3242)
!9340 = !DILocation(line: 6291, column: 3, scope: !3242)
!9341 = !DILocation(line: 6292, column: 3, scope: !3242)
!9342 = !DILocation(line: 6293, column: 3, scope: !3242)
!9343 = !DILocation(line: 6295, column: 3, scope: !3242)
!9344 = !DILocation(line: 6296, column: 3, scope: !3242)
!9345 = !DILocation(line: 6297, column: 3, scope: !3242)
!9346 = !DILocation(line: 6298, column: 3, scope: !3242)
!9347 = !DILocation(line: 6299, column: 3, scope: !3242)
!9348 = !DILocation(line: 6300, column: 3, scope: !3242)
!9349 = !DILocation(line: 6301, column: 3, scope: !3242)
!9350 = !DILocation(line: 6302, column: 3, scope: !3242)
!9351 = !DILocation(line: 6303, column: 3, scope: !3242)
!9352 = !DILocation(line: 6304, column: 3, scope: !3242)
!9353 = !DILocation(line: 6305, column: 3, scope: !3242)
!9354 = !DILocation(line: 6306, column: 3, scope: !3242)
!9355 = !DILocation(line: 6307, column: 3, scope: !3242)
!9356 = !DILocation(line: 6308, column: 3, scope: !3242)
!9357 = !DILocation(line: 6309, column: 3, scope: !3242)
!9358 = !DILocation(line: 6310, column: 3, scope: !3242)
!9359 = !DILocation(line: 6311, column: 3, scope: !3242)
!9360 = !DILocation(line: 6312, column: 3, scope: !3242)
!9361 = !DILocation(line: 6313, column: 3, scope: !3242)
!9362 = !DILocation(line: 6314, column: 3, scope: !3242)
!9363 = !DILocation(line: 6315, column: 3, scope: !3242)
!9364 = !DILocation(line: 6316, column: 3, scope: !3242)
!9365 = !DILocation(line: 6317, column: 3, scope: !3242)
!9366 = !DILocation(line: 6318, column: 3, scope: !3242)
!9367 = !DILocation(line: 6319, column: 3, scope: !3242)
!9368 = !DILocation(line: 6320, column: 3, scope: !3242)
!9369 = !DILocation(line: 6321, column: 3, scope: !3242)
!9370 = !DILocation(line: 6322, column: 3, scope: !3242)
!9371 = !DILocation(line: 6323, column: 3, scope: !3242)
!9372 = !DILocation(line: 6324, column: 3, scope: !3242)
!9373 = !DILocation(line: 6325, column: 3, scope: !3242)
!9374 = !DILocation(line: 6326, column: 3, scope: !3242)
!9375 = !DILocation(line: 6327, column: 3, scope: !3242)
!9376 = !DILocation(line: 6328, column: 3, scope: !3242)
!9377 = !DILocation(line: 6329, column: 3, scope: !3242)
!9378 = !DILocation(line: 6330, column: 3, scope: !3242)
!9379 = !DILocation(line: 6331, column: 3, scope: !3242)
!9380 = !DILocation(line: 6332, column: 3, scope: !3242)
!9381 = !DILocation(line: 6333, column: 3, scope: !3242)
!9382 = !DILocation(line: 6334, column: 3, scope: !3242)
!9383 = !DILocation(line: 6335, column: 3, scope: !3242)
!9384 = !DILocation(line: 6336, column: 3, scope: !3242)
!9385 = !DILocation(line: 6337, column: 3, scope: !3242)
!9386 = !DILocation(line: 6339, column: 3, scope: !3242)
!9387 = !DILocation(line: 6341, column: 3, scope: !3242)
!9388 = !DILocation(line: 6342, column: 3, scope: !3242)
!9389 = !DILocation(line: 6344, column: 3, scope: !3242)
!9390 = !DILocation(line: 6345, column: 3, scope: !3242)
!9391 = !DILocation(line: 6346, column: 3, scope: !3242)
!9392 = !DILocation(line: 6347, column: 3, scope: !3242)
!9393 = !DILocation(line: 6348, column: 3, scope: !3242)
!9394 = !DILocation(line: 6349, column: 3, scope: !3242)
!9395 = !DILocation(line: 6351, column: 3, scope: !3242)
!9396 = !DILocation(line: 6352, column: 3, scope: !3242)
!9397 = !DILocation(line: 6353, column: 3, scope: !3242)
!9398 = !DILocation(line: 6354, column: 3, scope: !3242)
!9399 = !DILocation(line: 6356, column: 3, scope: !3242)
!9400 = !DILocation(line: 6357, column: 3, scope: !3242)
!9401 = !DILocation(line: 6358, column: 3, scope: !3242)
!9402 = !DILocation(line: 6359, column: 3, scope: !3242)
!9403 = !DILocation(line: 6360, column: 3, scope: !3242)
!9404 = !DILocation(line: 6361, column: 3, scope: !3242)
!9405 = !DILocation(line: 6362, column: 3, scope: !3242)
!9406 = !DILocation(line: 6363, column: 3, scope: !3242)
!9407 = !DILocation(line: 6364, column: 3, scope: !3242)
!9408 = !DILocation(line: 6365, column: 3, scope: !3242)
!9409 = !DILocation(line: 6366, column: 3, scope: !3242)
!9410 = !DILocation(line: 6367, column: 3, scope: !3242)
!9411 = !DILocation(line: 6368, column: 3, scope: !3242)
!9412 = !DILocation(line: 6369, column: 3, scope: !3242)
!9413 = !DILocation(line: 6370, column: 3, scope: !3242)
!9414 = !DILocation(line: 6371, column: 3, scope: !3242)
!9415 = !DILocation(line: 6372, column: 3, scope: !3242)
!9416 = !DILocation(line: 6373, column: 3, scope: !3242)
!9417 = !DILocation(line: 6374, column: 3, scope: !3242)
!9418 = !DILocation(line: 6375, column: 3, scope: !3242)
!9419 = !DILocation(line: 6376, column: 3, scope: !3242)
!9420 = !DILocation(line: 6377, column: 3, scope: !3242)
!9421 = !DILocation(line: 6378, column: 3, scope: !3242)
!9422 = !DILocation(line: 6379, column: 3, scope: !3242)
!9423 = !DILocation(line: 6380, column: 3, scope: !3242)
!9424 = !DILocation(line: 6381, column: 3, scope: !3242)
!9425 = !DILocation(line: 6382, column: 3, scope: !3242)
!9426 = !DILocation(line: 6383, column: 3, scope: !3242)
!9427 = !DILocation(line: 6385, column: 3, scope: !3242)
!9428 = !DILocation(line: 6388, column: 3, scope: !3242)
!9429 = !DILocation(line: 6389, column: 3, scope: !3242)
!9430 = !DILocation(line: 6390, column: 3, scope: !3242)
!9431 = !DILocation(line: 6391, column: 3, scope: !3242)
!9432 = !DILocation(line: 6392, column: 3, scope: !3242)
!9433 = !DILocation(line: 6393, column: 3, scope: !3242)
!9434 = !DILocation(line: 6394, column: 3, scope: !3242)
!9435 = !DILocation(line: 6395, column: 3, scope: !3242)
!9436 = !DILocation(line: 6396, column: 3, scope: !3242)
!9437 = !DILocation(line: 6397, column: 3, scope: !3242)
!9438 = !DILocation(line: 6398, column: 3, scope: !3242)
!9439 = !DILocation(line: 6399, column: 3, scope: !3242)
!9440 = !DILocation(line: 6400, column: 3, scope: !3242)
!9441 = !DILocation(line: 6402, column: 3, scope: !3242)
!9442 = !DILocation(line: 6403, column: 3, scope: !3242)
!9443 = !DILocation(line: 6404, column: 3, scope: !3242)
!9444 = !DILocation(line: 6405, column: 3, scope: !3242)
!9445 = !DILocation(line: 6407, column: 8, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 6407, column: 3)
!9447 = !DILocation(line: 0, scope: !9446)
!9448 = !DILocation(line: 6407, column: 17, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9446, file: !3, line: 6407, column: 3)
!9450 = !DILocation(line: 6407, column: 3, scope: !9446)
!9451 = !DILocation(line: 6409, column: 7, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 6408, column: 5)
!9453 = !DILocation(line: 6409, column: 23, scope: !9452)
!9454 = !DILocation(line: 6410, column: 7, scope: !9452)
!9455 = !DILocation(line: 6410, column: 23, scope: !9452)
!9456 = !DILocation(line: 6411, column: 7, scope: !9452)
!9457 = !DILocation(line: 6411, column: 24, scope: !9452)
!9458 = !DILocation(line: 6412, column: 7, scope: !9452)
!9459 = !DILocation(line: 6412, column: 23, scope: !9452)
!9460 = !DILocation(line: 6413, column: 7, scope: !9452)
!9461 = !DILocation(line: 6413, column: 23, scope: !9452)
!9462 = !DILocation(line: 6415, column: 7, scope: !9452)
!9463 = !DILocation(line: 6415, column: 25, scope: !9452)
!9464 = !DILocation(line: 6416, column: 7, scope: !9452)
!9465 = !DILocation(line: 6416, column: 25, scope: !9452)
!9466 = !DILocation(line: 6417, column: 7, scope: !9452)
!9467 = !DILocation(line: 6417, column: 25, scope: !9452)
!9468 = !DILocation(line: 6418, column: 7, scope: !9452)
!9469 = !DILocation(line: 6418, column: 25, scope: !9452)
!9470 = !DILocation(line: 6419, column: 7, scope: !9452)
!9471 = !DILocation(line: 6419, column: 25, scope: !9452)
!9472 = !DILocation(line: 6420, column: 7, scope: !9452)
!9473 = !DILocation(line: 6420, column: 26, scope: !9452)
!9474 = !DILocation(line: 6421, column: 7, scope: !9452)
!9475 = !DILocation(line: 6421, column: 29, scope: !9452)
!9476 = !DILocation(line: 6422, column: 7, scope: !9452)
!9477 = !DILocation(line: 6422, column: 29, scope: !9452)
!9478 = !DILocation(line: 6423, column: 7, scope: !9452)
!9479 = !DILocation(line: 6423, column: 29, scope: !9452)
!9480 = !DILocation(line: 6424, column: 7, scope: !9452)
!9481 = !DILocation(line: 6424, column: 29, scope: !9452)
!9482 = !DILocation(line: 6425, column: 7, scope: !9452)
!9483 = !DILocation(line: 6425, column: 29, scope: !9452)
!9484 = !DILocation(line: 6426, column: 7, scope: !9452)
!9485 = !DILocation(line: 6426, column: 30, scope: !9452)
!9486 = !DILocation(line: 6427, column: 7, scope: !9452)
!9487 = !DILocation(line: 6427, column: 29, scope: !9452)
!9488 = !DILocation(line: 6428, column: 7, scope: !9452)
!9489 = !DILocation(line: 6428, column: 29, scope: !9452)
!9490 = !DILocation(line: 6429, column: 7, scope: !9452)
!9491 = !DILocation(line: 6429, column: 29, scope: !9452)
!9492 = !DILocation(line: 6430, column: 7, scope: !9452)
!9493 = !DILocation(line: 6430, column: 29, scope: !9452)
!9494 = !DILocation(line: 6431, column: 7, scope: !9452)
!9495 = !DILocation(line: 6431, column: 29, scope: !9452)
!9496 = !DILocation(line: 6432, column: 7, scope: !9452)
!9497 = !DILocation(line: 6432, column: 30, scope: !9452)
!9498 = !DILocation(line: 6433, column: 7, scope: !9452)
!9499 = !DILocation(line: 6433, column: 32, scope: !9452)
!9500 = !DILocation(line: 6434, column: 7, scope: !9452)
!9501 = !DILocation(line: 6434, column: 33, scope: !9452)
!9502 = !DILocation(line: 6435, column: 7, scope: !9452)
!9503 = !DILocation(line: 6435, column: 28, scope: !9452)
!9504 = !DILocation(line: 6437, column: 28, scope: !9452)
!9505 = !DILocation(line: 6437, column: 48, scope: !9452)
!9506 = !DILocation(line: 6437, column: 7, scope: !9452)
!9507 = !DILocation(line: 6437, column: 26, scope: !9452)
!9508 = !DILocation(line: 6407, column: 39, scope: !9449)
!9509 = !DILocation(line: 6407, column: 3, scope: !9449)
!9510 = distinct !{!9510, !9450, !9511}
!9511 = !DILocation(line: 6438, column: 5, scope: !9446)
!9512 = !DILocation(line: 6441, column: 3, scope: !3242)
!9513 = !DILocation(line: 6444, column: 31, scope: !3242)
!9514 = !DILocation(line: 6445, column: 29, scope: !3242)
!9515 = !DILocation(line: 6446, column: 26, scope: !3242)
!9516 = !DILocation(line: 6447, column: 32, scope: !3242)
!9517 = !DILocation(line: 6448, column: 30, scope: !3242)
!9518 = !DILocation(line: 6449, column: 27, scope: !3242)
!9519 = !DILocation(line: 6450, column: 33, scope: !3242)
!9520 = !DILocation(line: 6451, column: 31, scope: !3242)
!9521 = !DILocation(line: 6452, column: 28, scope: !3242)
!9522 = !DILocation(line: 6453, column: 33, scope: !3242)
!9523 = !DILocation(line: 6454, column: 31, scope: !3242)
!9524 = !DILocation(line: 6455, column: 28, scope: !3242)
!9525 = !DILocation(line: 6456, column: 31, scope: !3242)
!9526 = !DILocation(line: 6457, column: 29, scope: !3242)
!9527 = !DILocation(line: 6458, column: 26, scope: !3242)
!9528 = !DILocation(line: 6459, column: 32, scope: !3242)
!9529 = !DILocation(line: 6460, column: 30, scope: !3242)
!9530 = !DILocation(line: 6461, column: 27, scope: !3242)
!9531 = !DILocation(line: 6462, column: 33, scope: !3242)
!9532 = !DILocation(line: 6463, column: 31, scope: !3242)
!9533 = !DILocation(line: 6464, column: 28, scope: !3242)
!9534 = !DILocation(line: 6465, column: 33, scope: !3242)
!9535 = !DILocation(line: 6466, column: 31, scope: !3242)
!9536 = !DILocation(line: 6467, column: 28, scope: !3242)
!9537 = !DILocation(line: 6468, column: 32, scope: !3242)
!9538 = !DILocation(line: 6469, column: 30, scope: !3242)
!9539 = !DILocation(line: 6470, column: 27, scope: !3242)
!9540 = !DILocation(line: 6471, column: 33, scope: !3242)
!9541 = !DILocation(line: 6472, column: 31, scope: !3242)
!9542 = !DILocation(line: 6473, column: 28, scope: !3242)
!9543 = !DILocation(line: 6474, column: 33, scope: !3242)
!9544 = !DILocation(line: 6475, column: 31, scope: !3242)
!9545 = !DILocation(line: 6476, column: 28, scope: !3242)
!9546 = !DILocation(line: 6477, column: 33, scope: !3242)
!9547 = !DILocation(line: 6478, column: 31, scope: !3242)
!9548 = !DILocation(line: 6479, column: 28, scope: !3242)
!9549 = !DILocation(line: 6480, column: 32, scope: !3242)
!9550 = !DILocation(line: 6481, column: 30, scope: !3242)
!9551 = !DILocation(line: 6482, column: 27, scope: !3242)
!9552 = !DILocation(line: 6483, column: 33, scope: !3242)
!9553 = !DILocation(line: 6484, column: 31, scope: !3242)
!9554 = !DILocation(line: 6485, column: 28, scope: !3242)
!9555 = !DILocation(line: 6486, column: 33, scope: !3242)
!9556 = !DILocation(line: 6487, column: 31, scope: !3242)
!9557 = !DILocation(line: 6488, column: 28, scope: !3242)
!9558 = !DILocation(line: 6489, column: 32, scope: !3242)
!9559 = !DILocation(line: 6490, column: 30, scope: !3242)
!9560 = !DILocation(line: 6491, column: 27, scope: !3242)
!9561 = !DILocation(line: 6492, column: 33, scope: !3242)
!9562 = !DILocation(line: 6493, column: 31, scope: !3242)
!9563 = !DILocation(line: 6494, column: 28, scope: !3242)
!9564 = !DILocation(line: 6495, column: 35, scope: !3242)
!9565 = !DILocation(line: 6496, column: 33, scope: !3242)
!9566 = !DILocation(line: 6497, column: 30, scope: !3242)
!9567 = !DILocation(line: 6498, column: 35, scope: !3242)
!9568 = !DILocation(line: 6499, column: 33, scope: !3242)
!9569 = !DILocation(line: 6500, column: 30, scope: !3242)
!9570 = !DILocation(line: 6501, column: 32, scope: !3242)
!9571 = !DILocation(line: 6502, column: 30, scope: !3242)
!9572 = !DILocation(line: 6503, column: 27, scope: !3242)
!9573 = !DILocation(line: 6504, column: 32, scope: !3242)
!9574 = !DILocation(line: 6505, column: 30, scope: !3242)
!9575 = !DILocation(line: 6506, column: 27, scope: !3242)
!9576 = !DILocation(line: 6507, column: 34, scope: !3242)
!9577 = !DILocation(line: 6508, column: 32, scope: !3242)
!9578 = !DILocation(line: 6509, column: 29, scope: !3242)
!9579 = !DILocation(line: 6510, column: 31, scope: !3242)
!9580 = !DILocation(line: 6511, column: 29, scope: !3242)
!9581 = !DILocation(line: 6512, column: 26, scope: !3242)
!9582 = !DILocation(line: 6513, column: 31, scope: !3242)
!9583 = !DILocation(line: 6514, column: 29, scope: !3242)
!9584 = !DILocation(line: 6515, column: 26, scope: !3242)
!9585 = !DILocation(line: 6516, column: 31, scope: !3242)
!9586 = !DILocation(line: 6517, column: 29, scope: !3242)
!9587 = !DILocation(line: 6518, column: 26, scope: !3242)
!9588 = !DILocation(line: 6519, column: 32, scope: !3242)
!9589 = !DILocation(line: 6520, column: 30, scope: !3242)
!9590 = !DILocation(line: 6521, column: 27, scope: !3242)
!9591 = !DILocation(line: 6522, column: 34, scope: !3242)
!9592 = !DILocation(line: 6523, column: 32, scope: !3242)
!9593 = !DILocation(line: 6524, column: 29, scope: !3242)
!9594 = !DILocation(line: 6525, column: 34, scope: !3242)
!9595 = !DILocation(line: 6526, column: 32, scope: !3242)
!9596 = !DILocation(line: 6527, column: 29, scope: !3242)
!9597 = !DILocation(line: 6528, column: 32, scope: !3242)
!9598 = !DILocation(line: 6529, column: 30, scope: !3242)
!9599 = !DILocation(line: 6530, column: 27, scope: !3242)
!9600 = !DILocation(line: 6531, column: 32, scope: !3242)
!9601 = !DILocation(line: 6532, column: 30, scope: !3242)
!9602 = !DILocation(line: 6533, column: 27, scope: !3242)
!9603 = !DILocation(line: 6534, column: 32, scope: !3242)
!9604 = !DILocation(line: 6535, column: 30, scope: !3242)
!9605 = !DILocation(line: 6536, column: 27, scope: !3242)
!9606 = !DILocation(line: 6537, column: 32, scope: !3242)
!9607 = !DILocation(line: 6538, column: 30, scope: !3242)
!9608 = !DILocation(line: 6539, column: 27, scope: !3242)
!9609 = !DILocation(line: 6540, column: 32, scope: !3242)
!9610 = !DILocation(line: 6541, column: 30, scope: !3242)
!9611 = !DILocation(line: 6542, column: 27, scope: !3242)
!9612 = !DILocation(line: 6543, column: 32, scope: !3242)
!9613 = !DILocation(line: 6544, column: 30, scope: !3242)
!9614 = !DILocation(line: 6545, column: 27, scope: !3242)
!9615 = !DILocation(line: 6546, column: 31, scope: !3242)
!9616 = !DILocation(line: 6547, column: 29, scope: !3242)
!9617 = !DILocation(line: 6548, column: 26, scope: !3242)
!9618 = !DILocation(line: 6549, column: 33, scope: !3242)
!9619 = !DILocation(line: 6550, column: 31, scope: !3242)
!9620 = !DILocation(line: 6551, column: 28, scope: !3242)
!9621 = !DILocation(line: 6552, column: 33, scope: !3242)
!9622 = !DILocation(line: 6553, column: 31, scope: !3242)
!9623 = !DILocation(line: 6554, column: 28, scope: !3242)
!9624 = !DILocation(line: 6555, column: 32, scope: !3242)
!9625 = !DILocation(line: 6556, column: 30, scope: !3242)
!9626 = !DILocation(line: 6557, column: 27, scope: !3242)
!9627 = !DILocation(line: 6558, column: 36, scope: !3242)
!9628 = !DILocation(line: 6559, column: 34, scope: !3242)
!9629 = !DILocation(line: 6560, column: 31, scope: !3242)
!9630 = !DILocation(line: 6561, column: 31, scope: !3242)
!9631 = !DILocation(line: 6562, column: 29, scope: !3242)
!9632 = !DILocation(line: 6563, column: 26, scope: !3242)
!9633 = !DILocation(line: 6564, column: 31, scope: !3242)
!9634 = !DILocation(line: 6565, column: 29, scope: !3242)
!9635 = !DILocation(line: 6566, column: 26, scope: !3242)
!9636 = !DILocation(line: 6567, column: 31, scope: !3242)
!9637 = !DILocation(line: 6568, column: 29, scope: !3242)
!9638 = !DILocation(line: 6569, column: 26, scope: !3242)
!9639 = !DILocation(line: 6570, column: 36, scope: !3242)
!9640 = !DILocation(line: 6571, column: 34, scope: !3242)
!9641 = !DILocation(line: 6572, column: 31, scope: !3242)
!9642 = !DILocation(line: 6573, column: 34, scope: !3242)
!9643 = !DILocation(line: 6574, column: 32, scope: !3242)
!9644 = !DILocation(line: 6575, column: 29, scope: !3242)
!9645 = !DILocation(line: 6579, column: 31, scope: !3242)
!9646 = !DILocation(line: 6580, column: 29, scope: !3242)
!9647 = !DILocation(line: 6581, column: 26, scope: !3242)
!9648 = !DILocation(line: 6582, column: 32, scope: !3242)
!9649 = !DILocation(line: 6583, column: 30, scope: !3242)
!9650 = !DILocation(line: 6584, column: 27, scope: !3242)
!9651 = !DILocation(line: 6587, column: 30, scope: !3242)
!9652 = !DILocation(line: 6588, column: 28, scope: !3242)
!9653 = !DILocation(line: 6589, column: 25, scope: !3242)
!9654 = !DILocation(line: 6590, column: 30, scope: !3242)
!9655 = !DILocation(line: 6591, column: 28, scope: !3242)
!9656 = !DILocation(line: 6592, column: 25, scope: !3242)
!9657 = !DILocation(line: 6593, column: 30, scope: !3242)
!9658 = !DILocation(line: 6594, column: 28, scope: !3242)
!9659 = !DILocation(line: 6595, column: 25, scope: !3242)
!9660 = !DILocation(line: 6596, column: 30, scope: !3242)
!9661 = !DILocation(line: 6597, column: 28, scope: !3242)
!9662 = !DILocation(line: 6598, column: 25, scope: !3242)
!9663 = !DILocation(line: 6599, column: 30, scope: !3242)
!9664 = !DILocation(line: 6600, column: 28, scope: !3242)
!9665 = !DILocation(line: 6601, column: 25, scope: !3242)
!9666 = !DILocation(line: 6602, column: 30, scope: !3242)
!9667 = !DILocation(line: 6603, column: 28, scope: !3242)
!9668 = !DILocation(line: 6604, column: 25, scope: !3242)
!9669 = !DILocation(line: 6605, column: 33, scope: !3242)
!9670 = !DILocation(line: 6606, column: 31, scope: !3242)
!9671 = !DILocation(line: 6607, column: 28, scope: !3242)
!9672 = !DILocation(line: 6609, column: 32, scope: !3242)
!9673 = !DILocation(line: 6610, column: 30, scope: !3242)
!9674 = !DILocation(line: 6611, column: 27, scope: !3242)
!9675 = !DILocation(line: 6614, column: 34, scope: !3242)
!9676 = !DILocation(line: 6615, column: 29, scope: !3242)
!9677 = !DILocation(line: 6616, column: 29, scope: !3242)
!9678 = !DILocation(line: 6617, column: 32, scope: !3242)
!9679 = !DILocation(line: 6618, column: 27, scope: !3242)
!9680 = !DILocation(line: 6619, column: 32, scope: !3242)
!9681 = !DILocation(line: 6620, column: 27, scope: !3242)
!9682 = !DILocation(line: 6621, column: 33, scope: !3242)
!9683 = !DILocation(line: 6622, column: 28, scope: !3242)
!9684 = !DILocation(line: 6623, column: 34, scope: !3242)
!9685 = !DILocation(line: 6624, column: 29, scope: !3242)
!9686 = !DILocation(line: 6625, column: 34, scope: !3242)
!9687 = !DILocation(line: 6626, column: 29, scope: !3242)
!9688 = !DILocation(line: 6627, column: 33, scope: !3242)
!9689 = !DILocation(line: 6628, column: 28, scope: !3242)
!9690 = !DILocation(line: 6631, column: 32, scope: !3242)
!9691 = !DILocation(line: 6632, column: 27, scope: !3242)
!9692 = !DILocation(line: 6633, column: 33, scope: !3242)
!9693 = !DILocation(line: 6634, column: 28, scope: !3242)
!9694 = !DILocation(line: 6637, column: 33, scope: !3242)
!9695 = !DILocation(line: 6638, column: 28, scope: !3242)
!9696 = !DILocation(line: 6639, column: 36, scope: !3242)
!9697 = !DILocation(line: 6640, column: 31, scope: !3242)
!9698 = !DILocation(line: 6641, column: 36, scope: !3242)
!9699 = !DILocation(line: 6642, column: 31, scope: !3242)
!9700 = !DILocation(line: 6643, column: 39, scope: !3242)
!9701 = !DILocation(line: 6644, column: 34, scope: !3242)
!9702 = !DILocation(line: 6654, column: 3, scope: !3242)
!9703 = !DILocation(line: 6655, column: 3, scope: !3242)
!9704 = !DILocation(line: 6659, column: 7, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 6659, column: 7)
!9706 = !DILocation(line: 6659, column: 7, scope: !3242)
!9707 = !DILocation(line: 6660, column: 35, scope: !9705)
!9708 = !DILocation(line: 6660, column: 5, scope: !9705)
!9709 = !DILocation(line: 6662, column: 19, scope: !3242)
!9710 = !DILocation(line: 6662, column: 17, scope: !3242)
!9711 = !DILocation(line: 6663, column: 20, scope: !3242)
!9712 = !DILocation(line: 6663, column: 18, scope: !3242)
!9713 = !DILocation(line: 6664, column: 21, scope: !3242)
!9714 = !DILocation(line: 6664, column: 19, scope: !3242)
!9715 = !DILocation(line: 6665, column: 20, scope: !3242)
!9716 = !DILocation(line: 6665, column: 18, scope: !3242)
!9717 = !DILocation(line: 6666, column: 20, scope: !3242)
!9718 = !DILocation(line: 6666, column: 18, scope: !3242)
!9719 = !DILocation(line: 6667, column: 21, scope: !3242)
!9720 = !DILocation(line: 6667, column: 19, scope: !3242)
!9721 = !DILocation(line: 6670, column: 20, scope: !3242)
!9722 = !DILocation(line: 6670, column: 18, scope: !3242)
!9723 = !DILocation(line: 6671, column: 21, scope: !3242)
!9724 = !DILocation(line: 6671, column: 19, scope: !3242)
!9725 = !DILocation(line: 6676, column: 34, scope: !3242)
!9726 = !DILocation(line: 6676, column: 32, scope: !3242)
!9727 = !DILocation(line: 6678, column: 7, scope: !3242)
!9728 = !DILocation(line: 6678, column: 5, scope: !3242)
!9729 = !DILocation(line: 6682, column: 7, scope: !3242)
!9730 = !DILocation(line: 6682, column: 5, scope: !3242)
!9731 = !DILocation(line: 6684, column: 7, scope: !3242)
!9732 = !DILocation(line: 6684, column: 5, scope: !3242)
!9733 = !DILocation(line: 6686, column: 24, scope: !3242)
!9734 = !DILocation(line: 6686, column: 22, scope: !3242)
!9735 = !DILocation(line: 6689, column: 11, scope: !3242)
!9736 = !DILocation(line: 6689, column: 3, scope: !3242)
!9737 = !DILocation(line: 6692, column: 1, scope: !3242)
!9738 = distinct !DISubprogram(name: "hash_libfunc", scope: !3, file: !3, line: 126, type: !2543, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9739)
!9739 = !{!9740, !9741}
!9740 = !DILocalVariable(name: "p", arg: 1, scope: !9738, file: !3, line: 126, type: !2546)
!9741 = !DILocalVariable(name: "e", scope: !9738, file: !3, line: 128, type: !9742)
!9742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3236)
!9743 = !DILocation(line: 0, scope: !9738)
!9744 = !DILocation(line: 130, column: 21, scope: !9738)
!9745 = !DILocation(line: 130, column: 38, scope: !9738)
!9746 = !DILocation(line: 130, column: 44, scope: !9738)
!9747 = !DILocation(line: 130, column: 27, scope: !9738)
!9748 = !DILocation(line: 131, column: 9, scope: !9738)
!9749 = !DILocation(line: 130, column: 10, scope: !9738)
!9750 = !DILocation(line: 130, column: 3, scope: !9738)
!9751 = distinct !DISubprogram(name: "eq_libfunc", scope: !3, file: !3, line: 137, type: !2551, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9752)
!9752 = !{!9753, !9754, !9755, !9756}
!9753 = !DILocalVariable(name: "p", arg: 1, scope: !9751, file: !3, line: 137, type: !2546)
!9754 = !DILocalVariable(name: "q", arg: 2, scope: !9751, file: !3, line: 137, type: !2546)
!9755 = !DILocalVariable(name: "e1", scope: !9751, file: !3, line: 139, type: !9742)
!9756 = !DILocalVariable(name: "e2", scope: !9751, file: !3, line: 140, type: !9742)
!9757 = !DILocation(line: 0, scope: !9751)
!9758 = !DILocation(line: 142, column: 15, scope: !9751)
!9759 = !DILocation(line: 142, column: 28, scope: !9751)
!9760 = !DILocation(line: 142, column: 21, scope: !9751)
!9761 = !DILocation(line: 143, column: 4, scope: !9751)
!9762 = !DILocation(line: 143, column: 11, scope: !9751)
!9763 = !DILocation(line: 143, column: 24, scope: !9751)
!9764 = !DILocation(line: 143, column: 17, scope: !9751)
!9765 = !DILocation(line: 144, column: 4, scope: !9751)
!9766 = !DILocation(line: 144, column: 11, scope: !9751)
!9767 = !DILocation(line: 144, column: 24, scope: !9751)
!9768 = !DILocation(line: 144, column: 17, scope: !9751)
!9769 = !DILocation(line: 142, column: 3, scope: !9751)
!9770 = distinct !DISubprogram(name: "init_insn_codes", scope: !3, file: !3, line: 5463, type: !3243, scopeLine: 5464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9771)
!9771 = !{!9772, !9773, !9777, !9778, !9782, !9783}
!9772 = !DILocalVariable(name: "i", scope: !9770, file: !3, line: 5465, type: !7)
!9773 = !DILocalVariable(name: "j", scope: !9774, file: !3, line: 5469, type: !7)
!9774 = distinct !DILexicalBlock(scope: !9775, file: !3, line: 5468, column: 5)
!9775 = distinct !DILexicalBlock(scope: !9776, file: !3, line: 5467, column: 3)
!9776 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 5467, column: 3)
!9777 = !DILocalVariable(name: "op", scope: !9774, file: !3, line: 5470, type: !3291)
!9778 = !DILocalVariable(name: "j", scope: !9779, file: !3, line: 5478, type: !7)
!9779 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 5477, column: 5)
!9780 = distinct !DILexicalBlock(scope: !9781, file: !3, line: 5476, column: 3)
!9781 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 5476, column: 3)
!9782 = !DILocalVariable(name: "k", scope: !9779, file: !3, line: 5478, type: !7)
!9783 = !DILocalVariable(name: "op", scope: !9779, file: !3, line: 5479, type: !3772)
!9784 = !DILocation(line: 0, scope: !9770)
!9785 = !DILocation(line: 5467, column: 8, scope: !9776)
!9786 = !DILocation(line: 0, scope: !9776)
!9787 = !DILocation(line: 5467, column: 17, scope: !9775)
!9788 = !DILocation(line: 5467, column: 3, scope: !9776)
!9789 = !DILocation(line: 5476, column: 3, scope: !9781)
!9790 = !DILocation(line: 0, scope: !9774)
!9791 = !DILocation(line: 5473, column: 12, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 5473, column: 7)
!9793 = !DILocation(line: 0, scope: !9792)
!9794 = !DILocation(line: 5473, column: 21, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 5473, column: 7)
!9796 = !DILocation(line: 5473, column: 7, scope: !9792)
!9797 = !DILocation(line: 5474, column: 25, scope: !9795)
!9798 = !DILocation(line: 5474, column: 35, scope: !9795)
!9799 = !DILocation(line: 5473, column: 43, scope: !9795)
!9800 = !DILocation(line: 5473, column: 7, scope: !9795)
!9801 = distinct !{!9801, !9796, !9802}
!9802 = !DILocation(line: 5474, column: 37, scope: !9792)
!9803 = !DILocation(line: 5467, column: 44, scope: !9775)
!9804 = !DILocation(line: 5467, column: 3, scope: !9775)
!9805 = distinct !{!9805, !9788, !9806}
!9806 = !DILocation(line: 5475, column: 5, scope: !9776)
!9807 = !DILocation(line: 0, scope: !9781)
!9808 = !DILocation(line: 5476, column: 17, scope: !9780)
!9809 = !DILocation(line: 0, scope: !9779)
!9810 = !DILocation(line: 5482, column: 12, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 5482, column: 7)
!9812 = !DILocation(line: 0, scope: !9811)
!9813 = !DILocation(line: 5482, column: 21, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 5482, column: 7)
!9815 = !DILocation(line: 5482, column: 7, scope: !9811)
!9816 = !DILocation(line: 5483, column: 2, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9814, file: !3, line: 5483, column: 2)
!9818 = !DILocation(line: 0, scope: !9817)
!9819 = !DILocation(line: 5483, column: 16, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 5483, column: 2)
!9821 = !DILocation(line: 5484, column: 38, scope: !9820)
!9822 = !DILocation(line: 5484, column: 48, scope: !9820)
!9823 = !DILocation(line: 5483, column: 38, scope: !9820)
!9824 = !DILocation(line: 5483, column: 2, scope: !9820)
!9825 = distinct !{!9825, !9816, !9826}
!9826 = !DILocation(line: 5484, column: 50, scope: !9817)
!9827 = !DILocation(line: 5482, column: 43, scope: !9814)
!9828 = !DILocation(line: 5482, column: 7, scope: !9814)
!9829 = distinct !{!9829, !9815, !9830}
!9830 = !DILocation(line: 5484, column: 50, scope: !9811)
!9831 = !DILocation(line: 5476, column: 44, scope: !9780)
!9832 = !DILocation(line: 5476, column: 3, scope: !9780)
!9833 = distinct !{!9833, !9789, !9834}
!9834 = !DILocation(line: 5485, column: 5, scope: !9781)
!9835 = !DILocation(line: 5486, column: 1, scope: !9770)
!9836 = distinct !DISubprogram(name: "init_optab", scope: !3, file: !3, line: 5490, type: !9837, scopeLine: 5491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9839)
!9837 = !DISubroutineType(types: !9838)
!9838 = !{null, !3291, !384}
!9839 = !{!9840, !9841}
!9840 = !DILocalVariable(name: "op", arg: 1, scope: !9836, file: !3, line: 5490, type: !3291)
!9841 = !DILocalVariable(name: "code", arg: 2, scope: !9836, file: !3, line: 5490, type: !384)
!9842 = !DILocation(line: 0, scope: !9836)
!9843 = !DILocation(line: 5492, column: 7, scope: !9836)
!9844 = !DILocation(line: 5492, column: 12, scope: !9836)
!9845 = !DILocation(line: 5493, column: 3, scope: !9836)
!9846 = !DILocation(line: 5493, column: 29, scope: !9836)
!9847 = !DILocation(line: 5494, column: 1, scope: !9836)
!9848 = distinct !DISubprogram(name: "init_optabv", scope: !3, file: !3, line: 5499, type: !9837, scopeLine: 5500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9849)
!9849 = !{!9850, !9851}
!9850 = !DILocalVariable(name: "op", arg: 1, scope: !9848, file: !3, line: 5499, type: !3291)
!9851 = !DILocalVariable(name: "code", arg: 2, scope: !9848, file: !3, line: 5499, type: !384)
!9852 = !DILocation(line: 0, scope: !9848)
!9853 = !DILocation(line: 5501, column: 7, scope: !9848)
!9854 = !DILocation(line: 5501, column: 12, scope: !9848)
!9855 = !DILocation(line: 5502, column: 1, scope: !9848)
!9856 = distinct !DISubprogram(name: "init_convert_optab", scope: !3, file: !3, line: 5506, type: !9857, scopeLine: 5507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9859)
!9857 = !DISubroutineType(types: !9858)
!9858 = !{null, !3772, !384}
!9859 = !{!9860, !9861}
!9860 = !DILocalVariable(name: "op", arg: 1, scope: !9856, file: !3, line: 5506, type: !3772)
!9861 = !DILocalVariable(name: "code", arg: 2, scope: !9856, file: !3, line: 5506, type: !384)
!9862 = !DILocation(line: 0, scope: !9856)
!9863 = !DILocation(line: 5508, column: 7, scope: !9856)
!9864 = !DILocation(line: 5508, column: 12, scope: !9856)
!9865 = !DILocation(line: 5509, column: 1, scope: !9856)
!9866 = distinct !DISubprogram(name: "gen_int_fp_fixed_libfunc", scope: !3, file: !3, line: 5659, type: !9867, scopeLine: 5661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9869)
!9867 = !DISubroutineType(types: !9868)
!9868 = !{null, !3291, !2077, !2075, !5}
!9869 = !{!9870, !9871, !9872, !9873}
!9870 = !DILocalVariable(name: "optable", arg: 1, scope: !9866, file: !3, line: 5659, type: !3291)
!9871 = !DILocalVariable(name: "name", arg: 2, scope: !9866, file: !3, line: 5659, type: !2077)
!9872 = !DILocalVariable(name: "suffix", arg: 3, scope: !9866, file: !3, line: 5659, type: !2075)
!9873 = !DILocalVariable(name: "mode", arg: 4, scope: !9866, file: !3, line: 5660, type: !5)
!9874 = !DILocation(line: 0, scope: !9866)
!9875 = !DILocation(line: 5662, column: 7, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9866, file: !3, line: 5662, column: 7)
!9877 = !DILocation(line: 5662, column: 35, scope: !9876)
!9878 = !DILocation(line: 5662, column: 60, scope: !9876)
!9879 = !DILocation(line: 5662, column: 7, scope: !9866)
!9880 = !DILocation(line: 5663, column: 5, scope: !9876)
!9881 = !DILocation(line: 5664, column: 7, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9866, file: !3, line: 5664, column: 7)
!9883 = !DILocation(line: 5664, column: 7, scope: !9866)
!9884 = !DILocation(line: 5665, column: 5, scope: !9882)
!9885 = !DILocation(line: 5666, column: 7, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9866, file: !3, line: 5666, column: 7)
!9887 = !DILocation(line: 5666, column: 7, scope: !9866)
!9888 = !DILocation(line: 5667, column: 5, scope: !9886)
!9889 = !DILocation(line: 5668, column: 1, scope: !9866)
!9890 = distinct !DISubprogram(name: "gen_intv_fp_libfunc", scope: !3, file: !3, line: 5639, type: !9867, scopeLine: 5641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9891)
!9891 = !{!9892, !9893, !9894, !9895, !9896, !9899}
!9892 = !DILocalVariable(name: "optable", arg: 1, scope: !9890, file: !3, line: 5639, type: !3291)
!9893 = !DILocalVariable(name: "name", arg: 2, scope: !9890, file: !3, line: 5639, type: !2077)
!9894 = !DILocalVariable(name: "suffix", arg: 3, scope: !9890, file: !3, line: 5639, type: !2075)
!9895 = !DILocalVariable(name: "mode", arg: 4, scope: !9890, file: !3, line: 5640, type: !5)
!9896 = !DILocalVariable(name: "len", scope: !9897, file: !3, line: 5646, type: !2072)
!9897 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 5645, column: 5)
!9898 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 5644, column: 7)
!9899 = !DILocalVariable(name: "v_name", scope: !9897, file: !3, line: 5647, type: !2074)
!9900 = !DILocation(line: 0, scope: !9890)
!9901 = !DILocation(line: 5642, column: 7, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 5642, column: 7)
!9903 = !DILocation(line: 5642, column: 35, scope: !9902)
!9904 = !DILocation(line: 5642, column: 60, scope: !9902)
!9905 = !DILocation(line: 5642, column: 7, scope: !9890)
!9906 = !DILocation(line: 5643, column: 5, scope: !9902)
!9907 = !DILocation(line: 5644, column: 29, scope: !9898)
!9908 = !DILocation(line: 5644, column: 7, scope: !9890)
!9909 = !DILocation(line: 5646, column: 17, scope: !9897)
!9910 = !DILocation(line: 5647, column: 22, scope: !9897)
!9911 = !DILocation(line: 0, scope: !9897)
!9912 = !DILocation(line: 5648, column: 7, scope: !9897)
!9913 = !DILocation(line: 5649, column: 7, scope: !9897)
!9914 = !DILocation(line: 5649, column: 19, scope: !9897)
!9915 = !DILocation(line: 5650, column: 7, scope: !9897)
!9916 = !DILocation(line: 5650, column: 23, scope: !9897)
!9917 = !DILocation(line: 5651, column: 7, scope: !9897)
!9918 = !DILocation(line: 5652, column: 5, scope: !9897)
!9919 = !DILocation(line: 5653, column: 1, scope: !9890)
!9920 = distinct !DISubprogram(name: "gen_signed_fixed_libfunc", scope: !3, file: !3, line: 5603, type: !9867, scopeLine: 5605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9921)
!9921 = !{!9922, !9923, !9924, !9925}
!9922 = !DILocalVariable(name: "optable", arg: 1, scope: !9920, file: !3, line: 5603, type: !3291)
!9923 = !DILocalVariable(name: "opname", arg: 2, scope: !9920, file: !3, line: 5603, type: !2077)
!9924 = !DILocalVariable(name: "suffix", arg: 3, scope: !9920, file: !3, line: 5603, type: !2075)
!9925 = !DILocalVariable(name: "mode", arg: 4, scope: !9920, file: !3, line: 5604, type: !5)
!9926 = !DILocation(line: 0, scope: !9920)
!9927 = !DILocation(line: 5606, column: 8, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 5606, column: 7)
!9929 = !DILocation(line: 5606, column: 7, scope: !9920)
!9930 = !DILocation(line: 5608, column: 33, scope: !9920)
!9931 = !DILocation(line: 5608, column: 3, scope: !9920)
!9932 = !DILocation(line: 5609, column: 1, scope: !9920)
!9933 = distinct !DISubprogram(name: "gen_unsigned_fixed_libfunc", scope: !3, file: !3, line: 5615, type: !9867, scopeLine: 5617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9934)
!9934 = !{!9935, !9936, !9937, !9938}
!9935 = !DILocalVariable(name: "optable", arg: 1, scope: !9933, file: !3, line: 5615, type: !3291)
!9936 = !DILocalVariable(name: "opname", arg: 2, scope: !9933, file: !3, line: 5615, type: !2077)
!9937 = !DILocalVariable(name: "suffix", arg: 3, scope: !9933, file: !3, line: 5615, type: !2075)
!9938 = !DILocalVariable(name: "mode", arg: 4, scope: !9933, file: !3, line: 5616, type: !5)
!9939 = !DILocation(line: 0, scope: !9933)
!9940 = !DILocation(line: 5618, column: 8, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 5618, column: 7)
!9942 = !DILocation(line: 5618, column: 7, scope: !9933)
!9943 = !DILocation(line: 5620, column: 33, scope: !9933)
!9944 = !DILocation(line: 5620, column: 3, scope: !9933)
!9945 = !DILocation(line: 5621, column: 1, scope: !9933)
!9946 = distinct !DISubprogram(name: "gen_int_fp_signed_fixed_libfunc", scope: !3, file: !3, line: 5674, type: !9867, scopeLine: 5676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9947)
!9947 = !{!9948, !9949, !9950, !9951}
!9948 = !DILocalVariable(name: "optable", arg: 1, scope: !9946, file: !3, line: 5674, type: !3291)
!9949 = !DILocalVariable(name: "name", arg: 2, scope: !9946, file: !3, line: 5674, type: !2077)
!9950 = !DILocalVariable(name: "suffix", arg: 3, scope: !9946, file: !3, line: 5674, type: !2075)
!9951 = !DILocalVariable(name: "mode", arg: 4, scope: !9946, file: !3, line: 5675, type: !5)
!9952 = !DILocation(line: 0, scope: !9946)
!9953 = !DILocation(line: 5677, column: 7, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 5677, column: 7)
!9955 = !DILocation(line: 5677, column: 35, scope: !9954)
!9956 = !DILocation(line: 5677, column: 60, scope: !9954)
!9957 = !DILocation(line: 5677, column: 7, scope: !9946)
!9958 = !DILocation(line: 5678, column: 5, scope: !9954)
!9959 = !DILocation(line: 5679, column: 7, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 5679, column: 7)
!9961 = !DILocation(line: 5679, column: 7, scope: !9946)
!9962 = !DILocation(line: 5680, column: 5, scope: !9960)
!9963 = !DILocation(line: 5681, column: 7, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 5681, column: 7)
!9965 = !DILocation(line: 5681, column: 7, scope: !9946)
!9966 = !DILocation(line: 5682, column: 5, scope: !9964)
!9967 = !DILocation(line: 5683, column: 1, scope: !9946)
!9968 = distinct !DISubprogram(name: "gen_int_libfunc", scope: !3, file: !3, line: 5552, type: !9867, scopeLine: 5554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9969)
!9969 = !{!9970, !9971, !9972, !9973, !9974}
!9970 = !DILocalVariable(name: "optable", arg: 1, scope: !9968, file: !3, line: 5552, type: !3291)
!9971 = !DILocalVariable(name: "opname", arg: 2, scope: !9968, file: !3, line: 5552, type: !2077)
!9972 = !DILocalVariable(name: "suffix", arg: 3, scope: !9968, file: !3, line: 5552, type: !2075)
!9973 = !DILocalVariable(name: "mode", arg: 4, scope: !9968, file: !3, line: 5553, type: !5)
!9974 = !DILocalVariable(name: "maxsize", scope: !9968, file: !3, line: 5555, type: !2072)
!9975 = !DILocation(line: 0, scope: !9968)
!9976 = !DILocation(line: 5557, column: 7, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 5557, column: 7)
!9978 = !DILocation(line: 5557, column: 29, scope: !9977)
!9979 = !DILocation(line: 5557, column: 7, scope: !9968)
!9980 = !DILocation(line: 5562, column: 17, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 5561, column: 7)
!9982 = !DILocation(line: 5562, column: 15, scope: !9981)
!9983 = !DILocation(line: 5562, column: 7, scope: !9981)
!9984 = !DILocation(line: 5562, column: 30, scope: !9981)
!9985 = !DILocation(line: 5562, column: 54, scope: !9981)
!9986 = !DILocation(line: 5561, column: 7, scope: !9968)
!9987 = !DILocation(line: 5564, column: 33, scope: !9968)
!9988 = !DILocation(line: 5564, column: 3, scope: !9968)
!9989 = !DILocation(line: 5565, column: 1, scope: !9968)
!9990 = distinct !DISubprogram(name: "gen_int_unsigned_fixed_libfunc", scope: !3, file: !3, line: 5715, type: !9867, scopeLine: 5717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9991)
!9991 = !{!9992, !9993, !9994, !9995}
!9992 = !DILocalVariable(name: "optable", arg: 1, scope: !9990, file: !3, line: 5715, type: !3291)
!9993 = !DILocalVariable(name: "name", arg: 2, scope: !9990, file: !3, line: 5715, type: !2077)
!9994 = !DILocalVariable(name: "suffix", arg: 3, scope: !9990, file: !3, line: 5715, type: !2075)
!9995 = !DILocalVariable(name: "mode", arg: 4, scope: !9990, file: !3, line: 5716, type: !5)
!9996 = !DILocation(line: 0, scope: !9990)
!9997 = !DILocation(line: 5718, column: 7, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9990, file: !3, line: 5718, column: 7)
!9999 = !DILocation(line: 5718, column: 7, scope: !9990)
!10000 = !DILocation(line: 5719, column: 5, scope: !9998)
!10001 = !DILocation(line: 5720, column: 7, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9990, file: !3, line: 5720, column: 7)
!10003 = !DILocation(line: 5720, column: 7, scope: !9990)
!10004 = !DILocation(line: 5721, column: 5, scope: !10002)
!10005 = !DILocation(line: 5722, column: 1, scope: !9990)
!10006 = distinct !DISubprogram(name: "gen_fp_libfunc", scope: !3, file: !3, line: 5570, type: !9867, scopeLine: 5572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10007)
!10007 = !{!10008, !10009, !10010, !10011, !10012}
!10008 = !DILocalVariable(name: "optable", arg: 1, scope: !10006, file: !3, line: 5570, type: !3291)
!10009 = !DILocalVariable(name: "opname", arg: 2, scope: !10006, file: !3, line: 5570, type: !2077)
!10010 = !DILocalVariable(name: "suffix", arg: 3, scope: !10006, file: !3, line: 5570, type: !2075)
!10011 = !DILocalVariable(name: "mode", arg: 4, scope: !10006, file: !3, line: 5571, type: !5)
!10012 = !DILocalVariable(name: "dec_opname", scope: !10006, file: !3, line: 5573, type: !2074)
!10013 = !DILocation(line: 0, scope: !10006)
!10014 = !DILocation(line: 5575, column: 7, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 5575, column: 7)
!10016 = !DILocation(line: 5575, column: 29, scope: !10015)
!10017 = !DILocation(line: 5575, column: 7, scope: !10006)
!10018 = !DILocation(line: 5576, column: 35, scope: !10015)
!10019 = !DILocation(line: 5576, column: 5, scope: !10015)
!10020 = !DILocation(line: 5577, column: 7, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 5577, column: 7)
!10022 = !DILocation(line: 5577, column: 7, scope: !10006)
!10023 = !DILocation(line: 5579, column: 20, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10021, file: !3, line: 5578, column: 5)
!10025 = !DILocation(line: 5582, column: 7, scope: !10024)
!10026 = !DILocation(line: 5583, column: 52, scope: !10024)
!10027 = !DILocation(line: 5583, column: 7, scope: !10024)
!10028 = !DILocation(line: 5584, column: 41, scope: !10024)
!10029 = !DILocation(line: 5584, column: 7, scope: !10024)
!10030 = !DILocation(line: 5585, column: 5, scope: !10024)
!10031 = !DILocation(line: 5586, column: 1, scope: !10006)
!10032 = distinct !DISubprogram(name: "gen_int_fixed_libfunc", scope: !3, file: !3, line: 5689, type: !9867, scopeLine: 5691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10033)
!10033 = !{!10034, !10035, !10036, !10037}
!10034 = !DILocalVariable(name: "optable", arg: 1, scope: !10032, file: !3, line: 5689, type: !3291)
!10035 = !DILocalVariable(name: "name", arg: 2, scope: !10032, file: !3, line: 5689, type: !2077)
!10036 = !DILocalVariable(name: "suffix", arg: 3, scope: !10032, file: !3, line: 5689, type: !2075)
!10037 = !DILocalVariable(name: "mode", arg: 4, scope: !10032, file: !3, line: 5690, type: !5)
!10038 = !DILocation(line: 0, scope: !10032)
!10039 = !DILocation(line: 5692, column: 7, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10032, file: !3, line: 5692, column: 7)
!10041 = !DILocation(line: 5692, column: 7, scope: !10032)
!10042 = !DILocation(line: 5693, column: 5, scope: !10040)
!10043 = !DILocation(line: 5694, column: 7, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10032, file: !3, line: 5694, column: 7)
!10045 = !DILocation(line: 5694, column: 7, scope: !10032)
!10046 = !DILocation(line: 5695, column: 5, scope: !10044)
!10047 = !DILocation(line: 5696, column: 1, scope: !10032)
!10048 = distinct !DISubprogram(name: "gen_int_signed_fixed_libfunc", scope: !3, file: !3, line: 5702, type: !9867, scopeLine: 5704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10049)
!10049 = !{!10050, !10051, !10052, !10053}
!10050 = !DILocalVariable(name: "optable", arg: 1, scope: !10048, file: !3, line: 5702, type: !3291)
!10051 = !DILocalVariable(name: "name", arg: 2, scope: !10048, file: !3, line: 5702, type: !2077)
!10052 = !DILocalVariable(name: "suffix", arg: 3, scope: !10048, file: !3, line: 5702, type: !2075)
!10053 = !DILocalVariable(name: "mode", arg: 4, scope: !10048, file: !3, line: 5703, type: !5)
!10054 = !DILocation(line: 0, scope: !10048)
!10055 = !DILocation(line: 5705, column: 7, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 5705, column: 7)
!10057 = !DILocation(line: 5705, column: 7, scope: !10048)
!10058 = !DILocation(line: 5706, column: 5, scope: !10056)
!10059 = !DILocation(line: 5707, column: 7, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 5707, column: 7)
!10061 = !DILocation(line: 5707, column: 7, scope: !10048)
!10062 = !DILocation(line: 5708, column: 5, scope: !10060)
!10063 = !DILocation(line: 5709, column: 1, scope: !10048)
!10064 = distinct !DISubprogram(name: "gen_int_fp_libfunc", scope: !3, file: !3, line: 5626, type: !9867, scopeLine: 5628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10065)
!10065 = !{!10066, !10067, !10068, !10069}
!10066 = !DILocalVariable(name: "optable", arg: 1, scope: !10064, file: !3, line: 5626, type: !3291)
!10067 = !DILocalVariable(name: "name", arg: 2, scope: !10064, file: !3, line: 5626, type: !2077)
!10068 = !DILocalVariable(name: "suffix", arg: 3, scope: !10064, file: !3, line: 5626, type: !2075)
!10069 = !DILocalVariable(name: "mode", arg: 4, scope: !10064, file: !3, line: 5627, type: !5)
!10070 = !DILocation(line: 0, scope: !10064)
!10071 = !DILocation(line: 5629, column: 7, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 5629, column: 7)
!10073 = !DILocation(line: 5629, column: 35, scope: !10072)
!10074 = !DILocation(line: 5629, column: 60, scope: !10072)
!10075 = !DILocation(line: 5629, column: 7, scope: !10064)
!10076 = !DILocation(line: 5630, column: 5, scope: !10072)
!10077 = !DILocation(line: 5631, column: 7, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 5631, column: 7)
!10079 = !DILocation(line: 5631, column: 7, scope: !10064)
!10080 = !DILocation(line: 5632, column: 5, scope: !10078)
!10081 = !DILocation(line: 5633, column: 1, scope: !10064)
!10082 = distinct !DISubprogram(name: "gen_int_to_fp_conv_libfunc", scope: !3, file: !3, line: 5794, type: !10083, scopeLine: 5798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10085)
!10083 = !DISubroutineType(types: !10084)
!10084 = !{null, !3772, !2077, !5, !5}
!10085 = !{!10086, !10087, !10088, !10089}
!10086 = !DILocalVariable(name: "tab", arg: 1, scope: !10082, file: !3, line: 5794, type: !3772)
!10087 = !DILocalVariable(name: "opname", arg: 2, scope: !10082, file: !3, line: 5795, type: !2077)
!10088 = !DILocalVariable(name: "tmode", arg: 3, scope: !10082, file: !3, line: 5796, type: !5)
!10089 = !DILocalVariable(name: "fmode", arg: 4, scope: !10082, file: !3, line: 5797, type: !5)
!10090 = !DILocation(line: 0, scope: !10082)
!10091 = !DILocation(line: 5799, column: 7, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10082, file: !3, line: 5799, column: 7)
!10093 = !DILocation(line: 5799, column: 30, scope: !10092)
!10094 = !DILocation(line: 5799, column: 7, scope: !10082)
!10095 = !DILocation(line: 5801, column: 7, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10082, file: !3, line: 5801, column: 7)
!10097 = !DILocation(line: 5801, column: 30, scope: !10096)
!10098 = !DILocation(line: 5801, column: 44, scope: !10096)
!10099 = !DILocation(line: 5801, column: 48, scope: !10096)
!10100 = !DILocation(line: 5801, column: 7, scope: !10082)
!10101 = !DILocation(line: 5803, column: 3, scope: !10082)
!10102 = !DILocation(line: 5804, column: 1, scope: !10082)
!10103 = distinct !DISubprogram(name: "gen_ufloat_conv_libfunc", scope: !3, file: !3, line: 5810, type: !10083, scopeLine: 5814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10104)
!10104 = !{!10105, !10106, !10107, !10108}
!10105 = !DILocalVariable(name: "tab", arg: 1, scope: !10103, file: !3, line: 5810, type: !3772)
!10106 = !DILocalVariable(name: "opname", arg: 2, scope: !10103, file: !3, line: 5811, type: !2077)
!10107 = !DILocalVariable(name: "tmode", arg: 3, scope: !10103, file: !3, line: 5812, type: !5)
!10108 = !DILocalVariable(name: "fmode", arg: 4, scope: !10103, file: !3, line: 5813, type: !5)
!10109 = !DILocation(line: 0, scope: !10103)
!10110 = !DILocation(line: 5815, column: 7, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10103, file: !3, line: 5815, column: 7)
!10112 = !DILocation(line: 5815, column: 7, scope: !10103)
!10113 = !DILocation(line: 5816, column: 5, scope: !10111)
!10114 = !DILocation(line: 5818, column: 5, scope: !10111)
!10115 = !DILocation(line: 5819, column: 1, scope: !10103)
!10116 = distinct !DISubprogram(name: "gen_fp_to_int_conv_libfunc", scope: !3, file: !3, line: 5841, type: !10083, scopeLine: 5845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10117)
!10117 = !{!10118, !10119, !10120, !10121}
!10118 = !DILocalVariable(name: "tab", arg: 1, scope: !10116, file: !3, line: 5841, type: !3772)
!10119 = !DILocalVariable(name: "opname", arg: 2, scope: !10116, file: !3, line: 5842, type: !2077)
!10120 = !DILocalVariable(name: "tmode", arg: 3, scope: !10116, file: !3, line: 5843, type: !5)
!10121 = !DILocalVariable(name: "fmode", arg: 4, scope: !10116, file: !3, line: 5844, type: !5)
!10122 = !DILocation(line: 0, scope: !10116)
!10123 = !DILocation(line: 5846, column: 7, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 5846, column: 7)
!10125 = !DILocation(line: 5846, column: 30, scope: !10124)
!10126 = !DILocation(line: 5846, column: 44, scope: !10124)
!10127 = !DILocation(line: 5846, column: 48, scope: !10124)
!10128 = !DILocation(line: 5846, column: 7, scope: !10116)
!10129 = !DILocation(line: 5848, column: 7, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 5848, column: 7)
!10131 = !DILocation(line: 5848, column: 30, scope: !10130)
!10132 = !DILocation(line: 5848, column: 7, scope: !10116)
!10133 = !DILocation(line: 5850, column: 3, scope: !10116)
!10134 = !DILocation(line: 5851, column: 1, scope: !10116)
!10135 = distinct !DISubprogram(name: "gen_int_to_fp_nondecimal_conv_libfunc", scope: !3, file: !3, line: 5825, type: !10083, scopeLine: 5829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10136)
!10136 = !{!10137, !10138, !10139, !10140}
!10137 = !DILocalVariable(name: "tab", arg: 1, scope: !10135, file: !3, line: 5825, type: !3772)
!10138 = !DILocalVariable(name: "opname", arg: 2, scope: !10135, file: !3, line: 5826, type: !2077)
!10139 = !DILocalVariable(name: "tmode", arg: 3, scope: !10135, file: !3, line: 5827, type: !5)
!10140 = !DILocalVariable(name: "fmode", arg: 4, scope: !10135, file: !3, line: 5828, type: !5)
!10141 = !DILocation(line: 0, scope: !10135)
!10142 = !DILocation(line: 5830, column: 7, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10135, file: !3, line: 5830, column: 7)
!10144 = !DILocation(line: 5830, column: 30, scope: !10143)
!10145 = !DILocation(line: 5830, column: 7, scope: !10135)
!10146 = !DILocation(line: 5832, column: 7, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10135, file: !3, line: 5832, column: 7)
!10148 = !DILocation(line: 5832, column: 30, scope: !10147)
!10149 = !DILocation(line: 5832, column: 7, scope: !10135)
!10150 = !DILocation(line: 5834, column: 3, scope: !10135)
!10151 = !DILocation(line: 5835, column: 1, scope: !10135)
!10152 = distinct !DISubprogram(name: "gen_extend_conv_libfunc", scope: !3, file: !3, line: 5949, type: !10083, scopeLine: 5953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10153)
!10153 = !{!10154, !10155, !10156, !10157}
!10154 = !DILocalVariable(name: "tab", arg: 1, scope: !10152, file: !3, line: 5949, type: !3772)
!10155 = !DILocalVariable(name: "opname", arg: 2, scope: !10152, file: !3, line: 5950, type: !2077)
!10156 = !DILocalVariable(name: "tmode", arg: 3, scope: !10152, file: !3, line: 5951, type: !5)
!10157 = !DILocalVariable(name: "fmode", arg: 4, scope: !10152, file: !3, line: 5952, type: !5)
!10158 = !DILocation(line: 0, scope: !10152)
!10159 = !DILocation(line: 5954, column: 7, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 5954, column: 7)
!10161 = !DILocation(line: 5954, column: 30, scope: !10160)
!10162 = !DILocation(line: 5954, column: 44, scope: !10160)
!10163 = !DILocation(line: 5954, column: 48, scope: !10160)
!10164 = !DILocation(line: 5954, column: 7, scope: !10152)
!10165 = !DILocation(line: 5956, column: 7, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 5956, column: 7)
!10167 = !DILocation(line: 5956, column: 30, scope: !10166)
!10168 = !DILocation(line: 5956, column: 44, scope: !10166)
!10169 = !DILocation(line: 5956, column: 48, scope: !10166)
!10170 = !DILocation(line: 5958, column: 13, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 5958, column: 7)
!10172 = !DILocation(line: 5956, column: 7, scope: !10152)
!10173 = !DILocation(line: 5958, column: 7, scope: !10152)
!10174 = !DILocation(line: 5961, column: 45, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 5961, column: 7)
!10176 = !DILocation(line: 5961, column: 48, scope: !10175)
!10177 = !DILocation(line: 5962, column: 7, scope: !10175)
!10178 = !DILocation(line: 5962, column: 48, scope: !10175)
!10179 = !DILocation(line: 5962, column: 51, scope: !10175)
!10180 = !DILocation(line: 5961, column: 7, scope: !10152)
!10181 = !DILocation(line: 5963, column: 6, scope: !10175)
!10182 = !DILocation(line: 5965, column: 7, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 5965, column: 7)
!10184 = !DILocation(line: 5965, column: 36, scope: !10183)
!10185 = !DILocation(line: 5965, column: 34, scope: !10183)
!10186 = !DILocation(line: 5965, column: 7, scope: !10152)
!10187 = !DILocation(line: 5969, column: 8, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 5968, column: 7)
!10189 = !DILocation(line: 5970, column: 7, scope: !10188)
!10190 = !DILocation(line: 5970, column: 11, scope: !10188)
!10191 = !DILocation(line: 5970, column: 40, scope: !10188)
!10192 = !DILocation(line: 5970, column: 43, scope: !10188)
!10193 = !DILocation(line: 5968, column: 7, scope: !10152)
!10194 = !DILocation(line: 5971, column: 5, scope: !10188)
!10195 = !DILocation(line: 5972, column: 1, scope: !10152)
!10196 = distinct !DISubprogram(name: "gen_trunc_conv_libfunc", scope: !3, file: !3, line: 5920, type: !10083, scopeLine: 5924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10197)
!10197 = !{!10198, !10199, !10200, !10201}
!10198 = !DILocalVariable(name: "tab", arg: 1, scope: !10196, file: !3, line: 5920, type: !3772)
!10199 = !DILocalVariable(name: "opname", arg: 2, scope: !10196, file: !3, line: 5921, type: !2077)
!10200 = !DILocalVariable(name: "tmode", arg: 3, scope: !10196, file: !3, line: 5922, type: !5)
!10201 = !DILocalVariable(name: "fmode", arg: 4, scope: !10196, file: !3, line: 5923, type: !5)
!10202 = !DILocation(line: 0, scope: !10196)
!10203 = !DILocation(line: 5925, column: 7, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 5925, column: 7)
!10205 = !DILocation(line: 5925, column: 30, scope: !10204)
!10206 = !DILocation(line: 5925, column: 44, scope: !10204)
!10207 = !DILocation(line: 5925, column: 48, scope: !10204)
!10208 = !DILocation(line: 5925, column: 7, scope: !10196)
!10209 = !DILocation(line: 5927, column: 7, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 5927, column: 7)
!10211 = !DILocation(line: 5927, column: 30, scope: !10210)
!10212 = !DILocation(line: 5927, column: 44, scope: !10210)
!10213 = !DILocation(line: 5927, column: 48, scope: !10210)
!10214 = !DILocation(line: 5929, column: 13, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 5929, column: 7)
!10216 = !DILocation(line: 5927, column: 7, scope: !10196)
!10217 = !DILocation(line: 5929, column: 7, scope: !10196)
!10218 = !DILocation(line: 5932, column: 45, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 5932, column: 7)
!10220 = !DILocation(line: 5932, column: 48, scope: !10219)
!10221 = !DILocation(line: 5933, column: 7, scope: !10219)
!10222 = !DILocation(line: 5933, column: 48, scope: !10219)
!10223 = !DILocation(line: 5933, column: 51, scope: !10219)
!10224 = !DILocation(line: 5932, column: 7, scope: !10196)
!10225 = !DILocation(line: 5934, column: 6, scope: !10219)
!10226 = !DILocation(line: 5936, column: 7, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 5936, column: 7)
!10228 = !DILocation(line: 5936, column: 37, scope: !10227)
!10229 = !DILocation(line: 5936, column: 34, scope: !10227)
!10230 = !DILocation(line: 5936, column: 7, scope: !10196)
!10231 = !DILocation(line: 5940, column: 8, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 5939, column: 7)
!10233 = !DILocation(line: 5941, column: 7, scope: !10232)
!10234 = !DILocation(line: 5941, column: 11, scope: !10232)
!10235 = !DILocation(line: 5941, column: 40, scope: !10232)
!10236 = !DILocation(line: 5941, column: 43, scope: !10232)
!10237 = !DILocation(line: 5939, column: 7, scope: !10196)
!10238 = !DILocation(line: 5942, column: 5, scope: !10232)
!10239 = !DILocation(line: 5943, column: 1, scope: !10196)
!10240 = distinct !DISubprogram(name: "gen_fract_conv_libfunc", scope: !3, file: !3, line: 5978, type: !10083, scopeLine: 5982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10241)
!10241 = !{!10242, !10243, !10244, !10245}
!10242 = !DILocalVariable(name: "tab", arg: 1, scope: !10240, file: !3, line: 5978, type: !3772)
!10243 = !DILocalVariable(name: "opname", arg: 2, scope: !10240, file: !3, line: 5979, type: !2077)
!10244 = !DILocalVariable(name: "tmode", arg: 3, scope: !10240, file: !3, line: 5980, type: !5)
!10245 = !DILocalVariable(name: "fmode", arg: 4, scope: !10240, file: !3, line: 5981, type: !5)
!10246 = !DILocation(line: 0, scope: !10240)
!10247 = !DILocation(line: 5983, column: 13, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 5983, column: 7)
!10249 = !DILocation(line: 5983, column: 7, scope: !10240)
!10250 = !DILocation(line: 5985, column: 9, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 5985, column: 7)
!10252 = !DILocation(line: 5985, column: 40, scope: !10251)
!10253 = !DILocation(line: 5985, column: 43, scope: !10251)
!10254 = !DILocation(line: 5985, column: 7, scope: !10240)
!10255 = !DILocation(line: 5988, column: 33, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 5988, column: 7)
!10257 = !DILocation(line: 5988, column: 30, scope: !10256)
!10258 = !DILocation(line: 5988, column: 7, scope: !10240)
!10259 = !DILocation(line: 5989, column: 5, scope: !10256)
!10260 = !DILocation(line: 5991, column: 5, scope: !10256)
!10261 = !DILocation(line: 5992, column: 1, scope: !10240)
!10262 = distinct !DISubprogram(name: "gen_satfract_conv_libfunc", scope: !3, file: !3, line: 6018, type: !10083, scopeLine: 6022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10263)
!10263 = !{!10264, !10265, !10266, !10267}
!10264 = !DILocalVariable(name: "tab", arg: 1, scope: !10262, file: !3, line: 6018, type: !3772)
!10265 = !DILocalVariable(name: "opname", arg: 2, scope: !10262, file: !3, line: 6019, type: !2077)
!10266 = !DILocalVariable(name: "tmode", arg: 3, scope: !10262, file: !3, line: 6020, type: !5)
!10267 = !DILocalVariable(name: "fmode", arg: 4, scope: !10262, file: !3, line: 6021, type: !5)
!10268 = !DILocation(line: 0, scope: !10262)
!10269 = !DILocation(line: 6023, column: 13, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 6023, column: 7)
!10271 = !DILocation(line: 6023, column: 7, scope: !10262)
!10272 = !DILocation(line: 6026, column: 8, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 6026, column: 7)
!10274 = !DILocation(line: 6026, column: 7, scope: !10262)
!10275 = !DILocation(line: 6029, column: 33, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 6029, column: 7)
!10277 = !DILocation(line: 6029, column: 30, scope: !10276)
!10278 = !DILocation(line: 6029, column: 7, scope: !10262)
!10279 = !DILocation(line: 6030, column: 5, scope: !10276)
!10280 = !DILocation(line: 6032, column: 5, scope: !10276)
!10281 = !DILocation(line: 6033, column: 1, scope: !10262)
!10282 = distinct !DISubprogram(name: "gen_fractuns_conv_libfunc", scope: !3, file: !3, line: 5997, type: !10083, scopeLine: 6001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10283)
!10283 = !{!10284, !10285, !10286, !10287}
!10284 = !DILocalVariable(name: "tab", arg: 1, scope: !10282, file: !3, line: 5997, type: !3772)
!10285 = !DILocalVariable(name: "opname", arg: 2, scope: !10282, file: !3, line: 5998, type: !2077)
!10286 = !DILocalVariable(name: "tmode", arg: 3, scope: !10282, file: !3, line: 5999, type: !5)
!10287 = !DILocalVariable(name: "fmode", arg: 4, scope: !10282, file: !3, line: 6000, type: !5)
!10288 = !DILocation(line: 0, scope: !10282)
!10289 = !DILocation(line: 6002, column: 13, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 6002, column: 7)
!10291 = !DILocation(line: 6002, column: 7, scope: !10282)
!10292 = !DILocation(line: 6006, column: 10, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 6006, column: 7)
!10294 = !DILocation(line: 6006, column: 41, scope: !10293)
!10295 = !DILocation(line: 0, scope: !10293)
!10296 = !DILocation(line: 6007, column: 6, scope: !10293)
!10297 = !DILocation(line: 6006, column: 44, scope: !10293)
!10298 = !DILocation(line: 6006, column: 67, scope: !10293)
!10299 = !DILocation(line: 6007, column: 2, scope: !10293)
!10300 = !DILocation(line: 6008, column: 6, scope: !10293)
!10301 = !DILocation(line: 6008, column: 32, scope: !10293)
!10302 = !DILocation(line: 6006, column: 7, scope: !10282)
!10303 = !DILocation(line: 6011, column: 3, scope: !10282)
!10304 = !DILocation(line: 6012, column: 1, scope: !10282)
!10305 = distinct !DISubprogram(name: "gen_satfractuns_conv_libfunc", scope: !3, file: !3, line: 6038, type: !10083, scopeLine: 6042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10306)
!10306 = !{!10307, !10308, !10309, !10310}
!10307 = !DILocalVariable(name: "tab", arg: 1, scope: !10305, file: !3, line: 6038, type: !3772)
!10308 = !DILocalVariable(name: "opname", arg: 2, scope: !10305, file: !3, line: 6039, type: !2077)
!10309 = !DILocalVariable(name: "tmode", arg: 3, scope: !10305, file: !3, line: 6040, type: !5)
!10310 = !DILocalVariable(name: "fmode", arg: 4, scope: !10305, file: !3, line: 6041, type: !5)
!10311 = !DILocation(line: 0, scope: !10305)
!10312 = !DILocation(line: 6043, column: 13, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 6043, column: 7)
!10314 = !DILocation(line: 6043, column: 7, scope: !10305)
!10315 = !DILocation(line: 6046, column: 9, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 6046, column: 7)
!10317 = !DILocation(line: 6046, column: 40, scope: !10316)
!10318 = !DILocation(line: 6046, column: 43, scope: !10316)
!10319 = !DILocation(line: 6046, column: 66, scope: !10316)
!10320 = !DILocation(line: 6046, column: 7, scope: !10305)
!10321 = !DILocation(line: 6049, column: 3, scope: !10305)
!10322 = !DILocation(line: 6050, column: 1, scope: !10305)
!10323 = distinct !DISubprogram(name: "debug_optab_libfuncs", scope: !3, file: !3, line: 6698, type: !3243, scopeLine: 6699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10324)
!10324 = !{!10325, !10326, !10327, !10328, !10334, !10335, !10343}
!10325 = !DILocalVariable(name: "i", scope: !10323, file: !3, line: 6700, type: !2072)
!10326 = !DILocalVariable(name: "j", scope: !10323, file: !3, line: 6701, type: !2072)
!10327 = !DILocalVariable(name: "k", scope: !10323, file: !3, line: 6702, type: !2072)
!10328 = !DILocalVariable(name: "o", scope: !10329, file: !3, line: 6708, type: !3291)
!10329 = distinct !DILexicalBlock(scope: !10330, file: !3, line: 6707, column: 7)
!10330 = distinct !DILexicalBlock(scope: !10331, file: !3, line: 6706, column: 5)
!10331 = distinct !DILexicalBlock(scope: !10332, file: !3, line: 6706, column: 5)
!10332 = distinct !DILexicalBlock(scope: !10333, file: !3, line: 6705, column: 3)
!10333 = distinct !DILexicalBlock(scope: !10323, file: !3, line: 6705, column: 3)
!10334 = !DILocalVariable(name: "l", scope: !10329, file: !3, line: 6709, type: !2090)
!10335 = !DILocalVariable(name: "o", scope: !10336, file: !3, line: 6728, type: !3772)
!10336 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 6727, column: 2)
!10337 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 6726, column: 7)
!10338 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 6726, column: 7)
!10339 = distinct !DILexicalBlock(scope: !10340, file: !3, line: 6725, column: 5)
!10340 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 6725, column: 5)
!10341 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 6724, column: 3)
!10342 = distinct !DILexicalBlock(scope: !10323, file: !3, line: 6724, column: 3)
!10343 = !DILocalVariable(name: "l", scope: !10336, file: !3, line: 6729, type: !2090)
!10344 = !DILocation(line: 0, scope: !10323)
!10345 = !DILocation(line: 6705, column: 8, scope: !10333)
!10346 = !DILocation(line: 0, scope: !10333)
!10347 = !DILocation(line: 6705, column: 17, scope: !10332)
!10348 = !DILocation(line: 6705, column: 3, scope: !10333)
!10349 = !DILocation(line: 0, scope: !10329)
!10350 = !DILocation(line: 0, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 6714, column: 4)
!10352 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 6713, column: 6)
!10353 = !DILocation(line: 6706, column: 5, scope: !10331)
!10354 = !DILocation(line: 6724, column: 3, scope: !10342)
!10355 = !DILocation(line: 0, scope: !10331)
!10356 = !DILocation(line: 6706, column: 19, scope: !10330)
!10357 = !DILocation(line: 6712, column: 6, scope: !10329)
!10358 = !DILocation(line: 6713, column: 6, scope: !10352)
!10359 = !DILocation(line: 6713, column: 6, scope: !10329)
!10360 = !DILocation(line: 6715, column: 6, scope: !10351)
!10361 = !DILocation(line: 6716, column: 15, scope: !10351)
!10362 = !DILocation(line: 6717, column: 8, scope: !10351)
!10363 = !DILocation(line: 6718, column: 8, scope: !10351)
!10364 = !DILocation(line: 6719, column: 8, scope: !10351)
!10365 = !DILocation(line: 6716, column: 6, scope: !10351)
!10366 = !DILocation(line: 6720, column: 4, scope: !10351)
!10367 = !DILocation(line: 6706, column: 40, scope: !10330)
!10368 = !DILocation(line: 6706, column: 5, scope: !10330)
!10369 = distinct !{!10369, !10353, !10370}
!10370 = !DILocation(line: 6721, column: 7, scope: !10331)
!10371 = !DILocation(line: 6705, column: 36, scope: !10332)
!10372 = !DILocation(line: 6705, column: 3, scope: !10332)
!10373 = distinct !{!10373, !10348, !10374}
!10374 = !DILocation(line: 6721, column: 7, scope: !10333)
!10375 = !DILocation(line: 0, scope: !10342)
!10376 = !DILocation(line: 6724, column: 17, scope: !10341)
!10377 = !DILocation(line: 0, scope: !10336)
!10378 = !DILocation(line: 0, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10380, file: !3, line: 6735, column: 6)
!10380 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 6734, column: 8)
!10381 = !DILocation(line: 6725, column: 5, scope: !10340)
!10382 = !DILocation(line: 0, scope: !10340)
!10383 = !DILocation(line: 6725, column: 19, scope: !10339)
!10384 = !DILocation(line: 6726, column: 7, scope: !10338)
!10385 = !DILocation(line: 0, scope: !10338)
!10386 = !DILocation(line: 6726, column: 21, scope: !10337)
!10387 = !DILocation(line: 6732, column: 8, scope: !10336)
!10388 = !DILocation(line: 6734, column: 8, scope: !10380)
!10389 = !DILocation(line: 6734, column: 8, scope: !10336)
!10390 = !DILocation(line: 6736, column: 8, scope: !10379)
!10391 = !DILocation(line: 6737, column: 17, scope: !10379)
!10392 = !DILocation(line: 6738, column: 10, scope: !10379)
!10393 = !DILocation(line: 6739, column: 10, scope: !10379)
!10394 = !DILocation(line: 6740, column: 10, scope: !10379)
!10395 = !DILocation(line: 6741, column: 10, scope: !10379)
!10396 = !DILocation(line: 6737, column: 8, scope: !10379)
!10397 = !DILocation(line: 6742, column: 6, scope: !10379)
!10398 = !DILocation(line: 6726, column: 42, scope: !10337)
!10399 = !DILocation(line: 6726, column: 7, scope: !10337)
!10400 = distinct !{!10400, !10384, !10401}
!10401 = !DILocation(line: 6743, column: 2, scope: !10338)
!10402 = !DILocation(line: 6725, column: 40, scope: !10339)
!10403 = !DILocation(line: 6725, column: 5, scope: !10339)
!10404 = distinct !{!10404, !10381, !10405}
!10405 = !DILocation(line: 6743, column: 2, scope: !10340)
!10406 = !DILocation(line: 6724, column: 34, scope: !10341)
!10407 = !DILocation(line: 6724, column: 3, scope: !10341)
!10408 = distinct !{!10408, !10354, !10409}
!10409 = !DILocation(line: 6743, column: 2, scope: !10342)
!10410 = !DILocation(line: 6744, column: 1, scope: !10323)
!10411 = distinct !DISubprogram(name: "gen_cond_trap", scope: !3, file: !3, line: 6751, type: !10412, scopeLine: 6752, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10414)
!10412 = !DISubroutineType(types: !10413)
!10413 = !{!2090, !384, !2090, !2090, !2090}
!10414 = !{!10415, !10416, !10417, !10418, !10419, !10420, !10421, !10422}
!10415 = !DILocalVariable(name: "code", arg: 1, scope: !10411, file: !3, line: 6751, type: !384)
!10416 = !DILocalVariable(name: "op1", arg: 2, scope: !10411, file: !3, line: 6751, type: !2090)
!10417 = !DILocalVariable(name: "op2", arg: 3, scope: !10411, file: !3, line: 6751, type: !2090)
!10418 = !DILocalVariable(name: "tcode", arg: 4, scope: !10411, file: !3, line: 6751, type: !2090)
!10419 = !DILocalVariable(name: "mode", scope: !10411, file: !3, line: 6753, type: !5)
!10420 = !DILocalVariable(name: "icode", scope: !10411, file: !3, line: 6754, type: !527)
!10421 = !DILocalVariable(name: "insn", scope: !10411, file: !3, line: 6755, type: !2090)
!10422 = !DILocalVariable(name: "trap_rtx", scope: !10411, file: !3, line: 6756, type: !2090)
!10423 = !DILocation(line: 0, scope: !10411)
!10424 = !DILocation(line: 6753, column: 3, scope: !10411)
!10425 = !DILocation(line: 6753, column: 28, scope: !10411)
!10426 = !DILocation(line: 6753, column: 21, scope: !10411)
!10427 = !DILocation(line: 6756, column: 3, scope: !10411)
!10428 = !DILocation(line: 6758, column: 12, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10411, file: !3, line: 6758, column: 7)
!10430 = !DILocation(line: 6758, column: 7, scope: !10411)
!10431 = !DILocation(line: 6761, column: 11, scope: !10411)
!10432 = !DILocation(line: 6761, column: 46, scope: !10411)
!10433 = !DILocation(line: 6762, column: 13, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10411, file: !3, line: 6762, column: 7)
!10435 = !DILocation(line: 6762, column: 7, scope: !10411)
!10436 = !DILocation(line: 6766, column: 7, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10411, file: !3, line: 6766, column: 7)
!10438 = !DILocation(line: 6766, column: 24, scope: !10437)
!10439 = !DILocation(line: 6766, column: 35, scope: !10437)
!10440 = !DILocation(line: 6767, column: 7, scope: !10437)
!10441 = !DILocation(line: 6767, column: 11, scope: !10437)
!10442 = !DILocation(line: 6766, column: 7, scope: !10411)
!10443 = !DILocation(line: 6770, column: 3, scope: !10411)
!10444 = !DILocation(line: 6771, column: 3, scope: !10411)
!10445 = !DILocation(line: 6772, column: 3, scope: !10411)
!10446 = !DILocation(line: 6774, column: 8, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10411, file: !3, line: 6774, column: 7)
!10448 = !DILocation(line: 6774, column: 7, scope: !10411)
!10449 = !DILocation(line: 6777, column: 12, scope: !10447)
!10450 = !DILocation(line: 6777, column: 39, scope: !10447)
!10451 = !DILocation(line: 6777, column: 59, scope: !10447)
!10452 = !DILocation(line: 0, scope: !10447)
!10453 = !DILocation(line: 6781, column: 12, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10411, file: !3, line: 6781, column: 7)
!10455 = !DILocation(line: 6781, column: 7, scope: !10411)
!10456 = !DILocation(line: 6783, column: 7, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10454, file: !3, line: 6782, column: 5)
!10458 = !DILocation(line: 6784, column: 7, scope: !10457)
!10459 = !DILocation(line: 6787, column: 3, scope: !10411)
!10460 = !DILocation(line: 6788, column: 10, scope: !10411)
!10461 = !DILocation(line: 6789, column: 3, scope: !10411)
!10462 = !DILocation(line: 6790, column: 3, scope: !10411)
!10463 = !DILocation(line: 6791, column: 1, scope: !10411)
!10464 = distinct !DISubprogram(name: "expand_vec_cond_expr_p", scope: !3, file: !3, line: 6905, type: !10465, scopeLine: 6906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10467)
!10465 = !DISubroutineType(types: !10466)
!10466 = !{!2071, !2205, !5}
!10467 = !{!10468, !10469}
!10468 = !DILocalVariable(name: "type", arg: 1, scope: !10464, file: !3, line: 6905, type: !2205)
!10469 = !DILocalVariable(name: "vmode", arg: 2, scope: !10464, file: !3, line: 6905, type: !5)
!10470 = !DILocation(line: 0, scope: !10464)
!10471 = !DILocation(line: 6907, column: 7, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 6907, column: 7)
!10473 = !DILocation(line: 6907, column: 37, scope: !10472)
!10474 = !DILocation(line: 6910, column: 1, scope: !10464)
!10475 = distinct !DISubprogram(name: "get_vcond_icode", scope: !3, file: !3, line: 6890, type: !10476, scopeLine: 6891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10478)
!10476 = !DISubroutineType(types: !10477)
!10477 = !{!527, !2205, !5}
!10478 = !{!10479, !10480, !10481}
!10479 = !DILocalVariable(name: "type", arg: 1, scope: !10475, file: !3, line: 6890, type: !2205)
!10480 = !DILocalVariable(name: "mode", arg: 2, scope: !10475, file: !3, line: 6890, type: !5)
!10481 = !DILocalVariable(name: "icode", scope: !10475, file: !3, line: 6892, type: !527)
!10482 = !DILocation(line: 0, scope: !10475)
!10483 = !DILocation(line: 6894, column: 7, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10475, file: !3, line: 6894, column: 7)
!10485 = !DILocation(line: 0, scope: !10484)
!10486 = !DILocation(line: 6894, column: 7, scope: !10475)
!10487 = !DILocation(line: 6895, column: 5, scope: !10484)
!10488 = !DILocation(line: 6898, column: 3, scope: !10475)
!10489 = distinct !DISubprogram(name: "expand_vec_cond_expr", scope: !3, file: !3, line: 6916, type: !10490, scopeLine: 6918, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10492)
!10490 = !DISubroutineType(types: !10491)
!10491 = !{!2090, !2205, !2205, !2205, !2205, !2090}
!10492 = !{!10493, !10494, !10495, !10496, !10497, !10498, !10499, !10500, !10501, !10502, !10503, !10504, !10505}
!10493 = !DILocalVariable(name: "vec_cond_type", arg: 1, scope: !10489, file: !3, line: 6916, type: !2205)
!10494 = !DILocalVariable(name: "op0", arg: 2, scope: !10489, file: !3, line: 6916, type: !2205)
!10495 = !DILocalVariable(name: "op1", arg: 3, scope: !10489, file: !3, line: 6916, type: !2205)
!10496 = !DILocalVariable(name: "op2", arg: 4, scope: !10489, file: !3, line: 6916, type: !2205)
!10497 = !DILocalVariable(name: "target", arg: 5, scope: !10489, file: !3, line: 6917, type: !2090)
!10498 = !DILocalVariable(name: "icode", scope: !10489, file: !3, line: 6919, type: !527)
!10499 = !DILocalVariable(name: "comparison", scope: !10489, file: !3, line: 6920, type: !2090)
!10500 = !DILocalVariable(name: "rtx_op1", scope: !10489, file: !3, line: 6920, type: !2090)
!10501 = !DILocalVariable(name: "rtx_op2", scope: !10489, file: !3, line: 6920, type: !2090)
!10502 = !DILocalVariable(name: "cc_op0", scope: !10489, file: !3, line: 6920, type: !2090)
!10503 = !DILocalVariable(name: "cc_op1", scope: !10489, file: !3, line: 6920, type: !2090)
!10504 = !DILocalVariable(name: "mode", scope: !10489, file: !3, line: 6921, type: !5)
!10505 = !DILocalVariable(name: "unsignedp", scope: !10489, file: !3, line: 6922, type: !2071)
!10506 = !DILocation(line: 0, scope: !10489)
!10507 = !DILocation(line: 6921, column: 28, scope: !10489)
!10508 = !DILocation(line: 6922, column: 20, scope: !10489)
!10509 = !DILocation(line: 6924, column: 11, scope: !10489)
!10510 = !DILocation(line: 6925, column: 13, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10489, file: !3, line: 6925, column: 7)
!10512 = !DILocation(line: 6925, column: 7, scope: !10489)
!10513 = !DILocation(line: 6928, column: 8, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10489, file: !3, line: 6928, column: 7)
!10515 = !DILocation(line: 6928, column: 15, scope: !10514)
!10516 = !DILocation(line: 6938, column: 8, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10489, file: !3, line: 6938, column: 7)
!10518 = !DILocation(line: 6928, column: 19, scope: !10514)
!10519 = !DILocation(line: 6928, column: 36, scope: !10514)
!10520 = !DILocation(line: 6928, column: 47, scope: !10514)
!10521 = !DILocation(line: 6928, column: 7, scope: !10489)
!10522 = !DILocation(line: 6929, column: 14, scope: !10514)
!10523 = !DILocation(line: 6929, column: 5, scope: !10514)
!10524 = !DILocation(line: 6932, column: 16, scope: !10489)
!10525 = !DILocation(line: 6934, column: 12, scope: !10489)
!10526 = !DILocation(line: 6935, column: 12, scope: !10489)
!10527 = !DILocation(line: 6937, column: 13, scope: !10489)
!10528 = !DILocation(line: 6938, column: 25, scope: !10517)
!10529 = !DILocation(line: 6938, column: 36, scope: !10517)
!10530 = !DILocation(line: 6939, column: 15, scope: !10517)
!10531 = !DILocation(line: 6939, column: 7, scope: !10517)
!10532 = !DILocation(line: 6940, column: 15, scope: !10517)
!10533 = !DILocation(line: 6940, column: 5, scope: !10517)
!10534 = !DILocation(line: 6942, column: 13, scope: !10489)
!10535 = !DILocation(line: 6943, column: 36, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10489, file: !3, line: 6943, column: 7)
!10537 = !DILocation(line: 6943, column: 8, scope: !10536)
!10538 = !DILocation(line: 6944, column: 7, scope: !10536)
!10539 = !DILocation(line: 6945, column: 15, scope: !10536)
!10540 = !DILocation(line: 6945, column: 5, scope: !10536)
!10541 = !DILocation(line: 6948, column: 14, scope: !10489)
!10542 = !DILocation(line: 6948, column: 3, scope: !10489)
!10543 = !DILocation(line: 6951, column: 3, scope: !10489)
!10544 = !DILocation(line: 6952, column: 1, scope: !10489)
!10545 = distinct !DISubprogram(name: "vector_compare_rtx", scope: !3, file: !3, line: 6856, type: !10546, scopeLine: 6857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10548)
!10546 = !DISubroutineType(types: !10547)
!10547 = !{!2090, !2205, !2071, !527}
!10548 = !{!10549, !10550, !10551, !10552, !10553, !10554, !10555, !10556}
!10549 = !DILocalVariable(name: "cond", arg: 1, scope: !10545, file: !3, line: 6856, type: !2205)
!10550 = !DILocalVariable(name: "unsignedp", arg: 2, scope: !10545, file: !3, line: 6856, type: !2071)
!10551 = !DILocalVariable(name: "icode", arg: 3, scope: !10545, file: !3, line: 6856, type: !527)
!10552 = !DILocalVariable(name: "rcode", scope: !10545, file: !3, line: 6858, type: !384)
!10553 = !DILocalVariable(name: "t_op0", scope: !10545, file: !3, line: 6859, type: !2205)
!10554 = !DILocalVariable(name: "t_op1", scope: !10545, file: !3, line: 6859, type: !2205)
!10555 = !DILocalVariable(name: "rtx_op0", scope: !10545, file: !3, line: 6860, type: !2090)
!10556 = !DILocalVariable(name: "rtx_op1", scope: !10545, file: !3, line: 6860, type: !2090)
!10557 = !DILocation(line: 0, scope: !10545)
!10558 = !DILocation(line: 6864, column: 3, scope: !10545)
!10559 = !DILocation(line: 6866, column: 25, scope: !10545)
!10560 = !DILocation(line: 6866, column: 11, scope: !10545)
!10561 = !DILocation(line: 6867, column: 11, scope: !10545)
!10562 = !DILocation(line: 6868, column: 11, scope: !10545)
!10563 = !DILocation(line: 6871, column: 43, scope: !10545)
!10564 = !DILocation(line: 6871, column: 13, scope: !10545)
!10565 = !DILocation(line: 6873, column: 43, scope: !10545)
!10566 = !DILocation(line: 6873, column: 13, scope: !10545)
!10567 = !DILocation(line: 6876, column: 8, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 6876, column: 7)
!10569 = !DILocation(line: 6876, column: 25, scope: !10568)
!10570 = !DILocation(line: 6876, column: 36, scope: !10568)
!10571 = !DILocation(line: 6876, column: 56, scope: !10568)
!10572 = !DILocation(line: 6877, column: 7, scope: !10568)
!10573 = !DILocation(line: 6877, column: 10, scope: !10568)
!10574 = !DILocation(line: 6877, column: 29, scope: !10568)
!10575 = !DILocation(line: 6876, column: 7, scope: !10545)
!10576 = !DILocation(line: 6878, column: 26, scope: !10568)
!10577 = !DILocation(line: 6878, column: 15, scope: !10568)
!10578 = !DILocation(line: 6878, column: 5, scope: !10568)
!10579 = !DILocation(line: 6880, column: 36, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 6880, column: 7)
!10581 = !DILocation(line: 6880, column: 56, scope: !10580)
!10582 = !DILocation(line: 6880, column: 8, scope: !10580)
!10583 = !DILocation(line: 6881, column: 7, scope: !10580)
!10584 = !DILocation(line: 6881, column: 10, scope: !10580)
!10585 = !DILocation(line: 6881, column: 29, scope: !10580)
!10586 = !DILocation(line: 6880, column: 7, scope: !10545)
!10587 = !DILocation(line: 6882, column: 26, scope: !10580)
!10588 = !DILocation(line: 6882, column: 15, scope: !10580)
!10589 = !DILocation(line: 6882, column: 5, scope: !10580)
!10590 = !DILocation(line: 6884, column: 10, scope: !10545)
!10591 = !DILocation(line: 6884, column: 3, scope: !10545)
!10592 = distinct !DISubprogram(name: "expand_val_compare_and_swap", scope: !3, file: !3, line: 6992, type: !10593, scopeLine: 6993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10595)
!10593 = !DISubroutineType(types: !10594)
!10594 = !{!2090, !2090, !2090, !2090, !2090}
!10595 = !{!10596, !10597, !10598, !10599, !10600, !10601}
!10596 = !DILocalVariable(name: "mem", arg: 1, scope: !10592, file: !3, line: 6992, type: !2090)
!10597 = !DILocalVariable(name: "old_val", arg: 2, scope: !10592, file: !3, line: 6992, type: !2090)
!10598 = !DILocalVariable(name: "new_val", arg: 3, scope: !10592, file: !3, line: 6992, type: !2090)
!10599 = !DILocalVariable(name: "target", arg: 4, scope: !10592, file: !3, line: 6992, type: !2090)
!10600 = !DILocalVariable(name: "mode", scope: !10592, file: !3, line: 6994, type: !5)
!10601 = !DILocalVariable(name: "icode", scope: !10592, file: !3, line: 6995, type: !527)
!10602 = !DILocation(line: 0, scope: !10592)
!10603 = !DILocation(line: 6994, column: 28, scope: !10592)
!10604 = !DILocation(line: 6995, column: 26, scope: !10592)
!10605 = !DILocation(line: 6997, column: 13, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 6997, column: 7)
!10607 = !DILocation(line: 6997, column: 7, scope: !10592)
!10608 = !DILocation(line: 7000, column: 10, scope: !10592)
!10609 = !DILocation(line: 7000, column: 3, scope: !10592)
!10610 = !DILocation(line: 7001, column: 1, scope: !10592)
!10611 = distinct !DISubprogram(name: "expand_val_compare_and_swap_1", scope: !3, file: !3, line: 6962, type: !10612, scopeLine: 6964, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10614)
!10612 = !DISubroutineType(types: !10613)
!10613 = !{!2090, !2090, !2090, !2090, !2090, !527}
!10614 = !{!10615, !10616, !10617, !10618, !10619, !10620, !10621}
!10615 = !DILocalVariable(name: "mem", arg: 1, scope: !10611, file: !3, line: 6962, type: !2090)
!10616 = !DILocalVariable(name: "old_val", arg: 2, scope: !10611, file: !3, line: 6962, type: !2090)
!10617 = !DILocalVariable(name: "new_val", arg: 3, scope: !10611, file: !3, line: 6962, type: !2090)
!10618 = !DILocalVariable(name: "target", arg: 4, scope: !10611, file: !3, line: 6963, type: !2090)
!10619 = !DILocalVariable(name: "icode", arg: 5, scope: !10611, file: !3, line: 6963, type: !527)
!10620 = !DILocalVariable(name: "mode", scope: !10611, file: !3, line: 6965, type: !5)
!10621 = !DILocalVariable(name: "insn", scope: !10611, file: !3, line: 6966, type: !2090)
!10622 = !DILocation(line: 0, scope: !10611)
!10623 = !DILocation(line: 6965, column: 28, scope: !10611)
!10624 = !DILocation(line: 6968, column: 8, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 6968, column: 7)
!10626 = !DILocation(line: 6968, column: 15, scope: !10625)
!10627 = !DILocation(line: 6968, column: 19, scope: !10625)
!10628 = !DILocation(line: 6968, column: 36, scope: !10625)
!10629 = !DILocation(line: 6968, column: 47, scope: !10625)
!10630 = !DILocation(line: 6968, column: 7, scope: !10611)
!10631 = !DILocation(line: 6969, column: 14, scope: !10625)
!10632 = !DILocation(line: 6969, column: 5, scope: !10625)
!10633 = !DILocation(line: 6971, column: 7, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 6971, column: 7)
!10635 = !DILocation(line: 6971, column: 26, scope: !10634)
!10636 = !DILocation(line: 6971, column: 38, scope: !10634)
!10637 = !DILocation(line: 6971, column: 41, scope: !10634)
!10638 = !DILocation(line: 6971, column: 60, scope: !10634)
!10639 = !DILocation(line: 6971, column: 7, scope: !10611)
!10640 = !DILocation(line: 6972, column: 15, scope: !10634)
!10641 = !DILocation(line: 6972, column: 5, scope: !10634)
!10642 = !DILocation(line: 6973, column: 8, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 6973, column: 7)
!10644 = !DILocation(line: 6973, column: 25, scope: !10643)
!10645 = !DILocation(line: 6973, column: 36, scope: !10643)
!10646 = !DILocation(line: 6973, column: 7, scope: !10611)
!10647 = !DILocation(line: 6974, column: 15, scope: !10643)
!10648 = !DILocation(line: 6974, column: 5, scope: !10643)
!10649 = !DILocation(line: 6976, column: 7, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 6976, column: 7)
!10651 = !DILocation(line: 6976, column: 26, scope: !10650)
!10652 = !DILocation(line: 6976, column: 38, scope: !10650)
!10653 = !DILocation(line: 6976, column: 41, scope: !10650)
!10654 = !DILocation(line: 6976, column: 60, scope: !10650)
!10655 = !DILocation(line: 6976, column: 7, scope: !10611)
!10656 = !DILocation(line: 6977, column: 15, scope: !10650)
!10657 = !DILocation(line: 6977, column: 5, scope: !10650)
!10658 = !DILocation(line: 6978, column: 36, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 6978, column: 7)
!10660 = !DILocation(line: 6978, column: 8, scope: !10659)
!10661 = !DILocation(line: 6978, column: 7, scope: !10611)
!10662 = !DILocation(line: 6979, column: 15, scope: !10659)
!10663 = !DILocation(line: 6979, column: 5, scope: !10659)
!10664 = !DILocation(line: 6981, column: 10, scope: !10611)
!10665 = !DILocation(line: 6982, column: 12, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 6982, column: 7)
!10667 = !DILocation(line: 6982, column: 7, scope: !10611)
!10668 = !DILocation(line: 6984, column: 3, scope: !10611)
!10669 = !DILocation(line: 6986, column: 3, scope: !10611)
!10670 = !DILocation(line: 6987, column: 1, scope: !10611)
!10671 = distinct !DISubprogram(name: "expand_bool_compare_and_swap", scope: !3, file: !3, line: 7023, type: !10593, scopeLine: 7024, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10672)
!10672 = !{!10673, !10674, !10675, !10676, !10677, !10678, !10679, !10680, !10681}
!10673 = !DILocalVariable(name: "mem", arg: 1, scope: !10671, file: !3, line: 7023, type: !2090)
!10674 = !DILocalVariable(name: "old_val", arg: 2, scope: !10671, file: !3, line: 7023, type: !2090)
!10675 = !DILocalVariable(name: "new_val", arg: 3, scope: !10671, file: !3, line: 7023, type: !2090)
!10676 = !DILocalVariable(name: "target", arg: 4, scope: !10671, file: !3, line: 7023, type: !2090)
!10677 = !DILocalVariable(name: "mode", scope: !10671, file: !3, line: 7025, type: !5)
!10678 = !DILocalVariable(name: "icode", scope: !10671, file: !3, line: 7026, type: !527)
!10679 = !DILocalVariable(name: "subtarget", scope: !10671, file: !3, line: 7027, type: !2090)
!10680 = !DILocalVariable(name: "seq", scope: !10671, file: !3, line: 7027, type: !2090)
!10681 = !DILocalVariable(name: "cc_reg", scope: !10671, file: !3, line: 7027, type: !2090)
!10682 = !DILocation(line: 0, scope: !10671)
!10683 = !DILocation(line: 7025, column: 28, scope: !10671)
!10684 = !DILocation(line: 7027, column: 3, scope: !10671)
!10685 = !DILocation(line: 7032, column: 11, scope: !10671)
!10686 = !DILocation(line: 7033, column: 13, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 7033, column: 7)
!10688 = !DILocation(line: 7033, column: 7, scope: !10671)
!10689 = !DILocation(line: 7036, column: 3, scope: !10671)
!10690 = !DILocation(line: 7038, column: 7, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 7037, column: 5)
!10692 = !DILocation(line: 7039, column: 19, scope: !10691)
!10693 = !DILocation(line: 7041, column: 14, scope: !10691)
!10694 = !DILocation(line: 7042, column: 21, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 7042, column: 11)
!10696 = !DILocation(line: 7042, column: 11, scope: !10691)
!10697 = !DILocation(line: 7044, column: 4, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 7043, column: 2)
!10699 = !DILocation(line: 7045, column: 4, scope: !10698)
!10700 = !DILocation(line: 7048, column: 11, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 7048, column: 11)
!10702 = !DILocation(line: 7048, column: 11, scope: !10691)
!10703 = !DILocation(line: 7049, column: 15, scope: !10701)
!10704 = !DILocation(line: 7049, column: 2, scope: !10701)
!10705 = !DILocation(line: 7050, column: 13, scope: !10691)
!10706 = !DILocation(line: 7051, column: 7, scope: !10691)
!10707 = !DILocation(line: 7054, column: 12, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 7054, column: 11)
!10709 = !DILocation(line: 7054, column: 19, scope: !10708)
!10710 = !DILocation(line: 7054, column: 22, scope: !10708)
!10711 = !DILocation(line: 7054, column: 11, scope: !10691)
!10712 = !DILocation(line: 7057, column: 14, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10708, file: !3, line: 7055, column: 2)
!10714 = !DILocation(line: 7058, column: 9, scope: !10713)
!10715 = !DILocation(line: 0, scope: !10691)
!10716 = !DILocation(line: 7060, column: 10, scope: !10671)
!10717 = !DILocation(line: 7059, column: 5, scope: !10691)
!10718 = distinct !{!10718, !10689, !10719}
!10719 = !DILocation(line: 7060, column: 14, scope: !10671)
!10720 = !DILocation(line: 7062, column: 3, scope: !10671)
!10721 = !DILocation(line: 7063, column: 7, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 7063, column: 7)
!10723 = !DILocation(line: 7063, column: 7, scope: !10671)
!10724 = !DILocation(line: 7064, column: 55, scope: !10722)
!10725 = !DILocation(line: 7064, column: 12, scope: !10722)
!10726 = !DILocation(line: 7064, column: 5, scope: !10722)
!10727 = !DILocation(line: 7066, column: 12, scope: !10722)
!10728 = !DILocation(line: 7066, column: 5, scope: !10722)
!10729 = !DILocation(line: 7067, column: 1, scope: !10671)
!10730 = distinct !DISubprogram(name: "find_cc_set", scope: !3, file: !3, line: 7007, type: !7536, scopeLine: 7008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10731)
!10731 = !{!10732, !10733, !10734, !10735}
!10732 = !DILocalVariable(name: "x", arg: 1, scope: !10730, file: !3, line: 7007, type: !2090)
!10733 = !DILocalVariable(name: "pat", arg: 2, scope: !10730, file: !3, line: 7007, type: !7069)
!10734 = !DILocalVariable(name: "data", arg: 3, scope: !10730, file: !3, line: 7007, type: !2076)
!10735 = !DILocalVariable(name: "p_cc_reg", scope: !10736, file: !3, line: 7012, type: !3238)
!10736 = distinct !DILexicalBlock(scope: !10737, file: !3, line: 7011, column: 5)
!10737 = distinct !DILexicalBlock(scope: !10730, file: !3, line: 7009, column: 7)
!10738 = !DILocation(line: 0, scope: !10730)
!10739 = !DILocation(line: 7009, column: 7, scope: !10737)
!10740 = !DILocation(line: 7009, column: 17, scope: !10737)
!10741 = !DILocation(line: 7009, column: 20, scope: !10737)
!10742 = !DILocation(line: 7009, column: 50, scope: !10737)
!10743 = !DILocation(line: 7010, column: 7, scope: !10737)
!10744 = !DILocation(line: 7010, column: 10, scope: !10737)
!10745 = !DILocation(line: 7010, column: 25, scope: !10737)
!10746 = !DILocation(line: 7009, column: 7, scope: !10730)
!10747 = !DILocation(line: 7012, column: 23, scope: !10736)
!10748 = !DILocation(line: 0, scope: !10736)
!10749 = !DILocation(line: 7013, column: 7, scope: !10736)
!10750 = !DILocation(line: 7014, column: 17, scope: !10736)
!10751 = !DILocation(line: 7015, column: 5, scope: !10736)
!10752 = !DILocation(line: 7016, column: 1, scope: !10730)
!10753 = distinct !DISubprogram(name: "expand_sync_operation", scope: !3, file: !3, line: 7144, type: !10754, scopeLine: 7145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10756)
!10754 = !DISubroutineType(types: !10755)
!10755 = !{!2090, !2090, !2090, !384}
!10756 = !{!10757, !10758, !10759, !10760, !10761, !10762, !10763, !10766}
!10757 = !DILocalVariable(name: "mem", arg: 1, scope: !10753, file: !3, line: 7144, type: !2090)
!10758 = !DILocalVariable(name: "val", arg: 2, scope: !10753, file: !3, line: 7144, type: !2090)
!10759 = !DILocalVariable(name: "code", arg: 3, scope: !10753, file: !3, line: 7144, type: !384)
!10760 = !DILocalVariable(name: "mode", scope: !10753, file: !3, line: 7146, type: !5)
!10761 = !DILocalVariable(name: "icode", scope: !10753, file: !3, line: 7147, type: !527)
!10762 = !DILocalVariable(name: "insn", scope: !10753, file: !3, line: 7148, type: !2090)
!10763 = !DILocalVariable(name: "t0", scope: !10764, file: !3, line: 7206, type: !2090)
!10764 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 7205, column: 5)
!10765 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 7204, column: 7)
!10766 = !DILocalVariable(name: "t1", scope: !10764, file: !3, line: 7206, type: !2090)
!10767 = !DILocation(line: 0, scope: !10753)
!10768 = !DILocation(line: 7146, column: 28, scope: !10753)
!10769 = !DILocation(line: 7151, column: 3, scope: !10753)
!10770 = !DILocation(line: 7154, column: 15, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 7152, column: 5)
!10772 = !DILocation(line: 7155, column: 7, scope: !10771)
!10773 = !DILocation(line: 7157, column: 15, scope: !10771)
!10774 = !DILocation(line: 7158, column: 7, scope: !10771)
!10775 = !DILocation(line: 7160, column: 15, scope: !10771)
!10776 = !DILocation(line: 7161, column: 7, scope: !10771)
!10777 = !DILocation(line: 7163, column: 15, scope: !10771)
!10778 = !DILocation(line: 7164, column: 7, scope: !10771)
!10779 = !DILocation(line: 7166, column: 15, scope: !10771)
!10780 = !DILocation(line: 7167, column: 7, scope: !10771)
!10781 = !DILocation(line: 7170, column: 15, scope: !10771)
!10782 = !DILocation(line: 7171, column: 17, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10771, file: !3, line: 7171, column: 11)
!10784 = !DILocation(line: 7171, column: 37, scope: !10783)
!10785 = !DILocation(line: 7171, column: 40, scope: !10783)
!10786 = !DILocation(line: 7171, column: 11, scope: !10771)
!10787 = !DILocation(line: 7173, column: 12, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 7172, column: 2)
!10789 = !DILocation(line: 7174, column: 14, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10788, file: !3, line: 7174, column: 8)
!10791 = !DILocation(line: 7174, column: 8, scope: !10788)
!10792 = !DILocation(line: 7176, column: 14, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 7175, column: 6)
!10794 = !DILocation(line: 7178, column: 6, scope: !10793)
!10795 = !DILocation(line: 7183, column: 7, scope: !10771)
!10796 = !DILocation(line: 7184, column: 5, scope: !10771)
!10797 = !DILocation(line: 7187, column: 13, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 7187, column: 7)
!10799 = !DILocation(line: 7187, column: 7, scope: !10753)
!10800 = !DILocation(line: 7189, column: 11, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 7189, column: 11)
!10802 = distinct !DILexicalBlock(scope: !10798, file: !3, line: 7188, column: 5)
!10803 = !DILocation(line: 7189, column: 26, scope: !10801)
!10804 = !DILocation(line: 7189, column: 38, scope: !10801)
!10805 = !DILocation(line: 7189, column: 41, scope: !10801)
!10806 = !DILocation(line: 7189, column: 56, scope: !10801)
!10807 = !DILocation(line: 7189, column: 11, scope: !10802)
!10808 = !DILocation(line: 7190, column: 8, scope: !10801)
!10809 = !DILocation(line: 7190, column: 2, scope: !10801)
!10810 = !DILocation(line: 7191, column: 12, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 7191, column: 11)
!10812 = !DILocation(line: 7191, column: 29, scope: !10811)
!10813 = !DILocation(line: 7191, column: 40, scope: !10811)
!10814 = !DILocation(line: 7191, column: 11, scope: !10802)
!10815 = !DILocation(line: 7192, column: 8, scope: !10811)
!10816 = !DILocation(line: 7192, column: 2, scope: !10811)
!10817 = !DILocation(line: 0, scope: !10802)
!10818 = !DILocation(line: 7194, column: 14, scope: !10802)
!10819 = !DILocation(line: 7195, column: 11, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 7195, column: 11)
!10821 = !DILocation(line: 7195, column: 11, scope: !10802)
!10822 = !DILocation(line: 7197, column: 4, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 7196, column: 2)
!10824 = !DILocation(line: 7198, column: 11, scope: !10823)
!10825 = !DILocation(line: 7198, column: 4, scope: !10823)
!10826 = !DILocation(line: 7204, column: 7, scope: !10765)
!10827 = !DILocation(line: 7204, column: 35, scope: !10765)
!10828 = !DILocation(line: 7204, column: 7, scope: !10753)
!10829 = !DILocation(line: 7206, column: 16, scope: !10764)
!10830 = !DILocation(line: 0, scope: !10764)
!10831 = !DILocation(line: 7208, column: 7, scope: !10764)
!10832 = !DILocation(line: 7211, column: 16, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 7211, column: 11)
!10834 = !DILocation(line: 7211, column: 11, scope: !10764)
!10835 = !DILocation(line: 7213, column: 9, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 7212, column: 2)
!10837 = !DILocation(line: 7215, column: 9, scope: !10836)
!10838 = !DILocation(line: 7216, column: 2, scope: !10836)
!10839 = !DILocation(line: 7218, column: 7, scope: !10833)
!10840 = !DILocation(line: 0, scope: !10833)
!10841 = !DILocation(line: 7220, column: 14, scope: !10764)
!10842 = !DILocation(line: 7221, column: 7, scope: !10764)
!10843 = !DILocation(line: 7223, column: 14, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 7223, column: 11)
!10845 = !DILocation(line: 7223, column: 22, scope: !10844)
!10846 = !DILocation(line: 7223, column: 25, scope: !10844)
!10847 = !DILocation(line: 7224, column: 9, scope: !10844)
!10848 = !DILocation(line: 7223, column: 11, scope: !10764)
!10849 = !DILocation(line: 7227, column: 3, scope: !10753)
!10850 = !DILocation(line: 7228, column: 1, scope: !10753)
!10851 = distinct !DISubprogram(name: "expand_compare_and_swap_loop", scope: !3, file: !3, line: 7079, type: !10852, scopeLine: 7080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10854)
!10852 = !DISubroutineType(types: !10853)
!10853 = !{!2071, !2090, !2090, !2090, !2090}
!10854 = !{!10855, !10856, !10857, !10858, !10859, !10860, !10861, !10862, !10863, !10864}
!10855 = !DILocalVariable(name: "mem", arg: 1, scope: !10851, file: !3, line: 7079, type: !2090)
!10856 = !DILocalVariable(name: "old_reg", arg: 2, scope: !10851, file: !3, line: 7079, type: !2090)
!10857 = !DILocalVariable(name: "new_reg", arg: 3, scope: !10851, file: !3, line: 7079, type: !2090)
!10858 = !DILocalVariable(name: "seq", arg: 4, scope: !10851, file: !3, line: 7079, type: !2090)
!10859 = !DILocalVariable(name: "mode", scope: !10851, file: !3, line: 7081, type: !5)
!10860 = !DILocalVariable(name: "icode", scope: !10851, file: !3, line: 7082, type: !527)
!10861 = !DILocalVariable(name: "label", scope: !10851, file: !3, line: 7083, type: !2090)
!10862 = !DILocalVariable(name: "cmp_reg", scope: !10851, file: !3, line: 7083, type: !2090)
!10863 = !DILocalVariable(name: "subtarget", scope: !10851, file: !3, line: 7083, type: !2090)
!10864 = !DILocalVariable(name: "cc_reg", scope: !10851, file: !3, line: 7083, type: !2090)
!10865 = !DILocation(line: 0, scope: !10851)
!10866 = !DILocation(line: 7081, column: 28, scope: !10851)
!10867 = !DILocation(line: 7083, column: 3, scope: !10851)
!10868 = !DILocation(line: 7098, column: 11, scope: !10851)
!10869 = !DILocation(line: 7099, column: 13, scope: !10851)
!10870 = !DILocation(line: 7101, column: 3, scope: !10851)
!10871 = !DILocation(line: 7102, column: 3, scope: !10851)
!10872 = !DILocation(line: 7103, column: 3, scope: !10851)
!10873 = !DILocation(line: 7104, column: 7, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10851, file: !3, line: 7104, column: 7)
!10875 = !DILocation(line: 7104, column: 7, scope: !10851)
!10876 = !DILocation(line: 7105, column: 5, scope: !10874)
!10877 = !DILocation(line: 7110, column: 11, scope: !10851)
!10878 = !DILocation(line: 7111, column: 13, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10851, file: !3, line: 7111, column: 7)
!10880 = !DILocation(line: 7111, column: 7, scope: !10851)
!10881 = !DILocation(line: 7114, column: 15, scope: !10851)
!10882 = !DILocation(line: 7116, column: 17, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10851, file: !3, line: 7116, column: 7)
!10884 = !DILocation(line: 7116, column: 7, scope: !10851)
!10885 = !DILocation(line: 7119, column: 10, scope: !10851)
!10886 = !DILocation(line: 7120, column: 7, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10851, file: !3, line: 7120, column: 7)
!10888 = !DILocation(line: 7120, column: 7, scope: !10851)
!10889 = !DILocation(line: 7121, column: 18, scope: !10887)
!10890 = !DILocation(line: 7121, column: 5, scope: !10887)
!10891 = !DILocation(line: 7122, column: 7, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10851, file: !3, line: 7122, column: 7)
!10893 = !DILocation(line: 7122, column: 7, scope: !10851)
!10894 = !DILocation(line: 7125, column: 17, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10892, file: !3, line: 7123, column: 5)
!10896 = !DILocation(line: 7126, column: 5, scope: !10895)
!10897 = !DILocation(line: 7129, column: 21, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10899, file: !3, line: 7129, column: 11)
!10899 = distinct !DILexicalBlock(scope: !10892, file: !3, line: 7128, column: 5)
!10900 = !DILocation(line: 7129, column: 11, scope: !10899)
!10901 = !DILocation(line: 7130, column: 2, scope: !10898)
!10902 = !DILocation(line: 7134, column: 50, scope: !10851)
!10903 = !DILocation(line: 7134, column: 62, scope: !10851)
!10904 = !DILocation(line: 7134, column: 3, scope: !10851)
!10905 = !DILocation(line: 7136, column: 3, scope: !10851)
!10906 = !DILocation(line: 7137, column: 1, scope: !10851)
!10907 = distinct !DISubprogram(name: "expand_sync_fetch_operation", scope: !3, file: !3, line: 7237, type: !10908, scopeLine: 7239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10910)
!10908 = !DISubroutineType(types: !10909)
!10909 = !{!2090, !2090, !2090, !384, !2071, !2090}
!10910 = !{!10911, !10912, !10913, !10914, !10915, !10916, !10917, !10918, !10919, !10920, !10921, !10922, !10925}
!10911 = !DILocalVariable(name: "mem", arg: 1, scope: !10907, file: !3, line: 7237, type: !2090)
!10912 = !DILocalVariable(name: "val", arg: 2, scope: !10907, file: !3, line: 7237, type: !2090)
!10913 = !DILocalVariable(name: "code", arg: 3, scope: !10907, file: !3, line: 7237, type: !384)
!10914 = !DILocalVariable(name: "after", arg: 4, scope: !10907, file: !3, line: 7238, type: !2071)
!10915 = !DILocalVariable(name: "target", arg: 5, scope: !10907, file: !3, line: 7238, type: !2090)
!10916 = !DILocalVariable(name: "mode", scope: !10907, file: !3, line: 7240, type: !5)
!10917 = !DILocalVariable(name: "old_code", scope: !10907, file: !3, line: 7241, type: !527)
!10918 = !DILocalVariable(name: "new_code", scope: !10907, file: !3, line: 7241, type: !527)
!10919 = !DILocalVariable(name: "icode", scope: !10907, file: !3, line: 7241, type: !527)
!10920 = !DILocalVariable(name: "compensate", scope: !10907, file: !3, line: 7242, type: !2071)
!10921 = !DILocalVariable(name: "insn", scope: !10907, file: !3, line: 7243, type: !2090)
!10922 = !DILocalVariable(name: "t0", scope: !10923, file: !3, line: 7368, type: !2090)
!10923 = distinct !DILexicalBlock(scope: !10924, file: !3, line: 7367, column: 5)
!10924 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 7366, column: 7)
!10925 = !DILocalVariable(name: "t1", scope: !10923, file: !3, line: 7368, type: !2090)
!10926 = !DILocation(line: 0, scope: !10907)
!10927 = !DILocation(line: 7240, column: 28, scope: !10907)
!10928 = !DILocation(line: 7246, column: 3, scope: !10907)
!10929 = !DILocation(line: 7249, column: 18, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 7247, column: 5)
!10931 = !DILocation(line: 7250, column: 18, scope: !10930)
!10932 = !DILocation(line: 7251, column: 7, scope: !10930)
!10933 = !DILocation(line: 7253, column: 18, scope: !10930)
!10934 = !DILocation(line: 7254, column: 18, scope: !10930)
!10935 = !DILocation(line: 7255, column: 7, scope: !10930)
!10936 = !DILocation(line: 7257, column: 18, scope: !10930)
!10937 = !DILocation(line: 7258, column: 18, scope: !10930)
!10938 = !DILocation(line: 7259, column: 7, scope: !10930)
!10939 = !DILocation(line: 7261, column: 18, scope: !10930)
!10940 = !DILocation(line: 7262, column: 18, scope: !10930)
!10941 = !DILocation(line: 7263, column: 7, scope: !10930)
!10942 = !DILocation(line: 7265, column: 18, scope: !10930)
!10943 = !DILocation(line: 7266, column: 18, scope: !10930)
!10944 = !DILocation(line: 7267, column: 7, scope: !10930)
!10945 = !DILocation(line: 7270, column: 18, scope: !10930)
!10946 = !DILocation(line: 7271, column: 18, scope: !10930)
!10947 = !DILocation(line: 7272, column: 21, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 7272, column: 11)
!10949 = !DILocation(line: 7272, column: 53, scope: !10948)
!10950 = !DILocation(line: 7272, column: 41, scope: !10948)
!10951 = !DILocation(line: 7273, column: 14, scope: !10948)
!10952 = !DILocation(line: 7272, column: 11, scope: !10930)
!10953 = !DILocation(line: 7275, column: 15, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 7274, column: 2)
!10955 = !DILocation(line: 7276, column: 15, scope: !10954)
!10956 = !DILocation(line: 7277, column: 17, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10954, file: !3, line: 7277, column: 8)
!10958 = !DILocation(line: 7277, column: 49, scope: !10957)
!10959 = !DILocation(line: 7277, column: 37, scope: !10957)
!10960 = !DILocation(line: 7279, column: 14, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 7278, column: 6)
!10962 = !DILocation(line: 7281, column: 6, scope: !10961)
!10963 = !DILocation(line: 7286, column: 7, scope: !10930)
!10964 = !DILocation(line: 7287, column: 5, scope: !10930)
!10965 = !DILocation(line: 7296, column: 7, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 7296, column: 7)
!10967 = !DILocation(line: 7296, column: 7, scope: !10907)
!10968 = !DILocation(line: 7299, column: 17, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10970, file: !3, line: 7299, column: 11)
!10970 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 7297, column: 5)
!10971 = !DILocation(line: 7299, column: 11, scope: !10970)
!10972 = !DILocation(line: 7309, column: 17, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 7309, column: 11)
!10974 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 7307, column: 5)
!10975 = !DILocation(line: 7310, column: 4, scope: !10973)
!10976 = !DILocation(line: 7310, column: 21, scope: !10973)
!10977 = !DILocation(line: 7313, column: 14, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 7313, column: 8)
!10979 = distinct !DILexicalBlock(scope: !10973, file: !3, line: 7311, column: 2)
!10980 = !DILocation(line: 7315, column: 2, scope: !10979)
!10981 = !DILocation(line: 0, scope: !10966)
!10982 = !DILocation(line: 7319, column: 13, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 7319, column: 7)
!10984 = !DILocation(line: 7319, column: 7, scope: !10907)
!10985 = !DILocation(line: 7321, column: 12, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10987, file: !3, line: 7321, column: 11)
!10987 = distinct !DILexicalBlock(scope: !10983, file: !3, line: 7320, column: 5)
!10988 = !DILocation(line: 7321, column: 19, scope: !10986)
!10989 = !DILocation(line: 7321, column: 23, scope: !10986)
!10990 = !DILocation(line: 7321, column: 40, scope: !10986)
!10991 = !DILocation(line: 7321, column: 51, scope: !10986)
!10992 = !DILocation(line: 7321, column: 11, scope: !10987)
!10993 = !DILocation(line: 7322, column: 11, scope: !10986)
!10994 = !DILocation(line: 7322, column: 2, scope: !10986)
!10995 = !DILocation(line: 7324, column: 11, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10987, file: !3, line: 7324, column: 11)
!10997 = !DILocation(line: 7324, column: 26, scope: !10996)
!10998 = !DILocation(line: 7324, column: 38, scope: !10996)
!10999 = !DILocation(line: 7324, column: 41, scope: !10996)
!11000 = !DILocation(line: 7324, column: 56, scope: !10996)
!11001 = !DILocation(line: 7324, column: 11, scope: !10987)
!11002 = !DILocation(line: 7325, column: 8, scope: !10996)
!11003 = !DILocation(line: 7325, column: 2, scope: !10996)
!11004 = !DILocation(line: 7326, column: 12, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10987, file: !3, line: 7326, column: 11)
!11006 = !DILocation(line: 7326, column: 29, scope: !11005)
!11007 = !DILocation(line: 7326, column: 40, scope: !11005)
!11008 = !DILocation(line: 7326, column: 11, scope: !10987)
!11009 = !DILocation(line: 7327, column: 8, scope: !11005)
!11010 = !DILocation(line: 7327, column: 2, scope: !11005)
!11011 = !DILocation(line: 0, scope: !10987)
!11012 = !DILocation(line: 7329, column: 14, scope: !10987)
!11013 = !DILocation(line: 7330, column: 11, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !10987, file: !3, line: 7330, column: 11)
!11015 = !DILocation(line: 7330, column: 11, scope: !10987)
!11016 = !DILocation(line: 7332, column: 4, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 7331, column: 2)
!11018 = !DILocation(line: 7336, column: 8, scope: !11017)
!11019 = !DILocation(line: 7338, column: 12, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11021, file: !3, line: 7337, column: 6)
!11021 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 7336, column: 8)
!11022 = !DILocation(line: 7340, column: 9, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 7339, column: 3)
!11024 = distinct !DILexicalBlock(scope: !11020, file: !3, line: 7338, column: 12)
!11025 = !DILocation(line: 7343, column: 7, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 7342, column: 14)
!11027 = distinct !DILexicalBlock(scope: !11023, file: !3, line: 7340, column: 9)
!11028 = !DILocation(line: 7346, column: 17, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11020, file: !3, line: 7346, column: 12)
!11030 = !DILocation(line: 7346, column: 12, scope: !11020)
!11031 = !DILocation(line: 7348, column: 14, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11029, file: !3, line: 7347, column: 3)
!11033 = !DILocation(line: 7351, column: 14, scope: !11032)
!11034 = !DILocation(line: 7353, column: 3, scope: !11032)
!11035 = !DILocation(line: 7355, column: 12, scope: !11029)
!11036 = !DILocation(line: 7366, column: 7, scope: !10924)
!11037 = !DILocation(line: 7366, column: 35, scope: !10924)
!11038 = !DILocation(line: 7366, column: 7, scope: !10907)
!11039 = !DILocation(line: 7368, column: 16, scope: !10923)
!11040 = !DILocation(line: 0, scope: !10923)
!11041 = !DILocation(line: 7370, column: 12, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 7370, column: 11)
!11043 = !DILocation(line: 7370, column: 19, scope: !11042)
!11044 = !DILocation(line: 7370, column: 23, scope: !11042)
!11045 = !DILocation(line: 7370, column: 11, scope: !10923)
!11046 = !DILocation(line: 7371, column: 11, scope: !11042)
!11047 = !DILocation(line: 7371, column: 2, scope: !11042)
!11048 = !DILocation(line: 7373, column: 7, scope: !10923)
!11049 = !DILocation(line: 7375, column: 11, scope: !10923)
!11050 = !DILocation(line: 7376, column: 2, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 7375, column: 11)
!11052 = !DILocation(line: 7378, column: 16, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 7378, column: 11)
!11054 = !DILocation(line: 7378, column: 11, scope: !10923)
!11055 = !DILocation(line: 7380, column: 9, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 7379, column: 2)
!11057 = !DILocation(line: 7382, column: 9, scope: !11056)
!11058 = !DILocation(line: 7383, column: 2, scope: !11056)
!11059 = !DILocation(line: 7385, column: 7, scope: !11053)
!11060 = !DILocation(line: 0, scope: !11053)
!11061 = !DILocation(line: 7387, column: 11, scope: !10923)
!11062 = !DILocation(line: 7388, column: 2, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 7387, column: 11)
!11064 = !DILocation(line: 7390, column: 14, scope: !10923)
!11065 = !DILocation(line: 7391, column: 7, scope: !10923)
!11066 = !DILocation(line: 7393, column: 14, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 7393, column: 11)
!11068 = !DILocation(line: 7393, column: 22, scope: !11067)
!11069 = !DILocation(line: 7393, column: 25, scope: !11067)
!11070 = !DILocation(line: 7393, column: 11, scope: !10923)
!11071 = !DILocation(line: 7395, column: 5, scope: !10924)
!11072 = !DILocation(line: 7397, column: 3, scope: !10907)
!11073 = !DILocation(line: 7398, column: 1, scope: !10907)
!11074 = distinct !DISubprogram(name: "expand_sync_lock_test_and_set", scope: !3, file: !3, line: 7408, type: !7125, scopeLine: 7409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11075)
!11075 = !{!11076, !11077, !11078, !11079, !11080, !11081}
!11076 = !DILocalVariable(name: "mem", arg: 1, scope: !11074, file: !3, line: 7408, type: !2090)
!11077 = !DILocalVariable(name: "val", arg: 2, scope: !11074, file: !3, line: 7408, type: !2090)
!11078 = !DILocalVariable(name: "target", arg: 3, scope: !11074, file: !3, line: 7408, type: !2090)
!11079 = !DILocalVariable(name: "mode", scope: !11074, file: !3, line: 7410, type: !5)
!11080 = !DILocalVariable(name: "icode", scope: !11074, file: !3, line: 7411, type: !527)
!11081 = !DILocalVariable(name: "insn", scope: !11074, file: !3, line: 7412, type: !2090)
!11082 = !DILocation(line: 0, scope: !11074)
!11083 = !DILocation(line: 7410, column: 28, scope: !11074)
!11084 = !DILocation(line: 7415, column: 11, scope: !11074)
!11085 = !DILocation(line: 7416, column: 13, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 7416, column: 7)
!11087 = !DILocation(line: 7416, column: 7, scope: !11074)
!11088 = !DILocation(line: 7418, column: 12, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11090, file: !3, line: 7418, column: 11)
!11090 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 7417, column: 5)
!11091 = !DILocation(line: 7418, column: 19, scope: !11089)
!11092 = !DILocation(line: 7418, column: 23, scope: !11089)
!11093 = !DILocation(line: 7418, column: 40, scope: !11089)
!11094 = !DILocation(line: 7418, column: 51, scope: !11089)
!11095 = !DILocation(line: 7418, column: 11, scope: !11090)
!11096 = !DILocation(line: 7419, column: 11, scope: !11089)
!11097 = !DILocation(line: 7419, column: 2, scope: !11089)
!11098 = !DILocation(line: 7421, column: 11, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11090, file: !3, line: 7421, column: 11)
!11100 = !DILocation(line: 7421, column: 26, scope: !11099)
!11101 = !DILocation(line: 7421, column: 38, scope: !11099)
!11102 = !DILocation(line: 7421, column: 41, scope: !11099)
!11103 = !DILocation(line: 7421, column: 56, scope: !11099)
!11104 = !DILocation(line: 7421, column: 11, scope: !11090)
!11105 = !DILocation(line: 7422, column: 8, scope: !11099)
!11106 = !DILocation(line: 7422, column: 2, scope: !11099)
!11107 = !DILocation(line: 7423, column: 12, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11090, file: !3, line: 7423, column: 11)
!11109 = !DILocation(line: 7423, column: 29, scope: !11108)
!11110 = !DILocation(line: 7423, column: 40, scope: !11108)
!11111 = !DILocation(line: 7423, column: 11, scope: !11090)
!11112 = !DILocation(line: 7424, column: 8, scope: !11108)
!11113 = !DILocation(line: 7424, column: 2, scope: !11108)
!11114 = !DILocation(line: 0, scope: !11090)
!11115 = !DILocation(line: 7426, column: 14, scope: !11090)
!11116 = !DILocation(line: 7427, column: 11, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11090, file: !3, line: 7427, column: 11)
!11118 = !DILocation(line: 7427, column: 11, scope: !11090)
!11119 = !DILocation(line: 7429, column: 4, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 7428, column: 2)
!11121 = !DILocation(line: 7430, column: 4, scope: !11120)
!11122 = !DILocation(line: 7435, column: 7, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 7435, column: 7)
!11124 = !DILocation(line: 7435, column: 35, scope: !11123)
!11125 = !DILocation(line: 7435, column: 7, scope: !11074)
!11126 = !DILocation(line: 7437, column: 12, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 7437, column: 11)
!11128 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 7436, column: 5)
!11129 = !DILocation(line: 7437, column: 19, scope: !11127)
!11130 = !DILocation(line: 7437, column: 23, scope: !11127)
!11131 = !DILocation(line: 7437, column: 11, scope: !11128)
!11132 = !DILocation(line: 7438, column: 11, scope: !11127)
!11133 = !DILocation(line: 7438, column: 2, scope: !11127)
!11134 = !DILocation(line: 7439, column: 11, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 7439, column: 11)
!11136 = !DILocation(line: 7439, column: 26, scope: !11135)
!11137 = !DILocation(line: 7439, column: 38, scope: !11135)
!11138 = !DILocation(line: 7439, column: 41, scope: !11135)
!11139 = !DILocation(line: 7439, column: 56, scope: !11135)
!11140 = !DILocation(line: 7439, column: 11, scope: !11128)
!11141 = !DILocation(line: 7440, column: 8, scope: !11135)
!11142 = !DILocation(line: 7440, column: 2, scope: !11135)
!11143 = !DILocation(line: 7441, column: 11, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 7441, column: 11)
!11145 = !DILocation(line: 7441, column: 11, scope: !11128)
!11146 = !DILocation(line: 7445, column: 3, scope: !11074)
!11147 = !DILocation(line: 7446, column: 1, scope: !11074)
!11148 = distinct !DISubprogram(name: "gt_ggc_mx_libfunc_entry", scope: !3249, file: !3249, line: 23, type: !2556, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11149)
!11149 = !{!11150, !11151}
!11150 = !DILocalVariable(name: "x_p", arg: 1, scope: !11148, file: !3249, line: 23, type: !2076)
!11151 = !DILocalVariable(name: "x", scope: !11148, file: !3249, line: 25, type: !11152)
!11152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2083)
!11153 = !DILocation(line: 0, scope: !11148)
!11154 = !DILocation(line: 26, column: 7, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11148, file: !3249, line: 26, column: 7)
!11156 = !DILocation(line: 26, column: 7, scope: !11148)
!11157 = !DILocation(line: 28, column: 7, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11159, file: !3249, line: 28, column: 7)
!11159 = distinct !DILexicalBlock(scope: !11160, file: !3249, line: 28, column: 7)
!11160 = distinct !DILexicalBlock(scope: !11155, file: !3249, line: 27, column: 5)
!11161 = !DILocation(line: 28, column: 7, scope: !11159)
!11162 = !DILocation(line: 30, column: 1, scope: !11148)
!11163 = distinct !DISubprogram(name: "gt_ggc_m_P13libfunc_entry4htab", scope: !3249, file: !3249, line: 33, type: !2556, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11164)
!11164 = !{!11165, !11166, !11168, !11173}
!11165 = !DILocalVariable(name: "x_p", arg: 1, scope: !11163, file: !3249, line: 33, type: !2076)
!11166 = !DILocalVariable(name: "x", scope: !11163, file: !3249, line: 35, type: !11167)
!11167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2537)
!11168 = !DILocalVariable(name: "i0", scope: !11169, file: !3249, line: 39, type: !2079)
!11169 = distinct !DILexicalBlock(scope: !11170, file: !3249, line: 38, column: 33)
!11170 = distinct !DILexicalBlock(scope: !11171, file: !3249, line: 38, column: 11)
!11171 = distinct !DILexicalBlock(scope: !11172, file: !3249, line: 37, column: 5)
!11172 = distinct !DILexicalBlock(scope: !11163, file: !3249, line: 36, column: 7)
!11173 = !DILocalVariable(name: "a__", scope: !11174, file: !3249, line: 43, type: !11175)
!11174 = distinct !DILexicalBlock(scope: !11169, file: !3249, line: 43, column: 9)
!11175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2546)
!11176 = !DILocation(line: 0, scope: !11163)
!11177 = !DILocation(line: 36, column: 7, scope: !11172)
!11178 = !DILocation(line: 36, column: 7, scope: !11163)
!11179 = !DILocation(line: 38, column: 16, scope: !11170)
!11180 = !DILocation(line: 38, column: 24, scope: !11170)
!11181 = !DILocation(line: 38, column: 11, scope: !11171)
!11182 = !DILocation(line: 0, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11184, file: !3249, line: 40, column: 9)
!11184 = distinct !DILexicalBlock(scope: !11169, file: !3249, line: 40, column: 9)
!11185 = !DILocation(line: 40, column: 9, scope: !11184)
!11186 = !DILocation(line: 0, scope: !11169)
!11187 = !DILocation(line: 0, scope: !11184)
!11188 = !DILocation(line: 40, column: 44, scope: !11183)
!11189 = !DILocation(line: 40, column: 25, scope: !11183)
!11190 = !DILocation(line: 41, column: 11, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11192, file: !3249, line: 41, column: 11)
!11192 = distinct !DILexicalBlock(scope: !11193, file: !3249, line: 41, column: 11)
!11193 = distinct !DILexicalBlock(scope: !11183, file: !3249, line: 40, column: 57)
!11194 = !DILocation(line: 41, column: 11, scope: !11192)
!11195 = !DILocation(line: 40, column: 53, scope: !11183)
!11196 = !DILocation(line: 40, column: 9, scope: !11183)
!11197 = distinct !{!11197, !11185, !11198}
!11198 = !DILocation(line: 42, column: 9, scope: !11184)
!11199 = !DILocation(line: 0, scope: !11174)
!11200 = !DILocation(line: 43, column: 9, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11174, file: !3249, line: 43, column: 9)
!11202 = !DILocation(line: 43, column: 9, scope: !11174)
!11203 = !DILocation(line: 46, column: 1, scope: !11163)
!11204 = distinct !DISubprogram(name: "gt_pch_nx_libfunc_entry", scope: !3249, file: !3249, line: 49, type: !2556, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11205)
!11205 = !{!11206, !11207}
!11206 = !DILocalVariable(name: "x_p", arg: 1, scope: !11204, file: !3249, line: 49, type: !2076)
!11207 = !DILocalVariable(name: "x", scope: !11204, file: !3249, line: 51, type: !11152)
!11208 = !DILocation(line: 0, scope: !11204)
!11209 = !DILocation(line: 52, column: 7, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11204, file: !3249, line: 52, column: 7)
!11211 = !DILocation(line: 52, column: 7, scope: !11204)
!11212 = !DILocation(line: 54, column: 7, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11214, file: !3249, line: 54, column: 7)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !3249, line: 54, column: 7)
!11215 = distinct !DILexicalBlock(scope: !11210, file: !3249, line: 53, column: 5)
!11216 = !DILocation(line: 54, column: 7, scope: !11214)
!11217 = !DILocation(line: 56, column: 1, scope: !11204)
!11218 = distinct !DISubprogram(name: "gt_pch_p_13libfunc_entry", scope: !3249, file: !3249, line: 75, type: !11219, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11222)
!11219 = !DISubroutineType(types: !11220)
!11220 = !{null, !2076, !2076, !11221, !2076}
!11221 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_operator", file: !3253, line: 38, baseType: !2580)
!11222 = !{!11223, !11224, !11225, !11226, !11227}
!11223 = !DILocalVariable(name: "this_obj", arg: 1, scope: !11218, file: !3249, line: 75, type: !2076)
!11224 = !DILocalVariable(name: "x_p", arg: 2, scope: !11218, file: !3249, line: 76, type: !2076)
!11225 = !DILocalVariable(name: "op", arg: 3, scope: !11218, file: !3249, line: 77, type: !11221)
!11226 = !DILocalVariable(name: "cookie", arg: 4, scope: !11218, file: !3249, line: 78, type: !2076)
!11227 = !DILocalVariable(name: "x", scope: !11218, file: !3249, line: 80, type: !11152)
!11228 = !DILocation(line: 0, scope: !11218)
!11229 = !DILocation(line: 81, column: 19, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11218, file: !3249, line: 81, column: 7)
!11231 = !DILocation(line: 81, column: 7, scope: !11218)
!11232 = !DILocation(line: 82, column: 16, scope: !11230)
!11233 = !DILocation(line: 82, column: 5, scope: !11230)
!11234 = !DILocation(line: 83, column: 1, scope: !11218)
!11235 = distinct !DISubprogram(name: "gt_pch_n_P13libfunc_entry4htab", scope: !3249, file: !3249, line: 59, type: !2556, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11236)
!11236 = !{!11237, !11238, !11239}
!11237 = !DILocalVariable(name: "x_p", arg: 1, scope: !11235, file: !3249, line: 59, type: !2076)
!11238 = !DILocalVariable(name: "x", scope: !11235, file: !3249, line: 61, type: !11167)
!11239 = !DILocalVariable(name: "i0", scope: !11240, file: !3249, line: 65, type: !2079)
!11240 = distinct !DILexicalBlock(scope: !11241, file: !3249, line: 64, column: 33)
!11241 = distinct !DILexicalBlock(scope: !11242, file: !3249, line: 64, column: 11)
!11242 = distinct !DILexicalBlock(scope: !11243, file: !3249, line: 63, column: 5)
!11243 = distinct !DILexicalBlock(scope: !11235, file: !3249, line: 62, column: 7)
!11244 = !DILocation(line: 0, scope: !11235)
!11245 = !DILocation(line: 62, column: 7, scope: !11243)
!11246 = !DILocation(line: 62, column: 7, scope: !11235)
!11247 = !DILocation(line: 64, column: 16, scope: !11241)
!11248 = !DILocation(line: 64, column: 24, scope: !11241)
!11249 = !DILocation(line: 64, column: 11, scope: !11242)
!11250 = !DILocation(line: 0, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !3249, line: 66, column: 9)
!11252 = distinct !DILexicalBlock(scope: !11240, file: !3249, line: 66, column: 9)
!11253 = !DILocation(line: 66, column: 9, scope: !11252)
!11254 = !DILocation(line: 0, scope: !11240)
!11255 = !DILocation(line: 0, scope: !11252)
!11256 = !DILocation(line: 66, column: 44, scope: !11251)
!11257 = !DILocation(line: 66, column: 25, scope: !11251)
!11258 = !DILocation(line: 67, column: 11, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11260, file: !3249, line: 67, column: 11)
!11260 = distinct !DILexicalBlock(scope: !11261, file: !3249, line: 67, column: 11)
!11261 = distinct !DILexicalBlock(scope: !11251, file: !3249, line: 66, column: 57)
!11262 = !DILocation(line: 67, column: 11, scope: !11260)
!11263 = !DILocation(line: 66, column: 53, scope: !11251)
!11264 = !DILocation(line: 66, column: 9, scope: !11251)
!11265 = distinct !{!11265, !11253, !11266}
!11266 = !DILocation(line: 68, column: 9, scope: !11252)
!11267 = !DILocation(line: 69, column: 29, scope: !11240)
!11268 = !DILocation(line: 69, column: 9, scope: !11240)
!11269 = !DILocation(line: 70, column: 7, scope: !11240)
!11270 = !DILocation(line: 72, column: 1, scope: !11235)
!11271 = distinct !DISubprogram(name: "gt_pch_p_P13libfunc_entry4htab", scope: !3249, file: !3249, line: 86, type: !11219, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11272)
!11272 = !{!11273, !11274, !11275, !11276, !11277, !11278}
!11273 = !DILocalVariable(name: "this_obj", arg: 1, scope: !11271, file: !3249, line: 86, type: !2076)
!11274 = !DILocalVariable(name: "x_p", arg: 2, scope: !11271, file: !3249, line: 87, type: !2076)
!11275 = !DILocalVariable(name: "op", arg: 3, scope: !11271, file: !3249, line: 88, type: !11221)
!11276 = !DILocalVariable(name: "cookie", arg: 4, scope: !11271, file: !3249, line: 89, type: !2076)
!11277 = !DILocalVariable(name: "x", scope: !11271, file: !3249, line: 91, type: !11167)
!11278 = !DILocalVariable(name: "i0", scope: !11279, file: !3249, line: 93, type: !2079)
!11279 = distinct !DILexicalBlock(scope: !11280, file: !3249, line: 92, column: 29)
!11280 = distinct !DILexicalBlock(scope: !11271, file: !3249, line: 92, column: 7)
!11281 = !DILocation(line: 0, scope: !11271)
!11282 = !DILocation(line: 92, column: 12, scope: !11280)
!11283 = !DILocation(line: 92, column: 20, scope: !11280)
!11284 = !DILocation(line: 92, column: 7, scope: !11271)
!11285 = !DILocation(line: 0, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !3249, line: 94, column: 5)
!11287 = distinct !DILexicalBlock(scope: !11279, file: !3249, line: 94, column: 5)
!11288 = !DILocation(line: 0, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11290, file: !3249, line: 95, column: 11)
!11290 = distinct !DILexicalBlock(scope: !11286, file: !3249, line: 94, column: 53)
!11291 = !DILocation(line: 94, column: 5, scope: !11287)
!11292 = !DILocation(line: 0, scope: !11287)
!11293 = !DILocation(line: 0, scope: !11279)
!11294 = !DILocation(line: 94, column: 40, scope: !11286)
!11295 = !DILocation(line: 94, column: 21, scope: !11286)
!11296 = !DILocation(line: 95, column: 25, scope: !11289)
!11297 = !DILocation(line: 95, column: 34, scope: !11289)
!11298 = !DILocation(line: 95, column: 11, scope: !11290)
!11299 = !DILocation(line: 96, column: 15, scope: !11289)
!11300 = !DILocation(line: 96, column: 13, scope: !11289)
!11301 = !DILocation(line: 96, column: 9, scope: !11289)
!11302 = !DILocation(line: 94, column: 49, scope: !11286)
!11303 = !DILocation(line: 94, column: 5, scope: !11286)
!11304 = distinct !{!11304, !11291, !11305}
!11305 = !DILocation(line: 97, column: 5, scope: !11287)
!11306 = !DILocation(line: 98, column: 21, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11279, file: !3249, line: 98, column: 9)
!11308 = !DILocation(line: 98, column: 9, scope: !11279)
!11309 = !DILocation(line: 99, column: 7, scope: !11307)
!11310 = !DILocation(line: 101, column: 1, scope: !11271)
!11311 = distinct !DISubprogram(name: "expand_superword_shift", scope: !3, file: !3, line: 839, type: !11312, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11314)
!11312 = !DISubroutineType(types: !11313)
!11313 = !{!2071, !3291, !2090, !2090, !2090, !2090, !2072, !2047}
!11314 = !{!11315, !11316, !11317, !11318, !11319, !11320, !11321}
!11315 = !DILocalVariable(name: "binoptab", arg: 1, scope: !11311, file: !3, line: 839, type: !3291)
!11316 = !DILocalVariable(name: "outof_input", arg: 2, scope: !11311, file: !3, line: 839, type: !2090)
!11317 = !DILocalVariable(name: "superword_op1", arg: 3, scope: !11311, file: !3, line: 839, type: !2090)
!11318 = !DILocalVariable(name: "outof_target", arg: 4, scope: !11311, file: !3, line: 840, type: !2090)
!11319 = !DILocalVariable(name: "into_target", arg: 5, scope: !11311, file: !3, line: 840, type: !2090)
!11320 = !DILocalVariable(name: "unsignedp", arg: 6, scope: !11311, file: !3, line: 841, type: !2072)
!11321 = !DILocalVariable(name: "methods", arg: 7, scope: !11311, file: !3, line: 841, type: !2047)
!11322 = !DILocation(line: 0, scope: !11311)
!11323 = !DILocation(line: 843, column: 19, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11311, file: !3, line: 843, column: 7)
!11325 = !DILocation(line: 843, column: 7, scope: !11311)
!11326 = !DILocation(line: 844, column: 30, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 844, column: 9)
!11328 = !DILocation(line: 844, column: 10, scope: !11327)
!11329 = !DILocation(line: 844, column: 9, scope: !11324)
!11330 = !DILocation(line: 848, column: 20, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11311, file: !3, line: 848, column: 7)
!11332 = !DILocation(line: 848, column: 7, scope: !11311)
!11333 = !DILocation(line: 852, column: 20, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !3, line: 852, column: 11)
!11335 = distinct !DILexicalBlock(scope: !11331, file: !3, line: 849, column: 5)
!11336 = !DILocation(line: 0, scope: !11334)
!11337 = !DILocation(line: 852, column: 11, scope: !11335)
!11338 = !DILocation(line: 853, column: 32, scope: !11334)
!11339 = !DILocation(line: 853, column: 2, scope: !11334)
!11340 = !DILocation(line: 856, column: 19, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 855, column: 6)
!11342 = !DILocation(line: 855, column: 7, scope: !11341)
!11343 = !DILocation(line: 855, column: 6, scope: !11334)
!11344 = !DILocation(line: 860, column: 3, scope: !11311)
!11345 = !DILocation(line: 861, column: 1, scope: !11311)
!11346 = distinct !DISubprogram(name: "expand_subword_shift", scope: !3, file: !3, line: 868, type: !5367, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11347)
!11347 = !{!11348, !11349, !11350, !11351, !11352, !11353, !11354, !11355, !11356, !11357, !11358, !11359, !11360, !11361}
!11348 = !DILocalVariable(name: "op1_mode", arg: 1, scope: !11346, file: !3, line: 868, type: !5)
!11349 = !DILocalVariable(name: "binoptab", arg: 2, scope: !11346, file: !3, line: 868, type: !3291)
!11350 = !DILocalVariable(name: "outof_input", arg: 3, scope: !11346, file: !3, line: 869, type: !2090)
!11351 = !DILocalVariable(name: "into_input", arg: 4, scope: !11346, file: !3, line: 869, type: !2090)
!11352 = !DILocalVariable(name: "op1", arg: 5, scope: !11346, file: !3, line: 869, type: !2090)
!11353 = !DILocalVariable(name: "outof_target", arg: 6, scope: !11346, file: !3, line: 870, type: !2090)
!11354 = !DILocalVariable(name: "into_target", arg: 7, scope: !11346, file: !3, line: 870, type: !2090)
!11355 = !DILocalVariable(name: "unsignedp", arg: 8, scope: !11346, file: !3, line: 871, type: !2072)
!11356 = !DILocalVariable(name: "methods", arg: 9, scope: !11346, file: !3, line: 871, type: !2047)
!11357 = !DILocalVariable(name: "shift_mask", arg: 10, scope: !11346, file: !3, line: 872, type: !2081)
!11358 = !DILocalVariable(name: "reverse_unsigned_shift", scope: !11346, file: !3, line: 874, type: !3291)
!11359 = !DILocalVariable(name: "unsigned_shift", scope: !11346, file: !3, line: 874, type: !3291)
!11360 = !DILocalVariable(name: "tmp", scope: !11346, file: !3, line: 875, type: !2090)
!11361 = !DILocalVariable(name: "carries", scope: !11346, file: !3, line: 875, type: !2090)
!11362 = !DILocation(line: 0, scope: !11346)
!11363 = !DILocation(line: 877, column: 38, scope: !11346)
!11364 = !DILocation(line: 877, column: 29, scope: !11346)
!11365 = !DILocation(line: 878, column: 21, scope: !11346)
!11366 = !DILocation(line: 883, column: 7, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 883, column: 7)
!11368 = !DILocation(line: 883, column: 38, scope: !11367)
!11369 = !DILocation(line: 883, column: 24, scope: !11367)
!11370 = !DILocation(line: 886, column: 13, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 884, column: 5)
!11372 = !DILocation(line: 887, column: 13, scope: !11371)
!11373 = !DILocation(line: 889, column: 5, scope: !11371)
!11374 = !DILocation(line: 897, column: 31, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 891, column: 5)
!11376 = !DILocation(line: 898, column: 23, scope: !11375)
!11377 = !DILocation(line: 897, column: 17, scope: !11375)
!11378 = !DILocation(line: 899, column: 22, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11375, file: !3, line: 899, column: 11)
!11380 = !DILocation(line: 899, column: 11, scope: !11375)
!11381 = !DILocation(line: 901, column: 10, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 900, column: 2)
!11383 = !DILocation(line: 902, column: 10, scope: !11382)
!11384 = !DILocation(line: 904, column: 2, scope: !11382)
!11385 = !DILocation(line: 907, column: 10, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 906, column: 2)
!11387 = !DILocation(line: 908, column: 10, scope: !11386)
!11388 = !DILocation(line: 0, scope: !11367)
!11389 = !DILocation(line: 912, column: 11, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 912, column: 7)
!11391 = !DILocation(line: 912, column: 27, scope: !11390)
!11392 = !DILocation(line: 912, column: 16, scope: !11390)
!11393 = !DILocation(line: 914, column: 27, scope: !11346)
!11394 = !DILocation(line: 914, column: 13, scope: !11346)
!11395 = !DILocation(line: 916, column: 15, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 916, column: 7)
!11397 = !DILocation(line: 916, column: 7, scope: !11346)
!11398 = !DILocation(line: 921, column: 23, scope: !11346)
!11399 = !DILocation(line: 921, column: 9, scope: !11346)
!11400 = !DILocation(line: 923, column: 11, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 923, column: 7)
!11402 = !DILocation(line: 923, column: 7, scope: !11346)
!11403 = !DILocation(line: 927, column: 28, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 927, column: 7)
!11405 = !DILocation(line: 927, column: 8, scope: !11404)
!11406 = !DILocation(line: 927, column: 7, scope: !11346)
!11407 = !DILocation(line: 932, column: 20, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 932, column: 7)
!11409 = !DILocation(line: 932, column: 7, scope: !11346)
!11410 = !DILocation(line: 933, column: 30, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 933, column: 9)
!11412 = !DILocation(line: 933, column: 10, scope: !11411)
!11413 = !DILocation(line: 933, column: 9, scope: !11408)
!11414 = !DILocation(line: 937, column: 3, scope: !11346)
!11415 = !DILocation(line: 938, column: 1, scope: !11346)
!11416 = distinct !DISubprogram(name: "expand_doubleword_shift_condmove", scope: !3, file: !3, line: 949, type: !11417, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11419)
!11417 = !DISubroutineType(types: !11418)
!11418 = !{!2071, !5, !3291, !384, !2090, !2090, !2090, !2090, !2090, !2090, !2090, !2090, !2072, !2047, !2081}
!11419 = !{!11420, !11421, !11422, !11423, !11424, !11425, !11426, !11427, !11428, !11429, !11430, !11431, !11432, !11433, !11434, !11435}
!11420 = !DILocalVariable(name: "op1_mode", arg: 1, scope: !11416, file: !3, line: 949, type: !5)
!11421 = !DILocalVariable(name: "binoptab", arg: 2, scope: !11416, file: !3, line: 949, type: !3291)
!11422 = !DILocalVariable(name: "cmp_code", arg: 3, scope: !11416, file: !3, line: 950, type: !384)
!11423 = !DILocalVariable(name: "cmp1", arg: 4, scope: !11416, file: !3, line: 950, type: !2090)
!11424 = !DILocalVariable(name: "cmp2", arg: 5, scope: !11416, file: !3, line: 950, type: !2090)
!11425 = !DILocalVariable(name: "outof_input", arg: 6, scope: !11416, file: !3, line: 951, type: !2090)
!11426 = !DILocalVariable(name: "into_input", arg: 7, scope: !11416, file: !3, line: 951, type: !2090)
!11427 = !DILocalVariable(name: "subword_op1", arg: 8, scope: !11416, file: !3, line: 952, type: !2090)
!11428 = !DILocalVariable(name: "superword_op1", arg: 9, scope: !11416, file: !3, line: 952, type: !2090)
!11429 = !DILocalVariable(name: "outof_target", arg: 10, scope: !11416, file: !3, line: 953, type: !2090)
!11430 = !DILocalVariable(name: "into_target", arg: 11, scope: !11416, file: !3, line: 953, type: !2090)
!11431 = !DILocalVariable(name: "unsignedp", arg: 12, scope: !11416, file: !3, line: 954, type: !2072)
!11432 = !DILocalVariable(name: "methods", arg: 13, scope: !11416, file: !3, line: 954, type: !2047)
!11433 = !DILocalVariable(name: "shift_mask", arg: 14, scope: !11416, file: !3, line: 955, type: !2081)
!11434 = !DILocalVariable(name: "outof_superword", scope: !11416, file: !3, line: 957, type: !2090)
!11435 = !DILocalVariable(name: "into_superword", scope: !11416, file: !3, line: 957, type: !2090)
!11436 = !DILocation(line: 0, scope: !11416)
!11437 = !DILocation(line: 961, column: 34, scope: !11416)
!11438 = !DILocation(line: 961, column: 21, scope: !11416)
!11439 = !DILocation(line: 961, column: 54, scope: !11416)
!11440 = !DILocation(line: 961, column: 41, scope: !11416)
!11441 = !DILocation(line: 962, column: 20, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 962, column: 7)
!11443 = !DILocation(line: 962, column: 40, scope: !11442)
!11444 = !DILocation(line: 962, column: 25, scope: !11442)
!11445 = !DILocation(line: 967, column: 12, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11447, file: !3, line: 967, column: 11)
!11447 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 963, column: 5)
!11448 = !DILocation(line: 967, column: 11, scope: !11447)
!11449 = !DILocation(line: 973, column: 37, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 972, column: 5)
!11451 = !DILocation(line: 973, column: 24, scope: !11450)
!11452 = !DILocation(line: 974, column: 12, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11450, file: !3, line: 974, column: 11)
!11454 = !DILocation(line: 974, column: 11, scope: !11450)
!11455 = !DILocation(line: 0, scope: !11442)
!11456 = !DILocation(line: 981, column: 8, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 981, column: 7)
!11458 = !DILocation(line: 981, column: 7, scope: !11416)
!11459 = !DILocation(line: 990, column: 39, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 989, column: 7)
!11461 = !DILocation(line: 989, column: 8, scope: !11460)
!11462 = !DILocation(line: 989, column: 7, scope: !11416)
!11463 = !DILocation(line: 993, column: 7, scope: !11416)
!11464 = !DILocation(line: 996, column: 5, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 994, column: 9)
!11466 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 993, column: 7)
!11467 = !DILocation(line: 994, column: 10, scope: !11465)
!11468 = !DILocation(line: 994, column: 9, scope: !11466)
!11469 = !DILocation(line: 999, column: 3, scope: !11416)
!11470 = !DILocation(line: 1000, column: 1, scope: !11416)
!11471 = distinct !DISubprogram(name: "lowpart_subreg_maybe_copy", scope: !3, file: !3, line: 2907, type: !11472, scopeLine: 2909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11474)
!11472 = !DISubroutineType(types: !11473)
!11473 = !{!2090, !5, !2090, !5}
!11474 = !{!11475, !11476, !11477, !11478}
!11475 = !DILocalVariable(name: "omode", arg: 1, scope: !11471, file: !3, line: 2907, type: !5)
!11476 = !DILocalVariable(name: "val", arg: 2, scope: !11471, file: !3, line: 2907, type: !2090)
!11477 = !DILocalVariable(name: "imode", arg: 3, scope: !11471, file: !3, line: 2908, type: !5)
!11478 = !DILocalVariable(name: "ret", scope: !11471, file: !3, line: 2910, type: !2090)
!11479 = !DILocation(line: 0, scope: !11471)
!11480 = !DILocation(line: 2911, column: 9, scope: !11471)
!11481 = !DILocation(line: 2912, column: 11, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 2912, column: 7)
!11483 = !DILocation(line: 2912, column: 7, scope: !11471)
!11484 = !DILocation(line: 2914, column: 13, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 2913, column: 5)
!11486 = !DILocation(line: 2915, column: 13, scope: !11485)
!11487 = !DILocation(line: 2916, column: 7, scope: !11485)
!11488 = !DILocation(line: 2918, column: 3, scope: !11471)
!11489 = distinct !DISubprogram(name: "prepare_float_lib_cmp", scope: !3, file: !3, line: 4353, type: !11490, scopeLine: 4355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11492)
!11490 = !DISubroutineType(types: !11491)
!11491 = !{null, !2090, !2090, !384, !3238, !7714}
!11492 = !{!11493, !11494, !11495, !11496, !11497, !11498, !11499, !11500, !11501, !11502, !11503, !11504, !11505, !11506, !11507, !11508, !11509, !11515, !11518, !11522}
!11493 = !DILocalVariable(name: "x", arg: 1, scope: !11489, file: !3, line: 4353, type: !2090)
!11494 = !DILocalVariable(name: "y", arg: 2, scope: !11489, file: !3, line: 4353, type: !2090)
!11495 = !DILocalVariable(name: "comparison", arg: 3, scope: !11489, file: !3, line: 4353, type: !384)
!11496 = !DILocalVariable(name: "ptest", arg: 4, scope: !11489, file: !3, line: 4354, type: !3238)
!11497 = !DILocalVariable(name: "pmode", arg: 5, scope: !11489, file: !3, line: 4354, type: !7714)
!11498 = !DILocalVariable(name: "swapped", scope: !11489, file: !3, line: 4356, type: !384)
!11499 = !DILocalVariable(name: "reversed", scope: !11489, file: !3, line: 4357, type: !384)
!11500 = !DILocalVariable(name: "orig_mode", scope: !11489, file: !3, line: 4358, type: !5)
!11501 = !DILocalVariable(name: "mode", scope: !11489, file: !3, line: 4359, type: !5)
!11502 = !DILocalVariable(name: "cmp_mode", scope: !11489, file: !3, line: 4359, type: !5)
!11503 = !DILocalVariable(name: "value", scope: !11489, file: !3, line: 4360, type: !2090)
!11504 = !DILocalVariable(name: "target", scope: !11489, file: !3, line: 4360, type: !2090)
!11505 = !DILocalVariable(name: "insns", scope: !11489, file: !3, line: 4360, type: !2090)
!11506 = !DILocalVariable(name: "equiv", scope: !11489, file: !3, line: 4360, type: !2090)
!11507 = !DILocalVariable(name: "libfunc", scope: !11489, file: !3, line: 4361, type: !2090)
!11508 = !DILocalVariable(name: "reversed_p", scope: !11489, file: !3, line: 4362, type: !2071)
!11509 = !DILocalVariable(name: "tmp", scope: !11510, file: !3, line: 4376, type: !2090)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 4375, column: 2)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 4373, column: 11)
!11512 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 4368, column: 5)
!11513 = distinct !DILexicalBlock(scope: !11514, file: !3, line: 4365, column: 3)
!11514 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 4365, column: 3)
!11515 = !DILocalVariable(name: "temp", scope: !11516, file: !3, line: 4405, type: !2090)
!11516 = distinct !DILexicalBlock(scope: !11517, file: !3, line: 4404, column: 5)
!11517 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 4403, column: 7)
!11518 = !DILocalVariable(name: "true_rtx", scope: !11519, file: !3, line: 4415, type: !2090)
!11519 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 4414, column: 2)
!11520 = distinct !DILexicalBlock(scope: !11521, file: !3, line: 4413, column: 11)
!11521 = distinct !DILexicalBlock(scope: !11517, file: !3, line: 4411, column: 5)
!11522 = !DILocalVariable(name: "false_rtx", scope: !11519, file: !3, line: 4415, type: !2090)
!11523 = !DILocation(line: 0, scope: !11489)
!11524 = !DILocation(line: 4356, column: 27, scope: !11489)
!11525 = !DILocation(line: 4357, column: 28, scope: !11489)
!11526 = !DILocation(line: 4358, column: 33, scope: !11489)
!11527 = !DILocation(line: 4363, column: 22, scope: !11489)
!11528 = !DILocation(line: 4363, column: 14, scope: !11489)
!11529 = !DILocation(line: 4370, column: 33, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 4369, column: 11)
!11531 = !DILocation(line: 4374, column: 33, scope: !11511)
!11532 = !DILocation(line: 0, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 4382, column: 11)
!11534 = !DILocation(line: 4365, column: 8, scope: !11514)
!11535 = !DILocation(line: 0, scope: !11514)
!11536 = !DILocation(line: 4366, column: 13, scope: !11513)
!11537 = !DILocation(line: 4365, column: 3, scope: !11514)
!11538 = !DILocation(line: 4369, column: 11, scope: !11530)
!11539 = !DILocation(line: 4370, column: 4, scope: !11530)
!11540 = !DILocation(line: 4370, column: 18, scope: !11530)
!11541 = !DILocation(line: 4370, column: 16, scope: !11530)
!11542 = !DILocation(line: 4369, column: 11, scope: !11512)
!11543 = !DILocation(line: 4373, column: 11, scope: !11511)
!11544 = !DILocation(line: 4374, column: 4, scope: !11511)
!11545 = !DILocation(line: 4374, column: 18, scope: !11511)
!11546 = !DILocation(line: 4374, column: 16, scope: !11511)
!11547 = !DILocation(line: 4373, column: 11, scope: !11512)
!11548 = !DILocation(line: 0, scope: !11512)
!11549 = !DILocation(line: 4382, column: 11, scope: !11533)
!11550 = !DILocation(line: 4383, column: 4, scope: !11533)
!11551 = !DILocation(line: 4383, column: 18, scope: !11533)
!11552 = !DILocation(line: 4384, column: 4, scope: !11533)
!11553 = !DILocation(line: 4367, column: 15, scope: !11513)
!11554 = !DILocation(line: 4365, column: 3, scope: !11513)
!11555 = distinct !{!11555, !11537, !11556}
!11556 = !DILocation(line: 4390, column: 5, scope: !11514)
!11557 = !DILocation(line: 4392, column: 3, scope: !11489)
!11558 = !DILocation(line: 4394, column: 12, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 4394, column: 7)
!11560 = !DILocation(line: 4394, column: 7, scope: !11489)
!11561 = !DILocation(line: 4396, column: 11, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 4395, column: 5)
!11563 = !DILocation(line: 4397, column: 11, scope: !11562)
!11564 = !DILocation(line: 4398, column: 5, scope: !11562)
!11565 = !DILocation(line: 4403, column: 18, scope: !11517)
!11566 = !DILocation(line: 4403, column: 7, scope: !11489)
!11567 = !DILocation(line: 4405, column: 18, scope: !11516)
!11568 = !DILocation(line: 0, scope: !11516)
!11569 = !DILocation(line: 4406, column: 15, scope: !11516)
!11570 = !DILocation(line: 4408, column: 15, scope: !11516)
!11571 = !DILocation(line: 4407, column: 15, scope: !11516)
!11572 = !DILocation(line: 4409, column: 5, scope: !11516)
!11573 = !DILocation(line: 4412, column: 15, scope: !11521)
!11574 = !DILocation(line: 4417, column: 4, scope: !11519)
!11575 = !DILocation(line: 4420, column: 19, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 4418, column: 6)
!11577 = !DILocation(line: 0, scope: !11519)
!11578 = !DILocation(line: 4421, column: 20, scope: !11576)
!11579 = !DILocation(line: 4422, column: 8, scope: !11576)
!11580 = !DILocation(line: 4425, column: 19, scope: !11576)
!11581 = !DILocation(line: 4426, column: 20, scope: !11576)
!11582 = !DILocation(line: 4427, column: 8, scope: !11576)
!11583 = !DILocation(line: 4430, column: 19, scope: !11576)
!11584 = !DILocation(line: 4431, column: 20, scope: !11576)
!11585 = !DILocation(line: 4432, column: 8, scope: !11576)
!11586 = !DILocation(line: 4435, column: 19, scope: !11576)
!11587 = !DILocation(line: 4436, column: 20, scope: !11576)
!11588 = !DILocation(line: 4437, column: 8, scope: !11576)
!11589 = !DILocation(line: 4440, column: 19, scope: !11576)
!11590 = !DILocation(line: 4441, column: 20, scope: !11576)
!11591 = !DILocation(line: 4442, column: 8, scope: !11576)
!11592 = !DILocation(line: 4445, column: 19, scope: !11576)
!11593 = !DILocation(line: 4446, column: 20, scope: !11576)
!11594 = !DILocation(line: 4447, column: 8, scope: !11576)
!11595 = !DILocation(line: 4450, column: 8, scope: !11576)
!11596 = !DILocation(line: 4451, column: 6, scope: !11576)
!11597 = !DILocation(line: 4452, column: 12, scope: !11519)
!11598 = !DILocation(line: 0, scope: !11517)
!11599 = !DILocation(line: 4457, column: 3, scope: !11489)
!11600 = !DILocation(line: 4458, column: 11, scope: !11489)
!11601 = !DILocation(line: 4460, column: 11, scope: !11489)
!11602 = !DILocation(line: 4461, column: 3, scope: !11489)
!11603 = !DILocation(line: 4463, column: 12, scope: !11489)
!11604 = !DILocation(line: 4464, column: 3, scope: !11489)
!11605 = !DILocation(line: 4466, column: 7, scope: !11489)
!11606 = !DILocation(line: 4468, column: 5, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 4466, column: 7)
!11608 = !DILocation(line: 4470, column: 12, scope: !11489)
!11609 = !DILocation(line: 4470, column: 10, scope: !11489)
!11610 = !DILocation(line: 4471, column: 10, scope: !11489)
!11611 = !DILocation(line: 4472, column: 1, scope: !11489)
!11612 = distinct !DISubprogram(name: "gen_fixed_libfunc", scope: !3, file: !3, line: 5591, type: !9867, scopeLine: 5593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11613)
!11613 = !{!11614, !11615, !11616, !11617}
!11614 = !DILocalVariable(name: "optable", arg: 1, scope: !11612, file: !3, line: 5591, type: !3291)
!11615 = !DILocalVariable(name: "opname", arg: 2, scope: !11612, file: !3, line: 5591, type: !2077)
!11616 = !DILocalVariable(name: "suffix", arg: 3, scope: !11612, file: !3, line: 5591, type: !2075)
!11617 = !DILocalVariable(name: "mode", arg: 4, scope: !11612, file: !3, line: 5592, type: !5)
!11618 = !DILocation(line: 0, scope: !11612)
!11619 = !DILocation(line: 5594, column: 8, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11612, file: !3, line: 5594, column: 7)
!11621 = !DILocation(line: 5594, column: 7, scope: !11612)
!11622 = !DILocation(line: 5596, column: 33, scope: !11612)
!11623 = !DILocation(line: 5596, column: 3, scope: !11612)
!11624 = !DILocation(line: 5597, column: 1, scope: !11612)
!11625 = distinct !DISubprogram(name: "gen_libfunc", scope: !3, file: !3, line: 5526, type: !11626, scopeLine: 5527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11628)
!11626 = !DISubroutineType(types: !11627)
!11627 = !{null, !3291, !2077, !2072, !5}
!11628 = !{!11629, !11630, !11631, !11632, !11633, !11634, !11635, !11636, !11637, !11638}
!11629 = !DILocalVariable(name: "optable", arg: 1, scope: !11625, file: !3, line: 5526, type: !3291)
!11630 = !DILocalVariable(name: "opname", arg: 2, scope: !11625, file: !3, line: 5526, type: !2077)
!11631 = !DILocalVariable(name: "suffix", arg: 3, scope: !11625, file: !3, line: 5526, type: !2072)
!11632 = !DILocalVariable(name: "mode", arg: 4, scope: !11625, file: !3, line: 5526, type: !5)
!11633 = !DILocalVariable(name: "opname_len", scope: !11625, file: !3, line: 5528, type: !7)
!11634 = !DILocalVariable(name: "mname", scope: !11625, file: !3, line: 5529, type: !2077)
!11635 = !DILocalVariable(name: "mname_len", scope: !11625, file: !3, line: 5530, type: !7)
!11636 = !DILocalVariable(name: "libfunc_name", scope: !11625, file: !3, line: 5531, type: !2074)
!11637 = !DILocalVariable(name: "p", scope: !11625, file: !3, line: 5532, type: !2074)
!11638 = !DILocalVariable(name: "q", scope: !11625, file: !3, line: 5533, type: !2077)
!11639 = !DILocation(line: 0, scope: !11625)
!11640 = !DILocation(line: 5528, column: 25, scope: !11625)
!11641 = !DILocation(line: 5529, column: 23, scope: !11625)
!11642 = !DILocation(line: 5530, column: 24, scope: !11625)
!11643 = !DILocation(line: 5531, column: 24, scope: !11625)
!11644 = !DILocation(line: 5536, column: 5, scope: !11625)
!11645 = !DILocation(line: 5536, column: 8, scope: !11625)
!11646 = !DILocation(line: 5537, column: 5, scope: !11625)
!11647 = !DILocation(line: 5537, column: 8, scope: !11625)
!11648 = !DILocation(line: 5538, column: 8, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11625, file: !3, line: 5538, column: 3)
!11650 = !DILocation(line: 0, scope: !11649)
!11651 = !DILocation(line: 5538, column: 20, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11649, file: !3, line: 5538, column: 3)
!11653 = !DILocation(line: 5538, column: 3, scope: !11649)
!11654 = !DILocation(line: 5540, column: 3, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11625, file: !3, line: 5540, column: 3)
!11656 = !DILocation(line: 5539, column: 14, scope: !11652)
!11657 = !DILocation(line: 5539, column: 7, scope: !11652)
!11658 = !DILocation(line: 5539, column: 10, scope: !11652)
!11659 = !DILocation(line: 5538, column: 3, scope: !11652)
!11660 = distinct !{!11660, !11653, !11661}
!11661 = !DILocation(line: 5539, column: 14, scope: !11649)
!11662 = !DILocation(line: 0, scope: !11655)
!11663 = !DILocation(line: 5540, column: 19, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 5540, column: 3)
!11665 = !DILocation(line: 5541, column: 12, scope: !11664)
!11666 = !DILocation(line: 5541, column: 7, scope: !11664)
!11667 = !DILocation(line: 5541, column: 10, scope: !11664)
!11668 = !DILocation(line: 5540, column: 24, scope: !11664)
!11669 = !DILocation(line: 5540, column: 3, scope: !11664)
!11670 = distinct !{!11670, !11654, !11671}
!11671 = !DILocation(line: 5541, column: 12, scope: !11655)
!11672 = !DILocation(line: 5542, column: 10, scope: !11625)
!11673 = !DILocation(line: 5542, column: 5, scope: !11625)
!11674 = !DILocation(line: 5542, column: 8, scope: !11625)
!11675 = !DILocation(line: 5543, column: 6, scope: !11625)
!11676 = !DILocation(line: 5546, column: 42, scope: !11625)
!11677 = !DILocation(line: 5546, column: 40, scope: !11625)
!11678 = !DILocation(line: 5546, column: 8, scope: !11625)
!11679 = !DILocation(line: 5545, column: 3, scope: !11625)
!11680 = !DILocation(line: 5547, column: 1, scope: !11625)
!11681 = distinct !DISubprogram(name: "gen_interclass_conv_libfunc", scope: !3, file: !3, line: 5731, type: !10083, scopeLine: 5735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11682)
!11682 = !{!11683, !11684, !11685, !11686, !11687, !11688, !11689, !11690, !11691, !11692, !11693, !11694, !11695, !11696, !11697, !11698, !11699}
!11683 = !DILocalVariable(name: "tab", arg: 1, scope: !11681, file: !3, line: 5731, type: !3772)
!11684 = !DILocalVariable(name: "opname", arg: 2, scope: !11681, file: !3, line: 5732, type: !2077)
!11685 = !DILocalVariable(name: "tmode", arg: 3, scope: !11681, file: !3, line: 5733, type: !5)
!11686 = !DILocalVariable(name: "fmode", arg: 4, scope: !11681, file: !3, line: 5734, type: !5)
!11687 = !DILocalVariable(name: "opname_len", scope: !11681, file: !3, line: 5736, type: !2079)
!11688 = !DILocalVariable(name: "mname_len", scope: !11681, file: !3, line: 5737, type: !2079)
!11689 = !DILocalVariable(name: "fname", scope: !11681, file: !3, line: 5739, type: !2077)
!11690 = !DILocalVariable(name: "tname", scope: !11681, file: !3, line: 5739, type: !2077)
!11691 = !DILocalVariable(name: "q", scope: !11681, file: !3, line: 5740, type: !2077)
!11692 = !DILocalVariable(name: "libfunc_name", scope: !11681, file: !3, line: 5741, type: !2074)
!11693 = !DILocalVariable(name: "suffix", scope: !11681, file: !3, line: 5741, type: !2074)
!11694 = !DILocalVariable(name: "nondec_name", scope: !11681, file: !3, line: 5742, type: !2074)
!11695 = !DILocalVariable(name: "dec_name", scope: !11681, file: !3, line: 5742, type: !2074)
!11696 = !DILocalVariable(name: "nondec_suffix", scope: !11681, file: !3, line: 5742, type: !2074)
!11697 = !DILocalVariable(name: "dec_suffix", scope: !11681, file: !3, line: 5742, type: !2074)
!11698 = !DILocalVariable(name: "p", scope: !11681, file: !3, line: 5743, type: !2074)
!11699 = !DILocalVariable(name: "dec_len", scope: !11681, file: !3, line: 5747, type: !11700)
!11700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2079)
!11701 = !DILocation(line: 0, scope: !11681)
!11702 = !DILocation(line: 5736, column: 23, scope: !11681)
!11703 = !DILocation(line: 5749, column: 23, scope: !11681)
!11704 = !DILocation(line: 5749, column: 15, scope: !11681)
!11705 = !DILocation(line: 5749, column: 56, scope: !11681)
!11706 = !DILocation(line: 5749, column: 48, scope: !11681)
!11707 = !DILocation(line: 5749, column: 46, scope: !11681)
!11708 = !DILocation(line: 5751, column: 17, scope: !11681)
!11709 = !DILocation(line: 5752, column: 18, scope: !11681)
!11710 = !DILocation(line: 5753, column: 3, scope: !11681)
!11711 = !DILocation(line: 5753, column: 18, scope: !11681)
!11712 = !DILocation(line: 5754, column: 12, scope: !11681)
!11713 = !DILocation(line: 5754, column: 3, scope: !11681)
!11714 = !DILocation(line: 5757, column: 14, scope: !11681)
!11715 = !DILocation(line: 5758, column: 15, scope: !11681)
!11716 = !DILocation(line: 5759, column: 3, scope: !11681)
!11717 = !DILocation(line: 5759, column: 15, scope: !11681)
!11718 = !DILocation(line: 5760, column: 12, scope: !11681)
!11719 = !DILocation(line: 5760, column: 3, scope: !11681)
!11720 = !DILocation(line: 5761, column: 12, scope: !11681)
!11721 = !DILocation(line: 5761, column: 3, scope: !11681)
!11722 = !DILocation(line: 5762, column: 25, scope: !11681)
!11723 = !DILocation(line: 5762, column: 35, scope: !11681)
!11724 = !DILocation(line: 5762, column: 48, scope: !11681)
!11725 = !DILocation(line: 5767, column: 7, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11681, file: !3, line: 5767, column: 7)
!11727 = !DILocation(line: 5767, column: 35, scope: !11726)
!11728 = !DILocation(line: 5755, column: 31, scope: !11681)
!11729 = !DILocation(line: 5755, column: 44, scope: !11681)
!11730 = !DILocation(line: 5767, column: 38, scope: !11726)
!11731 = !DILocation(line: 5767, column: 7, scope: !11681)
!11732 = !DILocation(line: 0, scope: !11726)
!11733 = !DILocation(line: 5779, column: 8, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11681, file: !3, line: 5779, column: 3)
!11735 = !DILocation(line: 0, scope: !11734)
!11736 = !DILocation(line: 5779, column: 19, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11734, file: !3, line: 5779, column: 3)
!11738 = !DILocation(line: 5779, column: 3, scope: !11734)
!11739 = !DILocation(line: 5781, column: 3, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11681, file: !3, line: 5781, column: 3)
!11741 = !DILocation(line: 5780, column: 10, scope: !11737)
!11742 = !DILocation(line: 5780, column: 8, scope: !11737)
!11743 = !DILocation(line: 5779, column: 24, scope: !11737)
!11744 = !DILocation(line: 5779, column: 29, scope: !11737)
!11745 = !DILocation(line: 5779, column: 3, scope: !11737)
!11746 = distinct !{!11746, !11738, !11747}
!11747 = !DILocation(line: 5780, column: 10, scope: !11734)
!11748 = !DILocation(line: 0, scope: !11740)
!11749 = !DILocation(line: 5781, column: 19, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 5781, column: 3)
!11751 = !DILocation(line: 5782, column: 10, scope: !11750)
!11752 = !DILocation(line: 5782, column: 8, scope: !11750)
!11753 = !DILocation(line: 5781, column: 24, scope: !11750)
!11754 = !DILocation(line: 5781, column: 29, scope: !11750)
!11755 = !DILocation(line: 5781, column: 3, scope: !11750)
!11756 = distinct !{!11756, !11739, !11757}
!11757 = !DILocation(line: 5782, column: 10, scope: !11740)
!11758 = !DILocation(line: 5784, column: 6, scope: !11681)
!11759 = !DILocation(line: 5787, column: 41, scope: !11681)
!11760 = !DILocation(line: 5787, column: 39, scope: !11681)
!11761 = !DILocation(line: 5787, column: 7, scope: !11681)
!11762 = !DILocation(line: 5786, column: 3, scope: !11681)
!11763 = !DILocation(line: 5788, column: 1, scope: !11681)
!11764 = distinct !DISubprogram(name: "gen_intraclass_conv_libfunc", scope: !3, file: !3, line: 5858, type: !10083, scopeLine: 5860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11765)
!11765 = !{!11766, !11767, !11768, !11769, !11770, !11771, !11772, !11773, !11774, !11775, !11776, !11777, !11778, !11779, !11780, !11781, !11782}
!11766 = !DILocalVariable(name: "tab", arg: 1, scope: !11764, file: !3, line: 5858, type: !3772)
!11767 = !DILocalVariable(name: "opname", arg: 2, scope: !11764, file: !3, line: 5858, type: !2077)
!11768 = !DILocalVariable(name: "tmode", arg: 3, scope: !11764, file: !3, line: 5859, type: !5)
!11769 = !DILocalVariable(name: "fmode", arg: 4, scope: !11764, file: !3, line: 5859, type: !5)
!11770 = !DILocalVariable(name: "opname_len", scope: !11764, file: !3, line: 5861, type: !2079)
!11771 = !DILocalVariable(name: "mname_len", scope: !11764, file: !3, line: 5862, type: !2079)
!11772 = !DILocalVariable(name: "fname", scope: !11764, file: !3, line: 5864, type: !2077)
!11773 = !DILocalVariable(name: "tname", scope: !11764, file: !3, line: 5864, type: !2077)
!11774 = !DILocalVariable(name: "q", scope: !11764, file: !3, line: 5865, type: !2077)
!11775 = !DILocalVariable(name: "nondec_name", scope: !11764, file: !3, line: 5866, type: !2074)
!11776 = !DILocalVariable(name: "dec_name", scope: !11764, file: !3, line: 5866, type: !2074)
!11777 = !DILocalVariable(name: "nondec_suffix", scope: !11764, file: !3, line: 5866, type: !2074)
!11778 = !DILocalVariable(name: "dec_suffix", scope: !11764, file: !3, line: 5866, type: !2074)
!11779 = !DILocalVariable(name: "libfunc_name", scope: !11764, file: !3, line: 5867, type: !2074)
!11780 = !DILocalVariable(name: "suffix", scope: !11764, file: !3, line: 5867, type: !2074)
!11781 = !DILocalVariable(name: "p", scope: !11764, file: !3, line: 5868, type: !2074)
!11782 = !DILocalVariable(name: "dec_len", scope: !11764, file: !3, line: 5872, type: !11700)
!11783 = !DILocation(line: 0, scope: !11764)
!11784 = !DILocation(line: 5861, column: 23, scope: !11764)
!11785 = !DILocation(line: 5874, column: 23, scope: !11764)
!11786 = !DILocation(line: 5874, column: 15, scope: !11764)
!11787 = !DILocation(line: 5874, column: 56, scope: !11764)
!11788 = !DILocation(line: 5874, column: 48, scope: !11764)
!11789 = !DILocation(line: 5874, column: 46, scope: !11764)
!11790 = !DILocation(line: 5876, column: 17, scope: !11764)
!11791 = !DILocation(line: 5877, column: 18, scope: !11764)
!11792 = !DILocation(line: 5878, column: 3, scope: !11764)
!11793 = !DILocation(line: 5878, column: 18, scope: !11764)
!11794 = !DILocation(line: 5879, column: 12, scope: !11764)
!11795 = !DILocation(line: 5879, column: 3, scope: !11764)
!11796 = !DILocation(line: 5882, column: 14, scope: !11764)
!11797 = !DILocation(line: 5883, column: 15, scope: !11764)
!11798 = !DILocation(line: 5884, column: 3, scope: !11764)
!11799 = !DILocation(line: 5884, column: 15, scope: !11764)
!11800 = !DILocation(line: 5885, column: 12, scope: !11764)
!11801 = !DILocation(line: 5885, column: 3, scope: !11764)
!11802 = !DILocation(line: 5886, column: 12, scope: !11764)
!11803 = !DILocation(line: 5886, column: 3, scope: !11764)
!11804 = !DILocation(line: 5887, column: 25, scope: !11764)
!11805 = !DILocation(line: 5887, column: 35, scope: !11764)
!11806 = !DILocation(line: 5887, column: 48, scope: !11764)
!11807 = !DILocation(line: 5892, column: 7, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 5892, column: 7)
!11809 = !DILocation(line: 5892, column: 35, scope: !11808)
!11810 = !DILocation(line: 5880, column: 31, scope: !11764)
!11811 = !DILocation(line: 5880, column: 44, scope: !11764)
!11812 = !DILocation(line: 5892, column: 38, scope: !11808)
!11813 = !DILocation(line: 5892, column: 7, scope: !11764)
!11814 = !DILocation(line: 0, scope: !11808)
!11815 = !DILocation(line: 5904, column: 8, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 5904, column: 3)
!11817 = !DILocation(line: 0, scope: !11816)
!11818 = !DILocation(line: 5904, column: 19, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 5904, column: 3)
!11820 = !DILocation(line: 5904, column: 3, scope: !11816)
!11821 = !DILocation(line: 5906, column: 3, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 5906, column: 3)
!11823 = !DILocation(line: 5905, column: 10, scope: !11819)
!11824 = !DILocation(line: 5905, column: 8, scope: !11819)
!11825 = !DILocation(line: 5904, column: 24, scope: !11819)
!11826 = !DILocation(line: 5904, column: 29, scope: !11819)
!11827 = !DILocation(line: 5904, column: 3, scope: !11819)
!11828 = distinct !{!11828, !11820, !11829}
!11829 = !DILocation(line: 5905, column: 10, scope: !11816)
!11830 = !DILocation(line: 0, scope: !11822)
!11831 = !DILocation(line: 5906, column: 19, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11822, file: !3, line: 5906, column: 3)
!11833 = !DILocation(line: 5907, column: 10, scope: !11832)
!11834 = !DILocation(line: 5907, column: 8, scope: !11832)
!11835 = !DILocation(line: 5906, column: 24, scope: !11832)
!11836 = !DILocation(line: 5906, column: 29, scope: !11832)
!11837 = !DILocation(line: 5906, column: 3, scope: !11832)
!11838 = distinct !{!11838, !11821, !11839}
!11839 = !DILocation(line: 5907, column: 10, scope: !11822)
!11840 = !DILocation(line: 5909, column: 5, scope: !11764)
!11841 = !DILocation(line: 5909, column: 8, scope: !11764)
!11842 = !DILocation(line: 5910, column: 6, scope: !11764)
!11843 = !DILocation(line: 5913, column: 41, scope: !11764)
!11844 = !DILocation(line: 5913, column: 39, scope: !11764)
!11845 = !DILocation(line: 5913, column: 7, scope: !11764)
!11846 = !DILocation(line: 5912, column: 3, scope: !11764)
!11847 = !DILocation(line: 5914, column: 1, scope: !11764)
!11848 = distinct !DISubprogram(name: "get_rtx_code", scope: !3, file: !3, line: 6797, type: !11849, scopeLine: 6798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11851)
!11849 = !DISubroutineType(types: !11850)
!11850 = !{!384, !190, !2071}
!11851 = !{!11852, !11853, !11854}
!11852 = !DILocalVariable(name: "tcode", arg: 1, scope: !11848, file: !3, line: 6797, type: !190)
!11853 = !DILocalVariable(name: "unsignedp", arg: 2, scope: !11848, file: !3, line: 6797, type: !2071)
!11854 = !DILocalVariable(name: "code", scope: !11848, file: !3, line: 6799, type: !384)
!11855 = !DILocation(line: 0, scope: !11848)
!11856 = !DILocation(line: 6800, column: 3, scope: !11848)
!11857 = !DILocation(line: 6807, column: 7, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11848, file: !3, line: 6801, column: 5)
!11859 = !DILocation(line: 6809, column: 14, scope: !11858)
!11860 = !DILocation(line: 6810, column: 7, scope: !11858)
!11861 = !DILocation(line: 6812, column: 14, scope: !11858)
!11862 = !DILocation(line: 6813, column: 7, scope: !11858)
!11863 = !DILocation(line: 6815, column: 14, scope: !11858)
!11864 = !DILocation(line: 6816, column: 7, scope: !11858)
!11865 = !DILocation(line: 6818, column: 14, scope: !11858)
!11866 = !DILocation(line: 6819, column: 7, scope: !11858)
!11867 = !DILocation(line: 6823, column: 7, scope: !11858)
!11868 = !DILocation(line: 6826, column: 7, scope: !11858)
!11869 = !DILocation(line: 6829, column: 7, scope: !11858)
!11870 = !DILocation(line: 6832, column: 7, scope: !11858)
!11871 = !DILocation(line: 6835, column: 7, scope: !11858)
!11872 = !DILocation(line: 6838, column: 7, scope: !11858)
!11873 = !DILocation(line: 6841, column: 7, scope: !11858)
!11874 = !DILocation(line: 6844, column: 7, scope: !11858)
!11875 = !DILocation(line: 6847, column: 7, scope: !11858)
!11876 = !DILocation(line: 6848, column: 5, scope: !11858)
!11877 = !DILocation(line: 6849, column: 3, scope: !11848)
!11878 = distinct !DISubprogram(name: "expand_expr", scope: !2048, file: !2048, line: 555, type: !11879, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11881)
!11879 = !DISubroutineType(types: !11880)
!11880 = !{!2090, !2205, !2090, !5, !2060}
!11881 = !{!11882, !11883, !11884, !11885}
!11882 = !DILocalVariable(name: "exp", arg: 1, scope: !11878, file: !2048, line: 555, type: !2205)
!11883 = !DILocalVariable(name: "target", arg: 2, scope: !11878, file: !2048, line: 555, type: !2090)
!11884 = !DILocalVariable(name: "mode", arg: 3, scope: !11878, file: !2048, line: 555, type: !5)
!11885 = !DILocalVariable(name: "modifier", arg: 4, scope: !11878, file: !2048, line: 556, type: !2060)
!11886 = !DILocation(line: 0, scope: !11878)
!11887 = !DILocation(line: 558, column: 10, scope: !11878)
!11888 = !DILocation(line: 558, column: 3, scope: !11878)
