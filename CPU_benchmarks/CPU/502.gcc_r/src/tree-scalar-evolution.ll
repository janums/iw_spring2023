; ModuleID = 'tree-scalar-evolution.bc'
source_filename = "tree-scalar-evolution.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.real_value = type { i32, [3 x i64] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.tree_niter_desc = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.double_int, %struct.affine_iv, %union.tree_node*, i32 }
%struct.affine_iv = type { %union.tree_node*, %union.tree_node*, i8 }
%struct.tree_ssa_name = type { %struct.tree_common, %union.tree_node*, %union.gimple_statement_d*, i32, %struct.ptr_info_def*, %struct.ssa_use_operand_d }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.chrec_stats = type { i32, i32, i32, i32, i32, i32 }
%struct.scev_info_str = type { %struct.basic_block_def*, %union.tree_node*, %union.tree_node* }
%struct.loop_iterator = type { %struct.VEC_int_heap*, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.VEC_gimple_heap = type { %struct.VEC_gimple_base }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@chrec_dont_know = common dso_local local_unnamed_addr global %union.tree_node* null, align 8, !dbg !0
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [29 x i8] c"(get_loop_exit_condition \0A  \00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"(analyze_scalar_evolution \0A\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"  (loop_nb = %d)\0A\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"  (scalar = \00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"(instantiate_scev \0A\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"  (instantiate_below = %d)\0A\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"  (evolution_loop = %d)\0A\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"  (chrec = \00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"  (res = \00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"))\0A\00", align 1
@.str.11 = private unnamed_addr constant [31 x i8] c"(number_of_iterations_in_loop\0A\00", align 1
@scalar_evolution_info = internal global %struct.htab* null, align 8, !dbg !1887
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@flag_wrapv = external dso_local local_unnamed_addr global i32, align 4
@flag_trapv = external dso_local local_unnamed_addr global i32, align 4
@flag_strict_overflow = external dso_local local_unnamed_addr global i32, align 4
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.12 = private unnamed_addr constant [24 x i8] c"tree-scalar-evolution.c\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@gt_ggc_r_gt_tree_scalar_evolution_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.htab** @scalar_evolution_info to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P13scev_info_str4htab, void (i8*)* @gt_pch_n_P13scev_info_str4htab }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !1869
@chrec_not_analyzed_yet = common dso_local local_unnamed_addr global %union.tree_node* null, align 8, !dbg !1883
@chrec_known = common dso_local local_unnamed_addr global %union.tree_node* null, align 8, !dbg !1885
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"(get_scalar_evolution \0A\00", align 1
@nb_get_scev = internal unnamed_addr global i32 0, align 4, !dbg !1889
@.str.15 = private unnamed_addr constant [23 x i8] c"  (scalar_evolution = \00", align 1
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.16 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.17 = private unnamed_addr constant [29 x i8] c"(analyze_initial_condition \0A\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"  (loop_phi_node = \0A\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"  (init_cond = \00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"(analyze_evolution_in_loop \0A\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"  (loop_phi_node = \00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"  (evolution_function = \00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.23 = private unnamed_addr constant [20 x i8] c"(add_to_evolution \0A\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"  (chrec_before = \00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c")\0A  (to_add = \00", align 1
@dconstm1 = external dso_local global %struct.real_value, align 8
@dconst0 = external dso_local global %struct.real_value, align 8
@.str.26 = private unnamed_addr constant [15 x i8] c"./tree-chrec.h\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"(set_scalar_evolution \0A\00", align 1
@.str.28 = private unnamed_addr constant [28 x i8] c"  instantiated_below = %d \0A\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c")\0A  (scalar_evolution = \00", align 1
@nb_set_scev = internal unnamed_addr global i32 0, align 4, !dbg !1891
@.str.30 = private unnamed_addr constant [32 x i8] c"  (set_nb_iterations_in_loop = \00", align 1
@.str.31 = private unnamed_addr constant [17 x i8] c"(classify_chrec \00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.33 = private unnamed_addr constant [21 x i8] c"  affine_univariate\0A\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"  affine_multivariate\0A\00", align 1
@.str.35 = private unnamed_addr constant [28 x i8] c"  higher_degree_polynomial\0A\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"  undetermined\0A\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"\0A(\0A\00", align 1
@.str.38 = private unnamed_addr constant [43 x i8] c"-----------------------------------------\0A\00", align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"%d\09affine univariate chrecs\0A\00", align 1
@.str.40 = private unnamed_addr constant [31 x i8] c"%d\09affine multivariate chrecs\0A\00", align 1
@.str.41 = private unnamed_addr constant [38 x i8] c"%d\09degree greater than 2 polynomials\0A\00", align 1
@.str.42 = private unnamed_addr constant [27 x i8] c"%d\09chrec_dont_know chrecs\0A\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"%d\09total chrecs\0A\00", align 1
@.str.44 = private unnamed_addr constant [35 x i8] c"%d\09with undetermined coefficients\0A\00", align 1
@.str.45 = private unnamed_addr constant [32 x i8] c"%d\09chrecs in the scev database\0A\00", align 1
@.str.46 = private unnamed_addr constant [30 x i8] c"%d\09sets in the scev database\0A\00", align 1
@.str.47 = private unnamed_addr constant [30 x i8] c"%d\09gets in the scev database\0A\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c")\0A\0A\00", align 1
@.str.49 = private unnamed_addr constant [29 x i8] c"%d\09nb_chrec_dont_know_loops\0A\00", align 1
@.str.50 = private unnamed_addr constant [20 x i8] c"%d\09nb_static_loops\0A\00", align 1
@.str.51 = private unnamed_addr constant [19 x i8] c"%d\09nb_total_loops\0A\00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !1897 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !1910, metadata !DIExpression()), !dbg !1912
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !1911, metadata !DIExpression()), !dbg !1912
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1913
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !1914
  ret i32 %call, !dbg !1915
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !1916 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1920
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !1921
  ret i32 %call, !dbg !1922
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1923 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !1978, metadata !DIExpression()), !dbg !1979
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !1980
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1980
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !1980
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !1980
  %cmp = icmp uge i8* %0, %1, !dbg !1980
  %conv1 = zext i1 %cmp to i64, !dbg !1980
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1980
  %tobool = icmp eq i64 %expval, 0, !dbg !1980
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1980

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !1980
  br label %cond.end, !dbg !1980

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1980
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1980
  %2 = load i8, i8* %0, align 1, !dbg !1980
  %conv3 = zext i8 %2 to i32, !dbg !1980
  br label %cond.end, !dbg !1980

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1980
  ret i32 %cond, !dbg !1981
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1982 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !1984, metadata !DIExpression()), !dbg !1985
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !1986
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1986
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !1986
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !1986
  %cmp = icmp uge i8* %0, %1, !dbg !1986
  %conv1 = zext i1 %cmp to i64, !dbg !1986
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1986
  %tobool = icmp eq i64 %expval, 0, !dbg !1986
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1986

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !1986
  br label %cond.end, !dbg !1986

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1986
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1986
  %2 = load i8, i8* %0, align 1, !dbg !1986
  %conv3 = zext i8 %2 to i32, !dbg !1986
  br label %cond.end, !dbg !1986

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1986
  ret i32 %cond, !dbg !1987
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !1988 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1989
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !1989
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1989
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !1989
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !1989
  %cmp = icmp uge i8* %1, %2, !dbg !1989
  %conv1 = zext i1 %cmp to i64, !dbg !1989
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1989
  %tobool = icmp eq i64 %expval, 0, !dbg !1989
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1989

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !1989
  br label %cond.end, !dbg !1989

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1989
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1989
  %3 = load i8, i8* %1, align 1, !dbg !1989
  %conv3 = zext i8 %3 to i32, !dbg !1989
  br label %cond.end, !dbg !1989

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1989
  ret i32 %cond, !dbg !1990
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !1991 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1995, metadata !DIExpression()), !dbg !1996
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1997
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !1998
  ret i32 %call, !dbg !1999
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2000 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2004, metadata !DIExpression()), !dbg !2006
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2005, metadata !DIExpression()), !dbg !2006
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2007
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2007
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2007
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2007
  %cmp = icmp uge i8* %0, %1, !dbg !2007
  %conv1 = zext i1 %cmp to i64, !dbg !2007
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2007
  %tobool = icmp eq i64 %expval, 0, !dbg !2007
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2007

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2007
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2007
  br label %cond.end, !dbg !2007

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2007
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2007
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2007
  store i8 %conv2, i8* %0, align 1, !dbg !2007
  %conv6 = and i32 %__c, 255, !dbg !2007
  br label %cond.end, !dbg !2007

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2007
  ret i32 %cond, !dbg !2008
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2009 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2011, metadata !DIExpression()), !dbg !2013
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2012, metadata !DIExpression()), !dbg !2013
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2014
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2014
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2014
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2014
  %cmp = icmp uge i8* %0, %1, !dbg !2014
  %conv1 = zext i1 %cmp to i64, !dbg !2014
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2014
  %tobool = icmp eq i64 %expval, 0, !dbg !2014
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2014

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2014
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2014
  br label %cond.end, !dbg !2014

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2014
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2014
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2014
  store i8 %conv2, i8* %0, align 1, !dbg !2014
  %conv6 = and i32 %__c, 255, !dbg !2014
  br label %cond.end, !dbg !2014

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2014
  ret i32 %cond, !dbg !2015
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2016 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2018, metadata !DIExpression()), !dbg !2019
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2020
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2020
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2020
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2020
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2020
  %cmp = icmp uge i8* %1, %2, !dbg !2020
  %conv1 = zext i1 %cmp to i64, !dbg !2020
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2020
  %tobool = icmp eq i64 %expval, 0, !dbg !2020
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2020

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2020
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2020
  br label %cond.end, !dbg !2020

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2020
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2020
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2020
  store i8 %conv4, i8* %1, align 1, !dbg !2020
  %conv6 = and i32 %__c, 255, !dbg !2020
  br label %cond.end, !dbg !2020

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2020
  ret i32 %cond, !dbg !2021
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2022 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2028, metadata !DIExpression()), !dbg !2031
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2029, metadata !DIExpression()), !dbg !2031
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2030, metadata !DIExpression()), !dbg !2031
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2032
  ret i64 %call, !dbg !2033
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2034 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2036, metadata !DIExpression()), !dbg !2037
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2038
  %0 = load i32, i32* %_flags, align 8, !dbg !2038
  %and = lshr i32 %0, 4, !dbg !2038
  %and.lobit = and i32 %and, 1, !dbg !2038
  ret i32 %and.lobit, !dbg !2039
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2040 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2042, metadata !DIExpression()), !dbg !2043
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2044
  %0 = load i32, i32* %_flags, align 8, !dbg !2044
  %and = lshr i32 %0, 5, !dbg !2044
  %and.lobit = and i32 %and, 1, !dbg !2044
  ret i32 %and.lobit, !dbg !2045
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2046 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2049, metadata !DIExpression()), !dbg !2050
  %__c.off = add i32 %__c, 128, !dbg !2051
  %0 = icmp ult i32 %__c.off, 384, !dbg !2051
  br i1 %0, label %cond.true, label %cond.end, !dbg !2051

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2052
  %1 = load i32*, i32** %call, align 8, !dbg !2053
  %idxprom = sext i32 %__c to i64, !dbg !2054
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2054
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2054
  br label %cond.end, !dbg !2055

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2055
  ret i32 %cond, !dbg !2056
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2057 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2059, metadata !DIExpression()), !dbg !2060
  %__c.off = add i32 %__c, 128, !dbg !2061
  %0 = icmp ult i32 %__c.off, 384, !dbg !2061
  br i1 %0, label %cond.true, label %cond.end, !dbg !2061

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2062
  %1 = load i32*, i32** %call, align 8, !dbg !2063
  %idxprom = sext i32 %__c to i64, !dbg !2064
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2064
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2064
  br label %cond.end, !dbg !2065

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2065
  ret i32 %cond, !dbg !2066
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2067 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2072, metadata !DIExpression()), !dbg !2073
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2074
  %conv = trunc i64 %call to i32, !dbg !2075
  ret i32 %conv, !dbg !2076
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2077 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2081, metadata !DIExpression()), !dbg !2082
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2083
  ret i64 %call, !dbg !2084
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2085 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2090, metadata !DIExpression()), !dbg !2091
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2092
  ret i64 %call, !dbg !2093
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2094 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2100, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2101, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2102, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2103, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2104, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i64 0, metadata !2105, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2106, metadata !DIExpression()), !dbg !2110
  br label %while.cond, !dbg !2111

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2112
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2110
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2106, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2105, metadata !DIExpression()), !dbg !2110
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2113
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2111

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2114
  %div = lshr i64 %add, 1, !dbg !2116
  call void @llvm.dbg.value(metadata i64 %div, metadata !2107, metadata !DIExpression()), !dbg !2110
  %mul = mul i64 %div, %__size, !dbg !2117
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2118
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2108, metadata !DIExpression()), !dbg !2110
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2119
  call void @llvm.dbg.value(metadata i32 %call, metadata !2109, metadata !DIExpression()), !dbg !2110
  %cmp1 = icmp slt i32 %call, 0, !dbg !2120
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2122

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2123
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2125

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2126
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2105, metadata !DIExpression()), !dbg !2110
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2110
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2110
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2106, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2105, metadata !DIExpression()), !dbg !2110
  br label %while.cond, !dbg !2111, !llvm.loop !2127

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2110
  ret i8* %retval.0, !dbg !2129
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2130 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2136, metadata !DIExpression()), !dbg !2137
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2138
  ret double %call, !dbg !2139
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2140 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2149, metadata !DIExpression()), !dbg !2152
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2150, metadata !DIExpression()), !dbg !2152
  call void @llvm.dbg.value(metadata i32 %base, metadata !2151, metadata !DIExpression()), !dbg !2152
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2153
  ret i64 %call, !dbg !2154
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2155 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2161, metadata !DIExpression()), !dbg !2164
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2162, metadata !DIExpression()), !dbg !2164
  call void @llvm.dbg.value(metadata i32 %base, metadata !2163, metadata !DIExpression()), !dbg !2164
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2165
  ret i64 %call, !dbg !2166
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2167 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2178, metadata !DIExpression()), !dbg !2181
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2179, metadata !DIExpression()), !dbg !2181
  call void @llvm.dbg.value(metadata i32 %base, metadata !2180, metadata !DIExpression()), !dbg !2181
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2182
  ret i64 %call, !dbg !2183
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2184 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2188, metadata !DIExpression()), !dbg !2191
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2189, metadata !DIExpression()), !dbg !2191
  call void @llvm.dbg.value(metadata i32 %base, metadata !2190, metadata !DIExpression()), !dbg !2191
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2192
  ret i64 %call, !dbg !2193
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2194 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2234, metadata !DIExpression()), !dbg !2236
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2235, metadata !DIExpression()), !dbg !2236
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2237
  ret i32 %call, !dbg !2238
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2239 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2241, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2242, metadata !DIExpression()), !dbg !2243
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2244
  ret i32 %call, !dbg !2245
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2246 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2250, metadata !DIExpression()), !dbg !2252
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2251, metadata !DIExpression()), !dbg !2252
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2253
  ret i32 %call, !dbg !2254
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2255 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2259, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2260, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2261, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2262, metadata !DIExpression()), !dbg !2263
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2264
  ret i32 %call, !dbg !2265
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2266 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2270, metadata !DIExpression()), !dbg !2273
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2271, metadata !DIExpression()), !dbg !2273
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2272, metadata !DIExpression()), !dbg !2273
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2272, metadata !DIExpression(DW_OP_deref)), !dbg !2273
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2274
  ret i32 %call, !dbg !2275
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2276 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2280, metadata !DIExpression()), !dbg !2284
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2281, metadata !DIExpression()), !dbg !2284
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2282, metadata !DIExpression()), !dbg !2284
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2283, metadata !DIExpression()), !dbg !2284
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2283, metadata !DIExpression(DW_OP_deref)), !dbg !2284
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2285
  ret i32 %call, !dbg !2286
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2287 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2311, metadata !DIExpression()), !dbg !2313
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2312, metadata !DIExpression()), !dbg !2313
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2314
  ret i32 %call, !dbg !2315
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2316 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2318, metadata !DIExpression()), !dbg !2320
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2319, metadata !DIExpression()), !dbg !2320
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2321
  ret i32 %call, !dbg !2322
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2323 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2327, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2328, metadata !DIExpression()), !dbg !2329
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2330
  ret i32 %call, !dbg !2331
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2332 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2336, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2337, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2338, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2339, metadata !DIExpression()), !dbg !2340
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2341
  ret i32 %call, !dbg !2342
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @chrec_contains_symbols_defined_in_loop(%union.tree_node* %chrec, i32 %loop_nb) local_unnamed_addr #5 !dbg !2343 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !2348, metadata !DIExpression()), !dbg !2357
  call void @llvm.dbg.value(metadata i32 %loop_nb, metadata !2349, metadata !DIExpression()), !dbg !2357
  %cmp = icmp eq %union.tree_node* %chrec, null, !dbg !2358
  br i1 %cmp, label %cleanup62, label %if.end, !dbg !2360

if.end:                                           ; preds = %entry
  %call = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %chrec) #6, !dbg !2361
  %tobool = icmp eq i8 %call, 0, !dbg !2361
  br i1 %tobool, label %if.end2, label %cleanup62, !dbg !2363

if.end2:                                          ; preds = %if.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2364
  %bf.load = load i64, i64* %0, align 8, !dbg !2364
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2366
  %cmp3 = icmp eq i64 %bf.cast1, 32, !dbg !2366
  br i1 %cmp3, label %cleanup62, label %lor.lhs.false, !dbg !2367

lor.lhs.false:                                    ; preds = %if.end2
  %cmp8 = icmp eq i64 %bf.cast1, 34, !dbg !2368
  br i1 %cmp8, label %cleanup62, label %lor.lhs.false9, !dbg !2369

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %cmp14 = icmp eq i64 %bf.cast1, 29, !dbg !2370
  br i1 %cmp14, label %cleanup62, label %lor.lhs.false15, !dbg !2371

lor.lhs.false15:                                  ; preds = %lor.lhs.false9
  %cmp20 = icmp eq i64 %bf.cast1, 30, !dbg !2372
  br i1 %cmp20, label %cleanup62, label %lor.lhs.false21, !dbg !2373

lor.lhs.false21:                                  ; preds = %lor.lhs.false15
  %cmp26 = icmp eq i64 %bf.cast1, 36, !dbg !2374
  br i1 %cmp26, label %cleanup62, label %lor.lhs.false27, !dbg !2375

lor.lhs.false27:                                  ; preds = %lor.lhs.false21
  %cmp32 = icmp eq i64 %bf.cast1, 31, !dbg !2376
  br i1 %cmp32, label %cleanup62, label %if.end34, !dbg !2377

if.end34:                                         ; preds = %lor.lhs.false27
  %cmp39 = icmp eq i64 %bf.cast1, 141, !dbg !2378
  br i1 %cmp39, label %if.then40, label %if.end54, !dbg !2379

if.then40:                                        ; preds = %if.end34
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2380
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !2380
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !2380
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !2352, metadata !DIExpression()), !dbg !2381
  %call41 = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %2) #7, !dbg !2382
  call void @llvm.dbg.value(metadata %struct.loop* %call41, metadata !2355, metadata !DIExpression()), !dbg !2381
  %call42 = tail call fastcc %struct.loop* @get_loop(i32 %loop_nb) #7, !dbg !2383
  call void @llvm.dbg.value(metadata %struct.loop* %call42, metadata !2356, metadata !DIExpression()), !dbg !2381
  %cmp43 = icmp eq %struct.loop* %call41, null, !dbg !2384
  br i1 %cmp43, label %cleanup62, label %if.end45, !dbg !2386

if.end45:                                         ; preds = %if.then40
  %cmp46 = icmp eq %struct.loop* %call42, %call41, !dbg !2387
  br i1 %cmp46, label %cleanup62, label %lor.lhs.false47, !dbg !2389

lor.lhs.false47:                                  ; preds = %if.end45
  %call48 = tail call zeroext i8 @flow_loop_nested_p(%struct.loop* %call42, %struct.loop* nonnull %call41) #6, !dbg !2390
  %tobool49 = icmp ne i8 %call48, 0, !dbg !2390
  %spec.select = zext i1 %tobool49 to i8, !dbg !2391
  ret i8 %spec.select, !dbg !2391

if.end54:                                         ; preds = %if.end34
  %call55 = tail call fastcc i32 @tree_operand_length(%union.tree_node* nonnull %chrec) #7, !dbg !2392
  call void @llvm.dbg.value(metadata i32 %call55, metadata !2351, metadata !DIExpression()), !dbg !2357
  call void @llvm.dbg.value(metadata i32 0, metadata !2350, metadata !DIExpression()), !dbg !2357
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2393
  %3 = sext i32 %call55 to i64, !dbg !2397
  br label %for.cond, !dbg !2397

for.cond:                                         ; preds = %for.inc, %if.end54
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end54 ], !dbg !2398
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2350, metadata !DIExpression()), !dbg !2357
  %cmp56 = icmp slt i64 %indvars.iv, %3, !dbg !2399
  br i1 %cmp56, label %for.body, label %cleanup62.loopexit, !dbg !2400

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %indvars.iv, !dbg !2393
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !2393
  %call58 = tail call zeroext i8 @chrec_contains_symbols_defined_in_loop(%union.tree_node* %4, i32 %loop_nb) #7, !dbg !2401
  %tobool59 = icmp eq i8 %call58, 0, !dbg !2401
  br i1 %tobool59, label %for.inc, label %cleanup62.loopexit, !dbg !2402

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2403
  call void @llvm.dbg.value(metadata i32 undef, metadata !2350, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2357
  br label %for.cond, !dbg !2404, !llvm.loop !2405

cleanup62.loopexit:                               ; preds = %for.cond, %for.body
  %retval.1.ph = phi i8 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup62, !dbg !2407

cleanup62:                                        ; preds = %cleanup62.loopexit, %if.end, %if.then40, %if.end45, %if.end2, %lor.lhs.false, %lor.lhs.false9, %lor.lhs.false15, %lor.lhs.false21, %lor.lhs.false27, %entry
  %retval.1 = phi i8 [ 0, %entry ], [ 0, %if.end ], [ 1, %lor.lhs.false27 ], [ 1, %lor.lhs.false21 ], [ 1, %lor.lhs.false15 ], [ 1, %lor.lhs.false9 ], [ 1, %lor.lhs.false ], [ 1, %if.end2 ], [ 0, %if.then40 ], [ 1, %if.end45 ], [ %retval.1.ph, %cleanup62.loopexit ], !dbg !2357
  ret i8 %retval.1, !dbg !2407
}

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !2408 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2413, metadata !DIExpression()), !dbg !2415
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !2416
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !2414, metadata !DIExpression()), !dbg !2415
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !2417
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2419

if.end:                                           ; preds = %entry
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !2420
  %0 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !2420
  br label %cleanup, !dbg !2421

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.loop* [ %0, %if.end ], [ null, %entry ], !dbg !2415
  ret %struct.loop* %retval.0, !dbg !2422
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_loop(i32 %num) unnamed_addr #0 !dbg !2423 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !2427, metadata !DIExpression()), !dbg !2428
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2429
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !2429
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !2429
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !2429
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !2429
  %tobool = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !2429
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2429

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !2429
  br label %cond.end, !dbg !2429

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2429
  %call = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond, i32 %num) #7, !dbg !2429
  ret %struct.loop* %call, !dbg !2430
}

declare dso_local zeroext i8 @flow_loop_nested_p(%struct.loop*, %struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @tree_operand_length(%union.tree_node* %node) unnamed_addr #0 !dbg !2431 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !2435, metadata !DIExpression()), !dbg !2436
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2437
  %bf.load = load i64, i64* %0, align 8, !dbg !2437
  %bf.cast = and i64 %bf.load, 65535, !dbg !2437
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !2437
  %1 = load i32, i32* %arrayidx, align 4, !dbg !2437
  %cmp = icmp eq i32 %1, 9, !dbg !2437
  br i1 %cmp, label %if.then, label %if.else, !dbg !2439

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2440
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !2440
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !2440
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !2440
  %4 = load i64, i64* %low, align 8, !dbg !2440
  %conv = trunc i64 %4 to i32, !dbg !2440
  br label %return, !dbg !2441

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !2442
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !2442
  %conv9 = zext i8 %5 to i32, !dbg !2442
  br label %return, !dbg !2443

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv9, %if.else ], !dbg !2444
  ret i32 %retval.0, !dbg !2445
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @compute_overall_effect_of_inner_loop(%struct.loop* %loop, %union.tree_node* %evolution_fn) local_unnamed_addr #5 !dbg !2446 {
entry:
  %val = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2450, metadata !DIExpression()), !dbg !2463
  call void @llvm.dbg.value(metadata %union.tree_node* %evolution_fn, metadata !2451, metadata !DIExpression()), !dbg !2463
  call void @llvm.dbg.value(metadata i8* %val, metadata !2452, metadata !DIExpression(DW_OP_deref)), !dbg !2463
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %val) #8, !dbg !2464
  call void @llvm.dbg.value(metadata i8 0, metadata !2452, metadata !DIExpression()), !dbg !2463
  store i8 0, i8* %val, align 1, !dbg !2465
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !2466
  %cmp = icmp eq %union.tree_node* %0, %evolution_fn, !dbg !2467
  br i1 %cmp, label %if.then, label %if.else, !dbg !2468

if.then:                                          ; preds = %entry
  br label %cleanup29, !dbg !2469

if.else:                                          ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %evolution_fn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2470
  %bf.load = load i64, i64* %1, align 8, !dbg !2470
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2471
  %cmp1 = icmp eq i64 %bf.cast1, 146, !dbg !2471
  br i1 %cmp1, label %if.then2, label %if.else20, !dbg !2472

if.then2:                                         ; preds = %if.else
  %call = tail call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %evolution_fn) #7, !dbg !2473
  call void @llvm.dbg.value(metadata %struct.loop* %call, metadata !2453, metadata !DIExpression()), !dbg !2474
  %cmp3 = icmp eq %struct.loop* %call, %loop, !dbg !2475
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !2476

lor.lhs.false:                                    ; preds = %if.then2
  %call4 = tail call zeroext i8 @flow_loop_nested_p(%struct.loop* %loop, %struct.loop* %call) #6, !dbg !2477
  %tobool = icmp eq i8 %call4, 0, !dbg !2477
  br i1 %tobool, label %cleanup29, label %if.then5, !dbg !2478

if.then5:                                         ; preds = %lor.lhs.false, %if.then2
  %call6 = tail call %union.tree_node* @number_of_latch_executions(%struct.loop* %call) #7, !dbg !2479
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !2457, metadata !DIExpression()), !dbg !2480
  %2 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !2481
  %cmp7 = icmp eq %union.tree_node* %call6, %2, !dbg !2482
  br i1 %cmp7, label %if.then9, label %if.else10, !dbg !2483

if.then9:                                         ; preds = %if.then5
  br label %cleanup29, !dbg !2484

if.else10:                                        ; preds = %if.then5
  %num = getelementptr inbounds %struct.loop, %struct.loop* %call, i64 0, i32 0, !dbg !2485
  %3 = load i32, i32* %num, align 8, !dbg !2485
  %call11 = tail call %union.tree_node* @chrec_apply(i32 %3, %union.tree_node* %evolution_fn, %union.tree_node* %call6) #6, !dbg !2486
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !2460, metadata !DIExpression()), !dbg !2487
  %num12 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !2488
  %4 = load i32, i32* %num12, align 8, !dbg !2488
  %call13 = tail call zeroext i8 @chrec_contains_symbols_defined_in_loop(%union.tree_node* %call11, i32 %4) #7, !dbg !2490
  %tobool14 = icmp eq i8 %call13, 0, !dbg !2490
  br i1 %tobool14, label %if.end, label %if.then15, !dbg !2491

if.then15:                                        ; preds = %if.else10
  %call16 = tail call fastcc %union.tree_node* @instantiate_parameters(%struct.loop* %loop, %union.tree_node* %call11) #7, !dbg !2492
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !2460, metadata !DIExpression()), !dbg !2487
  br label %if.end, !dbg !2493

if.end:                                           ; preds = %if.else10, %if.then15
  %res.0 = phi %union.tree_node* [ %call16, %if.then15 ], [ %call11, %if.else10 ], !dbg !2487
  call void @llvm.dbg.value(metadata %union.tree_node* %res.0, metadata !2460, metadata !DIExpression()), !dbg !2487
  %call17 = tail call %union.tree_node* @compute_overall_effect_of_inner_loop(%struct.loop* %loop, %union.tree_node* %res.0) #7, !dbg !2494
  br label %cleanup29

if.else20:                                        ; preds = %if.else
  %num21 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !2495
  %5 = load i32, i32* %num21, align 8, !dbg !2495
  call void @llvm.dbg.value(metadata i8* %val, metadata !2452, metadata !DIExpression(DW_OP_deref)), !dbg !2463
  %call22 = call fastcc zeroext i8 @no_evolution_in_loop_p(%union.tree_node* %evolution_fn, i32 %5, i8* nonnull %val) #7, !dbg !2497
  %tobool24 = icmp eq i8 %call22, 0, !dbg !2497
  br i1 %tobool24, label %if.else28, label %land.lhs.true, !dbg !2498

land.lhs.true:                                    ; preds = %if.else20
  %6 = load i8, i8* %val, align 1, !dbg !2499
  call void @llvm.dbg.value(metadata i8 %6, metadata !2452, metadata !DIExpression()), !dbg !2463
  %tobool26 = icmp eq i8 %6, 0, !dbg !2499
  br i1 %tobool26, label %if.else28, label %cleanup29, !dbg !2500

if.else28:                                        ; preds = %land.lhs.true, %if.else20
  %7 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !2501
  br label %cleanup29, !dbg !2502

cleanup29:                                        ; preds = %lor.lhs.false, %land.lhs.true, %if.end, %if.then9, %if.else28, %if.then
  %retval.2 = phi %union.tree_node* [ %evolution_fn, %if.then ], [ %7, %if.else28 ], [ %call6, %if.then9 ], [ %call17, %if.end ], [ %evolution_fn, %lor.lhs.false ], [ %evolution_fn, %land.lhs.true ], !dbg !2503
  call void @llvm.dbg.value(metadata i8* %val, metadata !2452, metadata !DIExpression(DW_OP_deref)), !dbg !2463
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %val) #8, !dbg !2504
  ret %union.tree_node* %retval.2, !dbg !2504
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %chrec) unnamed_addr #0 !dbg !2505 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !2510, metadata !DIExpression()), !dbg !2511
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2512
  %0 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !2512
  %1 = load %struct.tree_int_cst*, %struct.tree_int_cst** %0, align 8, !dbg !2512
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %1, i64 0, i32 1, i32 0, !dbg !2512
  %2 = load i64, i64* %low, align 8, !dbg !2512
  %conv = trunc i64 %2 to i32, !dbg !2512
  %call = tail call fastcc %struct.loop* @get_loop(i32 %conv) #7, !dbg !2513
  ret %struct.loop* %call, !dbg !2514
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @number_of_latch_executions(%struct.loop* %loop) local_unnamed_addr #5 !dbg !2515 {
entry:
  %niter_desc = alloca %struct.tree_niter_desc, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2519, metadata !DIExpression()), !dbg !2540
  %0 = bitcast %struct.tree_niter_desc* %niter_desc to i8*, !dbg !2541
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %0) #8, !dbg !2541
  %nb_iterations = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 11, !dbg !2542
  %1 = load %union.tree_node*, %union.tree_node** %nb_iterations, align 8, !dbg !2542
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !2520, metadata !DIExpression()), !dbg !2540
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !2543
  br i1 %tobool, label %if.end, label %cleanup, !dbg !2545

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !2546
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !2520, metadata !DIExpression()), !dbg !2540
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2547
  %tobool1 = icmp eq %struct._IO_FILE* %3, null, !dbg !2547
  br i1 %tobool1, label %if.end4, label %land.lhs.true, !dbg !2549

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32, i32* @dump_flags, align 4, !dbg !2550
  %and = and i32 %4, 8, !dbg !2551
  %tobool2 = icmp eq i32 %and, 0, !dbg !2551
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !2552

if.then3:                                         ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !2553
  br label %if.end4, !dbg !2553

if.end4:                                          ; preds = %land.lhs.true, %if.end, %if.then3
  %call5 = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !2554
  call void @llvm.dbg.value(metadata %struct.edge_def* %call5, metadata !2522, metadata !DIExpression()), !dbg !2540
  %tobool6 = icmp eq %struct.edge_def* %call5, null, !dbg !2555
  br i1 %tobool6, label %end, label %if.end8, !dbg !2557

if.end8:                                          ; preds = %if.end4
  call void @llvm.dbg.value(metadata %struct.tree_niter_desc* %niter_desc, metadata !2523, metadata !DIExpression(DW_OP_deref)), !dbg !2540
  %call9 = call zeroext i8 @number_of_iterations_exit(%struct.loop* %loop, %struct.edge_def* nonnull %call5, %struct.tree_niter_desc* nonnull %niter_desc, i8 zeroext 0) #6, !dbg !2558
  %tobool10 = icmp eq i8 %call9, 0, !dbg !2558
  br i1 %tobool10, label %end, label %if.end12, !dbg !2560

if.end12:                                         ; preds = %if.end8
  %niter = getelementptr inbounds %struct.tree_niter_desc, %struct.tree_niter_desc* %niter_desc, i64 0, i32 2, !dbg !2561
  %5 = bitcast %union.tree_node** %niter to %struct.tree_common**, !dbg !2561
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !2561
  %type13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !2561
  %7 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !2561
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !2521, metadata !DIExpression()), !dbg !2540
  %may_be_zero = getelementptr inbounds %struct.tree_niter_desc, %struct.tree_niter_desc* %niter_desc, i64 0, i32 1, !dbg !2562
  %8 = load %union.tree_node*, %union.tree_node** %may_be_zero, align 8, !dbg !2562
  %call14 = call i32 @integer_nonzerop(%union.tree_node* %8) #6, !dbg !2564
  %tobool15 = icmp eq i32 %call14, 0, !dbg !2564
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !2565

if.then16:                                        ; preds = %if.end12
  %call17 = call %union.tree_node* @build_int_cst(%union.tree_node* %7, i64 0) #6, !dbg !2566
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !2520, metadata !DIExpression()), !dbg !2540
  br label %end, !dbg !2567

if.else:                                          ; preds = %if.end12
  %9 = load %union.tree_node*, %union.tree_node** %may_be_zero, align 8, !dbg !2568
  %call19 = call i32 @integer_zerop(%union.tree_node* %9) #6, !dbg !2570
  %tobool20 = icmp eq i32 %call19, 0, !dbg !2570
  %10 = load %union.tree_node*, %union.tree_node** %niter, align 8, !dbg !2571
  %11 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !2571
  %res.0 = select i1 %tobool20, %union.tree_node* %11, %union.tree_node* %10, !dbg !2571
  br label %end, !dbg !2571

end:                                              ; preds = %if.end8, %if.end4, %if.then16, %if.else
  %res.2 = phi %union.tree_node* [ %2, %if.end4 ], [ %2, %if.end8 ], [ %call17, %if.then16 ], [ %res.0, %if.else ], !dbg !2540
  call void @llvm.dbg.value(metadata %union.tree_node* %res.2, metadata !2520, metadata !DIExpression()), !dbg !2540
  call void @llvm.dbg.label(metadata !2539), !dbg !2572
  %call26 = call fastcc %union.tree_node* @set_nb_iterations_in_loop(%struct.loop* %loop, %union.tree_node* %res.2) #7, !dbg !2573
  br label %cleanup, !dbg !2574

cleanup:                                          ; preds = %entry, %end
  %retval.0 = phi %union.tree_node* [ %call26, %end ], [ %1, %entry ], !dbg !2540
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %0) #8, !dbg !2575
  ret %union.tree_node* %retval.0, !dbg !2575
}

declare dso_local %union.tree_node* @chrec_apply(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @instantiate_parameters(%struct.loop* %loop, %union.tree_node* %chrec) unnamed_addr #0 !dbg !2576 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2578, metadata !DIExpression()), !dbg !2580
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !2579, metadata !DIExpression()), !dbg !2580
  %call = tail call fastcc %struct.basic_block_def* @block_before_loop(%struct.loop* %loop) #7, !dbg !2581
  %call1 = tail call %union.tree_node* @instantiate_scev(%struct.basic_block_def* %call, %struct.loop* %loop, %union.tree_node* %chrec) #7, !dbg !2582
  ret %union.tree_node* %call1, !dbg !2583
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @no_evolution_in_loop_p(%union.tree_node* %chrec, i32 %loop_num, i8* %res) unnamed_addr #0 !dbg !2584 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !2589, metadata !DIExpression()), !dbg !2593
  call void @llvm.dbg.value(metadata i32 %loop_num, metadata !2590, metadata !DIExpression()), !dbg !2593
  call void @llvm.dbg.value(metadata i8* %res, metadata !2591, metadata !DIExpression()), !dbg !2593
  %0 = load %union.tree_node*, %union.tree_node** @chrec_not_analyzed_yet, align 8, !dbg !2594
  %cmp = icmp eq %union.tree_node* %0, %chrec, !dbg !2596
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !2597
  %cmp1 = icmp eq %union.tree_node* %1, %chrec, !dbg !2598
  %or.cond = or i1 %cmp, %cmp1, !dbg !2599
  br i1 %or.cond, label %cleanup, label %lor.lhs.false2, !dbg !2599

lor.lhs.false2:                                   ; preds = %entry
  %call = tail call zeroext i8 @chrec_contains_symbols_defined_in_loop(%union.tree_node* %chrec, i32 %loop_num) #7, !dbg !2600
  %tobool = icmp eq i8 %call, 0, !dbg !2600
  br i1 %tobool, label %if.end, label %cleanup, !dbg !2601

if.end:                                           ; preds = %lor.lhs.false2
  %call3 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %chrec) #6, !dbg !2602
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !2589, metadata !DIExpression()), !dbg !2593
  %call4 = tail call %union.tree_node* @hide_evolution_in_other_loops_than_loop(%union.tree_node* %call3, i32 %loop_num) #6, !dbg !2603
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !2592, metadata !DIExpression()), !dbg !2593
  %call5 = tail call fastcc zeroext i8 @tree_is_chrec(%union.tree_node* %call4) #7, !dbg !2604
  %tobool6 = icmp eq i8 %call5, 0, !dbg !2605
  %conv7 = zext i1 %tobool6 to i8, !dbg !2605
  store i8 %conv7, i8* %res, align 1, !dbg !2606
  br label %cleanup, !dbg !2607

cleanup:                                          ; preds = %lor.lhs.false2, %entry, %if.end
  %retval.0 = phi i8 [ 1, %if.end ], [ 0, %lor.lhs.false2 ], [ 0, %entry ], !dbg !2593
  ret i8 %retval.0, !dbg !2608
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @chrec_is_positive(%union.tree_node* %chrec, i8* %value) local_unnamed_addr #5 !dbg !2609 {
entry:
  %value0 = alloca i8, align 1
  %value1 = alloca i8, align 1
  %value2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !2613, metadata !DIExpression()), !dbg !2620
  call void @llvm.dbg.value(metadata i8* %value, metadata !2614, metadata !DIExpression()), !dbg !2620
  call void @llvm.dbg.value(metadata i8* %value0, metadata !2615, metadata !DIExpression(DW_OP_deref)), !dbg !2620
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %value0) #8, !dbg !2621
  call void @llvm.dbg.value(metadata i8* %value1, metadata !2616, metadata !DIExpression(DW_OP_deref)), !dbg !2620
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %value1) #8, !dbg !2621
  call void @llvm.dbg.value(metadata i8* %value2, metadata !2617, metadata !DIExpression(DW_OP_deref)), !dbg !2620
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %value2) #8, !dbg !2621
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2622
  %bf.load = load i64, i64* %0, align 8, !dbg !2622
  %1 = trunc i64 %bf.load to i16, !dbg !2622
  switch i16 %1, label %cleanup [
    i16 146, label %sw.bb
    i16 23, label %sw.bb35
  ], !dbg !2623

sw.bb:                                            ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2624
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !2624
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !2624
  call void @llvm.dbg.value(metadata i8* %value0, metadata !2615, metadata !DIExpression(DW_OP_deref)), !dbg !2620
  %call = call zeroext i8 @chrec_is_positive(%union.tree_node* %2, i8* nonnull %value0) #7, !dbg !2627
  %tobool = icmp eq i8 %call, 0, !dbg !2627
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !2628

lor.lhs.false:                                    ; preds = %sw.bb
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !2629
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !2629
  call void @llvm.dbg.value(metadata i8* %value1, metadata !2616, metadata !DIExpression(DW_OP_deref)), !dbg !2620
  %call4 = call zeroext i8 @chrec_is_positive(%union.tree_node* %3, i8* nonnull %value1) #7, !dbg !2630
  %tobool5 = icmp eq i8 %call4, 0, !dbg !2630
  br i1 %tobool5, label %cleanup, label %if.end, !dbg !2631

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8, i8* %value0, align 1, !dbg !2632
  call void @llvm.dbg.value(metadata i8 %4, metadata !2615, metadata !DIExpression()), !dbg !2620
  %5 = load i8, i8* %value1, align 1, !dbg !2634
  call void @llvm.dbg.value(metadata i8 %5, metadata !2616, metadata !DIExpression()), !dbg !2620
  %cmp = icmp eq i8 %4, %5, !dbg !2635
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !2636

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8 %4, metadata !2615, metadata !DIExpression()), !dbg !2620
  store i8 %4, i8* %value, align 1, !dbg !2637
  br label %cleanup, !dbg !2639

if.end9:                                          ; preds = %if.end
  %call10 = call fastcc zeroext i8 @evolution_function_is_affine_p(%union.tree_node* %chrec) #7, !dbg !2640
  %tobool11 = icmp eq i8 %call10, 0, !dbg !2640
  br i1 %tobool11, label %cleanup, label %if.end13, !dbg !2642

if.end13:                                         ; preds = %if.end9
  %call14 = call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %chrec) #7, !dbg !2643
  %call15 = call %union.tree_node* @number_of_latch_executions(%struct.loop* %call14) #7, !dbg !2644
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !2619, metadata !DIExpression()), !dbg !2620
  %call16 = call zeroext i8 @chrec_contains_undetermined(%union.tree_node* %call15) #6, !dbg !2645
  %tobool17 = icmp eq i8 %call16, 0, !dbg !2645
  br i1 %tobool17, label %if.end19, label %cleanup, !dbg !2647

if.end19:                                         ; preds = %if.end13
  %6 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !2648
  %7 = load %struct.tree_int_cst*, %struct.tree_int_cst** %6, align 8, !dbg !2648
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %7, i64 0, i32 1, i32 0, !dbg !2648
  %8 = load i64, i64* %low, align 8, !dbg !2648
  %conv24 = trunc i64 %8 to i32, !dbg !2648
  %call25 = call %union.tree_node* @chrec_apply(i32 %conv24, %union.tree_node* %chrec, %union.tree_node* %call15) #6, !dbg !2649
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !2618, metadata !DIExpression()), !dbg !2620
  call void @llvm.dbg.value(metadata i8* %value2, metadata !2617, metadata !DIExpression(DW_OP_deref)), !dbg !2620
  %call26 = call zeroext i8 @chrec_is_positive(%union.tree_node* %call25, i8* nonnull %value2) #7, !dbg !2650
  %tobool27 = icmp eq i8 %call26, 0, !dbg !2650
  br i1 %tobool27, label %cleanup, label %if.end29, !dbg !2652

if.end29:                                         ; preds = %if.end19
  %9 = load i8, i8* %value0, align 1, !dbg !2653
  call void @llvm.dbg.value(metadata i8 %9, metadata !2615, metadata !DIExpression()), !dbg !2620
  store i8 %9, i8* %value, align 1, !dbg !2654
  call void @llvm.dbg.value(metadata i8 %9, metadata !2615, metadata !DIExpression()), !dbg !2620
  %10 = load i8, i8* %value1, align 1, !dbg !2655
  call void @llvm.dbg.value(metadata i8 %10, metadata !2616, metadata !DIExpression()), !dbg !2620
  %cmp32 = icmp eq i8 %9, %10, !dbg !2656
  %conv34 = zext i1 %cmp32 to i8, !dbg !2657
  br label %cleanup, !dbg !2658

sw.bb35:                                          ; preds = %entry
  %call36 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %chrec) #6, !dbg !2659
  %cmp37 = icmp eq i32 %call36, 1, !dbg !2660
  %conv39 = zext i1 %cmp37 to i8, !dbg !2661
  store i8 %conv39, i8* %value, align 1, !dbg !2662
  br label %cleanup, !dbg !2663

cleanup:                                          ; preds = %if.end19, %if.end13, %if.end9, %lor.lhs.false, %sw.bb, %entry, %sw.bb35, %if.end29, %if.then8
  %retval.0 = phi i8 [ 1, %sw.bb35 ], [ 1, %if.then8 ], [ %conv34, %if.end29 ], [ 0, %lor.lhs.false ], [ 0, %sw.bb ], [ 0, %if.end9 ], [ 0, %if.end13 ], [ 0, %if.end19 ], [ 0, %entry ], !dbg !2664
  call void @llvm.dbg.value(metadata i8* %value2, metadata !2617, metadata !DIExpression(DW_OP_deref)), !dbg !2620
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %value2) #8, !dbg !2665
  call void @llvm.dbg.value(metadata i8* %value1, metadata !2616, metadata !DIExpression(DW_OP_deref)), !dbg !2620
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %value1) #8, !dbg !2665
  call void @llvm.dbg.value(metadata i8* %value0, metadata !2615, metadata !DIExpression(DW_OP_deref)), !dbg !2620
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %value0) #8, !dbg !2665
  ret i8 %retval.0, !dbg !2665
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @evolution_function_is_affine_p(%union.tree_node* %chrec) unnamed_addr #0 !dbg !2666 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !2670, metadata !DIExpression()), !dbg !2671
  %cmp = icmp eq %union.tree_node* %chrec, null, !dbg !2672
  br i1 %cmp, label %return, label %if.end, !dbg !2674

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2675
  %bf.load = load i64, i64* %0, align 8, !dbg !2675
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2676
  %cond = icmp eq i64 %bf.cast1, 146, !dbg !2676
  br i1 %cond, label %sw.bb, label %return, !dbg !2676

sw.bb:                                            ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2677
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !2677
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !2677
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !2680
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !2680
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !2680
  %4 = load i64, i64* %low, align 8, !dbg !2680
  %conv = trunc i64 %4 to i32, !dbg !2680
  %call = tail call zeroext i8 @evolution_function_is_invariant_p(%union.tree_node* %1, i32 %conv) #6, !dbg !2681
  %tobool = icmp eq i8 %call, 0, !dbg !2681
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !2682

land.lhs.true:                                    ; preds = %sw.bb
  %arrayidx8 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !2683
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx8, align 8, !dbg !2683
  %6 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !2684
  %low14 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %6, i64 0, i32 1, i32 0, !dbg !2684
  %7 = load i64, i64* %low14, align 8, !dbg !2684
  %conv15 = trunc i64 %7 to i32, !dbg !2684
  %call16 = tail call zeroext i8 @evolution_function_is_invariant_p(%union.tree_node* %5, i32 %conv15) #6, !dbg !2685
  %tobool18 = icmp eq i8 %call16, 0, !dbg !2685
  br i1 %tobool18, label %if.else, label %return, !dbg !2686

if.else:                                          ; preds = %land.lhs.true, %sw.bb
  br label %return, !dbg !2687

return:                                           ; preds = %land.lhs.true, %if.end, %entry, %if.else
  %retval.0 = phi i8 [ 0, %if.else ], [ 0, %entry ], [ 1, %land.lhs.true ], [ 0, %if.end ], !dbg !2671
  ret i8 %retval.0, !dbg !2688
}

declare dso_local zeroext i8 @chrec_contains_undetermined(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_sgn(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop* %loop) local_unnamed_addr #5 !dbg !2689 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2695, metadata !DIExpression()), !dbg !2701
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !2696, metadata !DIExpression()), !dbg !2701
  %call = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !2702
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !2697, metadata !DIExpression()), !dbg !2701
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2703
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !2703
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !2705

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !2706
  %and = and i32 %1, 8, !dbg !2707
  %tobool1 = icmp eq i32 %and, 0, !dbg !2707
  br i1 %tobool1, label %if.end, label %if.then, !dbg !2708

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #6, !dbg !2709
  br label %if.end, !dbg !2709

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %tobool3 = icmp eq %struct.edge_def* %call, null, !dbg !2710
  br i1 %tobool3, label %if.end9, label %if.then4, !dbg !2711

if.then4:                                         ; preds = %if.end
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !2712
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !2712
  %call5 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %2) #6, !dbg !2713
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !2698, metadata !DIExpression()), !dbg !2714
  %call6 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call5) #7, !dbg !2715
  %cmp = icmp eq i32 %call6, 1, !dbg !2717
  %spec.select = select i1 %cmp, %union.gimple_statement_d* %call5, %union.gimple_statement_d* null, !dbg !2718
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %spec.select, metadata !2696, metadata !DIExpression()), !dbg !2701
  br label %if.end9, !dbg !2719

if.end9:                                          ; preds = %if.end, %if.then4
  %res.1 = phi %union.gimple_statement_d* [ %spec.select, %if.then4 ], [ null, %if.end ], !dbg !2701
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %res.1, metadata !2696, metadata !DIExpression()), !dbg !2701
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2720
  %tobool10 = icmp eq %struct._IO_FILE* %3, null, !dbg !2720
  br i1 %tobool10, label %if.end16, label %land.lhs.true11, !dbg !2722

land.lhs.true11:                                  ; preds = %if.end9
  %4 = load i32, i32* @dump_flags, align 4, !dbg !2723
  %and12 = and i32 %4, 8, !dbg !2724
  %tobool13 = icmp eq i32 %and12, 0, !dbg !2724
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !2725

if.then14:                                        ; preds = %land.lhs.true11
  tail call void @print_gimple_stmt(%struct._IO_FILE* nonnull %3, %union.gimple_statement_d* %res.1, i32 0, i32 0) #6, !dbg !2726
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2728
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2729
  br label %if.end16, !dbg !2730

if.end16:                                         ; preds = %land.lhs.true11, %if.end9, %if.then14
  ret %union.gimple_statement_d* %res.1, !dbg !2731
}

declare dso_local %struct.edge_def* @single_exit(%struct.loop*) local_unnamed_addr #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @last_stmt(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !2732 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !2737, metadata !DIExpression()), !dbg !2738
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !2739
  %bf.load = load i32, i32* %0, align 8, !dbg !2739
  %bf.clear = and i32 %bf.load, 255, !dbg !2739
  ret i32 %bf.clear, !dbg !2740
}

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %var) local_unnamed_addr #5 !dbg !2741 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2743, metadata !DIExpression()), !dbg !2746
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !2744, metadata !DIExpression()), !dbg !2746
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2747
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !2747
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !2749

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !2750
  %and = and i32 %1, 8, !dbg !2751
  %tobool1 = icmp eq i32 %and, 0, !dbg !2751
  br i1 %tobool1, label %if.end, label %if.then, !dbg !2752

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2753
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2755
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !2756
  %3 = load i32, i32* %num, align 8, !dbg !2756
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i32 %3) #6, !dbg !2757
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2758
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2759
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2760
  tail call void @print_generic_expr(%struct._IO_FILE* %5, %union.tree_node* %var, i32 0) #6, !dbg !2761
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2762
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2763
  br label %if.end, !dbg !2764

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call5 = tail call fastcc %struct.basic_block_def* @block_before_loop(%struct.loop* %loop) #7, !dbg !2765
  %call6 = tail call fastcc %union.tree_node* @get_scalar_evolution(%struct.basic_block_def* %call5, %union.tree_node* %var) #7, !dbg !2766
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !2745, metadata !DIExpression()), !dbg !2746
  %call7 = tail call fastcc %union.tree_node* @analyze_scalar_evolution_1(%struct.loop* %loop, %union.tree_node* %var, %union.tree_node* %call6) #7, !dbg !2767
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !2745, metadata !DIExpression()), !dbg !2746
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2768
  %tobool8 = icmp eq %struct._IO_FILE* %7, null, !dbg !2768
  br i1 %tobool8, label %if.end14, label %land.lhs.true9, !dbg !2770

land.lhs.true9:                                   ; preds = %if.end
  %8 = load i32, i32* @dump_flags, align 4, !dbg !2771
  %and10 = and i32 %8, 8, !dbg !2772
  %tobool11 = icmp eq i32 %and10, 0, !dbg !2772
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !2773

if.then12:                                        ; preds = %land.lhs.true9
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2774
  br label %if.end14, !dbg !2774

if.end14:                                         ; preds = %land.lhs.true9, %if.end, %if.then12
  ret %union.tree_node* %call7, !dbg !2775
}

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_scalar_evolution(%struct.basic_block_def* %instantiated_below, %union.tree_node* %scalar) unnamed_addr #5 !dbg !2776 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiated_below, metadata !2780, metadata !DIExpression()), !dbg !2783
  call void @llvm.dbg.value(metadata %union.tree_node* %scalar, metadata !2781, metadata !DIExpression()), !dbg !2783
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2784
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !2784
  br i1 %tobool, label %if.end9, label %if.then, !dbg !2786

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !2787
  %and = and i32 %1, 8, !dbg !2790
  %tobool1 = icmp eq i32 %and, 0, !dbg !2790
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !2791

if.then2:                                         ; preds = %if.then
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !2792
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2794
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2795
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2796
  tail call void @print_generic_expr(%struct._IO_FILE* %3, %union.tree_node* %scalar, i32 0) #6, !dbg !2797
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2798
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2799
  %.pre = load i32, i32* @dump_flags, align 4, !dbg !2800
  br label %if.end, !dbg !2802

if.end:                                           ; preds = %if.then, %if.then2
  %5 = phi i32 [ %1, %if.then ], [ %.pre, %if.then2 ], !dbg !2800
  %and5 = and i32 %5, 16, !dbg !2803
  %tobool6 = icmp eq i32 %and5, 0, !dbg !2803
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !2804

if.then7:                                         ; preds = %if.end
  %6 = load i32, i32* @nb_get_scev, align 4, !dbg !2805
  %inc = add i32 %6, 1, !dbg !2805
  store i32 %inc, i32* @nb_get_scev, align 4, !dbg !2805
  br label %if.end9, !dbg !2806

if.end9:                                          ; preds = %if.end, %entry, %if.then7
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %scalar, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2807
  %bf.load = load i64, i64* %7, align 8, !dbg !2807
  %8 = trunc i64 %bf.load to i16, !dbg !2807
  switch i16 %8, label %sw.default [
    i16 141, label %sw.bb
    i16 24, label %sw.epilog
    i16 25, label %sw.epilog
    i16 23, label %sw.epilog
  ], !dbg !2808

sw.bb:                                            ; preds = %if.end9
  %call10 = tail call fastcc %union.tree_node** @find_var_scev_info(%struct.basic_block_def* %instantiated_below, %union.tree_node* %scalar) #7, !dbg !2809
  %9 = load %union.tree_node*, %union.tree_node** %call10, align 8, !dbg !2811
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !2782, metadata !DIExpression()), !dbg !2783
  br label %sw.epilog, !dbg !2812

sw.default:                                       ; preds = %if.end9
  %10 = load %union.tree_node*, %union.tree_node** @chrec_not_analyzed_yet, align 8, !dbg !2813
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !2782, metadata !DIExpression()), !dbg !2783
  br label %sw.epilog, !dbg !2814

sw.epilog:                                        ; preds = %if.end9, %if.end9, %if.end9, %sw.default, %sw.bb
  %res.0 = phi %union.tree_node* [ %10, %sw.default ], [ %9, %sw.bb ], [ %scalar, %if.end9 ], [ %scalar, %if.end9 ], [ %scalar, %if.end9 ], !dbg !2815
  call void @llvm.dbg.value(metadata %union.tree_node* %res.0, metadata !2782, metadata !DIExpression()), !dbg !2783
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2816
  %tobool12 = icmp eq %struct._IO_FILE* %11, null, !dbg !2816
  br i1 %tobool12, label %if.end18, label %land.lhs.true, !dbg !2818

land.lhs.true:                                    ; preds = %sw.epilog
  %12 = load i32, i32* @dump_flags, align 4, !dbg !2819
  %and13 = and i32 %12, 8, !dbg !2820
  %tobool14 = icmp eq i32 %and13, 0, !dbg !2820
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !2821

if.then15:                                        ; preds = %land.lhs.true
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !2822
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2824
  tail call void @print_generic_expr(%struct._IO_FILE* %13, %union.tree_node* %res.0, i32 0) #6, !dbg !2825
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2826
  %call17 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !2827
  br label %if.end18, !dbg !2828

if.end18:                                         ; preds = %land.lhs.true, %sw.epilog, %if.then15
  ret %union.tree_node* %res.0, !dbg !2829
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @block_before_loop(%struct.loop* %loop) unnamed_addr #0 !dbg !2830 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2834, metadata !DIExpression()), !dbg !2836
  %call = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !2837
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !2835, metadata !DIExpression()), !dbg !2836
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !2838
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2838

cond.true:                                        ; preds = %entry
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !2839
  br label %cond.end, !dbg !2838

cond.false:                                       ; preds = %entry
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2840
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2840
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2840
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !2840
  br label %cond.end, !dbg !2838

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %struct.basic_block_def** [ %src, %cond.true ], [ %x_entry_block_ptr, %cond.false ]
  %cond = load %struct.basic_block_def*, %struct.basic_block_def** %cond.in, align 8, !dbg !2838
  ret %struct.basic_block_def* %cond, !dbg !2841
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @analyze_scalar_evolution_1(%struct.loop* %loop, %union.tree_node* %var, %union.tree_node* %res) unnamed_addr #5 !dbg !2842 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2846, metadata !DIExpression()), !dbg !2854
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !2847, metadata !DIExpression()), !dbg !2854
  call void @llvm.dbg.value(metadata %union.tree_node* %res, metadata !2848, metadata !DIExpression()), !dbg !2854
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !2849, metadata !DIExpression()), !dbg !2854
  %cmp = icmp eq %struct.loop* %loop, null, !dbg !2855
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2857

lor.lhs.false:                                    ; preds = %entry
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2858
  %0 = bitcast %union.tree_node** %type1 to i64**, !dbg !2858
  %1 = load i64*, i64** %0, align 8, !dbg !2858
  %bf.load = load i64, i64* %1, align 8, !dbg !2859
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2860
  %cmp2 = icmp eq i64 %bf.cast1, 14, !dbg !2860
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2861

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !2862
  br label %cleanup, !dbg !2863

if.end:                                           ; preds = %lor.lhs.false
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2864
  %bf.load4 = load i64, i64* %3, align 8, !dbg !2864
  %bf.cast62 = and i64 %bf.load4, 65535, !dbg !2866
  %cmp7 = icmp eq i64 %bf.cast62, 141, !dbg !2866
  br i1 %cmp7, label %if.end9, label %if.then8, !dbg !2867

if.then8:                                         ; preds = %if.end
  %call = tail call fastcc %union.tree_node* @interpret_expr(%struct.loop* nonnull %loop, %union.gimple_statement_d* null, %union.tree_node* %var) #7, !dbg !2868
  br label %cleanup, !dbg !2869

if.end9:                                          ; preds = %if.end
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2870
  %4 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !2870
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %4, align 8, !dbg !2870
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %5, metadata !2850, metadata !DIExpression()), !dbg !2854
  %call10 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %5) #7, !dbg !2871
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call10, metadata !2851, metadata !DIExpression()), !dbg !2854
  %tobool = icmp eq %struct.basic_block_def* %call10, null, !dbg !2872
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2872

cond.true:                                        ; preds = %if.end9
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call10, i64 0, i32 3, !dbg !2873
  %6 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !2873
  br label %cond.end, !dbg !2872

cond.end:                                         ; preds = %if.end9, %cond.true
  %cond = phi %struct.loop* [ %6, %cond.true ], [ null, %if.end9 ], !dbg !2872
  call void @llvm.dbg.value(metadata %struct.loop* %cond, metadata !2852, metadata !DIExpression()), !dbg !2854
  br i1 %tobool, label %set_and_end, label %lor.lhs.false12, !dbg !2874

lor.lhs.false12:                                  ; preds = %cond.end
  %call13 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* nonnull %loop, %struct.basic_block_def* nonnull %call10) #6, !dbg !2876
  %tobool14 = icmp eq i8 %call13, 0, !dbg !2876
  br i1 %tobool14, label %set_and_end, label %if.end16, !dbg !2877

if.end16:                                         ; preds = %lor.lhs.false12
  %7 = load %union.tree_node*, %union.tree_node** @chrec_not_analyzed_yet, align 8, !dbg !2878
  %cmp17 = icmp eq %union.tree_node* %7, %res, !dbg !2880
  br i1 %cmp17, label %if.end27, label %if.then18, !dbg !2881

if.then18:                                        ; preds = %if.end16
  %loop_father19 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call10, i64 0, i32 3, !dbg !2882
  %8 = load %struct.loop*, %struct.loop** %loop_father19, align 8, !dbg !2882
  %cmp20 = icmp eq %struct.loop* %8, %loop, !dbg !2885
  br i1 %cmp20, label %set_and_end, label %if.then21, !dbg !2886

if.then21:                                        ; preds = %if.then18
  %call23 = tail call %struct.loop* @find_common_loop(%struct.loop* nonnull %loop, %struct.loop* %8) #6, !dbg !2887
  %9 = load %struct.loop*, %struct.loop** %loop_father19, align 8, !dbg !2888
  %call25 = tail call fastcc %union.tree_node* @compute_scalar_evolution_in_loop(%struct.loop* %call23, %struct.loop* %9, %union.tree_node* %res) #7, !dbg !2889
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !2848, metadata !DIExpression()), !dbg !2854
  br label %set_and_end, !dbg !2890

if.end27:                                         ; preds = %if.end16
  %cmp28 = icmp eq %struct.loop* %cond, %loop, !dbg !2891
  br i1 %cmp28, label %if.end32, label %if.then29, !dbg !2893

if.then29:                                        ; preds = %if.end27
  %call30 = tail call fastcc %union.tree_node* @analyze_scalar_evolution_1(%struct.loop* %cond, %union.tree_node* %var, %union.tree_node* %res) #7, !dbg !2894
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !2848, metadata !DIExpression()), !dbg !2854
  %call31 = tail call fastcc %union.tree_node* @compute_scalar_evolution_in_loop(%struct.loop* nonnull %loop, %struct.loop* %cond, %union.tree_node* %call30) #7, !dbg !2896
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !2848, metadata !DIExpression()), !dbg !2854
  br label %set_and_end, !dbg !2897

if.end32:                                         ; preds = %if.end27
  %call33 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %5) #7, !dbg !2898
  switch i32 %call33, label %sw.default [
    i32 6, label %sw.bb
    i32 16, label %sw.bb35
  ], !dbg !2899

sw.bb:                                            ; preds = %if.end32
  %call34 = tail call fastcc %union.tree_node* @interpret_gimple_assign(%struct.loop* nonnull %loop, %union.gimple_statement_d* %5) #7, !dbg !2900
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !2848, metadata !DIExpression()), !dbg !2854
  br label %set_and_end, !dbg !2902

sw.bb35:                                          ; preds = %if.end32
  %call36 = tail call fastcc zeroext i8 @loop_phi_node_p(%union.gimple_statement_d* %5) #7, !dbg !2903
  %tobool37 = icmp eq i8 %call36, 0, !dbg !2903
  br i1 %tobool37, label %if.else, label %if.then38, !dbg !2905

if.then38:                                        ; preds = %sw.bb35
  %call39 = tail call fastcc %union.tree_node* @interpret_loop_phi(%struct.loop* nonnull %loop, %union.gimple_statement_d* %5) #7, !dbg !2906
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !2848, metadata !DIExpression()), !dbg !2854
  br label %set_and_end, !dbg !2907

if.else:                                          ; preds = %sw.bb35
  %call40 = tail call fastcc %union.tree_node* @interpret_condition_phi(%struct.loop* nonnull %loop, %union.gimple_statement_d* %5) #7, !dbg !2908
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !2848, metadata !DIExpression()), !dbg !2854
  br label %set_and_end

sw.default:                                       ; preds = %if.end32
  %10 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !2909
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !2848, metadata !DIExpression()), !dbg !2854
  br label %set_and_end, !dbg !2910

set_and_end:                                      ; preds = %if.then18, %lor.lhs.false12, %sw.bb, %sw.default, %if.else, %if.then38, %if.then21, %cond.end, %if.then29
  %res.addr.3 = phi %union.tree_node* [ %call31, %if.then29 ], [ %var, %lor.lhs.false12 ], [ %var, %cond.end ], [ %call25, %if.then21 ], [ %res, %if.then18 ], [ %10, %sw.default ], [ %call34, %sw.bb ], [ %call39, %if.then38 ], [ %call40, %if.else ], !dbg !2854
  call void @llvm.dbg.value(metadata %union.tree_node* %res.addr.3, metadata !2848, metadata !DIExpression()), !dbg !2854
  call void @llvm.dbg.label(metadata !2853), !dbg !2911
  %11 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !2912
  %cmp42 = icmp eq %union.tree_node* %res.addr.3, %11, !dbg !2914
  %spec.select = select i1 %cmp42, %union.tree_node* %var, %union.tree_node* %res.addr.3, !dbg !2915
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !2848, metadata !DIExpression()), !dbg !2854
  %cmp45 = icmp eq %struct.loop* %cond, %loop, !dbg !2916
  br i1 %cmp45, label %if.then46, label %cleanup, !dbg !2918

if.then46:                                        ; preds = %set_and_end
  %call47 = tail call fastcc %struct.basic_block_def* @block_before_loop(%struct.loop* nonnull %loop) #7, !dbg !2919
  tail call fastcc void @set_scalar_evolution(%struct.basic_block_def* %call47, %union.tree_node* %var, %union.tree_node* %spec.select) #7, !dbg !2920
  br label %cleanup, !dbg !2920

cleanup:                                          ; preds = %set_and_end, %if.then46, %if.then8, %if.then
  %retval.0 = phi %union.tree_node* [ %2, %if.then ], [ %call, %if.then8 ], [ %spec.select, %if.then46 ], [ %spec.select, %set_and_end ], !dbg !2854
  ret %union.tree_node* %retval.0, !dbg !2921
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @instantiate_scev(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec) local_unnamed_addr #5 !dbg !2922 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiate_below, metadata !2926, metadata !DIExpression()), !dbg !2931
  call void @llvm.dbg.value(metadata %struct.loop* %evolution_loop, metadata !2927, metadata !DIExpression()), !dbg !2931
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !2928, metadata !DIExpression()), !dbg !2931
  %call = tail call %struct.htab* @htab_create(i64 10, i32 (i8*)* nonnull @hash_scev_info, i32 (i8*, i8*)* nonnull @eq_scev_info, void (i8*)* nonnull @del_scev_info) #6, !dbg !2932
  call void @llvm.dbg.value(metadata %struct.htab* %call, metadata !2930, metadata !DIExpression()), !dbg !2931
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2933
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !2933
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !2935

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !2936
  %and = and i32 %1, 8, !dbg !2937
  %tobool1 = icmp eq i32 %and, 0, !dbg !2937
  br i1 %tobool1, label %if.end, label %if.then, !dbg !2938

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2939
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2941
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %instantiate_below, i64 0, i32 9, !dbg !2942
  %3 = load i32, i32* %index, align 8, !dbg !2942
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i32 %3) #6, !dbg !2943
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2944
  %num = getelementptr inbounds %struct.loop, %struct.loop* %evolution_loop, i64 0, i32 0, !dbg !2945
  %5 = load i32, i32* %num, align 8, !dbg !2945
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0), i32 %5) #6, !dbg !2946
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2947
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2948
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2949
  tail call void @print_generic_expr(%struct._IO_FILE* %7, %union.tree_node* %chrec, i32 0) #6, !dbg !2950
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2951
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2952
  br label %if.end, !dbg !2953

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call7 = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i8 zeroext 0, %struct.htab* %call, i32 0) #7, !dbg !2954
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !2929, metadata !DIExpression()), !dbg !2931
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2955
  %tobool8 = icmp eq %struct._IO_FILE* %9, null, !dbg !2955
  br i1 %tobool8, label %if.end15, label %land.lhs.true9, !dbg !2957

land.lhs.true9:                                   ; preds = %if.end
  %10 = load i32, i32* @dump_flags, align 4, !dbg !2958
  %and10 = and i32 %10, 8, !dbg !2959
  %tobool11 = icmp eq i32 %and10, 0, !dbg !2959
  br i1 %tobool11, label %if.end15, label %if.then12, !dbg !2960

if.then12:                                        ; preds = %land.lhs.true9
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2961
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2963
  tail call void @print_generic_expr(%struct._IO_FILE* %11, %union.tree_node* %call7, i32 0) #6, !dbg !2964
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2965
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !2966
  br label %if.end15, !dbg !2967

if.end15:                                         ; preds = %land.lhs.true9, %if.end, %if.then12
  tail call void @htab_delete(%struct.htab* %call) #6, !dbg !2968
  ret %union.tree_node* %call7, !dbg !2969
}

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @hash_scev_info(i8* %elt) #5 !dbg !2970 {
entry:
  call void @llvm.dbg.value(metadata i8* %elt, metadata !2972, metadata !DIExpression()), !dbg !2973
  %var = getelementptr inbounds i8, i8* %elt, i64 8, !dbg !2974
  %0 = bitcast i8* %var to %struct.tree_ssa_name**, !dbg !2974
  %1 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %0, align 8, !dbg !2974
  %version = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %1, i64 0, i32 3, !dbg !2974
  %2 = load i32, i32* %version, align 8, !dbg !2974
  ret i32 %2, !dbg !2975
}

; Function Attrs: nounwind uwtable
define internal i32 @eq_scev_info(i8* %e1, i8* %e2) #5 !dbg !2976 {
entry:
  call void @llvm.dbg.value(metadata i8* %e1, metadata !2978, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i8* %e2, metadata !2979, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i8* %e1, metadata !2980, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i8* %e2, metadata !2981, metadata !DIExpression()), !dbg !2982
  %var = getelementptr inbounds i8, i8* %e1, i64 8, !dbg !2983
  %0 = bitcast i8* %var to %union.tree_node**, !dbg !2983
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !2983
  %var1 = getelementptr inbounds i8, i8* %e2, i64 8, !dbg !2984
  %2 = bitcast i8* %var1 to %union.tree_node**, !dbg !2984
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !2984
  %cmp = icmp eq %union.tree_node* %1, %3, !dbg !2985
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2986

land.rhs:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %e2, metadata !2981, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i8* %e1, metadata !2980, metadata !DIExpression()), !dbg !2982
  %instantiated_below = bitcast i8* %e1 to %struct.basic_block_def**, !dbg !2987
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %instantiated_below, align 8, !dbg !2987
  %instantiated_below2 = bitcast i8* %e2 to %struct.basic_block_def**, !dbg !2988
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %instantiated_below2, align 8, !dbg !2988
  %cmp3 = icmp eq %struct.basic_block_def* %4, %5, !dbg !2989
  %phitmp = zext i1 %cmp3 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %6, !dbg !2990
}

; Function Attrs: nounwind uwtable
define internal void @del_scev_info(i8* %e) #5 !dbg !2991 {
entry:
  call void @llvm.dbg.value(metadata i8* %e, metadata !2993, metadata !DIExpression()), !dbg !2994
  tail call void @ggc_free(i8* %e) #6, !dbg !2995
  ret void, !dbg !2996
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) unnamed_addr #5 !dbg !2997 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiate_below, metadata !3001, metadata !DIExpression()), !dbg !3007
  call void @llvm.dbg.value(metadata %struct.loop* %evolution_loop, metadata !3002, metadata !DIExpression()), !dbg !3007
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !3003, metadata !DIExpression()), !dbg !3007
  call void @llvm.dbg.value(metadata i8 %fold_conversions, metadata !3004, metadata !DIExpression()), !dbg !3007
  call void @llvm.dbg.value(metadata %struct.htab* %cache, metadata !3005, metadata !DIExpression()), !dbg !3007
  call void @llvm.dbg.value(metadata i32 %size_expr, metadata !3006, metadata !DIExpression()), !dbg !3007
  %inc = add nsw i32 %size_expr, 1, !dbg !3008
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3006, metadata !DIExpression()), !dbg !3007
  %0 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3010
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %0, i64 63, i32 1, !dbg !3010
  %1 = load i32, i32* %value, align 8, !dbg !3010
  %cmp = icmp slt i32 %1, %size_expr, !dbg !3011
  br i1 %cmp, label %if.then, label %if.end, !dbg !3012

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !3013
  br label %return, !dbg !3014

if.end:                                           ; preds = %entry
  %call = tail call fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %chrec) #7, !dbg !3015
  %tobool = icmp eq i8 %call, 0, !dbg !3015
  br i1 %tobool, label %lor.lhs.false, label %return, !dbg !3017

lor.lhs.false:                                    ; preds = %if.end
  %call1 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %chrec) #6, !dbg !3018
  %tobool3 = icmp eq i8 %call1, 0, !dbg !3018
  br i1 %tobool3, label %if.end5, label %return, !dbg !3019

if.end5:                                          ; preds = %lor.lhs.false
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3020
  %bf.load = load i64, i64* %3, align 8, !dbg !3020
  %4 = trunc i64 %bf.load to i16, !dbg !3020
  switch i16 %4, label %sw.epilog [
    i16 141, label %sw.bb
    i16 146, label %sw.bb7
    i16 66, label %sw.bb9
    i16 63, label %sw.bb9
    i16 64, label %sw.bb9
    i16 65, label %sw.bb9
    i16 116, label %sw.bb20
    i16 113, label %sw.bb20
    i16 79, label %sw.bb25
    i16 90, label %sw.bb25
    i16 145, label %sw.bb36
    i16 144, label %sw.bb37
  ], !dbg !3021

sw.bb:                                            ; preds = %if.end5
  %call6 = tail call fastcc %union.tree_node* @instantiate_scev_name(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %inc) #7, !dbg !3022
  br label %return, !dbg !3024

sw.bb7:                                           ; preds = %if.end5
  %call8 = tail call fastcc %union.tree_node* @instantiate_scev_poly(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %inc) #7, !dbg !3025
  br label %return, !dbg !3026

sw.bb9:                                           ; preds = %if.end5, %if.end5, %if.end5, %if.end5
  %5 = trunc i64 %bf.load to i32, !dbg !3027
  %bf.cast13 = and i32 %5, 65535, !dbg !3027
  %call14 = tail call fastcc %union.tree_node* @chrec_type(%union.tree_node* %chrec) #7, !dbg !3028
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3029
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3029
  %arrayidx18 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3030
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx18, align 8, !dbg !3030
  %call19 = tail call fastcc %union.tree_node* @instantiate_scev_binary(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i32 %bf.cast13, %union.tree_node* %call14, %union.tree_node* %6, %union.tree_node* %7, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %inc) #7, !dbg !3031
  br label %return, !dbg !3032

sw.bb20:                                          ; preds = %if.end5, %if.end5
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3033
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3033
  %operands22 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3034
  %9 = load %union.tree_node*, %union.tree_node** %operands22, align 8, !dbg !3034
  %call24 = tail call fastcc %union.tree_node* @instantiate_scev_convert(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, %union.tree_node* %8, %union.tree_node* %9, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %inc) #7, !dbg !3035
  br label %return, !dbg !3036

sw.bb25:                                          ; preds = %if.end5, %if.end5
  %10 = trunc i64 %bf.load to i32, !dbg !3037
  %bf.cast29 = and i32 %10, 65535, !dbg !3037
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3038
  %11 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !3038
  %operands33 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3039
  %12 = load %union.tree_node*, %union.tree_node** %operands33, align 8, !dbg !3039
  %call35 = tail call fastcc %union.tree_node* @instantiate_scev_not(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i32 %bf.cast29, %union.tree_node* %11, %union.tree_node* %12, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %inc) #7, !dbg !3040
  br label %return, !dbg !3041

sw.bb36:                                          ; preds = %if.end5
  %13 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !3042
  br label %return, !dbg !3043

sw.bb37:                                          ; preds = %if.end5
  %14 = load %union.tree_node*, %union.tree_node** @chrec_known, align 8, !dbg !3044
  br label %return, !dbg !3045

sw.epilog:                                        ; preds = %if.end5
  %bf.cast41 = and i64 %bf.load, 65535, !dbg !3046
  %arrayidx42 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast41, !dbg !3046
  %15 = load i32, i32* %arrayidx42, align 4, !dbg !3046
  %cmp43 = icmp eq i32 %15, 9, !dbg !3046
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !3048

if.then45:                                        ; preds = %sw.epilog
  %16 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !3049
  br label %return, !dbg !3050

if.end46:                                         ; preds = %sw.epilog
  %arrayidx52 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast41, !dbg !3051
  %17 = load i8, i8* %arrayidx52, align 1, !dbg !3051
  switch i8 %17, label %sw.epilog62 [
    i8 3, label %sw.bb54
    i8 2, label %sw.bb56
    i8 1, label %sw.bb58
    i8 0, label %return
  ], !dbg !3052

sw.bb54:                                          ; preds = %if.end46
  %call55 = tail call fastcc %union.tree_node* @instantiate_scev_3(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %inc) #7, !dbg !3053
  br label %return, !dbg !3055

sw.bb56:                                          ; preds = %if.end46
  %call57 = tail call fastcc %union.tree_node* @instantiate_scev_2(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %inc) #7, !dbg !3056
  br label %return, !dbg !3057

sw.bb58:                                          ; preds = %if.end46
  %call59 = tail call fastcc %union.tree_node* @instantiate_scev_1(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %inc) #7, !dbg !3058
  br label %return, !dbg !3059

sw.epilog62:                                      ; preds = %if.end46
  %18 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !3060
  br label %return, !dbg !3061

return:                                           ; preds = %lor.lhs.false, %if.end, %if.end46, %sw.epilog62, %sw.bb58, %sw.bb56, %sw.bb54, %if.then45, %sw.bb37, %sw.bb36, %sw.bb25, %sw.bb20, %sw.bb9, %sw.bb7, %sw.bb, %if.then
  %retval.0 = phi %union.tree_node* [ %2, %if.then ], [ %16, %if.then45 ], [ %18, %sw.epilog62 ], [ %call59, %sw.bb58 ], [ %call57, %sw.bb56 ], [ %call55, %sw.bb54 ], [ %14, %sw.bb37 ], [ %13, %sw.bb36 ], [ %call35, %sw.bb25 ], [ %call24, %sw.bb20 ], [ %call19, %sw.bb9 ], [ %call8, %sw.bb7 ], [ %call6, %sw.bb ], [ %chrec, %lor.lhs.false ], [ %chrec, %if.end ], [ %chrec, %if.end46 ], !dbg !3007
  ret %union.tree_node* %retval.0, !dbg !3062
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @resolve_mixers(%struct.loop* %loop, %union.tree_node* %chrec) local_unnamed_addr #5 !dbg !3063 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3065, metadata !DIExpression()), !dbg !3069
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !3066, metadata !DIExpression()), !dbg !3069
  %call = tail call %struct.htab* @htab_create(i64 10, i32 (i8*)* nonnull @hash_scev_info, i32 (i8*, i8*)* nonnull @eq_scev_info, void (i8*)* nonnull @del_scev_info) #6, !dbg !3070
  call void @llvm.dbg.value(metadata %struct.htab* %call, metadata !3067, metadata !DIExpression()), !dbg !3069
  %call1 = tail call fastcc %struct.basic_block_def* @block_before_loop(%struct.loop* %loop) #7, !dbg !3071
  %call2 = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %call1, %struct.loop* %loop, %union.tree_node* %chrec, i8 zeroext 1, %struct.htab* %call, i32 0) #7, !dbg !3072
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !3068, metadata !DIExpression()), !dbg !3069
  tail call void @htab_delete(%struct.htab* %call) #6, !dbg !3073
  ret %union.tree_node* %call2, !dbg !3074
}

declare dso_local zeroext i8 @number_of_iterations_exit(%struct.loop*, %struct.edge_def*, %struct.tree_niter_desc*, i8 zeroext) local_unnamed_addr #2

declare dso_local i32 @integer_nonzerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @set_nb_iterations_in_loop(%struct.loop* %loop, %union.tree_node* %res) unnamed_addr #0 !dbg !3075 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3077, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata %union.tree_node* %res, metadata !3078, metadata !DIExpression()), !dbg !3079
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3080
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !3080
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3082

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !3083
  %and = and i32 %1, 8, !dbg !3084
  %tobool1 = icmp eq i32 %and, 0, !dbg !3084
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3085

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !3086
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3088
  tail call void @print_generic_expr(%struct._IO_FILE* %2, %union.tree_node* %res, i32 0) #6, !dbg !3089
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3090
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3091
  br label %if.end, !dbg !3092

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %nb_iterations = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 11, !dbg !3093
  store %union.tree_node* %res, %union.tree_node** %nb_iterations, align 8, !dbg !3094
  ret %union.tree_node* %res, !dbg !3095
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @number_of_exit_cond_executions(%struct.loop* %loop) local_unnamed_addr #5 !dbg !3096 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3098, metadata !DIExpression()), !dbg !3101
  %call = tail call %union.tree_node* @number_of_latch_executions(%struct.loop* %loop) #7, !dbg !3102
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3099, metadata !DIExpression()), !dbg !3101
  %call1 = tail call fastcc %union.tree_node* @chrec_type(%union.tree_node* %call) #7, !dbg !3103
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3100, metadata !DIExpression()), !dbg !3101
  %call2 = tail call zeroext i8 @chrec_contains_undetermined(%union.tree_node* %call) #6, !dbg !3104
  %tobool = icmp eq i8 %call2, 0, !dbg !3104
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3106

if.end:                                           ; preds = %entry
  %call3 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %call1, i64 1) #6, !dbg !3107
  %call4 = tail call %union.tree_node* @chrec_fold_plus(%union.tree_node* %call1, %union.tree_node* %call, %union.tree_node* %call3) #6, !dbg !3108
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !3099, metadata !DIExpression()), !dbg !3101
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3109
  %bf.load = load i64, i64* %0, align 8, !dbg !3109
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3111
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !3111
  br i1 %cmp, label %land.lhs.true, label %cleanup, !dbg !3112

land.lhs.true:                                    ; preds = %if.end
  %bf.cast82 = and i64 %bf.load, 134217728, !dbg !3113
  %tobool9 = icmp eq i64 %bf.cast82, 0, !dbg !3113
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !3114
  %spec.select = select i1 %tobool9, %union.tree_node* %call4, %union.tree_node* %1, !dbg !3115
  ret %union.tree_node* %spec.select, !dbg !3115

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call, %entry ], [ %call4, %if.end ], !dbg !3101
  ret %union.tree_node* %retval.0, !dbg !3116
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @chrec_type(%union.tree_node* %chrec) unnamed_addr #0 !dbg !3117 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !3121, metadata !DIExpression()), !dbg !3122
  %call = tail call fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %chrec) #7, !dbg !3123
  %tobool = icmp eq i8 %call, 0, !dbg !3123
  br i1 %tobool, label %if.end, label %return, !dbg !3125

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3126
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3126
  br label %return, !dbg !3127

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %0, %if.end ], [ null, %entry ], !dbg !3122
  ret %union.tree_node* %retval.0, !dbg !3128
}

declare dso_local %union.tree_node* @chrec_fold_plus(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gather_stats_on_scev_database() local_unnamed_addr #5 !dbg !3129 {
entry:
  %stats = alloca %struct.chrec_stats, align 4
  %0 = bitcast %struct.chrec_stats* %stats to i8*, !dbg !3134
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3134
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3135
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !3135
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3137

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.chrec_stats* %stats, metadata !3133, metadata !DIExpression(DW_OP_deref)), !dbg !3138
  call fastcc void @reset_chrecs_counters(%struct.chrec_stats* nonnull %stats) #7, !dbg !3139
  %2 = load %struct.htab*, %struct.htab** @scalar_evolution_info, align 8, !dbg !3140
  call void @htab_traverse(%struct.htab* %2, i32 (i8**, i8*)* nonnull @gather_stats_on_scev_database_1, i8* nonnull %0) #6, !dbg !3141
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3142
  call void @llvm.dbg.value(metadata %struct.chrec_stats* %stats, metadata !3133, metadata !DIExpression(DW_OP_deref)), !dbg !3138
  call fastcc void @dump_chrecs_stats(%struct._IO_FILE* %3, %struct.chrec_stats* nonnull %stats) #7, !dbg !3143
  br label %cleanup, !dbg !3144

cleanup:                                          ; preds = %entry, %if.end
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3144
  ret void, !dbg !3144
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @reset_chrecs_counters(%struct.chrec_stats* %stats) unnamed_addr #0 !dbg !3145 {
entry:
  call void @llvm.dbg.value(metadata %struct.chrec_stats* %stats, metadata !3149, metadata !DIExpression()), !dbg !3150
  %nb_chrecs = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 0, !dbg !3151
  store i32 0, i32* %nb_chrecs, align 4, !dbg !3152
  %nb_affine = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 1, !dbg !3153
  store i32 0, i32* %nb_affine, align 4, !dbg !3154
  %nb_affine_multivar = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 2, !dbg !3155
  store i32 0, i32* %nb_affine_multivar, align 4, !dbg !3156
  %nb_higher_poly = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 3, !dbg !3157
  store i32 0, i32* %nb_higher_poly, align 4, !dbg !3158
  %nb_chrec_dont_know = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 4, !dbg !3159
  store i32 0, i32* %nb_chrec_dont_know, align 4, !dbg !3160
  %nb_undetermined = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 5, !dbg !3161
  store i32 0, i32* %nb_undetermined, align 4, !dbg !3162
  ret void, !dbg !3163
}

declare dso_local void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @gather_stats_on_scev_database_1(i8** %slot, i8* %stats) #5 !dbg !3164 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !3168, metadata !DIExpression()), !dbg !3171
  call void @llvm.dbg.value(metadata i8* %stats, metadata !3169, metadata !DIExpression()), !dbg !3171
  %0 = bitcast i8** %slot to %struct.scev_info_str**, !dbg !3172
  %1 = load %struct.scev_info_str*, %struct.scev_info_str** %0, align 8, !dbg !3172
  call void @llvm.dbg.value(metadata %struct.scev_info_str* %1, metadata !3170, metadata !DIExpression()), !dbg !3171
  %chrec = getelementptr inbounds %struct.scev_info_str, %struct.scev_info_str* %1, i64 0, i32 2, !dbg !3173
  %2 = load %union.tree_node*, %union.tree_node** %chrec, align 8, !dbg !3173
  %3 = bitcast i8* %stats to %struct.chrec_stats*, !dbg !3174
  tail call fastcc void @gather_chrec_stats(%union.tree_node* %2, %struct.chrec_stats* %3) #7, !dbg !3175
  ret i32 1, !dbg !3176
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_chrecs_stats(%struct._IO_FILE* %file, %struct.chrec_stats* %stats) unnamed_addr #5 !dbg !3177 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3181, metadata !DIExpression()), !dbg !3183
  call void @llvm.dbg.value(metadata %struct.chrec_stats* %stats, metadata !3182, metadata !DIExpression()), !dbg !3183
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !3184
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !3185
  %nb_affine = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 1, !dbg !3186
  %0 = load i32, i32* %nb_affine, align 4, !dbg !3186
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i64 0, i64 0), i32 %0) #6, !dbg !3187
  %nb_affine_multivar = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 2, !dbg !3188
  %1 = load i32, i32* %nb_affine_multivar, align 4, !dbg !3188
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.40, i64 0, i64 0), i32 %1) #6, !dbg !3189
  %nb_higher_poly = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 3, !dbg !3190
  %2 = load i32, i32* %nb_higher_poly, align 4, !dbg !3190
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0), i32 %2) #6, !dbg !3191
  %nb_chrec_dont_know = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 4, !dbg !3192
  %3 = load i32, i32* %nb_chrec_dont_know, align 4, !dbg !3192
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i32 %3) #6, !dbg !3193
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !3194
  %nb_chrecs = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 0, !dbg !3195
  %4 = load i32, i32* %nb_chrecs, align 4, !dbg !3195
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i32 %4) #6, !dbg !3196
  %nb_undetermined = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 5, !dbg !3197
  %5 = load i32, i32* %nb_undetermined, align 4, !dbg !3197
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.44, i64 0, i64 0), i32 %5) #6, !dbg !3198
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !3199
  %6 = load %struct.htab*, %struct.htab** @scalar_evolution_info, align 8, !dbg !3200
  %call10 = tail call i64 @htab_elements(%struct.htab* %6) #6, !dbg !3201
  %conv = trunc i64 %call10 to i32, !dbg !3202
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.45, i64 0, i64 0), i32 %conv) #6, !dbg !3203
  %7 = load i32, i32* @nb_set_scev, align 4, !dbg !3204
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i64 0, i64 0), i32 %7) #6, !dbg !3205
  %8 = load i32, i32* @nb_get_scev, align 4, !dbg !3206
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i64 0, i64 0), i32 %8) #6, !dbg !3207
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !3208
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !3209
  ret void, !dbg !3210
}

; Function Attrs: nounwind uwtable
define dso_local void @scev_initialize() local_unnamed_addr #5 !dbg !3211 {
entry:
  %li = alloca %struct.loop_iterator, align 8
  %loop = alloca %struct.loop*, align 8
  %0 = bitcast %struct.loop_iterator* %li to i8*, !dbg !3220
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3220
  %1 = bitcast %struct.loop** %loop to i8*, !dbg !3221
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3221
  %call = tail call %struct.htab* @htab_create_alloc(i64 100, i32 (i8*)* nonnull @hash_scev_info, i32 (i8*, i8*)* nonnull @eq_scev_info, void (i8*)* nonnull @del_scev_info, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !3222
  store %struct.htab* %call, %struct.htab** @scalar_evolution_info, align 8, !dbg !3223
  tail call fastcc void @initialize_scalar_evolutions_analyzer() #7, !dbg !3224
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3213, metadata !DIExpression(DW_OP_deref)), !dbg !3225
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3219, metadata !DIExpression(DW_OP_deref)), !dbg !3225
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 0) #7, !dbg !3226
  br label %for.cond, !dbg !3226

for.cond:                                         ; preds = %for.body, %entry
  %2 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3228
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !3219, metadata !DIExpression()), !dbg !3225
  %tobool = icmp eq %struct.loop* %2, null, !dbg !3226
  br i1 %tobool, label %for.end, label %for.body, !dbg !3226

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !3219, metadata !DIExpression()), !dbg !3225
  %nb_iterations = getelementptr inbounds %struct.loop, %struct.loop* %2, i64 0, i32 11, !dbg !3230
  store %union.tree_node* null, %union.tree_node** %nb_iterations, align 8, !dbg !3232
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3213, metadata !DIExpression(DW_OP_deref)), !dbg !3225
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3219, metadata !DIExpression(DW_OP_deref)), !dbg !3225
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #7, !dbg !3228
  br label %for.cond, !dbg !3228, !llvm.loop !3233

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3235
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3235
  ret void, !dbg !3235
}

declare dso_local %struct.htab* @htab_create_alloc(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8* (i64, i64)*, void (i8*)*) local_unnamed_addr #2

declare dso_local i8* @ggc_calloc(i64, i64) #2

declare dso_local void @ggc_free(i8*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @initialize_scalar_evolutions_analyzer() unnamed_addr #5 !dbg !3236 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !3237
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !3239
  br i1 %cmp, label %if.then, label %if.end, !dbg !3240

if.then:                                          ; preds = %entry
  store %union.tree_node* null, %union.tree_node** @chrec_not_analyzed_yet, align 8, !dbg !3241
  %call = tail call %union.tree_node* @make_node_stat(i32 145) #6, !dbg !3243
  store %union.tree_node* %call, %union.tree_node** @chrec_dont_know, align 8, !dbg !3244
  %call1 = tail call %union.tree_node* @make_node_stat(i32 144) #6, !dbg !3245
  store %union.tree_node* %call1, %union.tree_node** @chrec_known, align 8, !dbg !3246
  %1 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !3247
  %2 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @chrec_dont_know to %struct.tree_common**), align 8, !dbg !3248
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !3248
  %3 = bitcast %union.tree_node** %type to i64*, !dbg !3249
  store i64 %1, i64* %3, align 8, !dbg !3249
  %4 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !3250
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3251
  %5 = bitcast %union.tree_node** %type3 to i64*, !dbg !3252
  store i64 %4, i64* %5, align 8, !dbg !3252
  br label %if.end, !dbg !3253

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3254
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_init(%struct.loop_iterator* %li, %struct.loop** %loop, i32 %flags) unnamed_addr #0 !dbg !3255 {
entry:
  %aloop = alloca %struct.loop*, align 8
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3261, metadata !DIExpression()), !dbg !3267
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3262, metadata !DIExpression()), !dbg !3267
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3263, metadata !DIExpression()), !dbg !3267
  %0 = bitcast %struct.loop** %aloop to i8*, !dbg !3268
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3268
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !3269
  store i32 0, i32* %idx, align 8, !dbg !3270
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3271
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 4, !dbg !3271
  %2 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3271
  %tobool = icmp eq %struct.loops* %2, null, !dbg !3271
  br i1 %tobool, label %if.then, label %if.end, !dbg !3273

if.then:                                          ; preds = %entry
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3274
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %to_visit, align 8, !dbg !3276
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !3277
  br label %cleanup, !dbg !3278

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @number_of_loops() #7, !dbg !3279
  %call1 = tail call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %call) #7, !dbg !3279
  %to_visit2 = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3280
  store %struct.VEC_int_heap* %call1, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !3281
  %and = and i32 %flags, 1, !dbg !3282
  %3 = xor i32 %and, 1, !dbg !3283
  call void @llvm.dbg.value(metadata i32 %3, metadata !3266, metadata !DIExpression()), !dbg !3267
  %and4 = and i32 %flags, 4, !dbg !3284
  %tobool5 = icmp eq i32 %and4, 0, !dbg !3284
  br i1 %tobool5, label %if.else, label %for.cond.preheader, !dbg !3286

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !3287

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !3290
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3265, metadata !DIExpression()), !dbg !3267
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3291
  %x_current_loops8 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 4, !dbg !3291
  %5 = load %struct.loops*, %struct.loops** %x_current_loops8, align 8, !dbg !3291
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %5, i64 0, i32 1, !dbg !3291
  %6 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !3291
  %tobool9 = icmp eq %struct.VEC_loop_p_gc* %6, null, !dbg !3291
  br i1 %tobool9, label %cond.end, label %cond.true, !dbg !3291

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %6, i64 0, i32 0, !dbg !3291
  br label %cond.end, !dbg !3291

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond13 = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3291
  call void @llvm.dbg.value(metadata %struct.loop** %aloop, metadata !3264, metadata !DIExpression(DW_OP_deref)), !dbg !3267
  %call14 = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %cond13, i32 %i.0, %struct.loop** nonnull %aloop) #7, !dbg !3291
  %tobool15 = icmp eq i32 %call14, 0, !dbg !3287
  br i1 %tobool15, label %if.end114.loopexit2, label %for.body, !dbg !3287

for.body:                                         ; preds = %cond.end
  %7 = load %struct.loop*, %struct.loop** %aloop, align 8, !dbg !3293
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !3264, metadata !DIExpression()), !dbg !3267
  %cmp = icmp eq %struct.loop* %7, null, !dbg !3295
  br i1 %cmp, label %for.inc, label %land.lhs.true, !dbg !3296

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !3264, metadata !DIExpression()), !dbg !3267
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %7, i64 0, i32 8, !dbg !3297
  %8 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3297
  %cmp16 = icmp eq %struct.loop* %8, null, !dbg !3298
  br i1 %cmp16, label %land.lhs.true17, label %for.inc, !dbg !3299

land.lhs.true17:                                  ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !3264, metadata !DIExpression()), !dbg !3267
  %num = getelementptr inbounds %struct.loop, %struct.loop* %7, i64 0, i32 0, !dbg !3300
  %9 = load i32, i32* %num, align 8, !dbg !3300
  %cmp18 = icmp slt i32 %9, %3, !dbg !3301
  br i1 %cmp18, label %for.inc, label %if.then19, !dbg !3302

if.then19:                                        ; preds = %land.lhs.true17
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !3303
  %tobool21 = icmp eq %struct.VEC_int_heap* %10, null, !dbg !3303
  br i1 %tobool21, label %cond.end26, label %cond.true22, !dbg !3303

cond.true22:                                      ; preds = %if.then19
  %base24 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !3303
  br label %cond.end26, !dbg !3303

cond.end26:                                       ; preds = %if.then19, %cond.true22
  %cond27 = phi %struct.VEC_int_base* [ %base24, %cond.true22 ], [ null, %if.then19 ], !dbg !3303
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !3264, metadata !DIExpression()), !dbg !3267
  %call29 = call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond27, i32 %9) #7, !dbg !3303
  br label %for.inc, !dbg !3303

for.inc:                                          ; preds = %land.lhs.true17, %for.body, %land.lhs.true, %cond.end26
  %inc = add i32 %i.0, 1, !dbg !3304
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3265, metadata !DIExpression()), !dbg !3267
  br label %for.cond, !dbg !3305, !llvm.loop !3306

if.else:                                          ; preds = %if.end
  %and31 = and i32 %flags, 2, !dbg !3308
  %tobool32 = icmp eq i32 %and31, 0, !dbg !3308
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3310
  %x_current_loops35 = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 4, !dbg !3310
  %12 = load %struct.loops*, %struct.loops** %x_current_loops35, align 8, !dbg !3310
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %12, i64 0, i32 3, !dbg !3310
  %13 = bitcast %struct.loop** %tree_root to i64*, !dbg !3310
  %14 = load i64, i64* %13, align 8, !dbg !3310
  %15 = bitcast %struct.loop** %aloop to i64*, !dbg !3310
  store i64 %14, i64* %15, align 8, !dbg !3310
  %16 = inttoptr i64 %14 to %struct.loop*, !dbg !3311
  br i1 %tobool32, label %while.cond79.preheader, label %for.cond36.preheader, !dbg !3311

for.cond36.preheader:                             ; preds = %if.else
  br label %for.cond36, !dbg !3312

while.cond79.preheader:                           ; preds = %if.else
  br label %while.cond79, !dbg !3315

for.cond36:                                       ; preds = %for.cond36.preheader, %for.inc40
  %17 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %18 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %19 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %20 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %21 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %22 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ], !dbg !3317
  call void @llvm.dbg.value(metadata %struct.loop* %22, metadata !3264, metadata !DIExpression()), !dbg !3267
  %inner37 = getelementptr inbounds %struct.loop, %struct.loop* %22, i64 0, i32 8, !dbg !3319
  %23 = load %struct.loop*, %struct.loop** %inner37, align 8, !dbg !3319
  %cmp38 = icmp eq %struct.loop* %23, null, !dbg !3320
  br i1 %cmp38, label %while.cond.preheader, label %for.inc40, !dbg !3312

while.cond.preheader:                             ; preds = %for.cond36
  %.lcssa16 = phi %struct.loop* [ %17, %for.cond36 ]
  %.lcssa15 = phi %struct.loop* [ %18, %for.cond36 ]
  %.lcssa14 = phi %struct.loop* [ %19, %for.cond36 ]
  %.lcssa13 = phi %struct.loop* [ %20, %for.cond36 ]
  br label %while.cond, !dbg !3321

for.inc40:                                        ; preds = %for.cond36
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !3264, metadata !DIExpression()), !dbg !3267
  %inner41 = getelementptr inbounds %struct.loop, %struct.loop* %21, i64 0, i32 8, !dbg !3322
  %24 = bitcast %struct.loop** %inner41 to i64*, !dbg !3322
  %25 = load i64, i64* %24, align 8, !dbg !3322
  store i64 %25, i64* %15, align 8, !dbg !3323
  %26 = inttoptr i64 %25 to %struct.loop*, !dbg !3324
  br label %for.cond36, !dbg !3324, !llvm.loop !3325

while.cond:                                       ; preds = %while.cond.preheader, %if.end74
  %27 = phi %struct.loop* [ %.lcssa16, %while.cond.preheader ], [ %43, %if.end74 ]
  %28 = phi %struct.loop* [ %.lcssa15, %while.cond.preheader ], [ %44, %if.end74 ]
  %29 = phi %struct.loop* [ %.lcssa14, %while.cond.preheader ], [ %44, %if.end74 ]
  %30 = phi %struct.loop* [ %.lcssa13, %while.cond.preheader ], [ %44, %if.end74 ], !dbg !3327
  call void @llvm.dbg.value(metadata %struct.loop* %30, metadata !3264, metadata !DIExpression()), !dbg !3267
  %num43 = getelementptr inbounds %struct.loop, %struct.loop* %30, i64 0, i32 0, !dbg !3330
  %31 = load i32, i32* %num43, align 8, !dbg !3330
  %cmp44 = icmp slt i32 %31, %3, !dbg !3331
  br i1 %cmp44, label %if.end56, label %if.then45, !dbg !3332

if.then45:                                        ; preds = %while.cond
  %32 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !3333
  %tobool47 = icmp eq %struct.VEC_int_heap* %32, null, !dbg !3333
  br i1 %tobool47, label %cond.end52, label %cond.true48, !dbg !3333

cond.true48:                                      ; preds = %if.then45
  %base50 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %32, i64 0, i32 0, !dbg !3333
  br label %cond.end52, !dbg !3333

cond.end52:                                       ; preds = %if.then45, %cond.true48
  %cond53 = phi %struct.VEC_int_base* [ %base50, %cond.true48 ], [ null, %if.then45 ], !dbg !3333
  call void @llvm.dbg.value(metadata %struct.loop* %29, metadata !3264, metadata !DIExpression()), !dbg !3267
  %num54 = getelementptr inbounds %struct.loop, %struct.loop* %29, i64 0, i32 0, !dbg !3333
  %33 = load i32, i32* %num54, align 8, !dbg !3333
  %call55 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond53, i32 %33) #7, !dbg !3333
  br label %if.end56, !dbg !3333

if.end56:                                         ; preds = %while.cond, %cond.end52
  call void @llvm.dbg.value(metadata %struct.loop* %28, metadata !3264, metadata !DIExpression()), !dbg !3267
  %next = getelementptr inbounds %struct.loop, %struct.loop* %28, i64 0, i32 9, !dbg !3334
  %34 = load %struct.loop*, %struct.loop** %next, align 8, !dbg !3334
  %tobool57 = icmp eq %struct.loop* %34, null, !dbg !3336
  call void @llvm.dbg.value(metadata %struct.loop* %28, metadata !3264, metadata !DIExpression()), !dbg !3267
  br i1 %tobool57, label %if.else67, label %if.then58, !dbg !3337

if.then58:                                        ; preds = %if.end56
  %35 = ptrtoint %struct.loop* %34 to i64, !dbg !3337
  store i64 %35, i64* %15, align 8, !dbg !3338
  br label %for.cond60, !dbg !3341

for.cond60:                                       ; preds = %for.inc64, %if.then58
  %36 = phi %struct.loop* [ %42, %for.inc64 ], [ %34, %if.then58 ]
  %37 = phi %struct.loop* [ %42, %for.inc64 ], [ %34, %if.then58 ]
  %38 = phi %struct.loop* [ %42, %for.inc64 ], [ %34, %if.then58 ], !dbg !3342
  call void @llvm.dbg.value(metadata %struct.loop* %38, metadata !3264, metadata !DIExpression()), !dbg !3267
  %inner61 = getelementptr inbounds %struct.loop, %struct.loop* %38, i64 0, i32 8, !dbg !3344
  %39 = load %struct.loop*, %struct.loop** %inner61, align 8, !dbg !3344
  %cmp62 = icmp eq %struct.loop* %39, null, !dbg !3345
  br i1 %cmp62, label %if.end74.loopexit, label %for.inc64, !dbg !3346

for.inc64:                                        ; preds = %for.cond60
  call void @llvm.dbg.value(metadata %struct.loop* %37, metadata !3264, metadata !DIExpression()), !dbg !3267
  %inner65 = getelementptr inbounds %struct.loop, %struct.loop* %37, i64 0, i32 8, !dbg !3347
  %40 = bitcast %struct.loop** %inner65 to i64*, !dbg !3347
  %41 = load i64, i64* %40, align 8, !dbg !3347
  store i64 %41, i64* %15, align 8, !dbg !3348
  %42 = inttoptr i64 %41 to %struct.loop*, !dbg !3349
  br label %for.cond60, !dbg !3349, !llvm.loop !3350

if.else67:                                        ; preds = %if.end56
  %call68 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %28) #7, !dbg !3352
  %tobool69 = icmp eq %struct.loop* %call68, null, !dbg !3352
  br i1 %tobool69, label %if.end114.loopexit1, label %if.else71, !dbg !3354

if.else71:                                        ; preds = %if.else67
  call void @llvm.dbg.value(metadata %struct.loop* %27, metadata !3264, metadata !DIExpression()), !dbg !3267
  %call72 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %27) #7, !dbg !3355
  call void @llvm.dbg.value(metadata %struct.loop* %call72, metadata !3264, metadata !DIExpression()), !dbg !3267
  store %struct.loop* %call72, %struct.loop** %aloop, align 8, !dbg !3356
  br label %if.end74

if.end74.loopexit:                                ; preds = %for.cond60
  %.lcssa12 = phi %struct.loop* [ %36, %for.cond60 ]
  %.lcssa11 = phi %struct.loop* [ %38, %for.cond60 ], !dbg !3342
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa11, metadata !3264, metadata !DIExpression()), !dbg !3267
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa11, metadata !3264, metadata !DIExpression()), !dbg !3267
  br label %if.end74, !dbg !3321

if.end74:                                         ; preds = %if.end74.loopexit, %if.else71
  %43 = phi %struct.loop* [ %.lcssa12, %if.end74.loopexit ], [ %call72, %if.else71 ]
  %44 = phi %struct.loop* [ %.lcssa11, %if.end74.loopexit ], [ %call72, %if.else71 ]
  br label %while.cond, !dbg !3321, !llvm.loop !3357

while.cond79:                                     ; preds = %while.cond79.preheader, %if.end111
  %45 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %69, %if.end111 ]
  %46 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %70, %if.end111 ]
  %47 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %71, %if.end111 ]
  %48 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %72, %if.end111 ]
  %49 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %73, %if.end111 ]
  %50 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %74, %if.end111 ]
  %51 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %75, %if.end111 ]
  %52 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %76, %if.end111 ], !dbg !3359
  call void @llvm.dbg.value(metadata %struct.loop* %52, metadata !3264, metadata !DIExpression()), !dbg !3267
  %num81 = getelementptr inbounds %struct.loop, %struct.loop* %52, i64 0, i32 0, !dbg !3362
  %53 = load i32, i32* %num81, align 8, !dbg !3362
  %cmp82 = icmp slt i32 %53, %3, !dbg !3363
  br i1 %cmp82, label %if.end94, label %if.then83, !dbg !3364

if.then83:                                        ; preds = %while.cond79
  %54 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !3365
  %tobool85 = icmp eq %struct.VEC_int_heap* %54, null, !dbg !3365
  br i1 %tobool85, label %cond.end90, label %cond.true86, !dbg !3365

cond.true86:                                      ; preds = %if.then83
  %base88 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %54, i64 0, i32 0, !dbg !3365
  br label %cond.end90, !dbg !3365

cond.end90:                                       ; preds = %if.then83, %cond.true86
  %cond91 = phi %struct.VEC_int_base* [ %base88, %cond.true86 ], [ null, %if.then83 ], !dbg !3365
  call void @llvm.dbg.value(metadata %struct.loop* %51, metadata !3264, metadata !DIExpression()), !dbg !3267
  %num92 = getelementptr inbounds %struct.loop, %struct.loop* %51, i64 0, i32 0, !dbg !3365
  %55 = load i32, i32* %num92, align 8, !dbg !3365
  %call93 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond91, i32 %55) #7, !dbg !3365
  br label %if.end94, !dbg !3365

if.end94:                                         ; preds = %while.cond79, %cond.end90
  call void @llvm.dbg.value(metadata %struct.loop* %50, metadata !3264, metadata !DIExpression()), !dbg !3267
  %inner95 = getelementptr inbounds %struct.loop, %struct.loop* %50, i64 0, i32 8, !dbg !3366
  %56 = load %struct.loop*, %struct.loop** %inner95, align 8, !dbg !3366
  %cmp96 = icmp eq %struct.loop* %56, null, !dbg !3368
  br i1 %cmp96, label %while.cond100.preheader, label %if.then97, !dbg !3369

while.cond100.preheader:                          ; preds = %if.end94
  br label %while.cond100, !dbg !3370

if.then97:                                        ; preds = %if.end94
  call void @llvm.dbg.value(metadata %struct.loop* %49, metadata !3264, metadata !DIExpression()), !dbg !3267
  %inner98 = getelementptr inbounds %struct.loop, %struct.loop* %49, i64 0, i32 8, !dbg !3372
  %57 = bitcast %struct.loop** %inner98 to i64*, !dbg !3372
  %58 = load i64, i64* %57, align 8, !dbg !3372
  store i64 %58, i64* %15, align 8, !dbg !3373
  %59 = inttoptr i64 %58 to %struct.loop*, !dbg !3374
  br label %if.end111, !dbg !3374

while.cond100:                                    ; preds = %while.cond100.preheader, %while.body104
  %60 = phi %struct.loop* [ %45, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %61 = phi %struct.loop* [ %46, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %62 = phi %struct.loop* [ %47, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %63 = phi %struct.loop* [ %48, %while.cond100.preheader ], [ %call105, %while.body104 ], !dbg !3375
  call void @llvm.dbg.value(metadata %struct.loop* %63, metadata !3264, metadata !DIExpression()), !dbg !3267
  %cmp101 = icmp eq %struct.loop* %63, null, !dbg !3376
  br i1 %cmp101, label %land.end, label %land.rhs, !dbg !3377

land.rhs:                                         ; preds = %while.cond100
  call void @llvm.dbg.value(metadata %struct.loop* %62, metadata !3264, metadata !DIExpression()), !dbg !3267
  %next102 = getelementptr inbounds %struct.loop, %struct.loop* %62, i64 0, i32 9, !dbg !3378
  %64 = load %struct.loop*, %struct.loop** %next102, align 8, !dbg !3378
  %cmp103 = icmp eq %struct.loop* %64, null, !dbg !3379
  br label %land.end

land.end:                                         ; preds = %while.cond100, %land.rhs
  %65 = phi i1 [ false, %while.cond100 ], [ %cmp103, %land.rhs ], !dbg !3380
  call void @llvm.dbg.value(metadata %struct.loop* %61, metadata !3264, metadata !DIExpression()), !dbg !3267
  br i1 %65, label %while.body104, label %while.end106, !dbg !3370

while.body104:                                    ; preds = %land.end
  %call105 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %61) #7, !dbg !3381
  call void @llvm.dbg.value(metadata %struct.loop* %call105, metadata !3264, metadata !DIExpression()), !dbg !3267
  store %struct.loop* %call105, %struct.loop** %aloop, align 8, !dbg !3382
  br label %while.cond100, !dbg !3370, !llvm.loop !3383

while.end106:                                     ; preds = %land.end
  %.lcssa10 = phi %struct.loop* [ %60, %land.end ]
  %.lcssa = phi %struct.loop* [ %61, %land.end ]
  %cmp107 = icmp eq %struct.loop* %.lcssa, null, !dbg !3385
  br i1 %cmp107, label %if.end114.loopexit, label %if.end109, !dbg !3387

if.end109:                                        ; preds = %while.end106
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa10, metadata !3264, metadata !DIExpression()), !dbg !3267
  %next110 = getelementptr inbounds %struct.loop, %struct.loop* %.lcssa10, i64 0, i32 9, !dbg !3388
  %66 = bitcast %struct.loop** %next110 to i64*, !dbg !3388
  %67 = load i64, i64* %66, align 8, !dbg !3388
  store i64 %67, i64* %15, align 8, !dbg !3389
  %68 = inttoptr i64 %67 to %struct.loop*
  br label %if.end111

if.end111:                                        ; preds = %if.end109, %if.then97
  %69 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %70 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %71 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %72 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %73 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %74 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %75 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %76 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  br label %while.cond79, !dbg !3315, !llvm.loop !3390

if.end114.loopexit:                               ; preds = %while.end106
  br label %if.end114, !dbg !3392

if.end114.loopexit1:                              ; preds = %if.else67
  br label %if.end114, !dbg !3392

if.end114.loopexit2:                              ; preds = %cond.end
  br label %if.end114, !dbg !3392

if.end114:                                        ; preds = %if.end114.loopexit2, %if.end114.loopexit1, %if.end114.loopexit
  call fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) #7, !dbg !3392
  br label %cleanup, !dbg !3393

cleanup:                                          ; preds = %if.end114, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3393
  ret void, !dbg !3393
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) unnamed_addr #0 !dbg !3394 {
entry:
  %anum = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3398, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3399, metadata !DIExpression()), !dbg !3401
  %0 = bitcast i32* %anum to i8*, !dbg !3402
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3402
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3401
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !3401
  br label %while.cond, !dbg !3403

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit, align 8, !dbg !3404
  %tobool = icmp eq %struct.VEC_int_heap* %1, null, !dbg !3404
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3404

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !3404
  br label %cond.end, !dbg !3404

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !3404
  %2 = load i32, i32* %idx, align 8, !dbg !3404
  call void @llvm.dbg.value(metadata i32* %anum, metadata !3400, metadata !DIExpression(DW_OP_deref)), !dbg !3401
  %call = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %cond, i32 %2, i32* nonnull %anum) #7, !dbg !3404
  %tobool2 = icmp eq i32 %call, 0, !dbg !3403
  br i1 %tobool2, label %while.end, label %while.body, !dbg !3403

while.body:                                       ; preds = %cond.end
  %3 = load i32, i32* %idx, align 8, !dbg !3405
  %inc = add i32 %3, 1, !dbg !3405
  store i32 %inc, i32* %idx, align 8, !dbg !3405
  %4 = load i32, i32* %anum, align 4, !dbg !3407
  call void @llvm.dbg.value(metadata i32 %4, metadata !3400, metadata !DIExpression()), !dbg !3401
  %call4 = call fastcc %struct.loop* @get_loop(i32 %4) #7, !dbg !3408
  store %struct.loop* %call4, %struct.loop** %loop, align 8, !dbg !3409
  %tobool5 = icmp eq %struct.loop* %call4, null, !dbg !3410
  br i1 %tobool5, label %while.cond, label %cleanup.loopexit, !dbg !3412, !llvm.loop !3413

while.end:                                        ; preds = %cond.end
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %to_visit) #7, !dbg !3415
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !3416
  br label %cleanup, !dbg !3417

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !3417

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3417
  ret void, !dbg !3417
}

; Function Attrs: nounwind uwtable
define dso_local void @scev_reset_htab() local_unnamed_addr #5 !dbg !3418 {
entry:
  %0 = load %struct.htab*, %struct.htab** @scalar_evolution_info, align 8, !dbg !3419
  %tobool = icmp eq %struct.htab* %0, null, !dbg !3419
  br i1 %tobool, label %return, label %if.end, !dbg !3421

if.end:                                           ; preds = %entry
  tail call void @htab_empty(%struct.htab* nonnull %0) #6, !dbg !3422
  br label %return, !dbg !3423

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !3423
}

declare dso_local void @htab_empty(%struct.htab*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @scev_reset() local_unnamed_addr #5 !dbg !3424 {
entry:
  %li = alloca %struct.loop_iterator, align 8
  %loop = alloca %struct.loop*, align 8
  %0 = bitcast %struct.loop_iterator* %li to i8*, !dbg !3428
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3428
  %1 = bitcast %struct.loop** %loop to i8*, !dbg !3429
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3429
  tail call void @scev_reset_htab() #7, !dbg !3430
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3431
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 4, !dbg !3431
  %3 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3431
  %tobool = icmp eq %struct.loops* %3, null, !dbg !3431
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3433

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3426, metadata !DIExpression(DW_OP_deref)), !dbg !3434
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3427, metadata !DIExpression(DW_OP_deref)), !dbg !3434
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 0) #7, !dbg !3435
  br label %for.cond, !dbg !3435

for.cond:                                         ; preds = %for.body, %if.end
  %4 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3437
  call void @llvm.dbg.value(metadata %struct.loop* %4, metadata !3427, metadata !DIExpression()), !dbg !3434
  %tobool1 = icmp eq %struct.loop* %4, null, !dbg !3435
  br i1 %tobool1, label %cleanup.loopexit, label %for.body, !dbg !3435

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.loop* %4, metadata !3427, metadata !DIExpression()), !dbg !3434
  %nb_iterations = getelementptr inbounds %struct.loop, %struct.loop* %4, i64 0, i32 11, !dbg !3439
  store %union.tree_node* null, %union.tree_node** %nb_iterations, align 8, !dbg !3441
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3426, metadata !DIExpression(DW_OP_deref)), !dbg !3434
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3427, metadata !DIExpression(DW_OP_deref)), !dbg !3434
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #7, !dbg !3437
  br label %for.cond, !dbg !3437, !llvm.loop !3442

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !3444

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3444
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3444
  ret void, !dbg !3444
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @simple_iv(%struct.loop* %wrto_loop, %struct.loop* %use_loop, %union.tree_node* %op, %struct.affine_iv* %iv, i8 zeroext %allow_nonconstant_step) local_unnamed_addr #5 !dbg !3445 {
entry:
  %folded_casts = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.loop* %wrto_loop, metadata !3450, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.value(metadata %struct.loop* %use_loop, metadata !3451, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !3452, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.value(metadata %struct.affine_iv* %iv, metadata !3453, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.value(metadata i8 %allow_nonconstant_step, metadata !3454, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.value(metadata i8* %folded_casts, metadata !3457, metadata !DIExpression(DW_OP_deref)), !dbg !3458
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %folded_casts) #8, !dbg !3459
  %base = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %iv, i64 0, i32 0, !dbg !3460
  store %union.tree_node* null, %union.tree_node** %base, align 8, !dbg !3461
  %step = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %iv, i64 0, i32 1, !dbg !3462
  store %union.tree_node* null, %union.tree_node** %step, align 8, !dbg !3463
  %no_overflow = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %iv, i64 0, i32 2, !dbg !3464
  store i8 0, i8* %no_overflow, align 8, !dbg !3465
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3466
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !3466
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3455, metadata !DIExpression()), !dbg !3458
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3467
  %bf.load = load i64, i64* %1, align 8, !dbg !3467
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3469
  %cmp = icmp eq i64 %bf.cast2, 8, !dbg !3469
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !3470

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp eq i64 %bf.cast2, 10, !dbg !3471
  br i1 %cmp7, label %if.end, label %cleanup, !dbg !3472

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.value(metadata i8* %folded_casts, metadata !3457, metadata !DIExpression(DW_OP_deref)), !dbg !3458
  %call = call fastcc %union.tree_node* @analyze_scalar_evolution_in_loop(%struct.loop* %wrto_loop, %struct.loop* %use_loop, %union.tree_node* %op, i8* nonnull %folded_casts) #7, !dbg !3473
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3456, metadata !DIExpression()), !dbg !3458
  %call8 = call zeroext i8 @chrec_contains_undetermined(%union.tree_node* %call) #6, !dbg !3474
  %tobool = icmp eq i8 %call8, 0, !dbg !3474
  br i1 %tobool, label %lor.lhs.false, label %cleanup, !dbg !3476

lor.lhs.false:                                    ; preds = %if.end
  %num = getelementptr inbounds %struct.loop, %struct.loop* %wrto_loop, i64 0, i32 0, !dbg !3477
  %2 = load i32, i32* %num, align 8, !dbg !3477
  %call9 = call zeroext i8 @chrec_contains_symbols_defined_in_loop(%union.tree_node* %call, i32 %2) #7, !dbg !3478
  %tobool11 = icmp eq i8 %call9, 0, !dbg !3478
  br i1 %tobool11, label %if.end13, label %cleanup, !dbg !3479

if.end13:                                         ; preds = %lor.lhs.false
  %call14 = call fastcc zeroext i8 @tree_does_not_contain_chrecs(%union.tree_node* %call) #7, !dbg !3480
  %tobool15 = icmp eq i8 %call14, 0, !dbg !3480
  br i1 %tobool15, label %if.end23, label %if.then16, !dbg !3482

if.then16:                                        ; preds = %if.end13
  store %union.tree_node* %call, %union.tree_node** %base, align 8, !dbg !3483
  %type19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3485
  %3 = load %union.tree_node*, %union.tree_node** %type19, align 8, !dbg !3485
  %call20 = call %union.tree_node* @build_int_cst(%union.tree_node* %3, i64 0) #6, !dbg !3486
  store %union.tree_node* %call20, %union.tree_node** %step, align 8, !dbg !3487
  store i8 1, i8* %no_overflow, align 8, !dbg !3488
  br label %cleanup, !dbg !3489

if.end23:                                         ; preds = %if.end13
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3490
  %bf.load25 = load i64, i64* %4, align 8, !dbg !3490
  %bf.cast273 = and i64 %bf.load25, 65535, !dbg !3492
  %cmp28 = icmp eq i64 %bf.cast273, 146, !dbg !3492
  br i1 %cmp28, label %lor.lhs.false30, label %cleanup, !dbg !3493

lor.lhs.false30:                                  ; preds = %if.end23
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3494
  %5 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !3494
  %6 = load %struct.tree_int_cst*, %struct.tree_int_cst** %5, align 8, !dbg !3494
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %6, i64 0, i32 1, i32 0, !dbg !3494
  %7 = load i64, i64* %low, align 8, !dbg !3494
  %8 = load i32, i32* %num, align 8, !dbg !3495
  %conv33 = zext i32 %8 to i64, !dbg !3496
  %cmp34 = icmp eq i64 %7, %conv33, !dbg !3497
  br i1 %cmp34, label %if.end37, label %cleanup, !dbg !3498

if.end37:                                         ; preds = %lor.lhs.false30
  %arrayidx40 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !3499
  %9 = bitcast %union.tree_node** %arrayidx40 to i64*, !dbg !3499
  %10 = load i64, i64* %9, align 8, !dbg !3499
  %11 = bitcast %union.tree_node** %step to i64*, !dbg !3500
  store i64 %10, i64* %11, align 8, !dbg !3500
  %tobool42 = icmp eq i8 %allow_nonconstant_step, 0, !dbg !3501
  %12 = inttoptr i64 %10 to %union.tree_node*, !dbg !3503
  br i1 %tobool42, label %land.lhs.true43, label %lor.lhs.false51, !dbg !3503

land.lhs.true43:                                  ; preds = %if.end37
  %13 = inttoptr i64 %10 to i64*, !dbg !3503
  %bf.load46 = load i64, i64* %13, align 8, !dbg !3504
  %bf.cast484 = and i64 %bf.load46, 65535, !dbg !3505
  %cmp49 = icmp eq i64 %bf.cast484, 23, !dbg !3505
  br i1 %cmp49, label %lor.lhs.false51, label %cleanup, !dbg !3506

lor.lhs.false51:                                  ; preds = %land.lhs.true43, %if.end37
  %call53 = call zeroext i8 @tree_contains_chrecs(%union.tree_node* %12, i32* null) #6, !dbg !3507
  %tobool55 = icmp eq i8 %call53, 0, !dbg !3507
  br i1 %tobool55, label %if.end57, label %cleanup, !dbg !3508

if.end57:                                         ; preds = %lor.lhs.false51
  %arrayidx60 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3509
  %14 = bitcast %union.tree_node** %arrayidx60 to i64*, !dbg !3509
  %15 = load i64, i64* %14, align 8, !dbg !3509
  %16 = bitcast %struct.affine_iv* %iv to i64*, !dbg !3510
  store i64 %15, i64* %16, align 8, !dbg !3510
  %.cast = inttoptr i64 %15 to %union.tree_node*, !dbg !3511
  %call63 = call zeroext i8 @tree_contains_chrecs(%union.tree_node* %.cast, i32* null) #6, !dbg !3513
  %tobool64 = icmp eq i8 %call63, 0, !dbg !3513
  br i1 %tobool64, label %if.end66, label %cleanup, !dbg !3514

if.end66:                                         ; preds = %if.end57
  %17 = load i8, i8* %folded_casts, align 1, !dbg !3515
  call void @llvm.dbg.value(metadata i8 %17, metadata !3457, metadata !DIExpression()), !dbg !3458
  %tobool67 = icmp eq i8 %17, 0, !dbg !3515
  br i1 %tobool67, label %land.rhs, label %land.end79, !dbg !3516

land.rhs:                                         ; preds = %if.end66
  %bf.load69 = load i64, i64* %1, align 8, !dbg !3517
  %bf.cast715 = and i64 %bf.load69, 2097152, !dbg !3517
  %tobool72 = icmp ne i64 %bf.cast715, 0, !dbg !3517
  %18 = load i32, i32* @flag_wrapv, align 4, !dbg !3517
  %19 = load i32, i32* @flag_trapv, align 4, !dbg !3517
  %20 = or i32 %18, %19, !dbg !3517
  %21 = icmp ne i32 %20, 0, !dbg !3517
  %22 = or i1 %21, %tobool72, !dbg !3517
  br i1 %22, label %land.end79, label %land.rhs77, !dbg !3517

land.rhs77:                                       ; preds = %land.rhs
  %23 = load i32, i32* @flag_strict_overflow, align 4, !dbg !3517
  %tobool78 = icmp ne i32 %23, 0, !dbg !3517
  %phitmp = zext i1 %tobool78 to i8
  br label %land.end79

land.end79:                                       ; preds = %if.end66, %land.rhs, %land.rhs77
  %24 = phi i8 [ 0, %if.end66 ], [ 0, %land.rhs ], [ %phitmp, %land.rhs77 ]
  store i8 %24, i8* %no_overflow, align 8, !dbg !3518
  br label %cleanup, !dbg !3519

cleanup:                                          ; preds = %land.lhs.true, %if.end57, %lor.lhs.false51, %land.lhs.true43, %lor.lhs.false30, %if.end23, %lor.lhs.false, %if.end, %land.end79, %if.then16
  %retval.0 = phi i8 [ 1, %if.then16 ], [ 1, %land.end79 ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %lor.lhs.false30 ], [ 0, %if.end23 ], [ 0, %lor.lhs.false51 ], [ 0, %land.lhs.true43 ], [ 0, %if.end57 ], !dbg !3458
  call void @llvm.dbg.value(metadata i8* %folded_casts, metadata !3457, metadata !DIExpression(DW_OP_deref)), !dbg !3458
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %folded_casts) #8, !dbg !3520
  ret i8 %retval.0, !dbg !3520
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @analyze_scalar_evolution_in_loop(%struct.loop* %wrto_loop, %struct.loop* %use_loop, %union.tree_node* %version, i8* %folded_casts) unnamed_addr #5 !dbg !3521 {
entry:
  %val = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.loop* %wrto_loop, metadata !3525, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata %struct.loop* %use_loop, metadata !3526, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata %union.tree_node* %version, metadata !3527, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i8* %folded_casts, metadata !3528, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i8* %val, metadata !3529, metadata !DIExpression(DW_OP_deref)), !dbg !3532
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %val) #8, !dbg !3533
  call void @llvm.dbg.value(metadata i8 0, metadata !3529, metadata !DIExpression()), !dbg !3532
  store i8 0, i8* %val, align 1, !dbg !3534
  call void @llvm.dbg.value(metadata %union.tree_node* %version, metadata !3530, metadata !DIExpression()), !dbg !3532
  %tobool = icmp eq i8* %folded_casts, null, !dbg !3535
  br i1 %tobool, label %if.end, label %if.then, !dbg !3537

if.then:                                          ; preds = %entry
  store i8 0, i8* %folded_casts, align 1, !dbg !3538
  br label %if.end, !dbg !3539

if.end:                                           ; preds = %entry, %if.then
  br i1 %tobool, label %if.end.if.end.split_crit_edge, label %if.end.split.us, !dbg !3540

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %while.cond, !dbg !3540

if.end.split.us:                                  ; preds = %if.end
  br label %while.cond.us, !dbg !3540

while.cond.us:                                    ; preds = %if.end12.us, %if.end.split.us
  %ev.0.us = phi %union.tree_node* [ %version, %if.end.split.us ], [ %call1.us, %if.end12.us ], !dbg !3532
  %use_loop.addr.0.us = phi %struct.loop* [ %use_loop, %if.end.split.us ], [ %call13.us, %if.end12.us ]
  call void @llvm.dbg.value(metadata %struct.loop* %use_loop.addr.0.us, metadata !3526, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata %union.tree_node* %ev.0.us, metadata !3530, metadata !DIExpression()), !dbg !3532
  %call.us = call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %use_loop.addr.0.us, %union.tree_node* %ev.0.us) #7, !dbg !3541
  call void @llvm.dbg.value(metadata %union.tree_node* %call.us, metadata !3531, metadata !DIExpression()), !dbg !3532
  %call1.us = call %union.tree_node* @resolve_mixers(%struct.loop* %use_loop.addr.0.us, %union.tree_node* %call.us) #7, !dbg !3543
  call void @llvm.dbg.value(metadata %union.tree_node* %call1.us, metadata !3530, metadata !DIExpression()), !dbg !3532
  %cmp.us = icmp eq %union.tree_node* %call.us, %call1.us, !dbg !3544
  br i1 %cmp.us, label %if.end4.us, label %if.then3.us, !dbg !3546

if.then3.us:                                      ; preds = %while.cond.us
  store i8 1, i8* %folded_casts, align 1, !dbg !3547
  br label %if.end4.us, !dbg !3548

if.end4.us:                                       ; preds = %while.cond.us, %if.then3.us
  %cmp5.us = icmp eq %struct.loop* %use_loop.addr.0.us, %wrto_loop, !dbg !3549
  br i1 %cmp5.us, label %cleanup.loopexit.us-lcssa.us, label %if.end7.us, !dbg !3551

if.end7.us:                                       ; preds = %if.end4.us
  %num.us = getelementptr inbounds %struct.loop, %struct.loop* %use_loop.addr.0.us, i64 0, i32 0, !dbg !3552
  %0 = load i32, i32* %num.us, align 8, !dbg !3552
  call void @llvm.dbg.value(metadata i8* %val, metadata !3529, metadata !DIExpression(DW_OP_deref)), !dbg !3532
  %call8.us = call fastcc zeroext i8 @no_evolution_in_loop_p(%union.tree_node* %call1.us, i32 %0, i8* nonnull %val) #7, !dbg !3554
  %tobool9.us = icmp ne i8 %call8.us, 0, !dbg !3554
  %1 = load i8, i8* %val, align 1, !dbg !3555
  call void @llvm.dbg.value(metadata i8 %1, metadata !3529, metadata !DIExpression()), !dbg !3532
  %tobool10.us = icmp ne i8 %1, 0, !dbg !3555
  %or.cond1.us = and i1 %tobool9.us, %tobool10.us, !dbg !3556
  br i1 %or.cond1.us, label %if.end12.us, label %if.then11.us-lcssa.us, !dbg !3556

if.end12.us:                                      ; preds = %if.end7.us
  %call13.us = call fastcc %struct.loop* @loop_outer(%struct.loop* %use_loop.addr.0.us) #7, !dbg !3557
  call void @llvm.dbg.value(metadata %struct.loop* %call13.us, metadata !3526, metadata !DIExpression()), !dbg !3532
  br label %while.cond.us, !dbg !3540, !llvm.loop !3558

cleanup.loopexit.us-lcssa.us:                     ; preds = %if.end4.us
  %call1.us.lcssa = phi %union.tree_node* [ %call1.us, %if.end4.us ], !dbg !3543
  br label %cleanup.loopexit, !dbg !3560

if.then11.us-lcssa.us:                            ; preds = %if.end7.us
  br label %if.then11, !dbg !3561

while.cond:                                       ; preds = %if.end12, %if.end.if.end.split_crit_edge
  %ev.0 = phi %union.tree_node* [ %version, %if.end.if.end.split_crit_edge ], [ %call1, %if.end12 ], !dbg !3532
  %use_loop.addr.0 = phi %struct.loop* [ %use_loop, %if.end.if.end.split_crit_edge ], [ %call13, %if.end12 ]
  call void @llvm.dbg.value(metadata %struct.loop* %use_loop.addr.0, metadata !3526, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata %union.tree_node* %ev.0, metadata !3530, metadata !DIExpression()), !dbg !3532
  %call = call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %use_loop.addr.0, %union.tree_node* %ev.0) #7, !dbg !3541
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3531, metadata !DIExpression()), !dbg !3532
  %call1 = call %union.tree_node* @resolve_mixers(%struct.loop* %use_loop.addr.0, %union.tree_node* %call) #7, !dbg !3543
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3530, metadata !DIExpression()), !dbg !3532
  %cmp5 = icmp eq %struct.loop* %use_loop.addr.0, %wrto_loop, !dbg !3549
  br i1 %cmp5, label %cleanup.loopexit.us-lcssa, label %if.end7, !dbg !3551

if.end7:                                          ; preds = %while.cond
  %num = getelementptr inbounds %struct.loop, %struct.loop* %use_loop.addr.0, i64 0, i32 0, !dbg !3552
  %2 = load i32, i32* %num, align 8, !dbg !3552
  call void @llvm.dbg.value(metadata i8* %val, metadata !3529, metadata !DIExpression(DW_OP_deref)), !dbg !3532
  %call8 = call fastcc zeroext i8 @no_evolution_in_loop_p(%union.tree_node* %call1, i32 %2, i8* nonnull %val) #7, !dbg !3554
  %tobool9 = icmp ne i8 %call8, 0, !dbg !3554
  %3 = load i8, i8* %val, align 1, !dbg !3555
  call void @llvm.dbg.value(metadata i8 %3, metadata !3529, metadata !DIExpression()), !dbg !3532
  %tobool10 = icmp ne i8 %3, 0, !dbg !3555
  %or.cond1 = and i1 %tobool9, %tobool10, !dbg !3556
  br i1 %or.cond1, label %if.end12, label %if.then11.us-lcssa, !dbg !3556

if.then11.us-lcssa:                               ; preds = %if.end7
  br label %if.then11, !dbg !3561

if.then11:                                        ; preds = %if.then11.us-lcssa.us, %if.then11.us-lcssa
  %4 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !3561
  br label %cleanup, !dbg !3562

if.end12:                                         ; preds = %if.end7
  %call13 = call fastcc %struct.loop* @loop_outer(%struct.loop* %use_loop.addr.0) #7, !dbg !3557
  call void @llvm.dbg.value(metadata %struct.loop* %call13, metadata !3526, metadata !DIExpression()), !dbg !3532
  br label %while.cond, !dbg !3540, !llvm.loop !3558

cleanup.loopexit.us-lcssa:                        ; preds = %while.cond
  %call1.lcssa6 = phi %union.tree_node* [ %call1, %while.cond ], !dbg !3543
  br label %cleanup.loopexit, !dbg !3560

cleanup.loopexit:                                 ; preds = %cleanup.loopexit.us-lcssa.us, %cleanup.loopexit.us-lcssa
  %call1.lcssa = phi %union.tree_node* [ %call1.lcssa6, %cleanup.loopexit.us-lcssa ], [ %call1.us.lcssa, %cleanup.loopexit.us-lcssa.us ], !dbg !3543
  br label %cleanup, !dbg !3560

cleanup:                                          ; preds = %cleanup.loopexit, %if.then11
  %retval.0 = phi %union.tree_node* [ %4, %if.then11 ], [ %call1.lcssa, %cleanup.loopexit ], !dbg !3563
  call void @llvm.dbg.value(metadata i8* %val, metadata !3529, metadata !DIExpression(DW_OP_deref)), !dbg !3532
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %val) #8, !dbg !3560
  ret %union.tree_node* %retval.0, !dbg !3560
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @tree_does_not_contain_chrecs(%union.tree_node* %expr) unnamed_addr #0 !dbg !3564 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3566, metadata !DIExpression()), !dbg !3567
  %call = tail call zeroext i8 @tree_contains_chrecs(%union.tree_node* %expr, i32* null) #6, !dbg !3568
  %tobool = icmp eq i8 %call, 0, !dbg !3569
  %conv = zext i1 %tobool to i8, !dbg !3569
  ret i8 %conv, !dbg !3570
}

declare dso_local zeroext i8 @tree_contains_chrecs(%union.tree_node*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @scev_analysis() local_unnamed_addr #5 !dbg !3571 {
entry:
  %exit_conditions = alloca %struct.VEC_gimple_heap*, align 8
  %0 = bitcast %struct.VEC_gimple_heap** %exit_conditions to i8*, !dbg !3574
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3574
  %call = tail call fastcc %struct.VEC_gimple_heap* @VEC_gimple_heap_alloc(i32 37) #7, !dbg !3575
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %call, metadata !3573, metadata !DIExpression()), !dbg !3576
  store %struct.VEC_gimple_heap* %call, %struct.VEC_gimple_heap** %exit_conditions, align 8, !dbg !3577
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %exit_conditions, metadata !3573, metadata !DIExpression(DW_OP_deref)), !dbg !3576
  call fastcc void @select_loops_exit_conditions(%struct.VEC_gimple_heap** nonnull %exit_conditions) #7, !dbg !3578
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3579
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !3579
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3581

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !3582
  %and = and i32 %2, 16, !dbg !3583
  %tobool1 = icmp eq i32 %and, 0, !dbg !3583
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3584

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %exit_conditions, metadata !3573, metadata !DIExpression(DW_OP_deref)), !dbg !3576
  call fastcc void @analyze_scalar_evolution_for_all_loop_phi_nodes(%struct.VEC_gimple_heap** nonnull %exit_conditions) #7, !dbg !3585
  br label %if.end, !dbg !3585

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %exit_conditions, metadata !3573, metadata !DIExpression(DW_OP_deref)), !dbg !3576
  call fastcc void @number_of_iterations_for_all_loops(%struct.VEC_gimple_heap** nonnull %exit_conditions) #7, !dbg !3586
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %exit_conditions, metadata !3573, metadata !DIExpression(DW_OP_deref)), !dbg !3576
  call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull %exit_conditions) #7, !dbg !3587
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3588
  ret void, !dbg !3588
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_gimple_heap* @VEC_gimple_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3589 {
entry:
  call void @llvm.dbg.value(metadata i32 37, metadata !3593, metadata !DIExpression()), !dbg !3594
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 37) #6, !dbg !3595
  %0 = bitcast i8* %call to %struct.VEC_gimple_heap*, !dbg !3595
  ret %struct.VEC_gimple_heap* %0, !dbg !3595
}

; Function Attrs: nounwind uwtable
define internal fastcc void @select_loops_exit_conditions(%struct.VEC_gimple_heap** %exit_conditions) unnamed_addr #5 !dbg !3596 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %exit_conditions, metadata !3601, metadata !DIExpression()), !dbg !3603
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3604
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !3604
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3604
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 3, !dbg !3605
  %2 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !3605
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !3602, metadata !DIExpression()), !dbg !3603
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %2, i64 0, i32 8, !dbg !3606
  %3 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3606
  tail call fastcc void @get_exit_conditions_rec(%struct.loop* %3, %struct.VEC_gimple_heap** %exit_conditions) #7, !dbg !3607
  ret void, !dbg !3608
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_scalar_evolution_for_all_loop_phi_nodes(%struct.VEC_gimple_heap** %exit_conditions) unnamed_addr #5 !dbg !3609 {
entry:
  %stats = alloca %struct.chrec_stats, align 4
  %cond = alloca %union.gimple_statement_d*, align 8
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %exit_conditions, metadata !3611, metadata !DIExpression()), !dbg !3629
  %0 = bitcast %struct.chrec_stats* %stats to i8*, !dbg !3630
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3630
  %1 = bitcast %union.gimple_statement_d** %cond to i8*, !dbg !3631
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3631
  %2 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !3632
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3632
  call void @llvm.dbg.value(metadata %struct.chrec_stats* %stats, metadata !3613, metadata !DIExpression(DW_OP_deref)), !dbg !3629
  call fastcc void @reset_chrecs_counters(%struct.chrec_stats* nonnull %stats) #7, !dbg !3633
  call void @llvm.dbg.value(metadata i32 0, metadata !3612, metadata !DIExpression()), !dbg !3629
  %3 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3634
  br label %for.cond, !dbg !3636

for.cond:                                         ; preds = %for.inc21, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc21 ], !dbg !3637
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3612, metadata !DIExpression()), !dbg !3629
  %4 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %exit_conditions, align 8, !dbg !3638
  %tobool = icmp eq %struct.VEC_gimple_heap* %4, null, !dbg !3638
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3638

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %4, i64 0, i32 0, !dbg !3638
  br label %cond.end, !dbg !3638

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond1 = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3638
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %cond, metadata !3614, metadata !DIExpression(DW_OP_deref)), !dbg !3629
  %call = call fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %cond1, i32 %i.0, %union.gimple_statement_d** nonnull %cond) #7, !dbg !3638
  %tobool2 = icmp eq i32 %call, 0, !dbg !3639
  br i1 %tobool2, label %for.end22, label %for.body, !dbg !3639

for.body:                                         ; preds = %cond.end
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %cond, align 8, !dbg !3640
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %5, metadata !3614, metadata !DIExpression()), !dbg !3629
  %call3 = call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %5) #7, !dbg !3641
  call void @llvm.dbg.value(metadata %struct.loop* %call3, metadata !3623, metadata !DIExpression()), !dbg !3642
  %header = getelementptr inbounds %struct.loop, %struct.loop* %call3, i64 0, i32 2, !dbg !3643
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3643
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %6, metadata !3627, metadata !DIExpression()), !dbg !3642
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3644
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %6) #6, !dbg !3644
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !3644
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3644
  br label %for.cond4, !dbg !3645

for.cond4:                                        ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3616, metadata !DIExpression(DW_OP_deref)), !dbg !3629
  %call5 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !3646
  %tobool6 = icmp eq i8 %call5, 0, !dbg !3648
  br i1 %tobool6, label %for.body7, label %for.inc21, !dbg !3649

for.body7:                                        ; preds = %for.cond4
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3616, metadata !DIExpression(DW_OP_deref)), !dbg !3629
  %call8 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !3650
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call8, metadata !3615, metadata !DIExpression()), !dbg !3629
  %call9 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call8) #7, !dbg !3652
  %call10 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call9) #7, !dbg !3652
  %call11 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call10) #6, !dbg !3654
  %tobool12 = icmp eq i8 %call11, 0, !dbg !3654
  br i1 %tobool12, label %for.inc, label %if.then, !dbg !3655

if.then:                                          ; preds = %for.body7
  %call13 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call8) #7, !dbg !3656
  %call14 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call13) #7, !dbg !3656
  %call15 = call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %call3, %union.tree_node* %call14) #7, !dbg !3658
  %call16 = call fastcc %union.tree_node* @instantiate_parameters(%struct.loop* %call3, %union.tree_node* %call15) #7, !dbg !3659
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !3628, metadata !DIExpression()), !dbg !3642
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3660
  %tobool17 = icmp eq %struct._IO_FILE* %7, null, !dbg !3660
  br i1 %tobool17, label %for.inc, label %land.lhs.true, !dbg !3662

land.lhs.true:                                    ; preds = %if.then
  %8 = load i32, i32* @dump_flags, align 4, !dbg !3663
  %and = and i32 %8, 16, !dbg !3664
  %tobool18 = icmp eq i32 %and, 0, !dbg !3664
  br i1 %tobool18, label %for.inc, label %if.then19, !dbg !3665

if.then19:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.chrec_stats* %stats, metadata !3613, metadata !DIExpression(DW_OP_deref)), !dbg !3629
  call fastcc void @gather_chrec_stats(%union.tree_node* %call16, %struct.chrec_stats* nonnull %stats) #7, !dbg !3666
  br label %for.inc, !dbg !3666

for.inc:                                          ; preds = %land.lhs.true, %if.then, %for.body7, %if.then19
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3616, metadata !DIExpression(DW_OP_deref)), !dbg !3629
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !3667
  br label %for.cond4, !dbg !3668, !llvm.loop !3669

for.inc21:                                        ; preds = %for.cond4
  %inc = add i32 %i.0, 1, !dbg !3671
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3612, metadata !DIExpression()), !dbg !3629
  br label %for.cond, !dbg !3672, !llvm.loop !3673

for.end22:                                        ; preds = %cond.end
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3675
  %tobool23 = icmp eq %struct._IO_FILE* %9, null, !dbg !3675
  br i1 %tobool23, label %if.end28, label %land.lhs.true24, !dbg !3677

land.lhs.true24:                                  ; preds = %for.end22
  %10 = load i32, i32* @dump_flags, align 4, !dbg !3678
  %and25 = and i32 %10, 16, !dbg !3679
  %tobool26 = icmp eq i32 %and25, 0, !dbg !3679
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !3680

if.then27:                                        ; preds = %land.lhs.true24
  call void @llvm.dbg.value(metadata %struct.chrec_stats* %stats, metadata !3613, metadata !DIExpression(DW_OP_deref)), !dbg !3629
  call fastcc void @dump_chrecs_stats(%struct._IO_FILE* nonnull %9, %struct.chrec_stats* nonnull %stats) #7, !dbg !3681
  br label %if.end28, !dbg !3681

if.end28:                                         ; preds = %land.lhs.true24, %for.end22, %if.then27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3682
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3682
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3682
  ret void, !dbg !3682
}

; Function Attrs: nounwind uwtable
define internal fastcc void @number_of_iterations_for_all_loops(%struct.VEC_gimple_heap** %exit_conditions) unnamed_addr #5 !dbg !3683 {
entry:
  %cond = alloca %union.gimple_statement_d*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %exit_conditions, metadata !3685, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.value(metadata i32 0, metadata !3687, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.value(metadata i32 0, metadata !3688, metadata !DIExpression()), !dbg !3694
  %0 = bitcast %union.gimple_statement_d** %cond to i8*, !dbg !3695
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3695
  call void @llvm.dbg.value(metadata i32 0, metadata !3686, metadata !DIExpression()), !dbg !3694
  br label %for.cond, !dbg !3696

for.cond:                                         ; preds = %for.body, %entry
  %nb_chrec_dont_know_loops.0 = phi i32 [ 0, %entry ], [ %nb_chrec_dont_know_loops.1, %for.body ], !dbg !3694
  %i.0 = phi i32 [ 0, %entry ], [ %inc8, %for.body ], !dbg !3697
  %nb_static_loops.0 = phi i32 [ 0, %entry ], [ %nb_static_loops.1, %for.body ], !dbg !3698
  call void @llvm.dbg.value(metadata i32 %nb_static_loops.0, metadata !3688, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3686, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.value(metadata i32 %nb_chrec_dont_know_loops.0, metadata !3687, metadata !DIExpression()), !dbg !3694
  %1 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %exit_conditions, align 8, !dbg !3699
  %tobool = icmp eq %struct.VEC_gimple_heap* %1, null, !dbg !3699
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3699

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %1, i64 0, i32 0, !dbg !3699
  br label %cond.end, !dbg !3699

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond1 = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3699
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %cond, metadata !3689, metadata !DIExpression(DW_OP_deref)), !dbg !3694
  %call = call fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %cond1, i32 %i.0, %union.gimple_statement_d** nonnull %cond) #7, !dbg !3699
  %tobool2 = icmp eq i32 %call, 0, !dbg !3700
  br i1 %tobool2, label %for.end, label %for.body, !dbg !3700

for.body:                                         ; preds = %cond.end
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %cond, align 8, !dbg !3701
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !3689, metadata !DIExpression()), !dbg !3694
  %call3 = call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %2) #7, !dbg !3702
  %call4 = call %union.tree_node* @number_of_latch_executions(%struct.loop* %call3) #7, !dbg !3703
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !3690, metadata !DIExpression()), !dbg !3704
  %call5 = call zeroext i8 @chrec_contains_undetermined(%union.tree_node* %call4) #6, !dbg !3705
  %tobool6 = icmp ne i8 %call5, 0, !dbg !3705
  %inc = zext i1 %tobool6 to i32, !dbg !3707
  %nb_chrec_dont_know_loops.1 = add i32 %nb_chrec_dont_know_loops.0, %inc, !dbg !3707
  %not.tobool6 = xor i1 %tobool6, true, !dbg !3707
  %inc7 = zext i1 %not.tobool6 to i32, !dbg !3707
  %nb_static_loops.1 = add i32 %nb_static_loops.0, %inc7, !dbg !3707
  call void @llvm.dbg.value(metadata i32 %nb_static_loops.1, metadata !3688, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.value(metadata i32 %nb_chrec_dont_know_loops.1, metadata !3687, metadata !DIExpression()), !dbg !3694
  %inc8 = add i32 %i.0, 1, !dbg !3708
  call void @llvm.dbg.value(metadata i32 %inc8, metadata !3686, metadata !DIExpression()), !dbg !3694
  br label %for.cond, !dbg !3709, !llvm.loop !3710

for.end:                                          ; preds = %cond.end
  %nb_chrec_dont_know_loops.0.lcssa = phi i32 [ %nb_chrec_dont_know_loops.0, %cond.end ], !dbg !3694
  %nb_static_loops.0.lcssa = phi i32 [ %nb_static_loops.0, %cond.end ], !dbg !3698
  call void @llvm.dbg.value(metadata i32 %nb_chrec_dont_know_loops.0.lcssa, metadata !3687, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.value(metadata i32 %nb_static_loops.0.lcssa, metadata !3688, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.value(metadata i32 %nb_chrec_dont_know_loops.0.lcssa, metadata !3687, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.value(metadata i32 %nb_static_loops.0.lcssa, metadata !3688, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.value(metadata i32 %nb_chrec_dont_know_loops.0.lcssa, metadata !3687, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.value(metadata i32 %nb_static_loops.0.lcssa, metadata !3688, metadata !DIExpression()), !dbg !3694
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3712
  %tobool9 = icmp eq %struct._IO_FILE* %3, null, !dbg !3712
  br i1 %tobool9, label %if.end19, label %if.then10, !dbg !3714

if.then10:                                        ; preds = %for.end
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !3715
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3717
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !3718
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3719
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i64 0, i64 0), i32 %nb_chrec_dont_know_loops.0.lcssa) #6, !dbg !3720
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3721
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50, i64 0, i64 0), i32 %nb_static_loops.0.lcssa) #6, !dbg !3722
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3723
  %call15 = call fastcc i32 @number_of_loops() #7, !dbg !3724
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.51, i64 0, i64 0), i32 %call15) #6, !dbg !3725
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3726
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !3727
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3728
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !3729
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3730
  call void @print_loops(%struct._IO_FILE* %10, i32 3) #6, !dbg !3731
  br label %if.end19, !dbg !3732

if.end19:                                         ; preds = %for.end, %if.then10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3733
  ret void, !dbg !3733
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** %vec_) unnamed_addr #0 !dbg !3734 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !3736, metadata !DIExpression()), !dbg !3737
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !3738
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !3738
  br i1 %tobool, label %if.end, label %if.then, !dbg !3740

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_gimple_heap* %0 to i8*, !dbg !3740
  tail call void @free(i8* nonnull %1) #6, !dbg !3738
  br label %if.end, !dbg !3738

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_gimple_heap* null, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !3740
  ret void, !dbg !3740
}

; Function Attrs: nounwind uwtable
define dso_local void @scev_finalize() local_unnamed_addr #5 !dbg !3741 {
entry:
  %0 = load %struct.htab*, %struct.htab** @scalar_evolution_info, align 8, !dbg !3742
  %tobool = icmp eq %struct.htab* %0, null, !dbg !3742
  br i1 %tobool, label %return, label %if.end, !dbg !3744

if.end:                                           ; preds = %entry
  tail call void @htab_delete(%struct.htab* nonnull %0) #6, !dbg !3745
  store %struct.htab* null, %struct.htab** @scalar_evolution_info, align 8, !dbg !3746
  br label %return, !dbg !3747

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !3747
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @expression_expensive_p(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !3748 {
entry:
  br label %tailrecurse, !dbg !3754

tailrecurse:                                      ; preds = %sw.bb30, %entry
  %expr.tr = phi %union.tree_node* [ %expr, %entry ], [ %4, %sw.bb30 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr, metadata !3752, metadata !DIExpression()), !dbg !3756
  %call = tail call zeroext i8 @is_gimple_val(%union.tree_node* %expr.tr) #6, !dbg !3757
  %tobool = icmp eq i8 %call, 0, !dbg !3757
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3759

if.end:                                           ; preds = %tailrecurse
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3760
  %bf.load = load i64, i64* %0, align 8, !dbg !3760
  %bf.cast = and i64 %bf.load, 65535, !dbg !3760
  %trunc = trunc i64 %bf.load to i16, !dbg !3761
  switch i16 %trunc, label %if.end21 [
    i16 67, label %if.then16
    i16 68, label %if.then16
    i16 69, label %if.then16
    i16 70, label %if.then16
    i16 71, label %if.then16
    i16 72, label %if.then16
    i16 73, label %if.then16
    i16 74, label %if.then16
    i16 76, label %if.then16
  ], !dbg !3761

if.then16:                                        ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3763
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3763
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3763
  %call17 = tail call i32 @integer_pow2p(%union.tree_node* %1) #6, !dbg !3766
  %tobool18 = icmp eq i32 %call17, 0, !dbg !3766
  br i1 %tobool18, label %cleanup, label %if.end21, !dbg !3767

if.end21:                                         ; preds = %if.then16, %if.end
  %arrayidx22 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3768
  %2 = load i32, i32* %arrayidx22, align 4, !dbg !3768
  switch i32 %2, label %cleanup [
    i32 7, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb30
  ], !dbg !3769

sw.bb:                                            ; preds = %if.end21, %if.end21
  %operands24 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3770
  %arrayidx25 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands24, i64 1, !dbg !3770
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8, !dbg !3770
  %call26 = tail call zeroext i8 @expression_expensive_p(%union.tree_node* %3) #7, !dbg !3772
  %tobool27 = icmp eq i8 %call26, 0, !dbg !3772
  br i1 %tobool27, label %sw.bb30, label %cleanup, !dbg !3773

sw.bb30:                                          ; preds = %sw.bb, %if.end21
  %operands32 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3774
  %4 = load %union.tree_node*, %union.tree_node** %operands32, align 8, !dbg !3774
  br label %tailrecurse, !dbg !3754

cleanup:                                          ; preds = %sw.bb, %if.then16, %tailrecurse, %if.end21
  %retval.0 = phi i8 [ 0, %tailrecurse ], [ 1, %if.then16 ], [ 1, %sw.bb ], [ 1, %if.end21 ], !dbg !3756
  ret i8 %retval.0, !dbg !3775
}

declare dso_local zeroext i8 @is_gimple_val(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_pow2p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @scev_const_prop() local_unnamed_addr #5 !dbg !3776 {
entry:
  %loop = alloca %struct.loop*, align 8
  %i = alloca i32, align 4
  %li = alloca %struct.loop_iterator, align 8
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %psi66 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp81 = alloca %struct.gimple_stmt_iterator, align 8
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp101 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp107 = alloca %struct.gimple_stmt_iterator, align 8
  %0 = bitcast %struct.loop** %loop to i8*, !dbg !3814
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3814
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !3788, metadata !DIExpression()), !dbg !3815
  %1 = bitcast i32* %i to i8*, !dbg !3816
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3816
  %2 = bitcast %struct.loop_iterator* %li to i8*, !dbg !3817
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3817
  %3 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !3818
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3818
  %call = tail call fastcc i32 @number_of_loops() #7, !dbg !3819
  %cmp = icmp ult i32 %call, 2, !dbg !3821
  br i1 %cmp, label %cleanup191, label %if.end, !dbg !3822

if.end:                                           ; preds = %entry
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3823
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !3823
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3823
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !3823
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3823
  %7 = bitcast %struct.loop** %loop to i64*, !dbg !3825
  %8 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3828
  br label %for.cond, !dbg !3823

for.cond:                                         ; preds = %for.inc57, %if.end
  %9 = phi %struct.control_flow_graph* [ %5, %if.end ], [ %.pre11, %for.inc57 ], !dbg !3830
  %ssa_names_to_remove.0 = phi %struct.bitmap_head_def* [ null, %if.end ], [ %ssa_names_to_remove.1.lcssa, %for.inc57 ], !dbg !3831
  %.pn = phi %struct.basic_block_def* [ %6, %if.end ], [ %bb.0, %for.inc57 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3832
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3832
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3780, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %ssa_names_to_remove.0, metadata !3788, metadata !DIExpression()), !dbg !3815
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 1, !dbg !3830
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3830
  %cmp3 = icmp eq %struct.basic_block_def* %bb.0, %10, !dbg !3830
  br i1 %cmp3, label %for.end59, label %for.body, !dbg !3823

for.body:                                         ; preds = %for.cond
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 3, !dbg !3833
  %11 = bitcast %struct.loop** %loop_father to i64*, !dbg !3833
  %12 = load i64, i64* %11, align 8, !dbg !3833
  store i64 %12, i64* %7, align 8, !dbg !3834
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !3835
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #6, !dbg !3835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !3835
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !3835
  br label %for.cond4, !dbg !3836

for.cond4:                                        ; preds = %for.inc, %for.body
  %ssa_names_to_remove.1 = phi %struct.bitmap_head_def* [ %ssa_names_to_remove.0, %for.body ], [ %ssa_names_to_remove.3, %for.inc ], !dbg !3831
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %ssa_names_to_remove.1, metadata !3788, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3791, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  %call5 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !3837
  %tobool = icmp eq i8 %call5, 0, !dbg !3839
  br i1 %tobool, label %for.body6, label %for.inc57, !dbg !3840

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3791, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  %call7 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !3841
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !3784, metadata !DIExpression()), !dbg !3815
  %call8 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call7) #7, !dbg !3843
  %call9 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call8) #7, !dbg !3843
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !3781, metadata !DIExpression()), !dbg !3815
  %call10 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call9) #6, !dbg !3844
  %tobool11 = icmp eq i8 %call10, 0, !dbg !3844
  br i1 %tobool11, label %for.inc, label %if.end13, !dbg !3846

if.end13:                                         ; preds = %for.body6
  %type14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3847
  %13 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !3847
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !3782, metadata !DIExpression()), !dbg !3815
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3848
  %bf.load = load i64, i64* %14, align 8, !dbg !3848
  %bf.cast6 = and i64 %bf.load, 65535, !dbg !3848
  %cmp15 = icmp eq i64 %bf.cast6, 10, !dbg !3848
  br i1 %cmp15, label %if.end39, label %lor.lhs.false, !dbg !3848

lor.lhs.false:                                    ; preds = %if.end13
  %cmp20 = icmp eq i64 %bf.cast6, 12, !dbg !3848
  br i1 %cmp20, label %if.end39, label %land.lhs.true, !dbg !3850

land.lhs.true:                                    ; preds = %lor.lhs.false
  %cmp25 = icmp eq i64 %bf.cast6, 6, !dbg !3851
  br i1 %cmp25, label %if.end39, label %lor.lhs.false26, !dbg !3851

lor.lhs.false26:                                  ; preds = %land.lhs.true
  %cmp31 = icmp eq i64 %bf.cast6, 7, !dbg !3851
  br i1 %cmp31, label %if.end39, label %lor.lhs.false32, !dbg !3851

lor.lhs.false32:                                  ; preds = %lor.lhs.false26
  %cmp37 = icmp eq i64 %bf.cast6, 8, !dbg !3851
  br i1 %cmp37, label %if.end39, label %for.inc, !dbg !3852

if.end39:                                         ; preds = %lor.lhs.false32, %lor.lhs.false26, %land.lhs.true, %lor.lhs.false, %if.end13
  %15 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3853
  call void @llvm.dbg.value(metadata %struct.loop* %15, metadata !3786, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.loop* %15, metadata !3786, metadata !DIExpression()), !dbg !3815
  %call40 = call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %15, %union.tree_node* %call9) #7, !dbg !3854
  %call41 = call %union.tree_node* @resolve_mixers(%struct.loop* %15, %union.tree_node* %call40) #7, !dbg !3855
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !3783, metadata !DIExpression()), !dbg !3815
  %call42 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call41) #6, !dbg !3856
  %tobool43 = icmp eq i8 %call42, 0, !dbg !3856
  br i1 %tobool43, label %for.inc, label %lor.lhs.false44, !dbg !3858

lor.lhs.false44:                                  ; preds = %if.end39
  %call45 = call zeroext i8 @may_propagate_copy(%union.tree_node* %call9, %union.tree_node* %call41) #6, !dbg !3859
  %tobool46 = icmp eq i8 %call45, 0, !dbg !3859
  br i1 %tobool46, label %for.inc, label %if.end48, !dbg !3860

if.end48:                                         ; preds = %lor.lhs.false44
  %cmp49 = icmp eq %union.tree_node* %call9, %call41, !dbg !3861
  br i1 %cmp49, label %if.end51, label %if.then50, !dbg !3863

if.then50:                                        ; preds = %if.end48
  call void @replace_uses_by(%union.tree_node* %call9, %union.tree_node* %call41) #6, !dbg !3864
  br label %if.end51, !dbg !3864

if.end51:                                         ; preds = %if.end48, %if.then50
  %tobool52 = icmp eq %struct.bitmap_head_def* %ssa_names_to_remove.1, null, !dbg !3865
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !3867

if.then53:                                        ; preds = %if.end51
  %call54 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3868
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call54, metadata !3788, metadata !DIExpression()), !dbg !3815
  br label %if.end55, !dbg !3869

if.end55:                                         ; preds = %if.end51, %if.then53
  %ssa_names_to_remove.2 = phi %struct.bitmap_head_def* [ %ssa_names_to_remove.1, %if.end51 ], [ %call54, %if.then53 ], !dbg !3815
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %ssa_names_to_remove.2, metadata !3788, metadata !DIExpression()), !dbg !3815
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3870
  %16 = bitcast %union.tree_node** %version to i32*, !dbg !3870
  %17 = load i32, i32* %16, align 8, !dbg !3870
  %call56 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %ssa_names_to_remove.2, i32 %17) #6, !dbg !3871
  br label %for.inc, !dbg !3872

for.inc:                                          ; preds = %lor.lhs.false44, %if.end39, %for.body6, %lor.lhs.false32, %if.end55
  %ssa_names_to_remove.3 = phi %struct.bitmap_head_def* [ %ssa_names_to_remove.2, %if.end55 ], [ %ssa_names_to_remove.1, %for.body6 ], [ %ssa_names_to_remove.1, %lor.lhs.false32 ], [ %ssa_names_to_remove.1, %lor.lhs.false44 ], [ %ssa_names_to_remove.1, %if.end39 ], !dbg !3831
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %ssa_names_to_remove.3, metadata !3788, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3791, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !3873
  br label %for.cond4, !dbg !3874, !llvm.loop !3875

for.inc57:                                        ; preds = %for.cond4
  %ssa_names_to_remove.1.lcssa = phi %struct.bitmap_head_def* [ %ssa_names_to_remove.1, %for.cond4 ], !dbg !3831
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %ssa_names_to_remove.1.lcssa, metadata !3788, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %ssa_names_to_remove.1.lcssa, metadata !3788, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %ssa_names_to_remove.1.lcssa, metadata !3788, metadata !DIExpression()), !dbg !3815
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3830
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3877
  %.pre11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3830
  br label %for.cond, !dbg !3830, !llvm.loop !3878

for.end59:                                        ; preds = %for.cond
  %ssa_names_to_remove.0.lcssa = phi %struct.bitmap_head_def* [ %ssa_names_to_remove.0, %for.cond ], !dbg !3831
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %ssa_names_to_remove.0.lcssa, metadata !3788, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %ssa_names_to_remove.0.lcssa, metadata !3788, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %ssa_names_to_remove.0.lcssa, metadata !3788, metadata !DIExpression()), !dbg !3815
  %tobool60 = icmp eq %struct.bitmap_head_def* %ssa_names_to_remove.0.lcssa, null, !dbg !3880
  br i1 %tobool60, label %if.end84, label %if.then61, !dbg !3881

if.then61:                                        ; preds = %for.end59
  %18 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3882
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #8, !dbg !3882
  call void @llvm.dbg.value(metadata i32* %i, metadata !3789, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3792, metadata !DIExpression(DW_OP_deref)), !dbg !3883
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %ssa_names_to_remove.0.lcssa, i32 0, i32* nonnull %i) #7, !dbg !3884
  %19 = bitcast %struct.gimple_stmt_iterator* %psi66 to i8*, !dbg !3885
  %20 = bitcast %struct.gimple_stmt_iterator* %tmp81 to i8*, !dbg !3885
  br label %for.cond62, !dbg !3884

for.cond62:                                       ; preds = %cond.end79, %if.then61
  call void @llvm.dbg.value(metadata i32* %i, metadata !3789, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3792, metadata !DIExpression(DW_OP_deref)), !dbg !3883
  %call63 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3886
  %tobool64 = icmp eq i8 %call63, 0, !dbg !3884
  br i1 %tobool64, label %for.end83, label %for.body65, !dbg !3884

for.body65:                                       ; preds = %for.cond62
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8, !dbg !3887
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3888
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, i32 3, !dbg !3888
  %22 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3888
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %22, i64 0, i32 2, !dbg !3888
  %23 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3888
  %tobool68 = icmp eq %struct.VEC_tree_gc* %23, null, !dbg !3888
  br i1 %tobool68, label %cond.end, label %cond.true, !dbg !3888

cond.true:                                        ; preds = %for.body65
  %base72 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %23, i64 0, i32 0, !dbg !3888
  br label %cond.end, !dbg !3888

cond.end:                                         ; preds = %for.body65, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base72, %cond.true ], [ null, %for.body65 ], !dbg !3888
  %24 = load i32, i32* %i, align 4, !dbg !3888
  call void @llvm.dbg.value(metadata i32 %24, metadata !3789, metadata !DIExpression()), !dbg !3815
  %call73 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %24) #7, !dbg !3888
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !3781, metadata !DIExpression()), !dbg !3815
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3889
  %25 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !3889
  %26 = load %union.gimple_statement_d*, %union.gimple_statement_d** %25, align 8, !dbg !3889
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %26, metadata !3784, metadata !DIExpression()), !dbg !3815
  %call75 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %26) #7, !dbg !3890
  %cmp76 = icmp eq i32 %call75, 16, !dbg !3890
  br i1 %cmp76, label %cond.end79, label %cond.true77, !dbg !3890

cond.true77:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 3277, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3890
  br label %cond.end79, !dbg !3890

cond.end79:                                       ; preds = %cond.end, %cond.true77
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #8, !dbg !3891
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp81, %union.gimple_statement_d* %26) #6, !dbg !3891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %20, i64 24, i1 false), !dbg !3891
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #8, !dbg !3891
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi66, metadata !3802, metadata !DIExpression(DW_OP_deref)), !dbg !3885
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %psi66, i8 zeroext 1) #6, !dbg !3892
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8, !dbg !3893
  call void @llvm.dbg.value(metadata i32* %i, metadata !3789, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3792, metadata !DIExpression(DW_OP_deref)), !dbg !3883
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3886
  br label %for.cond62, !dbg !3886, !llvm.loop !3894

for.end83:                                        ; preds = %for.cond62
  call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %ssa_names_to_remove.0.lcssa) #6, !dbg !3896
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !3788, metadata !DIExpression()), !dbg !3815
  call void @scev_reset() #7, !dbg !3897
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #8, !dbg !3898
  br label %if.end84, !dbg !3899

if.end84:                                         ; preds = %for.end59, %for.end83
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3786, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3790, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 2) #7, !dbg !3900
  %27 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !3901
  %28 = bitcast %struct.gimple_stmt_iterator* %tmp101 to i8*, !dbg !3901
  %29 = bitcast %struct.gimple_stmt_iterator* %tmp107 to i8*, !dbg !3902
  br label %for.cond85, !dbg !3900

for.cond85:                                       ; preds = %cleanup, %if.end84
  %30 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3904
  call void @llvm.dbg.value(metadata %struct.loop* %30, metadata !3786, metadata !DIExpression()), !dbg !3815
  %tobool86 = icmp eq %struct.loop* %30, null, !dbg !3900
  br i1 %tobool86, label %cleanup191.loopexit, label %for.body87, !dbg !3900

for.body87:                                       ; preds = %for.cond85
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8, !dbg !3905
  call void @llvm.dbg.value(metadata %struct.loop* %30, metadata !3786, metadata !DIExpression()), !dbg !3815
  %call88 = call %struct.edge_def* @single_exit(%struct.loop* nonnull %30) #6, !dbg !3906
  call void @llvm.dbg.value(metadata %struct.edge_def* %call88, metadata !3806, metadata !DIExpression()), !dbg !3901
  %tobool89 = icmp eq %struct.edge_def* %call88, null, !dbg !3907
  br i1 %tobool89, label %cleanup, label %if.end91, !dbg !3909

if.end91:                                         ; preds = %for.body87
  %31 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3910
  call void @llvm.dbg.value(metadata %struct.loop* %31, metadata !3786, metadata !DIExpression()), !dbg !3815
  %call92 = call %union.tree_node* @number_of_latch_executions(%struct.loop* %31) #7, !dbg !3911
  call void @llvm.dbg.value(metadata %union.tree_node* %call92, metadata !3812, metadata !DIExpression()), !dbg !3901
  %32 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !3912
  %cmp93 = icmp eq %union.tree_node* %call92, %32, !dbg !3914
  br i1 %cmp93, label %cleanup, label %if.end95, !dbg !3915

if.end95:                                         ; preds = %if.end91
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call88, i64 0, i32 1, !dbg !3916
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3916
  %call96 = call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %33) #7, !dbg !3918
  %tobool97 = icmp eq i8 %call96, 0, !dbg !3918
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !3919

if.then98:                                        ; preds = %if.end95
  %call99 = call %struct.basic_block_def* @split_loop_exit_edge(%struct.edge_def* nonnull %call88) #6, !dbg !3920
  br label %if.end100, !dbg !3920

if.end100:                                        ; preds = %if.end95, %if.then98
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8, !dbg !3921
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3922
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp101, %struct.basic_block_def* %34) #7, !dbg !3921
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %28, i64 24, i1 false), !dbg !3921
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8, !dbg !3921
  %35 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3923
  call void @llvm.dbg.value(metadata %struct.loop* %35, metadata !3786, metadata !DIExpression()), !dbg !3815
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3924
  %loop_father104 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i64 0, i32 3, !dbg !3925
  %37 = load %struct.loop*, %struct.loop** %loop_father104, align 8, !dbg !3925
  %call105 = call fastcc i32 @loop_depth(%struct.loop* %37) #7, !dbg !3926
  %add = add i32 %call105, 1, !dbg !3927
  %call106 = call %struct.loop* @superloop_at_depth(%struct.loop* %35, i32 %add) #6, !dbg !3928
  call void @llvm.dbg.value(metadata %struct.loop* %call106, metadata !3787, metadata !DIExpression()), !dbg !3815
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #8, !dbg !3929
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3930
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp107, %struct.basic_block_def* %38) #6, !dbg !3929
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %29, i64 24, i1 false), !dbg !3929
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #8, !dbg !3929
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call88, i64 0, i32 6, !dbg !3931
  %num = getelementptr inbounds %struct.loop, %struct.loop* %call106, i64 0, i32 0, !dbg !3934
  br label %for.cond109, !dbg !3936

for.cond109:                                      ; preds = %for.cond109.backedge, %if.end100
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3791, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  %call110 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !3937
  %tobool111 = icmp eq i8 %call110, 0, !dbg !3938
  br i1 %tobool111, label %for.body113, label %cleanup.loopexit, !dbg !3939

for.body113:                                      ; preds = %for.cond109
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3791, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  %call114 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !3940
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call114, metadata !3784, metadata !DIExpression()), !dbg !3815
  %call115 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call114) #7, !dbg !3941
  %call116 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call115) #7, !dbg !3941
  call void @llvm.dbg.value(metadata %union.tree_node* %call116, metadata !3811, metadata !DIExpression()), !dbg !3901
  %39 = load i32, i32* %dest_idx, align 4, !dbg !3942
  %call117 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call114, i32 %39) #7, !dbg !3942
  %call118 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call117) #7, !dbg !3942
  call void @llvm.dbg.value(metadata %union.tree_node* %call118, metadata !3810, metadata !DIExpression()), !dbg !3901
  %call119 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call118) #6, !dbg !3943
  %tobool120 = icmp eq i8 %call119, 0, !dbg !3943
  br i1 %tobool120, label %if.then121, label %if.end122, !dbg !3945

if.then121:                                       ; preds = %for.body113
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3791, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !3946
  br label %for.cond109.backedge, !dbg !3948

for.cond109.backedge:                             ; preds = %if.then121, %if.then162, %if.then179, %if.end180
  br label %for.cond109, !dbg !3815, !llvm.loop !3949

if.end122:                                        ; preds = %for.body113
  %type124 = getelementptr inbounds %union.tree_node, %union.tree_node* %call118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3951
  %40 = bitcast %union.tree_node** %type124 to i64**, !dbg !3951
  %41 = load i64*, i64** %40, align 8, !dbg !3951
  %bf.load126 = load i64, i64* %41, align 8, !dbg !3951
  %bf.cast1281 = and i64 %bf.load126, 65535, !dbg !3951
  %cmp129 = icmp eq i64 %bf.cast1281, 10, !dbg !3951
  br i1 %cmp129, label %if.end163, label %lor.lhs.false130, !dbg !3951

lor.lhs.false130:                                 ; preds = %if.end122
  %cmp137 = icmp eq i64 %bf.cast1281, 12, !dbg !3951
  br i1 %cmp137, label %if.end163, label %land.lhs.true138, !dbg !3953

land.lhs.true138:                                 ; preds = %lor.lhs.false130
  %cmp145 = icmp eq i64 %bf.cast1281, 6, !dbg !3954
  br i1 %cmp145, label %if.end163, label %lor.lhs.false146, !dbg !3954

lor.lhs.false146:                                 ; preds = %land.lhs.true138
  %cmp153 = icmp eq i64 %bf.cast1281, 7, !dbg !3954
  br i1 %cmp153, label %if.end163, label %lor.lhs.false154, !dbg !3954

lor.lhs.false154:                                 ; preds = %lor.lhs.false146
  %cmp161 = icmp eq i64 %bf.cast1281, 8, !dbg !3954
  br i1 %cmp161, label %if.end163, label %if.then162, !dbg !3955

if.then162:                                       ; preds = %lor.lhs.false154
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3791, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !3956
  br label %for.cond109.backedge, !dbg !3958

if.end163:                                        ; preds = %lor.lhs.false154, %lor.lhs.false146, %land.lhs.true138, %lor.lhs.false130, %if.end122
  %42 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3959
  call void @llvm.dbg.value(metadata %struct.loop* %42, metadata !3786, metadata !DIExpression()), !dbg !3815
  %call164 = call fastcc %union.tree_node* @analyze_scalar_evolution_in_loop(%struct.loop* %call106, %struct.loop* %42, %union.tree_node* %call118, i8* null) #7, !dbg !3960
  call void @llvm.dbg.value(metadata %union.tree_node* %call164, metadata !3810, metadata !DIExpression()), !dbg !3901
  %call165 = call %union.tree_node* @compute_overall_effect_of_inner_loop(%struct.loop* %call106, %union.tree_node* %call164) #7, !dbg !3961
  call void @llvm.dbg.value(metadata %union.tree_node* %call165, metadata !3810, metadata !DIExpression()), !dbg !3901
  %call166 = call fastcc zeroext i8 @tree_does_not_contain_chrecs(%union.tree_node* %call165) #7, !dbg !3962
  %tobool167 = icmp eq i8 %call166, 0, !dbg !3962
  br i1 %tobool167, label %if.then179, label %lor.lhs.false168, !dbg !3963

lor.lhs.false168:                                 ; preds = %if.end163
  %43 = load i32, i32* %num, align 8, !dbg !3964
  %call169 = call zeroext i8 @chrec_contains_symbols_defined_in_loop(%union.tree_node* %call165, i32 %43) #7, !dbg !3965
  %tobool170 = icmp eq i8 %call169, 0, !dbg !3965
  br i1 %tobool170, label %lor.lhs.false171, label %if.then179, !dbg !3966

lor.lhs.false171:                                 ; preds = %lor.lhs.false168
  %call172 = call zeroext i8 @contains_abnormal_ssa_name_p(%union.tree_node* %call165) #6, !dbg !3967
  %tobool174 = icmp eq i8 %call172, 0, !dbg !3967
  br i1 %tobool174, label %lor.lhs.false175, label %if.then179, !dbg !3968

lor.lhs.false175:                                 ; preds = %lor.lhs.false171
  %call176 = call zeroext i8 @expression_expensive_p(%union.tree_node* %call165) #7, !dbg !3969
  %tobool178 = icmp eq i8 %call176, 0, !dbg !3969
  br i1 %tobool178, label %if.end180, label %if.then179, !dbg !3970

if.then179:                                       ; preds = %lor.lhs.false175, %lor.lhs.false171, %lor.lhs.false168, %if.end163
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3791, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !3971
  br label %for.cond109.backedge, !dbg !3973

if.end180:                                        ; preds = %lor.lhs.false175
  %call181 = call %union.tree_node* @unshare_expr(%union.tree_node* %call165) #6, !dbg !3974
  call void @llvm.dbg.value(metadata %union.tree_node* %call181, metadata !3810, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3791, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %psi, i8 zeroext 0) #6, !dbg !3975
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !3813, metadata !DIExpression(DW_OP_deref)), !dbg !3901
  %call182 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %bsi, %union.tree_node* %call181, i8 zeroext 0, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !3976
  call void @llvm.dbg.value(metadata %union.tree_node* %call182, metadata !3810, metadata !DIExpression()), !dbg !3901
  %call183 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call116, %union.tree_node* %call182) #6, !dbg !3977
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call183, metadata !3785, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !3813, metadata !DIExpression(DW_OP_deref)), !dbg !3901
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* %call183, i32 1) #6, !dbg !3978
  br label %for.cond109.backedge, !dbg !3979

cleanup.loopexit:                                 ; preds = %for.cond109
  br label %cleanup, !dbg !3980

cleanup:                                          ; preds = %cleanup.loopexit, %for.body87, %if.end91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8, !dbg !3980
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3786, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3790, metadata !DIExpression(DW_OP_deref)), !dbg !3815
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #7, !dbg !3904
  br label %for.cond85, !dbg !3904, !llvm.loop !3981

cleanup191.loopexit:                              ; preds = %for.cond85
  br label %cleanup191, !dbg !3983

cleanup191:                                       ; preds = %cleanup191.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3983
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3983
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3983
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3983
  ret i32 0, !dbg !3983
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @number_of_loops() unnamed_addr #0 !dbg !3984 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3985
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !3985
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3985
  %tobool = icmp eq %struct.loops* %1, null, !dbg !3985
  br i1 %tobool, label %return, label %if.end, !dbg !3987

if.end:                                           ; preds = %entry
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !3988
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !3988
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !3988
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !3988

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !3988
  br label %cond.end, !dbg !3988

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3988
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !3988
  br label %return, !dbg !3989

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi i32 [ %call, %cond.end ], [ 0, %entry ], !dbg !3990
  ret i32 %retval.0, !dbg !3991
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3992 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3996, metadata !DIExpression()), !dbg !3997
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3998
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3998
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !3999
  %conv1 = zext i1 %cmp to i8, !dbg !4000
  ret i8 %conv1, !dbg !4001
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4002 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4006, metadata !DIExpression()), !dbg !4007
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4008
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4008
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !4009
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4009
  ret %union.gimple_statement_d* %1, !dbg !4010
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !4011 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !4016, metadata !DIExpression()), !dbg !4017
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !4018
  ret %union.tree_node* %0, !dbg !4019
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4020 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4024, metadata !DIExpression()), !dbg !4025
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !4026
  ret %union.tree_node** %result, !dbg !4027
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @may_propagate_copy(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @replace_uses_by(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !4028 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4033, metadata !DIExpression()), !dbg !4034
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4035
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4035
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !4036
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !4036
  %2 = load i64, i64* %1, align 8, !dbg !4036
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !4037
  store i64 %2, i64* %3, align 8, !dbg !4037
  ret void, !dbg !4038
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !4039 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4048, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !4049, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32 0, metadata !4050, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4051, metadata !DIExpression()), !dbg !4052
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !4053
  %1 = load i64, i64* %0, align 8, !dbg !4053
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4054
  store i64 %1, i64* %2, align 8, !dbg !4054
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !4055
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !4056
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4057
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !4060
  br label %while.body, !dbg !4060

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !4061
  br i1 %tobool, label %if.then, label %if.end, !dbg !4062

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !4063
  br label %while.end, !dbg !4065

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !4066

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !4060, !llvm.loop !4067

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !4069

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !4069
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !4071
  %7 = load i32, i32* %indx9, align 8, !dbg !4071
  %cmp11 = icmp eq i32 %7, 0, !dbg !4072
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !4073

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !4074
  %8 = load i32, i32* %indx14, align 8, !dbg !4074
  %mul = shl i32 %8, 7, !dbg !4075
  call void @llvm.dbg.value(metadata i32 %mul, metadata !4050, metadata !DIExpression()), !dbg !4052
  br label %if.end15, !dbg !4076

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !4050, metadata !DIExpression()), !dbg !4052
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4077
  store i32 0, i32* %word_no, align 8, !dbg !4078
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !4079
  %9 = load i64, i64* %arrayidx, align 8, !dbg !4079
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4080
  store i64 %9, i64* %bits21, align 8, !dbg !4081
  %tobool23 = icmp eq i64 %9, 0, !dbg !4082
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !4082
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %add, metadata !4050, metadata !DIExpression()), !dbg !4052
  store i32 %add, i32* %bit_no, align 4, !dbg !4084
  ret void, !dbg !4085
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4086 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4090, metadata !DIExpression()), !dbg !4095
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4091, metadata !DIExpression()), !dbg !4095
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4096
  %0 = load i64, i64* %bits, align 8, !dbg !4096
  %tobool = icmp eq i64 %0, 0, !dbg !4097
  br i1 %tobool, label %if.end, label %next_bit, !dbg !4098

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !4099
  br label %next_bit, !dbg !4102

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !4092), !dbg !4103
  br label %while.cond, !dbg !4102

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !4104
  %and = and i64 %2, 1, !dbg !4105
  %tobool2 = icmp eq i64 %and, 0, !dbg !4106
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !4102

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !4107
  store i64 %shr, i64* %bits, align 8, !dbg !4107
  %3 = load i32, i32* %bit_no, align 4, !dbg !4109
  %add = add i32 %3, 1, !dbg !4109
  store i32 %add, i32* %bit_no, align 4, !dbg !4109
  %.pre = load i64, i64* %bits, align 8, !dbg !4104
  br label %while.cond, !dbg !4102, !llvm.loop !4110

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !4112
  %sub = add i32 %4, 63, !dbg !4113
  %div = and i32 %sub, -64, !dbg !4114
  store i32 %div, i32* %bit_no, align 4, !dbg !4115
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4116
  %5 = load i32, i32* %word_no, align 8, !dbg !4117
  %inc = add i32 %5, 1, !dbg !4117
  store i32 %inc, i32* %word_no, align 8, !dbg !4117
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4118
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4118
  br label %while.body6, !dbg !4119

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !4120

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !4121
  %cmp = icmp eq i32 %8, 2, !dbg !4122
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !4118
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !4120

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !4099
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !4099
  %10 = load i64, i64* %arrayidx, align 8, !dbg !4099
  store i64 %10, i64* %bits, align 8, !dbg !4123
  %tobool14 = icmp eq i64 %10, 0, !dbg !4124
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !4126

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !4127
  %add17 = add i32 %11, 64, !dbg !4127
  store i32 %add17, i32* %bit_no, align 4, !dbg !4127
  %12 = load i32, i32* %word_no, align 8, !dbg !4128
  %inc19 = add i32 %12, 1, !dbg !4128
  store i32 %inc19, i32* %word_no, align 8, !dbg !4128
  br label %while.cond7, !dbg !4120, !llvm.loop !4129

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !4118
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !4131
  %14 = load i64, i64* %13, align 8, !dbg !4131
  store i64 %14, i64* %6, align 8, !dbg !4132
  %tobool24 = icmp eq i64 %14, 0, !dbg !4133
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !4135

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !4135
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !4136
  %16 = load i32, i32* %indx, align 8, !dbg !4136
  %mul28 = shl i32 %16, 7, !dbg !4137
  store i32 %mul28, i32* %bit_no, align 4, !dbg !4138
  store i32 0, i32* %word_no, align 8, !dbg !4139
  br label %while.body6, !dbg !4119, !llvm.loop !4140

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !4142

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !4142

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !4095
  ret i8 %retval.0, !dbg !4142
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4143 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4149, metadata !DIExpression()), !dbg !4151
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4150, metadata !DIExpression()), !dbg !4151
  br label %land.end, !dbg !4152

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4152
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4152
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4152
  ret %union.tree_node* %0, !dbg !4152
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @remove_phi_node(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4153 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4157, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4158, metadata !DIExpression()), !dbg !4159
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4160
  %0 = load i64, i64* %bits, align 8, !dbg !4161
  %shr = lshr i64 %0, 1, !dbg !4161
  store i64 %shr, i64* %bits, align 8, !dbg !4161
  %1 = load i32, i32* %bit_no, align 4, !dbg !4162
  %add = add i32 %1, 1, !dbg !4162
  store i32 %add, i32* %bit_no, align 4, !dbg !4162
  ret void, !dbg !4163
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4164 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4171, metadata !DIExpression()), !dbg !4172
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !4173
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4173
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4173
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4173

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !4173
  br label %cond.end, !dbg !4173

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4173
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4173
  %cmp = icmp eq i32 %call, 1, !dbg !4174
  %conv2 = zext i1 %cmp to i8, !dbg !4173
  ret i8 %conv2, !dbg !4175
}

declare dso_local %struct.basic_block_def* @split_loop_exit_edge(%struct.edge_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4176 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4180, metadata !DIExpression()), !dbg !4182
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4181, metadata !DIExpression()), !dbg !4183
  tail call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* sret %agg.result, %struct.basic_block_def* %bb) #7, !dbg !4184
  br label %while.cond, !dbg !4185

while.cond:                                       ; preds = %while.body, %entry
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !4186
  %tobool = icmp eq i8 %call, 0, !dbg !4186
  br i1 %tobool, label %land.rhs, label %while.end, !dbg !4187

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !4188
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !4189
  %cmp = icmp eq i32 %call2, 4, !dbg !4190
  br i1 %cmp, label %while.body, label %while.end, !dbg !4185

while.body:                                       ; preds = %land.rhs
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %agg.result) #7, !dbg !4191
  br label %while.cond, !dbg !4185, !llvm.loop !4192

while.end:                                        ; preds = %while.cond, %land.rhs
  ret void, !dbg !4194
}

declare dso_local %struct.loop* @superloop_at_depth(%struct.loop*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @loop_depth(%struct.loop* %loop) unnamed_addr #0 !dbg !4195 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4199, metadata !DIExpression()), !dbg !4200
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !4201
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !4201
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !4201
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4201

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !4201
  br label %cond.end, !dbg !4201

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4201
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !4201
  ret i32 %call, !dbg !4202
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !4203 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !4210, metadata !DIExpression()), !dbg !4211
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !4212
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !4212
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4213
  ret %union.tree_node* %1, !dbg !4214
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4215 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4219, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata i32 %i, metadata !4220, metadata !DIExpression()), !dbg !4221
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !4222
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !4223
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !4224
}

declare dso_local zeroext i8 @contains_abnormal_ssa_name_p(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator*, %union.tree_node*, i8 zeroext, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_scev_info_str(i8* %x_p) local_unnamed_addr #5 !dbg !4225 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4227, metadata !DIExpression()), !dbg !4230
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4228, metadata !DIExpression()), !dbg !4230
  %cmp = icmp ne i8* %x_p, null, !dbg !4231
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !4231
  %or.cond = and i1 %cmp, %cmp1, !dbg !4231
  br i1 %or.cond, label %land.lhs.true2, label %if.end20, !dbg !4231

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !4231
  %tobool = icmp eq i32 %call, 0, !dbg !4231
  br i1 %tobool, label %do.body, label %if.end20, !dbg !4233

do.body:                                          ; preds = %land.lhs.true2
  %instantiated_below = bitcast i8* %x_p to %struct.basic_block_def**, !dbg !4234
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %instantiated_below, align 8, !dbg !4234
  %cmp3 = icmp eq %struct.basic_block_def* %0, null, !dbg !4234
  br i1 %cmp3, label %do.body6, label %if.then4, !dbg !4238

if.then4:                                         ; preds = %do.body
  %1 = bitcast %struct.basic_block_def* %0 to i8*, !dbg !4238
  tail call void @gt_ggc_mx_basic_block_def(i8* nonnull %1) #6, !dbg !4234
  br label %do.body6, !dbg !4234

do.body6:                                         ; preds = %do.body, %if.then4
  %var = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !4239
  %2 = bitcast i8* %var to %union.tree_node**, !dbg !4239
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !4239
  %cmp7 = icmp eq %union.tree_node* %3, null, !dbg !4239
  br i1 %cmp7, label %do.body13, label %if.then8, !dbg !4242

if.then8:                                         ; preds = %do.body6
  %4 = bitcast %union.tree_node* %3 to i8*, !dbg !4242
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %4) #6, !dbg !4239
  br label %do.body13, !dbg !4239

do.body13:                                        ; preds = %do.body6, %if.then8
  %chrec = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !4243
  %5 = bitcast i8* %chrec to %union.tree_node**, !dbg !4243
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !4243
  %cmp14 = icmp eq %union.tree_node* %6, null, !dbg !4243
  br i1 %cmp14, label %if.end20, label %if.then15, !dbg !4246

if.then15:                                        ; preds = %do.body13
  %7 = bitcast %union.tree_node* %6 to i8*, !dbg !4246
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %7) #6, !dbg !4243
  br label %if.end20, !dbg !4243

if.end20:                                         ; preds = %do.body13, %land.lhs.true2, %if.then15, %entry
  ret void, !dbg !4247
}

declare dso_local i32 @ggc_set_mark(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_basic_block_def(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_lang_tree_node(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_m_P13scev_info_str4htab(i8* %x_p) #5 !dbg !4248 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4250, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4251, metadata !DIExpression()), !dbg !4261
  %cmp = icmp ne i8* %x_p, null, !dbg !4262
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !4262
  %or.cond = and i1 %cmp, %cmp1, !dbg !4262
  br i1 %or.cond, label %land.lhs.true2, label %if.end22, !dbg !4262

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !4262
  %tobool = icmp eq i32 %call, 0, !dbg !4262
  br i1 %tobool, label %if.then, label %if.end22, !dbg !4263

if.then:                                          ; preds = %land.lhs.true2
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !4264
  %0 = bitcast i8* %entries to i8***, !dbg !4264
  %1 = load i8**, i8*** %0, align 8, !dbg !4264
  %cmp3 = icmp eq i8** %1, null, !dbg !4265
  br i1 %cmp3, label %if.end22, label %for.cond.preheader, !dbg !4266

for.cond.preheader:                               ; preds = %if.then
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !4267
  %2 = bitcast i8* %size to i64*, !dbg !4267
  br label %for.cond, !dbg !4270

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ]
  %3 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ], !dbg !4271
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !4272
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !4253, metadata !DIExpression()), !dbg !4271
  %4 = load i64, i64* %2, align 8, !dbg !4273
  %cmp5 = icmp eq i64 %i0.0, %4, !dbg !4274
  br i1 %cmp5, label %do.body11, label %do.body, !dbg !4270

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %i0.0, !dbg !4275
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !4275
  %cmp7 = icmp eq i8* %5, null, !dbg !4275
  br i1 %cmp7, label %for.inc, label %if.then8, !dbg !4279

if.then8:                                         ; preds = %do.body
  tail call void @gt_ggc_mx_scev_info_str(i8* nonnull %5) #7, !dbg !4275
  %.pre.pre = load i8**, i8*** %0, align 8, !dbg !4271
  br label %for.inc, !dbg !4275

for.inc:                                          ; preds = %do.body, %if.then8
  %.pre = phi i8** [ %.pre1, %do.body ], [ %.pre.pre, %if.then8 ], !dbg !4271
  %inc = add i64 %i0.0, 1, !dbg !4280
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4253, metadata !DIExpression()), !dbg !4271
  br label %for.cond, !dbg !4281, !llvm.loop !4282

do.body11:                                        ; preds = %for.cond
  %.lcssa = phi i8** [ %3, %for.cond ], !dbg !4271
  call void @llvm.dbg.value(metadata i8** %.lcssa, metadata !4258, metadata !DIExpression()), !dbg !4284
  %switch = icmp ult i8** %.lcssa, inttoptr (i64 2 to i8**), !dbg !4285
  br i1 %switch, label %if.end22, label %if.then16, !dbg !4285

if.then16:                                        ; preds = %do.body11
  %6 = bitcast i8** %.lcssa to i8*, !dbg !4287
  call void @llvm.dbg.value(metadata i8* %6, metadata !4258, metadata !DIExpression()), !dbg !4284
  %call17 = tail call i32 @ggc_set_mark(i8* %6) #6, !dbg !4285
  br label %if.end22, !dbg !4285

if.end22:                                         ; preds = %if.then, %land.lhs.true2, %do.body11, %if.then16, %entry
  ret void, !dbg !4288
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_scev_info_str(i8* %x_p) local_unnamed_addr #5 !dbg !4289 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4291, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4292, metadata !DIExpression()), !dbg !4293
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_13scev_info_str, i32 57) #6, !dbg !4294
  %tobool = icmp eq i32 %call, 0, !dbg !4294
  br i1 %tobool, label %if.end17, label %do.body, !dbg !4296

do.body:                                          ; preds = %entry
  %instantiated_below = bitcast i8* %x_p to %struct.basic_block_def**, !dbg !4297
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %instantiated_below, align 8, !dbg !4297
  %cmp = icmp eq %struct.basic_block_def* %0, null, !dbg !4297
  br i1 %cmp, label %do.body3, label %if.then1, !dbg !4301

if.then1:                                         ; preds = %do.body
  %1 = bitcast %struct.basic_block_def* %0 to i8*, !dbg !4301
  tail call void @gt_pch_nx_basic_block_def(i8* nonnull %1) #6, !dbg !4297
  br label %do.body3, !dbg !4297

do.body3:                                         ; preds = %do.body, %if.then1
  %var = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !4302
  %2 = bitcast i8* %var to %union.tree_node**, !dbg !4302
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !4302
  %cmp4 = icmp eq %union.tree_node* %3, null, !dbg !4302
  br i1 %cmp4, label %do.body10, label %if.then5, !dbg !4305

if.then5:                                         ; preds = %do.body3
  %4 = bitcast %union.tree_node* %3 to i8*, !dbg !4305
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %4) #6, !dbg !4302
  br label %do.body10, !dbg !4302

do.body10:                                        ; preds = %do.body3, %if.then5
  %chrec = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !4306
  %5 = bitcast i8* %chrec to %union.tree_node**, !dbg !4306
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !4306
  %cmp11 = icmp eq %union.tree_node* %6, null, !dbg !4306
  br i1 %cmp11, label %if.end17, label %if.then12, !dbg !4309

if.then12:                                        ; preds = %do.body10
  %7 = bitcast %union.tree_node* %6 to i8*, !dbg !4309
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %7) #6, !dbg !4306
  br label %if.end17, !dbg !4306

if.end17:                                         ; preds = %do.body10, %entry, %if.then12
  ret void, !dbg !4310
}

declare dso_local i32 @gt_pch_note_object(i8*, i8*, void (i8*, i8*, void (i8*, i8*)*, i8*)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_13scev_info_str(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !4311 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !4316, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4317, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !4318, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !4319, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4320, metadata !DIExpression()), !dbg !4321
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !4322
  br i1 %cmp, label %if.then, label %if.end, !dbg !4324

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4320, metadata !DIExpression()), !dbg !4321
  tail call void %op(i8* %x_p, i8* %cookie) #6, !dbg !4325
  br label %if.end, !dbg !4325

if.end:                                           ; preds = %if.then, %entry
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4326

if.then2:                                         ; preds = %if.end
  %var = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !4327
  tail call void %op(i8* nonnull %var, i8* %cookie) #6, !dbg !4329
  br label %if.end3, !dbg !4329

if.end3:                                          ; preds = %if.then2, %if.end
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !4330

if.then5:                                         ; preds = %if.end3
  %chrec = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !4331
  tail call void %op(i8* nonnull %chrec, i8* %cookie) #6, !dbg !4333
  br label %if.end6, !dbg !4333

if.end6:                                          ; preds = %if.then5, %if.end3
  ret void, !dbg !4334
}

declare dso_local void @gt_pch_nx_basic_block_def(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_nx_lang_tree_node(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_n_P13scev_info_str4htab(i8* %x_p) #5 !dbg !4335 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4337, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4338, metadata !DIExpression()), !dbg !4344
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_P13scev_info_str4htab, i32 190) #6, !dbg !4345
  %tobool = icmp eq i32 %call, 0, !dbg !4345
  br i1 %tobool, label %if.end11, label %if.then, !dbg !4346

if.then:                                          ; preds = %entry
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !4347
  %0 = bitcast i8* %entries to i8***, !dbg !4347
  %1 = load i8**, i8*** %0, align 8, !dbg !4347
  %cmp = icmp eq i8** %1, null, !dbg !4348
  br i1 %cmp, label %if.end11, label %for.cond.preheader, !dbg !4349

for.cond.preheader:                               ; preds = %if.then
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !4350
  %2 = bitcast i8* %size to i64*, !dbg !4350
  br label %for.cond, !dbg !4353

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ]
  %3 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ], !dbg !4354
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !4355
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !4339, metadata !DIExpression()), !dbg !4354
  %4 = load i64, i64* %2, align 8, !dbg !4356
  %cmp2 = icmp eq i64 %i0.0, %4, !dbg !4357
  br i1 %cmp2, label %for.end, label %do.body, !dbg !4353

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %i0.0, !dbg !4358
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !4358
  %cmp4 = icmp eq i8* %5, null, !dbg !4358
  br i1 %cmp4, label %for.inc, label %if.then5, !dbg !4362

if.then5:                                         ; preds = %do.body
  tail call void @gt_pch_nx_scev_info_str(i8* nonnull %5) #7, !dbg !4358
  %.pre.pre = load i8**, i8*** %0, align 8, !dbg !4354
  br label %for.inc, !dbg !4358

for.inc:                                          ; preds = %do.body, %if.then5
  %.pre = phi i8** [ %.pre1, %do.body ], [ %.pre.pre, %if.then5 ], !dbg !4354
  %inc = add i64 %i0.0, 1, !dbg !4363
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4339, metadata !DIExpression()), !dbg !4354
  br label %for.cond, !dbg !4364, !llvm.loop !4365

for.end:                                          ; preds = %for.cond
  %.lcssa = phi i8** [ %3, %for.cond ], !dbg !4354
  %6 = bitcast i8** %.lcssa to i8*, !dbg !4367
  %call9 = tail call i32 @gt_pch_note_object(i8* %6, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_P13scev_info_str4htab, i32 217) #6, !dbg !4368
  br label %if.end11, !dbg !4369

if.end11:                                         ; preds = %if.then, %entry, %for.end
  ret void, !dbg !4370
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_P13scev_info_str4htab(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !4371 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !4373, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4374, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !4375, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !4376, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4377, metadata !DIExpression()), !dbg !4381
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !4382
  %0 = bitcast i8* %entries to i8***, !dbg !4382
  %1 = load i8**, i8*** %0, align 8, !dbg !4382
  %cmp = icmp eq i8** %1, null, !dbg !4383
  br i1 %cmp, label %if.end10, label %for.cond.preheader, !dbg !4384

for.cond.preheader:                               ; preds = %entry
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !4385
  %2 = bitcast i8* %size to i64*, !dbg !4385
  %3 = bitcast i8* %entries to i8**, !dbg !4388
  br label %for.cond, !dbg !4391

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !4392
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !4378, metadata !DIExpression()), !dbg !4393
  %4 = load i64, i64* %2, align 8, !dbg !4394
  %cmp1 = icmp eq i64 %i0.0, %4, !dbg !4395
  br i1 %cmp1, label %for.end, label %for.body, !dbg !4391

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %3, align 8, !dbg !4396
  %cmp3 = icmp eq i8* %5, %this_obj, !dbg !4397
  br i1 %cmp3, label %if.then4, label %for.inc, !dbg !4398

if.then4:                                         ; preds = %for.body
  %6 = bitcast i8* %5 to i8**, !dbg !4398
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %i0.0, !dbg !4399
  %7 = bitcast i8** %arrayidx to i8*, !dbg !4400
  tail call void %op(i8* %7, i8* %cookie) #6, !dbg !4401
  br label %for.inc, !dbg !4401

for.inc:                                          ; preds = %for.body, %if.then4
  %inc = add i64 %i0.0, 1, !dbg !4402
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4378, metadata !DIExpression()), !dbg !4393
  br label %for.cond, !dbg !4403, !llvm.loop !4404

for.end:                                          ; preds = %for.cond
  %cmp6 = icmp eq i8* %x_p, %this_obj, !dbg !4406
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !4408

if.then7:                                         ; preds = %for.end
  tail call void %op(i8* nonnull %entries, i8* %cookie) #6, !dbg !4409
  br label %if.end10, !dbg !4409

if.end10:                                         ; preds = %entry, %for.end, %if.then7
  ret void, !dbg !4410
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4411 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4415, metadata !DIExpression()), !dbg !4416
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !4417
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4417
  ret %struct.basic_block_def* %0, !dbg !4418
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4419 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !4425, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4426, metadata !DIExpression()), !dbg !4427
  br label %land.end, !dbg !4428

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4428
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4428
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !4428
  ret %struct.loop* %0, !dbg !4428
}

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @hide_evolution_in_other_loops_than_loop(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @tree_is_chrec(%union.tree_node* %expr) unnamed_addr #0 !dbg !4429 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4431, metadata !DIExpression()), !dbg !4432
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4433
  %bf.load = load i64, i64* %0, align 8, !dbg !4433
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4435
  %cmp = icmp eq i64 %bf.cast1, 146, !dbg !4435
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !4436

lor.lhs.false:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %expr) #7, !dbg !4437
  %tobool = icmp ne i8 %call, 0, !dbg !4437
  %spec.select = zext i1 %tobool to i8, !dbg !4438
  ret i8 %spec.select, !dbg !4438

return:                                           ; preds = %entry
  ret i8 1, !dbg !4439
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %chrec) unnamed_addr #0 !dbg !4440 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !4442, metadata !DIExpression()), !dbg !4443
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4444
  %cmp = icmp eq %union.tree_node* %0, %chrec, !dbg !4445
  %1 = load %union.tree_node*, %union.tree_node** @chrec_known, align 8, !dbg !4446
  %cmp1 = icmp eq %union.tree_node* %1, %chrec, !dbg !4446
  %2 = or i1 %cmp, %cmp1, !dbg !4446
  %conv = zext i1 %2 to i8, !dbg !4447
  ret i8 %conv, !dbg !4448
}

declare dso_local zeroext i8 @evolution_function_is_invariant_p(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node** @find_var_scev_info(%struct.basic_block_def* %instantiated_below, %union.tree_node* %var) unnamed_addr #5 !dbg !4449 {
entry:
  %tmp = alloca %struct.scev_info_str, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiated_below, metadata !4453, metadata !DIExpression()), !dbg !4458
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !4454, metadata !DIExpression()), !dbg !4458
  %0 = bitcast %struct.scev_info_str* %tmp to i8*, !dbg !4459
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4459
  %var1 = getelementptr inbounds %struct.scev_info_str, %struct.scev_info_str* %tmp, i64 0, i32 1, !dbg !4460
  store %union.tree_node* %var, %union.tree_node** %var1, align 8, !dbg !4461
  %instantiated_below2 = getelementptr inbounds %struct.scev_info_str, %struct.scev_info_str* %tmp, i64 0, i32 0, !dbg !4462
  store %struct.basic_block_def* %instantiated_below, %struct.basic_block_def** %instantiated_below2, align 8, !dbg !4463
  %1 = load %struct.htab*, %struct.htab** @scalar_evolution_info, align 8, !dbg !4464
  %call = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 1) #6, !dbg !4465
  call void @llvm.dbg.value(metadata i8** %call, metadata !4457, metadata !DIExpression()), !dbg !4458
  %2 = load i8*, i8** %call, align 8, !dbg !4466
  %tobool = icmp eq i8* %2, null, !dbg !4466
  br i1 %tobool, label %if.then, label %entry.if.end_crit_edge, !dbg !4468

entry.if.end_crit_edge:                           ; preds = %entry
  %3 = bitcast i8* %2 to %struct.scev_info_str*, !dbg !4468
  br label %if.end, !dbg !4468

if.then:                                          ; preds = %entry
  %call3 = call fastcc %struct.scev_info_str* @new_scev_info_str(%struct.basic_block_def* %instantiated_below, %union.tree_node* %var) #7, !dbg !4469
  %4 = bitcast i8** %call to %struct.scev_info_str**, !dbg !4470
  store %struct.scev_info_str* %call3, %struct.scev_info_str** %4, align 8, !dbg !4470
  br label %if.end, !dbg !4471

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %5 = phi %struct.scev_info_str* [ %3, %entry.if.end_crit_edge ], [ %call3, %if.then ], !dbg !4472
  call void @llvm.dbg.value(metadata %struct.scev_info_str* %5, metadata !4455, metadata !DIExpression()), !dbg !4458
  %chrec = getelementptr inbounds %struct.scev_info_str, %struct.scev_info_str* %5, i64 0, i32 2, !dbg !4473
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4474
  ret %union.tree_node** %chrec, !dbg !4475
}

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.scev_info_str* @new_scev_info_str(%struct.basic_block_def* %instantiated_below, %union.tree_node* %var) unnamed_addr #0 !dbg !4476 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiated_below, metadata !4480, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !4481, metadata !DIExpression()), !dbg !4483
  %call = tail call i8* @ggc_alloc_stat(i64 24) #6, !dbg !4484
  %0 = bitcast i8* %call to %struct.scev_info_str*, !dbg !4484
  call void @llvm.dbg.value(metadata %struct.scev_info_str* %0, metadata !4482, metadata !DIExpression()), !dbg !4483
  %var1 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4485
  %1 = bitcast i8* %var1 to %union.tree_node**, !dbg !4485
  store %union.tree_node* %var, %union.tree_node** %1, align 8, !dbg !4486
  %2 = load i64, i64* bitcast (%union.tree_node** @chrec_not_analyzed_yet to i64*), align 8, !dbg !4487
  %chrec = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4488
  %3 = bitcast i8* %chrec to i64*, !dbg !4489
  store i64 %2, i64* %3, align 8, !dbg !4489
  %instantiated_below2 = bitcast i8* %call to %struct.basic_block_def**, !dbg !4490
  store %struct.basic_block_def* %instantiated_below, %struct.basic_block_def** %instantiated_below2, align 8, !dbg !4491
  ret %struct.scev_info_str* %0, !dbg !4492
}

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

declare dso_local %struct.edge_def* @loop_preheader_edge(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @interpret_expr(%struct.loop* %loop, %union.gimple_statement_d* %at_stmt, %union.tree_node* %expr) unnamed_addr #5 !dbg !4493 {
entry:
  %code = alloca i32, align 4
  %op0 = alloca %union.tree_node*, align 8
  %op1 = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4497, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !4498, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4499, metadata !DIExpression()), !dbg !4504
  %0 = bitcast i32* %code to i8*, !dbg !4505
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4505
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4506
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !4506
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4501, metadata !DIExpression()), !dbg !4504
  %2 = bitcast %union.tree_node** %op0 to i8*, !dbg !4507
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4507
  %3 = bitcast %union.tree_node** %op1 to i8*, !dbg !4507
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4507
  %call = tail call fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %expr) #7, !dbg !4508
  %tobool = icmp eq i8 %call, 0, !dbg !4508
  br i1 %tobool, label %if.end, label %cleanup, !dbg !4510

if.end:                                           ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4511
  %bf.load = load i64, i64* %4, align 8, !dbg !4511
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4513
  %cmp = icmp eq i64 %bf.cast1, 146, !dbg !4513
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4514

if.then2:                                         ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4515
  br label %cleanup, !dbg !4516

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32* %code, metadata !4500, metadata !DIExpression(DW_OP_deref)), !dbg !4504
  call void @llvm.dbg.value(metadata %union.tree_node** %op0, metadata !4502, metadata !DIExpression(DW_OP_deref)), !dbg !4504
  call void @llvm.dbg.value(metadata %union.tree_node** %op1, metadata !4503, metadata !DIExpression(DW_OP_deref)), !dbg !4504
  call void @extract_ops_from_tree(%union.tree_node* %expr, i32* nonnull %code, %union.tree_node** nonnull %op0, %union.tree_node** nonnull %op1) #6, !dbg !4517
  %6 = load %union.tree_node*, %union.tree_node** %op0, align 8, !dbg !4518
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4502, metadata !DIExpression()), !dbg !4504
  %7 = load i32, i32* %code, align 4, !dbg !4519
  call void @llvm.dbg.value(metadata i32 %7, metadata !4500, metadata !DIExpression()), !dbg !4504
  %8 = load %union.tree_node*, %union.tree_node** %op1, align 8, !dbg !4520
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4503, metadata !DIExpression()), !dbg !4504
  %call4 = call fastcc %union.tree_node* @interpret_rhs_expr(%struct.loop* %loop, %union.gimple_statement_d* null, %union.tree_node* %1, %union.tree_node* %6, i32 %7, %union.tree_node* %8) #7, !dbg !4521
  br label %cleanup, !dbg !4522

cleanup:                                          ; preds = %entry, %if.end3, %if.then2
  %retval.0 = phi %union.tree_node* [ %5, %if.then2 ], [ %call4, %if.end3 ], [ %expr, %entry ], !dbg !4504
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4523
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4523
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4523
  ret %union.tree_node* %retval.0, !dbg !4523
}

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @compute_scalar_evolution_in_loop(%struct.loop* %wrto_loop, %struct.loop* %def_loop, %union.tree_node* %ev) unnamed_addr #5 !dbg !4524 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %wrto_loop, metadata !4528, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.value(metadata %struct.loop* %def_loop, metadata !4529, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.value(metadata %union.tree_node* %ev, metadata !4530, metadata !DIExpression()), !dbg !4532
  %cmp = icmp eq %struct.loop* %def_loop, %wrto_loop, !dbg !4533
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4535

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @loop_depth(%struct.loop* %wrto_loop) #7, !dbg !4536
  %add = add i32 %call, 1, !dbg !4537
  %call1 = tail call %struct.loop* @superloop_at_depth(%struct.loop* %def_loop, i32 %add) #6, !dbg !4538
  call void @llvm.dbg.value(metadata %struct.loop* %call1, metadata !4529, metadata !DIExpression()), !dbg !4532
  %call2 = tail call %union.tree_node* @compute_overall_effect_of_inner_loop(%struct.loop* %call1, %union.tree_node* %ev) #7, !dbg !4539
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4531, metadata !DIExpression()), !dbg !4532
  %0 = load %union.tree_node*, %union.tree_node** @chrec_not_analyzed_yet, align 8, !dbg !4540
  %call3 = tail call fastcc %union.tree_node* @analyze_scalar_evolution_1(%struct.loop* %wrto_loop, %union.tree_node* %call2, %union.tree_node* %0) #7, !dbg !4541
  br label %cleanup, !dbg !4542

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call3, %if.end ], [ %ev, %entry ], !dbg !4532
  ret %union.tree_node* %retval.0, !dbg !4543
}

declare dso_local %struct.loop* @find_common_loop(%struct.loop*, %struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @interpret_gimple_assign(%struct.loop* %loop, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !4544 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4548, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4549, metadata !DIExpression()), !dbg !4552
  %call = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !4553
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4553
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !4553
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4550, metadata !DIExpression()), !dbg !4552
  %call2 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !4554
  call void @llvm.dbg.value(metadata i32 %call2, metadata !4551, metadata !DIExpression()), !dbg !4552
  %call3 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !4555
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !4556
  %call5 = tail call fastcc %union.tree_node* @interpret_rhs_expr(%struct.loop* %loop, %union.gimple_statement_d* %stmt, %union.tree_node* %0, %union.tree_node* %call3, i32 %call2, %union.tree_node* %call4) #7, !dbg !4557
  ret %union.tree_node* %call5, !dbg !4558
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @loop_phi_node_p(%union.gimple_statement_d* %phi) unnamed_addr #5 !dbg !4559 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !4563, metadata !DIExpression()), !dbg !4564
  %call = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %phi) #7, !dbg !4565
  %header = getelementptr inbounds %struct.loop, %struct.loop* %call, i64 0, i32 2, !dbg !4566
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !4566
  %call1 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %phi) #7, !dbg !4567
  %cmp = icmp eq %struct.basic_block_def* %0, %call1, !dbg !4568
  %conv2 = zext i1 %cmp to i8, !dbg !4565
  ret i8 %conv2, !dbg !4569
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @interpret_loop_phi(%struct.loop* %loop, %union.gimple_statement_d* %loop_phi_node) unnamed_addr #5 !dbg !4570 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4572, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %loop_phi_node, metadata !4573, metadata !DIExpression()), !dbg !4584
  %call = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %loop_phi_node) #7, !dbg !4585
  call void @llvm.dbg.value(metadata %struct.loop* %call, metadata !4575, metadata !DIExpression()), !dbg !4584
  %cmp = icmp eq %struct.loop* %call, %loop, !dbg !4586
  br i1 %cmp, label %if.end, label %if.then, !dbg !4587

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %loop_phi_node) #7, !dbg !4588
  %call2 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call1) #7, !dbg !4588
  %call3 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %call, %union.tree_node* %call2) #7, !dbg !4589
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !4580, metadata !DIExpression()), !dbg !4590
  %call4 = tail call fastcc i32 @loop_depth(%struct.loop* %loop) #7, !dbg !4591
  %add = add i32 %call4, 1, !dbg !4592
  %call5 = tail call %struct.loop* @superloop_at_depth(%struct.loop* %call, i32 %add) #6, !dbg !4593
  call void @llvm.dbg.value(metadata %struct.loop* %call5, metadata !4577, metadata !DIExpression()), !dbg !4590
  %call6 = tail call %union.tree_node* @compute_overall_effect_of_inner_loop(%struct.loop* %call5, %union.tree_node* %call3) #7, !dbg !4594
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !4574, metadata !DIExpression()), !dbg !4584
  br label %cleanup51

if.end:                                           ; preds = %entry
  %call7 = tail call fastcc %union.tree_node* @analyze_initial_condition(%union.gimple_statement_d* %loop_phi_node) #7, !dbg !4595
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !4576, metadata !DIExpression()), !dbg !4584
  %call8 = tail call fastcc %union.tree_node* @analyze_evolution_in_loop(%union.gimple_statement_d* %loop_phi_node, %union.tree_node* %call7) #7, !dbg !4596
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !4574, metadata !DIExpression()), !dbg !4584
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4597
  %cmp9 = icmp eq %union.tree_node* %call8, %0, !dbg !4598
  br i1 %cmp9, label %if.end50, label %if.then10, !dbg !4599

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !4581, metadata !DIExpression()), !dbg !4600
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4601
  %bf.load = load i64, i64* %1, align 8, !dbg !4601
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !4601
  %cmp11 = icmp eq i64 %bf.cast2, 116, !dbg !4601
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false, !dbg !4601

lor.lhs.false:                                    ; preds = %if.then10
  %cmp16 = icmp eq i64 %bf.cast2, 113, !dbg !4601
  br i1 %cmp16, label %land.lhs.true, label %if.else, !dbg !4603

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then10
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4604
  %2 = bitcast %union.tree_node** %operands to i64**, !dbg !4604
  %3 = load i64*, i64** %2, align 8, !dbg !4604
  %bf.load18 = load i64, i64* %3, align 8, !dbg !4604
  %bf.cast206 = and i64 %bf.load18, 65535, !dbg !4605
  %cmp21 = icmp eq i64 %bf.cast206, 146, !dbg !4605
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !4606

if.then22:                                        ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4607
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4607
  %arrayidx28 = getelementptr inbounds i64, i64* %3, i64 6, !dbg !4607
  %5 = bitcast i64* %arrayidx28 to %union.tree_node**, !dbg !4607
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !4607
  %call29 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %4, %union.tree_node* %6) #6, !dbg !4607
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !4581, metadata !DIExpression()), !dbg !4600
  br label %if.end40, !dbg !4608

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %cmp34 = icmp eq i64 %bf.cast2, 146, !dbg !4609
  br i1 %cmp34, label %if.then35, label %if.end40, !dbg !4611

if.then35:                                        ; preds = %if.else
  %operands37 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4612
  %arrayidx38 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands37, i64 1, !dbg !4612
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8, !dbg !4612
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !4581, metadata !DIExpression()), !dbg !4600
  br label %if.end40, !dbg !4613

if.end40:                                         ; preds = %if.else, %if.then35, %if.then22
  %new_init.1 = phi %union.tree_node* [ %call29, %if.then22 ], [ %7, %if.then35 ], [ %call8, %if.else ], !dbg !4614
  call void @llvm.dbg.value(metadata %union.tree_node* %new_init.1, metadata !4581, metadata !DIExpression()), !dbg !4600
  %call41 = tail call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* %new_init.1) #6, !dbg !4615
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !4581, metadata !DIExpression()), !dbg !4600
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4616
  %bf.load43 = load i64, i64* %8, align 8, !dbg !4616
  %bf.cast455 = and i64 %bf.load43, 65535, !dbg !4616
  %cmp46 = icmp eq i64 %bf.cast455, 146, !dbg !4616
  br i1 %cmp46, label %cond.true, label %cond.end, !dbg !4616

cond.true:                                        ; preds = %if.end40
  tail call void @fancy_abort(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 1657, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !4616
  br label %cond.end, !dbg !4616

cond.end:                                         ; preds = %if.end40, %cond.true
  %call47 = tail call i32 @operand_equal_p(%union.tree_node* %call7, %union.tree_node* %call41, i32 0) #6, !dbg !4617
  %tobool = icmp eq i32 %call47, 0, !dbg !4617
  %9 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4619
  br i1 %tobool, label %cleanup51, label %if.end50

if.end50:                                         ; preds = %cond.end, %if.end
  br label %cleanup51, !dbg !4620

cleanup51:                                        ; preds = %cond.end, %if.end50, %if.then
  %retval.1 = phi %union.tree_node* [ %call6, %if.then ], [ %9, %cond.end ], [ %call8, %if.end50 ]
  ret %union.tree_node* %retval.1, !dbg !4621
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @interpret_condition_phi(%struct.loop* %loop, %union.gimple_statement_d* %condition_phi) unnamed_addr #5 !dbg !4622 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4624, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %condition_phi, metadata !4625, metadata !DIExpression()), !dbg !4633
  %call = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %condition_phi) #7, !dbg !4634
  call void @llvm.dbg.value(metadata i32 %call, metadata !4627, metadata !DIExpression()), !dbg !4633
  %0 = load %union.tree_node*, %union.tree_node** @chrec_not_analyzed_yet, align 8, !dbg !4635
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4628, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata i32 0, metadata !4626, metadata !DIExpression()), !dbg !4633
  br label %for.cond, !dbg !4636

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !4637
  %res.0 = phi %union.tree_node* [ %0, %entry ], [ %res.1, %for.inc ], !dbg !4633
  call void @llvm.dbg.value(metadata %union.tree_node* %res.0, metadata !4628, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4626, metadata !DIExpression()), !dbg !4633
  %cmp = icmp slt i32 %i.0, %call, !dbg !4638
  br i1 %cmp, label %for.body, label %for.end, !dbg !4639

for.body:                                         ; preds = %for.cond
  %call1 = tail call fastcc zeroext i8 @backedge_phi_arg_p(%union.gimple_statement_d* %condition_phi, i32 %i.0) #7, !dbg !4640
  %tobool = icmp eq i8 %call1, 0, !dbg !4640
  br i1 %tobool, label %if.end, label %if.then, !dbg !4642

if.then:                                          ; preds = %for.body
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4643
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4628, metadata !DIExpression()), !dbg !4633
  br label %cleanup, !dbg !4645

if.end:                                           ; preds = %for.body
  %call2 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %condition_phi, i32 %i.0) #7, !dbg !4646
  %call3 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call2) #7, !dbg !4646
  %call4 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %call3) #7, !dbg !4647
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !4629, metadata !DIExpression()), !dbg !4648
  %call5 = tail call %union.tree_node* @chrec_merge(%union.tree_node* %res.0, %union.tree_node* %call4) #6, !dbg !4649
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !4628, metadata !DIExpression()), !dbg !4633
  br label %cleanup, !dbg !4650

cleanup:                                          ; preds = %if.end, %if.then
  %res.1 = phi %union.tree_node* [ %1, %if.then ], [ %call5, %if.end ], !dbg !4648
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %res.1, metadata !4628, metadata !DIExpression()), !dbg !4633
  br i1 %cleanup.dest.slot.0, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup
  %inc = add nuw nsw i32 %i.0, 1, !dbg !4651
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4626, metadata !DIExpression()), !dbg !4633
  br label %for.cond, !dbg !4652, !llvm.loop !4653

for.end:                                          ; preds = %cleanup, %for.cond
  %res.2 = phi %union.tree_node* [ %res.1, %cleanup ], [ %res.0, %for.cond ], !dbg !4633
  call void @llvm.dbg.value(metadata %union.tree_node* %res.2, metadata !4628, metadata !DIExpression()), !dbg !4633
  ret %union.tree_node* %res.2, !dbg !4655
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_scalar_evolution(%struct.basic_block_def* %instantiated_below, %union.tree_node* %scalar, %union.tree_node* %chrec) unnamed_addr #5 !dbg !4656 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiated_below, metadata !4660, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.value(metadata %union.tree_node* %scalar, metadata !4661, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !4662, metadata !DIExpression()), !dbg !4664
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %scalar, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4665
  %bf.load = load i64, i64* %0, align 8, !dbg !4665
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4667
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4667
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !4668

if.end:                                           ; preds = %entry
  %call = tail call fastcc %union.tree_node** @find_var_scev_info(%struct.basic_block_def* %instantiated_below, %union.tree_node* %scalar) #7, !dbg !4669
  call void @llvm.dbg.value(metadata %union.tree_node** %call, metadata !4663, metadata !DIExpression()), !dbg !4664
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4670
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !4670
  br i1 %tobool, label %if.end14, label %if.then1, !dbg !4672

if.then1:                                         ; preds = %if.end
  %2 = load i32, i32* @dump_flags, align 4, !dbg !4673
  %and = and i32 %2, 8, !dbg !4676
  %tobool2 = icmp eq i32 %and, 0, !dbg !4676
  br i1 %tobool2, label %if.end9, label %if.then3, !dbg !4677

if.then3:                                         ; preds = %if.then1
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !4678
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4680
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %instantiated_below, i64 0, i32 9, !dbg !4681
  %4 = load i32, i32* %index, align 8, !dbg !4681
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.28, i64 0, i64 0), i32 %4) #6, !dbg !4682
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4683
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4684
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4685
  tail call void @print_generic_expr(%struct._IO_FILE* %6, %union.tree_node* %scalar, i32 0) #6, !dbg !4686
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4687
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !4688
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4689
  tail call void @print_generic_expr(%struct._IO_FILE* %8, %union.tree_node* %chrec, i32 0) #6, !dbg !4690
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4691
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !4692
  %.pre = load i32, i32* @dump_flags, align 4, !dbg !4693
  br label %if.end9, !dbg !4695

if.end9:                                          ; preds = %if.then1, %if.then3
  %10 = phi i32 [ %2, %if.then1 ], [ %.pre, %if.then3 ], !dbg !4693
  %and10 = and i32 %10, 16, !dbg !4696
  %tobool11 = icmp eq i32 %and10, 0, !dbg !4696
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !4697

if.then12:                                        ; preds = %if.end9
  %11 = load i32, i32* @nb_set_scev, align 4, !dbg !4698
  %inc = add i32 %11, 1, !dbg !4698
  store i32 %inc, i32* @nb_set_scev, align 4, !dbg !4698
  br label %if.end14, !dbg !4699

if.end14:                                         ; preds = %if.end9, %if.end, %if.then12
  store %union.tree_node* %chrec, %union.tree_node** %call, align 8, !dbg !4700
  br label %cleanup.cont, !dbg !4701

cleanup.cont:                                     ; preds = %entry, %if.end14
  ret void, !dbg !4701
}

declare dso_local void @extract_ops_from_tree(%union.tree_node*, i32*, %union.tree_node**, %union.tree_node**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @interpret_rhs_expr(%struct.loop* %loop, %union.gimple_statement_d* %at_stmt, %union.tree_node* %type, %union.tree_node* %rhs1, i32 %code, %union.tree_node* %rhs2) unnamed_addr #5 !dbg !4702 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4706, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %at_stmt, metadata !4707, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4708, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs1, metadata !4709, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %code, metadata !4710, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs2, metadata !4711, metadata !DIExpression()), !dbg !4715
  %call = tail call fastcc i32 @get_gimple_rhs_class(i32 %code) #7, !dbg !4716
  %cmp = icmp eq i32 %call, 3, !dbg !4718
  br i1 %cmp, label %if.then, label %if.end14, !dbg !4719

if.then:                                          ; preds = %entry
  %call1 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %rhs1) #6, !dbg !4720
  %tobool = icmp eq i8 %call1, 0, !dbg !4720
  br i1 %tobool, label %if.end, label %if.then2, !dbg !4723

if.then2:                                         ; preds = %if.then
  %call3 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %rhs1, %union.gimple_statement_d* %at_stmt) #6, !dbg !4724
  br label %cleanup, !dbg !4725

if.end:                                           ; preds = %if.then
  switch i32 %code, label %if.end13 [
    i32 141, label %if.then5
    i32 148, label %if.then10
  ], !dbg !4726

if.then5:                                         ; preds = %if.end
  %call6 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %rhs1) #7, !dbg !4727
  %call7 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call6, %union.gimple_statement_d* %at_stmt) #6, !dbg !4729
  br label %cleanup, !dbg !4730

if.then10:                                        ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4731
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4731
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4709, metadata !DIExpression()), !dbg !4715
  %call11 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %0) #7, !dbg !4734
  %call12 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call11, %union.gimple_statement_d* %at_stmt) #6, !dbg !4735
  br label %cleanup, !dbg !4736

if.end13:                                         ; preds = %if.end
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4737
  br label %cleanup, !dbg !4738

if.end14:                                         ; preds = %entry
  switch i32 %code, label %sw.default [
    i32 66, label %sw.bb
    i32 63, label %sw.bb20
    i32 64, label %sw.bb26
    i32 79, label %sw.bb32
    i32 90, label %sw.bb37
    i32 65, label %sw.bb42
    i32 116, label %sw.bb48
    i32 113, label %sw.bb48
  ], !dbg !4739

sw.bb:                                            ; preds = %if.end14
  %call15 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %rhs1) #7, !dbg !4740
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !4713, metadata !DIExpression()), !dbg !4715
  %call16 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %rhs2) #7, !dbg !4742
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !4714, metadata !DIExpression()), !dbg !4715
  %call17 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call15, %union.gimple_statement_d* %at_stmt) #6, !dbg !4743
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !4713, metadata !DIExpression()), !dbg !4715
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4744
  %call18 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %2, %union.tree_node* %call16, %union.gimple_statement_d* %at_stmt) #6, !dbg !4745
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !4714, metadata !DIExpression()), !dbg !4715
  %call19 = tail call %union.tree_node* @chrec_fold_plus(%union.tree_node* %type, %union.tree_node* %call17, %union.tree_node* %call18) #6, !dbg !4746
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !4712, metadata !DIExpression()), !dbg !4715
  br label %cleanup, !dbg !4747

sw.bb20:                                          ; preds = %if.end14
  %call21 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %rhs1) #7, !dbg !4748
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !4713, metadata !DIExpression()), !dbg !4715
  %call22 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %rhs2) #7, !dbg !4749
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !4714, metadata !DIExpression()), !dbg !4715
  %call23 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call21, %union.gimple_statement_d* %at_stmt) #6, !dbg !4750
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !4713, metadata !DIExpression()), !dbg !4715
  %call24 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call22, %union.gimple_statement_d* %at_stmt) #6, !dbg !4751
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !4714, metadata !DIExpression()), !dbg !4715
  %call25 = tail call %union.tree_node* @chrec_fold_plus(%union.tree_node* %type, %union.tree_node* %call23, %union.tree_node* %call24) #6, !dbg !4752
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !4712, metadata !DIExpression()), !dbg !4715
  br label %cleanup, !dbg !4753

sw.bb26:                                          ; preds = %if.end14
  %call27 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %rhs1) #7, !dbg !4754
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !4713, metadata !DIExpression()), !dbg !4715
  %call28 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %rhs2) #7, !dbg !4755
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !4714, metadata !DIExpression()), !dbg !4715
  %call29 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call27, %union.gimple_statement_d* %at_stmt) #6, !dbg !4756
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !4713, metadata !DIExpression()), !dbg !4715
  %call30 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call28, %union.gimple_statement_d* %at_stmt) #6, !dbg !4757
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !4714, metadata !DIExpression()), !dbg !4715
  %call31 = tail call %union.tree_node* @chrec_fold_minus(%union.tree_node* %type, %union.tree_node* %call29, %union.tree_node* %call30) #6, !dbg !4758
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !4712, metadata !DIExpression()), !dbg !4715
  br label %cleanup, !dbg !4759

sw.bb32:                                          ; preds = %if.end14
  %call33 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %rhs1) #7, !dbg !4760
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !4713, metadata !DIExpression()), !dbg !4715
  %call34 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call33, %union.gimple_statement_d* %at_stmt) #6, !dbg !4761
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !4713, metadata !DIExpression()), !dbg !4715
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !4762
  %call35 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %3) #6, !dbg !4762
  %call36 = tail call %union.tree_node* @chrec_fold_multiply(%union.tree_node* %type, %union.tree_node* %call34, %union.tree_node* %call35) #6, !dbg !4763
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !4712, metadata !DIExpression()), !dbg !4715
  br label %cleanup, !dbg !4764

sw.bb37:                                          ; preds = %if.end14
  %call38 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %rhs1) #7, !dbg !4765
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !4713, metadata !DIExpression()), !dbg !4715
  %call39 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call38, %union.gimple_statement_d* %at_stmt) #6, !dbg !4766
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !4713, metadata !DIExpression()), !dbg !4715
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !4767
  %call40 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %4) #6, !dbg !4767
  %call41 = tail call %union.tree_node* @chrec_fold_minus(%union.tree_node* %type, %union.tree_node* %call40, %union.tree_node* %call39) #6, !dbg !4768
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !4712, metadata !DIExpression()), !dbg !4715
  br label %cleanup, !dbg !4769

sw.bb42:                                          ; preds = %if.end14
  %call43 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %rhs1) #7, !dbg !4770
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !4713, metadata !DIExpression()), !dbg !4715
  %call44 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %rhs2) #7, !dbg !4771
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !4714, metadata !DIExpression()), !dbg !4715
  %call45 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call43, %union.gimple_statement_d* %at_stmt) #6, !dbg !4772
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !4713, metadata !DIExpression()), !dbg !4715
  %call46 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call44, %union.gimple_statement_d* %at_stmt) #6, !dbg !4773
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !4714, metadata !DIExpression()), !dbg !4715
  %call47 = tail call %union.tree_node* @chrec_fold_multiply(%union.tree_node* %type, %union.tree_node* %call45, %union.tree_node* %call46) #6, !dbg !4774
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !4712, metadata !DIExpression()), !dbg !4715
  br label %cleanup, !dbg !4775

sw.bb48:                                          ; preds = %if.end14, %if.end14
  %call49 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %rhs1) #7, !dbg !4776
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !4713, metadata !DIExpression()), !dbg !4715
  %call50 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call49, %union.gimple_statement_d* %at_stmt) #6, !dbg !4777
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !4712, metadata !DIExpression()), !dbg !4715
  br label %cleanup, !dbg !4778

sw.default:                                       ; preds = %if.end14
  %5 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4779
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4712, metadata !DIExpression()), !dbg !4715
  br label %cleanup, !dbg !4780

cleanup:                                          ; preds = %sw.bb, %sw.bb20, %sw.bb26, %sw.bb32, %sw.bb37, %sw.bb42, %sw.bb48, %sw.default, %if.end13, %if.then10, %if.then5, %if.then2
  %retval.0 = phi %union.tree_node* [ %call3, %if.then2 ], [ %call7, %if.then5 ], [ %call12, %if.then10 ], [ %1, %if.end13 ], [ %5, %sw.default ], [ %call50, %sw.bb48 ], [ %call47, %sw.bb42 ], [ %call41, %sw.bb37 ], [ %call36, %sw.bb32 ], [ %call31, %sw.bb26 ], [ %call25, %sw.bb20 ], [ %call19, %sw.bb ], !dbg !4715
  ret %union.tree_node* %retval.0, !dbg !4781
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !4782 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4786, metadata !DIExpression()), !dbg !4787
  %idxprom = sext i32 %code to i64, !dbg !4788
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !4788
  %0 = load i8, i8* %arrayidx, align 1, !dbg !4788
  %conv = zext i8 %0 to i32, !dbg !4789
  ret i32 %conv, !dbg !4790
}

declare dso_local %union.tree_node* @chrec_convert(%union.tree_node*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @chrec_fold_minus(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @chrec_fold_multiply(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4791 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4795, metadata !DIExpression()), !dbg !4796
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !4797
  ret %union.tree_node* %call, !dbg !4798
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4799 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4803, metadata !DIExpression()), !dbg !4805
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %call, metadata !4804, metadata !DIExpression()), !dbg !4805
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !4807
  %cmp = icmp eq i32 %call1, 3, !dbg !4809
  br i1 %cmp, label %if.then, label %if.end, !dbg !4810

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !4811
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4811
  %bf.load = load i64, i64* %0, align 8, !dbg !4811
  %1 = trunc i64 %bf.load to i32, !dbg !4811
  %bf.cast = and i32 %1, 65535, !dbg !4811
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !4804, metadata !DIExpression()), !dbg !4805
  br label %if.end, !dbg !4812

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !4805
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !4804, metadata !DIExpression()), !dbg !4805
  ret i32 %code.0, !dbg !4813
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4814 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4816, metadata !DIExpression()), !dbg !4817
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !4818
  ret %union.tree_node* %call, !dbg !4819
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4820 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4822, metadata !DIExpression()), !dbg !4823
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !4824
  %cmp = icmp ugt i32 %call, 2, !dbg !4826
  br i1 %cmp, label %if.then, label %return, !dbg !4827

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !4828
  br label %return, !dbg !4829

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !4830
  ret %union.tree_node* %retval.0, !dbg !4831
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4832 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4836, metadata !DIExpression()), !dbg !4838
  call void @llvm.dbg.value(metadata i32 %i, metadata !4837, metadata !DIExpression()), !dbg !4838
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4839
  %tobool = icmp eq i8 %call, 0, !dbg !4839
  br i1 %tobool, label %return, label %if.then, !dbg !4841

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4842
  %idxprom = zext i32 %i to i64, !dbg !4842
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !4842
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4842
  br label %return, !dbg !4844

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !4845
  ret %union.tree_node* %retval.0, !dbg !4846
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4847 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4851, metadata !DIExpression()), !dbg !4852
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4853
  %cmp = icmp eq i32 %call, 0, !dbg !4854
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !4855

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4856
  %cmp2 = icmp ult i32 %call1, 10, !dbg !4857
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4858
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4859 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4861, metadata !DIExpression()), !dbg !4863
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !4864
  %idxprom = zext i32 %call to i64, !dbg !4865
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !4865
  %0 = load i64, i64* %arrayidx, align 8, !dbg !4865
  call void @llvm.dbg.value(metadata i64 %0, metadata !4862, metadata !DIExpression()), !dbg !4863
  %cmp = icmp eq i64 %0, 0, !dbg !4866
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4866

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !4866
  br label %cond.end, !dbg !4866

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !4867
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !4868
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !4869
  ret %union.tree_node** %2, !dbg !4870
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4871 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4875, metadata !DIExpression()), !dbg !4876
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4877
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !4878
  ret i32 %call1, !dbg !4879
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !4880 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4884, metadata !DIExpression()), !dbg !4885
  %idxprom = zext i32 %code to i64, !dbg !4886
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !4886
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4886
  ret i32 %0, !dbg !4887
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !4888 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4890, metadata !DIExpression()), !dbg !4892
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !4893
  call void @llvm.dbg.value(metadata i32 %call, metadata !4891, metadata !DIExpression()), !dbg !4892
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !4894

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !4896
  %bf.load = load i32, i32* %0, align 8, !dbg !4896
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4896
  br label %cleanup, !dbg !4897

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !4898
  br label %cleanup, !dbg !4900

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !4892
  ret i32 %retval.0, !dbg !4901
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4902 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4906, metadata !DIExpression()), !dbg !4907
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !4908
  %0 = load i32, i32* %num_ops, align 4, !dbg !4908
  ret i32 %0, !dbg !4909
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @analyze_initial_condition(%union.gimple_statement_d* %loop_phi_node) unnamed_addr #5 !dbg !4910 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %loop_phi_node, metadata !4914, metadata !DIExpression()), !dbg !4928
  %0 = load %union.tree_node*, %union.tree_node** @chrec_not_analyzed_yet, align 8, !dbg !4929
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4917, metadata !DIExpression()), !dbg !4928
  %call = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %loop_phi_node) #7, !dbg !4930
  call void @llvm.dbg.value(metadata %struct.loop* %call, metadata !4918, metadata !DIExpression()), !dbg !4928
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4931
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !4931
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4933

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !4934
  %and = and i32 %2, 8, !dbg !4935
  %tobool1 = icmp eq i32 %and, 0, !dbg !4935
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4936

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !4937
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4939
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !4940
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4941
  tail call void @print_gimple_stmt(%struct._IO_FILE* %4, %union.gimple_statement_d* %loop_phi_node, i32 0, i32 0) #6, !dbg !4942
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4943
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4944
  br label %if.end, !dbg !4945

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call5 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %loop_phi_node) #7, !dbg !4946
  call void @llvm.dbg.value(metadata i32 %call5, metadata !4916, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i32 0, metadata !4915, metadata !DIExpression()), !dbg !4928
  %6 = sext i32 %call5 to i64, !dbg !4947
  br label %for.cond, !dbg !4947

for.cond:                                         ; preds = %for.inc, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end ], !dbg !4948
  %init_cond.0 = phi %union.tree_node* [ %init_cond.1, %for.inc ], [ %0, %if.end ], !dbg !4948
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4915, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata %union.tree_node* %init_cond.0, metadata !4917, metadata !DIExpression()), !dbg !4928
  %cmp = icmp slt i64 %indvars.iv, %6, !dbg !4949
  br i1 %cmp, label %for.body, label %for.end, !dbg !4950

for.body:                                         ; preds = %for.cond
  %7 = trunc i64 %indvars.iv to i32, !dbg !4951
  %call6 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %loop_phi_node, i32 %7) #7, !dbg !4951
  %call7 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call6) #7, !dbg !4951
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !4919, metadata !DIExpression()), !dbg !4952
  %call8 = tail call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %loop_phi_node, i64 %indvars.iv) #7, !dbg !4953
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call8, i64 0, i32 0, !dbg !4954
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4954
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %8, metadata !4923, metadata !DIExpression()), !dbg !4952
  %call9 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %call, %struct.basic_block_def* %8) #6, !dbg !4955
  %tobool10 = icmp eq i8 %call9, 0, !dbg !4955
  br i1 %tobool10, label %if.end12, label %cleanup, !dbg !4957

if.end12:                                         ; preds = %for.body
  %9 = load %union.tree_node*, %union.tree_node** @chrec_not_analyzed_yet, align 8, !dbg !4958
  %cmp13 = icmp eq %union.tree_node* %init_cond.0, %9, !dbg !4960
  br i1 %cmp13, label %cleanup, label %if.end16, !dbg !4961

if.end16:                                         ; preds = %if.end12
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4962
  %bf.load = load i64, i64* %10, align 8, !dbg !4962
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !4964
  %cmp17 = icmp eq i64 %bf.cast3, 141, !dbg !4964
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4965

if.then19:                                        ; preds = %if.end16
  %11 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4966
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !4917, metadata !DIExpression()), !dbg !4928
  br label %cleanup, !dbg !4968

if.end20:                                         ; preds = %if.end16
  %call21 = tail call %union.tree_node* @chrec_merge(%union.tree_node* %init_cond.0, %union.tree_node* %call7) #6, !dbg !4969
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !4917, metadata !DIExpression()), !dbg !4928
  br label %cleanup, !dbg !4970

cleanup:                                          ; preds = %for.body, %if.end12, %if.end20, %if.then19
  %init_cond.1 = phi %union.tree_node* [ %11, %if.then19 ], [ %call21, %if.end20 ], [ %init_cond.0, %for.body ], [ %call7, %if.end12 ], !dbg !4928
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then19 ], [ false, %if.end20 ], [ false, %for.body ], [ false, %if.end12 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %init_cond.1, metadata !4917, metadata !DIExpression()), !dbg !4928
  br i1 %cleanup.dest.slot.0, label %for.end, label %for.inc

for.inc:                                          ; preds = %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4971
  call void @llvm.dbg.value(metadata i32 undef, metadata !4915, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4928
  br label %for.cond, !dbg !4972, !llvm.loop !4973

for.end:                                          ; preds = %cleanup, %for.cond
  %init_cond.2 = phi %union.tree_node* [ %init_cond.1, %cleanup ], [ %init_cond.0, %for.cond ], !dbg !4948
  call void @llvm.dbg.value(metadata %union.tree_node* %init_cond.2, metadata !4917, metadata !DIExpression()), !dbg !4928
  %12 = load %union.tree_node*, %union.tree_node** @chrec_not_analyzed_yet, align 8, !dbg !4975
  %cmp23 = icmp eq %union.tree_node* %init_cond.2, %12, !dbg !4977
  %13 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4978
  %spec.select = select i1 %cmp23, %union.tree_node* %13, %union.tree_node* %init_cond.2, !dbg !4979
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !4917, metadata !DIExpression()), !dbg !4928
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4980
  %bf.load28 = load i64, i64* %14, align 8, !dbg !4980
  %bf.cast302 = and i64 %bf.load28, 65535, !dbg !4981
  %cmp31 = icmp eq i64 %bf.cast302, 141, !dbg !4981
  br i1 %cmp31, label %if.then33, label %if.end47, !dbg !4982

if.then33:                                        ; preds = %for.end
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4983
  %15 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4983
  %16 = load %union.gimple_statement_d*, %union.gimple_statement_d** %15, align 8, !dbg !4983
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %16, metadata !4924, metadata !DIExpression()), !dbg !4984
  %call34 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %16) #7, !dbg !4985
  %cmp35 = icmp eq i32 %call34, 16, !dbg !4987
  br i1 %cmp35, label %land.lhs.true37, label %if.end47, !dbg !4988

land.lhs.true37:                                  ; preds = %if.then33
  %call38 = tail call %union.tree_node* @degenerate_phi_result(%union.gimple_statement_d* %16) #6, !dbg !4989
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !4927, metadata !DIExpression()), !dbg !4984
  %cmp39 = icmp eq %union.tree_node* %call38, null, !dbg !4990
  br i1 %cmp39, label %if.end47, label %land.lhs.true41, !dbg !4991

land.lhs.true41:                                  ; preds = %land.lhs.true37
  %call42 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %call38) #6, !dbg !4992
  %tobool44 = icmp eq i8 %call42, 0, !dbg !4992
  %spec.select1 = select i1 %tobool44, %union.tree_node* %spec.select, %union.tree_node* %call38, !dbg !4993
  br label %if.end47, !dbg !4993

if.end47:                                         ; preds = %land.lhs.true37, %land.lhs.true41, %if.then33, %for.end
  %init_cond.5 = phi %union.tree_node* [ %spec.select, %for.end ], [ %spec.select, %land.lhs.true37 ], [ %spec.select, %if.then33 ], [ %spec.select1, %land.lhs.true41 ], !dbg !4928
  call void @llvm.dbg.value(metadata %union.tree_node* %init_cond.5, metadata !4917, metadata !DIExpression()), !dbg !4928
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4994
  %tobool48 = icmp eq %struct._IO_FILE* %17, null, !dbg !4994
  br i1 %tobool48, label %if.end55, label %land.lhs.true49, !dbg !4996

land.lhs.true49:                                  ; preds = %if.end47
  %18 = load i32, i32* @dump_flags, align 4, !dbg !4997
  %and50 = and i32 %18, 8, !dbg !4998
  %tobool51 = icmp eq i32 %and50, 0, !dbg !4998
  br i1 %tobool51, label %if.end55, label %if.then52, !dbg !4999

if.then52:                                        ; preds = %land.lhs.true49
  %call53 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !5000
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5002
  tail call void @print_generic_expr(%struct._IO_FILE* %19, %union.tree_node* %init_cond.5, i32 0) #6, !dbg !5003
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5004
  %call54 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5005
  br label %if.end55, !dbg !5006

if.end55:                                         ; preds = %land.lhs.true49, %if.end47, %if.then52
  ret %union.tree_node* %init_cond.5, !dbg !5007
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @analyze_evolution_in_loop(%union.gimple_statement_d* %loop_phi_node, %union.tree_node* %init_cond) unnamed_addr #5 !dbg !5008 {
entry:
  %ev_fn = alloca %union.tree_node*, align 8
  %val = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %loop_phi_node, metadata !5012, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata %union.tree_node* %init_cond, metadata !5013, metadata !DIExpression()), !dbg !5030
  %call = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %loop_phi_node) #7, !dbg !5031
  call void @llvm.dbg.value(metadata i32 %call, metadata !5015, metadata !DIExpression()), !dbg !5030
  %0 = load %union.tree_node*, %union.tree_node** @chrec_not_analyzed_yet, align 8, !dbg !5032
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5016, metadata !DIExpression()), !dbg !5030
  %call1 = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %loop_phi_node) #7, !dbg !5033
  call void @llvm.dbg.value(metadata %struct.loop* %call1, metadata !5017, metadata !DIExpression()), !dbg !5030
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5034
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !5034
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5036

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !5037
  %and = and i32 %2, 8, !dbg !5038
  %tobool2 = icmp eq i32 %and, 0, !dbg !5038
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5039

if.then:                                          ; preds = %land.lhs.true
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !5040
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5042
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !5043
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5044
  tail call void @print_gimple_stmt(%struct._IO_FILE* %4, %union.gimple_statement_d* %loop_phi_node, i32 0, i32 0) #6, !dbg !5045
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5046
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5047
  br label %if.end, !dbg !5048

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !5014, metadata !DIExpression()), !dbg !5030
  %6 = bitcast %union.tree_node** %ev_fn to i8*, !dbg !5049
  %7 = bitcast %union.tree_node** %ev_fn to i64**, !dbg !5050
  %num = getelementptr inbounds %struct.loop, %struct.loop* %call1, i64 0, i32 0, !dbg !5050
  %8 = bitcast %union.tree_node** %ev_fn to i64*, !dbg !5050
  %9 = sext i32 %call to i64, !dbg !5052
  br label %for.cond, !dbg !5052

for.cond:                                         ; preds = %cleanup, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup ], [ 0, %if.end ], !dbg !5030
  %evolution_function.0 = phi %union.tree_node* [ %evolution_function.1, %cleanup ], [ %0, %if.end ], !dbg !5030
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5014, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata %union.tree_node* %evolution_function.0, metadata !5016, metadata !DIExpression()), !dbg !5030
  %cmp = icmp slt i64 %indvars.iv, %9, !dbg !5053
  br i1 %cmp, label %for.body, label %for.end, !dbg !5054

for.body:                                         ; preds = %for.cond
  %10 = trunc i64 %indvars.iv to i32, !dbg !5055
  %call6 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %loop_phi_node, i32 %10) #7, !dbg !5055
  %call7 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call6) #7, !dbg !5055
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5019, metadata !DIExpression()), !dbg !5049
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8, !dbg !5056
  %call8 = call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %loop_phi_node, i64 %indvars.iv) #7, !dbg !5057
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call8, i64 0, i32 0, !dbg !5058
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5058
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %11, metadata !5018, metadata !DIExpression()), !dbg !5030
  %call9 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %call1, %struct.basic_block_def* %11) #6, !dbg !5059
  %tobool10 = icmp eq i8 %call9, 0, !dbg !5059
  br i1 %tobool10, label %cleanup, label %if.end12, !dbg !5061

if.end12:                                         ; preds = %for.body
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5062
  %bf.load = load i64, i64* %12, align 8, !dbg !5062
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5063
  %cmp13 = icmp eq i64 %bf.cast1, 141, !dbg !5063
  br i1 %cmp13, label %if.then15, label %if.end35, !dbg !5064

if.then15:                                        ; preds = %if.end12
  call void @llvm.dbg.value(metadata i8* %val, metadata !5027, metadata !DIExpression(DW_OP_deref)), !dbg !5065
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %val) #8, !dbg !5066
  call void @llvm.dbg.value(metadata i8 0, metadata !5027, metadata !DIExpression()), !dbg !5065
  store i8 0, i8* %val, align 1, !dbg !5067
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5068
  %13 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5068
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %13, align 8, !dbg !5068
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %14, metadata !5023, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.value(metadata %union.tree_node* %init_cond, metadata !5024, metadata !DIExpression()), !dbg !5049
  store %union.tree_node* %init_cond, %union.tree_node** %ev_fn, align 8, !dbg !5069
  call void @llvm.dbg.value(metadata %union.tree_node** %ev_fn, metadata !5024, metadata !DIExpression(DW_OP_deref)), !dbg !5049
  %call16 = call fastcc i32 @follow_ssa_edge(%struct.loop* %call1, %union.gimple_statement_d* %14, %union.gimple_statement_d* %loop_phi_node, %union.tree_node** nonnull %ev_fn, i32 0) #7, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %call16, metadata !5025, metadata !DIExpression()), !dbg !5049
  %15 = load i64*, i64** %7, align 8, !dbg !5071
  %bf.load18 = load i64, i64* %15, align 8, !dbg !5071
  %bf.cast202 = and i64 %bf.load18, 65535, !dbg !5072
  %cmp21 = icmp eq i64 %bf.cast202, 146, !dbg !5072
  br i1 %cmp21, label %if.end34, label %land.lhs.true23, !dbg !5073

land.lhs.true23:                                  ; preds = %if.then15
  %16 = bitcast i64* %15 to %union.tree_node*, !dbg !5073
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !5024, metadata !DIExpression()), !dbg !5049
  %17 = load i32, i32* %num, align 8, !dbg !5074
  call void @llvm.dbg.value(metadata i8* %val, metadata !5027, metadata !DIExpression(DW_OP_deref)), !dbg !5065
  %call24 = call fastcc zeroext i8 @no_evolution_in_loop_p(%union.tree_node* %16, i32 %17, i8* nonnull %val) #7, !dbg !5075
  %tobool26 = icmp eq i8 %call24, 0, !dbg !5075
  br i1 %tobool26, label %if.end34, label %land.lhs.true27, !dbg !5076

land.lhs.true27:                                  ; preds = %land.lhs.true23
  %18 = load i8, i8* %val, align 1, !dbg !5077
  call void @llvm.dbg.value(metadata i8 %18, metadata !5027, metadata !DIExpression()), !dbg !5065
  %tobool29 = icmp eq i8 %18, 0, !dbg !5077
  br i1 %tobool29, label %if.end34, label %land.lhs.true30, !dbg !5078

land.lhs.true30:                                  ; preds = %land.lhs.true27
  %19 = load %union.tree_node*, %union.tree_node** %ev_fn, align 8, !dbg !5079
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !5024, metadata !DIExpression()), !dbg !5049
  %call31 = call i32 @operand_equal_p(%union.tree_node* %init_cond, %union.tree_node* %19, i32 0) #6, !dbg !5080
  %tobool32 = icmp eq i32 %call31, 0, !dbg !5080
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !5081

if.then33:                                        ; preds = %land.lhs.true30
  %20 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !5082
  store i64 %20, i64* %8, align 8, !dbg !5083
  br label %if.end34, !dbg !5084

if.end34:                                         ; preds = %land.lhs.true30, %land.lhs.true27, %land.lhs.true23, %if.then15, %if.then33
  call void @llvm.dbg.value(metadata i8* %val, metadata !5027, metadata !DIExpression(DW_OP_deref)), !dbg !5065
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %val) #8, !dbg !5085
  br label %if.end35, !dbg !5086

if.end35:                                         ; preds = %if.end12, %if.end34
  %res.0 = phi i32 [ %call16, %if.end34 ], [ 0, %if.end12 ], !dbg !5087
  call void @llvm.dbg.value(metadata i32 %res.0, metadata !5025, metadata !DIExpression()), !dbg !5049
  %cmp36 = icmp eq i32 %res.0, 1, !dbg !5088
  br i1 %cmp36, label %if.end35.if.end39_crit_edge, label %if.then38, !dbg !5090

if.end35.if.end39_crit_edge:                      ; preds = %if.end35
  %.pre = load %union.tree_node*, %union.tree_node** %ev_fn, align 8, !dbg !5091
  br label %if.end39, !dbg !5090

if.then38:                                        ; preds = %if.end35
  %21 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !5092
  store i64 %21, i64* %8, align 8, !dbg !5093
  %22 = inttoptr i64 %21 to %union.tree_node*, !dbg !5094
  br label %if.end39, !dbg !5094

if.end39:                                         ; preds = %if.end35.if.end39_crit_edge, %if.then38
  %23 = phi %union.tree_node* [ %.pre, %if.end35.if.end39_crit_edge ], [ %22, %if.then38 ], !dbg !5091
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !5024, metadata !DIExpression()), !dbg !5049
  %call40 = call %union.tree_node* @chrec_merge(%union.tree_node* %evolution_function.0, %union.tree_node* %23) #6, !dbg !5095
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !5016, metadata !DIExpression()), !dbg !5030
  br label %cleanup, !dbg !5096

cleanup:                                          ; preds = %for.body, %if.end39
  %evolution_function.1 = phi %union.tree_node* [ %call40, %if.end39 ], [ %evolution_function.0, %for.body ], !dbg !5030
  call void @llvm.dbg.value(metadata %union.tree_node* %evolution_function.1, metadata !5016, metadata !DIExpression()), !dbg !5030
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8, !dbg !5096
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5097
  call void @llvm.dbg.value(metadata i32 undef, metadata !5014, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5030
  br label %for.cond, !dbg !5098, !llvm.loop !5099

for.end:                                          ; preds = %for.cond
  %evolution_function.0.lcssa = phi %union.tree_node* [ %evolution_function.0, %for.cond ], !dbg !5030
  call void @llvm.dbg.value(metadata %union.tree_node* %evolution_function.0.lcssa, metadata !5016, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata %union.tree_node* %evolution_function.0.lcssa, metadata !5016, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata %union.tree_node* %evolution_function.0.lcssa, metadata !5016, metadata !DIExpression()), !dbg !5030
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5101
  %tobool44 = icmp eq %struct._IO_FILE* %24, null, !dbg !5101
  br i1 %tobool44, label %if.end51, label %land.lhs.true45, !dbg !5103

land.lhs.true45:                                  ; preds = %for.end
  %25 = load i32, i32* @dump_flags, align 4, !dbg !5104
  %and46 = and i32 %25, 8, !dbg !5105
  %tobool47 = icmp eq i32 %and46, 0, !dbg !5105
  br i1 %tobool47, label %if.end51, label %if.then48, !dbg !5106

if.then48:                                        ; preds = %land.lhs.true45
  %call49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %24, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !5107
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5109
  call void @print_generic_expr(%struct._IO_FILE* %26, %union.tree_node* %evolution_function.0.lcssa, i32 0) #6, !dbg !5110
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5111
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5112
  br label %if.end51, !dbg !5113

if.end51:                                         ; preds = %land.lhs.true45, %for.end, %if.then48
  ret %union.tree_node* %evolution_function.0.lcssa, !dbg !5114
}

declare dso_local %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5115 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5117, metadata !DIExpression()), !dbg !5118
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !5119
  %0 = load i32, i32* %nargs, align 4, !dbg !5119
  ret i32 %0, !dbg !5120
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !5121 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5125, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i64 %i, metadata !5126, metadata !DIExpression()), !dbg !5127
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !5128
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 0, !dbg !5128
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5128
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5128
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5128

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !5128
  %preds2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call1, i64 0, i32 0, !dbg !5128
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds2, align 8, !dbg !5128
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !5128
  br label %cond.end, !dbg !5128

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5128
  %conv = trunc i64 %i to i32, !dbg !5128
  %call3 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %conv) #7, !dbg !5128
  ret %struct.edge_def* %call3, !dbg !5129
}

declare dso_local %union.tree_node* @chrec_merge(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @degenerate_phi_result(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5130 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5136, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5137, metadata !DIExpression()), !dbg !5138
  br label %land.end, !dbg !5139

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5139
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5139
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !5139
  ret %struct.edge_def* %0, !dbg !5139
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @follow_ssa_edge(%struct.loop* %loop, %union.gimple_statement_d* %def, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) unnamed_addr #5 !dbg !5140 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5144, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %def, metadata !5145, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %halting_phi, metadata !5146, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata %union.tree_node** %evolution_of_loop, metadata !5147, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata i32 %limit, metadata !5148, metadata !DIExpression()), !dbg !5150
  %call = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %def) #7, !dbg !5151
  %tobool = icmp eq i8 %call, 0, !dbg !5151
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5153

if.end:                                           ; preds = %entry
  %0 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !5154
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %0, i64 63, i32 1, !dbg !5154
  %1 = load i32, i32* %value, align 8, !dbg !5154
  %cmp = icmp slt i32 %1, %limit, !dbg !5156
  br i1 %cmp, label %cleanup, label %if.end2, !dbg !5157

if.end2:                                          ; preds = %if.end
  %call3 = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %def) #7, !dbg !5158
  call void @llvm.dbg.value(metadata %struct.loop* %call3, metadata !5149, metadata !DIExpression()), !dbg !5150
  %call4 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %def) #7, !dbg !5159
  switch i32 %call4, label %cleanup [
    i32 16, label %sw.bb
    i32 6, label %sw.bb21
  ], !dbg !5160

sw.bb:                                            ; preds = %if.end2
  %call5 = tail call fastcc zeroext i8 @loop_phi_node_p(%union.gimple_statement_d* %def) #7, !dbg !5161
  %tobool6 = icmp eq i8 %call5, 0, !dbg !5161
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !5164

if.then7:                                         ; preds = %sw.bb
  %call8 = tail call fastcc i32 @follow_ssa_edge_in_condition_phi(%struct.loop* %loop, %union.gimple_statement_d* %def, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5165
  br label %cleanup, !dbg !5166

if.end9:                                          ; preds = %sw.bb
  %cmp10 = icmp eq %union.gimple_statement_d* %def, %halting_phi, !dbg !5167
  br i1 %cmp10, label %cleanup, label %if.end12, !dbg !5169

if.end12:                                         ; preds = %if.end9
  %cmp13 = icmp eq %struct.loop* %call3, %loop, !dbg !5170
  br i1 %cmp13, label %cleanup, label %if.end15, !dbg !5172

if.end15:                                         ; preds = %if.end12
  %call16 = tail call zeroext i8 @flow_loop_nested_p(%struct.loop* %loop, %struct.loop* %call3) #6, !dbg !5173
  %tobool17 = icmp eq i8 %call16, 0, !dbg !5173
  br i1 %tobool17, label %cleanup, label %if.then18, !dbg !5175

if.then18:                                        ; preds = %if.end15
  %add = add nsw i32 %limit, 1, !dbg !5176
  %call19 = tail call fastcc i32 @follow_ssa_edge_inner_loop_phi(%struct.loop* %loop, %union.gimple_statement_d* %def, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %add) #7, !dbg !5177
  br label %cleanup, !dbg !5178

sw.bb21:                                          ; preds = %if.end2
  %call22 = tail call fastcc i32 @follow_ssa_edge_in_rhs(%struct.loop* %loop, %union.gimple_statement_d* %def, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5179
  br label %cleanup, !dbg !5180

cleanup:                                          ; preds = %if.end15, %entry, %if.end2, %if.end12, %if.end9, %if.end, %sw.bb21, %if.then18, %if.then7
  %retval.0 = phi i32 [ %call22, %sw.bb21 ], [ %call19, %if.then18 ], [ %call8, %if.then7 ], [ 0, %entry ], [ 2, %if.end ], [ 1, %if.end9 ], [ 0, %if.end12 ], [ 0, %if.end15 ], [ 0, %if.end2 ], !dbg !5150
  ret i32 %retval.0, !dbg !5181
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5182 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5184, metadata !DIExpression()), !dbg !5185
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5186
  %cmp = icmp eq i32 %call, 18, !dbg !5187
  %conv1 = zext i1 %cmp to i8, !dbg !5186
  ret i8 %conv1, !dbg !5188
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @follow_ssa_edge_in_condition_phi(%struct.loop* %loop, %union.gimple_statement_d* %condition_phi, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) unnamed_addr #5 !dbg !5189 {
entry:
  %evolution_of_branch = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5191, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %condition_phi, metadata !5192, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %halting_phi, metadata !5193, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata %union.tree_node** %evolution_of_loop, metadata !5194, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i32 %limit, metadata !5195, metadata !DIExpression()), !dbg !5201
  %0 = load %union.tree_node*, %union.tree_node** %evolution_of_loop, align 8, !dbg !5202
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5198, metadata !DIExpression()), !dbg !5201
  %1 = bitcast %union.tree_node** %evolution_of_branch to i8*, !dbg !5203
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5203
  call void @llvm.dbg.value(metadata %union.tree_node** %evolution_of_branch, metadata !5199, metadata !DIExpression(DW_OP_deref)), !dbg !5201
  %call = call fastcc i32 @follow_ssa_edge_in_condition_phi_branch(i32 0, %struct.loop* %loop, %union.gimple_statement_d* %condition_phi, %union.gimple_statement_d* %halting_phi, %union.tree_node** nonnull %evolution_of_branch, %union.tree_node* %0, i32 %limit) #7, !dbg !5204
  call void @llvm.dbg.value(metadata i32 %call, metadata !5200, metadata !DIExpression()), !dbg !5201
  switch i32 %call, label %if.end [
    i32 0, label %cleanup
    i32 2, label %cleanup
  ], !dbg !5205

if.end:                                           ; preds = %entry
  %2 = bitcast %union.tree_node** %evolution_of_branch to i64*, !dbg !5207
  %3 = load i64, i64* %2, align 8, !dbg !5207
  %4 = bitcast %union.tree_node** %evolution_of_loop to i64*, !dbg !5208
  store i64 %3, i64* %4, align 8, !dbg !5208
  %call2 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %condition_phi) #7, !dbg !5209
  call void @llvm.dbg.value(metadata i32 %call2, metadata !5197, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i32 1, metadata !5196, metadata !DIExpression()), !dbg !5201
  br label %for.cond, !dbg !5210

for.cond:                                         ; preds = %if.end12, %if.end
  %i.0 = phi i32 [ 1, %if.end ], [ %inc, %if.end12 ], !dbg !5212
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5196, metadata !DIExpression()), !dbg !5201
  %cmp3 = icmp slt i32 %i.0, %call2, !dbg !5213
  br i1 %cmp3, label %for.body, label %cleanup.loopexit, !dbg !5215

for.body:                                         ; preds = %for.cond
  %5 = load %union.tree_node*, %union.tree_node** %evolution_of_loop, align 8, !dbg !5216
  %6 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5219
  %cmp4 = icmp eq %union.tree_node* %5, %6, !dbg !5220
  br i1 %cmp4, label %cleanup.loopexit, label %if.end6, !dbg !5221

if.end6:                                          ; preds = %for.body
  %add = add nsw i32 %i.0, %limit, !dbg !5222
  call void @llvm.dbg.value(metadata %union.tree_node** %evolution_of_branch, metadata !5199, metadata !DIExpression(DW_OP_deref)), !dbg !5201
  %call7 = call fastcc i32 @follow_ssa_edge_in_condition_phi_branch(i32 %i.0, %struct.loop* %loop, %union.gimple_statement_d* %condition_phi, %union.gimple_statement_d* %halting_phi, %union.tree_node** nonnull %evolution_of_branch, %union.tree_node* %0, i32 %add) #7, !dbg !5223
  call void @llvm.dbg.value(metadata i32 %call7, metadata !5200, metadata !DIExpression()), !dbg !5201
  switch i32 %call7, label %if.end12 [
    i32 0, label %cleanup.loopexit
    i32 2, label %cleanup.loopexit
  ], !dbg !5224

if.end12:                                         ; preds = %if.end6
  %7 = load %union.tree_node*, %union.tree_node** %evolution_of_loop, align 8, !dbg !5226
  %8 = load %union.tree_node*, %union.tree_node** %evolution_of_branch, align 8, !dbg !5227
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5199, metadata !DIExpression()), !dbg !5201
  %call13 = call %union.tree_node* @chrec_merge(%union.tree_node* %7, %union.tree_node* %8) #6, !dbg !5228
  store %union.tree_node* %call13, %union.tree_node** %evolution_of_loop, align 8, !dbg !5229
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5230
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5196, metadata !DIExpression()), !dbg !5201
  br label %for.cond, !dbg !5231, !llvm.loop !5232

cleanup.loopexit:                                 ; preds = %for.body, %if.end6, %if.end6, %for.cond
  %retval.0.ph = phi i32 [ 1, %for.cond ], [ %call7, %if.end6 ], [ %call7, %if.end6 ], [ 1, %for.body ]
  br label %cleanup, !dbg !5234

cleanup:                                          ; preds = %cleanup.loopexit, %entry, %entry
  %retval.0 = phi i32 [ %call, %entry ], [ %call, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !5201
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5234
  ret i32 %retval.0, !dbg !5234
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @follow_ssa_edge_inner_loop_phi(%struct.loop* %outer_loop, %union.gimple_statement_d* %loop_phi_node, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) unnamed_addr #5 !dbg !5235 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %outer_loop, metadata !5237, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %loop_phi_node, metadata !5238, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %halting_phi, metadata !5239, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.value(metadata %union.tree_node** %evolution_of_loop, metadata !5240, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.value(metadata i32 %limit, metadata !5241, metadata !DIExpression()), !dbg !5254
  %call = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %loop_phi_node) #7, !dbg !5255
  call void @llvm.dbg.value(metadata %struct.loop* %call, metadata !5242, metadata !DIExpression()), !dbg !5254
  %call1 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %loop_phi_node) #7, !dbg !5256
  %call2 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call1) #7, !dbg !5256
  %call3 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %call, %union.tree_node* %call2) #7, !dbg !5257
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5243, metadata !DIExpression()), !dbg !5254
  %call4 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %loop_phi_node) #7, !dbg !5258
  %call5 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call4) #7, !dbg !5258
  %cmp = icmp eq %union.tree_node* %call3, %call5, !dbg !5259
  br i1 %cmp, label %if.then, label %if.end26, !dbg !5260

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !5244, metadata !DIExpression()), !dbg !5261
  %call6 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %loop_phi_node) #7, !dbg !5262
  call void @llvm.dbg.value(metadata i32 %call6, metadata !5248, metadata !DIExpression()), !dbg !5261
  call void @llvm.dbg.value(metadata i32 0, metadata !5247, metadata !DIExpression()), !dbg !5261
  %0 = sext i32 %call6 to i64, !dbg !5263
  br label %for.cond, !dbg !5263

for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !5264
  %res.0 = phi i32 [ %res.1, %for.inc ], [ 0, %if.then ], !dbg !5264
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5247, metadata !DIExpression()), !dbg !5261
  call void @llvm.dbg.value(metadata i32 %res.0, metadata !5244, metadata !DIExpression()), !dbg !5261
  %cmp7 = icmp slt i64 %indvars.iv, %0, !dbg !5265
  br i1 %cmp7, label %for.body, label %for.end, !dbg !5266

for.body:                                         ; preds = %for.cond
  %1 = trunc i64 %indvars.iv to i32, !dbg !5267
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %loop_phi_node, i32 %1) #7, !dbg !5267
  %call9 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call8) #7, !dbg !5267
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5249, metadata !DIExpression()), !dbg !5268
  %call10 = tail call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %loop_phi_node, i64 %indvars.iv) #7, !dbg !5269
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 0, !dbg !5270
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5270
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !5253, metadata !DIExpression()), !dbg !5268
  %call11 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %call, %struct.basic_block_def* %2) #6, !dbg !5271
  %tobool = icmp eq i8 %call11, 0, !dbg !5271
  br i1 %tobool, label %if.then12, label %if.end, !dbg !5273

if.then12:                                        ; preds = %for.body
  %call13 = tail call fastcc i32 @follow_ssa_edge_expr(%struct.loop* %outer_loop, %union.gimple_statement_d* %loop_phi_node, %union.tree_node* %call9, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5274
  call void @llvm.dbg.value(metadata i32 %call13, metadata !5244, metadata !DIExpression()), !dbg !5261
  br label %if.end, !dbg !5275

if.end:                                           ; preds = %for.body, %if.then12
  %res.1 = phi i32 [ %res.0, %for.body ], [ %call13, %if.then12 ], !dbg !5261
  call void @llvm.dbg.value(metadata i32 %res.1, metadata !5244, metadata !DIExpression()), !dbg !5261
  %cmp14 = icmp eq i32 %res.1, 1, !dbg !5276
  br i1 %cmp14, label %for.end, label %for.inc

for.inc:                                          ; preds = %if.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5278
  call void @llvm.dbg.value(metadata i32 undef, metadata !5247, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5261
  br label %for.cond, !dbg !5279, !llvm.loop !5280

for.end:                                          ; preds = %if.end, %for.cond
  %res.2 = phi i32 [ 1, %if.end ], [ %res.0, %for.cond ], !dbg !5264
  call void @llvm.dbg.value(metadata i32 %res.2, metadata !5244, metadata !DIExpression()), !dbg !5261
  %cmp19 = icmp eq i32 %res.2, 1, !dbg !5282
  br i1 %cmp19, label %if.then21, label %cleanup29, !dbg !5284

if.then21:                                        ; preds = %for.end
  %3 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !5285
  %4 = bitcast %union.tree_node** %evolution_of_loop to i64*, !dbg !5286
  store i64 %3, i64* %4, align 8, !dbg !5286
  br label %cleanup29, !dbg !5287

if.end26:                                         ; preds = %entry
  %call27 = tail call %union.tree_node* @compute_overall_effect_of_inner_loop(%struct.loop* %call, %union.tree_node* %call3) #7, !dbg !5288
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !5243, metadata !DIExpression()), !dbg !5254
  %call28 = tail call fastcc i32 @follow_ssa_edge_expr(%struct.loop* %outer_loop, %union.gimple_statement_d* %loop_phi_node, %union.tree_node* %call27, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5289
  br label %cleanup29, !dbg !5290

cleanup29:                                        ; preds = %for.end, %if.then21, %if.end26
  %retval.0 = phi i32 [ %call28, %if.end26 ], [ 1, %if.then21 ], [ %res.2, %for.end ], !dbg !5254
  ret i32 %retval.0, !dbg !5291
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @follow_ssa_edge_in_rhs(%struct.loop* %loop, %union.gimple_statement_d* %stmt, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) unnamed_addr #5 !dbg !5292 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5294, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5295, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %halting_phi, metadata !5296, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata %union.tree_node** %evolution_of_loop, metadata !5297, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata i32 %limit, metadata !5298, metadata !DIExpression()), !dbg !5304
  %call = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5305
  call void @llvm.dbg.value(metadata i32 %call, metadata !5299, metadata !DIExpression()), !dbg !5304
  %call1 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #7, !dbg !5306
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5300, metadata !DIExpression()), !dbg !5304
  switch i32 %call, label %sw.default [
    i32 116, label %sw.bb
    i32 113, label %sw.bb
    i32 66, label %sw.bb5
    i32 63, label %sw.bb5
    i32 64, label %sw.bb5
  ], !dbg !5307

sw.bb:                                            ; preds = %entry, %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5308
  %call3 = tail call fastcc i32 @follow_ssa_edge_expr(%struct.loop* %loop, %union.gimple_statement_d* %stmt, %union.tree_node* %call2, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5310
  call void @llvm.dbg.value(metadata i32 %call3, metadata !5303, metadata !DIExpression()), !dbg !5304
  %0 = load %union.tree_node*, %union.tree_node** %evolution_of_loop, align 8, !dbg !5311
  %call4 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call1, %union.tree_node* %0, %union.gimple_statement_d* %stmt) #6, !dbg !5312
  store %union.tree_node* %call4, %union.tree_node** %evolution_of_loop, align 8, !dbg !5313
  br label %sw.epilog, !dbg !5314

sw.bb5:                                           ; preds = %entry, %entry, %entry
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5315
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !5301, metadata !DIExpression()), !dbg !5304
  %call7 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !5316
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5302, metadata !DIExpression()), !dbg !5304
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5317
  %1 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !5317
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5300, metadata !DIExpression()), !dbg !5304
  %call9 = tail call fastcc i32 @follow_ssa_edge_binary(%struct.loop* %loop, %union.gimple_statement_d* %stmt, %union.tree_node* %1, %union.tree_node* %call6, i32 %call, %union.tree_node* %call7, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5318
  call void @llvm.dbg.value(metadata i32 %call9, metadata !5303, metadata !DIExpression()), !dbg !5304
  br label %sw.epilog, !dbg !5319

sw.default:                                       ; preds = %entry
  %call10 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !5320
  %cmp = icmp eq i32 %call10, 3, !dbg !5322
  br i1 %cmp, label %if.then, label %sw.epilog, !dbg !5323

if.then:                                          ; preds = %sw.default
  %call11 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5324
  %call12 = tail call fastcc i32 @follow_ssa_edge_expr(%struct.loop* %loop, %union.gimple_statement_d* %stmt, %union.tree_node* %call11, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %call12, metadata !5303, metadata !DIExpression()), !dbg !5304
  br label %sw.epilog, !dbg !5326

sw.epilog:                                        ; preds = %if.then, %sw.default, %sw.bb5, %sw.bb
  %res.1 = phi i32 [ %call9, %sw.bb5 ], [ %call3, %sw.bb ], [ %call12, %if.then ], [ 0, %sw.default ], !dbg !5327
  call void @llvm.dbg.value(metadata i32 %res.1, metadata !5303, metadata !DIExpression()), !dbg !5304
  ret i32 %res.1, !dbg !5328
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @follow_ssa_edge_in_condition_phi_branch(i32 %i, %struct.loop* %loop, %union.gimple_statement_d* %condition_phi, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_branch, %union.tree_node* %init_cond, i32 %limit) unnamed_addr #0 !dbg !5329 {
entry:
  call void @llvm.dbg.value(metadata i32 %i, metadata !5333, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5334, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %condition_phi, metadata !5335, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %halting_phi, metadata !5336, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata %union.tree_node** %evolution_of_branch, metadata !5337, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata %union.tree_node* %init_cond, metadata !5338, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata i32 %limit, metadata !5339, metadata !DIExpression()), !dbg !5341
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %condition_phi, i32 %i) #7, !dbg !5342
  %call1 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call) #7, !dbg !5342
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5340, metadata !DIExpression()), !dbg !5341
  %0 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !5343
  %1 = bitcast %union.tree_node** %evolution_of_branch to i64*, !dbg !5344
  store i64 %0, i64* %1, align 8, !dbg !5344
  %call2 = tail call fastcc zeroext i8 @backedge_phi_arg_p(%union.gimple_statement_d* %condition_phi, i32 %i) #7, !dbg !5345
  %tobool = icmp eq i8 %call2, 0, !dbg !5345
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5347

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5348
  %bf.load = load i64, i64* %2, align 8, !dbg !5348
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5350
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5350
  br i1 %cmp, label %if.then3, label %cleanup, !dbg !5351

if.then3:                                         ; preds = %if.end
  store %union.tree_node* %init_cond, %union.tree_node** %evolution_of_branch, align 8, !dbg !5352
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5354
  %3 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5354
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %3, align 8, !dbg !5354
  %call4 = tail call fastcc i32 @follow_ssa_edge(%struct.loop* %loop, %union.gimple_statement_d* %4, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_branch, i32 %limit) #7, !dbg !5355
  br label %cleanup, !dbg !5356

cleanup:                                          ; preds = %entry, %if.end, %if.then3
  %retval.0 = phi i32 [ %call4, %if.then3 ], [ 0, %entry ], [ 0, %if.end ], !dbg !5341
  ret i32 %retval.0, !dbg !5357
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @backedge_phi_arg_p(%union.gimple_statement_d* %phi, i32 %i) unnamed_addr #5 !dbg !5358 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !5362, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.value(metadata i32 %i, metadata !5363, metadata !DIExpression()), !dbg !5368
  %conv = sext i32 %i to i64, !dbg !5369
  %call = tail call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %phi, i64 %conv) #7, !dbg !5370
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !5364, metadata !DIExpression()), !dbg !5368
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 7, !dbg !5371
  %0 = load i32, i32* %flags, align 8, !dbg !5371
  %1 = trunc i32 %0 to i8, !dbg !5373
  %.lobit = lshr i8 %1, 7, !dbg !5368
  ret i8 %.lobit, !dbg !5374
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @follow_ssa_edge_expr(%struct.loop* %loop, %union.gimple_statement_d* %at_stmt, %union.tree_node* %expr, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) unnamed_addr #5 !dbg !5375 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5379, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %at_stmt, metadata !5380, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5381, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %halting_phi, metadata !5382, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.value(metadata %union.tree_node** %evolution_of_loop, metadata !5383, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.value(metadata i32 %limit, metadata !5384, metadata !DIExpression()), !dbg !5390
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5391
  %bf.load = load i64, i64* %0, align 8, !dbg !5391
  call void @llvm.dbg.value(metadata i32 undef, metadata !5385, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !5390
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !5386, metadata !DIExpression()), !dbg !5390
  %trunc = trunc i64 %bf.load to i16, !dbg !5392
  switch i16 %trunc, label %sw.epilog [
    i16 116, label %sw.bb
    i16 113, label %sw.bb
    i16 148, label %sw.bb18
    i16 141, label %sw.bb4
    i16 66, label %sw.bb6
    i16 63, label %sw.bb6
    i16 64, label %sw.bb6
  ], !dbg !5392

sw.bb:                                            ; preds = %entry, %entry
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5393
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !5393
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5386, metadata !DIExpression()), !dbg !5390
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5394
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5394
  %call = tail call fastcc i32 @follow_ssa_edge_expr(%struct.loop* %loop, %union.gimple_statement_d* %at_stmt, %union.tree_node* %2, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5396
  call void @llvm.dbg.value(metadata i32 %call, metadata !5389, metadata !DIExpression()), !dbg !5390
  %3 = load %union.tree_node*, %union.tree_node** %evolution_of_loop, align 8, !dbg !5397
  %call2 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %1, %union.tree_node* %3, %union.gimple_statement_d* %at_stmt) #6, !dbg !5398
  store %union.tree_node* %call2, %union.tree_node** %evolution_of_loop, align 8, !dbg !5399
  ret i32 %call, !dbg !5400

sw.bb4:                                           ; preds = %entry
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5401
  %4 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5401
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %4, align 8, !dbg !5401
  %call5 = tail call fastcc i32 @follow_ssa_edge(%struct.loop* %loop, %union.gimple_statement_d* %5, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5402
  call void @llvm.dbg.value(metadata i32 %call5, metadata !5389, metadata !DIExpression()), !dbg !5390
  br label %sw.epilog, !dbg !5403

sw.bb6:                                           ; preds = %entry, %entry, %entry
  %6 = trunc i64 %bf.load to i32, !dbg !5391
  call void @llvm.dbg.value(metadata i32 %6, metadata !5385, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !5390
  %bf.cast = and i32 %6, 65535, !dbg !5391
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5385, metadata !DIExpression()), !dbg !5390
  %operands8 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5404
  %7 = load %union.tree_node*, %union.tree_node** %operands8, align 8, !dbg !5404
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5387, metadata !DIExpression()), !dbg !5390
  %arrayidx12 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands8, i64 1, !dbg !5405
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !5405
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5388, metadata !DIExpression()), !dbg !5390
  %type14 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5406
  %9 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !5406
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !5386, metadata !DIExpression()), !dbg !5390
  %call15 = tail call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* %7) #6, !dbg !5407
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !5387, metadata !DIExpression()), !dbg !5390
  %call16 = tail call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* %8) #6, !dbg !5408
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !5388, metadata !DIExpression()), !dbg !5390
  %call17 = tail call fastcc i32 @follow_ssa_edge_binary(%struct.loop* %loop, %union.gimple_statement_d* %at_stmt, %union.tree_node* %9, %union.tree_node* %call15, i32 %bf.cast, %union.tree_node* %call16, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5409
  call void @llvm.dbg.value(metadata i32 %call17, metadata !5389, metadata !DIExpression()), !dbg !5390
  br label %sw.epilog, !dbg !5410

sw.bb18:                                          ; preds = %entry
  %operands20 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5411
  %10 = load %union.tree_node*, %union.tree_node** %operands20, align 8, !dbg !5411
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !5387, metadata !DIExpression()), !dbg !5390
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5412
  %bf.load23 = load i64, i64* %11, align 8, !dbg !5412
  %bf.cast251 = and i64 %bf.load23, 65535, !dbg !5414
  %cmp = icmp eq i64 %bf.cast251, 141, !dbg !5414
  br i1 %cmp, label %if.then, label %sw.epilog, !dbg !5415

if.then:                                          ; preds = %sw.bb18
  %def_stmt27 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5416
  %12 = bitcast %union.tree_node** %def_stmt27 to %union.gimple_statement_d**, !dbg !5416
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %12, align 8, !dbg !5416
  %call28 = tail call fastcc i32 @follow_ssa_edge(%struct.loop* %loop, %union.gimple_statement_d* %13, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5417
  call void @llvm.dbg.value(metadata i32 %call28, metadata !5389, metadata !DIExpression()), !dbg !5390
  br label %sw.epilog, !dbg !5418

sw.epilog:                                        ; preds = %entry, %if.then, %sw.bb18, %sw.bb6, %sw.bb4
  %res.1 = phi i32 [ %call17, %sw.bb6 ], [ %call5, %sw.bb4 ], [ %call28, %if.then ], [ 0, %sw.bb18 ], [ 0, %entry ], !dbg !5419
  call void @llvm.dbg.value(metadata i32 %res.1, metadata !5389, metadata !DIExpression()), !dbg !5390
  ret i32 %res.1, !dbg !5400
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @follow_ssa_edge_binary(%struct.loop* %loop, %union.gimple_statement_d* %at_stmt, %union.tree_node* %type, %union.tree_node* %rhs0, i32 %code, %union.tree_node* %rhs1, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) unnamed_addr #5 !dbg !5420 {
entry:
  %evol = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5424, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %at_stmt, metadata !5425, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5426, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs0, metadata !5427, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata i32 %code, metadata !5428, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs1, metadata !5429, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %halting_phi, metadata !5430, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata %union.tree_node** %evolution_of_loop, metadata !5431, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata i32 %limit, metadata !5432, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata i32 0, metadata !5433, metadata !DIExpression()), !dbg !5435
  %0 = bitcast %union.tree_node** %evol to i8*, !dbg !5436
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5436
  switch i32 %code, label %sw.epilog [
    i32 66, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb69
  ], !dbg !5437

sw.bb:                                            ; preds = %entry, %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5438
  %bf.load = load i64, i64* %1, align 8, !dbg !5438
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !5441
  %cmp = icmp eq i64 %bf.cast3, 141, !dbg !5441
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5442
  %bf.load2 = load i64, i64* %2, align 8, !dbg !5442
  %bf.cast44 = and i64 %bf.load2, 65535, !dbg !5442
  %cmp5 = icmp eq i64 %bf.cast44, 141, !dbg !5442
  br i1 %cmp, label %if.then, label %if.else46, !dbg !5443

if.then:                                          ; preds = %sw.bb
  br i1 %cmp5, label %if.then6, label %if.else31, !dbg !5444

if.then6:                                         ; preds = %if.then
  %inc = add nsw i32 %limit, 1, !dbg !5446
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5432, metadata !DIExpression()), !dbg !5435
  %3 = bitcast %union.tree_node** %evolution_of_loop to i64*, !dbg !5449
  %4 = load i64, i64* %3, align 8, !dbg !5449
  %5 = bitcast %union.tree_node** %evol to i64*, !dbg !5450
  store i64 %4, i64* %5, align 8, !dbg !5450
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5451
  %6 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5451
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %6, align 8, !dbg !5451
  call void @llvm.dbg.value(metadata %union.tree_node** %evol, metadata !5434, metadata !DIExpression(DW_OP_deref)), !dbg !5435
  %call = call fastcc i32 @follow_ssa_edge(%struct.loop* %loop, %union.gimple_statement_d* %7, %union.gimple_statement_d* %halting_phi, %union.tree_node** nonnull %evol, i32 %inc) #7, !dbg !5452
  call void @llvm.dbg.value(metadata i32 %call, metadata !5433, metadata !DIExpression()), !dbg !5435
  switch i32 %call, label %sw.epilog [
    i32 1, label %if.then8
    i32 0, label %if.then12
    i32 2, label %if.then27
  ], !dbg !5453

if.then8:                                         ; preds = %if.then6
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !5454
  %8 = load i32, i32* %num, align 8, !dbg !5454
  %9 = load %union.tree_node*, %union.tree_node** %evol, align 8, !dbg !5456
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !5434, metadata !DIExpression()), !dbg !5435
  %call9 = call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %9, %union.gimple_statement_d* %at_stmt) #6, !dbg !5457
  %call10 = call fastcc %union.tree_node* @add_to_evolution(i32 %8, %union.tree_node* %call9, i32 %code, %union.tree_node* %rhs1, %union.gimple_statement_d* %at_stmt) #7, !dbg !5458
  store %union.tree_node* %call10, %union.tree_node** %evolution_of_loop, align 8, !dbg !5459
  br label %sw.epilog, !dbg !5460

if.then12:                                        ; preds = %if.then6
  %def_stmt14 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5461
  %10 = bitcast %union.tree_node** %def_stmt14 to %union.gimple_statement_d**, !dbg !5461
  %11 = load %union.gimple_statement_d*, %union.gimple_statement_d** %10, align 8, !dbg !5461
  %call15 = call fastcc i32 @follow_ssa_edge(%struct.loop* %loop, %union.gimple_statement_d* %11, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %inc) #7, !dbg !5464
  call void @llvm.dbg.value(metadata i32 %call15, metadata !5433, metadata !DIExpression()), !dbg !5435
  switch i32 %call15, label %sw.epilog [
    i32 1, label %if.then17
    i32 2, label %if.then23
  ], !dbg !5465

if.then17:                                        ; preds = %if.then12
  %num18 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !5466
  %12 = load i32, i32* %num18, align 8, !dbg !5466
  %13 = load %union.tree_node*, %union.tree_node** %evolution_of_loop, align 8, !dbg !5468
  %call19 = call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %13, %union.gimple_statement_d* %at_stmt) #6, !dbg !5469
  %call20 = call fastcc %union.tree_node* @add_to_evolution(i32 %12, %union.tree_node* %call19, i32 %code, %union.tree_node* %rhs0, %union.gimple_statement_d* %at_stmt) #7, !dbg !5470
  store %union.tree_node* %call20, %union.tree_node** %evolution_of_loop, align 8, !dbg !5471
  br label %sw.epilog, !dbg !5472

if.then23:                                        ; preds = %if.then12
  %14 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !5473
  store i64 %14, i64* %3, align 8, !dbg !5475
  br label %sw.epilog, !dbg !5476

if.then27:                                        ; preds = %if.then6
  %15 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !5477
  store i64 %15, i64* %3, align 8, !dbg !5479
  br label %sw.epilog, !dbg !5480

if.else31:                                        ; preds = %if.then
  %def_stmt33 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5481
  %16 = bitcast %union.tree_node** %def_stmt33 to %union.gimple_statement_d**, !dbg !5481
  %17 = load %union.gimple_statement_d*, %union.gimple_statement_d** %16, align 8, !dbg !5481
  %call34 = tail call fastcc i32 @follow_ssa_edge(%struct.loop* %loop, %union.gimple_statement_d* %17, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5483
  call void @llvm.dbg.value(metadata i32 %call34, metadata !5433, metadata !DIExpression()), !dbg !5435
  switch i32 %call34, label %sw.epilog [
    i32 1, label %if.then36
    i32 2, label %if.then42
  ], !dbg !5484

if.then36:                                        ; preds = %if.else31
  %num37 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !5485
  %18 = load i32, i32* %num37, align 8, !dbg !5485
  %19 = load %union.tree_node*, %union.tree_node** %evolution_of_loop, align 8, !dbg !5487
  %call38 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %19, %union.gimple_statement_d* %at_stmt) #6, !dbg !5488
  %call39 = tail call fastcc %union.tree_node* @add_to_evolution(i32 %18, %union.tree_node* %call38, i32 %code, %union.tree_node* %rhs1, %union.gimple_statement_d* %at_stmt) #7, !dbg !5489
  store %union.tree_node* %call39, %union.tree_node** %evolution_of_loop, align 8, !dbg !5490
  br label %sw.epilog, !dbg !5491

if.then42:                                        ; preds = %if.else31
  %20 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !5492
  %21 = bitcast %union.tree_node** %evolution_of_loop to i64*, !dbg !5494
  store i64 %20, i64* %21, align 8, !dbg !5494
  br label %sw.epilog, !dbg !5495

if.else46:                                        ; preds = %sw.bb
  br i1 %cmp5, label %if.then52, label %sw.epilog, !dbg !5496

if.then52:                                        ; preds = %if.else46
  %def_stmt54 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5497
  %22 = bitcast %union.tree_node** %def_stmt54 to %union.gimple_statement_d**, !dbg !5497
  %23 = load %union.gimple_statement_d*, %union.gimple_statement_d** %22, align 8, !dbg !5497
  %call55 = tail call fastcc i32 @follow_ssa_edge(%struct.loop* %loop, %union.gimple_statement_d* %23, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %limit) #7, !dbg !5500
  call void @llvm.dbg.value(metadata i32 %call55, metadata !5433, metadata !DIExpression()), !dbg !5435
  switch i32 %call55, label %sw.epilog [
    i32 1, label %if.then57
    i32 2, label %if.then63
  ], !dbg !5501

if.then57:                                        ; preds = %if.then52
  %num58 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !5502
  %24 = load i32, i32* %num58, align 8, !dbg !5502
  %25 = load %union.tree_node*, %union.tree_node** %evolution_of_loop, align 8, !dbg !5504
  %call59 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %25, %union.gimple_statement_d* %at_stmt) #6, !dbg !5505
  %call60 = tail call fastcc %union.tree_node* @add_to_evolution(i32 %24, %union.tree_node* %call59, i32 %code, %union.tree_node* %rhs0, %union.gimple_statement_d* %at_stmt) #7, !dbg !5506
  store %union.tree_node* %call60, %union.tree_node** %evolution_of_loop, align 8, !dbg !5507
  br label %sw.epilog, !dbg !5508

if.then63:                                        ; preds = %if.then52
  %26 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !5509
  %27 = bitcast %union.tree_node** %evolution_of_loop to i64*, !dbg !5511
  store i64 %26, i64* %27, align 8, !dbg !5511
  br label %sw.epilog, !dbg !5512

sw.bb69:                                          ; preds = %entry
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5513
  %bf.load71 = load i64, i64* %28, align 8, !dbg !5513
  %bf.cast731 = and i64 %bf.load71, 65535, !dbg !5515
  %cmp74 = icmp eq i64 %bf.cast731, 141, !dbg !5515
  br i1 %cmp74, label %if.then75, label %sw.epilog, !dbg !5516

if.then75:                                        ; preds = %sw.bb69
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5517
  %bf.load77 = load i64, i64* %29, align 8, !dbg !5517
  %bf.cast792 = and i64 %bf.load77, 65535, !dbg !5520
  %cmp80 = icmp eq i64 %bf.cast792, 141, !dbg !5520
  %inc82 = zext i1 %cmp80 to i32, !dbg !5521
  %spec.select = add nsw i32 %inc82, %limit, !dbg !5521
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5432, metadata !DIExpression()), !dbg !5435
  %def_stmt85 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5522
  %30 = bitcast %union.tree_node** %def_stmt85 to %union.gimple_statement_d**, !dbg !5522
  %31 = load %union.gimple_statement_d*, %union.gimple_statement_d** %30, align 8, !dbg !5522
  %call86 = tail call fastcc i32 @follow_ssa_edge(%struct.loop* %loop, %union.gimple_statement_d* %31, %union.gimple_statement_d* %halting_phi, %union.tree_node** %evolution_of_loop, i32 %spec.select) #7, !dbg !5523
  call void @llvm.dbg.value(metadata i32 %call86, metadata !5433, metadata !DIExpression()), !dbg !5435
  switch i32 %call86, label %sw.epilog [
    i32 1, label %if.then88
    i32 2, label %if.then94
  ], !dbg !5524

if.then88:                                        ; preds = %if.then75
  %num89 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !5525
  %32 = load i32, i32* %num89, align 8, !dbg !5525
  %33 = load %union.tree_node*, %union.tree_node** %evolution_of_loop, align 8, !dbg !5527
  %call90 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %33, %union.gimple_statement_d* %at_stmt) #6, !dbg !5528
  %call91 = tail call fastcc %union.tree_node* @add_to_evolution(i32 %32, %union.tree_node* %call90, i32 64, %union.tree_node* %rhs1, %union.gimple_statement_d* %at_stmt) #7, !dbg !5529
  store %union.tree_node* %call91, %union.tree_node** %evolution_of_loop, align 8, !dbg !5530
  br label %sw.epilog, !dbg !5531

if.then94:                                        ; preds = %if.then75
  %34 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !5532
  %35 = bitcast %union.tree_node** %evolution_of_loop to i64*, !dbg !5534
  store i64 %34, i64* %35, align 8, !dbg !5534
  br label %sw.epilog, !dbg !5535

sw.epilog:                                        ; preds = %entry, %if.then94, %if.then75, %if.then88, %sw.bb69, %if.then36, %if.else31, %if.then42, %if.then8, %if.then27, %if.then6, %if.then17, %if.then12, %if.then23, %if.else46, %if.then57, %if.then52, %if.then63
  %res.6 = phi i32 [ 1, %if.then8 ], [ 2, %if.then23 ], [ %call15, %if.then12 ], [ 1, %if.then17 ], [ %call, %if.then6 ], [ 2, %if.then27 ], [ 2, %if.then42 ], [ %call34, %if.else31 ], [ 1, %if.then36 ], [ 2, %if.then63 ], [ %call55, %if.then52 ], [ 1, %if.then57 ], [ 0, %if.else46 ], [ 2, %if.then94 ], [ %call86, %if.then75 ], [ 1, %if.then88 ], [ 0, %sw.bb69 ], [ 0, %entry ], !dbg !5536
  call void @llvm.dbg.value(metadata i32 %res.6, metadata !5433, metadata !DIExpression()), !dbg !5435
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5537
  ret i32 %res.6, !dbg !5538
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @add_to_evolution(i32 %loop_nb, %union.tree_node* %chrec_before, i32 %code, %union.tree_node* %to_add, %union.gimple_statement_d* %at_stmt) unnamed_addr #5 !dbg !5539 {
entry:
  call void @llvm.dbg.value(metadata i32 %loop_nb, metadata !5543, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_before, metadata !5544, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata i32 %code, metadata !5545, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata %union.tree_node* %to_add, metadata !5546, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %at_stmt, metadata !5547, metadata !DIExpression()), !dbg !5550
  %call = tail call fastcc %union.tree_node* @chrec_type(%union.tree_node* %to_add) #7, !dbg !5551
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5548, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5549, metadata !DIExpression()), !dbg !5550
  %cmp = icmp eq %union.tree_node* %to_add, null, !dbg !5552
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5554

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %to_add, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5555
  %bf.load = load i64, i64* %0, align 8, !dbg !5555
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5557
  %cmp1 = icmp eq i64 %bf.cast1, 146, !dbg !5557
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5558

if.then2:                                         ; preds = %if.end
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5559
  br label %cleanup, !dbg !5560

if.end3:                                          ; preds = %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5561
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !5561
  br i1 %tobool, label %if.end11, label %land.lhs.true, !dbg !5563

land.lhs.true:                                    ; preds = %if.end3
  %3 = load i32, i32* @dump_flags, align 4, !dbg !5564
  %and = and i32 %3, 8, !dbg !5565
  %tobool4 = icmp eq i32 %and, 0, !dbg !5565
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !5566

if.then5:                                         ; preds = %land.lhs.true
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !5567
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5569
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i32 %loop_nb) #6, !dbg !5570
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5571
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !5572
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5573
  tail call void @print_generic_expr(%struct._IO_FILE* %6, %union.tree_node* %chrec_before, i32 0) #6, !dbg !5574
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5575
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !5576
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5577
  tail call void @print_generic_expr(%struct._IO_FILE* %8, %union.tree_node* nonnull %to_add, i32 0) #6, !dbg !5578
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5579
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5580
  br label %if.end11, !dbg !5581

if.end11:                                         ; preds = %land.lhs.true, %if.end3, %if.then5
  %cmp12 = icmp eq i32 %code, 64, !dbg !5582
  br i1 %cmp12, label %if.then13, label %if.end22, !dbg !5584

if.then13:                                        ; preds = %if.end11
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5585
  %bf.load15 = load i64, i64* %10, align 8, !dbg !5585
  %bf.cast172 = and i64 %bf.load15, 65535, !dbg !5585
  %cmp18 = icmp eq i64 %bf.cast172, 9, !dbg !5585
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !5585

cond.true:                                        ; preds = %if.then13
  %call19 = tail call %union.tree_node* @build_real(%union.tree_node* %call, %struct.real_value* nonnull byval(%struct.real_value) align 8 @dconstm1) #6, !dbg !5586
  br label %cond.end, !dbg !5585

cond.false:                                       ; preds = %if.then13
  %call20 = tail call %union.tree_node* @build_int_cst_type(%union.tree_node* %call, i64 -1) #6, !dbg !5587
  br label %cond.end, !dbg !5585

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %call19, %cond.true ], [ %call20, %cond.false ], !dbg !5585
  %call21 = tail call %union.tree_node* @chrec_fold_multiply(%union.tree_node* %call, %union.tree_node* nonnull %to_add, %union.tree_node* %cond) #6, !dbg !5588
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !5546, metadata !DIExpression()), !dbg !5550
  br label %if.end22, !dbg !5589

if.end22:                                         ; preds = %cond.end, %if.end11
  %to_add.addr.0 = phi %union.tree_node* [ %call21, %cond.end ], [ %to_add, %if.end11 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %to_add.addr.0, metadata !5546, metadata !DIExpression()), !dbg !5550
  %call23 = tail call fastcc %union.tree_node* @add_to_evolution_1(i32 %loop_nb, %union.tree_node* %chrec_before, %union.tree_node* %to_add.addr.0, %union.gimple_statement_d* %at_stmt) #7, !dbg !5590
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !5549, metadata !DIExpression()), !dbg !5550
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5591
  %tobool24 = icmp eq %struct._IO_FILE* %11, null, !dbg !5591
  br i1 %tobool24, label %cleanup, label %land.lhs.true25, !dbg !5593

land.lhs.true25:                                  ; preds = %if.end22
  %12 = load i32, i32* @dump_flags, align 4, !dbg !5594
  %and26 = and i32 %12, 8, !dbg !5595
  %tobool27 = icmp eq i32 %and26, 0, !dbg !5595
  br i1 %tobool27, label %cleanup, label %if.then28, !dbg !5596

if.then28:                                        ; preds = %land.lhs.true25
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5597
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5599
  tail call void @print_generic_expr(%struct._IO_FILE* %13, %union.tree_node* %call23, i32 0) #6, !dbg !5600
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5601
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5602
  br label %cleanup, !dbg !5603

cleanup:                                          ; preds = %land.lhs.true25, %if.end22, %if.then28, %entry, %if.then2
  %retval.0 = phi %union.tree_node* [ %1, %if.then2 ], [ %chrec_before, %entry ], [ %call23, %if.then28 ], [ %call23, %land.lhs.true25 ], [ %call23, %if.end22 ], !dbg !5550
  ret %union.tree_node* %retval.0, !dbg !5604
}

declare dso_local %union.tree_node* @build_real(%union.tree_node*, %struct.real_value* byval(%struct.real_value) align 8) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst_type(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @add_to_evolution_1(i32 %loop_nb, %union.tree_node* %chrec_before, %union.tree_node* %to_add, %union.gimple_statement_d* %at_stmt) unnamed_addr #5 !dbg !5605 {
entry:
  call void @llvm.dbg.value(metadata i32 %loop_nb, metadata !5609, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_before, metadata !5610, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata %union.tree_node* %to_add, metadata !5611, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %at_stmt, metadata !5612, metadata !DIExpression()), !dbg !5622
  %call = tail call fastcc %struct.loop* @get_loop(i32 %loop_nb) #7, !dbg !5623
  call void @llvm.dbg.value(metadata %struct.loop* %call, metadata !5616, metadata !DIExpression()), !dbg !5622
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_before, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5624
  %bf.load = load i64, i64* %0, align 8, !dbg !5624
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5625
  %cond1 = icmp eq i64 %bf.cast2, 146, !dbg !5625
  br i1 %cond1, label %sw.bb, label %sw.default, !dbg !5625

sw.bb:                                            ; preds = %entry
  %call1 = tail call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %chrec_before) #7, !dbg !5626
  call void @llvm.dbg.value(metadata %struct.loop* %call1, metadata !5617, metadata !DIExpression()), !dbg !5622
  %cmp = icmp eq %struct.loop* %call1, %call, !dbg !5627
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5628

lor.lhs.false:                                    ; preds = %sw.bb
  %call2 = tail call zeroext i8 @flow_loop_nested_p(%struct.loop* %call1, %struct.loop* %call) #6, !dbg !5629
  %tobool = icmp eq i8 %call2, 0, !dbg !5629
  br i1 %tobool, label %if.else28, label %if.then, !dbg !5630

if.then:                                          ; preds = %lor.lhs.false, %sw.bb
  %call3 = tail call fastcc %union.tree_node* @chrec_type(%union.tree_node* %chrec_before) #7, !dbg !5631
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5613, metadata !DIExpression()), !dbg !5622
  br i1 %cmp, label %if.else, label %if.then6, !dbg !5632

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 %loop_nb, metadata !5618, metadata !DIExpression()), !dbg !5633
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_before, metadata !5614, metadata !DIExpression()), !dbg !5622
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5634
  %bf.load8 = load i64, i64* %1, align 8, !dbg !5634
  %bf.cast103 = and i64 %bf.load8, 65535, !dbg !5634
  %cmp11 = icmp eq i64 %bf.cast103, 9, !dbg !5634
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !5634

cond.true:                                        ; preds = %if.then6
  %call13 = tail call %union.tree_node* @build_real(%union.tree_node* %call3, %struct.real_value* nonnull byval(%struct.real_value) align 8 @dconst0) #6, !dbg !5637
  br label %if.end, !dbg !5634

cond.false:                                       ; preds = %if.then6
  %call14 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %call3, i64 0) #6, !dbg !5638
  br label %if.end, !dbg !5634

if.else:                                          ; preds = %if.then
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_before, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5639
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !5639
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !5639
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !5639
  %4 = load i64, i64* %low, align 8, !dbg !5639
  %conv16 = trunc i64 %4 to i32, !dbg !5639
  call void @llvm.dbg.value(metadata i32 %conv16, metadata !5618, metadata !DIExpression()), !dbg !5633
  %arrayidx19 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !5641
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx19, align 8, !dbg !5641
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5614, metadata !DIExpression()), !dbg !5622
  %arrayidx22 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !5642
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx22, align 8, !dbg !5642
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !5615, metadata !DIExpression()), !dbg !5622
  br label %if.end

if.end:                                           ; preds = %cond.true, %cond.false, %if.else
  %left.0 = phi %union.tree_node* [ %5, %if.else ], [ %chrec_before, %cond.false ], [ %chrec_before, %cond.true ], !dbg !5643
  %right.0 = phi %union.tree_node* [ %6, %if.else ], [ %call14, %cond.false ], [ %call13, %cond.true ], !dbg !5643
  %var.0 = phi i32 [ %conv16, %if.else ], [ %loop_nb, %cond.false ], [ %loop_nb, %cond.true ], !dbg !5643
  call void @llvm.dbg.value(metadata i32 %var.0, metadata !5618, metadata !DIExpression()), !dbg !5633
  call void @llvm.dbg.value(metadata %union.tree_node* %right.0, metadata !5615, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata %union.tree_node* %left.0, metadata !5614, metadata !DIExpression()), !dbg !5622
  %call23 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call3, %union.tree_node* %to_add, %union.gimple_statement_d* %at_stmt) #6, !dbg !5644
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !5611, metadata !DIExpression()), !dbg !5622
  %call24 = tail call %union.tree_node* @chrec_convert_rhs(%union.tree_node* %call3, %union.tree_node* %right.0, %union.gimple_statement_d* %at_stmt) #6, !dbg !5645
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !5615, metadata !DIExpression()), !dbg !5622
  %call25 = tail call fastcc %union.tree_node* @chrec_type(%union.tree_node* %call24) #7, !dbg !5646
  %call26 = tail call %union.tree_node* @chrec_fold_plus(%union.tree_node* %call25, %union.tree_node* %call24, %union.tree_node* %call23) #6, !dbg !5647
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !5615, metadata !DIExpression()), !dbg !5622
  %call27 = tail call fastcc %union.tree_node* @build_polynomial_chrec(i32 %var.0, %union.tree_node* %left.0, %union.tree_node* %call26) #7, !dbg !5648
  br label %cleanup

if.else28:                                        ; preds = %lor.lhs.false
  %call29 = tail call zeroext i8 @flow_loop_nested_p(%struct.loop* %call, %struct.loop* %call1) #6, !dbg !5649
  %tobool30 = icmp eq i8 %call29, 0, !dbg !5649
  br i1 %tobool30, label %cond.true31, label %cond.end33, !dbg !5649

cond.true31:                                      ; preds = %if.else28
  tail call void @fancy_abort(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 705, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5649
  br label %cond.end33, !dbg !5649

cond.end33:                                       ; preds = %if.else28, %cond.true31
  %operands36 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_before, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5651
  %arrayidx37 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands36, i64 1, !dbg !5651
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx37, align 8, !dbg !5651
  %call38 = tail call fastcc %union.tree_node* @add_to_evolution_1(i32 %loop_nb, %union.tree_node* %7, %union.tree_node* %to_add, %union.gimple_statement_d* %at_stmt) #7, !dbg !5652
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !5614, metadata !DIExpression()), !dbg !5622
  %arrayidx41 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands36, i64 2, !dbg !5653
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx41, align 8, !dbg !5653
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5615, metadata !DIExpression()), !dbg !5622
  %call42 = tail call fastcc %union.tree_node* @chrec_type(%union.tree_node* %call38) #7, !dbg !5654
  %call43 = tail call %union.tree_node* @chrec_convert_rhs(%union.tree_node* %call42, %union.tree_node* %8, %union.gimple_statement_d* %at_stmt) #6, !dbg !5655
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !5615, metadata !DIExpression()), !dbg !5622
  %9 = bitcast %union.tree_node** %operands36 to %struct.tree_int_cst**, !dbg !5656
  %10 = load %struct.tree_int_cst*, %struct.tree_int_cst** %9, align 8, !dbg !5656
  %low49 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %10, i64 0, i32 1, i32 0, !dbg !5656
  %11 = load i64, i64* %low49, align 8, !dbg !5656
  %conv50 = trunc i64 %11 to i32, !dbg !5656
  %call51 = tail call fastcc %union.tree_node* @build_polynomial_chrec(i32 %conv50, %union.tree_node* %call38, %union.tree_node* %call43) #7, !dbg !5657
  ret %union.tree_node* %call51, !dbg !5658

sw.default:                                       ; preds = %entry
  %12 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5659
  %cmp52 = icmp eq %union.tree_node* %12, %chrec_before, !dbg !5661
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !5662

if.then54:                                        ; preds = %sw.default
  br label %cleanup, !dbg !5663

if.end55:                                         ; preds = %sw.default
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_before, metadata !5614, metadata !DIExpression()), !dbg !5622
  %call56 = tail call fastcc %union.tree_node* @chrec_type(%union.tree_node* %chrec_before) #7, !dbg !5664
  %call57 = tail call %union.tree_node* @chrec_convert_rhs(%union.tree_node* %call56, %union.tree_node* %to_add, %union.gimple_statement_d* %at_stmt) #6, !dbg !5665
  call void @llvm.dbg.value(metadata %union.tree_node* %call57, metadata !5615, metadata !DIExpression()), !dbg !5622
  %call58 = tail call fastcc %union.tree_node* @build_polynomial_chrec(i32 %loop_nb, %union.tree_node* %chrec_before, %union.tree_node* %call57) #7, !dbg !5666
  br label %cleanup, !dbg !5667

cleanup:                                          ; preds = %if.end55, %if.then54, %if.end
  %retval.0 = phi %union.tree_node* [ %chrec_before, %if.then54 ], [ %call58, %if.end55 ], [ %call27, %if.end ], !dbg !5668
  ret %union.tree_node* %retval.0, !dbg !5658
}

declare dso_local %union.tree_node* @chrec_convert_rhs(%union.tree_node*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @build_polynomial_chrec(i32 %loop_num, %union.tree_node* %left, %union.tree_node* %right) unnamed_addr #0 !dbg !5669 {
entry:
  %val = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %loop_num, metadata !5673, metadata !DIExpression()), !dbg !5677
  call void @llvm.dbg.value(metadata %union.tree_node* %left, metadata !5674, metadata !DIExpression()), !dbg !5677
  call void @llvm.dbg.value(metadata %union.tree_node* %right, metadata !5675, metadata !DIExpression()), !dbg !5677
  call void @llvm.dbg.value(metadata i8* %val, metadata !5676, metadata !DIExpression(DW_OP_deref)), !dbg !5677
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %val) #8, !dbg !5678
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5679
  %cmp = icmp eq %union.tree_node* %0, %left, !dbg !5681
  %cmp1 = icmp eq %union.tree_node* %0, %right, !dbg !5682
  %or.cond = or i1 %cmp, %cmp1, !dbg !5683
  br i1 %or.cond, label %if.then, label %if.end, !dbg !5683

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !5684

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %val, metadata !5676, metadata !DIExpression(DW_OP_deref)), !dbg !5677
  %call = call fastcc zeroext i8 @no_evolution_in_loop_p(%union.tree_node* %left, i32 %loop_num, i8* nonnull %val) #7, !dbg !5685
  %tobool = icmp ne i8 %call, 0, !dbg !5685
  %1 = load i8, i8* %val, align 1, !dbg !5687
  call void @llvm.dbg.value(metadata i8 %1, metadata !5676, metadata !DIExpression()), !dbg !5677
  %tobool3 = icmp ne i8 %1, 0, !dbg !5687
  %or.cond1 = and i1 %tobool, %tobool3, !dbg !5688
  br i1 %or.cond1, label %if.end5, label %if.then4, !dbg !5688

if.then4:                                         ; preds = %if.end
  %2 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5689
  br label %cleanup, !dbg !5690

if.end5:                                          ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %right, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5691
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !5691
  %4 = load i64*, i64** %3, align 8, !dbg !5691
  %bf.load = load i64, i64* %4, align 8, !dbg !5691
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5691
  %cmp6 = icmp eq i64 %bf.cast2, 10, !dbg !5691
  br i1 %cmp6, label %cond.true, label %lor.lhs.false7, !dbg !5691

lor.lhs.false7:                                   ; preds = %if.end5
  %cmp14 = icmp eq i64 %bf.cast2, 12, !dbg !5691
  br i1 %cmp14, label %cond.true, label %cond.end, !dbg !5691

cond.true:                                        ; preds = %lor.lhs.false7, %if.end5
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), i32 143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5691
  br label %cond.end, !dbg !5691

cond.end:                                         ; preds = %lor.lhs.false7, %cond.true
  %type16 = getelementptr inbounds %union.tree_node, %union.tree_node* %left, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5692
  %5 = bitcast %union.tree_node** %type16 to i64**, !dbg !5692
  %6 = load i64*, i64** %5, align 8, !dbg !5692
  %bf.load18 = load i64, i64* %6, align 8, !dbg !5692
  %bf.cast204 = and i64 %bf.load18, 65535, !dbg !5692
  %cmp21 = icmp eq i64 %bf.cast204, 10, !dbg !5692
  %7 = bitcast i64* %6 to %union.tree_node*, !dbg !5692
  br i1 %cmp21, label %if.then30, label %lor.lhs.false22, !dbg !5692

lor.lhs.false22:                                  ; preds = %cond.end
  %cmp29 = icmp eq i64 %bf.cast204, 12, !dbg !5692
  br i1 %cmp29, label %if.then30, label %if.else, !dbg !5694

if.then30:                                        ; preds = %lor.lhs.false22, %cond.end
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !5695
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5695
  %cmp33 = icmp eq %union.tree_node* %8, %9, !dbg !5695
  br i1 %cmp33, label %if.end47, label %cond.true34, !dbg !5695

cond.true34:                                      ; preds = %if.then30
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), i32 147, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5695
  br label %if.end47, !dbg !5695

if.else:                                          ; preds = %lor.lhs.false22
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5696
  %cmp42 = icmp eq %union.tree_node* %10, %7, !dbg !5696
  br i1 %cmp42, label %if.end47, label %cond.true43, !dbg !5696

cond.true43:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), i32 149, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5696
  br label %if.end47, !dbg !5696

if.end47:                                         ; preds = %cond.true43, %if.else, %cond.true34, %if.then30
  %call48 = call fastcc zeroext i8 @chrec_zerop(%union.tree_node* %right) #7, !dbg !5697
  %tobool49 = icmp eq i8 %call48, 0, !dbg !5697
  br i1 %tobool49, label %if.end51, label %cleanup, !dbg !5699

if.end51:                                         ; preds = %if.end47
  %11 = load %union.tree_node*, %union.tree_node** %type16, align 8, !dbg !5700
  %conv = zext i32 %loop_num to i64, !dbg !5700
  %call54 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv) #6, !dbg !5700
  %call55 = call %union.tree_node* @build3_stat(i32 146, %union.tree_node* %11, %union.tree_node* %call54, %union.tree_node* %left, %union.tree_node* %right) #6, !dbg !5700
  br label %cleanup, !dbg !5701

cleanup:                                          ; preds = %if.end47, %if.end51, %if.then4, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ %call55, %if.end51 ], [ %2, %if.then4 ], [ %left, %if.end47 ], !dbg !5677
  call void @llvm.dbg.value(metadata i8* %val, metadata !5676, metadata !DIExpression(DW_OP_deref)), !dbg !5677
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %val) #8, !dbg !5702
  ret %union.tree_node* %retval.0, !dbg !5702
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @chrec_zerop(%union.tree_node* %chrec) unnamed_addr #0 !dbg !5703 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !5705, metadata !DIExpression()), !dbg !5706
  %cmp = icmp eq %union.tree_node* %chrec, null, !dbg !5707
  br i1 %cmp, label %return, label %if.end, !dbg !5709

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5710
  %bf.load = load i64, i64* %0, align 8, !dbg !5710
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5712
  %cmp1 = icmp eq i64 %bf.cast1, 23, !dbg !5712
  br i1 %cmp1, label %if.then2, label %return, !dbg !5713

if.then2:                                         ; preds = %if.end
  %call = tail call i32 @integer_zerop(%union.tree_node* nonnull %chrec) #6, !dbg !5714
  %conv = trunc i32 %call to i8, !dbg !5714
  br label %return, !dbg !5715

return:                                           ; preds = %if.end, %entry, %if.then2
  %retval.0 = phi i8 [ %conv, %if.then2 ], [ 0, %entry ], [ 0, %if.end ], !dbg !5706
  ret i8 %retval.0, !dbg !5716
}

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5717 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5719, metadata !DIExpression()), !dbg !5724
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5725
  call void @llvm.dbg.value(metadata i32 %call, metadata !5720, metadata !DIExpression()), !dbg !5724
  switch i32 %call, label %if.else14 [
    i32 8, label %if.then3
    i32 6, label %if.else
    i32 1, label %if.then13
  ], !dbg !5726

if.then3:                                         ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #7, !dbg !5727
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5721, metadata !DIExpression()), !dbg !5729
  br label %cleanup, !dbg !5730

if.else:                                          ; preds = %entry
  %call5 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5731
  %cond = icmp eq i32 %call5, 66, !dbg !5732
  br i1 %cond, label %sw.bb, label %sw.default, !dbg !5732

sw.bb:                                            ; preds = %if.else
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5733
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5733
  %0 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !5733
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5721, metadata !DIExpression()), !dbg !5729
  br label %cleanup, !dbg !5735

sw.default:                                       ; preds = %if.else
  %call8 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !5736
  %type10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5736
  %1 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !5736
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5721, metadata !DIExpression()), !dbg !5729
  br label %cleanup, !dbg !5737

if.then13:                                        ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !5738
  br label %cleanup, !dbg !5740

if.else14:                                        ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5741
  br label %cleanup, !dbg !5742

cleanup:                                          ; preds = %if.then3, %sw.default, %sw.bb, %if.else14, %if.then13
  %retval.0 = phi %union.tree_node* [ %2, %if.then13 ], [ %3, %if.else14 ], [ %call4, %if.then3 ], [ %1, %sw.default ], [ %0, %sw.bb ], !dbg !5743
  ret %union.tree_node* %retval.0, !dbg !5744
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5745 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5747, metadata !DIExpression()), !dbg !5750
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !5751
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5748, metadata !DIExpression()), !dbg !5750
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5752
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !5752
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !5752
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !5753
  %2 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !5753
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !5753
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !5754
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !5754
  ret %union.tree_node* %4, !dbg !5755
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5756 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5758, metadata !DIExpression()), !dbg !5759
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !5760
  ret %union.tree_node* %call, !dbg !5761
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @instantiate_scev_name(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) unnamed_addr #5 !dbg !5762 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiate_below, metadata !5764, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.value(metadata %struct.loop* %evolution_loop, metadata !5765, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !5766, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.value(metadata i8 %fold_conversions, metadata !5767, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.value(metadata %struct.htab* %cache, metadata !5768, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.value(metadata i32 %size_expr, metadata !5769, metadata !DIExpression()), !dbg !5773
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5774
  %0 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5774
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !5774
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %1) #7, !dbg !5775
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !5772, metadata !DIExpression()), !dbg !5773
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !5776
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !5778

lor.lhs.false:                                    ; preds = %entry
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !5779
  %2 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5779
  %call1 = tail call fastcc i32 @loop_depth(%struct.loop* %2) #7, !dbg !5780
  %cmp = icmp eq i32 %call1, 0, !dbg !5781
  br i1 %cmp, label %cleanup, label %lor.lhs.false2, !dbg !5782

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %call3 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %instantiate_below, %struct.basic_block_def* nonnull %call) #6, !dbg !5783
  %tobool4 = icmp eq i8 %call3, 0, !dbg !5783
  br i1 %tobool4, label %if.end, label %cleanup, !dbg !5784

if.end:                                           ; preds = %lor.lhs.false2
  %call5 = tail call fastcc %union.tree_node* @get_instantiated_value(%struct.htab* %cache, %struct.basic_block_def* %instantiate_below, %union.tree_node* %chrec) #7, !dbg !5785
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5770, metadata !DIExpression()), !dbg !5773
  %tobool6 = icmp eq %union.tree_node* %call5, null, !dbg !5786
  br i1 %tobool6, label %if.end8, label %cleanup, !dbg !5788

if.end8:                                          ; preds = %if.end
  %3 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5789
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5770, metadata !DIExpression()), !dbg !5773
  tail call fastcc void @set_instantiated_value(%struct.htab* %cache, %struct.basic_block_def* %instantiate_below, %union.tree_node* %chrec, %union.tree_node* %3) #7, !dbg !5790
  %4 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5791
  %call10 = tail call %struct.loop* @find_common_loop(%struct.loop* %evolution_loop, %struct.loop* %4) #6, !dbg !5792
  call void @llvm.dbg.value(metadata %struct.loop* %call10, metadata !5771, metadata !DIExpression()), !dbg !5773
  %call11 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %call10, %union.tree_node* %chrec) #7, !dbg !5793
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !5770, metadata !DIExpression()), !dbg !5773
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5794
  %bf.load = load i64, i64* %5, align 8, !dbg !5794
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5796
  %cmp12 = icmp eq i64 %bf.cast1, 141, !dbg !5796
  br i1 %cmp12, label %land.lhs.true, label %if.else43, !dbg !5797

land.lhs.true:                                    ; preds = %if.end8
  %def_stmt15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5798
  %6 = bitcast %union.tree_node** %def_stmt15 to %union.gimple_statement_d**, !dbg !5798
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %6, align 8, !dbg !5798
  %call16 = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %7) #7, !dbg !5799
  %cmp17 = icmp eq %struct.loop* %call16, null, !dbg !5800
  br i1 %cmp17, label %if.then27, label %lor.lhs.false19, !dbg !5801

lor.lhs.false19:                                  ; preds = %land.lhs.true
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %6, align 8, !dbg !5802
  %call22 = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %8) #7, !dbg !5803
  %call23 = tail call fastcc i32 @loop_depth(%struct.loop* %call22) #7, !dbg !5804
  %call24 = tail call fastcc i32 @loop_depth(%struct.loop* %call10) #7, !dbg !5805
  %cmp25 = icmp ugt i32 %call23, %call24, !dbg !5806
  br i1 %cmp25, label %if.then27, label %if.else43, !dbg !5807

if.then27:                                        ; preds = %lor.lhs.false19, %land.lhs.true
  %cmp28 = icmp eq %union.tree_node* %call11, %chrec, !dbg !5808
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !5811

if.then30:                                        ; preds = %if.then27
  %call31 = tail call fastcc %union.tree_node* @loop_closed_phi_def(%union.tree_node* %chrec) #7, !dbg !5812
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !5770, metadata !DIExpression()), !dbg !5773
  br label %if.end32, !dbg !5813

if.end32:                                         ; preds = %if.then27, %if.then30
  %res.0 = phi %union.tree_node* [ %call31, %if.then30 ], [ %chrec, %if.then27 ], !dbg !5814
  call void @llvm.dbg.value(metadata %union.tree_node* %res.0, metadata !5770, metadata !DIExpression()), !dbg !5773
  %cmp33 = icmp eq %union.tree_node* %res.0, null, !dbg !5815
  br i1 %cmp33, label %if.then41, label %lor.lhs.false35, !dbg !5817

lor.lhs.false35:                                  ; preds = %if.end32
  %def_stmt37 = getelementptr inbounds %union.tree_node, %union.tree_node* %res.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5818
  %9 = bitcast %union.tree_node** %def_stmt37 to %union.gimple_statement_d**, !dbg !5818
  %10 = load %union.gimple_statement_d*, %union.gimple_statement_d** %9, align 8, !dbg !5818
  %call38 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %10) #7, !dbg !5819
  %call39 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %instantiate_below, %struct.basic_block_def* %call38) #6, !dbg !5820
  %tobool40 = icmp eq i8 %call39, 0, !dbg !5820
  br i1 %tobool40, label %if.then41, label %if.end49, !dbg !5821

if.then41:                                        ; preds = %lor.lhs.false35, %if.end32
  %11 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5822
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !5770, metadata !DIExpression()), !dbg !5773
  br label %if.end49, !dbg !5823

if.else43:                                        ; preds = %lor.lhs.false19, %if.end8
  %12 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5824
  %cmp44 = icmp eq %union.tree_node* %call11, %12, !dbg !5826
  br i1 %cmp44, label %if.end49, label %if.then46, !dbg !5827

if.then46:                                        ; preds = %if.else43
  %call47 = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %call11, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !5828
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !5770, metadata !DIExpression()), !dbg !5773
  br label %if.end49, !dbg !5829

if.end49:                                         ; preds = %lor.lhs.false35, %if.else43, %if.then46, %if.then41
  %res.3 = phi %union.tree_node* [ %11, %if.then41 ], [ %res.0, %lor.lhs.false35 ], [ %call47, %if.then46 ], [ %call11, %if.else43 ], !dbg !5830
  call void @llvm.dbg.value(metadata %union.tree_node* %res.3, metadata !5770, metadata !DIExpression()), !dbg !5773
  tail call fastcc void @set_instantiated_value(%struct.htab* %cache, %struct.basic_block_def* %instantiate_below, %union.tree_node* %chrec, %union.tree_node* %res.3) #7, !dbg !5831
  br label %cleanup, !dbg !5832

cleanup:                                          ; preds = %if.end, %lor.lhs.false2, %entry, %lor.lhs.false, %if.end49
  %retval.0 = phi %union.tree_node* [ %res.3, %if.end49 ], [ %chrec, %lor.lhs.false2 ], [ %chrec, %lor.lhs.false ], [ %chrec, %entry ], [ %call5, %if.end ], !dbg !5773
  ret %union.tree_node* %retval.0, !dbg !5833
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @instantiate_scev_poly(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) unnamed_addr #5 !dbg !5834 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiate_below, metadata !5836, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.value(metadata %struct.loop* %evolution_loop, metadata !5837, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !5838, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.value(metadata i8 %fold_conversions, metadata !5839, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.value(metadata %struct.htab* %cache, metadata !5840, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.value(metadata i32 %size_expr, metadata !5841, metadata !DIExpression()), !dbg !5847
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5848
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !5848
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5848
  %call = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %0, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !5849
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5843, metadata !DIExpression()), !dbg !5847
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5850
  %cmp = icmp eq %union.tree_node* %call, %1, !dbg !5852
  br i1 %cmp, label %if.then, label %if.end, !dbg !5853

if.then:                                          ; preds = %entry
  br label %cleanup52, !dbg !5854

if.end:                                           ; preds = %entry
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !5855
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !5855
  %call4 = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %2, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !5856
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5842, metadata !DIExpression()), !dbg !5847
  %3 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5857
  %cmp5 = icmp eq %union.tree_node* %call4, %3, !dbg !5859
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5860

if.then6:                                         ; preds = %if.end
  br label %cleanup52, !dbg !5861

if.end7:                                          ; preds = %if.end
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5862
  %cmp11 = icmp eq %union.tree_node* %4, %call, !dbg !5863
  br i1 %cmp11, label %lor.lhs.false, label %if.then16, !dbg !5864

lor.lhs.false:                                    ; preds = %if.end7
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !5865
  %cmp15 = icmp eq %union.tree_node* %5, %call4, !dbg !5866
  br i1 %cmp15, label %if.end51, label %if.then16, !dbg !5867

if.then16:                                        ; preds = %lor.lhs.false, %if.end7
  %6 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !5868
  %7 = load %struct.tree_int_cst*, %struct.tree_int_cst** %6, align 8, !dbg !5868
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %7, i64 0, i32 1, i32 0, !dbg !5868
  %8 = load i64, i64* %low, align 8, !dbg !5868
  %conv = trunc i64 %8 to i32, !dbg !5868
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5844, metadata !DIExpression()), !dbg !5869
  %call21 = tail call fastcc zeroext i8 @tree_is_chrec(%union.tree_node* %call) #7, !dbg !5870
  %tobool = icmp eq i8 %call21, 0, !dbg !5870
  br i1 %tobool, label %lor.lhs.false32, label %land.lhs.true, !dbg !5872

land.lhs.true:                                    ; preds = %if.then16
  %operands24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5873
  %9 = bitcast %union.tree_node** %operands24 to %struct.tree_int_cst**, !dbg !5873
  %10 = load %struct.tree_int_cst*, %struct.tree_int_cst** %9, align 8, !dbg !5873
  %low28 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %10, i64 0, i32 1, i32 0, !dbg !5873
  %11 = load i64, i64* %low28, align 8, !dbg !5873
  %conv29 = and i64 %8, 4294967295, !dbg !5874
  %cmp30 = icmp ugt i64 %11, %conv29, !dbg !5875
  br i1 %cmp30, label %if.then46, label %lor.lhs.false32, !dbg !5876

lor.lhs.false32:                                  ; preds = %if.then16, %land.lhs.true
  %call33 = tail call fastcc zeroext i8 @tree_is_chrec(%union.tree_node* %call4) #7, !dbg !5877
  %tobool35 = icmp eq i8 %call33, 0, !dbg !5877
  br i1 %tobool35, label %if.end47, label %land.lhs.true36, !dbg !5878

land.lhs.true36:                                  ; preds = %lor.lhs.false32
  %operands38 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5879
  %12 = bitcast %union.tree_node** %operands38 to %struct.tree_int_cst**, !dbg !5879
  %13 = load %struct.tree_int_cst*, %struct.tree_int_cst** %12, align 8, !dbg !5879
  %low42 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %13, i64 0, i32 1, i32 0, !dbg !5879
  %14 = load i64, i64* %low42, align 8, !dbg !5879
  %conv43 = and i64 %8, 4294967295, !dbg !5880
  %cmp44 = icmp ugt i64 %14, %conv43, !dbg !5881
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !5882

if.then46:                                        ; preds = %land.lhs.true36, %land.lhs.true
  %15 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5883
  br label %cleanup, !dbg !5884

if.end47:                                         ; preds = %lor.lhs.false32, %land.lhs.true36
  %call48 = tail call fastcc %union.tree_node* @chrec_type(%union.tree_node* %call) #7, !dbg !5885
  %call49 = tail call %union.tree_node* @chrec_convert_rhs(%union.tree_node* %call48, %union.tree_node* %call4, %union.gimple_statement_d* null) #6, !dbg !5886
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !5842, metadata !DIExpression()), !dbg !5847
  %call50 = tail call fastcc %union.tree_node* @build_polynomial_chrec(i32 %conv, %union.tree_node* %call, %union.tree_node* %call49) #7, !dbg !5887
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !5838, metadata !DIExpression()), !dbg !5847
  br label %cleanup, !dbg !5888

cleanup:                                          ; preds = %if.end47, %if.then46
  %chrec.addr.0 = phi %union.tree_node* [ %chrec, %if.then46 ], [ %call50, %if.end47 ]
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then46 ], [ true, %if.end47 ]
  %retval.0 = phi %union.tree_node* [ %15, %if.then46 ], [ undef, %if.end47 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.addr.0, metadata !5838, metadata !DIExpression()), !dbg !5847
  br i1 %cleanup.dest.slot.0, label %if.end51, label %cleanup52

if.end51:                                         ; preds = %lor.lhs.false, %cleanup
  %chrec.addr.1 = phi %union.tree_node* [ %chrec, %lor.lhs.false ], [ %chrec.addr.0, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.addr.1, metadata !5838, metadata !DIExpression()), !dbg !5847
  br label %cleanup52, !dbg !5889

cleanup52:                                        ; preds = %cleanup, %if.end51, %if.then6, %if.then
  %retval.1 = phi %union.tree_node* [ %call, %if.then ], [ %call4, %if.then6 ], [ %retval.0, %cleanup ], [ %chrec.addr.1, %if.end51 ], !dbg !5847
  ret %union.tree_node* %retval.1, !dbg !5890
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @instantiate_scev_binary(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i32 %code, %union.tree_node* %type, %union.tree_node* %c0, %union.tree_node* %c1, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) unnamed_addr #5 !dbg !5891 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiate_below, metadata !5895, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata %struct.loop* %evolution_loop, metadata !5896, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !5897, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 %code, metadata !5898, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5899, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata %union.tree_node* %c0, metadata !5900, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata %union.tree_node* %c1, metadata !5901, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i8 %fold_conversions, metadata !5902, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata %struct.htab* %cache, metadata !5903, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 %size_expr, metadata !5904, metadata !DIExpression()), !dbg !5907
  %call = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %c0, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !5908
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5906, metadata !DIExpression()), !dbg !5907
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5909
  %cmp = icmp eq %union.tree_node* %call, %0, !dbg !5911
  br i1 %cmp, label %if.then, label %if.end, !dbg !5912

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !5913

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %c1, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !5914
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5905, metadata !DIExpression()), !dbg !5907
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5915
  %cmp2 = icmp eq %union.tree_node* %call1, %1, !dbg !5917
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5918

if.then3:                                         ; preds = %if.end
  br label %cleanup, !dbg !5919

if.end4:                                          ; preds = %if.end
  %cmp5 = icmp ne %union.tree_node* %call, %c0, !dbg !5920
  %cmp6 = icmp ne %union.tree_node* %call1, %c1, !dbg !5922
  %or.cond = or i1 %cmp5, %cmp6, !dbg !5923
  br i1 %or.cond, label %if.then7, label %if.end15, !dbg !5923

if.then7:                                         ; preds = %if.end4
  %call8 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call, %union.gimple_statement_d* null) #6, !dbg !5924
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !5906, metadata !DIExpression()), !dbg !5907
  %call9 = tail call %union.tree_node* @chrec_convert_rhs(%union.tree_node* %type, %union.tree_node* %call1, %union.gimple_statement_d* null) #6, !dbg !5926
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5905, metadata !DIExpression()), !dbg !5907
  switch i32 %code, label %sw.default [
    i32 66, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb11
    i32 65, label %sw.bb13
  ], !dbg !5927

sw.bb:                                            ; preds = %if.then7, %if.then7
  %call10 = tail call %union.tree_node* @chrec_fold_plus(%union.tree_node* %type, %union.tree_node* %call8, %union.tree_node* %call9) #6, !dbg !5928
  br label %cleanup, !dbg !5930

sw.bb11:                                          ; preds = %if.then7
  %call12 = tail call %union.tree_node* @chrec_fold_minus(%union.tree_node* %type, %union.tree_node* %call8, %union.tree_node* %call9) #6, !dbg !5931
  br label %cleanup, !dbg !5932

sw.bb13:                                          ; preds = %if.then7
  %call14 = tail call %union.tree_node* @chrec_fold_multiply(%union.tree_node* %type, %union.tree_node* %call8, %union.tree_node* %call9) #6, !dbg !5933
  br label %cleanup, !dbg !5934

sw.default:                                       ; preds = %if.then7
  tail call void @fancy_abort(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 2316, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5935
  br label %if.end15, !dbg !5936

if.end15:                                         ; preds = %if.end4, %sw.default
  %tobool = icmp eq %union.tree_node* %chrec, null, !dbg !5937
  br i1 %tobool, label %cond.false, label %cleanup, !dbg !5937

cond.false:                                       ; preds = %if.end15
  %call16 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %code, %union.tree_node* %type, %union.tree_node* %c0, %union.tree_node* %c1) #6, !dbg !5938
  br label %cleanup, !dbg !5937

cleanup:                                          ; preds = %if.end15, %cond.false, %sw.bb13, %sw.bb11, %sw.bb, %if.then3, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call1, %if.then3 ], [ %call14, %sw.bb13 ], [ %call12, %sw.bb11 ], [ %call10, %sw.bb ], [ %call16, %cond.false ], [ %chrec, %if.end15 ], !dbg !5907
  ret %union.tree_node* %retval.0, !dbg !5939
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @instantiate_scev_convert(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, %union.tree_node* %type, %union.tree_node* %op, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) unnamed_addr #5 !dbg !5940 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiate_below, metadata !5944, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata %struct.loop* %evolution_loop, metadata !5945, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !5946, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5947, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !5948, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata i8 %fold_conversions, metadata !5949, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata %struct.htab* %cache, metadata !5950, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata i32 %size_expr, metadata !5951, metadata !DIExpression()), !dbg !5956
  %call = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %op, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !5957
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5952, metadata !DIExpression()), !dbg !5956
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5958
  %cmp = icmp eq %union.tree_node* %call, %0, !dbg !5960
  br i1 %cmp, label %if.then, label %if.end, !dbg !5961

if.then:                                          ; preds = %entry
  br label %cleanup16, !dbg !5962

if.end:                                           ; preds = %entry
  %tobool = icmp eq i8 %fold_conversions, 0, !dbg !5963
  br i1 %tobool, label %if.end6, label %if.then1, !dbg !5964

if.then1:                                         ; preds = %if.end
  %call2 = tail call %union.tree_node* @chrec_convert_aggressive(%union.tree_node* %type, %union.tree_node* %call) #6, !dbg !5965
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !5953, metadata !DIExpression()), !dbg !5966
  %tobool3 = icmp eq %union.tree_node* %call2, null, !dbg !5967
  br i1 %tobool3, label %if.end6, label %cleanup16

if.end6:                                          ; preds = %if.end, %if.then1
  %tobool7 = icmp ne %union.tree_node* %chrec, null, !dbg !5969
  %cmp8 = icmp eq %union.tree_node* %call, %op, !dbg !5971
  %or.cond = and i1 %tobool7, %cmp8, !dbg !5972
  br i1 %or.cond, label %cleanup16, label %if.end10, !dbg !5972

if.end10:                                         ; preds = %if.end6
  br i1 %tobool, label %if.end14, label %if.then12, !dbg !5973

if.then12:                                        ; preds = %if.end10
  %call13 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %call) #6, !dbg !5974
  br label %cleanup16, !dbg !5976

if.end14:                                         ; preds = %if.end10
  %call15 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call, %union.gimple_statement_d* null) #6, !dbg !5977
  br label %cleanup16, !dbg !5978

cleanup16:                                        ; preds = %if.end6, %if.then1, %if.end14, %if.then12, %if.then
  %retval.1 = phi %union.tree_node* [ %call, %if.then ], [ %call2, %if.then1 ], [ %call13, %if.then12 ], [ %call15, %if.end14 ], [ %chrec, %if.end6 ], !dbg !5956
  ret %union.tree_node* %retval.1, !dbg !5979
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @instantiate_scev_not(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i32 %code, %union.tree_node* %type, %union.tree_node* %op, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) unnamed_addr #5 !dbg !5980 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiate_below, metadata !5984, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata %struct.loop* %evolution_loop, metadata !5985, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !5986, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %code, metadata !5987, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5988, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !5989, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8 %fold_conversions, metadata !5990, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata %struct.htab* %cache, metadata !5991, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %size_expr, metadata !5992, metadata !DIExpression()), !dbg !5994
  %call = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %op, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !5995
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5993, metadata !DIExpression()), !dbg !5994
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5996
  %cmp = icmp eq %union.tree_node* %call, %0, !dbg !5998
  br i1 %cmp, label %if.then, label %if.end, !dbg !5999

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !6000

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq %union.tree_node* %call, %op, !dbg !6001
  br i1 %cmp1, label %if.end9, label %if.then2, !dbg !6003

if.then2:                                         ; preds = %if.end
  %call3 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %type, %union.tree_node* %call, %union.gimple_statement_d* null) #6, !dbg !6004
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5993, metadata !DIExpression()), !dbg !5994
  switch i32 %code, label %sw.default [
    i32 90, label %sw.bb
    i32 79, label %sw.bb6
  ], !dbg !6006

sw.bb:                                            ; preds = %if.then2
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !6007
  %call4 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %1) #6, !dbg !6007
  %call5 = tail call %union.tree_node* @chrec_fold_minus(%union.tree_node* %type, %union.tree_node* %call4, %union.tree_node* %call3) #6, !dbg !6009
  br label %cleanup, !dbg !6010

sw.bb6:                                           ; preds = %if.then2
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !6011
  %call7 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %2) #6, !dbg !6011
  %call8 = tail call %union.tree_node* @chrec_fold_multiply(%union.tree_node* %type, %union.tree_node* %call7, %union.tree_node* %call3) #6, !dbg !6012
  br label %cleanup, !dbg !6013

sw.default:                                       ; preds = %if.then2
  tail call void @fancy_abort(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 2412, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !6014
  br label %if.end9, !dbg !6015

if.end9:                                          ; preds = %if.end, %sw.default
  %op0.0 = phi %union.tree_node* [ %call3, %sw.default ], [ %op, %if.end ], !dbg !5994
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0, metadata !5993, metadata !DIExpression()), !dbg !5994
  %tobool = icmp eq %union.tree_node* %chrec, null, !dbg !6016
  br i1 %tobool, label %cond.false, label %cleanup, !dbg !6016

cond.false:                                       ; preds = %if.end9
  %call10 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 %code, %union.tree_node* %type, %union.tree_node* %op0.0) #6, !dbg !6017
  br label %cleanup, !dbg !6016

cleanup:                                          ; preds = %if.end9, %cond.false, %sw.bb6, %sw.bb, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call8, %sw.bb6 ], [ %call5, %sw.bb ], [ %call10, %cond.false ], [ %chrec, %if.end9 ], !dbg !5994
  ret %union.tree_node* %retval.0, !dbg !6018
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @instantiate_scev_3(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) unnamed_addr #5 !dbg !6019 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiate_below, metadata !6021, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata %struct.loop* %evolution_loop, metadata !6022, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !6023, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata i8 %fold_conversions, metadata !6024, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata %struct.htab* %cache, metadata !6025, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata i32 %size_expr, metadata !6026, metadata !DIExpression()), !dbg !6030
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6031
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6031
  %call = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %0, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !6032
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6029, metadata !DIExpression()), !dbg !6030
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !6033
  %cmp = icmp eq %union.tree_node* %call, %1, !dbg !6035
  br i1 %cmp, label %if.then, label %if.end, !dbg !6036

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !6037

if.end:                                           ; preds = %entry
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6038
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !6038
  %call4 = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %2, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !6039
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6027, metadata !DIExpression()), !dbg !6030
  %3 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !6040
  %cmp5 = icmp eq %union.tree_node* %call4, %3, !dbg !6042
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6043

if.then6:                                         ; preds = %if.end
  br label %cleanup, !dbg !6044

if.end7:                                          ; preds = %if.end
  %arrayidx10 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !6045
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx10, align 8, !dbg !6045
  %call11 = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %4, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !6046
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !6028, metadata !DIExpression()), !dbg !6030
  %5 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !6047
  %cmp12 = icmp eq %union.tree_node* %call11, %5, !dbg !6049
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !6050

if.then13:                                        ; preds = %if.end7
  br label %cleanup, !dbg !6051

if.end14:                                         ; preds = %if.end7
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6052
  %cmp18 = icmp eq %union.tree_node* %call, %6, !dbg !6054
  br i1 %cmp18, label %land.lhs.true, label %if.end29, !dbg !6055

land.lhs.true:                                    ; preds = %if.end14
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !6056
  %cmp22 = icmp eq %union.tree_node* %call4, %7, !dbg !6057
  br i1 %cmp22, label %land.lhs.true23, label %if.end29, !dbg !6058

land.lhs.true23:                                  ; preds = %land.lhs.true
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx10, align 8, !dbg !6059
  %cmp27 = icmp eq %union.tree_node* %call11, %8, !dbg !6060
  br i1 %cmp27, label %cleanup, label %if.end29, !dbg !6061

if.end29:                                         ; preds = %land.lhs.true23, %land.lhs.true, %if.end14
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6062
  %bf.load = load i64, i64* %9, align 8, !dbg !6062
  %10 = trunc i64 %bf.load to i32, !dbg !6062
  %bf.cast = and i32 %10, 65535, !dbg !6062
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6062
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6062
  %call30 = tail call %union.tree_node* @fold_build3_stat_loc(i32 0, i32 %bf.cast, %union.tree_node* %11, %union.tree_node* %call, %union.tree_node* %call4, %union.tree_node* %call11) #6, !dbg !6062
  br label %cleanup, !dbg !6063

cleanup:                                          ; preds = %land.lhs.true23, %if.end29, %if.then13, %if.then6, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call4, %if.then6 ], [ %call11, %if.then13 ], [ %call30, %if.end29 ], [ %chrec, %land.lhs.true23 ], !dbg !6030
  ret %union.tree_node* %retval.0, !dbg !6064
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @instantiate_scev_2(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) unnamed_addr #5 !dbg !6065 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiate_below, metadata !6067, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.value(metadata %struct.loop* %evolution_loop, metadata !6068, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !6069, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.value(metadata i8 %fold_conversions, metadata !6070, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.value(metadata %struct.htab* %cache, metadata !6071, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.value(metadata i32 %size_expr, metadata !6072, metadata !DIExpression()), !dbg !6075
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6076
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6076
  %call = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %0, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !6077
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6074, metadata !DIExpression()), !dbg !6075
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !6078
  %cmp = icmp eq %union.tree_node* %call, %1, !dbg !6080
  br i1 %cmp, label %if.then, label %if.end, !dbg !6081

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !6082

if.end:                                           ; preds = %entry
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6083
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !6083
  %call4 = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %2, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !6084
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6073, metadata !DIExpression()), !dbg !6075
  %3 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !6085
  %cmp5 = icmp eq %union.tree_node* %call4, %3, !dbg !6087
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6088

if.then6:                                         ; preds = %if.end
  br label %cleanup, !dbg !6089

if.end7:                                          ; preds = %if.end
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6090
  %cmp11 = icmp eq %union.tree_node* %call, %4, !dbg !6092
  br i1 %cmp11, label %land.lhs.true, label %if.end17, !dbg !6093

land.lhs.true:                                    ; preds = %if.end7
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !6094
  %cmp15 = icmp eq %union.tree_node* %call4, %5, !dbg !6095
  br i1 %cmp15, label %cleanup, label %if.end17, !dbg !6096

if.end17:                                         ; preds = %land.lhs.true, %if.end7
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6097
  %bf.load = load i64, i64* %6, align 8, !dbg !6097
  %7 = trunc i64 %bf.load to i32, !dbg !6097
  %bf.cast = and i32 %7, 65535, !dbg !6097
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6097
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6097
  %call18 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %bf.cast, %union.tree_node* %8, %union.tree_node* %call, %union.tree_node* %call4) #6, !dbg !6097
  br label %cleanup, !dbg !6098

cleanup:                                          ; preds = %land.lhs.true, %if.end17, %if.then6, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call4, %if.then6 ], [ %call18, %if.end17 ], [ %chrec, %land.lhs.true ], !dbg !6075
  ret %union.tree_node* %retval.0, !dbg !6099
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @instantiate_scev_1(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %chrec, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) unnamed_addr #5 !dbg !6100 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiate_below, metadata !6102, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.value(metadata %struct.loop* %evolution_loop, metadata !6103, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !6104, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.value(metadata i8 %fold_conversions, metadata !6105, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.value(metadata %struct.htab* %cache, metadata !6106, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.value(metadata i32 %size_expr, metadata !6107, metadata !DIExpression()), !dbg !6109
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6110
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6110
  %call = tail call fastcc %union.tree_node* @instantiate_scev_r(%struct.basic_block_def* %instantiate_below, %struct.loop* %evolution_loop, %union.tree_node* %0, i8 zeroext %fold_conversions, %struct.htab* %cache, i32 %size_expr) #7, !dbg !6111
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6108, metadata !DIExpression()), !dbg !6109
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !6112
  %cmp = icmp eq %union.tree_node* %call, %1, !dbg !6114
  br i1 %cmp, label %if.then, label %if.end, !dbg !6115

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !6116

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6117
  %cmp4 = icmp eq %union.tree_node* %call, %2, !dbg !6119
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !6120

if.end6:                                          ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6121
  %bf.load = load i64, i64* %3, align 8, !dbg !6121
  %4 = trunc i64 %bf.load to i32, !dbg !6121
  %bf.cast = and i32 %4, 65535, !dbg !6121
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6121
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6121
  %call7 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 %bf.cast, %union.tree_node* %5, %union.tree_node* %call) #6, !dbg !6121
  br label %cleanup, !dbg !6122

cleanup:                                          ; preds = %if.end, %if.end6, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call7, %if.end6 ], [ %chrec, %if.end ], !dbg !6109
  ret %union.tree_node* %retval.0, !dbg !6123
}

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_instantiated_value(%struct.htab* %cache, %struct.basic_block_def* %instantiated_below, %union.tree_node* %version) unnamed_addr #5 !dbg !6124 {
entry:
  %pattern = alloca %struct.scev_info_str, align 8
  call void @llvm.dbg.value(metadata %struct.htab* %cache, metadata !6128, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiated_below, metadata !6129, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.value(metadata %union.tree_node* %version, metadata !6130, metadata !DIExpression()), !dbg !6133
  %0 = bitcast %struct.scev_info_str* %pattern to i8*, !dbg !6134
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6134
  %var = getelementptr inbounds %struct.scev_info_str, %struct.scev_info_str* %pattern, i64 0, i32 1, !dbg !6135
  store %union.tree_node* %version, %union.tree_node** %var, align 8, !dbg !6136
  %instantiated_below1 = getelementptr inbounds %struct.scev_info_str, %struct.scev_info_str* %pattern, i64 0, i32 0, !dbg !6137
  store %struct.basic_block_def* %instantiated_below, %struct.basic_block_def** %instantiated_below1, align 8, !dbg !6138
  %call = call i8* @htab_find(%struct.htab* %cache, i8* nonnull %0) #6, !dbg !6139
  call void @llvm.dbg.value(metadata i8* %call, metadata !6131, metadata !DIExpression()), !dbg !6133
  %tobool = icmp eq i8* %call, null, !dbg !6140
  br i1 %tobool, label %cleanup, label %if.then, !dbg !6142

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %call, metadata !6131, metadata !DIExpression()), !dbg !6133
  %chrec = getelementptr inbounds i8, i8* %call, i64 16, !dbg !6143
  %1 = bitcast i8* %chrec to %union.tree_node**, !dbg !6143
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !6143
  br label %cleanup, !dbg !6144

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %2, %if.then ], [ null, %entry ], !dbg !6145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6146
  ret %union.tree_node* %retval.0, !dbg !6146
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_instantiated_value(%struct.htab* %cache, %struct.basic_block_def* %instantiated_below, %union.tree_node* %version, %union.tree_node* %val) unnamed_addr #5 !dbg !6147 {
entry:
  %pattern = alloca %struct.scev_info_str, align 8
  call void @llvm.dbg.value(metadata %struct.htab* %cache, metadata !6151, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %instantiated_below, metadata !6152, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata %union.tree_node* %version, metadata !6153, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !6154, metadata !DIExpression()), !dbg !6158
  %0 = bitcast %struct.scev_info_str* %pattern to i8*, !dbg !6159
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6159
  %var = getelementptr inbounds %struct.scev_info_str, %struct.scev_info_str* %pattern, i64 0, i32 1, !dbg !6160
  store %union.tree_node* %version, %union.tree_node** %var, align 8, !dbg !6161
  %instantiated_below1 = getelementptr inbounds %struct.scev_info_str, %struct.scev_info_str* %pattern, i64 0, i32 0, !dbg !6162
  store %struct.basic_block_def* %instantiated_below, %struct.basic_block_def** %instantiated_below1, align 8, !dbg !6163
  %call = call i8** @htab_find_slot(%struct.htab* %cache, i8* nonnull %0, i32 1) #6, !dbg !6164
  call void @llvm.dbg.value(metadata i8** %call, metadata !6157, metadata !DIExpression()), !dbg !6158
  %1 = load i8*, i8** %call, align 8, !dbg !6165
  %tobool = icmp eq i8* %1, null, !dbg !6165
  br i1 %tobool, label %if.then, label %entry.if.end_crit_edge, !dbg !6167

entry.if.end_crit_edge:                           ; preds = %entry
  %2 = bitcast i8* %1 to %struct.scev_info_str*, !dbg !6167
  br label %if.end, !dbg !6167

if.then:                                          ; preds = %entry
  %call2 = call fastcc %struct.scev_info_str* @new_scev_info_str(%struct.basic_block_def* %instantiated_below, %union.tree_node* %version) #7, !dbg !6168
  %3 = bitcast i8** %call to %struct.scev_info_str**, !dbg !6169
  store %struct.scev_info_str* %call2, %struct.scev_info_str** %3, align 8, !dbg !6169
  br label %if.end, !dbg !6170

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %4 = phi %struct.scev_info_str* [ %2, %entry.if.end_crit_edge ], [ %call2, %if.then ], !dbg !6171
  call void @llvm.dbg.value(metadata %struct.scev_info_str* %4, metadata !6155, metadata !DIExpression()), !dbg !6158
  %chrec = getelementptr inbounds %struct.scev_info_str, %struct.scev_info_str* %4, i64 0, i32 2, !dbg !6172
  store %union.tree_node* %val, %union.tree_node** %chrec, align 8, !dbg !6173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6174
  ret void, !dbg !6174
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @loop_closed_phi_def(%union.tree_node* %var) unnamed_addr #5 !dbg !6175 {
entry:
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6179, metadata !DIExpression()), !dbg !6184
  %0 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !6185
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6185
  %cmp = icmp eq %union.tree_node* %var, null, !dbg !6186
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !6188

lor.lhs.false:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6189
  %bf.load = load i64, i64* %1, align 8, !dbg !6189
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6190
  %cmp1 = icmp eq i64 %bf.cast1, 141, !dbg !6190
  br i1 %cmp1, label %if.end, label %cleanup, !dbg !6191

if.end:                                           ; preds = %lor.lhs.false
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6192
  %2 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6192
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %2, align 8, !dbg !6192
  %call = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %3) #7, !dbg !6193
  call void @llvm.dbg.value(metadata %struct.loop* %call, metadata !6180, metadata !DIExpression()), !dbg !6184
  %call2 = tail call %struct.edge_def* @single_exit(%struct.loop* %call) #6, !dbg !6194
  call void @llvm.dbg.value(metadata %struct.edge_def* %call2, metadata !6181, metadata !DIExpression()), !dbg !6184
  %tobool = icmp eq %struct.edge_def* %call2, null, !dbg !6195
  br i1 %tobool, label %cleanup, label %if.end4, !dbg !6197

if.end4:                                          ; preds = %if.end
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6198
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !6198
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call2, i64 0, i32 1, !dbg !6200
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6200
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %5) #6, !dbg !6198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !6198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !6198
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call2, i64 0, i32 6, !dbg !6201
  br label %for.cond, !dbg !6205

for.cond:                                         ; preds = %for.inc, %if.end4
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !6183, metadata !DIExpression(DW_OP_deref)), !dbg !6184
  %call5 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !6206
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6207
  br i1 %tobool6, label %for.body, label %cleanup.loopexit, !dbg !6208

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !6183, metadata !DIExpression(DW_OP_deref)), !dbg !6184
  %call7 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !6209
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !6182, metadata !DIExpression()), !dbg !6184
  %6 = load i32, i32* %dest_idx, align 4, !dbg !6210
  %call8 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call7, i32 %6) #7, !dbg !6210
  %call9 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call8) #7, !dbg !6210
  %cmp10 = icmp eq %union.tree_node* %call9, %var, !dbg !6211
  br i1 %cmp10, label %if.then11, label %for.inc, !dbg !6212

if.then11:                                        ; preds = %for.body
  %call7.lcssa = phi %union.gimple_statement_d* [ %call7, %for.body ], !dbg !6209
  %call12 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call7.lcssa) #7, !dbg !6213
  %call13 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call12) #7, !dbg !6213
  br label %cleanup, !dbg !6214

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !6183, metadata !DIExpression(DW_OP_deref)), !dbg !6184
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !6215
  br label %for.cond, !dbg !6216, !llvm.loop !6217

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !6219

cleanup:                                          ; preds = %cleanup.loopexit, %if.end, %lor.lhs.false, %entry, %if.then11
  %retval.0 = phi %union.tree_node* [ %call13, %if.then11 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %if.end ], [ null, %cleanup.loopexit ], !dbg !6184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6219
  ret %union.tree_node* %retval.0, !dbg !6219
}

declare dso_local i8* @htab_find(%struct.htab*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @chrec_convert_aggressive(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build3_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gather_chrec_stats(%union.tree_node* %chrec, %struct.chrec_stats* %stats) unnamed_addr #5 !dbg !6220 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !6224, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata %struct.chrec_stats* %stats, metadata !6225, metadata !DIExpression()), !dbg !6226
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6227
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !6227
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6229

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !6230
  %and = and i32 %1, 16, !dbg !6231
  %tobool1 = icmp eq i32 %and, 0, !dbg !6231
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6232

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !6233
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6235
  tail call void @print_generic_expr(%struct._IO_FILE* %2, %union.tree_node* %chrec, i32 0) #6, !dbg !6236
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6237
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6238
  br label %if.end, !dbg !6239

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %nb_chrecs = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 0, !dbg !6240
  %4 = load i32, i32* %nb_chrecs, align 4, !dbg !6241
  %inc = add i32 %4, 1, !dbg !6241
  store i32 %inc, i32* %nb_chrecs, align 4, !dbg !6241
  %cmp = icmp eq %union.tree_node* %chrec, null, !dbg !6242
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !6244

if.then3:                                         ; preds = %if.end
  %nb_undetermined = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 5, !dbg !6245
  %5 = load i32, i32* %nb_undetermined, align 4, !dbg !6247
  %inc4 = add i32 %5, 1, !dbg !6247
  store i32 %inc4, i32* %nb_undetermined, align 4, !dbg !6247
  br label %if.end58, !dbg !6248

if.end5:                                          ; preds = %if.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6249
  %bf.load = load i64, i64* %6, align 8, !dbg !6249
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6250
  %cond = icmp eq i64 %bf.cast1, 146, !dbg !6250
  br i1 %cond, label %sw.bb, label %sw.epilog, !dbg !6250

sw.bb:                                            ; preds = %if.end5
  %call6 = tail call fastcc zeroext i8 @evolution_function_is_affine_p(%union.tree_node* nonnull %chrec) #7, !dbg !6251
  %tobool7 = icmp eq i8 %call6, 0, !dbg !6251
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !6254

if.then8:                                         ; preds = %sw.bb
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6255
  %tobool9 = icmp eq %struct._IO_FILE* %7, null, !dbg !6255
  br i1 %tobool9, label %if.end15, label %land.lhs.true10, !dbg !6258

land.lhs.true10:                                  ; preds = %if.then8
  %8 = load i32, i32* @dump_flags, align 4, !dbg !6259
  %and11 = and i32 %8, 16, !dbg !6260
  %tobool12 = icmp eq i32 %and11, 0, !dbg !6260
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !6261

if.then13:                                        ; preds = %land.lhs.true10
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !6262
  br label %if.end15, !dbg !6262

if.end15:                                         ; preds = %land.lhs.true10, %if.then8, %if.then13
  %nb_affine = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 1, !dbg !6263
  %9 = load i32, i32* %nb_affine, align 4, !dbg !6264
  %inc16 = add i32 %9, 1, !dbg !6264
  store i32 %inc16, i32* %nb_affine, align 4, !dbg !6264
  br label %sw.epilog, !dbg !6265

if.else:                                          ; preds = %sw.bb
  %call17 = tail call zeroext i8 @evolution_function_is_affine_multivariate_p(%union.tree_node* nonnull %chrec, i32 0) #6, !dbg !6266
  %tobool18 = icmp eq i8 %call17, 0, !dbg !6266
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6268
  %tobool20 = icmp ne %struct._IO_FILE* %10, null, !dbg !6268
  br i1 %tobool18, label %if.else28, label %if.then19, !dbg !6269

if.then19:                                        ; preds = %if.else
  br i1 %tobool20, label %land.lhs.true21, label %if.end26, !dbg !6270

land.lhs.true21:                                  ; preds = %if.then19
  %11 = load i32, i32* @dump_flags, align 4, !dbg !6273
  %and22 = and i32 %11, 16, !dbg !6274
  %tobool23 = icmp eq i32 %and22, 0, !dbg !6274
  br i1 %tobool23, label %if.end26, label %if.then24, !dbg !6275

if.then24:                                        ; preds = %land.lhs.true21
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !6276
  br label %if.end26, !dbg !6276

if.end26:                                         ; preds = %land.lhs.true21, %if.then24, %if.then19
  %nb_affine_multivar = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 2, !dbg !6277
  %12 = load i32, i32* %nb_affine_multivar, align 4, !dbg !6278
  %inc27 = add i32 %12, 1, !dbg !6278
  store i32 %inc27, i32* %nb_affine_multivar, align 4, !dbg !6278
  br label %sw.epilog, !dbg !6279

if.else28:                                        ; preds = %if.else
  br i1 %tobool20, label %land.lhs.true30, label %if.end35, !dbg !6280

land.lhs.true30:                                  ; preds = %if.else28
  %13 = load i32, i32* @dump_flags, align 4, !dbg !6283
  %and31 = and i32 %13, 16, !dbg !6284
  %tobool32 = icmp eq i32 %and31, 0, !dbg !6284
  br i1 %tobool32, label %if.end35, label %if.then33, !dbg !6285

if.then33:                                        ; preds = %land.lhs.true30
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !6286
  br label %if.end35, !dbg !6286

if.end35:                                         ; preds = %land.lhs.true30, %if.then33, %if.else28
  %nb_higher_poly = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 3, !dbg !6287
  %14 = load i32, i32* %nb_higher_poly, align 4, !dbg !6288
  %inc36 = add i32 %14, 1, !dbg !6288
  store i32 %inc36, i32* %nb_higher_poly, align 4, !dbg !6288
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end5, %if.end15, %if.end35, %if.end26
  %call39 = tail call zeroext i8 @chrec_contains_undetermined(%union.tree_node* nonnull %chrec) #6, !dbg !6289
  %tobool40 = icmp eq i8 %call39, 0, !dbg !6289
  br i1 %tobool40, label %if.end51, label %if.then41, !dbg !6291

if.then41:                                        ; preds = %sw.epilog
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6292
  %tobool42 = icmp eq %struct._IO_FILE* %15, null, !dbg !6292
  br i1 %tobool42, label %if.end48, label %land.lhs.true43, !dbg !6295

land.lhs.true43:                                  ; preds = %if.then41
  %16 = load i32, i32* @dump_flags, align 4, !dbg !6296
  %and44 = and i32 %16, 16, !dbg !6297
  %tobool45 = icmp eq i32 %and44, 0, !dbg !6297
  br i1 %tobool45, label %if.end48, label %if.then46, !dbg !6298

if.then46:                                        ; preds = %land.lhs.true43
  %call47 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !6299
  br label %if.end48, !dbg !6299

if.end48:                                         ; preds = %land.lhs.true43, %if.then41, %if.then46
  %nb_undetermined49 = getelementptr inbounds %struct.chrec_stats, %struct.chrec_stats* %stats, i64 0, i32 5, !dbg !6300
  %17 = load i32, i32* %nb_undetermined49, align 4, !dbg !6301
  %inc50 = add i32 %17, 1, !dbg !6301
  store i32 %inc50, i32* %nb_undetermined49, align 4, !dbg !6301
  br label %if.end51, !dbg !6302

if.end51:                                         ; preds = %sw.epilog, %if.end48
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6303
  %tobool52 = icmp eq %struct._IO_FILE* %18, null, !dbg !6303
  br i1 %tobool52, label %if.end58, label %land.lhs.true53, !dbg !6305

land.lhs.true53:                                  ; preds = %if.end51
  %19 = load i32, i32* @dump_flags, align 4, !dbg !6306
  %and54 = and i32 %19, 16, !dbg !6307
  %tobool55 = icmp eq i32 %and54, 0, !dbg !6307
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !6308

if.then56:                                        ; preds = %land.lhs.true53
  %call57 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6309
  br label %if.end58, !dbg !6309

if.end58:                                         ; preds = %land.lhs.true53, %if.end51, %if.then3, %if.then56
  ret void, !dbg !6310
}

declare dso_local zeroext i8 @evolution_function_is_affine_multivariate_p(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @htab_elements(%struct.htab*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_node_stat(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !6311 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6315, metadata !DIExpression()), !dbg !6316
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 4) #6, !dbg !6317
  %0 = bitcast i8* %call to %struct.VEC_int_heap*, !dbg !6317
  ret %struct.VEC_int_heap* %0, !dbg !6317
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !6318 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !6322, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6323, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.value(metadata %struct.loop** %ptr, metadata !6324, metadata !DIExpression()), !dbg !6325
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !6326
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6326

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !6326
  %0 = load i32, i32* %num, align 8, !dbg !6326
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6326
  br i1 %cmp, label %if.then, label %if.else, !dbg !6328

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6329
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6329
  %1 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !6329
  br label %return, !dbg !6329

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6331

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.loop* [ null, %if.else ], [ %1, %if.then ], !dbg !6333
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6333
  store %struct.loop* %storemerge, %struct.loop** %ptr, align 8, !dbg !6333
  ret i32 %retval.0, !dbg !6328
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !6334 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !6340, metadata !DIExpression()), !dbg !6343
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !6341, metadata !DIExpression()), !dbg !6343
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !6344
  %0 = load i32, i32* %num1, align 4, !dbg !6344
  %inc = add i32 %0, 1, !dbg !6344
  store i32 %inc, i32* %num1, align 4, !dbg !6344
  %idxprom = zext i32 %0 to i64, !dbg !6344
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6344
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !6342, metadata !DIExpression()), !dbg !6343
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !6344
  ret i32* %arrayidx, !dbg !6344
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !6345 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6349, metadata !DIExpression()), !dbg !6351
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !6352
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !6352
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !6352
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6352

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !6352
  br label %cond.end, !dbg !6352

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6352
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !6352
  call void @llvm.dbg.value(metadata i32 %call, metadata !6350, metadata !DIExpression()), !dbg !6351
  %cmp = icmp eq i32 %call, 0, !dbg !6353
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6355

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !6356
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !6356
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !6356

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !6356
  br label %cond.end8, !dbg !6356

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !6356
  %sub = add i32 %call, -1, !dbg !6356
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #7, !dbg !6356
  br label %cleanup, !dbg !6357

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !6351
  ret %struct.loop* %retval.0, !dbg !6358
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !6359 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !6363, metadata !DIExpression()), !dbg !6364
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !6365
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6365

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !6365
  %0 = load i32, i32* %num, align 8, !dbg !6365
  br label %cond.end, !dbg !6365

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6365
  ret i32 %cond, !dbg !6365
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !6366 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !6372, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6373, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !6374, metadata !DIExpression()), !dbg !6375
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !6376
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6376

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !6376
  %0 = load i32, i32* %num, align 4, !dbg !6376
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6376
  br i1 %cmp, label %if.then, label %if.else, !dbg !6378

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6379
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6379
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6379
  br label %return, !dbg !6379

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6381

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !6383
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6383
  store i32 %storemerge, i32* %ptr, align 4, !dbg !6383
  ret i32 %retval.0, !dbg !6378
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !6384 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !6389, metadata !DIExpression()), !dbg !6390
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !6391
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !6391
  br i1 %tobool, label %if.end, label %if.then, !dbg !6393

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !6393
  tail call void @free(i8* nonnull %1) #6, !dbg !6391
  br label %if.end, !dbg !6391

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !6393
  ret void, !dbg !6393
}

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @get_exit_conditions_rec(%struct.loop* %loop, %struct.VEC_gimple_heap** %exit_conditions) unnamed_addr #5 !dbg !6394 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6398, metadata !DIExpression()), !dbg !6403
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %exit_conditions, metadata !6399, metadata !DIExpression()), !dbg !6403
  %tobool = icmp eq %struct.loop* %loop, null, !dbg !6404
  br i1 %tobool, label %if.end8, label %if.end, !dbg !6406

if.end:                                           ; preds = %entry
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !6407
  %0 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !6407
  tail call fastcc void @get_exit_conditions_rec(%struct.loop* %0, %struct.VEC_gimple_heap** %exit_conditions) #7, !dbg !6408
  %next = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 9, !dbg !6409
  %1 = load %struct.loop*, %struct.loop** %next, align 8, !dbg !6409
  tail call fastcc void @get_exit_conditions_rec(%struct.loop* %1, %struct.VEC_gimple_heap** %exit_conditions) #7, !dbg !6410
  %call = tail call %struct.edge_def* @single_exit(%struct.loop* nonnull %loop) #6, !dbg !6411
  %tobool1 = icmp eq %struct.edge_def* %call, null, !dbg !6411
  br i1 %tobool1, label %if.end8, label %if.then2, !dbg !6412

if.then2:                                         ; preds = %if.end
  %call3 = tail call %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop* nonnull %loop) #7, !dbg !6413
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !6400, metadata !DIExpression()), !dbg !6414
  %tobool4 = icmp eq %union.gimple_statement_d* %call3, null, !dbg !6415
  br i1 %tobool4, label %if.end8, label %if.then5, !dbg !6417

if.then5:                                         ; preds = %if.then2
  %call6 = tail call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %exit_conditions, %union.gimple_statement_d* nonnull %call3) #7, !dbg !6418
  br label %if.end8, !dbg !6418

if.end8:                                          ; preds = %if.then2, %if.end, %entry, %if.then5
  ret void, !dbg !6419
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !6420 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !6425, metadata !DIExpression()), !dbg !6427
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !6426, metadata !DIExpression()), !dbg !6427
  %call = tail call fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 1) #7, !dbg !6428
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !6428
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !6428
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6428

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !6428
  br label %cond.end, !dbg !6428

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6428
  %call1 = tail call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond, %union.gimple_statement_d* %obj_) #7, !dbg !6428
  ret %union.gimple_statement_d** %call1, !dbg !6428
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6429 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !6433, metadata !DIExpression()), !dbg !6436
  call void @llvm.dbg.value(metadata i32 1, metadata !6434, metadata !DIExpression()), !dbg !6436
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !6437
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !6437
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6437

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !6437
  br label %cond.end, !dbg !6437

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6437
  %call = tail call fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %cond, i32 1) #7, !dbg !6437
  %tobool1 = icmp eq i32 %call, 0, !dbg !6437
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6437
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6435, metadata !DIExpression()), !dbg !6436
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6437

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_gimple_heap** %vec_ to i8**, !dbg !6438
  %2 = load i8*, i8** %1, align 8, !dbg !6438
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !6438
  store i8* %call3, i8** %1, align 8, !dbg !6438
  br label %if.end, !dbg !6438

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6437
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !6440 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !6445, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !6446, metadata !DIExpression()), !dbg !6448
  %num1 = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !6449
  %0 = load i32, i32* %num1, align 8, !dbg !6449
  %inc = add i32 %0, 1, !dbg !6449
  store i32 %inc, i32* %num1, align 8, !dbg !6449
  %idxprom = zext i32 %0 to i64, !dbg !6449
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6449
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %arrayidx, metadata !6447, metadata !DIExpression()), !dbg !6448
  store %union.gimple_statement_d* %obj_, %union.gimple_statement_d** %arrayidx, align 8, !dbg !6449
  ret %union.gimple_statement_d** %arrayidx, !dbg !6449
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6450 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !6454, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata i32 1, metadata !6455, metadata !DIExpression()), !dbg !6456
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !6457
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6457

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 1, !dbg !6457
  %0 = load i32, i32* %alloc, align 4, !dbg !6457
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !6457
  %1 = load i32, i32* %num, align 8, !dbg !6457
  %cmp1 = icmp ne i32 %0, %1, !dbg !6457
  %phitmp = zext i1 %cmp1 to i32, !dbg !6457
  br label %cond.end, !dbg !6457

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6457

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6457
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %vec_, i32 %ix_, %union.gimple_statement_d** %ptr) unnamed_addr #0 !dbg !6458 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !6464, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6465, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %ptr, metadata !6466, metadata !DIExpression()), !dbg !6467
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !6468
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6468

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !6468
  %0 = load i32, i32* %num, align 8, !dbg !6468
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6468
  br i1 %cmp, label %if.then, label %if.else, !dbg !6470

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6471
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6471
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, align 8, !dbg !6471
  br label %return, !dbg !6471

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6473

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.gimple_statement_d* [ null, %if.else ], [ %1, %if.then ], !dbg !6475
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6475
  store %union.gimple_statement_d* %storemerge, %union.gimple_statement_d** %ptr, align 8, !dbg !6475
  ret i32 %retval.0, !dbg !6470
}

declare dso_local void @print_loops(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6476 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6480, metadata !DIExpression()), !dbg !6481
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6482
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6482

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6482
  %0 = load i32, i32* %num, align 8, !dbg !6482
  br label %cond.end, !dbg !6482

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6482
  ret i32 %cond, !dbg !6482
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6483 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6485, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !6486, metadata !DIExpression()), !dbg !6489
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !6490
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !6487, metadata !DIExpression()), !dbg !6488
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !6491
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !6492
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !6493
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !6494
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !6495
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !6496
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !6497
  ret void, !dbg !6498
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6499 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6503, metadata !DIExpression()), !dbg !6504
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !6505
  %0 = load i32, i32* %flags, align 8, !dbg !6505
  %and = and i32 %0, 512, !dbg !6506
  %tobool = icmp eq i32 %and, 0, !dbg !6506
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !6507

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !6508
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !6508
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !6509
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !6510

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !6511
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !6511
  br label %cond.end, !dbg !6510

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !6510
  ret %struct.gimple_seq_d* %cond, !dbg !6512
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6513 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6520, metadata !DIExpression()), !dbg !6521
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !6522
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6522

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !6523
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !6523
  br label %cond.end, !dbg !6522

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !6522
  ret %struct.gimple_seq_node_d* %cond, !dbg !6524
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6525 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6530, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.value(metadata i32 %index, metadata !6531, metadata !DIExpression()), !dbg !6532
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6533
  %0 = load i32, i32* %capacity, align 8, !dbg !6533
  %cmp = icmp ult i32 %0, %index, !dbg !6533
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6533

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !6533
  br label %cond.end, !dbg !6533

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !6534
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !6534
  ret %struct.phi_arg_d* %arrayidx, !dbg !6535
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1893, !1894, !1895}
!llvm.ident = !{!1896}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "chrec_dont_know", scope: !2, file: !3, line: 304, type: !476, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !466, globals: !1868, nameTableKind: None)
!3 = !DIFile(filename: "tree-scalar-evolution.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !338, !342, !348, !353, !358, !376, !383, !390, !429, !435, !461}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !330, line: 31, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334, !335, !336, !337}
!332 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!335 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!336 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!337 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!338 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !330, line: 91, baseType: !7, size: 32, elements: !339)
!339 = !{!340, !341}
!340 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!341 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !343, line: 363, baseType: !7, size: 32, elements: !344)
!343 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!344 = !{!345, !346, !347}
!345 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!346 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!347 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !343, line: 355, baseType: !7, size: 32, elements: !349)
!349 = !{!350, !351, !352}
!350 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!351 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!352 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!353 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !354, line: 474, baseType: !7, size: 32, elements: !355)
!354 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!355 = !{!356, !357}
!356 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!357 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !359)
!359 = !{!360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375}
!360 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !377)
!377 = !{!378, !379, !380, !381, !382}
!378 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!383 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !384)
!384 = !{!385, !386, !387, !388, !389}
!385 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!386 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!387 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!388 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!389 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !391, line: 51, baseType: !7, size: 32, elements: !392)
!391 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428}
!393 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!397 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!398 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!399 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!400 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!401 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!402 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!403 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!404 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!405 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!406 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!407 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!408 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!409 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!410 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!411 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!412 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!413 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!414 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!415 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!416 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!417 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!418 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!419 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!420 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!421 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!422 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!423 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!424 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!425 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!426 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!427 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!428 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!429 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !391, line: 80, baseType: !7, size: 32, elements: !430)
!430 = !{!431, !432, !433, !434}
!431 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!432 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!433 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!434 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!435 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !391, line: 727, baseType: !7, size: 32, elements: !436)
!436 = !{!437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460}
!437 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!438 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!439 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!440 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!441 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!442 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!443 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!444 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!445 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!446 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!447 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!448 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!449 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!450 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!451 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!452 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!453 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!454 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!455 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!456 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!457 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!458 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!459 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!460 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!461 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "t_bool", file: !3, line: 995, baseType: !7, size: 32, elements: !462)
!462 = !{!463, !464, !465}
!463 = !DIEnumerator(name: "t_false", value: 0, isUnsigned: true)
!464 = !DIEnumerator(name: "t_true", value: 1, isUnsigned: true)
!465 = !DIEnumerator(name: "t_dont_know", value: 2, isUnsigned: true)
!466 = !{!467, !468, !469, !470, !473, !474, !476, !134, !7, !1371, !1829, !1287, !946, !478, !1835, !603, !429, !801, !1837, !835, !471, !1839, !1841, !1850, !1043, !1863, !800}
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!469 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !472)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !477, line: 56, baseType: !478)
!477 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !480)
!480 = !{!481, !514, !520, !533, !552, !563, !568, !577, !583, !596, !608, !646, !1157, !1185, !1202, !1203, !1208, !1217, !1223, !1228, !1232, !1236, !1480, !1527, !1533, !1539, !1546, !1559, !1573, !1590, !1602, !1624, !1639, !1811}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !479, file: !135, line: 3372, baseType: !482, size: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !483)
!483 = !{!484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !482, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !482, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !482, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !482, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !482, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !482, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !482, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !482, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !482, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !482, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !482, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !482, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !482, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !482, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !482, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !482, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !482, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !482, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !482, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !482, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !482, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !482, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !482, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !482, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !482, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !482, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !482, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !482, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !482, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !482, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !479, file: !135, line: 3373, baseType: !515, size: 192)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !516)
!516 = !{!517, !518, !519}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !515, file: !135, line: 403, baseType: !482, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !515, file: !135, line: 404, baseType: !476, size: 64, offset: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !515, file: !135, line: 405, baseType: !476, size: 64, offset: 128)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !479, file: !135, line: 3374, baseType: !521, size: 320)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !522)
!522 = !{!523, !524}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !521, file: !135, line: 1385, baseType: !515, size: 192)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !521, file: !135, line: 1386, baseType: !525, size: 128, offset: 192)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !526, line: 58, baseType: !527)
!526 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !526, line: 54, size: 128, elements: !528)
!528 = !{!529, !531}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !527, file: !526, line: 56, baseType: !530, size: 64)
!530 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !527, file: !526, line: 57, baseType: !532, size: 64, offset: 64)
!532 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !479, file: !135, line: 3375, baseType: !534, size: 256)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !535)
!535 = !{!536, !537}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !534, file: !135, line: 1398, baseType: !515, size: 192)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !534, file: !135, line: 1399, baseType: !538, size: 64, offset: 192)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !540, line: 52, size: 256, elements: !541)
!540 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!541 = !{!542, !543, !544, !545, !546, !547, !548}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !539, file: !540, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !539, file: !540, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !539, file: !540, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !539, file: !540, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !539, file: !540, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !539, file: !540, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !539, file: !540, line: 62, baseType: !549, size: 192, offset: 64)
!549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, size: 192, elements: !550)
!550 = !{!551}
!551 = !DISubrange(count: 3)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !479, file: !135, line: 3376, baseType: !553, size: 256)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !554)
!554 = !{!555, !556}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !553, file: !135, line: 1409, baseType: !515, size: 192)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !553, file: !135, line: 1410, baseType: !557, size: 64, offset: 192)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !559, line: 27, size: 192, elements: !560)
!559 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!560 = !{!561, !562}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !558, file: !559, line: 29, baseType: !525, size: 128)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !558, file: !559, line: 30, baseType: !5, size: 32, offset: 128)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !479, file: !135, line: 3377, baseType: !564, size: 256)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !565)
!565 = !{!566, !567}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !564, file: !135, line: 1438, baseType: !515, size: 192)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !564, file: !135, line: 1439, baseType: !476, size: 64, offset: 192)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !479, file: !135, line: 3378, baseType: !569, size: 256)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !570)
!570 = !{!571, !572, !573}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !569, file: !135, line: 1419, baseType: !515, size: 192)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !569, file: !135, line: 1420, baseType: !469, size: 32, offset: 192)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !569, file: !135, line: 1421, baseType: !574, size: 8, offset: 224)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 8, elements: !575)
!575 = !{!576}
!576 = !DISubrange(count: 1)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !479, file: !135, line: 3379, baseType: !578, size: 320)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !579)
!579 = !{!580, !581, !582}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !578, file: !135, line: 1429, baseType: !515, size: 192)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !578, file: !135, line: 1430, baseType: !476, size: 64, offset: 192)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !578, file: !135, line: 1431, baseType: !476, size: 64, offset: 256)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !479, file: !135, line: 3380, baseType: !584, size: 320)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !585)
!585 = !{!586, !587}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !584, file: !135, line: 1461, baseType: !515, size: 192)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !584, file: !135, line: 1462, baseType: !588, size: 128, offset: 192)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !589, line: 31, size: 128, elements: !590)
!589 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!590 = !{!591, !594, !595}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !588, file: !589, line: 32, baseType: !592, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !588, file: !589, line: 33, baseType: !7, size: 32, offset: 64)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !588, file: !589, line: 34, baseType: !7, size: 32, offset: 96)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !479, file: !135, line: 3381, baseType: !597, size: 384)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !598)
!598 = !{!599, !600, !605, !606, !607}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !597, file: !135, line: 2508, baseType: !515, size: 192)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !597, file: !135, line: 2509, baseType: !601, size: 32, offset: 192)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !602, line: 58, baseType: !603)
!602 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !604, line: 44, baseType: !7)
!604 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!605 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !597, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !597, file: !135, line: 2511, baseType: !476, size: 64, offset: 256)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !597, file: !135, line: 2512, baseType: !476, size: 64, offset: 320)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !479, file: !135, line: 3382, baseType: !609, size: 896)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !610)
!610 = !{!611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !609, file: !135, line: 2653, baseType: !597, size: 384)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !609, file: !135, line: 2654, baseType: !476, size: 64, offset: 384)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !609, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !609, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !609, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !609, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !609, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !609, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !609, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !609, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !609, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !609, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !609, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !609, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !609, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !609, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !609, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !609, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !609, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !609, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !609, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !609, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !609, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !609, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !609, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !609, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !609, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !609, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !609, file: !135, line: 2705, baseType: !476, size: 64, offset: 576)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !609, file: !135, line: 2706, baseType: !476, size: 64, offset: 640)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !609, file: !135, line: 2707, baseType: !476, size: 64, offset: 704)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !609, file: !135, line: 2708, baseType: !476, size: 64, offset: 768)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !609, file: !135, line: 2711, baseType: !644, size: 64, offset: 832)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !135, line: 2711, flags: DIFlagFwdDecl)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !479, file: !135, line: 3383, baseType: !647, size: 960)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !648)
!648 = !{!649, !650}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !647, file: !135, line: 2757, baseType: !609, size: 896)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !647, file: !135, line: 2758, baseType: !651, size: 64, offset: 896)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !477, line: 50, baseType: !652)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !654, line: 240, size: 384, elements: !655)
!654 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!655 = !{!656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !653, file: !654, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !653, file: !654, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !653, file: !654, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !653, file: !654, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !653, file: !654, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !653, file: !654, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !653, file: !654, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !653, file: !654, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !653, file: !654, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !653, file: !654, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !653, file: !654, line: 321, baseType: !667, size: 320, offset: 64)
!667 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !654, line: 315, size: 320, elements: !668)
!668 = !{!669, !1124, !1126, !1155, !1156}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !667, file: !654, line: 316, baseType: !670, size: 64)
!670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !671, size: 64, elements: !575)
!671 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !654, line: 183, baseType: !672)
!672 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !654, line: 166, size: 64, elements: !673)
!673 = !{!674, !675, !676, !677, !678, !686, !687, !699, !702, !762, !763, !1101, !1114, !1121}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !672, file: !654, line: 168, baseType: !469, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !672, file: !654, line: 169, baseType: !7, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !672, file: !654, line: 170, baseType: !474, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !672, file: !654, line: 171, baseType: !651, size: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !672, file: !654, line: 172, baseType: !679, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !477, line: 53, baseType: !680)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !654, line: 359, size: 128, elements: !682)
!682 = !{!683, !684}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !681, file: !654, line: 360, baseType: !469, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !681, file: !654, line: 361, baseType: !685, size: 64, offset: 64)
!685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !651, size: 64, elements: !575)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !672, file: !654, line: 173, baseType: !5, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !672, file: !654, line: 174, baseType: !688, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !654, line: 133, baseType: !689)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 115, size: 32, elements: !690)
!690 = !{!691, !692, !693, !694, !695, !696, !697, !698}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !689, file: !654, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !689, file: !654, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !689, file: !654, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !689, file: !654, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !689, file: !654, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !689, file: !654, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !689, file: !654, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !689, file: !654, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !672, file: !654, line: 175, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !654, line: 175, flags: DIFlagFwdDecl)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !672, file: !654, line: 176, baseType: !703, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !705, line: 75, size: 256, elements: !706)
!705 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!706 = !{!707, !721, !722, !723}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !704, file: !705, line: 76, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !705, line: 68, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !705, line: 63, size: 320, elements: !711)
!711 = !{!712, !714, !715, !716}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !710, file: !705, line: 64, baseType: !713, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !710, file: !705, line: 65, baseType: !713, size: 64, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !710, file: !705, line: 66, baseType: !7, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !710, file: !705, line: 67, baseType: !717, size: 128, offset: 192)
!717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !718, size: 128, elements: !719)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !705, line: 29, baseType: !530)
!719 = !{!720}
!720 = !DISubrange(count: 2)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !704, file: !705, line: 77, baseType: !708, size: 64, offset: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !704, file: !705, line: 78, baseType: !7, size: 32, offset: 128)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !704, file: !705, line: 79, baseType: !724, size: 64, offset: 192)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !705, line: 49, baseType: !726)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !705, line: 45, size: 832, elements: !727)
!727 = !{!728, !729, !730}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !726, file: !705, line: 46, baseType: !713, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !726, file: !705, line: 47, baseType: !703, size: 64, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !726, file: !705, line: 48, baseType: !731, size: 704, offset: 128)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !732, line: 164, size: 704, elements: !733)
!732 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!733 = !{!734, !735, !745, !746, !747, !748, !749, !750, !754, !758, !759, !760, !761}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !731, file: !732, line: 166, baseType: !532, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !731, file: !732, line: 167, baseType: !736, size: 64, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !732, line: 157, size: 192, elements: !738)
!738 = !{!739, !740, !741}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !737, file: !732, line: 159, baseType: !471, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !737, file: !732, line: 160, baseType: !736, size: 64, offset: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !737, file: !732, line: 161, baseType: !742, size: 32, offset: 128)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 32, elements: !743)
!743 = !{!744}
!744 = !DISubrange(count: 4)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !731, file: !732, line: 168, baseType: !471, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !731, file: !732, line: 169, baseType: !471, size: 64, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !731, file: !732, line: 170, baseType: !471, size: 64, offset: 256)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !731, file: !732, line: 171, baseType: !532, size: 64, offset: 320)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !731, file: !732, line: 172, baseType: !469, size: 32, offset: 384)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !731, file: !732, line: 176, baseType: !751, size: 64, offset: 448)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DISubroutineType(types: !753)
!753 = !{!736, !473, !532}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !731, file: !732, line: 177, baseType: !755, size: 64, offset: 512)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DISubroutineType(types: !757)
!757 = !{null, !473, !736}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !731, file: !732, line: 178, baseType: !473, size: 64, offset: 576)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !731, file: !732, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !731, file: !732, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !731, file: !732, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !672, file: !654, line: 177, baseType: !476, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !672, file: !654, line: 178, baseType: !764, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !343, line: 217, size: 832, elements: !766)
!766 = !{!767, !1013, !1014, !1015, !1071, !1075, !1076, !1077, !1095, !1096, !1097, !1098, !1099, !1100}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !765, file: !343, line: 219, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !343, line: 151, baseType: !770)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !343, line: 151, size: 128, elements: !771)
!771 = !{!772}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !770, file: !343, line: 151, baseType: !773, size: 128)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !343, line: 150, baseType: !774)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !343, line: 150, size: 128, elements: !775)
!775 = !{!776, !777, !778}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !774, file: !343, line: 150, baseType: !7, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !774, file: !343, line: 150, baseType: !7, size: 32, offset: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !774, file: !343, line: 150, baseType: !779, size: 64, offset: 64)
!779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !780, size: 64, elements: !575)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !477, line: 108, baseType: !781)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !343, line: 122, size: 512, elements: !783)
!783 = !{!784, !785, !786, !1005, !1006, !1007, !1008, !1009, !1010, !1011}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !782, file: !343, line: 124, baseType: !764, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !782, file: !343, line: 125, baseType: !764, size: 64, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !782, file: !343, line: 131, baseType: !787, size: 64, offset: 128)
!787 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !343, line: 128, size: 64, elements: !788)
!788 = !{!789, !1004}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !787, file: !343, line: 129, baseType: !790, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !477, line: 66, baseType: !791)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !391, line: 143, size: 192, elements: !793)
!793 = !{!794, !1002, !1003}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !792, file: !391, line: 145, baseType: !795, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !477, line: 69, baseType: !796)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !391, line: 136, size: 192, elements: !798)
!798 = !{!799, !1000, !1001}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !797, file: !391, line: 137, baseType: !800, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !477, line: 58, baseType: !801)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !391, line: 737, size: 768, elements: !803)
!803 = !{!804, !821, !855, !861, !866, !871, !878, !884, !890, !895, !909, !914, !920, !925, !935, !940, !958, !965, !972, !978, !983, !989, !995}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !802, file: !391, line: 738, baseType: !805, size: 256)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !391, line: 271, size: 256, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !805, file: !391, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !805, file: !391, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !805, file: !391, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !805, file: !391, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !805, file: !391, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !805, file: !391, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !805, file: !391, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !805, file: !391, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !805, file: !391, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !805, file: !391, line: 312, baseType: !7, size: 32, offset: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !805, file: !391, line: 316, baseType: !601, size: 32, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !805, file: !391, line: 319, baseType: !7, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !805, file: !391, line: 323, baseType: !764, size: 64, offset: 128)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !805, file: !391, line: 327, baseType: !476, size: 64, offset: 192)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !802, file: !391, line: 739, baseType: !822, size: 448)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !391, line: 350, size: 448, elements: !823)
!823 = !{!824, !853}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !822, file: !391, line: 353, baseType: !825, size: 384)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !391, line: 333, size: 384, elements: !826)
!826 = !{!827, !828, !836}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !825, file: !391, line: 336, baseType: !805, size: 256)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !825, file: !391, line: 343, baseType: !829, size: 64, offset: 256)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !831, line: 37, size: 128, elements: !832)
!831 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!832 = !{!833, !834}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !830, file: !831, line: 39, baseType: !829, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !830, file: !831, line: 40, baseType: !835, size: 64, offset: 64)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !825, file: !391, line: 344, baseType: !837, size: 64, offset: 320)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !831, line: 45, size: 320, elements: !839)
!839 = !{!840, !841}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !838, file: !831, line: 47, baseType: !837, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !838, file: !831, line: 48, baseType: !842, size: 256, offset: 64)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !843)
!843 = !{!844, !846, !847, !852}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !842, file: !135, line: 1884, baseType: !845, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !842, file: !135, line: 1885, baseType: !845, size: 64, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !842, file: !135, line: 1891, baseType: !848, size: 64, offset: 128)
!848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !842, file: !135, line: 1891, size: 64, elements: !849)
!849 = !{!850, !851}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !848, file: !135, line: 1891, baseType: !800, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !848, file: !135, line: 1891, baseType: !476, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !842, file: !135, line: 1892, baseType: !835, size: 64, offset: 192)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !822, file: !391, line: 359, baseType: !854, size: 64, offset: 384)
!854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 64, elements: !575)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !802, file: !391, line: 740, baseType: !856, size: 512)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !391, line: 365, size: 512, elements: !857)
!857 = !{!858, !859, !860}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !856, file: !391, line: 368, baseType: !825, size: 384)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !856, file: !391, line: 373, baseType: !476, size: 64, offset: 384)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !856, file: !391, line: 374, baseType: !476, size: 64, offset: 448)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !802, file: !391, line: 741, baseType: !862, size: 576)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !391, line: 380, size: 576, elements: !863)
!863 = !{!864, !865}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !862, file: !391, line: 383, baseType: !856, size: 512)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !862, file: !391, line: 389, baseType: !854, size: 64, offset: 512)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !802, file: !391, line: 742, baseType: !867, size: 320)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !391, line: 395, size: 320, elements: !868)
!868 = !{!869, !870}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !867, file: !391, line: 397, baseType: !805, size: 256)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !867, file: !391, line: 400, baseType: !790, size: 64, offset: 256)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !802, file: !391, line: 743, baseType: !872, size: 448)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !391, line: 406, size: 448, elements: !873)
!873 = !{!874, !875, !876, !877}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !872, file: !391, line: 408, baseType: !805, size: 256)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !872, file: !391, line: 412, baseType: !476, size: 64, offset: 256)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !872, file: !391, line: 420, baseType: !476, size: 64, offset: 320)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !872, file: !391, line: 423, baseType: !790, size: 64, offset: 384)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !802, file: !391, line: 744, baseType: !879, size: 384)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !391, line: 429, size: 384, elements: !880)
!880 = !{!881, !882, !883}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !879, file: !391, line: 431, baseType: !805, size: 256)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !879, file: !391, line: 434, baseType: !476, size: 64, offset: 256)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !879, file: !391, line: 437, baseType: !790, size: 64, offset: 320)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !802, file: !391, line: 745, baseType: !885, size: 384)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !391, line: 443, size: 384, elements: !886)
!886 = !{!887, !888, !889}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !885, file: !391, line: 445, baseType: !805, size: 256)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !885, file: !391, line: 449, baseType: !476, size: 64, offset: 256)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !885, file: !391, line: 453, baseType: !790, size: 64, offset: 320)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !802, file: !391, line: 746, baseType: !891, size: 320)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !391, line: 459, size: 320, elements: !892)
!892 = !{!893, !894}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !891, file: !391, line: 461, baseType: !805, size: 256)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !891, file: !391, line: 464, baseType: !476, size: 64, offset: 256)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !802, file: !391, line: 747, baseType: !896, size: 768)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !391, line: 469, size: 768, elements: !897)
!897 = !{!898, !899, !900, !901, !902}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !896, file: !391, line: 471, baseType: !805, size: 256)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !896, file: !391, line: 474, baseType: !7, size: 32, offset: 256)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !896, file: !391, line: 475, baseType: !7, size: 32, offset: 288)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !896, file: !391, line: 478, baseType: !476, size: 64, offset: 320)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !896, file: !391, line: 481, baseType: !903, size: 384, offset: 384)
!903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 384, elements: !575)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !905)
!905 = !{!906, !907, !908}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !904, file: !135, line: 1920, baseType: !842, size: 256)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !904, file: !135, line: 1921, baseType: !476, size: 64, offset: 256)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !904, file: !135, line: 1922, baseType: !601, size: 32, offset: 320)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !802, file: !391, line: 748, baseType: !910, size: 320)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !391, line: 487, size: 320, elements: !911)
!911 = !{!912, !913}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !910, file: !391, line: 490, baseType: !805, size: 256)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !910, file: !391, line: 494, baseType: !469, size: 32, offset: 256)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !802, file: !391, line: 749, baseType: !915, size: 384)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !391, line: 500, size: 384, elements: !916)
!916 = !{!917, !918, !919}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !915, file: !391, line: 502, baseType: !805, size: 256)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !915, file: !391, line: 506, baseType: !790, size: 64, offset: 256)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !915, file: !391, line: 510, baseType: !790, size: 64, offset: 320)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !802, file: !391, line: 750, baseType: !921, size: 320)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !391, line: 529, size: 320, elements: !922)
!922 = !{!923, !924}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !921, file: !391, line: 531, baseType: !805, size: 256)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !921, file: !391, line: 540, baseType: !790, size: 64, offset: 256)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !802, file: !391, line: 751, baseType: !926, size: 704)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !391, line: 546, size: 704, elements: !927)
!927 = !{!928, !929, !930, !931, !932, !933, !934}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !926, file: !391, line: 549, baseType: !856, size: 512)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !926, file: !391, line: 553, baseType: !474, size: 64, offset: 512)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !926, file: !391, line: 557, baseType: !468, size: 8, offset: 576)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !926, file: !391, line: 558, baseType: !468, size: 8, offset: 584)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !926, file: !391, line: 559, baseType: !468, size: 8, offset: 592)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !926, file: !391, line: 560, baseType: !468, size: 8, offset: 600)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !926, file: !391, line: 566, baseType: !854, size: 64, offset: 640)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !802, file: !391, line: 752, baseType: !936, size: 384)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !391, line: 571, size: 384, elements: !937)
!937 = !{!938, !939}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !936, file: !391, line: 573, baseType: !867, size: 320)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !936, file: !391, line: 577, baseType: !476, size: 64, offset: 320)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !802, file: !391, line: 753, baseType: !941, size: 576)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !391, line: 600, size: 576, elements: !942)
!942 = !{!943, !944, !945, !948, !957}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !941, file: !391, line: 602, baseType: !867, size: 320)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !941, file: !391, line: 605, baseType: !476, size: 64, offset: 320)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !941, file: !391, line: 609, baseType: !946, size: 64, offset: 384)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !947, line: 46, baseType: !530)
!947 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!948 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !941, file: !391, line: 612, baseType: !949, size: 64, offset: 448)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !391, line: 581, size: 320, elements: !951)
!951 = !{!952, !953, !954, !955, !956}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !950, file: !391, line: 583, baseType: !134, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !950, file: !391, line: 586, baseType: !476, size: 64, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !950, file: !391, line: 589, baseType: !476, size: 64, offset: 128)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !950, file: !391, line: 592, baseType: !476, size: 64, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !950, file: !391, line: 595, baseType: !476, size: 64, offset: 256)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !941, file: !391, line: 616, baseType: !790, size: 64, offset: 512)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !802, file: !391, line: 754, baseType: !959, size: 512)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !391, line: 622, size: 512, elements: !960)
!960 = !{!961, !962, !963, !964}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !959, file: !391, line: 624, baseType: !867, size: 320)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !959, file: !391, line: 628, baseType: !476, size: 64, offset: 320)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !959, file: !391, line: 632, baseType: !476, size: 64, offset: 384)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !959, file: !391, line: 636, baseType: !476, size: 64, offset: 448)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !802, file: !391, line: 755, baseType: !966, size: 704)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !391, line: 642, size: 704, elements: !967)
!967 = !{!968, !969, !970, !971}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !966, file: !391, line: 644, baseType: !959, size: 512)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !966, file: !391, line: 648, baseType: !476, size: 64, offset: 512)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !966, file: !391, line: 652, baseType: !476, size: 64, offset: 576)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !966, file: !391, line: 653, baseType: !476, size: 64, offset: 640)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !802, file: !391, line: 756, baseType: !973, size: 448)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !391, line: 663, size: 448, elements: !974)
!974 = !{!975, !976, !977}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !973, file: !391, line: 665, baseType: !867, size: 320)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !973, file: !391, line: 668, baseType: !476, size: 64, offset: 320)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !973, file: !391, line: 673, baseType: !476, size: 64, offset: 384)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !802, file: !391, line: 757, baseType: !979, size: 384)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !391, line: 694, size: 384, elements: !980)
!980 = !{!981, !982}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !979, file: !391, line: 696, baseType: !867, size: 320)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !979, file: !391, line: 699, baseType: !476, size: 64, offset: 320)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !802, file: !391, line: 758, baseType: !984, size: 384)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !391, line: 681, size: 384, elements: !985)
!985 = !{!986, !987, !988}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !984, file: !391, line: 683, baseType: !805, size: 256)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !984, file: !391, line: 686, baseType: !476, size: 64, offset: 256)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !984, file: !391, line: 689, baseType: !476, size: 64, offset: 320)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !802, file: !391, line: 759, baseType: !990, size: 384)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !391, line: 707, size: 384, elements: !991)
!991 = !{!992, !993, !994}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !990, file: !391, line: 709, baseType: !805, size: 256)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !990, file: !391, line: 712, baseType: !476, size: 64, offset: 256)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !990, file: !391, line: 712, baseType: !476, size: 64, offset: 320)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !802, file: !391, line: 760, baseType: !996, size: 320)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !391, line: 718, size: 320, elements: !997)
!997 = !{!998, !999}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !996, file: !391, line: 720, baseType: !805, size: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !996, file: !391, line: 723, baseType: !476, size: 64, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !797, file: !391, line: 138, baseType: !796, size: 64, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !797, file: !391, line: 139, baseType: !796, size: 64, offset: 128)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !792, file: !391, line: 146, baseType: !795, size: 64, offset: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !792, file: !391, line: 152, baseType: !790, size: 64, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !787, file: !343, line: 130, baseType: !651, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !782, file: !343, line: 134, baseType: !473, size: 64, offset: 192)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !782, file: !343, line: 137, baseType: !476, size: 64, offset: 256)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !782, file: !343, line: 138, baseType: !601, size: 32, offset: 320)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !782, file: !343, line: 142, baseType: !7, size: 32, offset: 352)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !782, file: !343, line: 144, baseType: !469, size: 32, offset: 384)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !782, file: !343, line: 145, baseType: !469, size: 32, offset: 416)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !782, file: !343, line: 146, baseType: !1012, size: 64, offset: 448)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !343, line: 119, baseType: !532)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !765, file: !343, line: 220, baseType: !768, size: 64, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !765, file: !343, line: 223, baseType: !473, size: 64, offset: 128)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !765, file: !343, line: 226, baseType: !1016, size: 64, offset: 192)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !330, line: 100, size: 1216, elements: !1018)
!1018 = !{!1019, !1020, !1021, !1022, !1023, !1028, !1029, !1030, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1061, !1069, !1070}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1017, file: !330, line: 102, baseType: !469, size: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1017, file: !330, line: 105, baseType: !7, size: 32, offset: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1017, file: !330, line: 108, baseType: !764, size: 64, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1017, file: !330, line: 111, baseType: !764, size: 64, offset: 128)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1017, file: !330, line: 114, baseType: !1024, size: 64, offset: 192)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !330, line: 41, size: 64, elements: !1025)
!1025 = !{!1026, !1027}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1024, file: !330, line: 42, baseType: !329, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1024, file: !330, line: 43, baseType: !7, size: 32, offset: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1017, file: !330, line: 117, baseType: !7, size: 32, offset: 256)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1017, file: !330, line: 120, baseType: !7, size: 32, offset: 288)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1017, file: !330, line: 123, baseType: !1031, size: 64, offset: 320)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !330, line: 87, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !330, line: 87, size: 128, elements: !1034)
!1034 = !{!1035}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1033, file: !330, line: 87, baseType: !1036, size: 128)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !330, line: 85, baseType: !1037)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !330, line: 85, size: 128, elements: !1038)
!1038 = !{!1039, !1040, !1041}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1037, file: !330, line: 85, baseType: !7, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1037, file: !330, line: 85, baseType: !7, size: 32, offset: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1037, file: !330, line: 85, baseType: !1042, size: 64, offset: 64)
!1042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 64, elements: !575)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !330, line: 84, baseType: !1016)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1017, file: !330, line: 126, baseType: !1016, size: 64, offset: 384)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1017, file: !330, line: 129, baseType: !1016, size: 64, offset: 448)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1017, file: !330, line: 132, baseType: !473, size: 64, offset: 512)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1017, file: !330, line: 139, baseType: !476, size: 64, offset: 576)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1017, file: !330, line: 143, baseType: !525, size: 128, offset: 640)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1017, file: !330, line: 146, baseType: !525, size: 128, offset: 768)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1017, file: !330, line: 148, baseType: !468, size: 8, offset: 896)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1017, file: !330, line: 149, baseType: !468, size: 8, offset: 904)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1017, file: !330, line: 153, baseType: !338, size: 32, offset: 928)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1017, file: !330, line: 156, baseType: !1054, size: 64, offset: 960)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !330, line: 48, size: 320, elements: !1056)
!1056 = !{!1057, !1058, !1059, !1060}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1055, file: !330, line: 50, baseType: !800, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1055, file: !330, line: 59, baseType: !525, size: 128, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1055, file: !330, line: 64, baseType: !468, size: 8, offset: 192)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1055, file: !330, line: 67, baseType: !1054, size: 64, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1017, file: !330, line: 159, baseType: !1062, size: 64, offset: 1024)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !330, line: 72, size: 256, elements: !1064)
!1064 = !{!1065, !1066, !1067, !1068}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1063, file: !330, line: 74, baseType: !781, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1063, file: !330, line: 77, baseType: !1062, size: 64, offset: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1063, file: !330, line: 78, baseType: !1062, size: 64, offset: 128)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1063, file: !330, line: 81, baseType: !1062, size: 64, offset: 192)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1017, file: !330, line: 162, baseType: !468, size: 8, offset: 1088)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1017, file: !330, line: 166, baseType: !476, size: 64, offset: 1152)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !765, file: !343, line: 229, baseType: !1072, size: 128, offset: 256)
!1072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1073, size: 128, elements: !719)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !343, line: 229, flags: DIFlagFwdDecl)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !765, file: !343, line: 232, baseType: !764, size: 64, offset: 384)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !765, file: !343, line: 233, baseType: !764, size: 64, offset: 448)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !765, file: !343, line: 238, baseType: !1078, size: 64, offset: 512)
!1078 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !343, line: 235, size: 64, elements: !1079)
!1079 = !{!1080, !1086}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1078, file: !343, line: 236, baseType: !1081, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !343, line: 273, size: 128, elements: !1083)
!1083 = !{!1084, !1085}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1082, file: !343, line: 275, baseType: !790, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1082, file: !343, line: 278, baseType: !790, size: 64, offset: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1078, file: !343, line: 237, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !343, line: 259, size: 320, elements: !1089)
!1089 = !{!1090, !1091, !1092, !1093, !1094}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1088, file: !343, line: 261, baseType: !651, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1088, file: !343, line: 262, baseType: !651, size: 64, offset: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1088, file: !343, line: 266, baseType: !651, size: 64, offset: 128)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1088, file: !343, line: 267, baseType: !651, size: 64, offset: 192)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1088, file: !343, line: 270, baseType: !469, size: 32, offset: 256)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !765, file: !343, line: 241, baseType: !1012, size: 64, offset: 576)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !765, file: !343, line: 244, baseType: !469, size: 32, offset: 640)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !765, file: !343, line: 247, baseType: !469, size: 32, offset: 672)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !765, file: !343, line: 250, baseType: !469, size: 32, offset: 704)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !765, file: !343, line: 253, baseType: !469, size: 32, offset: 736)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !765, file: !343, line: 256, baseType: !469, size: 32, offset: 768)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !672, file: !654, line: 179, baseType: !1102, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !654, line: 150, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !654, line: 142, size: 320, elements: !1105)
!1105 = !{!1106, !1107, !1108, !1109, !1112, !1113}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1104, file: !654, line: 144, baseType: !476, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1104, file: !654, line: 145, baseType: !651, size: 64, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1104, file: !654, line: 146, baseType: !651, size: 64, offset: 128)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1104, file: !654, line: 147, baseType: !1110, size: 32, offset: 192)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1111, line: 31, baseType: !469)
!1111 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1104, file: !654, line: 148, baseType: !7, size: 32, offset: 224)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1104, file: !654, line: 149, baseType: !468, size: 8, offset: 256)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !672, file: !654, line: 180, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !654, line: 162, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !654, line: 159, size: 128, elements: !1118)
!1118 = !{!1119, !1120}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1117, file: !654, line: 160, baseType: !476, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1117, file: !654, line: 161, baseType: !532, size: 64, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !672, file: !654, line: 181, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !654, line: 181, flags: DIFlagFwdDecl)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !667, file: !654, line: 317, baseType: !1125, size: 64)
!1125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 64, elements: !575)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !667, file: !654, line: 318, baseType: !1127, size: 320)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !654, line: 188, size: 320, elements: !1128)
!1128 = !{!1129, !1131, !1154}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1127, file: !654, line: 190, baseType: !1130, size: 192)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !671, size: 192, elements: !550)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1127, file: !654, line: 193, baseType: !1132, size: 64, offset: 192)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !654, line: 206, size: 320, elements: !1134)
!1134 = !{!1135, !1139, !1140, !1141, !1153}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1133, file: !654, line: 208, baseType: !1136, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !477, line: 62, baseType: !1138)
!1138 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !477, line: 61, flags: DIFlagFwdDecl)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1133, file: !654, line: 211, baseType: !7, size: 32, offset: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1133, file: !654, line: 214, baseType: !532, size: 64, offset: 128)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1133, file: !654, line: 224, baseType: !1142, size: 64, offset: 192)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !654, line: 202, baseType: !1144)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !654, line: 202, size: 128, elements: !1145)
!1145 = !{!1146}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1144, file: !654, line: 202, baseType: !1147, size: 128)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !654, line: 200, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !654, line: 200, size: 128, elements: !1149)
!1149 = !{!1150, !1151, !1152}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1148, file: !654, line: 200, baseType: !7, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1148, file: !654, line: 200, baseType: !7, size: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1148, file: !654, line: 200, baseType: !685, size: 64, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1133, file: !654, line: 234, baseType: !1142, size: 64, offset: 256)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1127, file: !654, line: 197, baseType: !532, size: 64, offset: 256)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !667, file: !654, line: 319, baseType: !539, size: 256)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !667, file: !654, line: 320, baseType: !558, size: 192)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !479, file: !135, line: 3384, baseType: !1158, size: 1472)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !1159)
!1159 = !{!1160, !1181, !1182, !1183, !1184}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1158, file: !135, line: 3115, baseType: !1161, size: 1216)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !1162)
!1162 = !{!1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1161, file: !135, line: 2985, baseType: !647, size: 960)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1161, file: !135, line: 2986, baseType: !476, size: 64, offset: 960)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1161, file: !135, line: 2987, baseType: !476, size: 64, offset: 1024)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1161, file: !135, line: 2988, baseType: !476, size: 64, offset: 1088)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1161, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1161, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1161, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1161, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1161, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1161, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1161, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1161, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1161, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1161, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1161, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1161, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1161, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1161, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1158, file: !135, line: 3117, baseType: !476, size: 64, offset: 1216)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1158, file: !135, line: 3119, baseType: !476, size: 64, offset: 1280)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1158, file: !135, line: 3121, baseType: !476, size: 64, offset: 1344)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1158, file: !135, line: 3123, baseType: !476, size: 64, offset: 1408)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !479, file: !135, line: 3385, baseType: !1186, size: 1088)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !1187)
!1187 = !{!1188, !1189, !1190}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1186, file: !135, line: 2875, baseType: !647, size: 960)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1186, file: !135, line: 2876, baseType: !651, size: 64, offset: 960)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1186, file: !135, line: 2877, baseType: !1191, size: 64, offset: 1024)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1193, line: 172, size: 128, elements: !1194)
!1193 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1194 = !{!1195, !1196, !1197, !1198, !1199, !1200, !1201}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1192, file: !1193, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1192, file: !1193, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1192, file: !1193, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1192, file: !1193, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1192, file: !1193, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1192, file: !1193, line: 195, baseType: !7, size: 32, offset: 32)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1192, file: !1193, line: 199, baseType: !476, size: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !479, file: !135, line: 3386, baseType: !1161, size: 1216)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !479, file: !135, line: 3387, baseType: !1204, size: 1280)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !1205)
!1205 = !{!1206, !1207}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1204, file: !135, line: 3094, baseType: !1161, size: 1216)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1204, file: !135, line: 3095, baseType: !1191, size: 64, offset: 1216)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !479, file: !135, line: 3388, baseType: !1209, size: 1216)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1215, !1216}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1209, file: !135, line: 2825, baseType: !609, size: 896)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1209, file: !135, line: 2827, baseType: !476, size: 64, offset: 896)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1209, file: !135, line: 2828, baseType: !476, size: 64, offset: 960)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1209, file: !135, line: 2829, baseType: !476, size: 64, offset: 1024)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1209, file: !135, line: 2830, baseType: !476, size: 64, offset: 1088)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1209, file: !135, line: 2831, baseType: !476, size: 64, offset: 1152)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !479, file: !135, line: 3389, baseType: !1218, size: 1024)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !1219)
!1219 = !{!1220, !1221, !1222}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1218, file: !135, line: 2851, baseType: !647, size: 960)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1218, file: !135, line: 2852, baseType: !469, size: 32, offset: 960)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1218, file: !135, line: 2853, baseType: !469, size: 32, offset: 992)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !479, file: !135, line: 3390, baseType: !1224, size: 1024)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !1225)
!1225 = !{!1226, !1227}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1224, file: !135, line: 2858, baseType: !647, size: 960)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1224, file: !135, line: 2859, baseType: !1191, size: 64, offset: 960)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !479, file: !135, line: 3391, baseType: !1229, size: 960)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !1230)
!1230 = !{!1231}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1229, file: !135, line: 2863, baseType: !647, size: 960)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !479, file: !135, line: 3392, baseType: !1233, size: 1472)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !1234)
!1234 = !{!1235}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1233, file: !135, line: 3305, baseType: !1158, size: 1472)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !479, file: !135, line: 3393, baseType: !1237, size: 1792)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !1238)
!1238 = !{!1239, !1240, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1237, file: !135, line: 3249, baseType: !1158, size: 1472)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1237, file: !135, line: 3251, baseType: !1241, size: 64, offset: 1472)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1243, line: 463, size: 1152, elements: !1244)
!1243 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1244 = !{!1245, !1248, !1279, !1280, !1395, !1403, !1404, !1405, !1406, !1407, !1408, !1432, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1242, file: !1243, line: 464, baseType: !1246, size: 64)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1243, line: 464, flags: DIFlagFwdDecl)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1242, file: !1243, line: 467, baseType: !1249, size: 64, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !343, line: 374, size: 640, elements: !1251)
!1251 = !{!1252, !1254, !1255, !1268, !1269, !1270, !1271, !1272, !1273, !1275, !1277, !1278}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1250, file: !343, line: 377, baseType: !1253, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !477, line: 111, baseType: !764)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1250, file: !343, line: 378, baseType: !1253, size: 64, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1250, file: !343, line: 381, baseType: !1256, size: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !343, line: 282, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !343, line: 282, size: 128, elements: !1259)
!1259 = !{!1260}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1258, file: !343, line: 282, baseType: !1261, size: 128)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !343, line: 281, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !343, line: 281, size: 128, elements: !1263)
!1263 = !{!1264, !1265, !1266}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1262, file: !343, line: 281, baseType: !7, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1262, file: !343, line: 281, baseType: !7, size: 32, offset: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1262, file: !343, line: 281, baseType: !1267, size: 64, offset: 64)
!1267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 64, elements: !575)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1250, file: !343, line: 384, baseType: !469, size: 32, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1250, file: !343, line: 387, baseType: !469, size: 32, offset: 224)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1250, file: !343, line: 390, baseType: !469, size: 32, offset: 256)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1250, file: !343, line: 394, baseType: !1256, size: 64, offset: 320)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1250, file: !343, line: 396, baseType: !342, size: 32, offset: 384)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1250, file: !343, line: 399, baseType: !1274, size: 64, offset: 416)
!1274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 64, elements: !719)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1250, file: !343, line: 402, baseType: !1276, size: 64, offset: 480)
!1276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !719)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1250, file: !343, line: 406, baseType: !469, size: 32, offset: 544)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1250, file: !343, line: 409, baseType: !469, size: 32, offset: 576)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1242, file: !1243, line: 470, baseType: !791, size: 64, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1242, file: !1243, line: 473, baseType: !1281, size: 64, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1193, line: 39, size: 1152, elements: !1283)
!1283 = !{!1284, !1334, !1347, !1359, !1360, !1372, !1373, !1377, !1378, !1379, !1380, !1381}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1282, file: !1193, line: 41, baseType: !1285, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1286, line: 144, baseType: !1287)
!1286 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1286, line: 100, size: 896, elements: !1289)
!1289 = !{!1290, !1298, !1303, !1308, !1310, !1311, !1312, !1313, !1314, !1315, !1320, !1322, !1323, !1328, !1333}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1288, file: !1286, line: 102, baseType: !1291, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1286, line: 52, baseType: !1292)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!1295, !1296}
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1286, line: 47, baseType: !7)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1288, file: !1286, line: 105, baseType: !1299, size: 64, offset: 64)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1286, line: 59, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!469, !1296, !1296}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1288, file: !1286, line: 108, baseType: !1304, size: 64, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1286, line: 63, baseType: !1305)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{null, !473}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1288, file: !1286, line: 111, baseType: !1309, size: 64, offset: 192)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1288, file: !1286, line: 114, baseType: !946, size: 64, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1288, file: !1286, line: 117, baseType: !946, size: 64, offset: 320)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1288, file: !1286, line: 120, baseType: !946, size: 64, offset: 384)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1288, file: !1286, line: 124, baseType: !7, size: 32, offset: 448)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1288, file: !1286, line: 128, baseType: !7, size: 32, offset: 480)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1288, file: !1286, line: 131, baseType: !1316, size: 64, offset: 512)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1286, line: 75, baseType: !1317)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!473, !946, !946}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1288, file: !1286, line: 132, baseType: !1321, size: 64, offset: 576)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1286, line: 78, baseType: !1305)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1288, file: !1286, line: 135, baseType: !473, size: 64, offset: 640)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1288, file: !1286, line: 136, baseType: !1324, size: 64, offset: 704)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1286, line: 82, baseType: !1325)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{!473, !473, !946, !946}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1288, file: !1286, line: 137, baseType: !1329, size: 64, offset: 768)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1286, line: 83, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{null, !473, !473}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1288, file: !1286, line: 141, baseType: !7, size: 32, offset: 832)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1282, file: !1193, line: 48, baseType: !1335, size: 64, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !391, line: 35, baseType: !1337)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !391, line: 35, size: 128, elements: !1338)
!1338 = !{!1339}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1337, file: !391, line: 35, baseType: !1340, size: 128)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !391, line: 33, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !391, line: 33, size: 128, elements: !1342)
!1342 = !{!1343, !1344, !1345}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1341, file: !391, line: 33, baseType: !7, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1341, file: !391, line: 33, baseType: !7, size: 32, offset: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1341, file: !391, line: 33, baseType: !1346, size: 64, offset: 64)
!1346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !800, size: 64, elements: !575)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1282, file: !1193, line: 51, baseType: !1348, size: 64, offset: 128)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !1350)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !1351)
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1350, file: !135, line: 183, baseType: !1353, size: 128)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !1355)
!1355 = !{!1356, !1357, !1358}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1354, file: !135, line: 182, baseType: !7, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1354, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1354, file: !135, line: 182, baseType: !854, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1282, file: !1193, line: 54, baseType: !476, size: 64, offset: 192)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1282, file: !1193, line: 57, baseType: !1361, size: 128, offset: 256)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1362, line: 31, size: 128, elements: !1363)
!1362 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1363 = !{!1364, !1365, !1366, !1367, !1368, !1369, !1370}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1361, file: !1362, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1361, file: !1362, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1361, file: !1362, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1361, file: !1362, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1361, file: !1362, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1361, file: !1362, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1361, file: !1362, line: 56, baseType: !1371, size: 64, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !477, line: 47, baseType: !703)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1282, file: !1193, line: 60, baseType: !1361, size: 128, offset: 384)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1282, file: !1193, line: 64, baseType: !1374, size: 64, offset: 512)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1376, line: 33, flags: DIFlagFwdDecl)
!1376 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1282, file: !1193, line: 67, baseType: !476, size: 64, offset: 576)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1282, file: !1193, line: 73, baseType: !1285, size: 64, offset: 640)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1282, file: !1193, line: 77, baseType: !1371, size: 64, offset: 704)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1282, file: !1193, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1282, file: !1193, line: 82, baseType: !1382, size: 320, offset: 832)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !831, line: 62, size: 320, elements: !1383)
!1383 = !{!1384, !1390, !1391, !1392, !1393, !1394}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1382, file: !831, line: 63, baseType: !1385, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !831, line: 56, size: 128, elements: !1387)
!1387 = !{!1388, !1389}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1386, file: !831, line: 57, baseType: !1385, size: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1386, file: !831, line: 58, baseType: !574, size: 8, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1382, file: !831, line: 64, baseType: !7, size: 32, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1382, file: !831, line: 66, baseType: !7, size: 32, offset: 96)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1382, file: !831, line: 68, baseType: !468, size: 8, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1382, file: !831, line: 70, baseType: !829, size: 64, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1382, file: !831, line: 71, baseType: !837, size: 64, offset: 256)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1242, file: !1243, line: 476, baseType: !1396, size: 64, offset: 256)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !330, line: 187, size: 256, elements: !1398)
!1398 = !{!1399, !1400, !1401, !1402}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1397, file: !330, line: 189, baseType: !469, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1397, file: !330, line: 192, baseType: !1031, size: 64, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1397, file: !330, line: 197, baseType: !1285, size: 64, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1397, file: !330, line: 200, baseType: !1016, size: 64, offset: 192)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1242, file: !1243, line: 479, baseType: !1285, size: 64, offset: 320)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1242, file: !1243, line: 484, baseType: !476, size: 64, offset: 384)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1242, file: !1243, line: 488, baseType: !476, size: 64, offset: 448)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1242, file: !1243, line: 493, baseType: !476, size: 64, offset: 512)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1242, file: !1243, line: 496, baseType: !476, size: 64, offset: 576)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1242, file: !1243, line: 501, baseType: !1409, size: 64, offset: 640)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !354, line: 2355, size: 576, elements: !1411)
!1411 = !{!1412, !1415, !1416, !1417, !1418, !1420, !1421, !1426, !1427, !1428, !1429, !1430, !1431}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1410, file: !354, line: 2356, baseType: !1413, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !354, line: 2356, flags: DIFlagFwdDecl)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1410, file: !354, line: 2357, baseType: !474, size: 64, offset: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1410, file: !354, line: 2358, baseType: !469, size: 32, offset: 128)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1410, file: !354, line: 2359, baseType: !469, size: 32, offset: 160)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1410, file: !354, line: 2360, baseType: !1419, size: 128, offset: 192)
!1419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 128, elements: !743)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1410, file: !354, line: 2364, baseType: !469, size: 32, offset: 320)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1410, file: !354, line: 2367, baseType: !1422, size: 128, offset: 384)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !354, line: 2349, size: 128, elements: !1423)
!1423 = !{!1424, !1425}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1422, file: !354, line: 2351, baseType: !651, size: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1422, file: !354, line: 2352, baseType: !532, size: 64, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1410, file: !354, line: 2371, baseType: !353, size: 32, offset: 512)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1410, file: !354, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1410, file: !354, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1410, file: !354, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1410, file: !354, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1410, file: !354, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1242, file: !1243, line: 504, baseType: !1433, size: 64, offset: 704)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1243, line: 504, flags: DIFlagFwdDecl)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1242, file: !1243, line: 507, baseType: !1285, size: 64, offset: 768)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1242, file: !1243, line: 510, baseType: !469, size: 32, offset: 832)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1242, file: !1243, line: 513, baseType: !469, size: 32, offset: 864)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1242, file: !1243, line: 516, baseType: !601, size: 32, offset: 896)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1242, file: !1243, line: 519, baseType: !601, size: 32, offset: 928)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1242, file: !1243, line: 522, baseType: !7, size: 32, offset: 960)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1242, file: !1243, line: 523, baseType: !7, size: 32, offset: 992)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1242, file: !1243, line: 528, baseType: !474, size: 64, offset: 1024)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1242, file: !1243, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1242, file: !1243, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1242, file: !1243, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1242, file: !1243, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1242, file: !1243, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1242, file: !1243, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1242, file: !1243, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1242, file: !1243, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1242, file: !1243, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1242, file: !1243, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1242, file: !1243, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1242, file: !1243, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1242, file: !1243, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1242, file: !1243, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1242, file: !1243, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1242, file: !1243, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1237, file: !135, line: 3254, baseType: !476, size: 64, offset: 1536)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1237, file: !135, line: 3257, baseType: !476, size: 64, offset: 1600)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1237, file: !135, line: 3258, baseType: !476, size: 64, offset: 1664)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1237, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1237, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1237, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1237, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1237, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1237, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1237, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1237, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1237, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1237, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1237, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1237, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1237, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1237, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1237, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1237, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1237, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1237, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !479, file: !135, line: 3394, baseType: !1481, size: 1344)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !1482)
!1482 = !{!1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1481, file: !135, line: 2280, baseType: !515, size: 192)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1481, file: !135, line: 2281, baseType: !476, size: 64, offset: 192)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1481, file: !135, line: 2282, baseType: !476, size: 64, offset: 256)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1481, file: !135, line: 2283, baseType: !476, size: 64, offset: 320)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1481, file: !135, line: 2284, baseType: !476, size: 64, offset: 384)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1481, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1481, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1481, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1481, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1481, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1481, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1481, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1481, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1481, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1481, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1481, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1481, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1481, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1481, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1481, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1481, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1481, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1481, file: !135, line: 2306, baseType: !1110, size: 32, offset: 544)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1481, file: !135, line: 2307, baseType: !476, size: 64, offset: 576)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1481, file: !135, line: 2308, baseType: !476, size: 64, offset: 640)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1481, file: !135, line: 2314, baseType: !1509, size: 64, offset: 704)
!1509 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !1510)
!1510 = !{!1511, !1512, !1513}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1509, file: !135, line: 2310, baseType: !469, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1509, file: !135, line: 2311, baseType: !474, size: 64)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1509, file: !135, line: 2312, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1481, file: !135, line: 2315, baseType: !476, size: 64, offset: 768)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1481, file: !135, line: 2316, baseType: !476, size: 64, offset: 832)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1481, file: !135, line: 2317, baseType: !476, size: 64, offset: 896)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1481, file: !135, line: 2318, baseType: !476, size: 64, offset: 960)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1481, file: !135, line: 2319, baseType: !476, size: 64, offset: 1024)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1481, file: !135, line: 2320, baseType: !476, size: 64, offset: 1088)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1481, file: !135, line: 2321, baseType: !476, size: 64, offset: 1152)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1481, file: !135, line: 2322, baseType: !476, size: 64, offset: 1216)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1481, file: !135, line: 2324, baseType: !1525, size: 64, offset: 1280)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !135, line: 2324, flags: DIFlagFwdDecl)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !479, file: !135, line: 3395, baseType: !1528, size: 320)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !1529)
!1529 = !{!1530, !1531, !1532}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1528, file: !135, line: 1470, baseType: !515, size: 192)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1528, file: !135, line: 1471, baseType: !476, size: 64, offset: 192)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1528, file: !135, line: 1472, baseType: !476, size: 64, offset: 256)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !479, file: !135, line: 3396, baseType: !1534, size: 320)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !1535)
!1535 = !{!1536, !1537, !1538}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1534, file: !135, line: 1483, baseType: !515, size: 192)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1534, file: !135, line: 1484, baseType: !469, size: 32, offset: 192)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1534, file: !135, line: 1485, baseType: !854, size: 64, offset: 256)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !479, file: !135, line: 3397, baseType: !1540, size: 384)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !1541)
!1541 = !{!1542, !1543, !1544, !1545}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1540, file: !135, line: 1830, baseType: !515, size: 192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1540, file: !135, line: 1831, baseType: !601, size: 32, offset: 192)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1540, file: !135, line: 1832, baseType: !476, size: 64, offset: 256)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1540, file: !135, line: 1835, baseType: !854, size: 64, offset: 320)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !479, file: !135, line: 3398, baseType: !1547, size: 704)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !1548)
!1548 = !{!1549, !1550, !1551, !1552, !1553, !1558}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1547, file: !135, line: 1899, baseType: !515, size: 192)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1547, file: !135, line: 1902, baseType: !476, size: 64, offset: 192)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1547, file: !135, line: 1905, baseType: !800, size: 64, offset: 256)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1547, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1547, file: !135, line: 1911, baseType: !1554, size: 64, offset: 384)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1193, line: 117, size: 128, elements: !1556)
!1556 = !{!1557}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1555, file: !1193, line: 120, baseType: !1361, size: 128)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1547, file: !135, line: 1914, baseType: !842, size: 256, offset: 448)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !479, file: !135, line: 3399, baseType: !1560, size: 704)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !1561)
!1561 = !{!1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1560, file: !135, line: 2009, baseType: !515, size: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1560, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1560, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1560, file: !135, line: 2014, baseType: !601, size: 32, offset: 224)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1560, file: !135, line: 2016, baseType: !476, size: 64, offset: 256)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1560, file: !135, line: 2017, baseType: !1348, size: 64, offset: 320)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1560, file: !135, line: 2019, baseType: !476, size: 64, offset: 384)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1560, file: !135, line: 2020, baseType: !476, size: 64, offset: 448)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1560, file: !135, line: 2021, baseType: !476, size: 64, offset: 512)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1560, file: !135, line: 2022, baseType: !476, size: 64, offset: 576)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1560, file: !135, line: 2023, baseType: !476, size: 64, offset: 640)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !479, file: !135, line: 3400, baseType: !1574, size: 832)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !1575)
!1575 = !{!1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1574, file: !135, line: 2431, baseType: !515, size: 192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1574, file: !135, line: 2433, baseType: !476, size: 64, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1574, file: !135, line: 2434, baseType: !476, size: 64, offset: 256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1574, file: !135, line: 2435, baseType: !476, size: 64, offset: 320)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1574, file: !135, line: 2436, baseType: !476, size: 64, offset: 384)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1574, file: !135, line: 2437, baseType: !1348, size: 64, offset: 448)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1574, file: !135, line: 2438, baseType: !476, size: 64, offset: 512)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1574, file: !135, line: 2440, baseType: !476, size: 64, offset: 576)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1574, file: !135, line: 2441, baseType: !476, size: 64, offset: 640)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1574, file: !135, line: 2443, baseType: !1586, size: 128, offset: 704)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !1587)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !1588)
!1588 = !{!1589}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1587, file: !135, line: 182, baseType: !1353, size: 128)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !479, file: !135, line: 3401, baseType: !1591, size: 320)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !1592)
!1592 = !{!1593, !1594, !1601}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1591, file: !135, line: 3329, baseType: !515, size: 192)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1591, file: !135, line: 3330, baseType: !1595, size: 64, offset: 192)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !1597)
!1597 = !{!1598, !1599, !1600}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1596, file: !135, line: 3322, baseType: !1595, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1596, file: !135, line: 3323, baseType: !1595, size: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1596, file: !135, line: 3324, baseType: !476, size: 64, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1591, file: !135, line: 3331, baseType: !1595, size: 64, offset: 256)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !479, file: !135, line: 3402, baseType: !1603, size: 256)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !1604)
!1604 = !{!1605, !1606}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1603, file: !135, line: 1541, baseType: !515, size: 192)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1603, file: !135, line: 1542, baseType: !1607, size: 64, offset: 192)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !1609)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !1610)
!1610 = !{!1611}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1609, file: !135, line: 1538, baseType: !1612, size: 192)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !1614)
!1614 = !{!1615, !1616, !1617}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1613, file: !135, line: 1537, baseType: !7, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1613, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1613, file: !135, line: 1537, baseType: !1618, size: 128, offset: 64)
!1618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1619, size: 128, elements: !575)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !1621)
!1621 = !{!1622, !1623}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1620, file: !135, line: 1533, baseType: !476, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1620, file: !135, line: 1534, baseType: !476, size: 64, offset: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !479, file: !135, line: 3403, baseType: !1625, size: 512)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !1626)
!1626 = !{!1627, !1628, !1629, !1630, !1636, !1637, !1638}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1625, file: !135, line: 1939, baseType: !515, size: 192)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1625, file: !135, line: 1940, baseType: !601, size: 32, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1625, file: !135, line: 1941, baseType: !358, size: 32, offset: 224)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1625, file: !135, line: 1946, baseType: !1631, size: 32, offset: 256)
!1631 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !1632)
!1632 = !{!1633, !1634, !1635}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1631, file: !135, line: 1943, baseType: !376, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1631, file: !135, line: 1944, baseType: !383, size: 32)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1631, file: !135, line: 1945, baseType: !134, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1625, file: !135, line: 1950, baseType: !790, size: 64, offset: 320)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1625, file: !135, line: 1951, baseType: !790, size: 64, offset: 384)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1625, file: !135, line: 1953, baseType: !854, size: 64, offset: 448)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !479, file: !135, line: 3404, baseType: !1640, size: 1664)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !1641)
!1641 = !{!1642, !1643}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1640, file: !135, line: 3338, baseType: !515, size: 192)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1640, file: !135, line: 3341, baseType: !1644, size: 1472, offset: 192)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1645, line: 410, size: 1472, elements: !1646)
!1645 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1646 = !{!1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1644, file: !1645, line: 412, baseType: !469, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1644, file: !1645, line: 413, baseType: !469, size: 32, offset: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1644, file: !1645, line: 414, baseType: !469, size: 32, offset: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1644, file: !1645, line: 415, baseType: !469, size: 32, offset: 96)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1644, file: !1645, line: 416, baseType: !469, size: 32, offset: 128)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1644, file: !1645, line: 417, baseType: !469, size: 32, offset: 160)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1644, file: !1645, line: 418, baseType: !468, size: 8, offset: 192)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1644, file: !1645, line: 419, baseType: !468, size: 8, offset: 200)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1644, file: !1645, line: 420, baseType: !1656, size: 8, offset: 208)
!1656 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1644, file: !1645, line: 421, baseType: !1656, size: 8, offset: 216)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1644, file: !1645, line: 422, baseType: !1656, size: 8, offset: 224)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1644, file: !1645, line: 423, baseType: !1656, size: 8, offset: 232)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1644, file: !1645, line: 424, baseType: !1656, size: 8, offset: 240)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1644, file: !1645, line: 425, baseType: !1656, size: 8, offset: 248)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1644, file: !1645, line: 426, baseType: !1656, size: 8, offset: 256)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1644, file: !1645, line: 427, baseType: !1656, size: 8, offset: 264)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1644, file: !1645, line: 428, baseType: !1656, size: 8, offset: 272)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1644, file: !1645, line: 429, baseType: !1656, size: 8, offset: 280)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1644, file: !1645, line: 430, baseType: !1656, size: 8, offset: 288)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1644, file: !1645, line: 431, baseType: !1656, size: 8, offset: 296)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1644, file: !1645, line: 432, baseType: !1656, size: 8, offset: 304)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1644, file: !1645, line: 433, baseType: !1656, size: 8, offset: 312)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1644, file: !1645, line: 434, baseType: !1656, size: 8, offset: 320)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1644, file: !1645, line: 435, baseType: !1656, size: 8, offset: 328)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1644, file: !1645, line: 436, baseType: !1656, size: 8, offset: 336)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1644, file: !1645, line: 437, baseType: !1656, size: 8, offset: 344)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1644, file: !1645, line: 438, baseType: !1656, size: 8, offset: 352)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1644, file: !1645, line: 439, baseType: !1656, size: 8, offset: 360)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1644, file: !1645, line: 440, baseType: !1656, size: 8, offset: 368)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1644, file: !1645, line: 441, baseType: !1656, size: 8, offset: 376)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1644, file: !1645, line: 442, baseType: !1656, size: 8, offset: 384)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1644, file: !1645, line: 443, baseType: !1656, size: 8, offset: 392)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1644, file: !1645, line: 444, baseType: !1656, size: 8, offset: 400)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1644, file: !1645, line: 445, baseType: !1656, size: 8, offset: 408)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1644, file: !1645, line: 446, baseType: !1656, size: 8, offset: 416)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1644, file: !1645, line: 447, baseType: !1656, size: 8, offset: 424)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1644, file: !1645, line: 448, baseType: !1656, size: 8, offset: 432)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1644, file: !1645, line: 449, baseType: !1656, size: 8, offset: 440)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1644, file: !1645, line: 450, baseType: !1656, size: 8, offset: 448)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1644, file: !1645, line: 451, baseType: !1656, size: 8, offset: 456)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1644, file: !1645, line: 452, baseType: !1656, size: 8, offset: 464)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1644, file: !1645, line: 453, baseType: !1656, size: 8, offset: 472)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1644, file: !1645, line: 454, baseType: !1656, size: 8, offset: 480)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1644, file: !1645, line: 455, baseType: !1656, size: 8, offset: 488)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1644, file: !1645, line: 456, baseType: !1656, size: 8, offset: 496)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1644, file: !1645, line: 457, baseType: !1656, size: 8, offset: 504)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1644, file: !1645, line: 458, baseType: !1656, size: 8, offset: 512)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1644, file: !1645, line: 459, baseType: !1656, size: 8, offset: 520)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1644, file: !1645, line: 460, baseType: !1656, size: 8, offset: 528)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1644, file: !1645, line: 461, baseType: !1656, size: 8, offset: 536)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1644, file: !1645, line: 462, baseType: !1656, size: 8, offset: 544)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1644, file: !1645, line: 463, baseType: !1656, size: 8, offset: 552)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1644, file: !1645, line: 464, baseType: !1656, size: 8, offset: 560)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1644, file: !1645, line: 465, baseType: !1656, size: 8, offset: 568)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1644, file: !1645, line: 466, baseType: !1656, size: 8, offset: 576)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1644, file: !1645, line: 467, baseType: !1656, size: 8, offset: 584)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1644, file: !1645, line: 468, baseType: !1656, size: 8, offset: 592)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1644, file: !1645, line: 469, baseType: !1656, size: 8, offset: 600)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1644, file: !1645, line: 470, baseType: !1656, size: 8, offset: 608)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1644, file: !1645, line: 471, baseType: !1656, size: 8, offset: 616)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1644, file: !1645, line: 472, baseType: !1656, size: 8, offset: 624)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1644, file: !1645, line: 473, baseType: !1656, size: 8, offset: 632)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1644, file: !1645, line: 474, baseType: !1656, size: 8, offset: 640)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1644, file: !1645, line: 475, baseType: !1656, size: 8, offset: 648)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1644, file: !1645, line: 476, baseType: !1656, size: 8, offset: 656)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1644, file: !1645, line: 477, baseType: !1656, size: 8, offset: 664)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1644, file: !1645, line: 478, baseType: !1656, size: 8, offset: 672)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1644, file: !1645, line: 479, baseType: !1656, size: 8, offset: 680)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1644, file: !1645, line: 480, baseType: !1656, size: 8, offset: 688)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1644, file: !1645, line: 481, baseType: !1656, size: 8, offset: 696)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1644, file: !1645, line: 482, baseType: !1656, size: 8, offset: 704)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1644, file: !1645, line: 483, baseType: !1656, size: 8, offset: 712)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1644, file: !1645, line: 484, baseType: !1656, size: 8, offset: 720)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1644, file: !1645, line: 485, baseType: !1656, size: 8, offset: 728)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1644, file: !1645, line: 486, baseType: !1656, size: 8, offset: 736)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1644, file: !1645, line: 487, baseType: !1656, size: 8, offset: 744)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1644, file: !1645, line: 488, baseType: !1656, size: 8, offset: 752)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1644, file: !1645, line: 489, baseType: !1656, size: 8, offset: 760)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1644, file: !1645, line: 490, baseType: !1656, size: 8, offset: 768)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1644, file: !1645, line: 491, baseType: !1656, size: 8, offset: 776)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1644, file: !1645, line: 492, baseType: !1656, size: 8, offset: 784)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1644, file: !1645, line: 493, baseType: !1656, size: 8, offset: 792)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1644, file: !1645, line: 494, baseType: !1656, size: 8, offset: 800)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1644, file: !1645, line: 495, baseType: !1656, size: 8, offset: 808)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1644, file: !1645, line: 496, baseType: !1656, size: 8, offset: 816)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1644, file: !1645, line: 497, baseType: !1656, size: 8, offset: 824)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1644, file: !1645, line: 498, baseType: !1656, size: 8, offset: 832)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1644, file: !1645, line: 499, baseType: !1656, size: 8, offset: 840)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1644, file: !1645, line: 500, baseType: !1656, size: 8, offset: 848)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1644, file: !1645, line: 501, baseType: !1656, size: 8, offset: 856)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1644, file: !1645, line: 502, baseType: !1656, size: 8, offset: 864)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1644, file: !1645, line: 503, baseType: !1656, size: 8, offset: 872)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1644, file: !1645, line: 504, baseType: !1656, size: 8, offset: 880)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1644, file: !1645, line: 505, baseType: !1656, size: 8, offset: 888)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1644, file: !1645, line: 506, baseType: !1656, size: 8, offset: 896)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1644, file: !1645, line: 507, baseType: !1656, size: 8, offset: 904)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1644, file: !1645, line: 508, baseType: !1656, size: 8, offset: 912)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1644, file: !1645, line: 509, baseType: !1656, size: 8, offset: 920)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1644, file: !1645, line: 510, baseType: !1656, size: 8, offset: 928)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1644, file: !1645, line: 511, baseType: !1656, size: 8, offset: 936)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1644, file: !1645, line: 512, baseType: !1656, size: 8, offset: 944)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1644, file: !1645, line: 513, baseType: !1656, size: 8, offset: 952)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1644, file: !1645, line: 514, baseType: !1656, size: 8, offset: 960)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1644, file: !1645, line: 515, baseType: !1656, size: 8, offset: 968)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1644, file: !1645, line: 516, baseType: !1656, size: 8, offset: 976)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1644, file: !1645, line: 517, baseType: !1656, size: 8, offset: 984)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1644, file: !1645, line: 518, baseType: !1656, size: 8, offset: 992)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1644, file: !1645, line: 519, baseType: !1656, size: 8, offset: 1000)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1644, file: !1645, line: 520, baseType: !1656, size: 8, offset: 1008)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1644, file: !1645, line: 521, baseType: !1656, size: 8, offset: 1016)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1644, file: !1645, line: 522, baseType: !1656, size: 8, offset: 1024)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1644, file: !1645, line: 523, baseType: !1656, size: 8, offset: 1032)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1644, file: !1645, line: 524, baseType: !1656, size: 8, offset: 1040)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1644, file: !1645, line: 525, baseType: !1656, size: 8, offset: 1048)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1644, file: !1645, line: 526, baseType: !1656, size: 8, offset: 1056)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1644, file: !1645, line: 527, baseType: !1656, size: 8, offset: 1064)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1644, file: !1645, line: 528, baseType: !1656, size: 8, offset: 1072)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1644, file: !1645, line: 529, baseType: !1656, size: 8, offset: 1080)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1644, file: !1645, line: 530, baseType: !1656, size: 8, offset: 1088)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1644, file: !1645, line: 531, baseType: !1656, size: 8, offset: 1096)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1644, file: !1645, line: 532, baseType: !1656, size: 8, offset: 1104)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1644, file: !1645, line: 533, baseType: !1656, size: 8, offset: 1112)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1644, file: !1645, line: 534, baseType: !1656, size: 8, offset: 1120)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1644, file: !1645, line: 535, baseType: !1656, size: 8, offset: 1128)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1644, file: !1645, line: 536, baseType: !1656, size: 8, offset: 1136)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1644, file: !1645, line: 537, baseType: !1656, size: 8, offset: 1144)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1644, file: !1645, line: 538, baseType: !1656, size: 8, offset: 1152)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1644, file: !1645, line: 539, baseType: !1656, size: 8, offset: 1160)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1644, file: !1645, line: 540, baseType: !1656, size: 8, offset: 1168)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1644, file: !1645, line: 541, baseType: !1656, size: 8, offset: 1176)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1644, file: !1645, line: 542, baseType: !1656, size: 8, offset: 1184)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1644, file: !1645, line: 543, baseType: !1656, size: 8, offset: 1192)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1644, file: !1645, line: 544, baseType: !1656, size: 8, offset: 1200)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1644, file: !1645, line: 545, baseType: !1656, size: 8, offset: 1208)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1644, file: !1645, line: 546, baseType: !1656, size: 8, offset: 1216)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1644, file: !1645, line: 547, baseType: !1656, size: 8, offset: 1224)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1644, file: !1645, line: 548, baseType: !1656, size: 8, offset: 1232)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1644, file: !1645, line: 549, baseType: !1656, size: 8, offset: 1240)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1644, file: !1645, line: 550, baseType: !1656, size: 8, offset: 1248)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1644, file: !1645, line: 551, baseType: !1656, size: 8, offset: 1256)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1644, file: !1645, line: 552, baseType: !1656, size: 8, offset: 1264)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1644, file: !1645, line: 553, baseType: !1656, size: 8, offset: 1272)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1644, file: !1645, line: 554, baseType: !1656, size: 8, offset: 1280)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1644, file: !1645, line: 555, baseType: !1656, size: 8, offset: 1288)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1644, file: !1645, line: 556, baseType: !1656, size: 8, offset: 1296)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1644, file: !1645, line: 557, baseType: !1656, size: 8, offset: 1304)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1644, file: !1645, line: 558, baseType: !1656, size: 8, offset: 1312)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1644, file: !1645, line: 559, baseType: !1656, size: 8, offset: 1320)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1644, file: !1645, line: 560, baseType: !1656, size: 8, offset: 1328)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1644, file: !1645, line: 561, baseType: !1656, size: 8, offset: 1336)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1644, file: !1645, line: 562, baseType: !1656, size: 8, offset: 1344)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1644, file: !1645, line: 563, baseType: !1656, size: 8, offset: 1352)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1644, file: !1645, line: 564, baseType: !1656, size: 8, offset: 1360)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1644, file: !1645, line: 565, baseType: !1656, size: 8, offset: 1368)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1644, file: !1645, line: 566, baseType: !1656, size: 8, offset: 1376)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1644, file: !1645, line: 567, baseType: !1656, size: 8, offset: 1384)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1644, file: !1645, line: 568, baseType: !1656, size: 8, offset: 1392)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1644, file: !1645, line: 569, baseType: !1656, size: 8, offset: 1400)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1644, file: !1645, line: 570, baseType: !1656, size: 8, offset: 1408)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1644, file: !1645, line: 571, baseType: !1656, size: 8, offset: 1416)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1644, file: !1645, line: 572, baseType: !1656, size: 8, offset: 1424)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1644, file: !1645, line: 573, baseType: !1656, size: 8, offset: 1432)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1644, file: !1645, line: 574, baseType: !1656, size: 8, offset: 1440)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !479, file: !135, line: 3405, baseType: !1812, size: 384)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !1813)
!1813 = !{!1814, !1815}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1812, file: !135, line: 3353, baseType: !515, size: 192)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1812, file: !135, line: 3356, baseType: !1816, size: 192, offset: 192)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1645, line: 578, size: 192, elements: !1817)
!1817 = !{!1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1816, file: !1645, line: 580, baseType: !469, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1816, file: !1645, line: 581, baseType: !469, size: 32, offset: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1816, file: !1645, line: 582, baseType: !469, size: 32, offset: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1816, file: !1645, line: 583, baseType: !469, size: 32, offset: 96)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1816, file: !1645, line: 584, baseType: !468, size: 8, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1816, file: !1645, line: 585, baseType: !468, size: 8, offset: 136)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1816, file: !1645, line: 586, baseType: !468, size: 8, offset: 144)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1816, file: !1645, line: 587, baseType: !468, size: 8, offset: 152)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1816, file: !1645, line: 588, baseType: !468, size: 8, offset: 160)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1816, file: !1645, line: 589, baseType: !468, size: 8, offset: 168)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1816, file: !1645, line: 590, baseType: !468, size: 8, offset: 176)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scev_info_str", file: !3, line: 285, size: 192, elements: !1831)
!1831 = !{!1832, !1833, !1834}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "instantiated_below", scope: !1830, file: !3, line: 286, baseType: !1253, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1830, file: !3, line: 287, baseType: !476, size: 64, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "chrec", scope: !1830, file: !3, line: 288, baseType: !476, size: 64, offset: 128)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !479)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !802)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1830)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chrec_stats", file: !3, line: 2809, size: 192, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1848, !1849}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "nb_chrecs", scope: !1842, file: !3, line: 2811, baseType: !7, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "nb_affine", scope: !1842, file: !3, line: 2812, baseType: !7, size: 32, offset: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "nb_affine_multivar", scope: !1842, file: !3, line: 2813, baseType: !7, size: 32, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "nb_higher_poly", scope: !1842, file: !3, line: 2814, baseType: !7, size: 32, offset: 96)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "nb_chrec_dont_know", scope: !1842, file: !3, line: 2815, baseType: !7, size: 32, offset: 128)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "nb_undetermined", scope: !1842, file: !3, line: 2816, baseType: !7, size: 32, offset: 160)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1852, line: 32, baseType: !1853)
!1852 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1852, line: 32, size: 96, elements: !1854)
!1854 = !{!1855}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1853, file: !1852, line: 32, baseType: !1856, size: 96)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1852, line: 31, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1852, line: 31, size: 96, elements: !1858)
!1858 = !{!1859, !1860, !1861}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1857, file: !1852, line: 31, baseType: !7, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1857, file: !1852, line: 31, baseType: !7, size: 32, offset: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1857, file: !1852, line: 31, baseType: !1862, size: 32, offset: 64)
!1862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 32, elements: !575)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_heap", file: !391, line: 34, baseType: !1865)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_heap", file: !391, line: 34, size: 128, elements: !1866)
!1866 = !{!1867}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1865, file: !391, line: 34, baseType: !1340, size: 128)
!1868 = !{!1869, !1883, !0, !1885, !1887, !1889, !1891}
!1869 = !DIGlobalVariableExpression(var: !1870, expr: !DIExpression())
!1870 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_tree_scalar_evolution_h", scope: !2, file: !1871, line: 113, type: !1872, isLocal: false, isDefinition: true)
!1871 = !DIFile(filename: "./gt-tree-scalar-evolution.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1873, size: 640, elements: !719)
!1873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1874)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !1875, line: 69, size: 320, elements: !1876)
!1875 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1876 = !{!1877, !1878, !1879, !1880, !1882}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1874, file: !1875, line: 70, baseType: !473, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !1874, file: !1875, line: 71, baseType: !946, size: 64, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !1874, file: !1875, line: 72, baseType: !946, size: 64, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1874, file: !1875, line: 73, baseType: !1881, size: 64, offset: 192)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !1875, line: 65, baseType: !1305)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !1874, file: !1875, line: 74, baseType: !1881, size: 64, offset: 256)
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression())
!1884 = distinct !DIGlobalVariable(name: "chrec_not_analyzed_yet", scope: !2, file: !3, line: 300, type: !476, isLocal: false, isDefinition: true)
!1885 = !DIGlobalVariableExpression(var: !1886, expr: !DIExpression())
!1886 = distinct !DIGlobalVariable(name: "chrec_known", scope: !2, file: !3, line: 308, type: !476, isLocal: false, isDefinition: true)
!1887 = !DIGlobalVariableExpression(var: !1888, expr: !DIExpression())
!1888 = distinct !DIGlobalVariable(name: "scalar_evolution_info", scope: !2, file: !3, line: 310, type: !1285, isLocal: true, isDefinition: true)
!1889 = !DIGlobalVariableExpression(var: !1890, expr: !DIExpression())
!1890 = distinct !DIGlobalVariable(name: "nb_get_scev", scope: !2, file: !3, line: 293, type: !7, isLocal: true, isDefinition: true)
!1891 = !DIGlobalVariableExpression(var: !1892, expr: !DIExpression())
!1892 = distinct !DIGlobalVariable(name: "nb_set_scev", scope: !2, file: !3, line: 292, type: !7, isLocal: true, isDefinition: true)
!1893 = !{i32 2, !"Dwarf Version", i32 4}
!1894 = !{i32 2, !"Debug Info Version", i32 3}
!1895 = !{i32 1, !"wchar_size", i32 4}
!1896 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!1897 = distinct !DISubprogram(name: "vprintf", scope: !1898, file: !1898, line: 39, type: !1899, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1909)
!1898 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!1899 = !DISubroutineType(types: !1900)
!1900 = !{!469, !1901, !1902}
!1901 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !474)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !1904)
!1904 = !{!1905, !1906, !1907, !1908}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1903, file: !3, baseType: !7, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1903, file: !3, baseType: !7, size: 32, offset: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1903, file: !3, baseType: !473, size: 64, offset: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1903, file: !3, baseType: !473, size: 64, offset: 128)
!1909 = !{!1910, !1911}
!1910 = !DILocalVariable(name: "__fmt", arg: 1, scope: !1897, file: !1898, line: 39, type: !1901)
!1911 = !DILocalVariable(name: "__arg", arg: 2, scope: !1897, file: !1898, line: 39, type: !1902)
!1912 = !DILocation(line: 0, scope: !1897)
!1913 = !DILocation(line: 41, column: 20, scope: !1897)
!1914 = !DILocation(line: 41, column: 10, scope: !1897)
!1915 = !DILocation(line: 41, column: 3, scope: !1897)
!1916 = distinct !DISubprogram(name: "getchar", scope: !1898, file: !1898, line: 47, type: !1917, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1919)
!1917 = !DISubroutineType(types: !1918)
!1918 = !{!469}
!1919 = !{}
!1920 = !DILocation(line: 49, column: 16, scope: !1916)
!1921 = !DILocation(line: 49, column: 10, scope: !1916)
!1922 = !DILocation(line: 49, column: 3, scope: !1916)
!1923 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !1898, file: !1898, line: 56, type: !1924, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1977)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{!469, !1926}
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1928, line: 7, baseType: !1929)
!1928 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1930, line: 49, size: 1728, elements: !1931)
!1930 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1931 = !{!1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1947, !1949, !1950, !1951, !1954, !1956, !1957, !1958, !1961, !1963, !1966, !1969, !1970, !1971, !1972, !1973}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1929, file: !1930, line: 51, baseType: !469, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1929, file: !1930, line: 54, baseType: !471, size: 64, offset: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1929, file: !1930, line: 55, baseType: !471, size: 64, offset: 128)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1929, file: !1930, line: 56, baseType: !471, size: 64, offset: 192)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1929, file: !1930, line: 57, baseType: !471, size: 64, offset: 256)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1929, file: !1930, line: 58, baseType: !471, size: 64, offset: 320)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1929, file: !1930, line: 59, baseType: !471, size: 64, offset: 384)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1929, file: !1930, line: 60, baseType: !471, size: 64, offset: 448)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1929, file: !1930, line: 61, baseType: !471, size: 64, offset: 512)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1929, file: !1930, line: 64, baseType: !471, size: 64, offset: 576)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1929, file: !1930, line: 65, baseType: !471, size: 64, offset: 640)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1929, file: !1930, line: 66, baseType: !471, size: 64, offset: 704)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1929, file: !1930, line: 68, baseType: !1945, size: 64, offset: 768)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1930, line: 36, flags: DIFlagFwdDecl)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1929, file: !1930, line: 70, baseType: !1948, size: 64, offset: 832)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1929, file: !1930, line: 72, baseType: !469, size: 32, offset: 896)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1929, file: !1930, line: 73, baseType: !469, size: 32, offset: 928)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1929, file: !1930, line: 74, baseType: !1952, size: 64, offset: 960)
!1952 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1953, line: 152, baseType: !532)
!1953 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1929, file: !1930, line: 77, baseType: !1955, size: 16, offset: 1024)
!1955 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1929, file: !1930, line: 78, baseType: !1656, size: 8, offset: 1040)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1929, file: !1930, line: 79, baseType: !574, size: 8, offset: 1048)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1929, file: !1930, line: 81, baseType: !1959, size: 64, offset: 1088)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1930, line: 43, baseType: null)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1929, file: !1930, line: 89, baseType: !1962, size: 64, offset: 1152)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1953, line: 153, baseType: !532)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1929, file: !1930, line: 91, baseType: !1964, size: 64, offset: 1216)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1930, line: 37, flags: DIFlagFwdDecl)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1929, file: !1930, line: 92, baseType: !1967, size: 64, offset: 1280)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1930, line: 38, flags: DIFlagFwdDecl)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1929, file: !1930, line: 93, baseType: !1948, size: 64, offset: 1344)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1929, file: !1930, line: 94, baseType: !473, size: 64, offset: 1408)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1929, file: !1930, line: 95, baseType: !946, size: 64, offset: 1472)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1929, file: !1930, line: 96, baseType: !469, size: 32, offset: 1536)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1929, file: !1930, line: 98, baseType: !1974, size: 160, offset: 1568)
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 160, elements: !1975)
!1975 = !{!1976}
!1976 = !DISubrange(count: 20)
!1977 = !{!1978}
!1978 = !DILocalVariable(name: "__fp", arg: 1, scope: !1923, file: !1898, line: 56, type: !1926)
!1979 = !DILocation(line: 0, scope: !1923)
!1980 = !DILocation(line: 58, column: 10, scope: !1923)
!1981 = !DILocation(line: 58, column: 3, scope: !1923)
!1982 = distinct !DISubprogram(name: "getc_unlocked", scope: !1898, file: !1898, line: 66, type: !1924, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1983)
!1983 = !{!1984}
!1984 = !DILocalVariable(name: "__fp", arg: 1, scope: !1982, file: !1898, line: 66, type: !1926)
!1985 = !DILocation(line: 0, scope: !1982)
!1986 = !DILocation(line: 68, column: 10, scope: !1982)
!1987 = !DILocation(line: 68, column: 3, scope: !1982)
!1988 = distinct !DISubprogram(name: "getchar_unlocked", scope: !1898, file: !1898, line: 73, type: !1917, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1919)
!1989 = !DILocation(line: 75, column: 10, scope: !1988)
!1990 = !DILocation(line: 75, column: 3, scope: !1988)
!1991 = distinct !DISubprogram(name: "putchar", scope: !1898, file: !1898, line: 82, type: !1992, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1994)
!1992 = !DISubroutineType(types: !1993)
!1993 = !{!469, !469}
!1994 = !{!1995}
!1995 = !DILocalVariable(name: "__c", arg: 1, scope: !1991, file: !1898, line: 82, type: !469)
!1996 = !DILocation(line: 0, scope: !1991)
!1997 = !DILocation(line: 84, column: 21, scope: !1991)
!1998 = !DILocation(line: 84, column: 10, scope: !1991)
!1999 = !DILocation(line: 84, column: 3, scope: !1991)
!2000 = distinct !DISubprogram(name: "fputc_unlocked", scope: !1898, file: !1898, line: 91, type: !2001, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2003)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!469, !469, !1926}
!2003 = !{!2004, !2005}
!2004 = !DILocalVariable(name: "__c", arg: 1, scope: !2000, file: !1898, line: 91, type: !469)
!2005 = !DILocalVariable(name: "__stream", arg: 2, scope: !2000, file: !1898, line: 91, type: !1926)
!2006 = !DILocation(line: 0, scope: !2000)
!2007 = !DILocation(line: 93, column: 10, scope: !2000)
!2008 = !DILocation(line: 93, column: 3, scope: !2000)
!2009 = distinct !DISubprogram(name: "putc_unlocked", scope: !1898, file: !1898, line: 101, type: !2001, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2010)
!2010 = !{!2011, !2012}
!2011 = !DILocalVariable(name: "__c", arg: 1, scope: !2009, file: !1898, line: 101, type: !469)
!2012 = !DILocalVariable(name: "__stream", arg: 2, scope: !2009, file: !1898, line: 101, type: !1926)
!2013 = !DILocation(line: 0, scope: !2009)
!2014 = !DILocation(line: 103, column: 10, scope: !2009)
!2015 = !DILocation(line: 103, column: 3, scope: !2009)
!2016 = distinct !DISubprogram(name: "putchar_unlocked", scope: !1898, file: !1898, line: 108, type: !1992, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2017)
!2017 = !{!2018}
!2018 = !DILocalVariable(name: "__c", arg: 1, scope: !2016, file: !1898, line: 108, type: !469)
!2019 = !DILocation(line: 0, scope: !2016)
!2020 = !DILocation(line: 110, column: 10, scope: !2016)
!2021 = !DILocation(line: 110, column: 3, scope: !2016)
!2022 = distinct !DISubprogram(name: "getline", scope: !1898, file: !1898, line: 118, type: !2023, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2027)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{!2025, !470, !2026, !1926}
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !1953, line: 193, baseType: !532)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!2027 = !{!2028, !2029, !2030}
!2028 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2022, file: !1898, line: 118, type: !470)
!2029 = !DILocalVariable(name: "__n", arg: 2, scope: !2022, file: !1898, line: 118, type: !2026)
!2030 = !DILocalVariable(name: "__stream", arg: 3, scope: !2022, file: !1898, line: 118, type: !1926)
!2031 = !DILocation(line: 0, scope: !2022)
!2032 = !DILocation(line: 120, column: 10, scope: !2022)
!2033 = !DILocation(line: 120, column: 3, scope: !2022)
!2034 = distinct !DISubprogram(name: "feof_unlocked", scope: !1898, file: !1898, line: 128, type: !1924, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2035)
!2035 = !{!2036}
!2036 = !DILocalVariable(name: "__stream", arg: 1, scope: !2034, file: !1898, line: 128, type: !1926)
!2037 = !DILocation(line: 0, scope: !2034)
!2038 = !DILocation(line: 130, column: 10, scope: !2034)
!2039 = !DILocation(line: 130, column: 3, scope: !2034)
!2040 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1898, file: !1898, line: 135, type: !1924, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2041)
!2041 = !{!2042}
!2042 = !DILocalVariable(name: "__stream", arg: 1, scope: !2040, file: !1898, line: 135, type: !1926)
!2043 = !DILocation(line: 0, scope: !2040)
!2044 = !DILocation(line: 137, column: 10, scope: !2040)
!2045 = !DILocation(line: 137, column: 3, scope: !2040)
!2046 = distinct !DISubprogram(name: "tolower", scope: !2047, file: !2047, line: 207, type: !1992, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2048)
!2047 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2048 = !{!2049}
!2049 = !DILocalVariable(name: "__c", arg: 1, scope: !2046, file: !2047, line: 207, type: !469)
!2050 = !DILocation(line: 0, scope: !2046)
!2051 = !DILocation(line: 209, column: 22, scope: !2046)
!2052 = !DILocation(line: 209, column: 39, scope: !2046)
!2053 = !DILocation(line: 209, column: 38, scope: !2046)
!2054 = !DILocation(line: 209, column: 37, scope: !2046)
!2055 = !DILocation(line: 209, column: 10, scope: !2046)
!2056 = !DILocation(line: 209, column: 3, scope: !2046)
!2057 = distinct !DISubprogram(name: "toupper", scope: !2047, file: !2047, line: 213, type: !1992, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2058)
!2058 = !{!2059}
!2059 = !DILocalVariable(name: "__c", arg: 1, scope: !2057, file: !2047, line: 213, type: !469)
!2060 = !DILocation(line: 0, scope: !2057)
!2061 = !DILocation(line: 215, column: 22, scope: !2057)
!2062 = !DILocation(line: 215, column: 39, scope: !2057)
!2063 = !DILocation(line: 215, column: 38, scope: !2057)
!2064 = !DILocation(line: 215, column: 37, scope: !2057)
!2065 = !DILocation(line: 215, column: 10, scope: !2057)
!2066 = !DILocation(line: 215, column: 3, scope: !2057)
!2067 = distinct !DISubprogram(name: "atoi", scope: !2068, file: !2068, line: 361, type: !2069, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2071)
!2068 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2069 = !DISubroutineType(types: !2070)
!2070 = !{!469, !474}
!2071 = !{!2072}
!2072 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2067, file: !2068, line: 361, type: !474)
!2073 = !DILocation(line: 0, scope: !2067)
!2074 = !DILocation(line: 363, column: 16, scope: !2067)
!2075 = !DILocation(line: 363, column: 10, scope: !2067)
!2076 = !DILocation(line: 363, column: 3, scope: !2067)
!2077 = distinct !DISubprogram(name: "atol", scope: !2068, file: !2068, line: 366, type: !2078, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2080)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{!532, !474}
!2080 = !{!2081}
!2081 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2077, file: !2068, line: 366, type: !474)
!2082 = !DILocation(line: 0, scope: !2077)
!2083 = !DILocation(line: 368, column: 10, scope: !2077)
!2084 = !DILocation(line: 368, column: 3, scope: !2077)
!2085 = distinct !DISubprogram(name: "atoll", scope: !2068, file: !2068, line: 373, type: !2086, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2089)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{!2088, !474}
!2088 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2089 = !{!2090}
!2090 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2085, file: !2068, line: 373, type: !474)
!2091 = !DILocation(line: 0, scope: !2085)
!2092 = !DILocation(line: 375, column: 10, scope: !2085)
!2093 = !DILocation(line: 375, column: 3, scope: !2085)
!2094 = distinct !DISubprogram(name: "bsearch", scope: !2095, file: !2095, line: 20, type: !2096, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2099)
!2095 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2096 = !DISubroutineType(types: !2097)
!2097 = !{!473, !1296, !1296, !946, !946, !2098}
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2068, line: 808, baseType: !1300)
!2099 = !{!2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109}
!2100 = !DILocalVariable(name: "__key", arg: 1, scope: !2094, file: !2095, line: 20, type: !1296)
!2101 = !DILocalVariable(name: "__base", arg: 2, scope: !2094, file: !2095, line: 20, type: !1296)
!2102 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2094, file: !2095, line: 20, type: !946)
!2103 = !DILocalVariable(name: "__size", arg: 4, scope: !2094, file: !2095, line: 20, type: !946)
!2104 = !DILocalVariable(name: "__compar", arg: 5, scope: !2094, file: !2095, line: 21, type: !2098)
!2105 = !DILocalVariable(name: "__l", scope: !2094, file: !2095, line: 23, type: !946)
!2106 = !DILocalVariable(name: "__u", scope: !2094, file: !2095, line: 23, type: !946)
!2107 = !DILocalVariable(name: "__idx", scope: !2094, file: !2095, line: 23, type: !946)
!2108 = !DILocalVariable(name: "__p", scope: !2094, file: !2095, line: 24, type: !1296)
!2109 = !DILocalVariable(name: "__comparison", scope: !2094, file: !2095, line: 25, type: !469)
!2110 = !DILocation(line: 0, scope: !2094)
!2111 = !DILocation(line: 29, column: 3, scope: !2094)
!2112 = !DILocation(line: 27, column: 7, scope: !2094)
!2113 = !DILocation(line: 29, column: 14, scope: !2094)
!2114 = !DILocation(line: 31, column: 20, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2094, file: !2095, line: 30, column: 5)
!2116 = !DILocation(line: 31, column: 27, scope: !2115)
!2117 = !DILocation(line: 32, column: 56, scope: !2115)
!2118 = !DILocation(line: 32, column: 47, scope: !2115)
!2119 = !DILocation(line: 33, column: 22, scope: !2115)
!2120 = !DILocation(line: 34, column: 24, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !2115, file: !2095, line: 34, column: 11)
!2122 = !DILocation(line: 34, column: 11, scope: !2115)
!2123 = !DILocation(line: 36, column: 29, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !2121, file: !2095, line: 36, column: 16)
!2125 = !DILocation(line: 36, column: 16, scope: !2121)
!2126 = !DILocation(line: 37, column: 14, scope: !2124)
!2127 = distinct !{!2127, !2111, !2128}
!2128 = !DILocation(line: 40, column: 5, scope: !2094)
!2129 = !DILocation(line: 43, column: 1, scope: !2094)
!2130 = distinct !DISubprogram(name: "atof", scope: !2131, file: !2131, line: 25, type: !2132, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2135)
!2131 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2132 = !DISubroutineType(types: !2133)
!2133 = !{!2134, !474}
!2134 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2135 = !{!2136}
!2136 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2130, file: !2131, line: 25, type: !474)
!2137 = !DILocation(line: 0, scope: !2130)
!2138 = !DILocation(line: 27, column: 10, scope: !2130)
!2139 = !DILocation(line: 27, column: 3, scope: !2130)
!2140 = distinct !DISubprogram(name: "strtoimax", scope: !2141, file: !2141, line: 324, type: !2142, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2148)
!2141 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!2144, !1901, !2147, !469}
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2145, line: 101, baseType: !2146)
!2145 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !1953, line: 72, baseType: !532)
!2147 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !470)
!2148 = !{!2149, !2150, !2151}
!2149 = !DILocalVariable(name: "nptr", arg: 1, scope: !2140, file: !2141, line: 324, type: !1901)
!2150 = !DILocalVariable(name: "endptr", arg: 2, scope: !2140, file: !2141, line: 324, type: !2147)
!2151 = !DILocalVariable(name: "base", arg: 3, scope: !2140, file: !2141, line: 324, type: !469)
!2152 = !DILocation(line: 0, scope: !2140)
!2153 = !DILocation(line: 327, column: 10, scope: !2140)
!2154 = !DILocation(line: 327, column: 3, scope: !2140)
!2155 = distinct !DISubprogram(name: "strtoumax", scope: !2141, file: !2141, line: 336, type: !2156, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2160)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!2158, !1901, !2147, !469}
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2145, line: 102, baseType: !2159)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !1953, line: 73, baseType: !530)
!2160 = !{!2161, !2162, !2163}
!2161 = !DILocalVariable(name: "nptr", arg: 1, scope: !2155, file: !2141, line: 336, type: !1901)
!2162 = !DILocalVariable(name: "endptr", arg: 2, scope: !2155, file: !2141, line: 336, type: !2147)
!2163 = !DILocalVariable(name: "base", arg: 3, scope: !2155, file: !2141, line: 336, type: !469)
!2164 = !DILocation(line: 0, scope: !2155)
!2165 = !DILocation(line: 339, column: 10, scope: !2155)
!2166 = !DILocation(line: 339, column: 3, scope: !2155)
!2167 = distinct !DISubprogram(name: "wcstoimax", scope: !2141, file: !2141, line: 348, type: !2168, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2177)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!2144, !2170, !2174, !469}
!2170 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2171)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2173)
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2141, line: 34, baseType: !469)
!2174 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2175)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2177 = !{!2178, !2179, !2180}
!2178 = !DILocalVariable(name: "nptr", arg: 1, scope: !2167, file: !2141, line: 348, type: !2170)
!2179 = !DILocalVariable(name: "endptr", arg: 2, scope: !2167, file: !2141, line: 348, type: !2174)
!2180 = !DILocalVariable(name: "base", arg: 3, scope: !2167, file: !2141, line: 348, type: !469)
!2181 = !DILocation(line: 0, scope: !2167)
!2182 = !DILocation(line: 351, column: 10, scope: !2167)
!2183 = !DILocation(line: 351, column: 3, scope: !2167)
!2184 = distinct !DISubprogram(name: "wcstoumax", scope: !2141, file: !2141, line: 362, type: !2185, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2187)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!2158, !2170, !2174, !469}
!2187 = !{!2188, !2189, !2190}
!2188 = !DILocalVariable(name: "nptr", arg: 1, scope: !2184, file: !2141, line: 362, type: !2170)
!2189 = !DILocalVariable(name: "endptr", arg: 2, scope: !2184, file: !2141, line: 362, type: !2174)
!2190 = !DILocalVariable(name: "base", arg: 3, scope: !2184, file: !2141, line: 362, type: !469)
!2191 = !DILocation(line: 0, scope: !2184)
!2192 = !DILocation(line: 365, column: 10, scope: !2184)
!2193 = !DILocation(line: 365, column: 3, scope: !2184)
!2194 = distinct !DISubprogram(name: "stat", scope: !2195, file: !2195, line: 453, type: !2196, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2233)
!2195 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!469, !474, !2198}
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2200, line: 46, size: 1152, elements: !2201)
!2200 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2201 = !{!2202, !2204, !2206, !2208, !2210, !2212, !2214, !2215, !2216, !2217, !2219, !2221, !2229, !2230, !2231}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2199, file: !2200, line: 48, baseType: !2203, size: 64)
!2203 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1953, line: 145, baseType: !530)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2199, file: !2200, line: 53, baseType: !2205, size: 64, offset: 64)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1953, line: 148, baseType: !530)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2199, file: !2200, line: 61, baseType: !2207, size: 64, offset: 128)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1953, line: 151, baseType: !530)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2199, file: !2200, line: 62, baseType: !2209, size: 32, offset: 192)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1953, line: 150, baseType: !7)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2199, file: !2200, line: 64, baseType: !2211, size: 32, offset: 224)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1953, line: 146, baseType: !7)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2199, file: !2200, line: 65, baseType: !2213, size: 32, offset: 256)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1953, line: 147, baseType: !7)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2199, file: !2200, line: 67, baseType: !469, size: 32, offset: 288)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2199, file: !2200, line: 69, baseType: !2203, size: 64, offset: 320)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2199, file: !2200, line: 74, baseType: !1952, size: 64, offset: 384)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2199, file: !2200, line: 78, baseType: !2218, size: 64, offset: 448)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1953, line: 174, baseType: !532)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2199, file: !2200, line: 80, baseType: !2220, size: 64, offset: 512)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1953, line: 179, baseType: !532)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2199, file: !2200, line: 91, baseType: !2222, size: 128, offset: 576)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2223, line: 10, size: 128, elements: !2224)
!2223 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2224 = !{!2225, !2227}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2222, file: !2223, line: 12, baseType: !2226, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1953, line: 160, baseType: !532)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2222, file: !2223, line: 16, baseType: !2228, size: 64, offset: 64)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !1953, line: 196, baseType: !532)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2199, file: !2200, line: 92, baseType: !2222, size: 128, offset: 704)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2199, file: !2200, line: 93, baseType: !2222, size: 128, offset: 832)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2199, file: !2200, line: 106, baseType: !2232, size: 192, offset: 960)
!2232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2228, size: 192, elements: !550)
!2233 = !{!2234, !2235}
!2234 = !DILocalVariable(name: "__path", arg: 1, scope: !2194, file: !2195, line: 453, type: !474)
!2235 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2194, file: !2195, line: 453, type: !2198)
!2236 = !DILocation(line: 0, scope: !2194)
!2237 = !DILocation(line: 455, column: 10, scope: !2194)
!2238 = !DILocation(line: 455, column: 3, scope: !2194)
!2239 = distinct !DISubprogram(name: "lstat", scope: !2195, file: !2195, line: 460, type: !2196, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2240)
!2240 = !{!2241, !2242}
!2241 = !DILocalVariable(name: "__path", arg: 1, scope: !2239, file: !2195, line: 460, type: !474)
!2242 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2239, file: !2195, line: 460, type: !2198)
!2243 = !DILocation(line: 0, scope: !2239)
!2244 = !DILocation(line: 462, column: 10, scope: !2239)
!2245 = !DILocation(line: 462, column: 3, scope: !2239)
!2246 = distinct !DISubprogram(name: "fstat", scope: !2195, file: !2195, line: 467, type: !2247, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2249)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{!469, !469, !2198}
!2249 = !{!2250, !2251}
!2250 = !DILocalVariable(name: "__fd", arg: 1, scope: !2246, file: !2195, line: 467, type: !469)
!2251 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2246, file: !2195, line: 467, type: !2198)
!2252 = !DILocation(line: 0, scope: !2246)
!2253 = !DILocation(line: 469, column: 10, scope: !2246)
!2254 = !DILocation(line: 469, column: 3, scope: !2246)
!2255 = distinct !DISubprogram(name: "fstatat", scope: !2195, file: !2195, line: 474, type: !2256, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!2256 = !DISubroutineType(types: !2257)
!2257 = !{!469, !469, !474, !2198, !469}
!2258 = !{!2259, !2260, !2261, !2262}
!2259 = !DILocalVariable(name: "__fd", arg: 1, scope: !2255, file: !2195, line: 474, type: !469)
!2260 = !DILocalVariable(name: "__filename", arg: 2, scope: !2255, file: !2195, line: 474, type: !474)
!2261 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2255, file: !2195, line: 474, type: !2198)
!2262 = !DILocalVariable(name: "__flag", arg: 4, scope: !2255, file: !2195, line: 474, type: !469)
!2263 = !DILocation(line: 0, scope: !2255)
!2264 = !DILocation(line: 477, column: 10, scope: !2255)
!2265 = !DILocation(line: 477, column: 3, scope: !2255)
!2266 = distinct !DISubprogram(name: "mknod", scope: !2195, file: !2195, line: 483, type: !2267, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2269)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{!469, !474, !2209, !2203}
!2269 = !{!2270, !2271, !2272}
!2270 = !DILocalVariable(name: "__path", arg: 1, scope: !2266, file: !2195, line: 483, type: !474)
!2271 = !DILocalVariable(name: "__mode", arg: 2, scope: !2266, file: !2195, line: 483, type: !2209)
!2272 = !DILocalVariable(name: "__dev", arg: 3, scope: !2266, file: !2195, line: 483, type: !2203)
!2273 = !DILocation(line: 0, scope: !2266)
!2274 = !DILocation(line: 485, column: 10, scope: !2266)
!2275 = !DILocation(line: 485, column: 3, scope: !2266)
!2276 = distinct !DISubprogram(name: "mknodat", scope: !2195, file: !2195, line: 491, type: !2277, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2279)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{!469, !469, !474, !2209, !2203}
!2279 = !{!2280, !2281, !2282, !2283}
!2280 = !DILocalVariable(name: "__fd", arg: 1, scope: !2276, file: !2195, line: 491, type: !469)
!2281 = !DILocalVariable(name: "__path", arg: 2, scope: !2276, file: !2195, line: 491, type: !474)
!2282 = !DILocalVariable(name: "__mode", arg: 3, scope: !2276, file: !2195, line: 491, type: !2209)
!2283 = !DILocalVariable(name: "__dev", arg: 4, scope: !2276, file: !2195, line: 491, type: !2203)
!2284 = !DILocation(line: 0, scope: !2276)
!2285 = !DILocation(line: 494, column: 10, scope: !2276)
!2286 = !DILocation(line: 494, column: 3, scope: !2276)
!2287 = distinct !DISubprogram(name: "stat64", scope: !2195, file: !2195, line: 502, type: !2288, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2310)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{!469, !474, !2290}
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2200, line: 119, size: 1152, elements: !2292)
!2292 = !{!2293, !2294, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2306, !2307, !2308, !2309}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2291, file: !2200, line: 121, baseType: !2203, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2291, file: !2200, line: 123, baseType: !2295, size: 64, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !1953, line: 149, baseType: !530)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2291, file: !2200, line: 124, baseType: !2207, size: 64, offset: 128)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2291, file: !2200, line: 125, baseType: !2209, size: 32, offset: 192)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2291, file: !2200, line: 132, baseType: !2211, size: 32, offset: 224)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2291, file: !2200, line: 133, baseType: !2213, size: 32, offset: 256)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2291, file: !2200, line: 135, baseType: !469, size: 32, offset: 288)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2291, file: !2200, line: 136, baseType: !2203, size: 64, offset: 320)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2291, file: !2200, line: 137, baseType: !1952, size: 64, offset: 384)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2291, file: !2200, line: 143, baseType: !2218, size: 64, offset: 448)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2291, file: !2200, line: 144, baseType: !2305, size: 64, offset: 512)
!2305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !1953, line: 180, baseType: !532)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2291, file: !2200, line: 152, baseType: !2222, size: 128, offset: 576)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2291, file: !2200, line: 153, baseType: !2222, size: 128, offset: 704)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2291, file: !2200, line: 154, baseType: !2222, size: 128, offset: 832)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2291, file: !2200, line: 164, baseType: !2232, size: 192, offset: 960)
!2310 = !{!2311, !2312}
!2311 = !DILocalVariable(name: "__path", arg: 1, scope: !2287, file: !2195, line: 502, type: !474)
!2312 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2287, file: !2195, line: 502, type: !2290)
!2313 = !DILocation(line: 0, scope: !2287)
!2314 = !DILocation(line: 504, column: 10, scope: !2287)
!2315 = !DILocation(line: 504, column: 3, scope: !2287)
!2316 = distinct !DISubprogram(name: "lstat64", scope: !2195, file: !2195, line: 509, type: !2288, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2317)
!2317 = !{!2318, !2319}
!2318 = !DILocalVariable(name: "__path", arg: 1, scope: !2316, file: !2195, line: 509, type: !474)
!2319 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2316, file: !2195, line: 509, type: !2290)
!2320 = !DILocation(line: 0, scope: !2316)
!2321 = !DILocation(line: 511, column: 10, scope: !2316)
!2322 = !DILocation(line: 511, column: 3, scope: !2316)
!2323 = distinct !DISubprogram(name: "fstat64", scope: !2195, file: !2195, line: 516, type: !2324, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2326)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!469, !469, !2290}
!2326 = !{!2327, !2328}
!2327 = !DILocalVariable(name: "__fd", arg: 1, scope: !2323, file: !2195, line: 516, type: !469)
!2328 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2323, file: !2195, line: 516, type: !2290)
!2329 = !DILocation(line: 0, scope: !2323)
!2330 = !DILocation(line: 518, column: 10, scope: !2323)
!2331 = !DILocation(line: 518, column: 3, scope: !2323)
!2332 = distinct !DISubprogram(name: "fstatat64", scope: !2195, file: !2195, line: 523, type: !2333, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2335)
!2333 = !DISubroutineType(types: !2334)
!2334 = !{!469, !469, !474, !2290, !469}
!2335 = !{!2336, !2337, !2338, !2339}
!2336 = !DILocalVariable(name: "__fd", arg: 1, scope: !2332, file: !2195, line: 523, type: !469)
!2337 = !DILocalVariable(name: "__filename", arg: 2, scope: !2332, file: !2195, line: 523, type: !474)
!2338 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2332, file: !2195, line: 523, type: !2290)
!2339 = !DILocalVariable(name: "__flag", arg: 4, scope: !2332, file: !2195, line: 523, type: !469)
!2340 = !DILocation(line: 0, scope: !2332)
!2341 = !DILocation(line: 526, column: 10, scope: !2332)
!2342 = !DILocation(line: 526, column: 3, scope: !2332)
!2343 = distinct !DISubprogram(name: "chrec_contains_symbols_defined_in_loop", scope: !3, file: !3, line: 381, type: !2344, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2347)
!2344 = !DISubroutineType(types: !2345)
!2345 = !{!468, !2346, !7}
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !477, line: 59, baseType: !1835)
!2347 = !{!2348, !2349, !2350, !2351, !2352, !2355, !2356}
!2348 = !DILocalVariable(name: "chrec", arg: 1, scope: !2343, file: !3, line: 381, type: !2346)
!2349 = !DILocalVariable(name: "loop_nb", arg: 2, scope: !2343, file: !3, line: 381, type: !7)
!2350 = !DILocalVariable(name: "i", scope: !2343, file: !3, line: 383, type: !469)
!2351 = !DILocalVariable(name: "n", scope: !2343, file: !3, line: 383, type: !469)
!2352 = !DILocalVariable(name: "def", scope: !2353, file: !3, line: 401, type: !800)
!2353 = distinct !DILexicalBlock(scope: !2354, file: !3, line: 400, column: 5)
!2354 = distinct !DILexicalBlock(scope: !2343, file: !3, line: 399, column: 7)
!2355 = !DILocalVariable(name: "def_loop", scope: !2353, file: !3, line: 402, type: !1016)
!2356 = !DILocalVariable(name: "loop", scope: !2353, file: !3, line: 403, type: !1016)
!2357 = !DILocation(line: 0, scope: !2343)
!2358 = !DILocation(line: 385, column: 13, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2343, file: !3, line: 385, column: 7)
!2360 = !DILocation(line: 385, column: 7, scope: !2343)
!2361 = !DILocation(line: 388, column: 7, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2343, file: !3, line: 388, column: 7)
!2363 = !DILocation(line: 388, column: 7, scope: !2343)
!2364 = !DILocation(line: 391, column: 7, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2343, file: !3, line: 391, column: 7)
!2366 = !DILocation(line: 391, column: 25, scope: !2365)
!2367 = !DILocation(line: 392, column: 7, scope: !2365)
!2368 = !DILocation(line: 392, column: 28, scope: !2365)
!2369 = !DILocation(line: 393, column: 7, scope: !2365)
!2370 = !DILocation(line: 393, column: 28, scope: !2365)
!2371 = !DILocation(line: 394, column: 7, scope: !2365)
!2372 = !DILocation(line: 394, column: 28, scope: !2365)
!2373 = !DILocation(line: 395, column: 7, scope: !2365)
!2374 = !DILocation(line: 395, column: 28, scope: !2365)
!2375 = !DILocation(line: 396, column: 7, scope: !2365)
!2376 = !DILocation(line: 396, column: 28, scope: !2365)
!2377 = !DILocation(line: 391, column: 7, scope: !2343)
!2378 = !DILocation(line: 399, column: 25, scope: !2354)
!2379 = !DILocation(line: 399, column: 7, scope: !2343)
!2380 = !DILocation(line: 401, column: 20, scope: !2353)
!2381 = !DILocation(line: 0, scope: !2353)
!2382 = !DILocation(line: 402, column: 31, scope: !2353)
!2383 = !DILocation(line: 403, column: 27, scope: !2353)
!2384 = !DILocation(line: 405, column: 20, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2353, file: !3, line: 405, column: 11)
!2386 = !DILocation(line: 405, column: 11, scope: !2353)
!2387 = !DILocation(line: 408, column: 16, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2353, file: !3, line: 408, column: 11)
!2389 = !DILocation(line: 408, column: 28, scope: !2388)
!2390 = !DILocation(line: 408, column: 31, scope: !2388)
!2391 = !DILocation(line: 408, column: 11, scope: !2353)
!2392 = !DILocation(line: 414, column: 7, scope: !2343)
!2393 = !DILocation(line: 416, column: 49, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2395, file: !3, line: 416, column: 9)
!2395 = distinct !DILexicalBlock(scope: !2396, file: !3, line: 415, column: 3)
!2396 = distinct !DILexicalBlock(scope: !2343, file: !3, line: 415, column: 3)
!2397 = !DILocation(line: 415, column: 8, scope: !2396)
!2398 = !DILocation(line: 0, scope: !2396)
!2399 = !DILocation(line: 415, column: 17, scope: !2395)
!2400 = !DILocation(line: 415, column: 3, scope: !2396)
!2401 = !DILocation(line: 416, column: 9, scope: !2394)
!2402 = !DILocation(line: 416, column: 9, scope: !2395)
!2403 = !DILocation(line: 415, column: 23, scope: !2395)
!2404 = !DILocation(line: 415, column: 3, scope: !2395)
!2405 = distinct !{!2405, !2400, !2406}
!2406 = !DILocation(line: 418, column: 14, scope: !2396)
!2407 = !DILocation(line: 420, column: 1, scope: !2343)
!2408 = distinct !DISubprogram(name: "loop_containing_stmt", scope: !2409, file: !2409, line: 617, type: !2410, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2412)
!2409 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2410 = !DISubroutineType(types: !2411)
!2411 = !{!1016, !800}
!2412 = !{!2413, !2414}
!2413 = !DILocalVariable(name: "stmt", arg: 1, scope: !2408, file: !2409, line: 617, type: !800)
!2414 = !DILocalVariable(name: "bb", scope: !2408, file: !2409, line: 619, type: !1253)
!2415 = !DILocation(line: 0, scope: !2408)
!2416 = !DILocation(line: 619, column: 20, scope: !2408)
!2417 = !DILocation(line: 620, column: 8, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !2408, file: !2409, line: 620, column: 7)
!2419 = !DILocation(line: 620, column: 7, scope: !2408)
!2420 = !DILocation(line: 623, column: 14, scope: !2408)
!2421 = !DILocation(line: 623, column: 3, scope: !2408)
!2422 = !DILocation(line: 624, column: 1, scope: !2408)
!2423 = distinct !DISubprogram(name: "get_loop", scope: !330, file: !330, line: 417, type: !2424, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2426)
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!1016, !7}
!2426 = !{!2427}
!2427 = !DILocalVariable(name: "num", arg: 1, scope: !2423, file: !330, line: 417, type: !7)
!2428 = !DILocation(line: 0, scope: !2423)
!2429 = !DILocation(line: 419, column: 10, scope: !2423)
!2430 = !DILocation(line: 419, column: 3, scope: !2423)
!2431 = distinct !DISubprogram(name: "tree_operand_length", scope: !135, file: !135, line: 5347, type: !2432, scopeLine: 5348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2434)
!2432 = !DISubroutineType(types: !2433)
!2433 = !{!469, !2346}
!2434 = !{!2435}
!2435 = !DILocalVariable(name: "node", arg: 1, scope: !2431, file: !135, line: 5347, type: !2346)
!2436 = !DILocation(line: 0, scope: !2431)
!2437 = !DILocation(line: 5349, column: 7, scope: !2438)
!2438 = distinct !DILexicalBlock(scope: !2431, file: !135, line: 5349, column: 7)
!2439 = !DILocation(line: 5349, column: 7, scope: !2431)
!2440 = !DILocation(line: 5350, column: 12, scope: !2438)
!2441 = !DILocation(line: 5350, column: 5, scope: !2438)
!2442 = !DILocation(line: 5352, column: 12, scope: !2438)
!2443 = !DILocation(line: 5352, column: 5, scope: !2438)
!2444 = !DILocation(line: 0, scope: !2438)
!2445 = !DILocation(line: 5353, column: 1, scope: !2431)
!2446 = distinct !DISubprogram(name: "compute_overall_effect_of_inner_loop", scope: !3, file: !3, line: 470, type: !2447, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2449)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{!476, !1016, !476}
!2449 = !{!2450, !2451, !2452, !2453, !2457, !2460}
!2450 = !DILocalVariable(name: "loop", arg: 1, scope: !2446, file: !3, line: 470, type: !1016)
!2451 = !DILocalVariable(name: "evolution_fn", arg: 2, scope: !2446, file: !3, line: 470, type: !476)
!2452 = !DILocalVariable(name: "val", scope: !2446, file: !3, line: 472, type: !468)
!2453 = !DILocalVariable(name: "inner_loop", scope: !2454, file: !3, line: 479, type: !1016)
!2454 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 478, column: 5)
!2455 = distinct !DILexicalBlock(scope: !2456, file: !3, line: 477, column: 12)
!2456 = distinct !DILexicalBlock(scope: !2446, file: !3, line: 474, column: 7)
!2457 = !DILocalVariable(name: "nb_iter", scope: !2458, file: !3, line: 484, type: !476)
!2458 = distinct !DILexicalBlock(scope: !2459, file: !3, line: 483, column: 2)
!2459 = distinct !DILexicalBlock(scope: !2454, file: !3, line: 481, column: 11)
!2460 = !DILocalVariable(name: "res", scope: !2461, file: !3, line: 490, type: !476)
!2461 = distinct !DILexicalBlock(scope: !2462, file: !3, line: 489, column: 6)
!2462 = distinct !DILexicalBlock(scope: !2458, file: !3, line: 486, column: 8)
!2463 = !DILocation(line: 0, scope: !2446)
!2464 = !DILocation(line: 472, column: 3, scope: !2446)
!2465 = !DILocation(line: 472, column: 8, scope: !2446)
!2466 = !DILocation(line: 474, column: 23, scope: !2456)
!2467 = !DILocation(line: 474, column: 20, scope: !2456)
!2468 = !DILocation(line: 474, column: 7, scope: !2446)
!2469 = !DILocation(line: 475, column: 5, scope: !2456)
!2470 = !DILocation(line: 477, column: 12, scope: !2455)
!2471 = !DILocation(line: 477, column: 37, scope: !2455)
!2472 = !DILocation(line: 477, column: 12, scope: !2456)
!2473 = !DILocation(line: 479, column: 33, scope: !2454)
!2474 = !DILocation(line: 0, scope: !2454)
!2475 = !DILocation(line: 481, column: 22, scope: !2459)
!2476 = !DILocation(line: 482, column: 4, scope: !2459)
!2477 = !DILocation(line: 482, column: 7, scope: !2459)
!2478 = !DILocation(line: 481, column: 11, scope: !2454)
!2479 = !DILocation(line: 484, column: 19, scope: !2458)
!2480 = !DILocation(line: 0, scope: !2458)
!2481 = !DILocation(line: 486, column: 19, scope: !2462)
!2482 = !DILocation(line: 486, column: 16, scope: !2462)
!2483 = !DILocation(line: 486, column: 8, scope: !2458)
!2484 = !DILocation(line: 487, column: 6, scope: !2462)
!2485 = !DILocation(line: 494, column: 39, scope: !2461)
!2486 = !DILocation(line: 494, column: 14, scope: !2461)
!2487 = !DILocation(line: 0, scope: !2461)
!2488 = !DILocation(line: 496, column: 63, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2461, file: !3, line: 496, column: 12)
!2490 = !DILocation(line: 496, column: 12, scope: !2489)
!2491 = !DILocation(line: 496, column: 12, scope: !2461)
!2492 = !DILocation(line: 497, column: 9, scope: !2489)
!2493 = !DILocation(line: 497, column: 3, scope: !2489)
!2494 = !DILocation(line: 500, column: 15, scope: !2461)
!2495 = !DILocation(line: 508, column: 56, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 508, column: 12)
!2497 = !DILocation(line: 508, column: 12, scope: !2496)
!2498 = !DILocation(line: 508, column: 67, scope: !2496)
!2499 = !DILocation(line: 508, column: 70, scope: !2496)
!2500 = !DILocation(line: 508, column: 12, scope: !2455)
!2501 = !DILocation(line: 512, column: 12, scope: !2496)
!2502 = !DILocation(line: 512, column: 5, scope: !2496)
!2503 = !DILocation(line: 0, scope: !2456)
!2504 = !DILocation(line: 513, column: 1, scope: !2446)
!2505 = distinct !DISubprogram(name: "get_chrec_loop", scope: !2506, file: !2506, line: 65, type: !2507, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2509)
!2506 = !DIFile(filename: "./tree-scalar-evolution.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2507 = !DISubroutineType(types: !2508)
!2508 = !{!1016, !2346}
!2509 = !{!2510}
!2510 = !DILocalVariable(name: "chrec", arg: 1, scope: !2505, file: !2506, line: 65, type: !2346)
!2511 = !DILocation(line: 0, scope: !2505)
!2512 = !DILocation(line: 67, column: 20, scope: !2505)
!2513 = !DILocation(line: 67, column: 10, scope: !2505)
!2514 = !DILocation(line: 67, column: 3, scope: !2505)
!2515 = distinct !DISubprogram(name: "number_of_latch_executions", scope: !3, file: !3, line: 2708, type: !2516, scopeLine: 2709, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2518)
!2516 = !DISubroutineType(types: !2517)
!2517 = !{!476, !1016}
!2518 = !{!2519, !2520, !2521, !2522, !2523, !2539}
!2519 = !DILocalVariable(name: "loop", arg: 1, scope: !2515, file: !3, line: 2708, type: !1016)
!2520 = !DILocalVariable(name: "res", scope: !2515, file: !3, line: 2710, type: !476)
!2521 = !DILocalVariable(name: "type", scope: !2515, file: !3, line: 2710, type: !476)
!2522 = !DILocalVariable(name: "exit", scope: !2515, file: !3, line: 2711, type: !780)
!2523 = !DILocalVariable(name: "niter_desc", scope: !2515, file: !3, line: 2712, type: !2524)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_niter_desc", file: !1193, line: 657, size: 640, elements: !2525)
!2525 = !{!2526, !2527, !2528, !2529, !2530, !2537, !2538}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "assumptions", scope: !2524, file: !1193, line: 659, baseType: !476, size: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "may_be_zero", scope: !2524, file: !1193, line: 663, baseType: !476, size: 64, offset: 64)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "niter", scope: !2524, file: !1193, line: 667, baseType: !476, size: 64, offset: 128)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2524, file: !1193, line: 671, baseType: !525, size: 128, offset: 192)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2524, file: !1193, line: 679, baseType: !2531, size: 192, offset: 320)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_iv", file: !1193, line: 651, baseType: !2532)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1193, line: 644, size: 192, elements: !2533)
!2533 = !{!2534, !2535, !2536}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2532, file: !1193, line: 647, baseType: !476, size: 64)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2532, file: !1193, line: 647, baseType: !476, size: 64, offset: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "no_overflow", scope: !2532, file: !1193, line: 650, baseType: !468, size: 8, offset: 128)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !2524, file: !1193, line: 680, baseType: !476, size: 64, offset: 512)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "cmp", scope: !2524, file: !1193, line: 681, baseType: !134, size: 32, offset: 576)
!2539 = !DILabel(scope: !2515, name: "end", file: !3, line: 2739)
!2540 = !DILocation(line: 0, scope: !2515)
!2541 = !DILocation(line: 2712, column: 3, scope: !2515)
!2542 = !DILocation(line: 2716, column: 15, scope: !2515)
!2543 = !DILocation(line: 2717, column: 7, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !2515, file: !3, line: 2717, column: 7)
!2545 = !DILocation(line: 2717, column: 7, scope: !2515)
!2546 = !DILocation(line: 2719, column: 9, scope: !2515)
!2547 = !DILocation(line: 2721, column: 7, scope: !2548)
!2548 = distinct !DILexicalBlock(scope: !2515, file: !3, line: 2721, column: 7)
!2549 = !DILocation(line: 2721, column: 17, scope: !2548)
!2550 = !DILocation(line: 2721, column: 21, scope: !2548)
!2551 = !DILocation(line: 2721, column: 32, scope: !2548)
!2552 = !DILocation(line: 2721, column: 7, scope: !2515)
!2553 = !DILocation(line: 2722, column: 5, scope: !2548)
!2554 = !DILocation(line: 2724, column: 10, scope: !2515)
!2555 = !DILocation(line: 2725, column: 8, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2515, file: !3, line: 2725, column: 7)
!2557 = !DILocation(line: 2725, column: 7, scope: !2515)
!2558 = !DILocation(line: 2728, column: 8, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2515, file: !3, line: 2728, column: 7)
!2560 = !DILocation(line: 2728, column: 7, scope: !2515)
!2561 = !DILocation(line: 2731, column: 10, scope: !2515)
!2562 = !DILocation(line: 2732, column: 36, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2515, file: !3, line: 2732, column: 7)
!2564 = !DILocation(line: 2732, column: 7, scope: !2563)
!2565 = !DILocation(line: 2732, column: 7, scope: !2515)
!2566 = !DILocation(line: 2733, column: 11, scope: !2563)
!2567 = !DILocation(line: 2733, column: 5, scope: !2563)
!2568 = !DILocation(line: 2734, column: 38, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2563, file: !3, line: 2734, column: 12)
!2570 = !DILocation(line: 2734, column: 12, scope: !2569)
!2571 = !DILocation(line: 2734, column: 12, scope: !2563)
!2572 = !DILocation(line: 2739, column: 1, scope: !2515)
!2573 = !DILocation(line: 2740, column: 10, scope: !2515)
!2574 = !DILocation(line: 2740, column: 3, scope: !2515)
!2575 = !DILocation(line: 2741, column: 1, scope: !2515)
!2576 = distinct !DISubprogram(name: "instantiate_parameters", scope: !2506, file: !2506, line: 57, type: !2447, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2577)
!2577 = !{!2578, !2579}
!2578 = !DILocalVariable(name: "loop", arg: 1, scope: !2576, file: !2506, line: 57, type: !1016)
!2579 = !DILocalVariable(name: "chrec", arg: 2, scope: !2576, file: !2506, line: 57, type: !476)
!2580 = !DILocation(line: 0, scope: !2576)
!2581 = !DILocation(line: 59, column: 28, scope: !2576)
!2582 = !DILocation(line: 59, column: 10, scope: !2576)
!2583 = !DILocation(line: 59, column: 3, scope: !2576)
!2584 = distinct !DISubprogram(name: "no_evolution_in_loop_p", scope: !2585, file: !2585, line: 109, type: !2586, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2588)
!2585 = !DIFile(filename: "./tree-chrec.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2586 = !DISubroutineType(types: !2587)
!2587 = !{!468, !476, !7, !467}
!2588 = !{!2589, !2590, !2591, !2592}
!2589 = !DILocalVariable(name: "chrec", arg: 1, scope: !2584, file: !2585, line: 109, type: !476)
!2590 = !DILocalVariable(name: "loop_num", arg: 2, scope: !2584, file: !2585, line: 109, type: !7)
!2591 = !DILocalVariable(name: "res", arg: 3, scope: !2584, file: !2585, line: 109, type: !467)
!2592 = !DILocalVariable(name: "scev", scope: !2584, file: !2585, line: 111, type: !476)
!2593 = !DILocation(line: 0, scope: !2584)
!2594 = !DILocation(line: 113, column: 16, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2584, file: !2585, line: 113, column: 7)
!2596 = !DILocation(line: 113, column: 13, scope: !2595)
!2597 = !DILocation(line: 114, column: 19, scope: !2595)
!2598 = !DILocation(line: 114, column: 16, scope: !2595)
!2599 = !DILocation(line: 114, column: 7, scope: !2595)
!2600 = !DILocation(line: 115, column: 10, scope: !2595)
!2601 = !DILocation(line: 113, column: 7, scope: !2584)
!2602 = !DILocation(line: 118, column: 3, scope: !2584)
!2603 = !DILocation(line: 119, column: 10, scope: !2584)
!2604 = !DILocation(line: 120, column: 11, scope: !2584)
!2605 = !DILocation(line: 120, column: 10, scope: !2584)
!2606 = !DILocation(line: 120, column: 8, scope: !2584)
!2607 = !DILocation(line: 121, column: 3, scope: !2584)
!2608 = !DILocation(line: 122, column: 1, scope: !2584)
!2609 = distinct !DISubprogram(name: "chrec_is_positive", scope: !3, file: !3, line: 520, type: !2610, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2612)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{!468, !476, !467}
!2612 = !{!2613, !2614, !2615, !2616, !2617, !2618, !2619}
!2613 = !DILocalVariable(name: "chrec", arg: 1, scope: !2609, file: !3, line: 520, type: !476)
!2614 = !DILocalVariable(name: "value", arg: 2, scope: !2609, file: !3, line: 520, type: !467)
!2615 = !DILocalVariable(name: "value0", scope: !2609, file: !3, line: 522, type: !468)
!2616 = !DILocalVariable(name: "value1", scope: !2609, file: !3, line: 522, type: !468)
!2617 = !DILocalVariable(name: "value2", scope: !2609, file: !3, line: 522, type: !468)
!2618 = !DILocalVariable(name: "end_value", scope: !2609, file: !3, line: 523, type: !476)
!2619 = !DILocalVariable(name: "nb_iter", scope: !2609, file: !3, line: 523, type: !476)
!2620 = !DILocation(line: 0, scope: !2609)
!2621 = !DILocation(line: 522, column: 3, scope: !2609)
!2622 = !DILocation(line: 525, column: 11, scope: !2609)
!2623 = !DILocation(line: 525, column: 3, scope: !2609)
!2624 = !DILocation(line: 528, column: 31, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 528, column: 11)
!2626 = distinct !DILexicalBlock(scope: !2609, file: !3, line: 526, column: 5)
!2627 = !DILocation(line: 528, column: 12, scope: !2625)
!2628 = !DILocation(line: 529, column: 4, scope: !2625)
!2629 = !DILocation(line: 529, column: 27, scope: !2625)
!2630 = !DILocation(line: 529, column: 8, scope: !2625)
!2631 = !DILocation(line: 528, column: 11, scope: !2626)
!2632 = !DILocation(line: 533, column: 11, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 533, column: 11)
!2634 = !DILocation(line: 533, column: 21, scope: !2633)
!2635 = !DILocation(line: 533, column: 18, scope: !2633)
!2636 = !DILocation(line: 533, column: 11, scope: !2626)
!2637 = !DILocation(line: 535, column: 11, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2633, file: !3, line: 534, column: 2)
!2639 = !DILocation(line: 536, column: 4, scope: !2638)
!2640 = !DILocation(line: 543, column: 12, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 543, column: 11)
!2642 = !DILocation(line: 543, column: 11, scope: !2626)
!2643 = !DILocation(line: 546, column: 45, scope: !2626)
!2644 = !DILocation(line: 546, column: 17, scope: !2626)
!2645 = !DILocation(line: 547, column: 11, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 547, column: 11)
!2647 = !DILocation(line: 547, column: 11, scope: !2626)
!2648 = !DILocation(line: 557, column: 32, scope: !2626)
!2649 = !DILocation(line: 557, column: 19, scope: !2626)
!2650 = !DILocation(line: 559, column: 12, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 559, column: 11)
!2652 = !DILocation(line: 559, column: 11, scope: !2626)
!2653 = !DILocation(line: 562, column: 16, scope: !2626)
!2654 = !DILocation(line: 562, column: 14, scope: !2626)
!2655 = !DILocation(line: 563, column: 24, scope: !2626)
!2656 = !DILocation(line: 563, column: 21, scope: !2626)
!2657 = !DILocation(line: 563, column: 14, scope: !2626)
!2658 = !DILocation(line: 563, column: 7, scope: !2626)
!2659 = !DILocation(line: 566, column: 17, scope: !2626)
!2660 = !DILocation(line: 566, column: 42, scope: !2626)
!2661 = !DILocation(line: 566, column: 16, scope: !2626)
!2662 = !DILocation(line: 566, column: 14, scope: !2626)
!2663 = !DILocation(line: 567, column: 7, scope: !2626)
!2664 = !DILocation(line: 0, scope: !2626)
!2665 = !DILocation(line: 572, column: 1, scope: !2609)
!2666 = distinct !DISubprogram(name: "evolution_function_is_affine_p", scope: !2585, file: !2585, line: 202, type: !2667, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2669)
!2667 = !DISubroutineType(types: !2668)
!2668 = !{!468, !2346}
!2669 = !{!2670}
!2670 = !DILocalVariable(name: "chrec", arg: 1, scope: !2666, file: !2585, line: 202, type: !2346)
!2671 = !DILocation(line: 0, scope: !2666)
!2672 = !DILocation(line: 204, column: 13, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2666, file: !2585, line: 204, column: 7)
!2674 = !DILocation(line: 204, column: 7, scope: !2666)
!2675 = !DILocation(line: 207, column: 11, scope: !2666)
!2676 = !DILocation(line: 207, column: 3, scope: !2666)
!2677 = !DILocation(line: 210, column: 46, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2679, file: !2585, line: 210, column: 11)
!2679 = distinct !DILexicalBlock(scope: !2666, file: !2585, line: 208, column: 5)
!2680 = !DILocation(line: 211, column: 11, scope: !2678)
!2681 = !DILocation(line: 210, column: 11, scope: !2678)
!2682 = !DILocation(line: 212, column: 4, scope: !2678)
!2683 = !DILocation(line: 212, column: 42, scope: !2678)
!2684 = !DILocation(line: 213, column: 7, scope: !2678)
!2685 = !DILocation(line: 212, column: 7, scope: !2678)
!2686 = !DILocation(line: 210, column: 11, scope: !2679)
!2687 = !DILocation(line: 216, column: 2, scope: !2678)
!2688 = !DILocation(line: 221, column: 1, scope: !2666)
!2689 = distinct !DISubprogram(name: "get_loop_exit_condition", scope: !3, file: !3, line: 933, type: !2690, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2694)
!2690 = !DISubroutineType(types: !2691)
!2691 = !{!800, !2692}
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!2694 = !{!2695, !2696, !2697, !2698}
!2695 = !DILocalVariable(name: "loop", arg: 1, scope: !2689, file: !3, line: 933, type: !2692)
!2696 = !DILocalVariable(name: "res", scope: !2689, file: !3, line: 935, type: !800)
!2697 = !DILocalVariable(name: "exit_edge", scope: !2689, file: !3, line: 936, type: !780)
!2698 = !DILocalVariable(name: "stmt", scope: !2699, file: !3, line: 943, type: !800)
!2699 = distinct !DILexicalBlock(scope: !2700, file: !3, line: 942, column: 5)
!2700 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 941, column: 7)
!2701 = !DILocation(line: 0, scope: !2689)
!2702 = !DILocation(line: 936, column: 20, scope: !2689)
!2703 = !DILocation(line: 938, column: 7, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 938, column: 7)
!2705 = !DILocation(line: 938, column: 17, scope: !2704)
!2706 = !DILocation(line: 938, column: 21, scope: !2704)
!2707 = !DILocation(line: 938, column: 32, scope: !2704)
!2708 = !DILocation(line: 938, column: 7, scope: !2689)
!2709 = !DILocation(line: 939, column: 5, scope: !2704)
!2710 = !DILocation(line: 941, column: 7, scope: !2700)
!2711 = !DILocation(line: 941, column: 7, scope: !2689)
!2712 = !DILocation(line: 945, column: 36, scope: !2699)
!2713 = !DILocation(line: 945, column: 14, scope: !2699)
!2714 = !DILocation(line: 0, scope: !2699)
!2715 = !DILocation(line: 946, column: 11, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2699, file: !3, line: 946, column: 11)
!2717 = !DILocation(line: 946, column: 30, scope: !2716)
!2718 = !DILocation(line: 946, column: 11, scope: !2699)
!2719 = !DILocation(line: 948, column: 5, scope: !2699)
!2720 = !DILocation(line: 950, column: 7, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 950, column: 7)
!2722 = !DILocation(line: 950, column: 17, scope: !2721)
!2723 = !DILocation(line: 950, column: 21, scope: !2721)
!2724 = !DILocation(line: 950, column: 32, scope: !2721)
!2725 = !DILocation(line: 950, column: 7, scope: !2689)
!2726 = !DILocation(line: 952, column: 7, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2721, file: !3, line: 951, column: 5)
!2728 = !DILocation(line: 953, column: 16, scope: !2727)
!2729 = !DILocation(line: 953, column: 7, scope: !2727)
!2730 = !DILocation(line: 954, column: 5, scope: !2727)
!2731 = !DILocation(line: 956, column: 3, scope: !2689)
!2732 = distinct !DISubprogram(name: "gimple_code", scope: !391, file: !391, line: 1052, type: !2733, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2736)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{!390, !2735}
!2735 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !477, line: 60, baseType: !1837)
!2736 = !{!2737}
!2737 = !DILocalVariable(name: "g", arg: 1, scope: !2732, file: !391, line: 1052, type: !2735)
!2738 = !DILocation(line: 0, scope: !2732)
!2739 = !DILocation(line: 1054, column: 20, scope: !2732)
!2740 = !DILocation(line: 1054, column: 3, scope: !2732)
!2741 = distinct !DISubprogram(name: "analyze_scalar_evolution", scope: !3, file: !3, line: 1938, type: !2447, scopeLine: 1939, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2742)
!2742 = !{!2743, !2744, !2745}
!2743 = !DILocalVariable(name: "loop", arg: 1, scope: !2741, file: !3, line: 1938, type: !1016)
!2744 = !DILocalVariable(name: "var", arg: 2, scope: !2741, file: !3, line: 1938, type: !476)
!2745 = !DILocalVariable(name: "res", scope: !2741, file: !3, line: 1940, type: !476)
!2746 = !DILocation(line: 0, scope: !2741)
!2747 = !DILocation(line: 1942, column: 7, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 1942, column: 7)
!2749 = !DILocation(line: 1942, column: 17, scope: !2748)
!2750 = !DILocation(line: 1942, column: 21, scope: !2748)
!2751 = !DILocation(line: 1942, column: 32, scope: !2748)
!2752 = !DILocation(line: 1942, column: 7, scope: !2741)
!2753 = !DILocation(line: 1944, column: 7, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2748, file: !3, line: 1943, column: 5)
!2755 = !DILocation(line: 1945, column: 16, scope: !2754)
!2756 = !DILocation(line: 1945, column: 55, scope: !2754)
!2757 = !DILocation(line: 1945, column: 7, scope: !2754)
!2758 = !DILocation(line: 1946, column: 16, scope: !2754)
!2759 = !DILocation(line: 1946, column: 7, scope: !2754)
!2760 = !DILocation(line: 1947, column: 27, scope: !2754)
!2761 = !DILocation(line: 1947, column: 7, scope: !2754)
!2762 = !DILocation(line: 1948, column: 16, scope: !2754)
!2763 = !DILocation(line: 1948, column: 7, scope: !2754)
!2764 = !DILocation(line: 1949, column: 5, scope: !2754)
!2765 = !DILocation(line: 1951, column: 31, scope: !2741)
!2766 = !DILocation(line: 1951, column: 9, scope: !2741)
!2767 = !DILocation(line: 1952, column: 9, scope: !2741)
!2768 = !DILocation(line: 1954, column: 7, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 1954, column: 7)
!2770 = !DILocation(line: 1954, column: 17, scope: !2769)
!2771 = !DILocation(line: 1954, column: 21, scope: !2769)
!2772 = !DILocation(line: 1954, column: 32, scope: !2769)
!2773 = !DILocation(line: 1954, column: 7, scope: !2741)
!2774 = !DILocation(line: 1955, column: 5, scope: !2769)
!2775 = !DILocation(line: 1957, column: 3, scope: !2741)
!2776 = distinct !DISubprogram(name: "get_scalar_evolution", scope: !3, file: !3, line: 610, type: !2777, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2779)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!476, !1253, !476}
!2779 = !{!2780, !2781, !2782}
!2780 = !DILocalVariable(name: "instantiated_below", arg: 1, scope: !2776, file: !3, line: 610, type: !1253)
!2781 = !DILocalVariable(name: "scalar", arg: 2, scope: !2776, file: !3, line: 610, type: !476)
!2782 = !DILocalVariable(name: "res", scope: !2776, file: !3, line: 612, type: !476)
!2783 = !DILocation(line: 0, scope: !2776)
!2784 = !DILocation(line: 614, column: 7, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 614, column: 7)
!2786 = !DILocation(line: 614, column: 7, scope: !2776)
!2787 = !DILocation(line: 616, column: 11, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !2789, file: !3, line: 616, column: 11)
!2789 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 615, column: 5)
!2790 = !DILocation(line: 616, column: 22, scope: !2788)
!2791 = !DILocation(line: 616, column: 11, scope: !2789)
!2792 = !DILocation(line: 618, column: 4, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2788, file: !3, line: 617, column: 2)
!2794 = !DILocation(line: 619, column: 13, scope: !2793)
!2795 = !DILocation(line: 619, column: 4, scope: !2793)
!2796 = !DILocation(line: 620, column: 24, scope: !2793)
!2797 = !DILocation(line: 620, column: 4, scope: !2793)
!2798 = !DILocation(line: 621, column: 13, scope: !2793)
!2799 = !DILocation(line: 621, column: 4, scope: !2793)
!2800 = !DILocation(line: 623, column: 11, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2789, file: !3, line: 623, column: 11)
!2802 = !DILocation(line: 622, column: 2, scope: !2793)
!2803 = !DILocation(line: 623, column: 22, scope: !2801)
!2804 = !DILocation(line: 623, column: 11, scope: !2789)
!2805 = !DILocation(line: 624, column: 13, scope: !2801)
!2806 = !DILocation(line: 624, column: 2, scope: !2801)
!2807 = !DILocation(line: 627, column: 11, scope: !2776)
!2808 = !DILocation(line: 627, column: 3, scope: !2776)
!2809 = !DILocation(line: 630, column: 14, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 628, column: 5)
!2811 = !DILocation(line: 630, column: 13, scope: !2810)
!2812 = !DILocation(line: 631, column: 7, scope: !2810)
!2813 = !DILocation(line: 640, column: 13, scope: !2810)
!2814 = !DILocation(line: 641, column: 7, scope: !2810)
!2815 = !DILocation(line: 0, scope: !2810)
!2816 = !DILocation(line: 644, column: 7, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 644, column: 7)
!2818 = !DILocation(line: 644, column: 17, scope: !2817)
!2819 = !DILocation(line: 644, column: 21, scope: !2817)
!2820 = !DILocation(line: 644, column: 32, scope: !2817)
!2821 = !DILocation(line: 644, column: 7, scope: !2776)
!2822 = !DILocation(line: 646, column: 7, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2817, file: !3, line: 645, column: 5)
!2824 = !DILocation(line: 647, column: 27, scope: !2823)
!2825 = !DILocation(line: 647, column: 7, scope: !2823)
!2826 = !DILocation(line: 648, column: 16, scope: !2823)
!2827 = !DILocation(line: 648, column: 7, scope: !2823)
!2828 = !DILocation(line: 649, column: 5, scope: !2823)
!2829 = !DILocation(line: 651, column: 3, scope: !2776)
!2830 = distinct !DISubprogram(name: "block_before_loop", scope: !2506, file: !2506, line: 46, type: !2831, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2833)
!2831 = !DISubroutineType(types: !2832)
!2832 = !{!1253, !1043}
!2833 = !{!2834, !2835}
!2834 = !DILocalVariable(name: "loop", arg: 1, scope: !2830, file: !2506, line: 46, type: !1043)
!2835 = !DILocalVariable(name: "preheader", scope: !2830, file: !2506, line: 48, type: !780)
!2836 = !DILocation(line: 0, scope: !2830)
!2837 = !DILocation(line: 48, column: 20, scope: !2830)
!2838 = !DILocation(line: 49, column: 11, scope: !2830)
!2839 = !DILocation(line: 49, column: 34, scope: !2830)
!2840 = !DILocation(line: 49, column: 40, scope: !2830)
!2841 = !DILocation(line: 49, column: 3, scope: !2830)
!2842 = distinct !DISubprogram(name: "analyze_scalar_evolution_1", scope: !3, file: !3, line: 1852, type: !2843, scopeLine: 1853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2845)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{!476, !1016, !476, !476}
!2845 = !{!2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853}
!2846 = !DILocalVariable(name: "loop", arg: 1, scope: !2842, file: !3, line: 1852, type: !1016)
!2847 = !DILocalVariable(name: "var", arg: 2, scope: !2842, file: !3, line: 1852, type: !476)
!2848 = !DILocalVariable(name: "res", arg: 3, scope: !2842, file: !3, line: 1852, type: !476)
!2849 = !DILocalVariable(name: "type", scope: !2842, file: !3, line: 1854, type: !476)
!2850 = !DILocalVariable(name: "def", scope: !2842, file: !3, line: 1855, type: !800)
!2851 = !DILocalVariable(name: "bb", scope: !2842, file: !3, line: 1856, type: !1253)
!2852 = !DILocalVariable(name: "def_loop", scope: !2842, file: !3, line: 1857, type: !1016)
!2853 = !DILabel(scope: !2842, name: "set_and_end", file: !3, line: 1912)
!2854 = !DILocation(line: 0, scope: !2842)
!2855 = !DILocation(line: 1859, column: 12, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 1859, column: 7)
!2857 = !DILocation(line: 1859, column: 20, scope: !2856)
!2858 = !DILocation(line: 1854, column: 15, scope: !2842)
!2859 = !DILocation(line: 1859, column: 23, scope: !2856)
!2860 = !DILocation(line: 1859, column: 40, scope: !2856)
!2861 = !DILocation(line: 1859, column: 7, scope: !2842)
!2862 = !DILocation(line: 1860, column: 12, scope: !2856)
!2863 = !DILocation(line: 1860, column: 5, scope: !2856)
!2864 = !DILocation(line: 1862, column: 7, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 1862, column: 7)
!2866 = !DILocation(line: 1862, column: 23, scope: !2865)
!2867 = !DILocation(line: 1862, column: 7, scope: !2842)
!2868 = !DILocation(line: 1863, column: 12, scope: !2865)
!2869 = !DILocation(line: 1863, column: 5, scope: !2865)
!2870 = !DILocation(line: 1865, column: 9, scope: !2842)
!2871 = !DILocation(line: 1866, column: 8, scope: !2842)
!2872 = !DILocation(line: 1867, column: 14, scope: !2842)
!2873 = !DILocation(line: 1867, column: 23, scope: !2842)
!2874 = !DILocation(line: 1870, column: 7, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 1869, column: 7)
!2876 = !DILocation(line: 1870, column: 11, scope: !2875)
!2877 = !DILocation(line: 1869, column: 7, scope: !2842)
!2878 = !DILocation(line: 1877, column: 14, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 1877, column: 7)
!2880 = !DILocation(line: 1877, column: 11, scope: !2879)
!2881 = !DILocation(line: 1877, column: 7, scope: !2842)
!2882 = !DILocation(line: 1879, column: 23, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 1879, column: 11)
!2884 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 1878, column: 5)
!2885 = !DILocation(line: 1879, column: 16, scope: !2883)
!2886 = !DILocation(line: 1879, column: 11, scope: !2884)
!2887 = !DILocation(line: 1881, column: 7, scope: !2883)
!2888 = !DILocation(line: 1881, column: 53, scope: !2883)
!2889 = !DILocation(line: 1880, column: 8, scope: !2883)
!2890 = !DILocation(line: 1880, column: 2, scope: !2883)
!2891 = !DILocation(line: 1886, column: 12, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 1886, column: 7)
!2893 = !DILocation(line: 1886, column: 7, scope: !2842)
!2894 = !DILocation(line: 1888, column: 13, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2892, file: !3, line: 1887, column: 5)
!2896 = !DILocation(line: 1889, column: 13, scope: !2895)
!2897 = !DILocation(line: 1891, column: 7, scope: !2895)
!2898 = !DILocation(line: 1894, column: 11, scope: !2842)
!2899 = !DILocation(line: 1894, column: 3, scope: !2842)
!2900 = !DILocation(line: 1897, column: 13, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 1895, column: 5)
!2902 = !DILocation(line: 1898, column: 7, scope: !2901)
!2903 = !DILocation(line: 1901, column: 11, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 1901, column: 11)
!2905 = !DILocation(line: 1901, column: 11, scope: !2901)
!2906 = !DILocation(line: 1902, column: 8, scope: !2904)
!2907 = !DILocation(line: 1902, column: 2, scope: !2904)
!2908 = !DILocation(line: 1904, column: 8, scope: !2904)
!2909 = !DILocation(line: 1908, column: 13, scope: !2901)
!2910 = !DILocation(line: 1909, column: 7, scope: !2901)
!2911 = !DILocation(line: 1912, column: 2, scope: !2842)
!2912 = !DILocation(line: 1915, column: 14, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 1915, column: 7)
!2914 = !DILocation(line: 1915, column: 11, scope: !2913)
!2915 = !DILocation(line: 1915, column: 7, scope: !2842)
!2916 = !DILocation(line: 1918, column: 12, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 1918, column: 7)
!2918 = !DILocation(line: 1918, column: 7, scope: !2842)
!2919 = !DILocation(line: 1919, column: 27, scope: !2917)
!2920 = !DILocation(line: 1919, column: 5, scope: !2917)
!2921 = !DILocation(line: 1922, column: 1, scope: !2842)
!2922 = distinct !DISubprogram(name: "instantiate_scev", scope: !3, file: !3, line: 2641, type: !2923, scopeLine: 2643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2925)
!2923 = !DISubroutineType(types: !2924)
!2924 = !{!476, !1253, !1016, !476}
!2925 = !{!2926, !2927, !2928, !2929, !2930}
!2926 = !DILocalVariable(name: "instantiate_below", arg: 1, scope: !2922, file: !3, line: 2641, type: !1253)
!2927 = !DILocalVariable(name: "evolution_loop", arg: 2, scope: !2922, file: !3, line: 2641, type: !1016)
!2928 = !DILocalVariable(name: "chrec", arg: 3, scope: !2922, file: !3, line: 2642, type: !476)
!2929 = !DILocalVariable(name: "res", scope: !2922, file: !3, line: 2644, type: !476)
!2930 = !DILocalVariable(name: "cache", scope: !2922, file: !3, line: 2645, type: !1285)
!2931 = !DILocation(line: 0, scope: !2922)
!2932 = !DILocation(line: 2645, column: 18, scope: !2922)
!2933 = !DILocation(line: 2647, column: 7, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 2647, column: 7)
!2935 = !DILocation(line: 2647, column: 17, scope: !2934)
!2936 = !DILocation(line: 2647, column: 21, scope: !2934)
!2937 = !DILocation(line: 2647, column: 32, scope: !2934)
!2938 = !DILocation(line: 2647, column: 7, scope: !2922)
!2939 = !DILocation(line: 2649, column: 7, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2934, file: !3, line: 2648, column: 5)
!2941 = !DILocation(line: 2650, column: 16, scope: !2940)
!2942 = !DILocation(line: 2650, column: 78, scope: !2940)
!2943 = !DILocation(line: 2650, column: 7, scope: !2940)
!2944 = !DILocation(line: 2651, column: 16, scope: !2940)
!2945 = !DILocation(line: 2651, column: 72, scope: !2940)
!2946 = !DILocation(line: 2651, column: 7, scope: !2940)
!2947 = !DILocation(line: 2652, column: 16, scope: !2940)
!2948 = !DILocation(line: 2652, column: 7, scope: !2940)
!2949 = !DILocation(line: 2653, column: 27, scope: !2940)
!2950 = !DILocation(line: 2653, column: 7, scope: !2940)
!2951 = !DILocation(line: 2654, column: 16, scope: !2940)
!2952 = !DILocation(line: 2654, column: 7, scope: !2940)
!2953 = !DILocation(line: 2655, column: 5, scope: !2940)
!2954 = !DILocation(line: 2657, column: 9, scope: !2922)
!2955 = !DILocation(line: 2660, column: 7, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 2660, column: 7)
!2957 = !DILocation(line: 2660, column: 17, scope: !2956)
!2958 = !DILocation(line: 2660, column: 21, scope: !2956)
!2959 = !DILocation(line: 2660, column: 32, scope: !2956)
!2960 = !DILocation(line: 2660, column: 7, scope: !2922)
!2961 = !DILocation(line: 2662, column: 7, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 2661, column: 5)
!2963 = !DILocation(line: 2663, column: 27, scope: !2962)
!2964 = !DILocation(line: 2663, column: 7, scope: !2962)
!2965 = !DILocation(line: 2664, column: 16, scope: !2962)
!2966 = !DILocation(line: 2664, column: 7, scope: !2962)
!2967 = !DILocation(line: 2665, column: 5, scope: !2962)
!2968 = !DILocation(line: 2667, column: 3, scope: !2922)
!2969 = !DILocation(line: 2669, column: 3, scope: !2922)
!2970 = distinct !DISubprogram(name: "hash_scev_info", scope: !3, file: !3, line: 331, type: !1293, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2971)
!2971 = !{!2972}
!2972 = !DILocalVariable(name: "elt", arg: 1, scope: !2970, file: !3, line: 331, type: !1296)
!2973 = !DILocation(line: 0, scope: !2970)
!2974 = !DILocation(line: 333, column: 10, scope: !2970)
!2975 = !DILocation(line: 333, column: 3, scope: !2970)
!2976 = distinct !DISubprogram(name: "eq_scev_info", scope: !3, file: !3, line: 339, type: !1301, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2977)
!2977 = !{!2978, !2979, !2980, !2981}
!2978 = !DILocalVariable(name: "e1", arg: 1, scope: !2976, file: !3, line: 339, type: !1296)
!2979 = !DILocalVariable(name: "e2", arg: 2, scope: !2976, file: !3, line: 339, type: !1296)
!2980 = !DILocalVariable(name: "elt1", scope: !2976, file: !3, line: 341, type: !1839)
!2981 = !DILocalVariable(name: "elt2", scope: !2976, file: !3, line: 342, type: !1839)
!2982 = !DILocation(line: 0, scope: !2976)
!2983 = !DILocation(line: 344, column: 17, scope: !2976)
!2984 = !DILocation(line: 344, column: 30, scope: !2976)
!2985 = !DILocation(line: 344, column: 21, scope: !2976)
!2986 = !DILocation(line: 345, column: 4, scope: !2976)
!2987 = !DILocation(line: 345, column: 13, scope: !2976)
!2988 = !DILocation(line: 345, column: 41, scope: !2976)
!2989 = !DILocation(line: 345, column: 32, scope: !2976)
!2990 = !DILocation(line: 344, column: 3, scope: !2976)
!2991 = distinct !DISubprogram(name: "del_scev_info", scope: !3, file: !3, line: 351, type: !1306, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2992)
!2992 = !{!2993}
!2993 = !DILocalVariable(name: "e", arg: 1, scope: !2991, file: !3, line: 351, type: !473)
!2994 = !DILocation(line: 0, scope: !2991)
!2995 = !DILocation(line: 353, column: 3, scope: !2991)
!2996 = !DILocation(line: 354, column: 1, scope: !2991)
!2997 = distinct !DISubprogram(name: "instantiate_scev_r", scope: !3, file: !3, line: 2552, type: !2998, scopeLine: 2555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3000)
!2998 = !DISubroutineType(types: !2999)
!2999 = !{!476, !1253, !1016, !476, !468, !1285, !469}
!3000 = !{!3001, !3002, !3003, !3004, !3005, !3006}
!3001 = !DILocalVariable(name: "instantiate_below", arg: 1, scope: !2997, file: !3, line: 2552, type: !1253)
!3002 = !DILocalVariable(name: "evolution_loop", arg: 2, scope: !2997, file: !3, line: 2553, type: !1016)
!3003 = !DILocalVariable(name: "chrec", arg: 3, scope: !2997, file: !3, line: 2553, type: !476)
!3004 = !DILocalVariable(name: "fold_conversions", arg: 4, scope: !2997, file: !3, line: 2554, type: !468)
!3005 = !DILocalVariable(name: "cache", arg: 5, scope: !2997, file: !3, line: 2554, type: !1285)
!3006 = !DILocalVariable(name: "size_expr", arg: 6, scope: !2997, file: !3, line: 2554, type: !469)
!3007 = !DILocation(line: 0, scope: !2997)
!3008 = !DILocation(line: 2557, column: 16, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 2557, column: 7)
!3010 = !DILocation(line: 2557, column: 21, scope: !3009)
!3011 = !DILocation(line: 2557, column: 19, scope: !3009)
!3012 = !DILocation(line: 2557, column: 7, scope: !2997)
!3013 = !DILocation(line: 2558, column: 12, scope: !3009)
!3014 = !DILocation(line: 2558, column: 5, scope: !3009)
!3015 = !DILocation(line: 2560, column: 7, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 2560, column: 7)
!3017 = !DILocation(line: 2561, column: 7, scope: !3016)
!3018 = !DILocation(line: 2561, column: 10, scope: !3016)
!3019 = !DILocation(line: 2560, column: 7, scope: !2997)
!3020 = !DILocation(line: 2564, column: 11, scope: !2997)
!3021 = !DILocation(line: 2564, column: 3, scope: !2997)
!3022 = !DILocation(line: 2567, column: 14, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 2565, column: 5)
!3024 = !DILocation(line: 2567, column: 7, scope: !3023)
!3025 = !DILocation(line: 2571, column: 14, scope: !3023)
!3026 = !DILocation(line: 2571, column: 7, scope: !3023)
!3027 = !DILocation(line: 2579, column: 11, scope: !3023)
!3028 = !DILocation(line: 2579, column: 30, scope: !3023)
!3029 = !DILocation(line: 2580, column: 11, scope: !3023)
!3030 = !DILocation(line: 2581, column: 11, scope: !3023)
!3031 = !DILocation(line: 2578, column: 14, scope: !3023)
!3032 = !DILocation(line: 2578, column: 7, scope: !3023)
!3033 = !DILocation(line: 2586, column: 12, scope: !3023)
!3034 = !DILocation(line: 2586, column: 31, scope: !3023)
!3035 = !DILocation(line: 2585, column: 14, scope: !3023)
!3036 = !DILocation(line: 2585, column: 7, scope: !3023)
!3037 = !DILocation(line: 2592, column: 8, scope: !3023)
!3038 = !DILocation(line: 2592, column: 27, scope: !3023)
!3039 = !DILocation(line: 2593, column: 8, scope: !3023)
!3040 = !DILocation(line: 2591, column: 14, scope: !3023)
!3041 = !DILocation(line: 2591, column: 7, scope: !3023)
!3042 = !DILocation(line: 2597, column: 14, scope: !3023)
!3043 = !DILocation(line: 2597, column: 7, scope: !3023)
!3044 = !DILocation(line: 2600, column: 14, scope: !3023)
!3045 = !DILocation(line: 2600, column: 7, scope: !3023)
!3046 = !DILocation(line: 2606, column: 7, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 2606, column: 7)
!3048 = !DILocation(line: 2606, column: 7, scope: !2997)
!3049 = !DILocation(line: 2607, column: 12, scope: !3047)
!3050 = !DILocation(line: 2607, column: 5, scope: !3047)
!3051 = !DILocation(line: 2609, column: 11, scope: !2997)
!3052 = !DILocation(line: 2609, column: 3, scope: !2997)
!3053 = !DILocation(line: 2612, column: 14, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 2610, column: 5)
!3055 = !DILocation(line: 2612, column: 7, scope: !3054)
!3056 = !DILocation(line: 2616, column: 14, scope: !3054)
!3057 = !DILocation(line: 2616, column: 7, scope: !3054)
!3058 = !DILocation(line: 2620, column: 14, scope: !3054)
!3059 = !DILocation(line: 2620, column: 7, scope: !3054)
!3060 = !DILocation(line: 2631, column: 10, scope: !2997)
!3061 = !DILocation(line: 2631, column: 3, scope: !2997)
!3062 = !DILocation(line: 2632, column: 1, scope: !2997)
!3063 = distinct !DISubprogram(name: "resolve_mixers", scope: !3, file: !3, line: 2678, type: !2447, scopeLine: 2679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3064)
!3064 = !{!3065, !3066, !3067, !3068}
!3065 = !DILocalVariable(name: "loop", arg: 1, scope: !3063, file: !3, line: 2678, type: !1016)
!3066 = !DILocalVariable(name: "chrec", arg: 2, scope: !3063, file: !3, line: 2678, type: !476)
!3067 = !DILocalVariable(name: "cache", scope: !3063, file: !3, line: 2680, type: !1285)
!3068 = !DILocalVariable(name: "ret", scope: !3063, file: !3, line: 2681, type: !476)
!3069 = !DILocation(line: 0, scope: !3063)
!3070 = !DILocation(line: 2680, column: 18, scope: !3063)
!3071 = !DILocation(line: 2681, column: 34, scope: !3063)
!3072 = !DILocation(line: 2681, column: 14, scope: !3063)
!3073 = !DILocation(line: 2683, column: 3, scope: !3063)
!3074 = !DILocation(line: 2684, column: 3, scope: !3063)
!3075 = distinct !DISubprogram(name: "set_nb_iterations_in_loop", scope: !3, file: !3, line: 908, type: !2447, scopeLine: 910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3076)
!3076 = !{!3077, !3078}
!3077 = !DILocalVariable(name: "loop", arg: 1, scope: !3075, file: !3, line: 908, type: !1016)
!3078 = !DILocalVariable(name: "res", arg: 2, scope: !3075, file: !3, line: 909, type: !476)
!3079 = !DILocation(line: 0, scope: !3075)
!3080 = !DILocation(line: 911, column: 7, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 911, column: 7)
!3082 = !DILocation(line: 911, column: 17, scope: !3081)
!3083 = !DILocation(line: 911, column: 21, scope: !3081)
!3084 = !DILocation(line: 911, column: 32, scope: !3081)
!3085 = !DILocation(line: 911, column: 7, scope: !3075)
!3086 = !DILocation(line: 913, column: 7, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 912, column: 5)
!3088 = !DILocation(line: 914, column: 27, scope: !3087)
!3089 = !DILocation(line: 914, column: 7, scope: !3087)
!3090 = !DILocation(line: 915, column: 16, scope: !3087)
!3091 = !DILocation(line: 915, column: 7, scope: !3087)
!3092 = !DILocation(line: 916, column: 5, scope: !3087)
!3093 = !DILocation(line: 918, column: 9, scope: !3075)
!3094 = !DILocation(line: 918, column: 23, scope: !3075)
!3095 = !DILocation(line: 919, column: 3, scope: !3075)
!3096 = distinct !DISubprogram(name: "number_of_exit_cond_executions", scope: !3, file: !3, line: 2754, type: !2516, scopeLine: 2755, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3097)
!3097 = !{!3098, !3099, !3100}
!3098 = !DILocalVariable(name: "loop", arg: 1, scope: !3096, file: !3, line: 2754, type: !1016)
!3099 = !DILocalVariable(name: "ret", scope: !3096, file: !3, line: 2756, type: !476)
!3100 = !DILocalVariable(name: "type", scope: !3096, file: !3, line: 2757, type: !476)
!3101 = !DILocation(line: 0, scope: !3096)
!3102 = !DILocation(line: 2756, column: 14, scope: !3096)
!3103 = !DILocation(line: 2757, column: 15, scope: !3096)
!3104 = !DILocation(line: 2759, column: 7, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 2759, column: 7)
!3106 = !DILocation(line: 2759, column: 7, scope: !3096)
!3107 = !DILocation(line: 2762, column: 37, scope: !3096)
!3108 = !DILocation(line: 2762, column: 9, scope: !3096)
!3109 = !DILocation(line: 2763, column: 7, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 2763, column: 7)
!3111 = !DILocation(line: 2763, column: 23, scope: !3110)
!3112 = !DILocation(line: 2764, column: 7, scope: !3110)
!3113 = !DILocation(line: 2764, column: 10, scope: !3110)
!3114 = !DILocation(line: 2765, column: 12, scope: !3110)
!3115 = !DILocation(line: 2763, column: 7, scope: !3096)
!3116 = !DILocation(line: 2768, column: 1, scope: !3096)
!3117 = distinct !DISubprogram(name: "chrec_type", scope: !2585, file: !2585, line: 234, type: !3118, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3120)
!3118 = !DISubroutineType(types: !3119)
!3119 = !{!476, !2346}
!3120 = !{!3121}
!3121 = !DILocalVariable(name: "chrec", arg: 1, scope: !3117, file: !2585, line: 234, type: !2346)
!3122 = !DILocation(line: 0, scope: !3117)
!3123 = !DILocation(line: 236, column: 7, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3117, file: !2585, line: 236, column: 7)
!3125 = !DILocation(line: 236, column: 7, scope: !3117)
!3126 = !DILocation(line: 239, column: 10, scope: !3117)
!3127 = !DILocation(line: 239, column: 3, scope: !3117)
!3128 = !DILocation(line: 240, column: 1, scope: !3117)
!3129 = distinct !DISubprogram(name: "gather_stats_on_scev_database", scope: !3, file: !3, line: 2980, type: !3130, scopeLine: 2981, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3132)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{null}
!3132 = !{!3133}
!3133 = !DILocalVariable(name: "stats", scope: !3129, file: !3, line: 2982, type: !1842)
!3134 = !DILocation(line: 2982, column: 3, scope: !3129)
!3135 = !DILocation(line: 2984, column: 8, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 2984, column: 7)
!3137 = !DILocation(line: 2984, column: 7, scope: !3129)
!3138 = !DILocation(line: 0, scope: !3129)
!3139 = !DILocation(line: 2987, column: 3, scope: !3129)
!3140 = !DILocation(line: 2989, column: 18, scope: !3129)
!3141 = !DILocation(line: 2989, column: 3, scope: !3129)
!3142 = !DILocation(line: 2992, column: 22, scope: !3129)
!3143 = !DILocation(line: 2992, column: 3, scope: !3129)
!3144 = !DILocation(line: 2993, column: 1, scope: !3129)
!3145 = distinct !DISubprogram(name: "reset_chrecs_counters", scope: !3, file: !3, line: 2822, type: !3146, scopeLine: 2823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3148)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{null, !1841}
!3148 = !{!3149}
!3149 = !DILocalVariable(name: "stats", arg: 1, scope: !3145, file: !3, line: 2822, type: !1841)
!3150 = !DILocation(line: 0, scope: !3145)
!3151 = !DILocation(line: 2824, column: 10, scope: !3145)
!3152 = !DILocation(line: 2824, column: 20, scope: !3145)
!3153 = !DILocation(line: 2825, column: 10, scope: !3145)
!3154 = !DILocation(line: 2825, column: 20, scope: !3145)
!3155 = !DILocation(line: 2826, column: 10, scope: !3145)
!3156 = !DILocation(line: 2826, column: 29, scope: !3145)
!3157 = !DILocation(line: 2827, column: 10, scope: !3145)
!3158 = !DILocation(line: 2827, column: 25, scope: !3145)
!3159 = !DILocation(line: 2828, column: 10, scope: !3145)
!3160 = !DILocation(line: 2828, column: 29, scope: !3145)
!3161 = !DILocation(line: 2829, column: 10, scope: !3145)
!3162 = !DILocation(line: 2829, column: 26, scope: !3145)
!3163 = !DILocation(line: 2830, column: 1, scope: !3145)
!3164 = distinct !DISubprogram(name: "gather_stats_on_scev_database_1", scope: !3, file: !3, line: 2968, type: !3165, scopeLine: 2969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3167)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{!469, !1309, !473}
!3167 = !{!3168, !3169, !3170}
!3168 = !DILocalVariable(name: "slot", arg: 1, scope: !3164, file: !3, line: 2968, type: !1309)
!3169 = !DILocalVariable(name: "stats", arg: 2, scope: !3164, file: !3, line: 2968, type: !473)
!3170 = !DILocalVariable(name: "entry", scope: !3164, file: !3, line: 2970, type: !1829)
!3171 = !DILocation(line: 0, scope: !3164)
!3172 = !DILocation(line: 2970, column: 58, scope: !3164)
!3173 = !DILocation(line: 2972, column: 30, scope: !3164)
!3174 = !DILocation(line: 2972, column: 37, scope: !3164)
!3175 = !DILocation(line: 2972, column: 3, scope: !3164)
!3176 = !DILocation(line: 2974, column: 3, scope: !3164)
!3177 = distinct !DISubprogram(name: "dump_chrecs_stats", scope: !3, file: !3, line: 2835, type: !3178, scopeLine: 2836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3180)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{null, !1926, !1841}
!3180 = !{!3181, !3182}
!3181 = !DILocalVariable(name: "file", arg: 1, scope: !3177, file: !3, line: 2835, type: !1926)
!3182 = !DILocalVariable(name: "stats", arg: 2, scope: !3177, file: !3, line: 2835, type: !1841)
!3183 = !DILocation(line: 0, scope: !3177)
!3184 = !DILocation(line: 2837, column: 3, scope: !3177)
!3185 = !DILocation(line: 2838, column: 3, scope: !3177)
!3186 = !DILocation(line: 2839, column: 59, scope: !3177)
!3187 = !DILocation(line: 2839, column: 3, scope: !3177)
!3188 = !DILocation(line: 2840, column: 61, scope: !3177)
!3189 = !DILocation(line: 2840, column: 3, scope: !3177)
!3190 = !DILocation(line: 2842, column: 12, scope: !3177)
!3191 = !DILocation(line: 2841, column: 3, scope: !3177)
!3192 = !DILocation(line: 2843, column: 57, scope: !3177)
!3193 = !DILocation(line: 2843, column: 3, scope: !3177)
!3194 = !DILocation(line: 2844, column: 3, scope: !3177)
!3195 = !DILocation(line: 2845, column: 47, scope: !3177)
!3196 = !DILocation(line: 2845, column: 3, scope: !3177)
!3197 = !DILocation(line: 2847, column: 12, scope: !3177)
!3198 = !DILocation(line: 2846, column: 3, scope: !3177)
!3199 = !DILocation(line: 2848, column: 3, scope: !3177)
!3200 = !DILocation(line: 2850, column: 26, scope: !3177)
!3201 = !DILocation(line: 2850, column: 11, scope: !3177)
!3202 = !DILocation(line: 2850, column: 5, scope: !3177)
!3203 = !DILocation(line: 2849, column: 3, scope: !3177)
!3204 = !DILocation(line: 2851, column: 53, scope: !3177)
!3205 = !DILocation(line: 2851, column: 3, scope: !3177)
!3206 = !DILocation(line: 2852, column: 53, scope: !3177)
!3207 = !DILocation(line: 2852, column: 3, scope: !3177)
!3208 = !DILocation(line: 2853, column: 3, scope: !3177)
!3209 = !DILocation(line: 2854, column: 3, scope: !3177)
!3210 = !DILocation(line: 2855, column: 1, scope: !3177)
!3211 = distinct !DISubprogram(name: "scev_initialize", scope: !3, file: !3, line: 3016, type: !3130, scopeLine: 3017, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3212)
!3212 = !{!3213, !3219}
!3213 = !DILocalVariable(name: "li", scope: !3211, file: !3, line: 3018, type: !3214)
!3214 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_iterator", file: !330, line: 515, baseType: !3215)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !330, line: 508, size: 128, elements: !3216)
!3216 = !{!3217, !3218}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "to_visit", scope: !3215, file: !330, line: 511, baseType: !1850, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !3215, file: !330, line: 514, baseType: !7, size: 32, offset: 64)
!3219 = !DILocalVariable(name: "loop", scope: !3211, file: !3, line: 3019, type: !1016)
!3220 = !DILocation(line: 3018, column: 3, scope: !3211)
!3221 = !DILocation(line: 3019, column: 3, scope: !3211)
!3222 = !DILocation(line: 3021, column: 27, scope: !3211)
!3223 = !DILocation(line: 3021, column: 25, scope: !3211)
!3224 = !DILocation(line: 3028, column: 3, scope: !3211)
!3225 = !DILocation(line: 0, scope: !3211)
!3226 = !DILocation(line: 3030, column: 3, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 3030, column: 3)
!3228 = !DILocation(line: 3030, column: 3, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 3030, column: 3)
!3230 = !DILocation(line: 3032, column: 13, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 3031, column: 5)
!3232 = !DILocation(line: 3032, column: 27, scope: !3231)
!3233 = distinct !{!3233, !3226, !3234}
!3234 = !DILocation(line: 3033, column: 5, scope: !3227)
!3235 = !DILocation(line: 3034, column: 1, scope: !3211)
!3236 = distinct !DISubprogram(name: "initialize_scalar_evolutions_analyzer", scope: !3, file: !3, line: 3000, type: !3130, scopeLine: 3001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1919)
!3237 = !DILocation(line: 3003, column: 7, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 3003, column: 7)
!3239 = !DILocation(line: 3003, column: 23, scope: !3238)
!3240 = !DILocation(line: 3003, column: 7, scope: !3236)
!3241 = !DILocation(line: 3005, column: 30, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 3004, column: 5)
!3243 = !DILocation(line: 3006, column: 25, scope: !3242)
!3244 = !DILocation(line: 3006, column: 23, scope: !3242)
!3245 = !DILocation(line: 3007, column: 21, scope: !3242)
!3246 = !DILocation(line: 3007, column: 19, scope: !3242)
!3247 = !DILocation(line: 3008, column: 37, scope: !3242)
!3248 = !DILocation(line: 3008, column: 7, scope: !3242)
!3249 = !DILocation(line: 3008, column: 35, scope: !3242)
!3250 = !DILocation(line: 3009, column: 33, scope: !3242)
!3251 = !DILocation(line: 3009, column: 7, scope: !3242)
!3252 = !DILocation(line: 3009, column: 31, scope: !3242)
!3253 = !DILocation(line: 3010, column: 5, scope: !3242)
!3254 = !DILocation(line: 3011, column: 1, scope: !3236)
!3255 = distinct !DISubprogram(name: "fel_init", scope: !330, file: !330, line: 535, type: !3256, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3260)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{null, !3258, !3259, !7}
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!3260 = !{!3261, !3262, !3263, !3264, !3265, !3266}
!3261 = !DILocalVariable(name: "li", arg: 1, scope: !3255, file: !330, line: 535, type: !3258)
!3262 = !DILocalVariable(name: "loop", arg: 2, scope: !3255, file: !330, line: 535, type: !3259)
!3263 = !DILocalVariable(name: "flags", arg: 3, scope: !3255, file: !330, line: 535, type: !7)
!3264 = !DILocalVariable(name: "aloop", scope: !3255, file: !330, line: 537, type: !1016)
!3265 = !DILocalVariable(name: "i", scope: !3255, file: !330, line: 538, type: !7)
!3266 = !DILocalVariable(name: "mn", scope: !3255, file: !330, line: 539, type: !469)
!3267 = !DILocation(line: 0, scope: !3255)
!3268 = !DILocation(line: 537, column: 3, scope: !3255)
!3269 = !DILocation(line: 541, column: 7, scope: !3255)
!3270 = !DILocation(line: 541, column: 11, scope: !3255)
!3271 = !DILocation(line: 542, column: 8, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3255, file: !330, line: 542, column: 7)
!3273 = !DILocation(line: 542, column: 7, scope: !3255)
!3274 = !DILocation(line: 544, column: 11, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3272, file: !330, line: 543, column: 5)
!3276 = !DILocation(line: 544, column: 20, scope: !3275)
!3277 = !DILocation(line: 545, column: 13, scope: !3275)
!3278 = !DILocation(line: 546, column: 7, scope: !3275)
!3279 = !DILocation(line: 549, column: 18, scope: !3255)
!3280 = !DILocation(line: 549, column: 7, scope: !3255)
!3281 = !DILocation(line: 549, column: 16, scope: !3255)
!3282 = !DILocation(line: 550, column: 15, scope: !3255)
!3283 = !DILocation(line: 550, column: 8, scope: !3255)
!3284 = !DILocation(line: 552, column: 13, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3255, file: !330, line: 552, column: 7)
!3286 = !DILocation(line: 552, column: 7, scope: !3255)
!3287 = !DILocation(line: 554, column: 7, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3289, file: !330, line: 554, column: 7)
!3289 = distinct !DILexicalBlock(scope: !3285, file: !330, line: 553, column: 5)
!3290 = !DILocation(line: 0, scope: !3288)
!3291 = !DILocation(line: 554, column: 19, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3288, file: !330, line: 554, column: 7)
!3293 = !DILocation(line: 555, column: 6, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3292, file: !330, line: 555, column: 6)
!3295 = !DILocation(line: 555, column: 12, scope: !3294)
!3296 = !DILocation(line: 556, column: 6, scope: !3294)
!3297 = !DILocation(line: 556, column: 16, scope: !3294)
!3298 = !DILocation(line: 556, column: 22, scope: !3294)
!3299 = !DILocation(line: 557, column: 6, scope: !3294)
!3300 = !DILocation(line: 557, column: 16, scope: !3294)
!3301 = !DILocation(line: 557, column: 20, scope: !3294)
!3302 = !DILocation(line: 555, column: 6, scope: !3292)
!3303 = !DILocation(line: 558, column: 4, scope: !3294)
!3304 = !DILocation(line: 554, column: 75, scope: !3292)
!3305 = !DILocation(line: 554, column: 7, scope: !3292)
!3306 = distinct !{!3306, !3287, !3307}
!3307 = !DILocation(line: 558, column: 4, scope: !3288)
!3308 = !DILocation(line: 560, column: 18, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3285, file: !330, line: 560, column: 12)
!3310 = !DILocation(line: 0, scope: !3309)
!3311 = !DILocation(line: 560, column: 12, scope: !3285)
!3312 = !DILocation(line: 563, column: 7, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !330, line: 563, column: 7)
!3314 = distinct !DILexicalBlock(scope: !3309, file: !330, line: 561, column: 5)
!3315 = !DILocation(line: 590, column: 7, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3309, file: !330, line: 587, column: 5)
!3317 = !DILocation(line: 564, column: 5, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3313, file: !330, line: 563, column: 7)
!3319 = !DILocation(line: 564, column: 12, scope: !3318)
!3320 = !DILocation(line: 564, column: 18, scope: !3318)
!3321 = !DILocation(line: 568, column: 7, scope: !3314)
!3322 = !DILocation(line: 565, column: 20, scope: !3318)
!3323 = !DILocation(line: 565, column: 11, scope: !3318)
!3324 = !DILocation(line: 563, column: 7, scope: !3318)
!3325 = distinct !{!3325, !3312, !3326}
!3326 = !DILocation(line: 566, column: 2, scope: !3313)
!3327 = !DILocation(line: 570, column: 8, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !330, line: 570, column: 8)
!3329 = distinct !DILexicalBlock(scope: !3314, file: !330, line: 569, column: 2)
!3330 = !DILocation(line: 570, column: 15, scope: !3328)
!3331 = !DILocation(line: 570, column: 19, scope: !3328)
!3332 = !DILocation(line: 570, column: 8, scope: !3329)
!3333 = !DILocation(line: 571, column: 6, scope: !3328)
!3334 = !DILocation(line: 573, column: 15, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3329, file: !330, line: 573, column: 8)
!3336 = !DILocation(line: 573, column: 8, scope: !3335)
!3337 = !DILocation(line: 573, column: 8, scope: !3329)
!3338 = !DILocation(line: 575, column: 19, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3340, file: !330, line: 575, column: 8)
!3340 = distinct !DILexicalBlock(scope: !3335, file: !330, line: 574, column: 6)
!3341 = !DILocation(line: 575, column: 13, scope: !3339)
!3342 = !DILocation(line: 576, column: 6, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3339, file: !330, line: 575, column: 8)
!3344 = !DILocation(line: 576, column: 13, scope: !3343)
!3345 = !DILocation(line: 576, column: 19, scope: !3343)
!3346 = !DILocation(line: 575, column: 8, scope: !3339)
!3347 = !DILocation(line: 577, column: 21, scope: !3343)
!3348 = !DILocation(line: 577, column: 12, scope: !3343)
!3349 = !DILocation(line: 575, column: 8, scope: !3343)
!3350 = distinct !{!3350, !3346, !3351}
!3351 = !DILocation(line: 578, column: 3, scope: !3339)
!3352 = !DILocation(line: 580, column: 14, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3335, file: !330, line: 580, column: 13)
!3354 = !DILocation(line: 580, column: 13, scope: !3335)
!3355 = !DILocation(line: 583, column: 14, scope: !3353)
!3356 = !DILocation(line: 583, column: 12, scope: !3353)
!3357 = distinct !{!3357, !3321, !3358}
!3358 = !DILocation(line: 584, column: 2, scope: !3314)
!3359 = !DILocation(line: 592, column: 8, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3361, file: !330, line: 592, column: 8)
!3361 = distinct !DILexicalBlock(scope: !3316, file: !330, line: 591, column: 2)
!3362 = !DILocation(line: 592, column: 15, scope: !3360)
!3363 = !DILocation(line: 592, column: 19, scope: !3360)
!3364 = !DILocation(line: 592, column: 8, scope: !3361)
!3365 = !DILocation(line: 593, column: 6, scope: !3360)
!3366 = !DILocation(line: 595, column: 15, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3361, file: !330, line: 595, column: 8)
!3368 = !DILocation(line: 595, column: 21, scope: !3367)
!3369 = !DILocation(line: 595, column: 8, scope: !3361)
!3370 = !DILocation(line: 599, column: 8, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3367, file: !330, line: 598, column: 6)
!3372 = !DILocation(line: 596, column: 21, scope: !3367)
!3373 = !DILocation(line: 596, column: 12, scope: !3367)
!3374 = !DILocation(line: 596, column: 6, scope: !3367)
!3375 = !DILocation(line: 599, column: 15, scope: !3371)
!3376 = !DILocation(line: 599, column: 21, scope: !3371)
!3377 = !DILocation(line: 599, column: 29, scope: !3371)
!3378 = !DILocation(line: 599, column: 39, scope: !3371)
!3379 = !DILocation(line: 599, column: 44, scope: !3371)
!3380 = !DILocation(line: 0, scope: !3371)
!3381 = !DILocation(line: 600, column: 11, scope: !3371)
!3382 = !DILocation(line: 600, column: 9, scope: !3371)
!3383 = distinct !{!3383, !3370, !3384}
!3384 = !DILocation(line: 600, column: 28, scope: !3371)
!3385 = !DILocation(line: 601, column: 18, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3371, file: !330, line: 601, column: 12)
!3387 = !DILocation(line: 601, column: 12, scope: !3371)
!3388 = !DILocation(line: 603, column: 23, scope: !3371)
!3389 = !DILocation(line: 603, column: 14, scope: !3371)
!3390 = distinct !{!3390, !3315, !3391}
!3391 = !DILocation(line: 605, column: 2, scope: !3316)
!3392 = !DILocation(line: 608, column: 3, scope: !3255)
!3393 = !DILocation(line: 609, column: 1, scope: !3255)
!3394 = distinct !DISubprogram(name: "fel_next", scope: !330, file: !330, line: 518, type: !3395, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3397)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{null, !3258, !3259}
!3397 = !{!3398, !3399, !3400}
!3398 = !DILocalVariable(name: "li", arg: 1, scope: !3394, file: !330, line: 518, type: !3258)
!3399 = !DILocalVariable(name: "loop", arg: 2, scope: !3394, file: !330, line: 518, type: !3259)
!3400 = !DILocalVariable(name: "anum", scope: !3394, file: !330, line: 520, type: !469)
!3401 = !DILocation(line: 0, scope: !3394)
!3402 = !DILocation(line: 520, column: 3, scope: !3394)
!3403 = !DILocation(line: 522, column: 3, scope: !3394)
!3404 = !DILocation(line: 522, column: 10, scope: !3394)
!3405 = !DILocation(line: 524, column: 14, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3394, file: !330, line: 523, column: 5)
!3407 = !DILocation(line: 525, column: 25, scope: !3406)
!3408 = !DILocation(line: 525, column: 15, scope: !3406)
!3409 = !DILocation(line: 525, column: 13, scope: !3406)
!3410 = !DILocation(line: 526, column: 11, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3406, file: !330, line: 526, column: 11)
!3412 = !DILocation(line: 526, column: 11, scope: !3406)
!3413 = distinct !{!3413, !3403, !3414}
!3414 = !DILocation(line: 528, column: 5, scope: !3394)
!3415 = !DILocation(line: 530, column: 3, scope: !3394)
!3416 = !DILocation(line: 531, column: 9, scope: !3394)
!3417 = !DILocation(line: 532, column: 1, scope: !3394)
!3418 = distinct !DISubprogram(name: "scev_reset_htab", scope: !3, file: !3, line: 3040, type: !3130, scopeLine: 3041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1919)
!3419 = !DILocation(line: 3042, column: 8, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 3042, column: 7)
!3421 = !DILocation(line: 3042, column: 7, scope: !3418)
!3422 = !DILocation(line: 3045, column: 3, scope: !3418)
!3423 = !DILocation(line: 3046, column: 1, scope: !3418)
!3424 = distinct !DISubprogram(name: "scev_reset", scope: !3, file: !3, line: 3052, type: !3130, scopeLine: 3053, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3425)
!3425 = !{!3426, !3427}
!3426 = !DILocalVariable(name: "li", scope: !3424, file: !3, line: 3054, type: !3214)
!3427 = !DILocalVariable(name: "loop", scope: !3424, file: !3, line: 3055, type: !1016)
!3428 = !DILocation(line: 3054, column: 3, scope: !3424)
!3429 = !DILocation(line: 3055, column: 3, scope: !3424)
!3430 = !DILocation(line: 3057, column: 3, scope: !3424)
!3431 = !DILocation(line: 3059, column: 8, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3424, file: !3, line: 3059, column: 7)
!3433 = !DILocation(line: 3059, column: 7, scope: !3424)
!3434 = !DILocation(line: 0, scope: !3424)
!3435 = !DILocation(line: 3062, column: 3, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3424, file: !3, line: 3062, column: 3)
!3437 = !DILocation(line: 3062, column: 3, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3436, file: !3, line: 3062, column: 3)
!3439 = !DILocation(line: 3064, column: 13, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 3063, column: 5)
!3441 = !DILocation(line: 3064, column: 27, scope: !3440)
!3442 = distinct !{!3442, !3435, !3443}
!3443 = !DILocation(line: 3065, column: 5, scope: !3436)
!3444 = !DILocation(line: 3066, column: 1, scope: !3424)
!3445 = distinct !DISubprogram(name: "simple_iv", scope: !3, file: !3, line: 3090, type: !3446, scopeLine: 3092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3449)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!468, !1016, !1016, !476, !3448, !468}
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64)
!3449 = !{!3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457}
!3450 = !DILocalVariable(name: "wrto_loop", arg: 1, scope: !3445, file: !3, line: 3090, type: !1016)
!3451 = !DILocalVariable(name: "use_loop", arg: 2, scope: !3445, file: !3, line: 3090, type: !1016)
!3452 = !DILocalVariable(name: "op", arg: 3, scope: !3445, file: !3, line: 3090, type: !476)
!3453 = !DILocalVariable(name: "iv", arg: 4, scope: !3445, file: !3, line: 3091, type: !3448)
!3454 = !DILocalVariable(name: "allow_nonconstant_step", arg: 5, scope: !3445, file: !3, line: 3091, type: !468)
!3455 = !DILocalVariable(name: "type", scope: !3445, file: !3, line: 3093, type: !476)
!3456 = !DILocalVariable(name: "ev", scope: !3445, file: !3, line: 3093, type: !476)
!3457 = !DILocalVariable(name: "folded_casts", scope: !3445, file: !3, line: 3094, type: !468)
!3458 = !DILocation(line: 0, scope: !3445)
!3459 = !DILocation(line: 3094, column: 3, scope: !3445)
!3460 = !DILocation(line: 3096, column: 7, scope: !3445)
!3461 = !DILocation(line: 3096, column: 12, scope: !3445)
!3462 = !DILocation(line: 3097, column: 7, scope: !3445)
!3463 = !DILocation(line: 3097, column: 12, scope: !3445)
!3464 = !DILocation(line: 3098, column: 7, scope: !3445)
!3465 = !DILocation(line: 3098, column: 19, scope: !3445)
!3466 = !DILocation(line: 3100, column: 10, scope: !3445)
!3467 = !DILocation(line: 3101, column: 7, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 3101, column: 7)
!3469 = !DILocation(line: 3101, column: 24, scope: !3468)
!3470 = !DILocation(line: 3102, column: 7, scope: !3468)
!3471 = !DILocation(line: 3102, column: 27, scope: !3468)
!3472 = !DILocation(line: 3101, column: 7, scope: !3445)
!3473 = !DILocation(line: 3105, column: 8, scope: !3445)
!3474 = !DILocation(line: 3107, column: 7, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 3107, column: 7)
!3476 = !DILocation(line: 3108, column: 7, scope: !3475)
!3477 = !DILocation(line: 3108, column: 65, scope: !3475)
!3478 = !DILocation(line: 3108, column: 10, scope: !3475)
!3479 = !DILocation(line: 3107, column: 7, scope: !3445)
!3480 = !DILocation(line: 3111, column: 7, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 3111, column: 7)
!3482 = !DILocation(line: 3111, column: 7, scope: !3445)
!3483 = !DILocation(line: 3113, column: 16, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 3112, column: 5)
!3485 = !DILocation(line: 3114, column: 33, scope: !3484)
!3486 = !DILocation(line: 3114, column: 18, scope: !3484)
!3487 = !DILocation(line: 3114, column: 16, scope: !3484)
!3488 = !DILocation(line: 3115, column: 23, scope: !3484)
!3489 = !DILocation(line: 3116, column: 7, scope: !3484)
!3490 = !DILocation(line: 3119, column: 7, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 3119, column: 7)
!3492 = !DILocation(line: 3119, column: 22, scope: !3491)
!3493 = !DILocation(line: 3120, column: 7, scope: !3491)
!3494 = !DILocation(line: 3120, column: 10, scope: !3491)
!3495 = !DILocation(line: 3120, column: 55, scope: !3491)
!3496 = !DILocation(line: 3120, column: 33, scope: !3491)
!3497 = !DILocation(line: 3120, column: 30, scope: !3491)
!3498 = !DILocation(line: 3119, column: 7, scope: !3445)
!3499 = !DILocation(line: 3123, column: 14, scope: !3445)
!3500 = !DILocation(line: 3123, column: 12, scope: !3445)
!3501 = !DILocation(line: 3124, column: 9, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 3124, column: 7)
!3503 = !DILocation(line: 3124, column: 32, scope: !3502)
!3504 = !DILocation(line: 3124, column: 35, scope: !3502)
!3505 = !DILocation(line: 3124, column: 56, scope: !3502)
!3506 = !DILocation(line: 3125, column: 7, scope: !3502)
!3507 = !DILocation(line: 3125, column: 10, scope: !3502)
!3508 = !DILocation(line: 3124, column: 7, scope: !3445)
!3509 = !DILocation(line: 3128, column: 14, scope: !3445)
!3510 = !DILocation(line: 3128, column: 12, scope: !3445)
!3511 = !DILocation(line: 3129, column: 33, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 3129, column: 7)
!3513 = !DILocation(line: 3129, column: 7, scope: !3512)
!3514 = !DILocation(line: 3129, column: 7, scope: !3445)
!3515 = !DILocation(line: 3132, column: 22, scope: !3445)
!3516 = !DILocation(line: 3132, column: 35, scope: !3445)
!3517 = !DILocation(line: 3132, column: 38, scope: !3445)
!3518 = !DILocation(line: 3132, column: 19, scope: !3445)
!3519 = !DILocation(line: 3134, column: 3, scope: !3445)
!3520 = !DILocation(line: 3135, column: 1, scope: !3445)
!3521 = distinct !DISubprogram(name: "analyze_scalar_evolution_in_loop", scope: !3, file: !3, line: 2011, type: !3522, scopeLine: 2013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3524)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{!476, !1016, !1016, !476, !467}
!3524 = !{!3525, !3526, !3527, !3528, !3529, !3530, !3531}
!3525 = !DILocalVariable(name: "wrto_loop", arg: 1, scope: !3521, file: !3, line: 2011, type: !1016)
!3526 = !DILocalVariable(name: "use_loop", arg: 2, scope: !3521, file: !3, line: 2011, type: !1016)
!3527 = !DILocalVariable(name: "version", arg: 3, scope: !3521, file: !3, line: 2012, type: !476)
!3528 = !DILocalVariable(name: "folded_casts", arg: 4, scope: !3521, file: !3, line: 2012, type: !467)
!3529 = !DILocalVariable(name: "val", scope: !3521, file: !3, line: 2014, type: !468)
!3530 = !DILocalVariable(name: "ev", scope: !3521, file: !3, line: 2015, type: !476)
!3531 = !DILocalVariable(name: "tmp", scope: !3521, file: !3, line: 2015, type: !476)
!3532 = !DILocation(line: 0, scope: !3521)
!3533 = !DILocation(line: 2014, column: 3, scope: !3521)
!3534 = !DILocation(line: 2014, column: 8, scope: !3521)
!3535 = !DILocation(line: 2036, column: 7, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2036, column: 7)
!3537 = !DILocation(line: 2036, column: 7, scope: !3521)
!3538 = !DILocation(line: 2037, column: 19, scope: !3536)
!3539 = !DILocation(line: 2037, column: 5, scope: !3536)
!3540 = !DILocation(line: 2038, column: 3, scope: !3521)
!3541 = !DILocation(line: 2040, column: 13, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2039, column: 5)
!3543 = !DILocation(line: 2041, column: 12, scope: !3542)
!3544 = !DILocation(line: 2043, column: 31, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 2043, column: 11)
!3546 = !DILocation(line: 2043, column: 24, scope: !3545)
!3547 = !DILocation(line: 2044, column: 16, scope: !3545)
!3548 = !DILocation(line: 2044, column: 2, scope: !3545)
!3549 = !DILocation(line: 2046, column: 20, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 2046, column: 11)
!3551 = !DILocation(line: 2046, column: 11, scope: !3542)
!3552 = !DILocation(line: 2052, column: 50, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 2052, column: 11)
!3554 = !DILocation(line: 2052, column: 12, scope: !3553)
!3555 = !DILocation(line: 2053, column: 8, scope: !3553)
!3556 = !DILocation(line: 2053, column: 4, scope: !3553)
!3557 = !DILocation(line: 2056, column: 18, scope: !3542)
!3558 = distinct !{!3558, !3540, !3559}
!3559 = !DILocation(line: 2057, column: 5, scope: !3521)
!3560 = !DILocation(line: 2058, column: 1, scope: !3521)
!3561 = !DILocation(line: 2054, column: 9, scope: !3553)
!3562 = !DILocation(line: 2054, column: 2, scope: !3553)
!3563 = !DILocation(line: 0, scope: !3542)
!3564 = distinct !DISubprogram(name: "tree_does_not_contain_chrecs", scope: !2585, file: !2585, line: 226, type: !2667, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3565)
!3565 = !{!3566}
!3566 = !DILocalVariable(name: "expr", arg: 1, scope: !3564, file: !2585, line: 226, type: !2346)
!3567 = !DILocation(line: 0, scope: !3564)
!3568 = !DILocation(line: 228, column: 11, scope: !3564)
!3569 = !DILocation(line: 228, column: 10, scope: !3564)
!3570 = !DILocation(line: 228, column: 3, scope: !3564)
!3571 = distinct !DISubprogram(name: "scev_analysis", scope: !3, file: !3, line: 3140, type: !3130, scopeLine: 3141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3572)
!3572 = !{!3573}
!3573 = !DILocalVariable(name: "exit_conditions", scope: !3571, file: !3, line: 3142, type: !1863)
!3574 = !DILocation(line: 3142, column: 3, scope: !3571)
!3575 = !DILocation(line: 3144, column: 21, scope: !3571)
!3576 = !DILocation(line: 0, scope: !3571)
!3577 = !DILocation(line: 3144, column: 19, scope: !3571)
!3578 = !DILocation(line: 3145, column: 3, scope: !3571)
!3579 = !DILocation(line: 3147, column: 7, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 3147, column: 7)
!3581 = !DILocation(line: 3147, column: 17, scope: !3580)
!3582 = !DILocation(line: 3147, column: 21, scope: !3580)
!3583 = !DILocation(line: 3147, column: 32, scope: !3580)
!3584 = !DILocation(line: 3147, column: 7, scope: !3571)
!3585 = !DILocation(line: 3148, column: 5, scope: !3580)
!3586 = !DILocation(line: 3150, column: 3, scope: !3571)
!3587 = !DILocation(line: 3151, column: 3, scope: !3571)
!3588 = !DILocation(line: 3152, column: 1, scope: !3571)
!3589 = distinct !DISubprogram(name: "VEC_gimple_heap_alloc", scope: !391, file: !391, line: 34, type: !3590, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3592)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{!1863, !469}
!3592 = !{!3593}
!3593 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3589, file: !391, line: 34, type: !469)
!3594 = !DILocation(line: 0, scope: !3589)
!3595 = !DILocation(line: 34, column: 1, scope: !3589)
!3596 = distinct !DISubprogram(name: "select_loops_exit_conditions", scope: !3, file: !3, line: 985, type: !3597, scopeLine: 986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3600)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{null, !3599}
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!3600 = !{!3601, !3602}
!3601 = !DILocalVariable(name: "exit_conditions", arg: 1, scope: !3596, file: !3, line: 985, type: !3599)
!3602 = !DILocalVariable(name: "function_body", scope: !3596, file: !3, line: 987, type: !1016)
!3603 = !DILocation(line: 0, scope: !3596)
!3604 = !DILocation(line: 987, column: 32, scope: !3596)
!3605 = !DILocation(line: 987, column: 47, scope: !3596)
!3606 = !DILocation(line: 989, column: 43, scope: !3596)
!3607 = !DILocation(line: 989, column: 3, scope: !3596)
!3608 = !DILocation(line: 990, column: 1, scope: !3596)
!3609 = distinct !DISubprogram(name: "analyze_scalar_evolution_for_all_loop_phi_nodes", scope: !3, file: !3, line: 2927, type: !3597, scopeLine: 2928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3610)
!3610 = !{!3611, !3612, !3613, !3614, !3615, !3616, !3623, !3627, !3628}
!3611 = !DILocalVariable(name: "exit_conditions", arg: 1, scope: !3609, file: !3, line: 2927, type: !3599)
!3612 = !DILocalVariable(name: "i", scope: !3609, file: !3, line: 2929, type: !7)
!3613 = !DILocalVariable(name: "stats", scope: !3609, file: !3, line: 2930, type: !1842)
!3614 = !DILocalVariable(name: "cond", scope: !3609, file: !3, line: 2931, type: !800)
!3615 = !DILocalVariable(name: "phi", scope: !3609, file: !3, line: 2931, type: !800)
!3616 = !DILocalVariable(name: "psi", scope: !3609, file: !3, line: 2932, type: !3617)
!3617 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !391, line: 265, baseType: !3618)
!3618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !391, line: 254, size: 192, elements: !3619)
!3619 = !{!3620, !3621, !3622}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3618, file: !391, line: 257, baseType: !795, size: 64)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3618, file: !391, line: 263, baseType: !790, size: 64, offset: 64)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3618, file: !391, line: 264, baseType: !1253, size: 64, offset: 128)
!3623 = !DILocalVariable(name: "loop", scope: !3624, file: !3, line: 2938, type: !1016)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 2937, column: 5)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 2936, column: 3)
!3626 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 2936, column: 3)
!3627 = !DILocalVariable(name: "bb", scope: !3624, file: !3, line: 2939, type: !1253)
!3628 = !DILocalVariable(name: "chrec", scope: !3624, file: !3, line: 2940, type: !476)
!3629 = !DILocation(line: 0, scope: !3609)
!3630 = !DILocation(line: 2930, column: 3, scope: !3609)
!3631 = !DILocation(line: 2931, column: 3, scope: !3609)
!3632 = !DILocation(line: 2932, column: 3, scope: !3609)
!3633 = !DILocation(line: 2934, column: 3, scope: !3609)
!3634 = !DILocation(line: 0, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 2945, column: 7)
!3636 = !DILocation(line: 2936, column: 8, scope: !3626)
!3637 = !DILocation(line: 0, scope: !3626)
!3638 = !DILocation(line: 2936, column: 15, scope: !3625)
!3639 = !DILocation(line: 2936, column: 3, scope: !3626)
!3640 = !DILocation(line: 2942, column: 36, scope: !3624)
!3641 = !DILocation(line: 2942, column: 14, scope: !3624)
!3642 = !DILocation(line: 0, scope: !3624)
!3643 = !DILocation(line: 2943, column: 18, scope: !3624)
!3644 = !DILocation(line: 2945, column: 18, scope: !3635)
!3645 = !DILocation(line: 2945, column: 12, scope: !3635)
!3646 = !DILocation(line: 2945, column: 40, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 2945, column: 7)
!3648 = !DILocation(line: 2945, column: 39, scope: !3647)
!3649 = !DILocation(line: 2945, column: 7, scope: !3635)
!3650 = !DILocation(line: 2947, column: 10, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3647, file: !3, line: 2946, column: 2)
!3652 = !DILocation(line: 2948, column: 23, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 2948, column: 8)
!3654 = !DILocation(line: 2948, column: 8, scope: !3653)
!3655 = !DILocation(line: 2948, column: 8, scope: !3651)
!3656 = !DILocation(line: 2952, column: 37, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 2949, column: 6)
!3658 = !DILocation(line: 2952, column: 5, scope: !3657)
!3659 = !DILocation(line: 2950, column: 16, scope: !3657)
!3660 = !DILocation(line: 2954, column: 12, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3657, file: !3, line: 2954, column: 12)
!3662 = !DILocation(line: 2954, column: 22, scope: !3661)
!3663 = !DILocation(line: 2954, column: 26, scope: !3661)
!3664 = !DILocation(line: 2954, column: 37, scope: !3661)
!3665 = !DILocation(line: 2954, column: 12, scope: !3657)
!3666 = !DILocation(line: 2955, column: 3, scope: !3661)
!3667 = !DILocation(line: 2945, column: 57, scope: !3647)
!3668 = !DILocation(line: 2945, column: 7, scope: !3647)
!3669 = distinct !{!3669, !3649, !3670}
!3670 = !DILocation(line: 2957, column: 2, scope: !3635)
!3671 = !DILocation(line: 2936, column: 65, scope: !3625)
!3672 = !DILocation(line: 2936, column: 3, scope: !3625)
!3673 = distinct !{!3673, !3639, !3674}
!3674 = !DILocation(line: 2958, column: 5, scope: !3626)
!3675 = !DILocation(line: 2960, column: 7, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 2960, column: 7)
!3677 = !DILocation(line: 2960, column: 17, scope: !3676)
!3678 = !DILocation(line: 2960, column: 21, scope: !3676)
!3679 = !DILocation(line: 2960, column: 32, scope: !3676)
!3680 = !DILocation(line: 2960, column: 7, scope: !3609)
!3681 = !DILocation(line: 2961, column: 5, scope: !3676)
!3682 = !DILocation(line: 2962, column: 1, scope: !3609)
!3683 = distinct !DISubprogram(name: "number_of_iterations_for_all_loops", scope: !3, file: !3, line: 2775, type: !3597, scopeLine: 2776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3684)
!3684 = !{!3685, !3686, !3687, !3688, !3689, !3690}
!3685 = !DILocalVariable(name: "exit_conditions", arg: 1, scope: !3683, file: !3, line: 2775, type: !3599)
!3686 = !DILocalVariable(name: "i", scope: !3683, file: !3, line: 2777, type: !7)
!3687 = !DILocalVariable(name: "nb_chrec_dont_know_loops", scope: !3683, file: !3, line: 2778, type: !7)
!3688 = !DILocalVariable(name: "nb_static_loops", scope: !3683, file: !3, line: 2779, type: !7)
!3689 = !DILocalVariable(name: "cond", scope: !3683, file: !3, line: 2780, type: !800)
!3690 = !DILocalVariable(name: "res", scope: !3691, file: !3, line: 2784, type: !476)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 2783, column: 5)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 2782, column: 3)
!3693 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 2782, column: 3)
!3694 = !DILocation(line: 0, scope: !3683)
!3695 = !DILocation(line: 2780, column: 3, scope: !3683)
!3696 = !DILocation(line: 2782, column: 8, scope: !3693)
!3697 = !DILocation(line: 0, scope: !3693)
!3698 = !DILocation(line: 2779, column: 12, scope: !3683)
!3699 = !DILocation(line: 2782, column: 15, scope: !3692)
!3700 = !DILocation(line: 2782, column: 3, scope: !3693)
!3701 = !DILocation(line: 2784, column: 68, scope: !3691)
!3702 = !DILocation(line: 2784, column: 46, scope: !3691)
!3703 = !DILocation(line: 2784, column: 18, scope: !3691)
!3704 = !DILocation(line: 0, scope: !3691)
!3705 = !DILocation(line: 2785, column: 11, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2785, column: 11)
!3707 = !DILocation(line: 2785, column: 11, scope: !3691)
!3708 = !DILocation(line: 2782, column: 65, scope: !3692)
!3709 = !DILocation(line: 2782, column: 3, scope: !3692)
!3710 = distinct !{!3710, !3700, !3711}
!3711 = !DILocation(line: 2789, column: 5, scope: !3693)
!3712 = !DILocation(line: 2791, column: 7, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 2791, column: 7)
!3714 = !DILocation(line: 2791, column: 7, scope: !3683)
!3715 = !DILocation(line: 2793, column: 7, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 2792, column: 5)
!3717 = !DILocation(line: 2794, column: 16, scope: !3716)
!3718 = !DILocation(line: 2794, column: 7, scope: !3716)
!3719 = !DILocation(line: 2795, column: 16, scope: !3716)
!3720 = !DILocation(line: 2795, column: 7, scope: !3716)
!3721 = !DILocation(line: 2796, column: 16, scope: !3716)
!3722 = !DILocation(line: 2796, column: 7, scope: !3716)
!3723 = !DILocation(line: 2797, column: 16, scope: !3716)
!3724 = !DILocation(line: 2797, column: 51, scope: !3716)
!3725 = !DILocation(line: 2797, column: 7, scope: !3716)
!3726 = !DILocation(line: 2798, column: 16, scope: !3716)
!3727 = !DILocation(line: 2798, column: 7, scope: !3716)
!3728 = !DILocation(line: 2799, column: 16, scope: !3716)
!3729 = !DILocation(line: 2799, column: 7, scope: !3716)
!3730 = !DILocation(line: 2801, column: 20, scope: !3716)
!3731 = !DILocation(line: 2801, column: 7, scope: !3716)
!3732 = !DILocation(line: 2802, column: 5, scope: !3716)
!3733 = !DILocation(line: 2803, column: 1, scope: !3683)
!3734 = distinct !DISubprogram(name: "VEC_gimple_heap_free", scope: !391, file: !391, line: 34, type: !3597, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3735)
!3735 = !{!3736}
!3736 = !DILocalVariable(name: "vec_", arg: 1, scope: !3734, file: !391, line: 34, type: !3599)
!3737 = !DILocation(line: 0, scope: !3734)
!3738 = !DILocation(line: 34, column: 1, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3734, file: !391, line: 34, column: 1)
!3740 = !DILocation(line: 34, column: 1, scope: !3734)
!3741 = distinct !DISubprogram(name: "scev_finalize", scope: !3, file: !3, line: 3157, type: !3130, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1919)
!3742 = !DILocation(line: 3159, column: 8, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 3159, column: 7)
!3744 = !DILocation(line: 3159, column: 7, scope: !3741)
!3745 = !DILocation(line: 3161, column: 3, scope: !3741)
!3746 = !DILocation(line: 3162, column: 25, scope: !3741)
!3747 = !DILocation(line: 3163, column: 1, scope: !3741)
!3748 = distinct !DISubprogram(name: "expression_expensive_p", scope: !3, file: !3, line: 3169, type: !3749, scopeLine: 3170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3751)
!3749 = !DISubroutineType(types: !3750)
!3750 = !{!468, !476}
!3751 = !{!3752, !3753}
!3752 = !DILocalVariable(name: "expr", arg: 1, scope: !3748, file: !3, line: 3169, type: !476)
!3753 = !DILocalVariable(name: "code", scope: !3748, file: !3, line: 3171, type: !134)
!3754 = !DILocation(line: 3202, column: 14, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3748, file: !3, line: 3194, column: 5)
!3756 = !DILocation(line: 0, scope: !3748)
!3757 = !DILocation(line: 3173, column: 7, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3748, file: !3, line: 3173, column: 7)
!3759 = !DILocation(line: 3173, column: 7, scope: !3748)
!3760 = !DILocation(line: 3176, column: 10, scope: !3748)
!3761 = !DILocation(line: 3178, column: 7, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3748, file: !3, line: 3177, column: 7)
!3763 = !DILocation(line: 3189, column: 27, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !3, line: 3189, column: 11)
!3765 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 3186, column: 5)
!3766 = !DILocation(line: 3189, column: 12, scope: !3764)
!3767 = !DILocation(line: 3189, column: 11, scope: !3765)
!3768 = !DILocation(line: 3193, column: 11, scope: !3748)
!3769 = !DILocation(line: 3193, column: 3, scope: !3748)
!3770 = !DILocation(line: 3197, column: 35, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 3197, column: 11)
!3772 = !DILocation(line: 3197, column: 11, scope: !3771)
!3773 = !DILocation(line: 3197, column: 11, scope: !3755)
!3774 = !DILocation(line: 3202, column: 38, scope: !3755)
!3775 = !DILocation(line: 3207, column: 1, scope: !3748)
!3776 = distinct !DISubprogram(name: "scev_const_prop", scope: !3, file: !3, line: 3217, type: !3777, scopeLine: 3218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3779)
!3777 = !DISubroutineType(types: !3778)
!3778 = !{!7}
!3779 = !{!3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3802, !3806, !3810, !3811, !3812, !3813}
!3780 = !DILocalVariable(name: "bb", scope: !3776, file: !3, line: 3219, type: !1253)
!3781 = !DILocalVariable(name: "name", scope: !3776, file: !3, line: 3220, type: !476)
!3782 = !DILocalVariable(name: "type", scope: !3776, file: !3, line: 3220, type: !476)
!3783 = !DILocalVariable(name: "ev", scope: !3776, file: !3, line: 3220, type: !476)
!3784 = !DILocalVariable(name: "phi", scope: !3776, file: !3, line: 3221, type: !800)
!3785 = !DILocalVariable(name: "ass", scope: !3776, file: !3, line: 3221, type: !800)
!3786 = !DILocalVariable(name: "loop", scope: !3776, file: !3, line: 3222, type: !1016)
!3787 = !DILocalVariable(name: "ex_loop", scope: !3776, file: !3, line: 3222, type: !1016)
!3788 = !DILocalVariable(name: "ssa_names_to_remove", scope: !3776, file: !3, line: 3223, type: !1371)
!3789 = !DILocalVariable(name: "i", scope: !3776, file: !3, line: 3224, type: !7)
!3790 = !DILocalVariable(name: "li", scope: !3776, file: !3, line: 3225, type: !3214)
!3791 = !DILocalVariable(name: "psi", scope: !3776, file: !3, line: 3226, type: !3617)
!3792 = !DILocalVariable(name: "bi", scope: !3793, file: !3, line: 3269, type: !3795)
!3793 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 3268, column: 5)
!3794 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 3267, column: 7)
!3795 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !705, line: 218, baseType: !3796)
!3796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !705, line: 203, size: 256, elements: !3797)
!3797 = !{!3798, !3799, !3800, !3801}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !3796, file: !705, line: 206, baseType: !708, size: 64)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !3796, file: !705, line: 209, baseType: !708, size: 64, offset: 64)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !3796, file: !705, line: 212, baseType: !7, size: 32, offset: 128)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !3796, file: !705, line: 217, baseType: !718, size: 64, offset: 192)
!3802 = !DILocalVariable(name: "psi", scope: !3803, file: !3, line: 3273, type: !3617)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 3272, column: 2)
!3804 = distinct !DILexicalBlock(scope: !3805, file: !3, line: 3271, column: 7)
!3805 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 3271, column: 7)
!3806 = !DILocalVariable(name: "exit", scope: !3807, file: !3, line: 3289, type: !780)
!3807 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 3288, column: 5)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 3287, column: 3)
!3809 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 3287, column: 3)
!3810 = !DILocalVariable(name: "def", scope: !3807, file: !3, line: 3290, type: !476)
!3811 = !DILocalVariable(name: "rslt", scope: !3807, file: !3, line: 3290, type: !476)
!3812 = !DILocalVariable(name: "niter", scope: !3807, file: !3, line: 3290, type: !476)
!3813 = !DILocalVariable(name: "bsi", scope: !3807, file: !3, line: 3291, type: !3617)
!3814 = !DILocation(line: 3222, column: 3, scope: !3776)
!3815 = !DILocation(line: 0, scope: !3776)
!3816 = !DILocation(line: 3224, column: 3, scope: !3776)
!3817 = !DILocation(line: 3225, column: 3, scope: !3776)
!3818 = !DILocation(line: 3226, column: 3, scope: !3776)
!3819 = !DILocation(line: 3228, column: 7, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 3228, column: 7)
!3821 = !DILocation(line: 3228, column: 26, scope: !3820)
!3822 = !DILocation(line: 3228, column: 7, scope: !3776)
!3823 = !DILocation(line: 3231, column: 3, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 3231, column: 3)
!3825 = !DILocation(line: 0, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !3, line: 3232, column: 5)
!3827 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 3231, column: 3)
!3828 = !DILocation(line: 0, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 3235, column: 7)
!3830 = !DILocation(line: 3231, column: 3, scope: !3827)
!3831 = !DILocation(line: 3223, column: 10, scope: !3776)
!3832 = !DILocation(line: 0, scope: !3824)
!3833 = !DILocation(line: 3233, column: 18, scope: !3826)
!3834 = !DILocation(line: 3233, column: 12, scope: !3826)
!3835 = !DILocation(line: 3235, column: 18, scope: !3829)
!3836 = !DILocation(line: 3235, column: 12, scope: !3829)
!3837 = !DILocation(line: 3235, column: 40, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 3235, column: 7)
!3839 = !DILocation(line: 3235, column: 39, scope: !3838)
!3840 = !DILocation(line: 3235, column: 7, scope: !3829)
!3841 = !DILocation(line: 3237, column: 10, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 3236, column: 2)
!3843 = !DILocation(line: 3238, column: 11, scope: !3842)
!3844 = !DILocation(line: 3240, column: 9, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 3240, column: 8)
!3846 = !DILocation(line: 3240, column: 8, scope: !3842)
!3847 = !DILocation(line: 3243, column: 11, scope: !3842)
!3848 = !DILocation(line: 3245, column: 9, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 3245, column: 8)
!3850 = !DILocation(line: 3246, column: 8, scope: !3849)
!3851 = !DILocation(line: 3246, column: 12, scope: !3849)
!3852 = !DILocation(line: 3245, column: 8, scope: !3842)
!3853 = !DILocation(line: 3249, column: 25, scope: !3842)
!3854 = !DILocation(line: 3249, column: 31, scope: !3842)
!3855 = !DILocation(line: 3249, column: 9, scope: !3842)
!3856 = !DILocation(line: 3250, column: 9, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 3250, column: 8)
!3858 = !DILocation(line: 3251, column: 8, scope: !3857)
!3859 = !DILocation(line: 3251, column: 12, scope: !3857)
!3860 = !DILocation(line: 3250, column: 8, scope: !3842)
!3861 = !DILocation(line: 3255, column: 13, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 3255, column: 8)
!3863 = !DILocation(line: 3255, column: 8, scope: !3842)
!3864 = !DILocation(line: 3256, column: 6, scope: !3862)
!3865 = !DILocation(line: 3258, column: 9, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 3258, column: 8)
!3867 = !DILocation(line: 3258, column: 8, scope: !3842)
!3868 = !DILocation(line: 3259, column: 28, scope: !3866)
!3869 = !DILocation(line: 3259, column: 6, scope: !3866)
!3870 = !DILocation(line: 3260, column: 41, scope: !3842)
!3871 = !DILocation(line: 3260, column: 4, scope: !3842)
!3872 = !DILocation(line: 3261, column: 2, scope: !3842)
!3873 = !DILocation(line: 3235, column: 57, scope: !3838)
!3874 = !DILocation(line: 3235, column: 7, scope: !3838)
!3875 = distinct !{!3875, !3840, !3876}
!3876 = !DILocation(line: 3261, column: 2, scope: !3829)
!3877 = !DILocation(line: 0, scope: !3827)
!3878 = distinct !{!3878, !3823, !3879}
!3879 = !DILocation(line: 3262, column: 5, scope: !3824)
!3880 = !DILocation(line: 3267, column: 7, scope: !3794)
!3881 = !DILocation(line: 3267, column: 7, scope: !3776)
!3882 = !DILocation(line: 3269, column: 7, scope: !3793)
!3883 = !DILocation(line: 0, scope: !3793)
!3884 = !DILocation(line: 3271, column: 7, scope: !3805)
!3885 = !DILocation(line: 0, scope: !3803)
!3886 = !DILocation(line: 3271, column: 7, scope: !3804)
!3887 = !DILocation(line: 3273, column: 4, scope: !3803)
!3888 = !DILocation(line: 3274, column: 11, scope: !3803)
!3889 = !DILocation(line: 3275, column: 10, scope: !3803)
!3890 = !DILocation(line: 3277, column: 4, scope: !3803)
!3891 = !DILocation(line: 3278, column: 10, scope: !3803)
!3892 = !DILocation(line: 3279, column: 4, scope: !3803)
!3893 = !DILocation(line: 3280, column: 2, scope: !3804)
!3894 = distinct !{!3894, !3884, !3895}
!3895 = !DILocation(line: 3280, column: 2, scope: !3805)
!3896 = !DILocation(line: 3282, column: 7, scope: !3793)
!3897 = !DILocation(line: 3283, column: 7, scope: !3793)
!3898 = !DILocation(line: 3284, column: 5, scope: !3794)
!3899 = !DILocation(line: 3284, column: 5, scope: !3793)
!3900 = !DILocation(line: 3287, column: 3, scope: !3809)
!3901 = !DILocation(line: 0, scope: !3807)
!3902 = !DILocation(line: 0, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 3311, column: 7)
!3904 = !DILocation(line: 3287, column: 3, scope: !3808)
!3905 = !DILocation(line: 3291, column: 7, scope: !3807)
!3906 = !DILocation(line: 3295, column: 14, scope: !3807)
!3907 = !DILocation(line: 3296, column: 12, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 3296, column: 11)
!3909 = !DILocation(line: 3296, column: 11, scope: !3807)
!3910 = !DILocation(line: 3299, column: 43, scope: !3807)
!3911 = !DILocation(line: 3299, column: 15, scope: !3807)
!3912 = !DILocation(line: 3300, column: 20, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 3300, column: 11)
!3914 = !DILocation(line: 3300, column: 17, scope: !3913)
!3915 = !DILocation(line: 3300, column: 11, scope: !3807)
!3916 = !DILocation(line: 3304, column: 33, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 3304, column: 11)
!3918 = !DILocation(line: 3304, column: 12, scope: !3917)
!3919 = !DILocation(line: 3304, column: 11, scope: !3807)
!3920 = !DILocation(line: 3305, column: 2, scope: !3917)
!3921 = !DILocation(line: 3306, column: 13, scope: !3807)
!3922 = !DILocation(line: 3306, column: 37, scope: !3807)
!3923 = !DILocation(line: 3308, column: 37, scope: !3807)
!3924 = !DILocation(line: 3309, column: 27, scope: !3807)
!3925 = !DILocation(line: 3309, column: 33, scope: !3807)
!3926 = !DILocation(line: 3309, column: 9, scope: !3807)
!3927 = !DILocation(line: 3309, column: 46, scope: !3807)
!3928 = !DILocation(line: 3308, column: 17, scope: !3807)
!3929 = !DILocation(line: 3311, column: 18, scope: !3903)
!3930 = !DILocation(line: 3311, column: 40, scope: !3903)
!3931 = !DILocation(line: 0, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !3, line: 3312, column: 2)
!3933 = distinct !DILexicalBlock(scope: !3903, file: !3, line: 3311, column: 7)
!3934 = !DILocation(line: 0, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 3331, column: 8)
!3936 = !DILocation(line: 3311, column: 12, scope: !3903)
!3937 = !DILocation(line: 3311, column: 48, scope: !3933)
!3938 = !DILocation(line: 3311, column: 47, scope: !3933)
!3939 = !DILocation(line: 3311, column: 7, scope: !3903)
!3940 = !DILocation(line: 3313, column: 10, scope: !3932)
!3941 = !DILocation(line: 3314, column: 11, scope: !3932)
!3942 = !DILocation(line: 3315, column: 10, scope: !3932)
!3943 = !DILocation(line: 3316, column: 9, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 3316, column: 8)
!3945 = !DILocation(line: 3316, column: 8, scope: !3932)
!3946 = !DILocation(line: 3318, column: 8, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 3317, column: 6)
!3948 = !DILocation(line: 3319, column: 8, scope: !3947)
!3949 = distinct !{!3949, !3939, !3950}
!3950 = !DILocation(line: 3359, column: 2, scope: !3903)
!3951 = !DILocation(line: 3322, column: 9, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 3322, column: 8)
!3953 = !DILocation(line: 3323, column: 8, scope: !3952)
!3954 = !DILocation(line: 3323, column: 12, scope: !3952)
!3955 = !DILocation(line: 3322, column: 8, scope: !3932)
!3956 = !DILocation(line: 3325, column: 8, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3952, file: !3, line: 3324, column: 6)
!3958 = !DILocation(line: 3326, column: 8, scope: !3957)
!3959 = !DILocation(line: 3329, column: 53, scope: !3932)
!3960 = !DILocation(line: 3329, column: 10, scope: !3932)
!3961 = !DILocation(line: 3330, column: 10, scope: !3932)
!3962 = !DILocation(line: 3331, column: 9, scope: !3935)
!3963 = !DILocation(line: 3332, column: 8, scope: !3935)
!3964 = !DILocation(line: 3332, column: 65, scope: !3935)
!3965 = !DILocation(line: 3332, column: 11, scope: !3935)
!3966 = !DILocation(line: 3336, column: 8, scope: !3935)
!3967 = !DILocation(line: 3336, column: 11, scope: !3935)
!3968 = !DILocation(line: 3344, column: 8, scope: !3935)
!3969 = !DILocation(line: 3344, column: 11, scope: !3935)
!3970 = !DILocation(line: 3331, column: 8, scope: !3932)
!3971 = !DILocation(line: 3346, column: 8, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 3345, column: 6)
!3973 = !DILocation(line: 3347, column: 8, scope: !3972)
!3974 = !DILocation(line: 3352, column: 10, scope: !3932)
!3975 = !DILocation(line: 3353, column: 4, scope: !3932)
!3976 = !DILocation(line: 3355, column: 10, scope: !3932)
!3977 = !DILocation(line: 3357, column: 10, scope: !3932)
!3978 = !DILocation(line: 3358, column: 4, scope: !3932)
!3979 = !DILocation(line: 3311, column: 7, scope: !3933)
!3980 = !DILocation(line: 3360, column: 5, scope: !3808)
!3981 = distinct !{!3981, !3900, !3982}
!3982 = !DILocation(line: 3360, column: 5, scope: !3809)
!3983 = !DILocation(line: 3362, column: 1, scope: !3776)
!3984 = distinct !DISubprogram(name: "number_of_loops", scope: !330, file: !330, line: 459, type: !3777, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1919)
!3985 = !DILocation(line: 461, column: 8, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3984, file: !330, line: 461, column: 7)
!3987 = !DILocation(line: 461, column: 7, scope: !3984)
!3988 = !DILocation(line: 464, column: 10, scope: !3984)
!3989 = !DILocation(line: 464, column: 3, scope: !3984)
!3990 = !DILocation(line: 0, scope: !3984)
!3991 = !DILocation(line: 465, column: 1, scope: !3984)
!3992 = distinct !DISubprogram(name: "gsi_end_p", scope: !391, file: !391, line: 4467, type: !3993, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3995)
!3993 = !DISubroutineType(types: !3994)
!3994 = !{!468, !3617}
!3995 = !{!3996}
!3996 = !DILocalVariable(name: "i", arg: 1, scope: !3992, file: !391, line: 4467, type: !3617)
!3997 = !DILocation(line: 4467, column: 33, scope: !3992)
!3998 = !DILocation(line: 4469, column: 12, scope: !3992)
!3999 = !DILocation(line: 4469, column: 16, scope: !3992)
!4000 = !DILocation(line: 4469, column: 10, scope: !3992)
!4001 = !DILocation(line: 4469, column: 3, scope: !3992)
!4002 = distinct !DISubprogram(name: "gsi_stmt", scope: !391, file: !391, line: 4501, type: !4003, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4005)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!800, !3617}
!4005 = !{!4006}
!4006 = !DILocalVariable(name: "i", arg: 1, scope: !4002, file: !391, line: 4501, type: !3617)
!4007 = !DILocation(line: 4501, column: 32, scope: !4002)
!4008 = !DILocation(line: 4503, column: 12, scope: !4002)
!4009 = !DILocation(line: 4503, column: 17, scope: !4002)
!4010 = !DILocation(line: 4503, column: 3, scope: !4002)
!4011 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !2409, file: !2409, line: 434, type: !4012, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4015)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{!476, !4014}
!4014 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !831, line: 27, baseType: !835)
!4015 = !{!4016}
!4016 = !DILocalVariable(name: "def", arg: 1, scope: !4011, file: !2409, line: 434, type: !4014)
!4017 = !DILocation(line: 0, scope: !4011)
!4018 = !DILocation(line: 436, column: 10, scope: !4011)
!4019 = !DILocation(line: 436, column: 3, scope: !4011)
!4020 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !391, file: !391, line: 3080, type: !4021, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4023)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!835, !800}
!4023 = !{!4024}
!4024 = !DILocalVariable(name: "gs", arg: 1, scope: !4020, file: !391, line: 3080, type: !800)
!4025 = !DILocation(line: 0, scope: !4020)
!4026 = !DILocation(line: 3083, column: 26, scope: !4020)
!4027 = !DILocation(line: 3083, column: 3, scope: !4020)
!4028 = distinct !DISubprogram(name: "gsi_next", scope: !391, file: !391, line: 4485, type: !4029, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4032)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{null, !4031}
!4031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!4032 = !{!4033}
!4033 = !DILocalVariable(name: "i", arg: 1, scope: !4028, file: !391, line: 4485, type: !4031)
!4034 = !DILocation(line: 0, scope: !4028)
!4035 = !DILocation(line: 4487, column: 15, scope: !4028)
!4036 = !DILocation(line: 4487, column: 20, scope: !4028)
!4037 = !DILocation(line: 4487, column: 10, scope: !4028)
!4038 = !DILocation(line: 4488, column: 1, scope: !4028)
!4039 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !705, file: !705, line: 224, type: !4040, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4047)
!4040 = !DISubroutineType(types: !4041)
!4041 = !{null, !4042, !4043, !7, !4046}
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 64)
!4043 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !477, line: 48, baseType: !4044)
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !704)
!4046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4047 = !{!4048, !4049, !4050, !4051}
!4048 = !DILocalVariable(name: "bi", arg: 1, scope: !4039, file: !705, line: 224, type: !4042)
!4049 = !DILocalVariable(name: "map", arg: 2, scope: !4039, file: !705, line: 224, type: !4043)
!4050 = !DILocalVariable(name: "start_bit", arg: 3, scope: !4039, file: !705, line: 225, type: !7)
!4051 = !DILocalVariable(name: "bit_no", arg: 4, scope: !4039, file: !705, line: 225, type: !4046)
!4052 = !DILocation(line: 0, scope: !4039)
!4053 = !DILocation(line: 227, column: 19, scope: !4039)
!4054 = !DILocation(line: 227, column: 12, scope: !4039)
!4055 = !DILocation(line: 228, column: 7, scope: !4039)
!4056 = !DILocation(line: 228, column: 12, scope: !4039)
!4057 = !DILocation(line: 0, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4059, file: !705, line: 233, column: 11)
!4059 = distinct !DILexicalBlock(scope: !4039, file: !705, line: 232, column: 5)
!4060 = !DILocation(line: 231, column: 3, scope: !4039)
!4061 = !DILocation(line: 233, column: 12, scope: !4058)
!4062 = !DILocation(line: 233, column: 11, scope: !4059)
!4063 = !DILocation(line: 235, column: 13, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4058, file: !705, line: 234, column: 2)
!4065 = !DILocation(line: 236, column: 4, scope: !4064)
!4066 = !DILocation(line: 239, column: 11, scope: !4059)
!4067 = distinct !{!4067, !4060, !4068}
!4068 = !DILocation(line: 242, column: 5, scope: !4039)
!4069 = !DILocation(line: 245, column: 11, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4039, file: !705, line: 245, column: 7)
!4071 = !DILocation(line: 245, column: 17, scope: !4070)
!4072 = !DILocation(line: 245, column: 22, scope: !4070)
!4073 = !DILocation(line: 245, column: 7, scope: !4039)
!4074 = !DILocation(line: 246, column: 27, scope: !4070)
!4075 = !DILocation(line: 246, column: 32, scope: !4070)
!4076 = !DILocation(line: 246, column: 5, scope: !4070)
!4077 = !DILocation(line: 249, column: 7, scope: !4039)
!4078 = !DILocation(line: 249, column: 15, scope: !4039)
!4079 = !DILocation(line: 250, column: 14, scope: !4039)
!4080 = !DILocation(line: 251, column: 7, scope: !4039)
!4081 = !DILocation(line: 251, column: 12, scope: !4039)
!4082 = !DILocation(line: 257, column: 16, scope: !4039)
!4083 = !DILocation(line: 257, column: 13, scope: !4039)
!4084 = !DILocation(line: 259, column: 11, scope: !4039)
!4085 = !DILocation(line: 260, column: 1, scope: !4039)
!4086 = distinct !DISubprogram(name: "bmp_iter_set", scope: !705, file: !705, line: 393, type: !4087, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4089)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{!468, !4042, !4046}
!4089 = !{!4090, !4091, !4092}
!4090 = !DILocalVariable(name: "bi", arg: 1, scope: !4086, file: !705, line: 393, type: !4042)
!4091 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4086, file: !705, line: 393, type: !4046)
!4092 = !DILabel(scope: !4093, name: "next_bit", file: !705, line: 398)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !705, line: 397, column: 5)
!4094 = distinct !DILexicalBlock(scope: !4086, file: !705, line: 396, column: 7)
!4095 = !DILocation(line: 0, scope: !4086)
!4096 = !DILocation(line: 396, column: 11, scope: !4094)
!4097 = !DILocation(line: 396, column: 7, scope: !4094)
!4098 = !DILocation(line: 396, column: 7, scope: !4086)
!4099 = !DILocation(line: 419, column: 15, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !705, line: 418, column: 2)
!4101 = distinct !DILexicalBlock(scope: !4086, file: !705, line: 415, column: 5)
!4102 = !DILocation(line: 399, column: 7, scope: !4093)
!4103 = !DILocation(line: 398, column: 5, scope: !4093)
!4104 = !DILocation(line: 399, column: 20, scope: !4093)
!4105 = !DILocation(line: 399, column: 25, scope: !4093)
!4106 = !DILocation(line: 399, column: 14, scope: !4093)
!4107 = !DILocation(line: 401, column: 13, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4093, file: !705, line: 400, column: 2)
!4109 = !DILocation(line: 402, column: 12, scope: !4108)
!4110 = distinct !{!4110, !4102, !4111}
!4111 = !DILocation(line: 403, column: 2, scope: !4093)
!4112 = !DILocation(line: 410, column: 15, scope: !4086)
!4113 = !DILocation(line: 410, column: 42, scope: !4086)
!4114 = !DILocation(line: 411, column: 26, scope: !4086)
!4115 = !DILocation(line: 410, column: 11, scope: !4086)
!4116 = !DILocation(line: 412, column: 7, scope: !4086)
!4117 = !DILocation(line: 412, column: 14, scope: !4086)
!4118 = !DILocation(line: 0, scope: !4101)
!4119 = !DILocation(line: 414, column: 3, scope: !4086)
!4120 = !DILocation(line: 417, column: 7, scope: !4101)
!4121 = !DILocation(line: 417, column: 18, scope: !4101)
!4122 = !DILocation(line: 417, column: 26, scope: !4101)
!4123 = !DILocation(line: 419, column: 13, scope: !4100)
!4124 = !DILocation(line: 420, column: 8, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4100, file: !705, line: 420, column: 8)
!4126 = !DILocation(line: 420, column: 8, scope: !4100)
!4127 = !DILocation(line: 422, column: 12, scope: !4100)
!4128 = !DILocation(line: 423, column: 15, scope: !4100)
!4129 = distinct !{!4129, !4120, !4130}
!4130 = !DILocation(line: 424, column: 2, scope: !4101)
!4131 = !DILocation(line: 427, column: 28, scope: !4101)
!4132 = !DILocation(line: 427, column: 16, scope: !4101)
!4133 = !DILocation(line: 428, column: 12, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4101, file: !705, line: 428, column: 11)
!4135 = !DILocation(line: 428, column: 11, scope: !4101)
!4136 = !DILocation(line: 430, column: 27, scope: !4101)
!4137 = !DILocation(line: 430, column: 32, scope: !4101)
!4138 = !DILocation(line: 430, column: 15, scope: !4101)
!4139 = !DILocation(line: 431, column: 19, scope: !4101)
!4140 = distinct !{!4140, !4119, !4141}
!4141 = !DILocation(line: 432, column: 5, scope: !4086)
!4142 = !DILocation(line: 433, column: 1, scope: !4086)
!4143 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !135, file: !135, line: 182, type: !4144, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4148)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{!476, !4146, !7}
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 64)
!4147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1353)
!4148 = !{!4149, !4150}
!4149 = !DILocalVariable(name: "vec_", arg: 1, scope: !4143, file: !135, line: 182, type: !4146)
!4150 = !DILocalVariable(name: "ix_", arg: 2, scope: !4143, file: !135, line: 182, type: !7)
!4151 = !DILocation(line: 0, scope: !4143)
!4152 = !DILocation(line: 182, column: 1, scope: !4143)
!4153 = distinct !DISubprogram(name: "bmp_iter_next", scope: !705, file: !705, line: 382, type: !4154, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4156)
!4154 = !DISubroutineType(types: !4155)
!4155 = !{null, !4042, !4046}
!4156 = !{!4157, !4158}
!4157 = !DILocalVariable(name: "bi", arg: 1, scope: !4153, file: !705, line: 382, type: !4042)
!4158 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4153, file: !705, line: 382, type: !4046)
!4159 = !DILocation(line: 0, scope: !4153)
!4160 = !DILocation(line: 384, column: 7, scope: !4153)
!4161 = !DILocation(line: 384, column: 12, scope: !4153)
!4162 = !DILocation(line: 385, column: 11, scope: !4153)
!4163 = !DILocation(line: 386, column: 1, scope: !4153)
!4164 = distinct !DISubprogram(name: "single_pred_p", scope: !343, file: !343, line: 634, type: !4165, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4170)
!4165 = !DISubroutineType(types: !4166)
!4166 = !{!468, !4167}
!4167 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !477, line: 112, baseType: !4168)
!4168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4169, size: 64)
!4169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !765)
!4170 = !{!4171}
!4171 = !DILocalVariable(name: "bb", arg: 1, scope: !4164, file: !343, line: 634, type: !4167)
!4172 = !DILocation(line: 0, scope: !4164)
!4173 = !DILocation(line: 636, column: 10, scope: !4164)
!4174 = !DILocation(line: 636, column: 33, scope: !4164)
!4175 = !DILocation(line: 636, column: 3, scope: !4164)
!4176 = distinct !DISubprogram(name: "gsi_after_labels", scope: !391, file: !391, line: 4510, type: !4177, scopeLine: 4511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4179)
!4177 = !DISubroutineType(types: !4178)
!4178 = !{!3617, !1253}
!4179 = !{!4180, !4181}
!4180 = !DILocalVariable(name: "bb", arg: 1, scope: !4176, file: !391, line: 4510, type: !1253)
!4181 = !DILocalVariable(name: "gsi", scope: !4176, file: !391, line: 4512, type: !3617)
!4182 = !DILocation(line: 0, scope: !4176)
!4183 = !DILocation(line: 4512, column: 24, scope: !4176)
!4184 = !DILocation(line: 4512, column: 30, scope: !4176)
!4185 = !DILocation(line: 4514, column: 3, scope: !4176)
!4186 = !DILocation(line: 4514, column: 11, scope: !4176)
!4187 = !DILocation(line: 4514, column: 27, scope: !4176)
!4188 = !DILocation(line: 4514, column: 43, scope: !4176)
!4189 = !DILocation(line: 4514, column: 30, scope: !4176)
!4190 = !DILocation(line: 4514, column: 59, scope: !4176)
!4191 = !DILocation(line: 4515, column: 5, scope: !4176)
!4192 = distinct !{!4192, !4185, !4193}
!4193 = !DILocation(line: 4515, column: 19, scope: !4176)
!4194 = !DILocation(line: 4517, column: 3, scope: !4176)
!4195 = distinct !DISubprogram(name: "loop_depth", scope: !330, file: !330, line: 425, type: !4196, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4198)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{!7, !2692}
!4198 = !{!4199}
!4199 = !DILocalVariable(name: "loop", arg: 1, scope: !4195, file: !330, line: 425, type: !2692)
!4200 = !DILocation(line: 0, scope: !4195)
!4201 = !DILocation(line: 427, column: 10, scope: !4195)
!4202 = !DILocation(line: 427, column: 3, scope: !4195)
!4203 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !2409, file: !2409, line: 427, type: !4204, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4209)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!476, !4206}
!4206 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !831, line: 30, baseType: !4207)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64)
!4208 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !135, line: 1893, baseType: !842)
!4209 = !{!4210}
!4210 = !DILocalVariable(name: "use", arg: 1, scope: !4203, file: !2409, line: 427, type: !4206)
!4211 = !DILocation(line: 0, scope: !4203)
!4212 = !DILocation(line: 429, column: 17, scope: !4203)
!4213 = !DILocation(line: 429, column: 10, scope: !4203)
!4214 = !DILocation(line: 429, column: 3, scope: !4203)
!4215 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !2409, file: !2409, line: 442, type: !4216, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4218)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{!4206, !800, !469}
!4218 = !{!4219, !4220}
!4219 = !DILocalVariable(name: "gs", arg: 1, scope: !4215, file: !2409, line: 442, type: !800)
!4220 = !DILocalVariable(name: "i", arg: 2, scope: !4215, file: !2409, line: 442, type: !469)
!4221 = !DILocation(line: 0, scope: !4215)
!4222 = !DILocation(line: 444, column: 11, scope: !4215)
!4223 = !DILocation(line: 444, column: 35, scope: !4215)
!4224 = !DILocation(line: 444, column: 3, scope: !4215)
!4225 = distinct !DISubprogram(name: "gt_ggc_mx_scev_info_str", scope: !1871, file: !1871, line: 23, type: !1306, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4226)
!4226 = !{!4227, !4228}
!4227 = !DILocalVariable(name: "x_p", arg: 1, scope: !4225, file: !1871, line: 23, type: !473)
!4228 = !DILocalVariable(name: "x", scope: !4225, file: !1871, line: 25, type: !4229)
!4229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1829)
!4230 = !DILocation(line: 0, scope: !4225)
!4231 = !DILocation(line: 26, column: 7, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4225, file: !1871, line: 26, column: 7)
!4233 = !DILocation(line: 26, column: 7, scope: !4225)
!4234 = !DILocation(line: 28, column: 7, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !1871, line: 28, column: 7)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !1871, line: 28, column: 7)
!4237 = distinct !DILexicalBlock(scope: !4232, file: !1871, line: 27, column: 5)
!4238 = !DILocation(line: 28, column: 7, scope: !4236)
!4239 = !DILocation(line: 29, column: 7, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !1871, line: 29, column: 7)
!4241 = distinct !DILexicalBlock(scope: !4237, file: !1871, line: 29, column: 7)
!4242 = !DILocation(line: 29, column: 7, scope: !4241)
!4243 = !DILocation(line: 30, column: 7, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !1871, line: 30, column: 7)
!4245 = distinct !DILexicalBlock(scope: !4237, file: !1871, line: 30, column: 7)
!4246 = !DILocation(line: 30, column: 7, scope: !4245)
!4247 = !DILocation(line: 32, column: 1, scope: !4225)
!4248 = distinct !DISubprogram(name: "gt_ggc_m_P13scev_info_str4htab", scope: !1871, file: !1871, line: 35, type: !1306, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4249)
!4249 = !{!4250, !4251, !4253, !4258}
!4250 = !DILocalVariable(name: "x_p", arg: 1, scope: !4248, file: !1871, line: 35, type: !473)
!4251 = !DILocalVariable(name: "x", scope: !4248, file: !1871, line: 37, type: !4252)
!4252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1287)
!4253 = !DILocalVariable(name: "i0", scope: !4254, file: !1871, line: 41, type: !946)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !1871, line: 40, column: 33)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !1871, line: 40, column: 11)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !1871, line: 39, column: 5)
!4257 = distinct !DILexicalBlock(scope: !4248, file: !1871, line: 38, column: 7)
!4258 = !DILocalVariable(name: "a__", scope: !4259, file: !1871, line: 45, type: !4260)
!4259 = distinct !DILexicalBlock(scope: !4254, file: !1871, line: 45, column: 9)
!4260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1296)
!4261 = !DILocation(line: 0, scope: !4248)
!4262 = !DILocation(line: 38, column: 7, scope: !4257)
!4263 = !DILocation(line: 38, column: 7, scope: !4248)
!4264 = !DILocation(line: 40, column: 16, scope: !4255)
!4265 = !DILocation(line: 40, column: 24, scope: !4255)
!4266 = !DILocation(line: 40, column: 11, scope: !4256)
!4267 = !DILocation(line: 0, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !1871, line: 42, column: 9)
!4269 = distinct !DILexicalBlock(scope: !4254, file: !1871, line: 42, column: 9)
!4270 = !DILocation(line: 42, column: 9, scope: !4269)
!4271 = !DILocation(line: 0, scope: !4254)
!4272 = !DILocation(line: 0, scope: !4269)
!4273 = !DILocation(line: 42, column: 44, scope: !4268)
!4274 = !DILocation(line: 42, column: 25, scope: !4268)
!4275 = !DILocation(line: 43, column: 11, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !1871, line: 43, column: 11)
!4277 = distinct !DILexicalBlock(scope: !4278, file: !1871, line: 43, column: 11)
!4278 = distinct !DILexicalBlock(scope: !4268, file: !1871, line: 42, column: 57)
!4279 = !DILocation(line: 43, column: 11, scope: !4277)
!4280 = !DILocation(line: 42, column: 53, scope: !4268)
!4281 = !DILocation(line: 42, column: 9, scope: !4268)
!4282 = distinct !{!4282, !4270, !4283}
!4283 = !DILocation(line: 44, column: 9, scope: !4269)
!4284 = !DILocation(line: 0, scope: !4259)
!4285 = !DILocation(line: 45, column: 9, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4259, file: !1871, line: 45, column: 9)
!4287 = !DILocation(line: 45, column: 9, scope: !4259)
!4288 = !DILocation(line: 48, column: 1, scope: !4248)
!4289 = distinct !DISubprogram(name: "gt_pch_nx_scev_info_str", scope: !1871, file: !1871, line: 51, type: !1306, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4290)
!4290 = !{!4291, !4292}
!4291 = !DILocalVariable(name: "x_p", arg: 1, scope: !4289, file: !1871, line: 51, type: !473)
!4292 = !DILocalVariable(name: "x", scope: !4289, file: !1871, line: 53, type: !4229)
!4293 = !DILocation(line: 0, scope: !4289)
!4294 = !DILocation(line: 54, column: 7, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4289, file: !1871, line: 54, column: 7)
!4296 = !DILocation(line: 54, column: 7, scope: !4289)
!4297 = !DILocation(line: 56, column: 7, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !1871, line: 56, column: 7)
!4299 = distinct !DILexicalBlock(scope: !4300, file: !1871, line: 56, column: 7)
!4300 = distinct !DILexicalBlock(scope: !4295, file: !1871, line: 55, column: 5)
!4301 = !DILocation(line: 56, column: 7, scope: !4299)
!4302 = !DILocation(line: 57, column: 7, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !1871, line: 57, column: 7)
!4304 = distinct !DILexicalBlock(scope: !4300, file: !1871, line: 57, column: 7)
!4305 = !DILocation(line: 57, column: 7, scope: !4304)
!4306 = !DILocation(line: 58, column: 7, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !1871, line: 58, column: 7)
!4308 = distinct !DILexicalBlock(scope: !4300, file: !1871, line: 58, column: 7)
!4309 = !DILocation(line: 58, column: 7, scope: !4308)
!4310 = !DILocation(line: 60, column: 1, scope: !4289)
!4311 = distinct !DISubprogram(name: "gt_pch_p_13scev_info_str", scope: !1871, file: !1871, line: 79, type: !4312, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4315)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{null, !473, !473, !4314, !473}
!4314 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_operator", file: !1875, line: 38, baseType: !1330)
!4315 = !{!4316, !4317, !4318, !4319, !4320}
!4316 = !DILocalVariable(name: "this_obj", arg: 1, scope: !4311, file: !1871, line: 79, type: !473)
!4317 = !DILocalVariable(name: "x_p", arg: 2, scope: !4311, file: !1871, line: 80, type: !473)
!4318 = !DILocalVariable(name: "op", arg: 3, scope: !4311, file: !1871, line: 81, type: !4314)
!4319 = !DILocalVariable(name: "cookie", arg: 4, scope: !4311, file: !1871, line: 82, type: !473)
!4320 = !DILocalVariable(name: "x", scope: !4311, file: !1871, line: 84, type: !4229)
!4321 = !DILocation(line: 0, scope: !4311)
!4322 = !DILocation(line: 85, column: 19, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4311, file: !1871, line: 85, column: 7)
!4324 = !DILocation(line: 85, column: 7, scope: !4311)
!4325 = !DILocation(line: 86, column: 5, scope: !4323)
!4326 = !DILocation(line: 87, column: 7, scope: !4311)
!4327 = !DILocation(line: 88, column: 16, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4311, file: !1871, line: 87, column: 7)
!4329 = !DILocation(line: 88, column: 5, scope: !4328)
!4330 = !DILocation(line: 89, column: 7, scope: !4311)
!4331 = !DILocation(line: 90, column: 16, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4311, file: !1871, line: 89, column: 7)
!4333 = !DILocation(line: 90, column: 5, scope: !4332)
!4334 = !DILocation(line: 91, column: 1, scope: !4311)
!4335 = distinct !DISubprogram(name: "gt_pch_n_P13scev_info_str4htab", scope: !1871, file: !1871, line: 63, type: !1306, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4336)
!4336 = !{!4337, !4338, !4339}
!4337 = !DILocalVariable(name: "x_p", arg: 1, scope: !4335, file: !1871, line: 63, type: !473)
!4338 = !DILocalVariable(name: "x", scope: !4335, file: !1871, line: 65, type: !4252)
!4339 = !DILocalVariable(name: "i0", scope: !4340, file: !1871, line: 69, type: !946)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !1871, line: 68, column: 33)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !1871, line: 68, column: 11)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !1871, line: 67, column: 5)
!4343 = distinct !DILexicalBlock(scope: !4335, file: !1871, line: 66, column: 7)
!4344 = !DILocation(line: 0, scope: !4335)
!4345 = !DILocation(line: 66, column: 7, scope: !4343)
!4346 = !DILocation(line: 66, column: 7, scope: !4335)
!4347 = !DILocation(line: 68, column: 16, scope: !4341)
!4348 = !DILocation(line: 68, column: 24, scope: !4341)
!4349 = !DILocation(line: 68, column: 11, scope: !4342)
!4350 = !DILocation(line: 0, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !1871, line: 70, column: 9)
!4352 = distinct !DILexicalBlock(scope: !4340, file: !1871, line: 70, column: 9)
!4353 = !DILocation(line: 70, column: 9, scope: !4352)
!4354 = !DILocation(line: 0, scope: !4340)
!4355 = !DILocation(line: 0, scope: !4352)
!4356 = !DILocation(line: 70, column: 44, scope: !4351)
!4357 = !DILocation(line: 70, column: 25, scope: !4351)
!4358 = !DILocation(line: 71, column: 11, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !1871, line: 71, column: 11)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !1871, line: 71, column: 11)
!4361 = distinct !DILexicalBlock(scope: !4351, file: !1871, line: 70, column: 57)
!4362 = !DILocation(line: 71, column: 11, scope: !4360)
!4363 = !DILocation(line: 70, column: 53, scope: !4351)
!4364 = !DILocation(line: 70, column: 9, scope: !4351)
!4365 = distinct !{!4365, !4353, !4366}
!4366 = !DILocation(line: 72, column: 9, scope: !4352)
!4367 = !DILocation(line: 73, column: 29, scope: !4340)
!4368 = !DILocation(line: 73, column: 9, scope: !4340)
!4369 = !DILocation(line: 74, column: 7, scope: !4340)
!4370 = !DILocation(line: 76, column: 1, scope: !4335)
!4371 = distinct !DISubprogram(name: "gt_pch_p_P13scev_info_str4htab", scope: !1871, file: !1871, line: 94, type: !4312, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4372)
!4372 = !{!4373, !4374, !4375, !4376, !4377, !4378}
!4373 = !DILocalVariable(name: "this_obj", arg: 1, scope: !4371, file: !1871, line: 94, type: !473)
!4374 = !DILocalVariable(name: "x_p", arg: 2, scope: !4371, file: !1871, line: 95, type: !473)
!4375 = !DILocalVariable(name: "op", arg: 3, scope: !4371, file: !1871, line: 96, type: !4314)
!4376 = !DILocalVariable(name: "cookie", arg: 4, scope: !4371, file: !1871, line: 97, type: !473)
!4377 = !DILocalVariable(name: "x", scope: !4371, file: !1871, line: 99, type: !4252)
!4378 = !DILocalVariable(name: "i0", scope: !4379, file: !1871, line: 101, type: !946)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !1871, line: 100, column: 29)
!4380 = distinct !DILexicalBlock(scope: !4371, file: !1871, line: 100, column: 7)
!4381 = !DILocation(line: 0, scope: !4371)
!4382 = !DILocation(line: 100, column: 12, scope: !4380)
!4383 = !DILocation(line: 100, column: 20, scope: !4380)
!4384 = !DILocation(line: 100, column: 7, scope: !4371)
!4385 = !DILocation(line: 0, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !1871, line: 102, column: 5)
!4387 = distinct !DILexicalBlock(scope: !4379, file: !1871, line: 102, column: 5)
!4388 = !DILocation(line: 0, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4390, file: !1871, line: 103, column: 11)
!4390 = distinct !DILexicalBlock(scope: !4386, file: !1871, line: 102, column: 53)
!4391 = !DILocation(line: 102, column: 5, scope: !4387)
!4392 = !DILocation(line: 0, scope: !4387)
!4393 = !DILocation(line: 0, scope: !4379)
!4394 = !DILocation(line: 102, column: 40, scope: !4386)
!4395 = !DILocation(line: 102, column: 21, scope: !4386)
!4396 = !DILocation(line: 103, column: 25, scope: !4389)
!4397 = !DILocation(line: 103, column: 34, scope: !4389)
!4398 = !DILocation(line: 103, column: 11, scope: !4390)
!4399 = !DILocation(line: 104, column: 15, scope: !4389)
!4400 = !DILocation(line: 104, column: 13, scope: !4389)
!4401 = !DILocation(line: 104, column: 9, scope: !4389)
!4402 = !DILocation(line: 102, column: 49, scope: !4386)
!4403 = !DILocation(line: 102, column: 5, scope: !4386)
!4404 = distinct !{!4404, !4391, !4405}
!4405 = !DILocation(line: 105, column: 5, scope: !4387)
!4406 = !DILocation(line: 106, column: 21, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4379, file: !1871, line: 106, column: 9)
!4408 = !DILocation(line: 106, column: 9, scope: !4379)
!4409 = !DILocation(line: 107, column: 7, scope: !4407)
!4410 = !DILocation(line: 109, column: 1, scope: !4371)
!4411 = distinct !DISubprogram(name: "gimple_bb", scope: !391, file: !391, line: 1112, type: !4412, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4414)
!4412 = !DISubroutineType(types: !4413)
!4413 = !{!764, !2735}
!4414 = !{!4415}
!4415 = !DILocalVariable(name: "g", arg: 1, scope: !4411, file: !391, line: 1112, type: !2735)
!4416 = !DILocation(line: 0, scope: !4411)
!4417 = !DILocation(line: 1114, column: 20, scope: !4411)
!4418 = !DILocation(line: 1114, column: 3, scope: !4411)
!4419 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !330, file: !330, line: 85, type: !4420, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4424)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{!1043, !4422, !7}
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1036)
!4424 = !{!4425, !4426}
!4425 = !DILocalVariable(name: "vec_", arg: 1, scope: !4419, file: !330, line: 85, type: !4422)
!4426 = !DILocalVariable(name: "ix_", arg: 2, scope: !4419, file: !330, line: 85, type: !7)
!4427 = !DILocation(line: 0, scope: !4419)
!4428 = !DILocation(line: 85, column: 1, scope: !4419)
!4429 = distinct !DISubprogram(name: "tree_is_chrec", scope: !2585, file: !2585, line: 46, type: !2667, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4430)
!4430 = !{!4431}
!4431 = !DILocalVariable(name: "expr", arg: 1, scope: !4429, file: !2585, line: 46, type: !2346)
!4432 = !DILocation(line: 0, scope: !4429)
!4433 = !DILocation(line: 48, column: 7, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4429, file: !2585, line: 48, column: 7)
!4435 = !DILocation(line: 48, column: 24, scope: !4434)
!4436 = !DILocation(line: 49, column: 7, scope: !4434)
!4437 = !DILocation(line: 49, column: 10, scope: !4434)
!4438 = !DILocation(line: 48, column: 7, scope: !4429)
!4439 = !DILocation(line: 53, column: 1, scope: !4429)
!4440 = distinct !DISubprogram(name: "automatically_generated_chrec_p", scope: !2585, file: !2585, line: 37, type: !2667, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4441)
!4441 = !{!4442}
!4442 = !DILocalVariable(name: "chrec", arg: 1, scope: !4440, file: !2585, line: 37, type: !2346)
!4443 = !DILocation(line: 0, scope: !4440)
!4444 = !DILocation(line: 39, column: 20, scope: !4440)
!4445 = !DILocation(line: 39, column: 17, scope: !4440)
!4446 = !DILocation(line: 40, column: 4, scope: !4440)
!4447 = !DILocation(line: 39, column: 10, scope: !4440)
!4448 = !DILocation(line: 39, column: 3, scope: !4440)
!4449 = distinct !DISubprogram(name: "find_var_scev_info", scope: !3, file: !3, line: 360, type: !4450, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4452)
!4450 = !DISubroutineType(types: !4451)
!4451 = !{!835, !1253, !476}
!4452 = !{!4453, !4454, !4455, !4456, !4457}
!4453 = !DILocalVariable(name: "instantiated_below", arg: 1, scope: !4449, file: !3, line: 360, type: !1253)
!4454 = !DILocalVariable(name: "var", arg: 2, scope: !4449, file: !3, line: 360, type: !476)
!4455 = !DILocalVariable(name: "res", scope: !4449, file: !3, line: 362, type: !1829)
!4456 = !DILocalVariable(name: "tmp", scope: !4449, file: !3, line: 363, type: !1830)
!4457 = !DILocalVariable(name: "slot", scope: !4449, file: !3, line: 364, type: !1309)
!4458 = !DILocation(line: 0, scope: !4449)
!4459 = !DILocation(line: 363, column: 3, scope: !4449)
!4460 = !DILocation(line: 366, column: 7, scope: !4449)
!4461 = !DILocation(line: 366, column: 11, scope: !4449)
!4462 = !DILocation(line: 367, column: 7, scope: !4449)
!4463 = !DILocation(line: 367, column: 26, scope: !4449)
!4464 = !DILocation(line: 368, column: 26, scope: !4449)
!4465 = !DILocation(line: 368, column: 10, scope: !4449)
!4466 = !DILocation(line: 370, column: 8, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 370, column: 7)
!4468 = !DILocation(line: 370, column: 7, scope: !4449)
!4469 = !DILocation(line: 371, column: 13, scope: !4467)
!4470 = !DILocation(line: 371, column: 11, scope: !4467)
!4471 = !DILocation(line: 371, column: 5, scope: !4467)
!4472 = !DILocation(line: 372, column: 34, scope: !4449)
!4473 = !DILocation(line: 374, column: 16, scope: !4449)
!4474 = !DILocation(line: 375, column: 1, scope: !4449)
!4475 = !DILocation(line: 374, column: 3, scope: !4449)
!4476 = distinct !DISubprogram(name: "new_scev_info_str", scope: !3, file: !3, line: 316, type: !4477, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4479)
!4477 = !DISubroutineType(types: !4478)
!4478 = !{!1829, !1253, !476}
!4479 = !{!4480, !4481, !4482}
!4480 = !DILocalVariable(name: "instantiated_below", arg: 1, scope: !4476, file: !3, line: 316, type: !1253)
!4481 = !DILocalVariable(name: "var", arg: 2, scope: !4476, file: !3, line: 316, type: !476)
!4482 = !DILocalVariable(name: "res", scope: !4476, file: !3, line: 318, type: !1829)
!4483 = !DILocation(line: 0, scope: !4476)
!4484 = !DILocation(line: 320, column: 9, scope: !4476)
!4485 = !DILocation(line: 321, column: 8, scope: !4476)
!4486 = !DILocation(line: 321, column: 12, scope: !4476)
!4487 = !DILocation(line: 322, column: 16, scope: !4476)
!4488 = !DILocation(line: 322, column: 8, scope: !4476)
!4489 = !DILocation(line: 322, column: 14, scope: !4476)
!4490 = !DILocation(line: 323, column: 8, scope: !4476)
!4491 = !DILocation(line: 323, column: 27, scope: !4476)
!4492 = !DILocation(line: 325, column: 3, scope: !4476)
!4493 = distinct !DISubprogram(name: "interpret_expr", scope: !3, file: !3, line: 1793, type: !4494, scopeLine: 1794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4496)
!4494 = !DISubroutineType(types: !4495)
!4495 = !{!476, !1016, !800, !476}
!4496 = !{!4497, !4498, !4499, !4500, !4501, !4502, !4503}
!4497 = !DILocalVariable(name: "loop", arg: 1, scope: !4493, file: !3, line: 1793, type: !1016)
!4498 = !DILocalVariable(name: "at_stmt", arg: 2, scope: !4493, file: !3, line: 1793, type: !800)
!4499 = !DILocalVariable(name: "expr", arg: 3, scope: !4493, file: !3, line: 1793, type: !476)
!4500 = !DILocalVariable(name: "code", scope: !4493, file: !3, line: 1795, type: !134)
!4501 = !DILocalVariable(name: "type", scope: !4493, file: !3, line: 1796, type: !476)
!4502 = !DILocalVariable(name: "op0", scope: !4493, file: !3, line: 1796, type: !476)
!4503 = !DILocalVariable(name: "op1", scope: !4493, file: !3, line: 1796, type: !476)
!4504 = !DILocation(line: 0, scope: !4493)
!4505 = !DILocation(line: 1795, column: 3, scope: !4493)
!4506 = !DILocation(line: 1796, column: 15, scope: !4493)
!4507 = !DILocation(line: 1796, column: 3, scope: !4493)
!4508 = !DILocation(line: 1798, column: 7, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 1798, column: 7)
!4510 = !DILocation(line: 1798, column: 7, scope: !4493)
!4511 = !DILocation(line: 1801, column: 7, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 1801, column: 7)
!4513 = !DILocation(line: 1801, column: 24, scope: !4512)
!4514 = !DILocation(line: 1801, column: 7, scope: !4493)
!4515 = !DILocation(line: 1802, column: 12, scope: !4512)
!4516 = !DILocation(line: 1802, column: 5, scope: !4512)
!4517 = !DILocation(line: 1804, column: 3, scope: !4493)
!4518 = !DILocation(line: 1807, column: 9, scope: !4493)
!4519 = !DILocation(line: 1807, column: 14, scope: !4493)
!4520 = !DILocation(line: 1807, column: 20, scope: !4493)
!4521 = !DILocation(line: 1806, column: 10, scope: !4493)
!4522 = !DILocation(line: 1806, column: 3, scope: !4493)
!4523 = !DILocation(line: 1808, column: 1, scope: !4493)
!4524 = distinct !DISubprogram(name: "compute_scalar_evolution_in_loop", scope: !3, file: !3, line: 1835, type: !4525, scopeLine: 1838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4527)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{!476, !1016, !1016, !476}
!4527 = !{!4528, !4529, !4530, !4531}
!4528 = !DILocalVariable(name: "wrto_loop", arg: 1, scope: !4524, file: !3, line: 1835, type: !1016)
!4529 = !DILocalVariable(name: "def_loop", arg: 2, scope: !4524, file: !3, line: 1836, type: !1016)
!4530 = !DILocalVariable(name: "ev", arg: 3, scope: !4524, file: !3, line: 1837, type: !476)
!4531 = !DILocalVariable(name: "res", scope: !4524, file: !3, line: 1839, type: !476)
!4532 = !DILocation(line: 0, scope: !4524)
!4533 = !DILocation(line: 1840, column: 16, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 1840, column: 7)
!4535 = !DILocation(line: 1840, column: 7, scope: !4524)
!4536 = !DILocation(line: 1843, column: 44, scope: !4524)
!4537 = !DILocation(line: 1843, column: 67, scope: !4524)
!4538 = !DILocation(line: 1843, column: 14, scope: !4524)
!4539 = !DILocation(line: 1844, column: 9, scope: !4524)
!4540 = !DILocation(line: 1846, column: 54, scope: !4524)
!4541 = !DILocation(line: 1846, column: 10, scope: !4524)
!4542 = !DILocation(line: 1846, column: 3, scope: !4524)
!4543 = !DILocation(line: 1847, column: 1, scope: !4524)
!4544 = distinct !DISubprogram(name: "interpret_gimple_assign", scope: !3, file: !3, line: 1813, type: !4545, scopeLine: 1814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4547)
!4545 = !DISubroutineType(types: !4546)
!4546 = !{!476, !1016, !800}
!4547 = !{!4548, !4549, !4550, !4551}
!4548 = !DILocalVariable(name: "loop", arg: 1, scope: !4544, file: !3, line: 1813, type: !1016)
!4549 = !DILocalVariable(name: "stmt", arg: 2, scope: !4544, file: !3, line: 1813, type: !800)
!4550 = !DILocalVariable(name: "type", scope: !4544, file: !3, line: 1815, type: !476)
!4551 = !DILocalVariable(name: "code", scope: !4544, file: !3, line: 1816, type: !134)
!4552 = !DILocation(line: 0, scope: !4544)
!4553 = !DILocation(line: 1815, column: 15, scope: !4544)
!4554 = !DILocation(line: 1816, column: 25, scope: !4544)
!4555 = !DILocation(line: 1819, column: 9, scope: !4544)
!4556 = !DILocation(line: 1820, column: 9, scope: !4544)
!4557 = !DILocation(line: 1818, column: 10, scope: !4544)
!4558 = !DILocation(line: 1818, column: 3, scope: !4544)
!4559 = distinct !DISubprogram(name: "loop_phi_node_p", scope: !3, file: !3, line: 425, type: !4560, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4562)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!468, !800}
!4562 = !{!4563}
!4563 = !DILocalVariable(name: "phi", arg: 1, scope: !4559, file: !3, line: 425, type: !800)
!4564 = !DILocation(line: 0, scope: !4559)
!4565 = !DILocation(line: 431, column: 10, scope: !4559)
!4566 = !DILocation(line: 431, column: 38, scope: !4559)
!4567 = !DILocation(line: 431, column: 48, scope: !4559)
!4568 = !DILocation(line: 431, column: 45, scope: !4559)
!4569 = !DILocation(line: 431, column: 3, scope: !4559)
!4570 = distinct !DISubprogram(name: "interpret_loop_phi", scope: !3, file: !3, line: 1621, type: !4545, scopeLine: 1622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4571)
!4571 = !{!4572, !4573, !4574, !4575, !4576, !4577, !4580, !4581}
!4572 = !DILocalVariable(name: "loop", arg: 1, scope: !4570, file: !3, line: 1621, type: !1016)
!4573 = !DILocalVariable(name: "loop_phi_node", arg: 2, scope: !4570, file: !3, line: 1621, type: !800)
!4574 = !DILocalVariable(name: "res", scope: !4570, file: !3, line: 1623, type: !476)
!4575 = !DILocalVariable(name: "phi_loop", scope: !4570, file: !3, line: 1624, type: !1016)
!4576 = !DILocalVariable(name: "init_cond", scope: !4570, file: !3, line: 1625, type: !476)
!4577 = !DILocalVariable(name: "subloop", scope: !4578, file: !3, line: 1629, type: !1016)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 1628, column: 5)
!4579 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 1627, column: 7)
!4580 = !DILocalVariable(name: "evolution_fn", scope: !4578, file: !3, line: 1630, type: !476)
!4581 = !DILocalVariable(name: "new_init", scope: !4582, file: !3, line: 1649, type: !476)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1648, column: 5)
!4583 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 1647, column: 7)
!4584 = !DILocation(line: 0, scope: !4570)
!4585 = !DILocation(line: 1624, column: 27, scope: !4570)
!4586 = !DILocation(line: 1627, column: 16, scope: !4579)
!4587 = !DILocation(line: 1627, column: 7, scope: !4570)
!4588 = !DILocation(line: 1631, column: 13, scope: !4578)
!4589 = !DILocation(line: 1630, column: 27, scope: !4578)
!4590 = !DILocation(line: 0, scope: !4578)
!4591 = !DILocation(line: 1634, column: 47, scope: !4578)
!4592 = !DILocation(line: 1634, column: 65, scope: !4578)
!4593 = !DILocation(line: 1634, column: 17, scope: !4578)
!4594 = !DILocation(line: 1637, column: 13, scope: !4578)
!4595 = !DILocation(line: 1642, column: 15, scope: !4570)
!4596 = !DILocation(line: 1643, column: 9, scope: !4570)
!4597 = !DILocation(line: 1647, column: 14, scope: !4583)
!4598 = !DILocation(line: 1647, column: 11, scope: !4583)
!4599 = !DILocation(line: 1647, column: 7, scope: !4570)
!4600 = !DILocation(line: 0, scope: !4582)
!4601 = !DILocation(line: 1650, column: 11, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 1650, column: 11)
!4603 = !DILocation(line: 1651, column: 4, scope: !4602)
!4604 = !DILocation(line: 1651, column: 7, scope: !4602)
!4605 = !DILocation(line: 1651, column: 41, scope: !4602)
!4606 = !DILocation(line: 1650, column: 11, scope: !4582)
!4607 = !DILocation(line: 1652, column: 13, scope: !4602)
!4608 = !DILocation(line: 1652, column: 2, scope: !4602)
!4609 = !DILocation(line: 1654, column: 32, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 1654, column: 16)
!4611 = !DILocation(line: 1654, column: 16, scope: !4602)
!4612 = !DILocation(line: 1655, column: 13, scope: !4610)
!4613 = !DILocation(line: 1655, column: 2, scope: !4610)
!4614 = !DILocation(line: 0, scope: !4602)
!4615 = !DILocation(line: 1656, column: 7, scope: !4582)
!4616 = !DILocation(line: 1657, column: 7, scope: !4582)
!4617 = !DILocation(line: 1658, column: 12, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 1658, column: 11)
!4619 = !DILocation(line: 1658, column: 11, scope: !4582)
!4620 = !DILocation(line: 1662, column: 3, scope: !4570)
!4621 = !DILocation(line: 1663, column: 1, scope: !4570)
!4622 = distinct !DISubprogram(name: "interpret_condition_phi", scope: !3, file: !3, line: 1670, type: !4545, scopeLine: 1671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4623)
!4623 = !{!4624, !4625, !4626, !4627, !4628, !4629}
!4624 = !DILocalVariable(name: "loop", arg: 1, scope: !4622, file: !3, line: 1670, type: !1016)
!4625 = !DILocalVariable(name: "condition_phi", arg: 2, scope: !4622, file: !3, line: 1670, type: !800)
!4626 = !DILocalVariable(name: "i", scope: !4622, file: !3, line: 1672, type: !469)
!4627 = !DILocalVariable(name: "n", scope: !4622, file: !3, line: 1672, type: !469)
!4628 = !DILocalVariable(name: "res", scope: !4622, file: !3, line: 1673, type: !476)
!4629 = !DILocalVariable(name: "branch_chrec", scope: !4630, file: !3, line: 1677, type: !476)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !3, line: 1676, column: 5)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 1675, column: 3)
!4632 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 1675, column: 3)
!4633 = !DILocation(line: 0, scope: !4622)
!4634 = !DILocation(line: 1672, column: 14, scope: !4622)
!4635 = !DILocation(line: 1673, column: 14, scope: !4622)
!4636 = !DILocation(line: 1675, column: 8, scope: !4632)
!4637 = !DILocation(line: 0, scope: !4632)
!4638 = !DILocation(line: 1675, column: 17, scope: !4631)
!4639 = !DILocation(line: 1675, column: 3, scope: !4632)
!4640 = !DILocation(line: 1679, column: 11, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 1679, column: 11)
!4642 = !DILocation(line: 1679, column: 11, scope: !4630)
!4643 = !DILocation(line: 1681, column: 10, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 1680, column: 2)
!4645 = !DILocation(line: 1682, column: 4, scope: !4644)
!4646 = !DILocation(line: 1686, column: 9, scope: !4630)
!4647 = !DILocation(line: 1685, column: 22, scope: !4630)
!4648 = !DILocation(line: 0, scope: !4630)
!4649 = !DILocation(line: 1688, column: 13, scope: !4630)
!4650 = !DILocation(line: 1689, column: 5, scope: !4631)
!4651 = !DILocation(line: 1675, column: 23, scope: !4631)
!4652 = !DILocation(line: 1675, column: 3, scope: !4631)
!4653 = distinct !{!4653, !4639, !4654}
!4654 = !DILocation(line: 1689, column: 5, scope: !4632)
!4655 = !DILocation(line: 1691, column: 3, scope: !4622)
!4656 = distinct !DISubprogram(name: "set_scalar_evolution", scope: !3, file: !3, line: 577, type: !4657, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4659)
!4657 = !DISubroutineType(types: !4658)
!4658 = !{null, !1253, !476, !476}
!4659 = !{!4660, !4661, !4662, !4663}
!4660 = !DILocalVariable(name: "instantiated_below", arg: 1, scope: !4656, file: !3, line: 577, type: !1253)
!4661 = !DILocalVariable(name: "scalar", arg: 2, scope: !4656, file: !3, line: 577, type: !476)
!4662 = !DILocalVariable(name: "chrec", arg: 3, scope: !4656, file: !3, line: 577, type: !476)
!4663 = !DILocalVariable(name: "scalar_info", scope: !4656, file: !3, line: 579, type: !835)
!4664 = !DILocation(line: 0, scope: !4656)
!4665 = !DILocation(line: 581, column: 7, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 581, column: 7)
!4667 = !DILocation(line: 581, column: 26, scope: !4666)
!4668 = !DILocation(line: 581, column: 7, scope: !4656)
!4669 = !DILocation(line: 584, column: 17, scope: !4656)
!4670 = !DILocation(line: 586, column: 7, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 586, column: 7)
!4672 = !DILocation(line: 586, column: 7, scope: !4656)
!4673 = !DILocation(line: 588, column: 11, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 588, column: 11)
!4675 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 587, column: 5)
!4676 = !DILocation(line: 588, column: 22, scope: !4674)
!4677 = !DILocation(line: 588, column: 11, scope: !4675)
!4678 = !DILocation(line: 590, column: 4, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 589, column: 2)
!4680 = !DILocation(line: 591, column: 13, scope: !4679)
!4681 = !DILocation(line: 592, column: 26, scope: !4679)
!4682 = !DILocation(line: 591, column: 4, scope: !4679)
!4683 = !DILocation(line: 593, column: 13, scope: !4679)
!4684 = !DILocation(line: 593, column: 4, scope: !4679)
!4685 = !DILocation(line: 594, column: 24, scope: !4679)
!4686 = !DILocation(line: 594, column: 4, scope: !4679)
!4687 = !DILocation(line: 595, column: 13, scope: !4679)
!4688 = !DILocation(line: 595, column: 4, scope: !4679)
!4689 = !DILocation(line: 596, column: 24, scope: !4679)
!4690 = !DILocation(line: 596, column: 4, scope: !4679)
!4691 = !DILocation(line: 597, column: 13, scope: !4679)
!4692 = !DILocation(line: 597, column: 4, scope: !4679)
!4693 = !DILocation(line: 599, column: 11, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 599, column: 11)
!4695 = !DILocation(line: 598, column: 2, scope: !4679)
!4696 = !DILocation(line: 599, column: 22, scope: !4694)
!4697 = !DILocation(line: 599, column: 11, scope: !4675)
!4698 = !DILocation(line: 600, column: 13, scope: !4694)
!4699 = !DILocation(line: 600, column: 2, scope: !4694)
!4700 = !DILocation(line: 603, column: 16, scope: !4656)
!4701 = !DILocation(line: 604, column: 1, scope: !4656)
!4702 = distinct !DISubprogram(name: "interpret_rhs_expr", scope: !3, file: !3, line: 1702, type: !4703, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4705)
!4703 = !DISubroutineType(types: !4704)
!4704 = !{!476, !1016, !800, !476, !476, !134, !476}
!4705 = !{!4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714}
!4706 = !DILocalVariable(name: "loop", arg: 1, scope: !4702, file: !3, line: 1702, type: !1016)
!4707 = !DILocalVariable(name: "at_stmt", arg: 2, scope: !4702, file: !3, line: 1702, type: !800)
!4708 = !DILocalVariable(name: "type", arg: 3, scope: !4702, file: !3, line: 1703, type: !476)
!4709 = !DILocalVariable(name: "rhs1", arg: 4, scope: !4702, file: !3, line: 1703, type: !476)
!4710 = !DILocalVariable(name: "code", arg: 5, scope: !4702, file: !3, line: 1703, type: !134)
!4711 = !DILocalVariable(name: "rhs2", arg: 6, scope: !4702, file: !3, line: 1703, type: !476)
!4712 = !DILocalVariable(name: "res", scope: !4702, file: !3, line: 1705, type: !476)
!4713 = !DILocalVariable(name: "chrec1", scope: !4702, file: !3, line: 1705, type: !476)
!4714 = !DILocalVariable(name: "chrec2", scope: !4702, file: !3, line: 1705, type: !476)
!4715 = !DILocation(line: 0, scope: !4702)
!4716 = !DILocation(line: 1707, column: 7, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 1707, column: 7)
!4718 = !DILocation(line: 1707, column: 35, scope: !4717)
!4719 = !DILocation(line: 1707, column: 7, scope: !4702)
!4720 = !DILocation(line: 1709, column: 11, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 1709, column: 11)
!4722 = distinct !DILexicalBlock(scope: !4717, file: !3, line: 1708, column: 5)
!4723 = !DILocation(line: 1709, column: 11, scope: !4722)
!4724 = !DILocation(line: 1710, column: 9, scope: !4721)
!4725 = !DILocation(line: 1710, column: 2, scope: !4721)
!4726 = !DILocation(line: 1712, column: 11, scope: !4722)
!4727 = !DILocation(line: 1713, column: 30, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 1712, column: 11)
!4729 = !DILocation(line: 1713, column: 9, scope: !4728)
!4730 = !DILocation(line: 1713, column: 2, scope: !4728)
!4731 = !DILocation(line: 1718, column: 11, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 1717, column: 2)
!4733 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 1716, column: 11)
!4734 = !DILocation(line: 1719, column: 32, scope: !4732)
!4735 = !DILocation(line: 1719, column: 11, scope: !4732)
!4736 = !DILocation(line: 1719, column: 4, scope: !4732)
!4737 = !DILocation(line: 1723, column: 14, scope: !4722)
!4738 = !DILocation(line: 1723, column: 7, scope: !4722)
!4739 = !DILocation(line: 1726, column: 3, scope: !4702)
!4740 = !DILocation(line: 1729, column: 16, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 1727, column: 5)
!4742 = !DILocation(line: 1730, column: 16, scope: !4741)
!4743 = !DILocation(line: 1731, column: 16, scope: !4741)
!4744 = !DILocation(line: 1732, column: 31, scope: !4741)
!4745 = !DILocation(line: 1732, column: 16, scope: !4741)
!4746 = !DILocation(line: 1733, column: 13, scope: !4741)
!4747 = !DILocation(line: 1734, column: 7, scope: !4741)
!4748 = !DILocation(line: 1737, column: 16, scope: !4741)
!4749 = !DILocation(line: 1738, column: 16, scope: !4741)
!4750 = !DILocation(line: 1739, column: 16, scope: !4741)
!4751 = !DILocation(line: 1740, column: 16, scope: !4741)
!4752 = !DILocation(line: 1741, column: 13, scope: !4741)
!4753 = !DILocation(line: 1742, column: 7, scope: !4741)
!4754 = !DILocation(line: 1745, column: 16, scope: !4741)
!4755 = !DILocation(line: 1746, column: 16, scope: !4741)
!4756 = !DILocation(line: 1747, column: 16, scope: !4741)
!4757 = !DILocation(line: 1748, column: 16, scope: !4741)
!4758 = !DILocation(line: 1749, column: 13, scope: !4741)
!4759 = !DILocation(line: 1750, column: 7, scope: !4741)
!4760 = !DILocation(line: 1753, column: 16, scope: !4741)
!4761 = !DILocation(line: 1754, column: 16, scope: !4741)
!4762 = !DILocation(line: 1757, column: 6, scope: !4741)
!4763 = !DILocation(line: 1756, column: 13, scope: !4741)
!4764 = !DILocation(line: 1758, column: 7, scope: !4741)
!4765 = !DILocation(line: 1762, column: 16, scope: !4741)
!4766 = !DILocation(line: 1763, column: 16, scope: !4741)
!4767 = !DILocation(line: 1765, column: 10, scope: !4741)
!4768 = !DILocation(line: 1764, column: 13, scope: !4741)
!4769 = !DILocation(line: 1767, column: 7, scope: !4741)
!4770 = !DILocation(line: 1770, column: 16, scope: !4741)
!4771 = !DILocation(line: 1771, column: 16, scope: !4741)
!4772 = !DILocation(line: 1772, column: 16, scope: !4741)
!4773 = !DILocation(line: 1773, column: 16, scope: !4741)
!4774 = !DILocation(line: 1774, column: 13, scope: !4741)
!4775 = !DILocation(line: 1775, column: 7, scope: !4741)
!4776 = !DILocation(line: 1778, column: 16, scope: !4741)
!4777 = !DILocation(line: 1779, column: 13, scope: !4741)
!4778 = !DILocation(line: 1780, column: 7, scope: !4741)
!4779 = !DILocation(line: 1783, column: 13, scope: !4741)
!4780 = !DILocation(line: 1784, column: 7, scope: !4741)
!4781 = !DILocation(line: 1788, column: 1, scope: !4702)
!4782 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !391, file: !391, line: 1686, type: !4783, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4785)
!4783 = !DISubroutineType(types: !4784)
!4784 = !{!429, !134}
!4785 = !{!4786}
!4786 = !DILocalVariable(name: "code", arg: 1, scope: !4782, file: !391, line: 1686, type: !134)
!4787 = !DILocation(line: 0, scope: !4782)
!4788 = !DILocation(line: 1688, column: 34, scope: !4782)
!4789 = !DILocation(line: 1688, column: 10, scope: !4782)
!4790 = !DILocation(line: 1688, column: 3, scope: !4782)
!4791 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !391, file: !391, line: 1694, type: !4792, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4794)
!4792 = !DISubroutineType(types: !4793)
!4793 = !{!476, !2735}
!4794 = !{!4795}
!4795 = !DILocalVariable(name: "gs", arg: 1, scope: !4791, file: !391, line: 1694, type: !2735)
!4796 = !DILocation(line: 0, scope: !4791)
!4797 = !DILocation(line: 1697, column: 10, scope: !4791)
!4798 = !DILocation(line: 1697, column: 3, scope: !4791)
!4799 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !391, file: !391, line: 1815, type: !4800, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4802)
!4800 = !DISubroutineType(types: !4801)
!4801 = !{!134, !2735}
!4802 = !{!4803, !4804}
!4803 = !DILocalVariable(name: "gs", arg: 1, scope: !4799, file: !391, line: 1815, type: !2735)
!4804 = !DILocalVariable(name: "code", scope: !4799, file: !391, line: 1817, type: !134)
!4805 = !DILocation(line: 0, scope: !4799)
!4806 = !DILocation(line: 1820, column: 10, scope: !4799)
!4807 = !DILocation(line: 1821, column: 7, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4799, file: !391, line: 1821, column: 7)
!4809 = !DILocation(line: 1821, column: 35, scope: !4808)
!4810 = !DILocation(line: 1821, column: 7, scope: !4799)
!4811 = !DILocation(line: 1822, column: 12, scope: !4808)
!4812 = !DILocation(line: 1822, column: 5, scope: !4808)
!4813 = !DILocation(line: 1824, column: 3, scope: !4799)
!4814 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !391, file: !391, line: 1727, type: !4792, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4815)
!4815 = !{!4816}
!4816 = !DILocalVariable(name: "gs", arg: 1, scope: !4814, file: !391, line: 1727, type: !2735)
!4817 = !DILocation(line: 0, scope: !4814)
!4818 = !DILocation(line: 1730, column: 10, scope: !4814)
!4819 = !DILocation(line: 1730, column: 3, scope: !4814)
!4820 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !391, file: !391, line: 1759, type: !4792, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4821)
!4821 = !{!4822}
!4822 = !DILocalVariable(name: "gs", arg: 1, scope: !4820, file: !391, line: 1759, type: !2735)
!4823 = !DILocation(line: 0, scope: !4820)
!4824 = !DILocation(line: 1763, column: 7, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4820, file: !391, line: 1763, column: 7)
!4826 = !DILocation(line: 1763, column: 27, scope: !4825)
!4827 = !DILocation(line: 1763, column: 7, scope: !4820)
!4828 = !DILocation(line: 1764, column: 12, scope: !4825)
!4829 = !DILocation(line: 1764, column: 5, scope: !4825)
!4830 = !DILocation(line: 0, scope: !4825)
!4831 = !DILocation(line: 1767, column: 1, scope: !4820)
!4832 = distinct !DISubprogram(name: "gimple_op", scope: !391, file: !391, line: 1631, type: !4833, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4835)
!4833 = !DISubroutineType(types: !4834)
!4834 = !{!476, !2735, !7}
!4835 = !{!4836, !4837}
!4836 = !DILocalVariable(name: "gs", arg: 1, scope: !4832, file: !391, line: 1631, type: !2735)
!4837 = !DILocalVariable(name: "i", arg: 2, scope: !4832, file: !391, line: 1631, type: !7)
!4838 = !DILocation(line: 0, scope: !4832)
!4839 = !DILocation(line: 1633, column: 7, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4832, file: !391, line: 1633, column: 7)
!4841 = !DILocation(line: 1633, column: 7, scope: !4832)
!4842 = !DILocation(line: 1638, column: 14, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4840, file: !391, line: 1634, column: 5)
!4844 = !DILocation(line: 1638, column: 7, scope: !4843)
!4845 = !DILocation(line: 0, scope: !4840)
!4846 = !DILocation(line: 1642, column: 1, scope: !4832)
!4847 = distinct !DISubprogram(name: "gimple_has_ops", scope: !391, file: !391, line: 1274, type: !4848, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4850)
!4848 = !DISubroutineType(types: !4849)
!4849 = !{!468, !2735}
!4850 = !{!4851}
!4851 = !DILocalVariable(name: "g", arg: 1, scope: !4847, file: !391, line: 1274, type: !2735)
!4852 = !DILocation(line: 0, scope: !4847)
!4853 = !DILocation(line: 1276, column: 10, scope: !4847)
!4854 = !DILocation(line: 1276, column: 26, scope: !4847)
!4855 = !DILocation(line: 1276, column: 41, scope: !4847)
!4856 = !DILocation(line: 1276, column: 44, scope: !4847)
!4857 = !DILocation(line: 1276, column: 60, scope: !4847)
!4858 = !DILocation(line: 1276, column: 3, scope: !4847)
!4859 = distinct !DISubprogram(name: "gimple_ops", scope: !391, file: !391, line: 1614, type: !4021, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4860)
!4860 = !{!4861, !4862}
!4861 = !DILocalVariable(name: "gs", arg: 1, scope: !4859, file: !391, line: 1614, type: !800)
!4862 = !DILocalVariable(name: "off", scope: !4859, file: !391, line: 1616, type: !946)
!4863 = !DILocation(line: 0, scope: !4859)
!4864 = !DILocation(line: 1621, column: 28, scope: !4859)
!4865 = !DILocation(line: 1621, column: 9, scope: !4859)
!4866 = !DILocation(line: 1622, column: 3, scope: !4859)
!4867 = !DILocation(line: 1624, column: 20, scope: !4859)
!4868 = !DILocation(line: 1624, column: 32, scope: !4859)
!4869 = !DILocation(line: 1624, column: 10, scope: !4859)
!4870 = !DILocation(line: 1624, column: 3, scope: !4859)
!4871 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !391, file: !391, line: 1073, type: !4872, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4874)
!4872 = !DISubroutineType(types: !4873)
!4873 = !{!435, !800}
!4874 = !{!4875}
!4875 = !DILocalVariable(name: "gs", arg: 1, scope: !4871, file: !391, line: 1073, type: !800)
!4876 = !DILocation(line: 0, scope: !4871)
!4877 = !DILocation(line: 1075, column: 24, scope: !4871)
!4878 = !DILocation(line: 1075, column: 10, scope: !4871)
!4879 = !DILocation(line: 1075, column: 3, scope: !4871)
!4880 = distinct !DISubprogram(name: "gss_for_code", scope: !391, file: !391, line: 1061, type: !4881, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4883)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{!435, !390}
!4883 = !{!4884}
!4884 = !DILocalVariable(name: "code", arg: 1, scope: !4880, file: !391, line: 1061, type: !390)
!4885 = !DILocation(line: 0, scope: !4880)
!4886 = !DILocation(line: 1066, column: 10, scope: !4880)
!4887 = !DILocation(line: 1066, column: 3, scope: !4880)
!4888 = distinct !DISubprogram(name: "gimple_expr_code", scope: !391, file: !391, line: 1438, type: !4800, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4889)
!4889 = !{!4890, !4891}
!4890 = !DILocalVariable(name: "stmt", arg: 1, scope: !4888, file: !391, line: 1438, type: !2735)
!4891 = !DILocalVariable(name: "code", scope: !4888, file: !391, line: 1440, type: !390)
!4892 = !DILocation(line: 0, scope: !4888)
!4893 = !DILocation(line: 1440, column: 27, scope: !4888)
!4894 = !DILocation(line: 1441, column: 29, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4888, file: !391, line: 1441, column: 7)
!4896 = !DILocation(line: 1442, column: 42, scope: !4895)
!4897 = !DILocation(line: 1442, column: 5, scope: !4895)
!4898 = !DILocation(line: 1446, column: 5, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4895, file: !391, line: 1443, column: 12)
!4900 = !DILocation(line: 1448, column: 5, scope: !4888)
!4901 = !DILocation(line: 1450, column: 1, scope: !4888)
!4902 = distinct !DISubprogram(name: "gimple_num_ops", scope: !391, file: !391, line: 1596, type: !4903, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4905)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!7, !2735}
!4905 = !{!4906}
!4906 = !DILocalVariable(name: "gs", arg: 1, scope: !4902, file: !391, line: 1596, type: !2735)
!4907 = !DILocation(line: 0, scope: !4902)
!4908 = !DILocation(line: 1598, column: 21, scope: !4902)
!4909 = !DILocation(line: 1598, column: 3, scope: !4902)
!4910 = distinct !DISubprogram(name: "analyze_initial_condition", scope: !3, file: !3, line: 1550, type: !4911, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4913)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!476, !800}
!4913 = !{!4914, !4915, !4916, !4917, !4918, !4919, !4923, !4924, !4927}
!4914 = !DILocalVariable(name: "loop_phi_node", arg: 1, scope: !4910, file: !3, line: 1550, type: !800)
!4915 = !DILocalVariable(name: "i", scope: !4910, file: !3, line: 1552, type: !469)
!4916 = !DILocalVariable(name: "n", scope: !4910, file: !3, line: 1552, type: !469)
!4917 = !DILocalVariable(name: "init_cond", scope: !4910, file: !3, line: 1553, type: !476)
!4918 = !DILocalVariable(name: "loop", scope: !4910, file: !3, line: 1554, type: !1016)
!4919 = !DILocalVariable(name: "branch", scope: !4920, file: !3, line: 1567, type: !476)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 1566, column: 5)
!4921 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 1565, column: 3)
!4922 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 1565, column: 3)
!4923 = !DILocalVariable(name: "bb", scope: !4920, file: !3, line: 1568, type: !1253)
!4924 = !DILocalVariable(name: "def", scope: !4925, file: !3, line: 1598, type: !800)
!4925 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 1597, column: 5)
!4926 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 1596, column: 7)
!4927 = !DILocalVariable(name: "res", scope: !4925, file: !3, line: 1599, type: !476)
!4928 = !DILocation(line: 0, scope: !4910)
!4929 = !DILocation(line: 1553, column: 20, scope: !4910)
!4930 = !DILocation(line: 1554, column: 23, scope: !4910)
!4931 = !DILocation(line: 1556, column: 7, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 1556, column: 7)
!4933 = !DILocation(line: 1556, column: 17, scope: !4932)
!4934 = !DILocation(line: 1556, column: 21, scope: !4932)
!4935 = !DILocation(line: 1556, column: 32, scope: !4932)
!4936 = !DILocation(line: 1556, column: 7, scope: !4910)
!4937 = !DILocation(line: 1558, column: 7, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 1557, column: 5)
!4939 = !DILocation(line: 1559, column: 16, scope: !4938)
!4940 = !DILocation(line: 1559, column: 7, scope: !4938)
!4941 = !DILocation(line: 1560, column: 26, scope: !4938)
!4942 = !DILocation(line: 1560, column: 7, scope: !4938)
!4943 = !DILocation(line: 1561, column: 16, scope: !4938)
!4944 = !DILocation(line: 1561, column: 7, scope: !4938)
!4945 = !DILocation(line: 1562, column: 5, scope: !4938)
!4946 = !DILocation(line: 1564, column: 7, scope: !4910)
!4947 = !DILocation(line: 1565, column: 8, scope: !4922)
!4948 = !DILocation(line: 1553, column: 8, scope: !4910)
!4949 = !DILocation(line: 1565, column: 17, scope: !4921)
!4950 = !DILocation(line: 1565, column: 3, scope: !4922)
!4951 = !DILocation(line: 1567, column: 21, scope: !4920)
!4952 = !DILocation(line: 0, scope: !4920)
!4953 = !DILocation(line: 1568, column: 24, scope: !4920)
!4954 = !DILocation(line: 1568, column: 64, scope: !4920)
!4955 = !DILocation(line: 1572, column: 11, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 1572, column: 11)
!4957 = !DILocation(line: 1572, column: 11, scope: !4920)
!4958 = !DILocation(line: 1575, column: 24, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 1575, column: 11)
!4960 = !DILocation(line: 1575, column: 21, scope: !4959)
!4961 = !DILocation(line: 1575, column: 11, scope: !4920)
!4962 = !DILocation(line: 1581, column: 11, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 1581, column: 11)
!4964 = !DILocation(line: 1581, column: 30, scope: !4963)
!4965 = !DILocation(line: 1581, column: 11, scope: !4920)
!4966 = !DILocation(line: 1583, column: 16, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4963, file: !3, line: 1582, column: 2)
!4968 = !DILocation(line: 1584, column: 10, scope: !4967)
!4969 = !DILocation(line: 1587, column: 19, scope: !4920)
!4970 = !DILocation(line: 1588, column: 5, scope: !4921)
!4971 = !DILocation(line: 1565, column: 23, scope: !4921)
!4972 = !DILocation(line: 1565, column: 3, scope: !4921)
!4973 = distinct !{!4973, !4950, !4974}
!4974 = !DILocation(line: 1588, column: 5, scope: !4922)
!4975 = !DILocation(line: 1591, column: 20, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 1591, column: 7)
!4977 = !DILocation(line: 1591, column: 17, scope: !4976)
!4978 = !DILocation(line: 1592, column: 17, scope: !4976)
!4979 = !DILocation(line: 1591, column: 7, scope: !4910)
!4980 = !DILocation(line: 1596, column: 7, scope: !4926)
!4981 = !DILocation(line: 1596, column: 29, scope: !4926)
!4982 = !DILocation(line: 1596, column: 7, scope: !4910)
!4983 = !DILocation(line: 1598, column: 20, scope: !4925)
!4984 = !DILocation(line: 0, scope: !4925)
!4985 = !DILocation(line: 1600, column: 11, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4925, file: !3, line: 1600, column: 11)
!4987 = !DILocation(line: 1600, column: 29, scope: !4986)
!4988 = !DILocation(line: 1601, column: 4, scope: !4986)
!4989 = !DILocation(line: 1601, column: 14, scope: !4986)
!4990 = !DILocation(line: 1601, column: 43, scope: !4986)
!4991 = !DILocation(line: 1604, column: 4, scope: !4986)
!4992 = !DILocation(line: 1604, column: 7, scope: !4986)
!4993 = !DILocation(line: 1600, column: 11, scope: !4925)
!4994 = !DILocation(line: 1608, column: 7, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 1608, column: 7)
!4996 = !DILocation(line: 1608, column: 17, scope: !4995)
!4997 = !DILocation(line: 1608, column: 21, scope: !4995)
!4998 = !DILocation(line: 1608, column: 32, scope: !4995)
!4999 = !DILocation(line: 1608, column: 7, scope: !4910)
!5000 = !DILocation(line: 1610, column: 7, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 1609, column: 5)
!5002 = !DILocation(line: 1611, column: 27, scope: !5001)
!5003 = !DILocation(line: 1611, column: 7, scope: !5001)
!5004 = !DILocation(line: 1612, column: 16, scope: !5001)
!5005 = !DILocation(line: 1612, column: 7, scope: !5001)
!5006 = !DILocation(line: 1613, column: 5, scope: !5001)
!5007 = !DILocation(line: 1615, column: 3, scope: !4910)
!5008 = distinct !DISubprogram(name: "analyze_evolution_in_loop", scope: !3, file: !3, line: 1468, type: !5009, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5011)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{!476, !800, !476}
!5011 = !{!5012, !5013, !5014, !5015, !5016, !5017, !5018, !5019, !5023, !5024, !5025, !5027}
!5012 = !DILocalVariable(name: "loop_phi_node", arg: 1, scope: !5008, file: !3, line: 1468, type: !800)
!5013 = !DILocalVariable(name: "init_cond", arg: 2, scope: !5008, file: !3, line: 1469, type: !476)
!5014 = !DILocalVariable(name: "i", scope: !5008, file: !3, line: 1471, type: !469)
!5015 = !DILocalVariable(name: "n", scope: !5008, file: !3, line: 1471, type: !469)
!5016 = !DILocalVariable(name: "evolution_function", scope: !5008, file: !3, line: 1472, type: !476)
!5017 = !DILocalVariable(name: "loop", scope: !5008, file: !3, line: 1473, type: !1016)
!5018 = !DILocalVariable(name: "bb", scope: !5008, file: !3, line: 1474, type: !1253)
!5019 = !DILocalVariable(name: "arg", scope: !5020, file: !3, line: 1486, type: !476)
!5020 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 1485, column: 5)
!5021 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 1484, column: 3)
!5022 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 1484, column: 3)
!5023 = !DILocalVariable(name: "ssa_chain", scope: !5020, file: !3, line: 1487, type: !800)
!5024 = !DILocalVariable(name: "ev_fn", scope: !5020, file: !3, line: 1488, type: !476)
!5025 = !DILocalVariable(name: "res", scope: !5020, file: !3, line: 1489, type: !5026)
!5026 = !DIDerivedType(tag: DW_TAG_typedef, name: "t_bool", file: !3, line: 999, baseType: !461)
!5027 = !DILocalVariable(name: "val", scope: !5028, file: !3, line: 1498, type: !468)
!5028 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 1497, column: 2)
!5029 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 1496, column: 11)
!5030 = !DILocation(line: 0, scope: !5008)
!5031 = !DILocation(line: 1471, column: 14, scope: !5008)
!5032 = !DILocation(line: 1472, column: 29, scope: !5008)
!5033 = !DILocation(line: 1473, column: 23, scope: !5008)
!5034 = !DILocation(line: 1476, column: 7, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 1476, column: 7)
!5036 = !DILocation(line: 1476, column: 17, scope: !5035)
!5037 = !DILocation(line: 1476, column: 21, scope: !5035)
!5038 = !DILocation(line: 1476, column: 32, scope: !5035)
!5039 = !DILocation(line: 1476, column: 7, scope: !5008)
!5040 = !DILocation(line: 1478, column: 7, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 1477, column: 5)
!5042 = !DILocation(line: 1479, column: 16, scope: !5041)
!5043 = !DILocation(line: 1479, column: 7, scope: !5041)
!5044 = !DILocation(line: 1480, column: 26, scope: !5041)
!5045 = !DILocation(line: 1480, column: 7, scope: !5041)
!5046 = !DILocation(line: 1481, column: 16, scope: !5041)
!5047 = !DILocation(line: 1481, column: 7, scope: !5041)
!5048 = !DILocation(line: 1482, column: 5, scope: !5041)
!5049 = !DILocation(line: 0, scope: !5020)
!5050 = !DILocation(line: 0, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 1510, column: 8)
!5052 = !DILocation(line: 1484, column: 8, scope: !5022)
!5053 = !DILocation(line: 1484, column: 17, scope: !5021)
!5054 = !DILocation(line: 1484, column: 3, scope: !5022)
!5055 = !DILocation(line: 1486, column: 18, scope: !5020)
!5056 = !DILocation(line: 1488, column: 7, scope: !5020)
!5057 = !DILocation(line: 1492, column: 12, scope: !5020)
!5058 = !DILocation(line: 1492, column: 52, scope: !5020)
!5059 = !DILocation(line: 1493, column: 12, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 1493, column: 11)
!5061 = !DILocation(line: 1493, column: 11, scope: !5020)
!5062 = !DILocation(line: 1496, column: 11, scope: !5029)
!5063 = !DILocation(line: 1496, column: 27, scope: !5029)
!5064 = !DILocation(line: 1496, column: 11, scope: !5020)
!5065 = !DILocation(line: 0, scope: !5028)
!5066 = !DILocation(line: 1498, column: 4, scope: !5028)
!5067 = !DILocation(line: 1498, column: 9, scope: !5028)
!5068 = !DILocation(line: 1500, column: 16, scope: !5028)
!5069 = !DILocation(line: 1503, column: 10, scope: !5028)
!5070 = !DILocation(line: 1504, column: 10, scope: !5028)
!5071 = !DILocation(line: 1510, column: 8, scope: !5051)
!5072 = !DILocation(line: 1510, column: 26, scope: !5051)
!5073 = !DILocation(line: 1511, column: 8, scope: !5051)
!5074 = !DILocation(line: 1511, column: 48, scope: !5051)
!5075 = !DILocation(line: 1511, column: 11, scope: !5051)
!5076 = !DILocation(line: 1511, column: 59, scope: !5051)
!5077 = !DILocation(line: 1511, column: 62, scope: !5051)
!5078 = !DILocation(line: 1512, column: 8, scope: !5051)
!5079 = !DILocation(line: 1512, column: 40, scope: !5051)
!5080 = !DILocation(line: 1512, column: 12, scope: !5051)
!5081 = !DILocation(line: 1510, column: 8, scope: !5028)
!5082 = !DILocation(line: 1513, column: 14, scope: !5051)
!5083 = !DILocation(line: 1513, column: 12, scope: !5051)
!5084 = !DILocation(line: 1513, column: 6, scope: !5051)
!5085 = !DILocation(line: 1514, column: 2, scope: !5029)
!5086 = !DILocation(line: 1514, column: 2, scope: !5028)
!5087 = !DILocation(line: 0, scope: !5029)
!5088 = !DILocation(line: 1524, column: 15, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 1524, column: 11)
!5090 = !DILocation(line: 1524, column: 11, scope: !5020)
!5091 = !DILocation(line: 1529, column: 61, scope: !5020)
!5092 = !DILocation(line: 1525, column: 10, scope: !5089)
!5093 = !DILocation(line: 1525, column: 8, scope: !5089)
!5094 = !DILocation(line: 1525, column: 2, scope: !5089)
!5095 = !DILocation(line: 1529, column: 28, scope: !5020)
!5096 = !DILocation(line: 1530, column: 5, scope: !5021)
!5097 = !DILocation(line: 1484, column: 23, scope: !5021)
!5098 = !DILocation(line: 1484, column: 3, scope: !5021)
!5099 = distinct !{!5099, !5054, !5100}
!5100 = !DILocation(line: 1530, column: 5, scope: !5022)
!5101 = !DILocation(line: 1532, column: 7, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 1532, column: 7)
!5103 = !DILocation(line: 1532, column: 17, scope: !5102)
!5104 = !DILocation(line: 1532, column: 21, scope: !5102)
!5105 = !DILocation(line: 1532, column: 32, scope: !5102)
!5106 = !DILocation(line: 1532, column: 7, scope: !5008)
!5107 = !DILocation(line: 1534, column: 7, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 1533, column: 5)
!5109 = !DILocation(line: 1535, column: 27, scope: !5108)
!5110 = !DILocation(line: 1535, column: 7, scope: !5108)
!5111 = !DILocation(line: 1536, column: 16, scope: !5108)
!5112 = !DILocation(line: 1536, column: 7, scope: !5108)
!5113 = !DILocation(line: 1537, column: 5, scope: !5108)
!5114 = !DILocation(line: 1539, column: 3, scope: !5008)
!5115 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !391, file: !391, line: 3061, type: !4903, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5116)
!5116 = !{!5117}
!5117 = !DILocalVariable(name: "gs", arg: 1, scope: !5115, file: !391, line: 3061, type: !2735)
!5118 = !DILocation(line: 0, scope: !5115)
!5119 = !DILocation(line: 3064, column: 25, scope: !5115)
!5120 = !DILocation(line: 3064, column: 3, scope: !5115)
!5121 = distinct !DISubprogram(name: "gimple_phi_arg_edge", scope: !2409, file: !2409, line: 467, type: !5122, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5124)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!780, !800, !946}
!5124 = !{!5125, !5126}
!5125 = !DILocalVariable(name: "gs", arg: 1, scope: !5121, file: !2409, line: 467, type: !800)
!5126 = !DILocalVariable(name: "i", arg: 2, scope: !5121, file: !2409, line: 467, type: !946)
!5127 = !DILocation(line: 0, scope: !5121)
!5128 = !DILocation(line: 469, column: 10, scope: !5121)
!5129 = !DILocation(line: 469, column: 3, scope: !5121)
!5130 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !343, file: !343, line: 150, type: !5131, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5135)
!5131 = !DISubroutineType(types: !5132)
!5132 = !{!780, !5133, !7}
!5133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5134, size: 64)
!5134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !773)
!5135 = !{!5136, !5137}
!5136 = !DILocalVariable(name: "vec_", arg: 1, scope: !5130, file: !343, line: 150, type: !5133)
!5137 = !DILocalVariable(name: "ix_", arg: 2, scope: !5130, file: !343, line: 150, type: !7)
!5138 = !DILocation(line: 0, scope: !5130)
!5139 = !DILocation(line: 150, column: 1, scope: !5130)
!5140 = distinct !DISubprogram(name: "follow_ssa_edge", scope: !3, file: !3, line: 1405, type: !5141, scopeLine: 1407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5143)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!5026, !1016, !800, !800, !835, !469}
!5143 = !{!5144, !5145, !5146, !5147, !5148, !5149}
!5144 = !DILocalVariable(name: "loop", arg: 1, scope: !5140, file: !3, line: 1405, type: !1016)
!5145 = !DILocalVariable(name: "def", arg: 2, scope: !5140, file: !3, line: 1405, type: !800)
!5146 = !DILocalVariable(name: "halting_phi", arg: 3, scope: !5140, file: !3, line: 1405, type: !800)
!5147 = !DILocalVariable(name: "evolution_of_loop", arg: 4, scope: !5140, file: !3, line: 1406, type: !835)
!5148 = !DILocalVariable(name: "limit", arg: 5, scope: !5140, file: !3, line: 1406, type: !469)
!5149 = !DILocalVariable(name: "def_loop", scope: !5140, file: !3, line: 1408, type: !1016)
!5150 = !DILocation(line: 0, scope: !5140)
!5151 = !DILocation(line: 1410, column: 7, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 1410, column: 7)
!5153 = !DILocation(line: 1410, column: 7, scope: !5140)
!5154 = !DILocation(line: 1414, column: 15, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 1414, column: 7)
!5156 = !DILocation(line: 1414, column: 13, scope: !5155)
!5157 = !DILocation(line: 1414, column: 7, scope: !5140)
!5158 = !DILocation(line: 1417, column: 14, scope: !5140)
!5159 = !DILocation(line: 1419, column: 11, scope: !5140)
!5160 = !DILocation(line: 1419, column: 3, scope: !5140)
!5161 = !DILocation(line: 1422, column: 12, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 1422, column: 11)
!5163 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 1420, column: 5)
!5164 = !DILocation(line: 1422, column: 11, scope: !5163)
!5165 = !DILocation(line: 1427, column: 9, scope: !5162)
!5166 = !DILocation(line: 1427, column: 2, scope: !5162)
!5167 = !DILocation(line: 1433, column: 15, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 1433, column: 11)
!5169 = !DILocation(line: 1433, column: 11, scope: !5163)
!5170 = !DILocation(line: 1439, column: 20, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 1439, column: 11)
!5172 = !DILocation(line: 1439, column: 11, scope: !5163)
!5173 = !DILocation(line: 1443, column: 11, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 1443, column: 11)
!5175 = !DILocation(line: 1443, column: 11, scope: !5163)
!5176 = !DILocation(line: 1445, column: 54, scope: !5174)
!5177 = !DILocation(line: 1444, column: 9, scope: !5174)
!5178 = !DILocation(line: 1444, column: 2, scope: !5174)
!5179 = !DILocation(line: 1451, column: 14, scope: !5163)
!5180 = !DILocation(line: 1451, column: 7, scope: !5163)
!5181 = !DILocation(line: 1460, column: 1, scope: !5140)
!5182 = distinct !DISubprogram(name: "gimple_nop_p", scope: !391, file: !391, line: 4304, type: !4848, scopeLine: 4305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5183)
!5183 = !{!5184}
!5184 = !DILocalVariable(name: "g", arg: 1, scope: !5182, file: !391, line: 4304, type: !2735)
!5185 = !DILocation(line: 0, scope: !5182)
!5186 = !DILocation(line: 4306, column: 10, scope: !5182)
!5187 = !DILocation(line: 4306, column: 26, scope: !5182)
!5188 = !DILocation(line: 4306, column: 3, scope: !5182)
!5189 = distinct !DISubprogram(name: "follow_ssa_edge_in_condition_phi", scope: !3, file: !3, line: 1311, type: !5141, scopeLine: 1315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5190)
!5190 = !{!5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5199, !5200}
!5191 = !DILocalVariable(name: "loop", arg: 1, scope: !5189, file: !3, line: 1311, type: !1016)
!5192 = !DILocalVariable(name: "condition_phi", arg: 2, scope: !5189, file: !3, line: 1312, type: !800)
!5193 = !DILocalVariable(name: "halting_phi", arg: 3, scope: !5189, file: !3, line: 1313, type: !800)
!5194 = !DILocalVariable(name: "evolution_of_loop", arg: 4, scope: !5189, file: !3, line: 1314, type: !835)
!5195 = !DILocalVariable(name: "limit", arg: 5, scope: !5189, file: !3, line: 1314, type: !469)
!5196 = !DILocalVariable(name: "i", scope: !5189, file: !3, line: 1316, type: !469)
!5197 = !DILocalVariable(name: "n", scope: !5189, file: !3, line: 1316, type: !469)
!5198 = !DILocalVariable(name: "init", scope: !5189, file: !3, line: 1317, type: !476)
!5199 = !DILocalVariable(name: "evolution_of_branch", scope: !5189, file: !3, line: 1318, type: !476)
!5200 = !DILocalVariable(name: "res", scope: !5189, file: !3, line: 1319, type: !5026)
!5201 = !DILocation(line: 0, scope: !5189)
!5202 = !DILocation(line: 1317, column: 15, scope: !5189)
!5203 = !DILocation(line: 1318, column: 3, scope: !5189)
!5204 = !DILocation(line: 1319, column: 16, scope: !5189)
!5205 = !DILocation(line: 1323, column: 22, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 1323, column: 7)
!5207 = !DILocation(line: 1326, column: 24, scope: !5189)
!5208 = !DILocation(line: 1326, column: 22, scope: !5189)
!5209 = !DILocation(line: 1328, column: 7, scope: !5189)
!5210 = !DILocation(line: 1329, column: 8, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 1329, column: 3)
!5212 = !DILocation(line: 0, scope: !5211)
!5213 = !DILocation(line: 1329, column: 17, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5211, file: !3, line: 1329, column: 3)
!5215 = !DILocation(line: 1329, column: 3, scope: !5211)
!5216 = !DILocation(line: 1333, column: 11, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 1333, column: 11)
!5218 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 1330, column: 5)
!5219 = !DILocation(line: 1333, column: 33, scope: !5217)
!5220 = !DILocation(line: 1333, column: 30, scope: !5217)
!5221 = !DILocation(line: 1333, column: 11, scope: !5218)
!5222 = !DILocation(line: 1341, column: 24, scope: !5218)
!5223 = !DILocation(line: 1338, column: 13, scope: !5218)
!5224 = !DILocation(line: 1342, column: 26, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 1342, column: 11)
!5226 = !DILocation(line: 1345, column: 41, scope: !5218)
!5227 = !DILocation(line: 1346, column: 6, scope: !5218)
!5228 = !DILocation(line: 1345, column: 28, scope: !5218)
!5229 = !DILocation(line: 1345, column: 26, scope: !5218)
!5230 = !DILocation(line: 1329, column: 23, scope: !5214)
!5231 = !DILocation(line: 1329, column: 3, scope: !5214)
!5232 = distinct !{!5232, !5215, !5233}
!5233 = !DILocation(line: 1347, column: 5, scope: !5211)
!5234 = !DILocation(line: 1350, column: 1, scope: !5189)
!5235 = distinct !DISubprogram(name: "follow_ssa_edge_inner_loop_phi", scope: !3, file: !3, line: 1358, type: !5141, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5236)
!5236 = !{!5237, !5238, !5239, !5240, !5241, !5242, !5243, !5244, !5247, !5248, !5249, !5253}
!5237 = !DILocalVariable(name: "outer_loop", arg: 1, scope: !5235, file: !3, line: 1358, type: !1016)
!5238 = !DILocalVariable(name: "loop_phi_node", arg: 2, scope: !5235, file: !3, line: 1359, type: !800)
!5239 = !DILocalVariable(name: "halting_phi", arg: 3, scope: !5235, file: !3, line: 1360, type: !800)
!5240 = !DILocalVariable(name: "evolution_of_loop", arg: 4, scope: !5235, file: !3, line: 1361, type: !835)
!5241 = !DILocalVariable(name: "limit", arg: 5, scope: !5235, file: !3, line: 1361, type: !469)
!5242 = !DILocalVariable(name: "loop", scope: !5235, file: !3, line: 1363, type: !1016)
!5243 = !DILocalVariable(name: "ev", scope: !5235, file: !3, line: 1364, type: !476)
!5244 = !DILocalVariable(name: "res", scope: !5245, file: !3, line: 1370, type: !5026)
!5245 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 1369, column: 5)
!5246 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 1368, column: 7)
!5247 = !DILocalVariable(name: "i", scope: !5245, file: !3, line: 1371, type: !469)
!5248 = !DILocalVariable(name: "n", scope: !5245, file: !3, line: 1371, type: !469)
!5249 = !DILocalVariable(name: "arg", scope: !5250, file: !3, line: 1375, type: !476)
!5250 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 1374, column: 2)
!5251 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 1373, column: 7)
!5252 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 1373, column: 7)
!5253 = !DILocalVariable(name: "bb", scope: !5250, file: !3, line: 1376, type: !1253)
!5254 = !DILocation(line: 0, scope: !5235)
!5255 = !DILocation(line: 1363, column: 23, scope: !5235)
!5256 = !DILocation(line: 1364, column: 45, scope: !5235)
!5257 = !DILocation(line: 1364, column: 13, scope: !5235)
!5258 = !DILocation(line: 1368, column: 13, scope: !5246)
!5259 = !DILocation(line: 1368, column: 10, scope: !5246)
!5260 = !DILocation(line: 1368, column: 7, scope: !5235)
!5261 = !DILocation(line: 0, scope: !5245)
!5262 = !DILocation(line: 1371, column: 18, scope: !5245)
!5263 = !DILocation(line: 1373, column: 12, scope: !5252)
!5264 = !DILocation(line: 1370, column: 14, scope: !5245)
!5265 = !DILocation(line: 1373, column: 21, scope: !5251)
!5266 = !DILocation(line: 1373, column: 7, scope: !5252)
!5267 = !DILocation(line: 1375, column: 15, scope: !5250)
!5268 = !DILocation(line: 0, scope: !5250)
!5269 = !DILocation(line: 1379, column: 9, scope: !5250)
!5270 = !DILocation(line: 1379, column: 49, scope: !5250)
!5271 = !DILocation(line: 1380, column: 9, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 1380, column: 8)
!5273 = !DILocation(line: 1380, column: 8, scope: !5250)
!5274 = !DILocation(line: 1381, column: 12, scope: !5272)
!5275 = !DILocation(line: 1381, column: 6, scope: !5272)
!5276 = !DILocation(line: 1384, column: 12, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 1384, column: 8)
!5278 = !DILocation(line: 1373, column: 27, scope: !5251)
!5279 = !DILocation(line: 1373, column: 7, scope: !5251)
!5280 = distinct !{!5280, !5266, !5281}
!5281 = !DILocation(line: 1386, column: 2, scope: !5252)
!5282 = !DILocation(line: 1389, column: 15, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 1389, column: 11)
!5284 = !DILocation(line: 1389, column: 11, scope: !5245)
!5285 = !DILocation(line: 1390, column: 23, scope: !5283)
!5286 = !DILocation(line: 1390, column: 21, scope: !5283)
!5287 = !DILocation(line: 1390, column: 2, scope: !5283)
!5288 = !DILocation(line: 1396, column: 8, scope: !5235)
!5289 = !DILocation(line: 1397, column: 10, scope: !5235)
!5290 = !DILocation(line: 1397, column: 3, scope: !5235)
!5291 = !DILocation(line: 1399, column: 1, scope: !5235)
!5292 = distinct !DISubprogram(name: "follow_ssa_edge_in_rhs", scope: !3, file: !3, line: 1216, type: !5141, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5293)
!5293 = !{!5294, !5295, !5296, !5297, !5298, !5299, !5300, !5301, !5302, !5303}
!5294 = !DILocalVariable(name: "loop", arg: 1, scope: !5292, file: !3, line: 1216, type: !1016)
!5295 = !DILocalVariable(name: "stmt", arg: 2, scope: !5292, file: !3, line: 1216, type: !800)
!5296 = !DILocalVariable(name: "halting_phi", arg: 3, scope: !5292, file: !3, line: 1217, type: !800)
!5297 = !DILocalVariable(name: "evolution_of_loop", arg: 4, scope: !5292, file: !3, line: 1217, type: !835)
!5298 = !DILocalVariable(name: "limit", arg: 5, scope: !5292, file: !3, line: 1217, type: !469)
!5299 = !DILocalVariable(name: "code", scope: !5292, file: !3, line: 1219, type: !134)
!5300 = !DILocalVariable(name: "type", scope: !5292, file: !3, line: 1220, type: !476)
!5301 = !DILocalVariable(name: "rhs1", scope: !5292, file: !3, line: 1220, type: !476)
!5302 = !DILocalVariable(name: "rhs2", scope: !5292, file: !3, line: 1220, type: !476)
!5303 = !DILocalVariable(name: "res", scope: !5292, file: !3, line: 1221, type: !5026)
!5304 = !DILocation(line: 0, scope: !5292)
!5305 = !DILocation(line: 1219, column: 25, scope: !5292)
!5306 = !DILocation(line: 1220, column: 15, scope: !5292)
!5307 = !DILocation(line: 1223, column: 3, scope: !5292)
!5308 = !DILocation(line: 1227, column: 47, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 1224, column: 5)
!5310 = !DILocation(line: 1227, column: 13, scope: !5309)
!5311 = !DILocation(line: 1229, column: 49, scope: !5309)
!5312 = !DILocation(line: 1229, column: 28, scope: !5309)
!5313 = !DILocation(line: 1229, column: 26, scope: !5309)
!5314 = !DILocation(line: 1230, column: 7, scope: !5309)
!5315 = !DILocation(line: 1235, column: 14, scope: !5309)
!5316 = !DILocation(line: 1236, column: 14, scope: !5309)
!5317 = !DILocation(line: 1237, column: 14, scope: !5309)
!5318 = !DILocation(line: 1238, column: 13, scope: !5309)
!5319 = !DILocation(line: 1240, column: 7, scope: !5309)
!5320 = !DILocation(line: 1243, column: 11, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5309, file: !3, line: 1243, column: 11)
!5322 = !DILocation(line: 1243, column: 39, scope: !5321)
!5323 = !DILocation(line: 1243, column: 11, scope: !5309)
!5324 = !DILocation(line: 1244, column: 42, scope: !5321)
!5325 = !DILocation(line: 1244, column: 8, scope: !5321)
!5326 = !DILocation(line: 1244, column: 2, scope: !5321)
!5327 = !DILocation(line: 0, scope: !5309)
!5328 = !DILocation(line: 1251, column: 3, scope: !5292)
!5329 = distinct !DISubprogram(name: "follow_ssa_edge_in_condition_phi_branch", scope: !3, file: !3, line: 1275, type: !5330, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5332)
!5330 = !DISubroutineType(types: !5331)
!5331 = !{!5026, !469, !1016, !800, !800, !835, !476, !469}
!5332 = !{!5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340}
!5333 = !DILocalVariable(name: "i", arg: 1, scope: !5329, file: !3, line: 1275, type: !469)
!5334 = !DILocalVariable(name: "loop", arg: 2, scope: !5329, file: !3, line: 1276, type: !1016)
!5335 = !DILocalVariable(name: "condition_phi", arg: 3, scope: !5329, file: !3, line: 1277, type: !800)
!5336 = !DILocalVariable(name: "halting_phi", arg: 4, scope: !5329, file: !3, line: 1278, type: !800)
!5337 = !DILocalVariable(name: "evolution_of_branch", arg: 5, scope: !5329, file: !3, line: 1279, type: !835)
!5338 = !DILocalVariable(name: "init_cond", arg: 6, scope: !5329, file: !3, line: 1280, type: !476)
!5339 = !DILocalVariable(name: "limit", arg: 7, scope: !5329, file: !3, line: 1280, type: !469)
!5340 = !DILocalVariable(name: "branch", scope: !5329, file: !3, line: 1282, type: !476)
!5341 = !DILocation(line: 0, scope: !5329)
!5342 = !DILocation(line: 1282, column: 17, scope: !5329)
!5343 = !DILocation(line: 1283, column: 26, scope: !5329)
!5344 = !DILocation(line: 1283, column: 24, scope: !5329)
!5345 = !DILocation(line: 1287, column: 7, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 1287, column: 7)
!5347 = !DILocation(line: 1287, column: 7, scope: !5329)
!5348 = !DILocation(line: 1290, column: 7, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 1290, column: 7)
!5350 = !DILocation(line: 1290, column: 26, scope: !5349)
!5351 = !DILocation(line: 1290, column: 7, scope: !5329)
!5352 = !DILocation(line: 1292, column: 28, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5349, file: !3, line: 1291, column: 5)
!5354 = !DILocation(line: 1293, column: 37, scope: !5353)
!5355 = !DILocation(line: 1293, column: 14, scope: !5353)
!5356 = !DILocation(line: 1293, column: 7, scope: !5353)
!5357 = !DILocation(line: 1305, column: 1, scope: !5329)
!5358 = distinct !DISubprogram(name: "backedge_phi_arg_p", scope: !3, file: !3, line: 1257, type: !5359, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5361)
!5359 = !DISubroutineType(types: !5360)
!5360 = !{!468, !800, !469}
!5361 = !{!5362, !5363, !5364}
!5362 = !DILocalVariable(name: "phi", arg: 1, scope: !5358, file: !3, line: 1257, type: !800)
!5363 = !DILocalVariable(name: "i", arg: 2, scope: !5358, file: !3, line: 1257, type: !469)
!5364 = !DILocalVariable(name: "e", scope: !5358, file: !3, line: 1259, type: !5365)
!5365 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_edge", file: !477, line: 109, baseType: !5366)
!5366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5367, size: 64)
!5367 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !782)
!5368 = !DILocation(line: 0, scope: !5358)
!5369 = !DILocation(line: 1259, column: 44, scope: !5358)
!5370 = !DILocation(line: 1259, column: 18, scope: !5358)
!5371 = !DILocation(line: 1264, column: 10, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 1264, column: 7)
!5373 = !DILocation(line: 1264, column: 16, scope: !5372)
!5374 = !DILocation(line: 1268, column: 1, scope: !5358)
!5375 = distinct !DISubprogram(name: "follow_ssa_edge_expr", scope: !3, file: !3, line: 1144, type: !5376, scopeLine: 1146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5378)
!5376 = !DISubroutineType(types: !5377)
!5377 = !{!5026, !1016, !800, !476, !800, !835, !469}
!5378 = !{!5379, !5380, !5381, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5389}
!5379 = !DILocalVariable(name: "loop", arg: 1, scope: !5375, file: !3, line: 1144, type: !1016)
!5380 = !DILocalVariable(name: "at_stmt", arg: 2, scope: !5375, file: !3, line: 1144, type: !800)
!5381 = !DILocalVariable(name: "expr", arg: 3, scope: !5375, file: !3, line: 1144, type: !476)
!5382 = !DILocalVariable(name: "halting_phi", arg: 4, scope: !5375, file: !3, line: 1145, type: !800)
!5383 = !DILocalVariable(name: "evolution_of_loop", arg: 5, scope: !5375, file: !3, line: 1145, type: !835)
!5384 = !DILocalVariable(name: "limit", arg: 6, scope: !5375, file: !3, line: 1145, type: !469)
!5385 = !DILocalVariable(name: "code", scope: !5375, file: !3, line: 1147, type: !134)
!5386 = !DILocalVariable(name: "type", scope: !5375, file: !3, line: 1148, type: !476)
!5387 = !DILocalVariable(name: "rhs0", scope: !5375, file: !3, line: 1148, type: !476)
!5388 = !DILocalVariable(name: "rhs1", scope: !5375, file: !3, line: 1148, type: !476)
!5389 = !DILocalVariable(name: "res", scope: !5375, file: !3, line: 1149, type: !5026)
!5390 = !DILocation(line: 0, scope: !5375)
!5391 = !DILocation(line: 1147, column: 25, scope: !5375)
!5392 = !DILocation(line: 1160, column: 3, scope: !5375)
!5393 = !DILocation(line: 1148, column: 15, scope: !5375)
!5394 = !DILocation(line: 1164, column: 50, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5375, file: !3, line: 1161, column: 5)
!5396 = !DILocation(line: 1164, column: 13, scope: !5395)
!5397 = !DILocation(line: 1166, column: 49, scope: !5395)
!5398 = !DILocation(line: 1166, column: 28, scope: !5395)
!5399 = !DILocation(line: 1166, column: 26, scope: !5395)
!5400 = !DILocation(line: 1209, column: 3, scope: !5375)
!5401 = !DILocation(line: 1177, column: 9, scope: !5395)
!5402 = !DILocation(line: 1176, column: 13, scope: !5395)
!5403 = !DILocation(line: 1178, column: 7, scope: !5395)
!5404 = !DILocation(line: 1184, column: 14, scope: !5395)
!5405 = !DILocation(line: 1185, column: 14, scope: !5395)
!5406 = !DILocation(line: 1186, column: 14, scope: !5395)
!5407 = !DILocation(line: 1187, column: 7, scope: !5395)
!5408 = !DILocation(line: 1188, column: 7, scope: !5395)
!5409 = !DILocation(line: 1189, column: 13, scope: !5395)
!5410 = !DILocation(line: 1191, column: 7, scope: !5395)
!5411 = !DILocation(line: 1196, column: 14, scope: !5395)
!5412 = !DILocation(line: 1197, column: 11, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5395, file: !3, line: 1197, column: 11)
!5414 = !DILocation(line: 1197, column: 28, scope: !5413)
!5415 = !DILocation(line: 1197, column: 11, scope: !5395)
!5416 = !DILocation(line: 1198, column: 31, scope: !5413)
!5417 = !DILocation(line: 1198, column: 8, scope: !5413)
!5418 = !DILocation(line: 1198, column: 2, scope: !5413)
!5419 = !DILocation(line: 0, scope: !5395)
!5420 = distinct !DISubprogram(name: "follow_ssa_edge_binary", scope: !3, file: !3, line: 1008, type: !5421, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5423)
!5421 = !DISubroutineType(types: !5422)
!5422 = !{!5026, !1016, !800, !476, !476, !134, !476, !800, !835, !469}
!5423 = !{!5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434}
!5424 = !DILocalVariable(name: "loop", arg: 1, scope: !5420, file: !3, line: 1008, type: !1016)
!5425 = !DILocalVariable(name: "at_stmt", arg: 2, scope: !5420, file: !3, line: 1008, type: !800)
!5426 = !DILocalVariable(name: "type", arg: 3, scope: !5420, file: !3, line: 1009, type: !476)
!5427 = !DILocalVariable(name: "rhs0", arg: 4, scope: !5420, file: !3, line: 1009, type: !476)
!5428 = !DILocalVariable(name: "code", arg: 5, scope: !5420, file: !3, line: 1009, type: !134)
!5429 = !DILocalVariable(name: "rhs1", arg: 6, scope: !5420, file: !3, line: 1009, type: !476)
!5430 = !DILocalVariable(name: "halting_phi", arg: 7, scope: !5420, file: !3, line: 1010, type: !800)
!5431 = !DILocalVariable(name: "evolution_of_loop", arg: 8, scope: !5420, file: !3, line: 1010, type: !835)
!5432 = !DILocalVariable(name: "limit", arg: 9, scope: !5420, file: !3, line: 1010, type: !469)
!5433 = !DILocalVariable(name: "res", scope: !5420, file: !3, line: 1012, type: !5026)
!5434 = !DILocalVariable(name: "evol", scope: !5420, file: !3, line: 1013, type: !476)
!5435 = !DILocation(line: 0, scope: !5420)
!5436 = !DILocation(line: 1013, column: 3, scope: !5420)
!5437 = !DILocation(line: 1015, column: 3, scope: !5420)
!5438 = !DILocation(line: 1019, column: 11, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 1019, column: 11)
!5440 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 1016, column: 5)
!5441 = !DILocation(line: 1019, column: 28, scope: !5439)
!5442 = !DILocation(line: 0, scope: !5439)
!5443 = !DILocation(line: 1019, column: 11, scope: !5440)
!5444 = !DILocation(line: 1021, column: 8, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 1020, column: 2)
!5446 = !DILocation(line: 1029, column: 13, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 1022, column: 6)
!5448 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 1021, column: 8)
!5449 = !DILocation(line: 1031, column: 15, scope: !5447)
!5450 = !DILocation(line: 1031, column: 13, scope: !5447)
!5451 = !DILocation(line: 1033, column: 10, scope: !5447)
!5452 = !DILocation(line: 1032, column: 14, scope: !5447)
!5453 = !DILocation(line: 1035, column: 12, scope: !5447)
!5454 = !DILocation(line: 1037, column: 12, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 1035, column: 12)
!5456 = !DILocation(line: 1038, column: 27, scope: !5455)
!5457 = !DILocation(line: 1038, column: 6, scope: !5455)
!5458 = !DILocation(line: 1036, column: 24, scope: !5455)
!5459 = !DILocation(line: 1036, column: 22, scope: !5455)
!5460 = !DILocation(line: 1036, column: 3, scope: !5455)
!5461 = !DILocation(line: 1044, column: 14, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 1042, column: 3)
!5463 = distinct !DILexicalBlock(scope: !5455, file: !3, line: 1041, column: 17)
!5464 = !DILocation(line: 1043, column: 11, scope: !5462)
!5465 = !DILocation(line: 1047, column: 9, scope: !5462)
!5466 = !DILocation(line: 1049, column: 16, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 1047, column: 9)
!5468 = !DILocation(line: 1050, column: 31, scope: !5467)
!5469 = !DILocation(line: 1050, column: 10, scope: !5467)
!5470 = !DILocation(line: 1048, column: 28, scope: !5467)
!5471 = !DILocation(line: 1048, column: 26, scope: !5467)
!5472 = !DILocation(line: 1048, column: 7, scope: !5467)
!5473 = !DILocation(line: 1054, column: 28, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 1053, column: 14)
!5475 = !DILocation(line: 1054, column: 26, scope: !5474)
!5476 = !DILocation(line: 1054, column: 7, scope: !5474)
!5477 = !DILocation(line: 1058, column: 24, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 1057, column: 17)
!5479 = !DILocation(line: 1058, column: 22, scope: !5478)
!5480 = !DILocation(line: 1058, column: 3, scope: !5478)
!5481 = !DILocation(line: 1066, column: 10, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 1062, column: 6)
!5483 = !DILocation(line: 1065, column: 14, scope: !5482)
!5484 = !DILocation(line: 1068, column: 12, scope: !5482)
!5485 = !DILocation(line: 1070, column: 12, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 1068, column: 12)
!5487 = !DILocation(line: 1070, column: 38, scope: !5486)
!5488 = !DILocation(line: 1070, column: 17, scope: !5486)
!5489 = !DILocation(line: 1069, column: 24, scope: !5486)
!5490 = !DILocation(line: 1069, column: 22, scope: !5486)
!5491 = !DILocation(line: 1069, column: 3, scope: !5486)
!5492 = !DILocation(line: 1075, column: 24, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1074, column: 17)
!5494 = !DILocation(line: 1075, column: 22, scope: !5493)
!5495 = !DILocation(line: 1075, column: 3, scope: !5493)
!5496 = !DILocation(line: 1079, column: 16, scope: !5439)
!5497 = !DILocation(line: 1084, column: 13, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 1080, column: 2)
!5499 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 1079, column: 16)
!5500 = !DILocation(line: 1083, column: 10, scope: !5498)
!5501 = !DILocation(line: 1086, column: 8, scope: !5498)
!5502 = !DILocation(line: 1088, column: 15, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 1086, column: 8)
!5504 = !DILocation(line: 1088, column: 41, scope: !5503)
!5505 = !DILocation(line: 1088, column: 20, scope: !5503)
!5506 = !DILocation(line: 1087, column: 27, scope: !5503)
!5507 = !DILocation(line: 1087, column: 25, scope: !5503)
!5508 = !DILocation(line: 1087, column: 6, scope: !5503)
!5509 = !DILocation(line: 1093, column: 27, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 1092, column: 13)
!5511 = !DILocation(line: 1093, column: 25, scope: !5510)
!5512 = !DILocation(line: 1093, column: 6, scope: !5510)
!5513 = !DILocation(line: 1105, column: 11, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 1105, column: 11)
!5515 = !DILocation(line: 1105, column: 28, scope: !5514)
!5516 = !DILocation(line: 1105, column: 11, scope: !5440)
!5517 = !DILocation(line: 1113, column: 8, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 1113, column: 8)
!5519 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 1106, column: 2)
!5520 = !DILocation(line: 1113, column: 25, scope: !5518)
!5521 = !DILocation(line: 1113, column: 8, scope: !5519)
!5522 = !DILocation(line: 1116, column: 33, scope: !5519)
!5523 = !DILocation(line: 1116, column: 10, scope: !5519)
!5524 = !DILocation(line: 1118, column: 8, scope: !5519)
!5525 = !DILocation(line: 1120, column: 15, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 1118, column: 8)
!5527 = !DILocation(line: 1120, column: 41, scope: !5526)
!5528 = !DILocation(line: 1120, column: 20, scope: !5526)
!5529 = !DILocation(line: 1119, column: 27, scope: !5526)
!5530 = !DILocation(line: 1119, column: 25, scope: !5526)
!5531 = !DILocation(line: 1119, column: 6, scope: !5526)
!5532 = !DILocation(line: 1124, column: 27, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 1123, column: 13)
!5534 = !DILocation(line: 1124, column: 25, scope: !5533)
!5535 = !DILocation(line: 1124, column: 6, scope: !5533)
!5536 = !DILocation(line: 0, scope: !5440)
!5537 = !DILocation(line: 1138, column: 1, scope: !5420)
!5538 = !DILocation(line: 1137, column: 3, scope: !5420)
!5539 = distinct !DISubprogram(name: "add_to_evolution", scope: !3, file: !3, line: 862, type: !5540, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5542)
!5540 = !DISubroutineType(types: !5541)
!5541 = !{!476, !7, !476, !134, !476, !800}
!5542 = !{!5543, !5544, !5545, !5546, !5547, !5548, !5549}
!5543 = !DILocalVariable(name: "loop_nb", arg: 1, scope: !5539, file: !3, line: 862, type: !7)
!5544 = !DILocalVariable(name: "chrec_before", arg: 2, scope: !5539, file: !3, line: 862, type: !476)
!5545 = !DILocalVariable(name: "code", arg: 3, scope: !5539, file: !3, line: 862, type: !134)
!5546 = !DILocalVariable(name: "to_add", arg: 4, scope: !5539, file: !3, line: 863, type: !476)
!5547 = !DILocalVariable(name: "at_stmt", arg: 5, scope: !5539, file: !3, line: 863, type: !800)
!5548 = !DILocalVariable(name: "type", scope: !5539, file: !3, line: 865, type: !476)
!5549 = !DILocalVariable(name: "res", scope: !5539, file: !3, line: 866, type: !476)
!5550 = !DILocation(line: 0, scope: !5539)
!5551 = !DILocation(line: 865, column: 15, scope: !5539)
!5552 = !DILocation(line: 868, column: 14, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 868, column: 7)
!5554 = !DILocation(line: 868, column: 7, scope: !5539)
!5555 = !DILocation(line: 873, column: 7, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 873, column: 7)
!5557 = !DILocation(line: 873, column: 26, scope: !5556)
!5558 = !DILocation(line: 873, column: 7, scope: !5539)
!5559 = !DILocation(line: 875, column: 12, scope: !5556)
!5560 = !DILocation(line: 875, column: 5, scope: !5556)
!5561 = !DILocation(line: 877, column: 7, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 877, column: 7)
!5563 = !DILocation(line: 877, column: 17, scope: !5562)
!5564 = !DILocation(line: 877, column: 21, scope: !5562)
!5565 = !DILocation(line: 877, column: 32, scope: !5562)
!5566 = !DILocation(line: 877, column: 7, scope: !5539)
!5567 = !DILocation(line: 879, column: 7, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 878, column: 5)
!5569 = !DILocation(line: 880, column: 16, scope: !5568)
!5570 = !DILocation(line: 880, column: 7, scope: !5568)
!5571 = !DILocation(line: 881, column: 16, scope: !5568)
!5572 = !DILocation(line: 881, column: 7, scope: !5568)
!5573 = !DILocation(line: 882, column: 27, scope: !5568)
!5574 = !DILocation(line: 882, column: 7, scope: !5568)
!5575 = !DILocation(line: 883, column: 16, scope: !5568)
!5576 = !DILocation(line: 883, column: 7, scope: !5568)
!5577 = !DILocation(line: 884, column: 27, scope: !5568)
!5578 = !DILocation(line: 884, column: 7, scope: !5568)
!5579 = !DILocation(line: 885, column: 16, scope: !5568)
!5580 = !DILocation(line: 885, column: 7, scope: !5568)
!5581 = !DILocation(line: 886, column: 5, scope: !5568)
!5582 = !DILocation(line: 888, column: 12, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 888, column: 7)
!5584 = !DILocation(line: 888, column: 7, scope: !5539)
!5585 = !DILocation(line: 889, column: 49, scope: !5583)
!5586 = !DILocation(line: 890, column: 9, scope: !5583)
!5587 = !DILocation(line: 891, column: 9, scope: !5583)
!5588 = !DILocation(line: 889, column: 14, scope: !5583)
!5589 = !DILocation(line: 889, column: 5, scope: !5583)
!5590 = !DILocation(line: 893, column: 9, scope: !5539)
!5591 = !DILocation(line: 895, column: 7, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 895, column: 7)
!5593 = !DILocation(line: 895, column: 17, scope: !5592)
!5594 = !DILocation(line: 895, column: 21, scope: !5592)
!5595 = !DILocation(line: 895, column: 32, scope: !5592)
!5596 = !DILocation(line: 895, column: 7, scope: !5539)
!5597 = !DILocation(line: 897, column: 7, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 896, column: 5)
!5599 = !DILocation(line: 898, column: 27, scope: !5598)
!5600 = !DILocation(line: 898, column: 7, scope: !5598)
!5601 = !DILocation(line: 899, column: 16, scope: !5598)
!5602 = !DILocation(line: 899, column: 7, scope: !5598)
!5603 = !DILocation(line: 900, column: 5, scope: !5598)
!5604 = !DILocation(line: 903, column: 1, scope: !5539)
!5605 = distinct !DISubprogram(name: "add_to_evolution_1", scope: !3, file: !3, line: 665, type: !5606, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5608)
!5606 = !DISubroutineType(types: !5607)
!5607 = !{!476, !7, !476, !476, !800}
!5608 = !{!5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618}
!5609 = !DILocalVariable(name: "loop_nb", arg: 1, scope: !5605, file: !3, line: 665, type: !7)
!5610 = !DILocalVariable(name: "chrec_before", arg: 2, scope: !5605, file: !3, line: 665, type: !476)
!5611 = !DILocalVariable(name: "to_add", arg: 3, scope: !5605, file: !3, line: 665, type: !476)
!5612 = !DILocalVariable(name: "at_stmt", arg: 4, scope: !5605, file: !3, line: 666, type: !800)
!5613 = !DILocalVariable(name: "type", scope: !5605, file: !3, line: 668, type: !476)
!5614 = !DILocalVariable(name: "left", scope: !5605, file: !3, line: 668, type: !476)
!5615 = !DILocalVariable(name: "right", scope: !5605, file: !3, line: 668, type: !476)
!5616 = !DILocalVariable(name: "loop", scope: !5605, file: !3, line: 669, type: !1016)
!5617 = !DILocalVariable(name: "chloop", scope: !5605, file: !3, line: 669, type: !1016)
!5618 = !DILocalVariable(name: "var", scope: !5619, file: !3, line: 678, type: !7)
!5619 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 677, column: 2)
!5620 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 675, column: 11)
!5621 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 672, column: 5)
!5622 = !DILocation(line: 0, scope: !5605)
!5623 = !DILocation(line: 669, column: 23, scope: !5605)
!5624 = !DILocation(line: 671, column: 11, scope: !5605)
!5625 = !DILocation(line: 671, column: 3, scope: !5605)
!5626 = !DILocation(line: 674, column: 16, scope: !5621)
!5627 = !DILocation(line: 675, column: 18, scope: !5620)
!5628 = !DILocation(line: 676, column: 4, scope: !5620)
!5629 = !DILocation(line: 676, column: 7, scope: !5620)
!5630 = !DILocation(line: 675, column: 11, scope: !5621)
!5631 = !DILocation(line: 680, column: 11, scope: !5619)
!5632 = !DILocation(line: 683, column: 8, scope: !5619)
!5633 = !DILocation(line: 0, scope: !5619)
!5634 = !DILocation(line: 687, column: 16, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 684, column: 6)
!5636 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 683, column: 8)
!5637 = !DILocation(line: 688, column: 5, scope: !5635)
!5638 = !DILocation(line: 689, column: 5, scope: !5635)
!5639 = !DILocation(line: 693, column: 14, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 692, column: 6)
!5641 = !DILocation(line: 694, column: 15, scope: !5640)
!5642 = !DILocation(line: 695, column: 16, scope: !5640)
!5643 = !DILocation(line: 0, scope: !5636)
!5644 = !DILocation(line: 698, column: 13, scope: !5619)
!5645 = !DILocation(line: 699, column: 12, scope: !5619)
!5646 = !DILocation(line: 700, column: 29, scope: !5619)
!5647 = !DILocation(line: 700, column: 12, scope: !5619)
!5648 = !DILocation(line: 701, column: 11, scope: !5619)
!5649 = !DILocation(line: 705, column: 4, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 704, column: 2)
!5651 = !DILocation(line: 708, column: 40, scope: !5650)
!5652 = !DILocation(line: 708, column: 11, scope: !5650)
!5653 = !DILocation(line: 710, column: 12, scope: !5650)
!5654 = !DILocation(line: 711, column: 31, scope: !5650)
!5655 = !DILocation(line: 711, column: 12, scope: !5650)
!5656 = !DILocation(line: 712, column: 35, scope: !5650)
!5657 = !DILocation(line: 712, column: 11, scope: !5650)
!5658 = !DILocation(line: 725, column: 1, scope: !5605)
!5659 = !DILocation(line: 718, column: 27, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 718, column: 11)
!5661 = !DILocation(line: 718, column: 24, scope: !5660)
!5662 = !DILocation(line: 718, column: 11, scope: !5621)
!5663 = !DILocation(line: 719, column: 2, scope: !5660)
!5664 = !DILocation(line: 722, column: 34, scope: !5621)
!5665 = !DILocation(line: 722, column: 15, scope: !5621)
!5666 = !DILocation(line: 723, column: 14, scope: !5621)
!5667 = !DILocation(line: 723, column: 7, scope: !5621)
!5668 = !DILocation(line: 0, scope: !5621)
!5669 = distinct !DISubprogram(name: "build_polynomial_chrec", scope: !2585, file: !2585, line: 127, type: !5670, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5672)
!5670 = !DISubroutineType(types: !5671)
!5671 = !{!476, !7, !476, !476}
!5672 = !{!5673, !5674, !5675, !5676}
!5673 = !DILocalVariable(name: "loop_num", arg: 1, scope: !5669, file: !2585, line: 127, type: !7)
!5674 = !DILocalVariable(name: "left", arg: 2, scope: !5669, file: !2585, line: 128, type: !476)
!5675 = !DILocalVariable(name: "right", arg: 3, scope: !5669, file: !2585, line: 129, type: !476)
!5676 = !DILocalVariable(name: "val", scope: !5669, file: !2585, line: 131, type: !468)
!5677 = !DILocation(line: 0, scope: !5669)
!5678 = !DILocation(line: 131, column: 3, scope: !5669)
!5679 = !DILocation(line: 133, column: 15, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5669, file: !2585, line: 133, column: 7)
!5681 = !DILocation(line: 133, column: 12, scope: !5680)
!5682 = !DILocation(line: 134, column: 16, scope: !5680)
!5683 = !DILocation(line: 134, column: 7, scope: !5680)
!5684 = !DILocation(line: 135, column: 5, scope: !5680)
!5685 = !DILocation(line: 137, column: 8, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5669, file: !2585, line: 137, column: 7)
!5687 = !DILocation(line: 138, column: 11, scope: !5686)
!5688 = !DILocation(line: 138, column: 7, scope: !5686)
!5689 = !DILocation(line: 139, column: 12, scope: !5686)
!5690 = !DILocation(line: 139, column: 5, scope: !5686)
!5691 = !DILocation(line: 143, column: 3, scope: !5669)
!5692 = !DILocation(line: 146, column: 7, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5669, file: !2585, line: 146, column: 7)
!5694 = !DILocation(line: 146, column: 7, scope: !5669)
!5695 = !DILocation(line: 147, column: 5, scope: !5693)
!5696 = !DILocation(line: 149, column: 5, scope: !5693)
!5697 = !DILocation(line: 151, column: 7, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5669, file: !2585, line: 151, column: 7)
!5699 = !DILocation(line: 151, column: 7, scope: !5669)
!5700 = !DILocation(line: 154, column: 10, scope: !5669)
!5701 = !DILocation(line: 154, column: 3, scope: !5669)
!5702 = !DILocation(line: 156, column: 1, scope: !5669)
!5703 = distinct !DISubprogram(name: "chrec_zerop", scope: !2585, file: !2585, line: 94, type: !2667, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5704)
!5704 = !{!5705}
!5705 = !DILocalVariable(name: "chrec", arg: 1, scope: !5703, file: !2585, line: 94, type: !2346)
!5706 = !DILocation(line: 0, scope: !5703)
!5707 = !DILocation(line: 96, column: 13, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5703, file: !2585, line: 96, column: 7)
!5709 = !DILocation(line: 96, column: 7, scope: !5703)
!5710 = !DILocation(line: 99, column: 7, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5703, file: !2585, line: 99, column: 7)
!5712 = !DILocation(line: 99, column: 25, scope: !5711)
!5713 = !DILocation(line: 99, column: 7, scope: !5703)
!5714 = !DILocation(line: 100, column: 12, scope: !5711)
!5715 = !DILocation(line: 100, column: 5, scope: !5711)
!5716 = !DILocation(line: 103, column: 1, scope: !5703)
!5717 = distinct !DISubprogram(name: "gimple_expr_type", scope: !391, file: !391, line: 4366, type: !4792, scopeLine: 4367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5718)
!5718 = !{!5719, !5720, !5721}
!5719 = !DILocalVariable(name: "stmt", arg: 1, scope: !5717, file: !391, line: 4366, type: !2735)
!5720 = !DILocalVariable(name: "code", scope: !5717, file: !391, line: 4368, type: !390)
!5721 = !DILocalVariable(name: "type", scope: !5722, file: !391, line: 4372, type: !476)
!5722 = distinct !DILexicalBlock(scope: !5723, file: !391, line: 4371, column: 5)
!5723 = distinct !DILexicalBlock(scope: !5717, file: !391, line: 4370, column: 7)
!5724 = !DILocation(line: 0, scope: !5717)
!5725 = !DILocation(line: 4368, column: 27, scope: !5717)
!5726 = !DILocation(line: 4370, column: 29, scope: !5723)
!5727 = !DILocation(line: 4378, column: 9, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5722, file: !391, line: 4377, column: 11)
!5729 = !DILocation(line: 0, scope: !5722)
!5730 = !DILocation(line: 4378, column: 2, scope: !5728)
!5731 = !DILocation(line: 4380, column: 10, scope: !5728)
!5732 = !DILocation(line: 4380, column: 2, scope: !5728)
!5733 = !DILocation(line: 4383, column: 13, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5728, file: !391, line: 4381, column: 4)
!5735 = !DILocation(line: 4384, column: 6, scope: !5734)
!5736 = !DILocation(line: 4388, column: 13, scope: !5734)
!5737 = !DILocation(line: 4389, column: 6, scope: !5734)
!5738 = !DILocation(line: 4394, column: 12, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5723, file: !391, line: 4393, column: 12)
!5740 = !DILocation(line: 4394, column: 5, scope: !5739)
!5741 = !DILocation(line: 4396, column: 12, scope: !5739)
!5742 = !DILocation(line: 4396, column: 5, scope: !5739)
!5743 = !DILocation(line: 0, scope: !5723)
!5744 = !DILocation(line: 4397, column: 1, scope: !5717)
!5745 = distinct !DISubprogram(name: "gimple_call_return_type", scope: !391, file: !391, line: 1966, type: !4792, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5746)
!5746 = !{!5747, !5748, !5749}
!5747 = !DILocalVariable(name: "gs", arg: 1, scope: !5745, file: !391, line: 1966, type: !2735)
!5748 = !DILocalVariable(name: "fn", scope: !5745, file: !391, line: 1968, type: !476)
!5749 = !DILocalVariable(name: "type", scope: !5745, file: !391, line: 1969, type: !476)
!5750 = !DILocation(line: 0, scope: !5745)
!5751 = !DILocation(line: 1968, column: 13, scope: !5745)
!5752 = !DILocation(line: 1969, column: 15, scope: !5745)
!5753 = !DILocation(line: 1972, column: 10, scope: !5745)
!5754 = !DILocation(line: 1976, column: 10, scope: !5745)
!5755 = !DILocation(line: 1976, column: 3, scope: !5745)
!5756 = distinct !DISubprogram(name: "gimple_call_fn", scope: !391, file: !391, line: 1911, type: !4792, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5757)
!5757 = !{!5758}
!5758 = !DILocalVariable(name: "gs", arg: 1, scope: !5756, file: !391, line: 1911, type: !2735)
!5759 = !DILocation(line: 0, scope: !5756)
!5760 = !DILocation(line: 1914, column: 10, scope: !5756)
!5761 = !DILocation(line: 1914, column: 3, scope: !5756)
!5762 = distinct !DISubprogram(name: "instantiate_scev_name", scope: !3, file: !3, line: 2147, type: !2998, scopeLine: 2150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5763)
!5763 = !{!5764, !5765, !5766, !5767, !5768, !5769, !5770, !5771, !5772}
!5764 = !DILocalVariable(name: "instantiate_below", arg: 1, scope: !5762, file: !3, line: 2147, type: !1253)
!5765 = !DILocalVariable(name: "evolution_loop", arg: 2, scope: !5762, file: !3, line: 2148, type: !1016)
!5766 = !DILocalVariable(name: "chrec", arg: 3, scope: !5762, file: !3, line: 2148, type: !476)
!5767 = !DILocalVariable(name: "fold_conversions", arg: 4, scope: !5762, file: !3, line: 2149, type: !468)
!5768 = !DILocalVariable(name: "cache", arg: 5, scope: !5762, file: !3, line: 2149, type: !1285)
!5769 = !DILocalVariable(name: "size_expr", arg: 6, scope: !5762, file: !3, line: 2149, type: !469)
!5770 = !DILocalVariable(name: "res", scope: !5762, file: !3, line: 2151, type: !476)
!5771 = !DILocalVariable(name: "def_loop", scope: !5762, file: !3, line: 2152, type: !1016)
!5772 = !DILocalVariable(name: "def_bb", scope: !5762, file: !3, line: 2153, type: !1253)
!5773 = !DILocation(line: 0, scope: !5762)
!5774 = !DILocation(line: 2153, column: 35, scope: !5762)
!5775 = !DILocation(line: 2153, column: 24, scope: !5762)
!5776 = !DILocation(line: 2157, column: 8, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 2157, column: 7)
!5778 = !DILocation(line: 2158, column: 7, scope: !5777)
!5779 = !DILocation(line: 2158, column: 30, scope: !5777)
!5780 = !DILocation(line: 2158, column: 10, scope: !5777)
!5781 = !DILocation(line: 2158, column: 43, scope: !5777)
!5782 = !DILocation(line: 2159, column: 7, scope: !5777)
!5783 = !DILocation(line: 2159, column: 10, scope: !5777)
!5784 = !DILocation(line: 2157, column: 7, scope: !5762)
!5785 = !DILocation(line: 2171, column: 9, scope: !5762)
!5786 = !DILocation(line: 2172, column: 7, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 2172, column: 7)
!5788 = !DILocation(line: 2172, column: 7, scope: !5762)
!5789 = !DILocation(line: 2175, column: 9, scope: !5762)
!5790 = !DILocation(line: 2176, column: 3, scope: !5762)
!5791 = !DILocation(line: 2178, column: 56, scope: !5762)
!5792 = !DILocation(line: 2178, column: 14, scope: !5762)
!5793 = !DILocation(line: 2182, column: 9, scope: !5762)
!5794 = !DILocation(line: 2185, column: 7, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 2185, column: 7)
!5796 = !DILocation(line: 2185, column: 23, scope: !5795)
!5797 = !DILocation(line: 2186, column: 7, scope: !5795)
!5798 = !DILocation(line: 2186, column: 33, scope: !5795)
!5799 = !DILocation(line: 2186, column: 11, scope: !5795)
!5800 = !DILocation(line: 2186, column: 58, scope: !5795)
!5801 = !DILocation(line: 2187, column: 4, scope: !5795)
!5802 = !DILocation(line: 2187, column: 42, scope: !5795)
!5803 = !DILocation(line: 2187, column: 20, scope: !5795)
!5804 = !DILocation(line: 2187, column: 8, scope: !5795)
!5805 = !DILocation(line: 2188, column: 10, scope: !5795)
!5806 = !DILocation(line: 2188, column: 8, scope: !5795)
!5807 = !DILocation(line: 2185, column: 7, scope: !5762)
!5808 = !DILocation(line: 2190, column: 15, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 2190, column: 11)
!5810 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 2189, column: 5)
!5811 = !DILocation(line: 2190, column: 11, scope: !5810)
!5812 = !DILocation(line: 2191, column: 8, scope: !5809)
!5813 = !DILocation(line: 2191, column: 2, scope: !5809)
!5814 = !DILocation(line: 0, scope: !5809)
!5815 = !DILocation(line: 2195, column: 15, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 2195, column: 11)
!5817 = !DILocation(line: 2196, column: 4, scope: !5816)
!5818 = !DILocation(line: 2197, column: 21, scope: !5816)
!5819 = !DILocation(line: 2197, column: 10, scope: !5816)
!5820 = !DILocation(line: 2196, column: 8, scope: !5816)
!5821 = !DILocation(line: 2195, column: 11, scope: !5810)
!5822 = !DILocation(line: 2198, column: 8, scope: !5816)
!5823 = !DILocation(line: 2198, column: 2, scope: !5816)
!5824 = !DILocation(line: 2201, column: 19, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 2201, column: 12)
!5826 = !DILocation(line: 2201, column: 16, scope: !5825)
!5827 = !DILocation(line: 2201, column: 12, scope: !5795)
!5828 = !DILocation(line: 2202, column: 11, scope: !5825)
!5829 = !DILocation(line: 2202, column: 5, scope: !5825)
!5830 = !DILocation(line: 0, scope: !5795)
!5831 = !DILocation(line: 2206, column: 3, scope: !5762)
!5832 = !DILocation(line: 2207, column: 3, scope: !5762)
!5833 = !DILocation(line: 2209, column: 1, scope: !5762)
!5834 = distinct !DISubprogram(name: "instantiate_scev_poly", scope: !3, file: !3, line: 2226, type: !2998, scopeLine: 2229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5835)
!5835 = !{!5836, !5837, !5838, !5839, !5840, !5841, !5842, !5843, !5844}
!5836 = !DILocalVariable(name: "instantiate_below", arg: 1, scope: !5834, file: !3, line: 2226, type: !1253)
!5837 = !DILocalVariable(name: "evolution_loop", arg: 2, scope: !5834, file: !3, line: 2227, type: !1016)
!5838 = !DILocalVariable(name: "chrec", arg: 3, scope: !5834, file: !3, line: 2227, type: !476)
!5839 = !DILocalVariable(name: "fold_conversions", arg: 4, scope: !5834, file: !3, line: 2228, type: !468)
!5840 = !DILocalVariable(name: "cache", arg: 5, scope: !5834, file: !3, line: 2228, type: !1285)
!5841 = !DILocalVariable(name: "size_expr", arg: 6, scope: !5834, file: !3, line: 2228, type: !469)
!5842 = !DILocalVariable(name: "op1", scope: !5834, file: !3, line: 2230, type: !476)
!5843 = !DILocalVariable(name: "op0", scope: !5834, file: !3, line: 2231, type: !476)
!5844 = !DILocalVariable(name: "var", scope: !5845, file: !3, line: 2246, type: !7)
!5845 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 2245, column: 5)
!5846 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 2243, column: 7)
!5847 = !DILocation(line: 0, scope: !5834)
!5848 = !DILocation(line: 2232, column: 6, scope: !5834)
!5849 = !DILocation(line: 2231, column: 14, scope: !5834)
!5850 = !DILocation(line: 2234, column: 14, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 2234, column: 7)
!5852 = !DILocation(line: 2234, column: 11, scope: !5851)
!5853 = !DILocation(line: 2234, column: 7, scope: !5834)
!5854 = !DILocation(line: 2235, column: 5, scope: !5851)
!5855 = !DILocation(line: 2238, column: 8, scope: !5834)
!5856 = !DILocation(line: 2237, column: 9, scope: !5834)
!5857 = !DILocation(line: 2240, column: 14, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 2240, column: 7)
!5859 = !DILocation(line: 2240, column: 11, scope: !5858)
!5860 = !DILocation(line: 2240, column: 7, scope: !5834)
!5861 = !DILocation(line: 2241, column: 5, scope: !5858)
!5862 = !DILocation(line: 2243, column: 7, scope: !5846)
!5863 = !DILocation(line: 2243, column: 26, scope: !5846)
!5864 = !DILocation(line: 2244, column: 7, scope: !5846)
!5865 = !DILocation(line: 2244, column: 10, scope: !5846)
!5866 = !DILocation(line: 2244, column: 30, scope: !5846)
!5867 = !DILocation(line: 2243, column: 7, scope: !5834)
!5868 = !DILocation(line: 2246, column: 22, scope: !5845)
!5869 = !DILocation(line: 0, scope: !5845)
!5870 = !DILocation(line: 2253, column: 12, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 2253, column: 11)
!5872 = !DILocation(line: 2253, column: 32, scope: !5871)
!5873 = !DILocation(line: 2253, column: 35, scope: !5871)
!5874 = !DILocation(line: 2253, column: 58, scope: !5871)
!5875 = !DILocation(line: 2253, column: 56, scope: !5871)
!5876 = !DILocation(line: 2254, column: 4, scope: !5871)
!5877 = !DILocation(line: 2254, column: 8, scope: !5871)
!5878 = !DILocation(line: 2254, column: 28, scope: !5871)
!5879 = !DILocation(line: 2254, column: 31, scope: !5871)
!5880 = !DILocation(line: 2254, column: 54, scope: !5871)
!5881 = !DILocation(line: 2254, column: 52, scope: !5871)
!5882 = !DILocation(line: 2253, column: 11, scope: !5845)
!5883 = !DILocation(line: 2255, column: 9, scope: !5871)
!5884 = !DILocation(line: 2255, column: 2, scope: !5871)
!5885 = !DILocation(line: 2257, column: 32, scope: !5845)
!5886 = !DILocation(line: 2257, column: 13, scope: !5845)
!5887 = !DILocation(line: 2258, column: 15, scope: !5845)
!5888 = !DILocation(line: 2259, column: 5, scope: !5846)
!5889 = !DILocation(line: 2261, column: 3, scope: !5834)
!5890 = !DILocation(line: 2262, column: 1, scope: !5834)
!5891 = distinct !DISubprogram(name: "instantiate_scev_binary", scope: !3, file: !3, line: 2279, type: !5892, scopeLine: 2283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5894)
!5892 = !DISubroutineType(types: !5893)
!5893 = !{!476, !1253, !1016, !476, !134, !476, !476, !476, !468, !1285, !469}
!5894 = !{!5895, !5896, !5897, !5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906}
!5895 = !DILocalVariable(name: "instantiate_below", arg: 1, scope: !5891, file: !3, line: 2279, type: !1253)
!5896 = !DILocalVariable(name: "evolution_loop", arg: 2, scope: !5891, file: !3, line: 2280, type: !1016)
!5897 = !DILocalVariable(name: "chrec", arg: 3, scope: !5891, file: !3, line: 2280, type: !476)
!5898 = !DILocalVariable(name: "code", arg: 4, scope: !5891, file: !3, line: 2280, type: !134)
!5899 = !DILocalVariable(name: "type", arg: 5, scope: !5891, file: !3, line: 2281, type: !476)
!5900 = !DILocalVariable(name: "c0", arg: 6, scope: !5891, file: !3, line: 2281, type: !476)
!5901 = !DILocalVariable(name: "c1", arg: 7, scope: !5891, file: !3, line: 2281, type: !476)
!5902 = !DILocalVariable(name: "fold_conversions", arg: 8, scope: !5891, file: !3, line: 2282, type: !468)
!5903 = !DILocalVariable(name: "cache", arg: 9, scope: !5891, file: !3, line: 2282, type: !1285)
!5904 = !DILocalVariable(name: "size_expr", arg: 10, scope: !5891, file: !3, line: 2282, type: !469)
!5905 = !DILocalVariable(name: "op1", scope: !5891, file: !3, line: 2284, type: !476)
!5906 = !DILocalVariable(name: "op0", scope: !5891, file: !3, line: 2285, type: !476)
!5907 = !DILocation(line: 0, scope: !5891)
!5908 = !DILocation(line: 2285, column: 14, scope: !5891)
!5909 = !DILocation(line: 2288, column: 14, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 2288, column: 7)
!5911 = !DILocation(line: 2288, column: 11, scope: !5910)
!5912 = !DILocation(line: 2288, column: 7, scope: !5891)
!5913 = !DILocation(line: 2289, column: 5, scope: !5910)
!5914 = !DILocation(line: 2291, column: 9, scope: !5891)
!5915 = !DILocation(line: 2294, column: 14, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 2294, column: 7)
!5917 = !DILocation(line: 2294, column: 11, scope: !5916)
!5918 = !DILocation(line: 2294, column: 7, scope: !5891)
!5919 = !DILocation(line: 2295, column: 5, scope: !5916)
!5920 = !DILocation(line: 2297, column: 10, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 2297, column: 7)
!5922 = !DILocation(line: 2298, column: 13, scope: !5921)
!5923 = !DILocation(line: 2298, column: 7, scope: !5921)
!5924 = !DILocation(line: 2300, column: 13, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 2299, column: 5)
!5926 = !DILocation(line: 2301, column: 13, scope: !5925)
!5927 = !DILocation(line: 2303, column: 7, scope: !5925)
!5928 = !DILocation(line: 2307, column: 11, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 2304, column: 2)
!5930 = !DILocation(line: 2307, column: 4, scope: !5929)
!5931 = !DILocation(line: 2310, column: 11, scope: !5929)
!5932 = !DILocation(line: 2310, column: 4, scope: !5929)
!5933 = !DILocation(line: 2313, column: 11, scope: !5929)
!5934 = !DILocation(line: 2313, column: 4, scope: !5929)
!5935 = !DILocation(line: 2316, column: 4, scope: !5929)
!5936 = !DILocation(line: 2318, column: 5, scope: !5925)
!5937 = !DILocation(line: 2320, column: 10, scope: !5891)
!5938 = !DILocation(line: 2320, column: 26, scope: !5891)
!5939 = !DILocation(line: 2321, column: 1, scope: !5891)
!5940 = distinct !DISubprogram(name: "instantiate_scev_convert", scope: !3, file: !3, line: 2339, type: !5941, scopeLine: 2343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5943)
!5941 = !DISubroutineType(types: !5942)
!5942 = !{!476, !1253, !1016, !476, !476, !476, !468, !1285, !469}
!5943 = !{!5944, !5945, !5946, !5947, !5948, !5949, !5950, !5951, !5952, !5953}
!5944 = !DILocalVariable(name: "instantiate_below", arg: 1, scope: !5940, file: !3, line: 2339, type: !1253)
!5945 = !DILocalVariable(name: "evolution_loop", arg: 2, scope: !5940, file: !3, line: 2340, type: !1016)
!5946 = !DILocalVariable(name: "chrec", arg: 3, scope: !5940, file: !3, line: 2340, type: !476)
!5947 = !DILocalVariable(name: "type", arg: 4, scope: !5940, file: !3, line: 2341, type: !476)
!5948 = !DILocalVariable(name: "op", arg: 5, scope: !5940, file: !3, line: 2341, type: !476)
!5949 = !DILocalVariable(name: "fold_conversions", arg: 6, scope: !5940, file: !3, line: 2342, type: !468)
!5950 = !DILocalVariable(name: "cache", arg: 7, scope: !5940, file: !3, line: 2342, type: !1285)
!5951 = !DILocalVariable(name: "size_expr", arg: 8, scope: !5940, file: !3, line: 2342, type: !469)
!5952 = !DILocalVariable(name: "op0", scope: !5940, file: !3, line: 2344, type: !476)
!5953 = !DILocalVariable(name: "tmp", scope: !5954, file: !3, line: 2352, type: !476)
!5954 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 2351, column: 5)
!5955 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 2350, column: 7)
!5956 = !DILocation(line: 0, scope: !5940)
!5957 = !DILocation(line: 2344, column: 14, scope: !5940)
!5958 = !DILocation(line: 2347, column: 14, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 2347, column: 7)
!5960 = !DILocation(line: 2347, column: 11, scope: !5959)
!5961 = !DILocation(line: 2347, column: 7, scope: !5940)
!5962 = !DILocation(line: 2348, column: 5, scope: !5959)
!5963 = !DILocation(line: 2350, column: 7, scope: !5955)
!5964 = !DILocation(line: 2350, column: 7, scope: !5940)
!5965 = !DILocation(line: 2352, column: 18, scope: !5954)
!5966 = !DILocation(line: 0, scope: !5954)
!5967 = !DILocation(line: 2353, column: 11, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 2353, column: 11)
!5969 = !DILocation(line: 2357, column: 7, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 2357, column: 7)
!5971 = !DILocation(line: 2357, column: 20, scope: !5970)
!5972 = !DILocation(line: 2357, column: 13, scope: !5970)
!5973 = !DILocation(line: 2363, column: 7, scope: !5940)
!5974 = !DILocation(line: 2364, column: 12, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 2363, column: 7)
!5976 = !DILocation(line: 2364, column: 5, scope: !5975)
!5977 = !DILocation(line: 2366, column: 10, scope: !5940)
!5978 = !DILocation(line: 2366, column: 3, scope: !5940)
!5979 = !DILocation(line: 2367, column: 1, scope: !5940)
!5980 = distinct !DISubprogram(name: "instantiate_scev_not", scope: !3, file: !3, line: 2386, type: !5981, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5983)
!5981 = !DISubroutineType(types: !5982)
!5982 = !{!476, !1253, !1016, !476, !134, !476, !476, !468, !1285, !469}
!5983 = !{!5984, !5985, !5986, !5987, !5988, !5989, !5990, !5991, !5992, !5993}
!5984 = !DILocalVariable(name: "instantiate_below", arg: 1, scope: !5980, file: !3, line: 2386, type: !1253)
!5985 = !DILocalVariable(name: "evolution_loop", arg: 2, scope: !5980, file: !3, line: 2387, type: !1016)
!5986 = !DILocalVariable(name: "chrec", arg: 3, scope: !5980, file: !3, line: 2387, type: !476)
!5987 = !DILocalVariable(name: "code", arg: 4, scope: !5980, file: !3, line: 2388, type: !134)
!5988 = !DILocalVariable(name: "type", arg: 5, scope: !5980, file: !3, line: 2388, type: !476)
!5989 = !DILocalVariable(name: "op", arg: 6, scope: !5980, file: !3, line: 2388, type: !476)
!5990 = !DILocalVariable(name: "fold_conversions", arg: 7, scope: !5980, file: !3, line: 2389, type: !468)
!5991 = !DILocalVariable(name: "cache", arg: 8, scope: !5980, file: !3, line: 2389, type: !1285)
!5992 = !DILocalVariable(name: "size_expr", arg: 9, scope: !5980, file: !3, line: 2389, type: !469)
!5993 = !DILocalVariable(name: "op0", scope: !5980, file: !3, line: 2391, type: !476)
!5994 = !DILocation(line: 0, scope: !5980)
!5995 = !DILocation(line: 2391, column: 14, scope: !5980)
!5996 = !DILocation(line: 2394, column: 14, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 2394, column: 7)
!5998 = !DILocation(line: 2394, column: 11, scope: !5997)
!5999 = !DILocation(line: 2394, column: 7, scope: !5980)
!6000 = !DILocation(line: 2395, column: 5, scope: !5997)
!6001 = !DILocation(line: 2397, column: 10, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 2397, column: 7)
!6003 = !DILocation(line: 2397, column: 7, scope: !5980)
!6004 = !DILocation(line: 2399, column: 13, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 2398, column: 5)
!6006 = !DILocation(line: 2401, column: 7, scope: !6005)
!6007 = !DILocation(line: 2405, column: 13, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6005, file: !3, line: 2402, column: 2)
!6009 = !DILocation(line: 2404, column: 11, scope: !6008)
!6010 = !DILocation(line: 2404, column: 4, scope: !6008)
!6011 = !DILocation(line: 2409, column: 13, scope: !6008)
!6012 = !DILocation(line: 2408, column: 11, scope: !6008)
!6013 = !DILocation(line: 2408, column: 4, scope: !6008)
!6014 = !DILocation(line: 2412, column: 4, scope: !6008)
!6015 = !DILocation(line: 2414, column: 5, scope: !6005)
!6016 = !DILocation(line: 2416, column: 10, scope: !5980)
!6017 = !DILocation(line: 2416, column: 26, scope: !5980)
!6018 = !DILocation(line: 2417, column: 1, scope: !5980)
!6019 = distinct !DISubprogram(name: "instantiate_scev_3", scope: !3, file: !3, line: 2434, type: !2998, scopeLine: 2437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6020)
!6020 = !{!6021, !6022, !6023, !6024, !6025, !6026, !6027, !6028, !6029}
!6021 = !DILocalVariable(name: "instantiate_below", arg: 1, scope: !6019, file: !3, line: 2434, type: !1253)
!6022 = !DILocalVariable(name: "evolution_loop", arg: 2, scope: !6019, file: !3, line: 2435, type: !1016)
!6023 = !DILocalVariable(name: "chrec", arg: 3, scope: !6019, file: !3, line: 2435, type: !476)
!6024 = !DILocalVariable(name: "fold_conversions", arg: 4, scope: !6019, file: !3, line: 2436, type: !468)
!6025 = !DILocalVariable(name: "cache", arg: 5, scope: !6019, file: !3, line: 2436, type: !1285)
!6026 = !DILocalVariable(name: "size_expr", arg: 6, scope: !6019, file: !3, line: 2436, type: !469)
!6027 = !DILocalVariable(name: "op1", scope: !6019, file: !3, line: 2438, type: !476)
!6028 = !DILocalVariable(name: "op2", scope: !6019, file: !3, line: 2438, type: !476)
!6029 = !DILocalVariable(name: "op0", scope: !6019, file: !3, line: 2439, type: !476)
!6030 = !DILocation(line: 0, scope: !6019)
!6031 = !DILocation(line: 2440, column: 6, scope: !6019)
!6032 = !DILocation(line: 2439, column: 14, scope: !6019)
!6033 = !DILocation(line: 2442, column: 14, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 2442, column: 7)
!6035 = !DILocation(line: 2442, column: 11, scope: !6034)
!6036 = !DILocation(line: 2442, column: 7, scope: !6019)
!6037 = !DILocation(line: 2443, column: 5, scope: !6034)
!6038 = !DILocation(line: 2446, column: 8, scope: !6019)
!6039 = !DILocation(line: 2445, column: 9, scope: !6019)
!6040 = !DILocation(line: 2448, column: 14, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 2448, column: 7)
!6042 = !DILocation(line: 2448, column: 11, scope: !6041)
!6043 = !DILocation(line: 2448, column: 7, scope: !6019)
!6044 = !DILocation(line: 2449, column: 5, scope: !6041)
!6045 = !DILocation(line: 2452, column: 8, scope: !6019)
!6046 = !DILocation(line: 2451, column: 9, scope: !6019)
!6047 = !DILocation(line: 2454, column: 14, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 2454, column: 7)
!6049 = !DILocation(line: 2454, column: 11, scope: !6048)
!6050 = !DILocation(line: 2454, column: 7, scope: !6019)
!6051 = !DILocation(line: 2455, column: 5, scope: !6048)
!6052 = !DILocation(line: 2457, column: 14, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 2457, column: 7)
!6054 = !DILocation(line: 2457, column: 11, scope: !6053)
!6055 = !DILocation(line: 2458, column: 7, scope: !6053)
!6056 = !DILocation(line: 2458, column: 17, scope: !6053)
!6057 = !DILocation(line: 2458, column: 14, scope: !6053)
!6058 = !DILocation(line: 2459, column: 7, scope: !6053)
!6059 = !DILocation(line: 2459, column: 17, scope: !6053)
!6060 = !DILocation(line: 2459, column: 14, scope: !6053)
!6061 = !DILocation(line: 2457, column: 7, scope: !6019)
!6062 = !DILocation(line: 2462, column: 10, scope: !6019)
!6063 = !DILocation(line: 2462, column: 3, scope: !6019)
!6064 = !DILocation(line: 2464, column: 1, scope: !6019)
!6065 = distinct !DISubprogram(name: "instantiate_scev_2", scope: !3, file: !3, line: 2481, type: !2998, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6066)
!6066 = !{!6067, !6068, !6069, !6070, !6071, !6072, !6073, !6074}
!6067 = !DILocalVariable(name: "instantiate_below", arg: 1, scope: !6065, file: !3, line: 2481, type: !1253)
!6068 = !DILocalVariable(name: "evolution_loop", arg: 2, scope: !6065, file: !3, line: 2482, type: !1016)
!6069 = !DILocalVariable(name: "chrec", arg: 3, scope: !6065, file: !3, line: 2482, type: !476)
!6070 = !DILocalVariable(name: "fold_conversions", arg: 4, scope: !6065, file: !3, line: 2483, type: !468)
!6071 = !DILocalVariable(name: "cache", arg: 5, scope: !6065, file: !3, line: 2483, type: !1285)
!6072 = !DILocalVariable(name: "size_expr", arg: 6, scope: !6065, file: !3, line: 2483, type: !469)
!6073 = !DILocalVariable(name: "op1", scope: !6065, file: !3, line: 2485, type: !476)
!6074 = !DILocalVariable(name: "op0", scope: !6065, file: !3, line: 2486, type: !476)
!6075 = !DILocation(line: 0, scope: !6065)
!6076 = !DILocation(line: 2487, column: 6, scope: !6065)
!6077 = !DILocation(line: 2486, column: 14, scope: !6065)
!6078 = !DILocation(line: 2489, column: 14, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 2489, column: 7)
!6080 = !DILocation(line: 2489, column: 11, scope: !6079)
!6081 = !DILocation(line: 2489, column: 7, scope: !6065)
!6082 = !DILocation(line: 2490, column: 5, scope: !6079)
!6083 = !DILocation(line: 2493, column: 8, scope: !6065)
!6084 = !DILocation(line: 2492, column: 9, scope: !6065)
!6085 = !DILocation(line: 2495, column: 14, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 2495, column: 7)
!6087 = !DILocation(line: 2495, column: 11, scope: !6086)
!6088 = !DILocation(line: 2495, column: 7, scope: !6065)
!6089 = !DILocation(line: 2496, column: 5, scope: !6086)
!6090 = !DILocation(line: 2498, column: 14, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 2498, column: 7)
!6092 = !DILocation(line: 2498, column: 11, scope: !6091)
!6093 = !DILocation(line: 2499, column: 7, scope: !6091)
!6094 = !DILocation(line: 2499, column: 17, scope: !6091)
!6095 = !DILocation(line: 2499, column: 14, scope: !6091)
!6096 = !DILocation(line: 2498, column: 7, scope: !6065)
!6097 = !DILocation(line: 2502, column: 10, scope: !6065)
!6098 = !DILocation(line: 2502, column: 3, scope: !6065)
!6099 = !DILocation(line: 2503, column: 1, scope: !6065)
!6100 = distinct !DISubprogram(name: "instantiate_scev_1", scope: !3, file: !3, line: 2520, type: !2998, scopeLine: 2523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6101)
!6101 = !{!6102, !6103, !6104, !6105, !6106, !6107, !6108}
!6102 = !DILocalVariable(name: "instantiate_below", arg: 1, scope: !6100, file: !3, line: 2520, type: !1253)
!6103 = !DILocalVariable(name: "evolution_loop", arg: 2, scope: !6100, file: !3, line: 2521, type: !1016)
!6104 = !DILocalVariable(name: "chrec", arg: 3, scope: !6100, file: !3, line: 2521, type: !476)
!6105 = !DILocalVariable(name: "fold_conversions", arg: 4, scope: !6100, file: !3, line: 2522, type: !468)
!6106 = !DILocalVariable(name: "cache", arg: 5, scope: !6100, file: !3, line: 2522, type: !1285)
!6107 = !DILocalVariable(name: "size_expr", arg: 6, scope: !6100, file: !3, line: 2522, type: !469)
!6108 = !DILocalVariable(name: "op0", scope: !6100, file: !3, line: 2524, type: !476)
!6109 = !DILocation(line: 0, scope: !6100)
!6110 = !DILocation(line: 2525, column: 6, scope: !6100)
!6111 = !DILocation(line: 2524, column: 14, scope: !6100)
!6112 = !DILocation(line: 2528, column: 14, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 2528, column: 7)
!6114 = !DILocation(line: 2528, column: 11, scope: !6113)
!6115 = !DILocation(line: 2528, column: 7, scope: !6100)
!6116 = !DILocation(line: 2529, column: 5, scope: !6113)
!6117 = !DILocation(line: 2531, column: 14, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 2531, column: 7)
!6119 = !DILocation(line: 2531, column: 11, scope: !6118)
!6120 = !DILocation(line: 2531, column: 7, scope: !6100)
!6121 = !DILocation(line: 2534, column: 10, scope: !6100)
!6122 = !DILocation(line: 2534, column: 3, scope: !6100)
!6123 = !DILocation(line: 2535, column: 1, scope: !6100)
!6124 = distinct !DISubprogram(name: "get_instantiated_value", scope: !3, file: !3, line: 2064, type: !6125, scopeLine: 2066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6127)
!6125 = !DISubroutineType(types: !6126)
!6126 = !{!476, !1285, !1253, !476}
!6127 = !{!6128, !6129, !6130, !6131, !6132}
!6128 = !DILocalVariable(name: "cache", arg: 1, scope: !6124, file: !3, line: 2064, type: !1285)
!6129 = !DILocalVariable(name: "instantiated_below", arg: 2, scope: !6124, file: !3, line: 2064, type: !1253)
!6130 = !DILocalVariable(name: "version", arg: 3, scope: !6124, file: !3, line: 2065, type: !476)
!6131 = !DILocalVariable(name: "info", scope: !6124, file: !3, line: 2067, type: !1829)
!6132 = !DILocalVariable(name: "pattern", scope: !6124, file: !3, line: 2067, type: !1830)
!6133 = !DILocation(line: 0, scope: !6124)
!6134 = !DILocation(line: 2067, column: 3, scope: !6124)
!6135 = !DILocation(line: 2069, column: 11, scope: !6124)
!6136 = !DILocation(line: 2069, column: 15, scope: !6124)
!6137 = !DILocation(line: 2070, column: 11, scope: !6124)
!6138 = !DILocation(line: 2070, column: 30, scope: !6124)
!6139 = !DILocation(line: 2071, column: 35, scope: !6124)
!6140 = !DILocation(line: 2073, column: 7, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 2073, column: 7)
!6142 = !DILocation(line: 2073, column: 7, scope: !6124)
!6143 = !DILocation(line: 2074, column: 18, scope: !6141)
!6144 = !DILocation(line: 2074, column: 5, scope: !6141)
!6145 = !DILocation(line: 0, scope: !6141)
!6146 = !DILocation(line: 2077, column: 1, scope: !6124)
!6147 = distinct !DISubprogram(name: "set_instantiated_value", scope: !3, file: !3, line: 2083, type: !6148, scopeLine: 2085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6150)
!6148 = !DISubroutineType(types: !6149)
!6149 = !{null, !1285, !1253, !476, !476}
!6150 = !{!6151, !6152, !6153, !6154, !6155, !6156, !6157}
!6151 = !DILocalVariable(name: "cache", arg: 1, scope: !6147, file: !3, line: 2083, type: !1285)
!6152 = !DILocalVariable(name: "instantiated_below", arg: 2, scope: !6147, file: !3, line: 2083, type: !1253)
!6153 = !DILocalVariable(name: "version", arg: 3, scope: !6147, file: !3, line: 2084, type: !476)
!6154 = !DILocalVariable(name: "val", arg: 4, scope: !6147, file: !3, line: 2084, type: !476)
!6155 = !DILocalVariable(name: "info", scope: !6147, file: !3, line: 2086, type: !1829)
!6156 = !DILocalVariable(name: "pattern", scope: !6147, file: !3, line: 2086, type: !1830)
!6157 = !DILocalVariable(name: "slot", scope: !6147, file: !3, line: 2087, type: !1309)
!6158 = !DILocation(line: 0, scope: !6147)
!6159 = !DILocation(line: 2086, column: 3, scope: !6147)
!6160 = !DILocation(line: 2089, column: 11, scope: !6147)
!6161 = !DILocation(line: 2089, column: 15, scope: !6147)
!6162 = !DILocation(line: 2090, column: 11, scope: !6147)
!6163 = !DILocation(line: 2090, column: 30, scope: !6147)
!6164 = !DILocation(line: 2091, column: 10, scope: !6147)
!6165 = !DILocation(line: 2093, column: 8, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 2093, column: 7)
!6167 = !DILocation(line: 2093, column: 7, scope: !6147)
!6168 = !DILocation(line: 2094, column: 13, scope: !6166)
!6169 = !DILocation(line: 2094, column: 11, scope: !6166)
!6170 = !DILocation(line: 2094, column: 5, scope: !6166)
!6171 = !DILocation(line: 2095, column: 35, scope: !6147)
!6172 = !DILocation(line: 2096, column: 9, scope: !6147)
!6173 = !DILocation(line: 2096, column: 15, scope: !6147)
!6174 = !DILocation(line: 2097, column: 1, scope: !6147)
!6175 = distinct !DISubprogram(name: "loop_closed_phi_def", scope: !3, file: !3, line: 2103, type: !6176, scopeLine: 2104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6178)
!6176 = !DISubroutineType(types: !6177)
!6177 = !{!476, !476}
!6178 = !{!6179, !6180, !6181, !6182, !6183}
!6179 = !DILocalVariable(name: "var", arg: 1, scope: !6175, file: !3, line: 2103, type: !476)
!6180 = !DILocalVariable(name: "loop", scope: !6175, file: !3, line: 2105, type: !1016)
!6181 = !DILocalVariable(name: "exit", scope: !6175, file: !3, line: 2106, type: !780)
!6182 = !DILocalVariable(name: "phi", scope: !6175, file: !3, line: 2107, type: !800)
!6183 = !DILocalVariable(name: "psi", scope: !6175, file: !3, line: 2108, type: !3617)
!6184 = !DILocation(line: 0, scope: !6175)
!6185 = !DILocation(line: 2108, column: 3, scope: !6175)
!6186 = !DILocation(line: 2110, column: 11, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 2110, column: 7)
!6188 = !DILocation(line: 2111, column: 7, scope: !6187)
!6189 = !DILocation(line: 2111, column: 10, scope: !6187)
!6190 = !DILocation(line: 2111, column: 26, scope: !6187)
!6191 = !DILocation(line: 2110, column: 7, scope: !6175)
!6192 = !DILocation(line: 2114, column: 32, scope: !6175)
!6193 = !DILocation(line: 2114, column: 10, scope: !6175)
!6194 = !DILocation(line: 2115, column: 10, scope: !6175)
!6195 = !DILocation(line: 2116, column: 8, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 2116, column: 7)
!6197 = !DILocation(line: 2116, column: 7, scope: !6175)
!6198 = !DILocation(line: 2119, column: 14, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 2119, column: 3)
!6200 = !DILocation(line: 2119, column: 36, scope: !6199)
!6201 = !DILocation(line: 0, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 2122, column: 11)
!6203 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 2120, column: 5)
!6204 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 2119, column: 3)
!6205 = !DILocation(line: 2119, column: 8, scope: !6199)
!6206 = !DILocation(line: 2119, column: 44, scope: !6204)
!6207 = !DILocation(line: 2119, column: 43, scope: !6204)
!6208 = !DILocation(line: 2119, column: 3, scope: !6199)
!6209 = !DILocation(line: 2121, column: 13, scope: !6203)
!6210 = !DILocation(line: 2122, column: 11, scope: !6202)
!6211 = !DILocation(line: 2122, column: 45, scope: !6202)
!6212 = !DILocation(line: 2122, column: 11, scope: !6203)
!6213 = !DILocation(line: 2123, column: 9, scope: !6202)
!6214 = !DILocation(line: 2123, column: 2, scope: !6202)
!6215 = !DILocation(line: 2119, column: 61, scope: !6204)
!6216 = !DILocation(line: 2119, column: 3, scope: !6204)
!6217 = distinct !{!6217, !6208, !6218}
!6218 = !DILocation(line: 2124, column: 5, scope: !6199)
!6219 = !DILocation(line: 2127, column: 1, scope: !6175)
!6220 = distinct !DISubprogram(name: "gather_chrec_stats", scope: !3, file: !3, line: 2860, type: !6221, scopeLine: 2861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6223)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{null, !476, !1841}
!6223 = !{!6224, !6225}
!6224 = !DILocalVariable(name: "chrec", arg: 1, scope: !6220, file: !3, line: 2860, type: !476)
!6225 = !DILocalVariable(name: "stats", arg: 2, scope: !6220, file: !3, line: 2860, type: !1841)
!6226 = !DILocation(line: 0, scope: !6220)
!6227 = !DILocation(line: 2862, column: 7, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 2862, column: 7)
!6229 = !DILocation(line: 2862, column: 17, scope: !6228)
!6230 = !DILocation(line: 2862, column: 21, scope: !6228)
!6231 = !DILocation(line: 2862, column: 32, scope: !6228)
!6232 = !DILocation(line: 2862, column: 7, scope: !6220)
!6233 = !DILocation(line: 2864, column: 7, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6228, file: !3, line: 2863, column: 5)
!6235 = !DILocation(line: 2865, column: 27, scope: !6234)
!6236 = !DILocation(line: 2865, column: 7, scope: !6234)
!6237 = !DILocation(line: 2866, column: 16, scope: !6234)
!6238 = !DILocation(line: 2866, column: 7, scope: !6234)
!6239 = !DILocation(line: 2867, column: 5, scope: !6234)
!6240 = !DILocation(line: 2869, column: 10, scope: !6220)
!6241 = !DILocation(line: 2869, column: 19, scope: !6220)
!6242 = !DILocation(line: 2871, column: 13, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 2871, column: 7)
!6244 = !DILocation(line: 2871, column: 7, scope: !6220)
!6245 = !DILocation(line: 2873, column: 14, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 2872, column: 5)
!6247 = !DILocation(line: 2873, column: 29, scope: !6246)
!6248 = !DILocation(line: 2874, column: 7, scope: !6246)
!6249 = !DILocation(line: 2877, column: 11, scope: !6220)
!6250 = !DILocation(line: 2877, column: 3, scope: !6220)
!6251 = !DILocation(line: 2880, column: 11, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 2880, column: 11)
!6253 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 2878, column: 5)
!6254 = !DILocation(line: 2880, column: 11, scope: !6253)
!6255 = !DILocation(line: 2882, column: 8, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 2882, column: 8)
!6257 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 2881, column: 2)
!6258 = !DILocation(line: 2882, column: 18, scope: !6256)
!6259 = !DILocation(line: 2882, column: 22, scope: !6256)
!6260 = !DILocation(line: 2882, column: 33, scope: !6256)
!6261 = !DILocation(line: 2882, column: 8, scope: !6257)
!6262 = !DILocation(line: 2883, column: 6, scope: !6256)
!6263 = !DILocation(line: 2884, column: 11, scope: !6257)
!6264 = !DILocation(line: 2884, column: 20, scope: !6257)
!6265 = !DILocation(line: 2885, column: 2, scope: !6257)
!6266 = !DILocation(line: 2886, column: 16, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 2886, column: 16)
!6268 = !DILocation(line: 0, scope: !6267)
!6269 = !DILocation(line: 2886, column: 16, scope: !6252)
!6270 = !DILocation(line: 2888, column: 18, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6272, file: !3, line: 2888, column: 8)
!6272 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 2887, column: 2)
!6273 = !DILocation(line: 2888, column: 22, scope: !6271)
!6274 = !DILocation(line: 2888, column: 33, scope: !6271)
!6275 = !DILocation(line: 2888, column: 8, scope: !6272)
!6276 = !DILocation(line: 2889, column: 6, scope: !6271)
!6277 = !DILocation(line: 2890, column: 11, scope: !6272)
!6278 = !DILocation(line: 2890, column: 29, scope: !6272)
!6279 = !DILocation(line: 2891, column: 2, scope: !6272)
!6280 = !DILocation(line: 2894, column: 18, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 2894, column: 8)
!6282 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 2893, column: 2)
!6283 = !DILocation(line: 2894, column: 22, scope: !6281)
!6284 = !DILocation(line: 2894, column: 33, scope: !6281)
!6285 = !DILocation(line: 2894, column: 8, scope: !6282)
!6286 = !DILocation(line: 2895, column: 6, scope: !6281)
!6287 = !DILocation(line: 2896, column: 11, scope: !6282)
!6288 = !DILocation(line: 2896, column: 25, scope: !6282)
!6289 = !DILocation(line: 2905, column: 7, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 2905, column: 7)
!6291 = !DILocation(line: 2905, column: 7, scope: !6220)
!6292 = !DILocation(line: 2907, column: 11, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 2907, column: 11)
!6294 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 2906, column: 5)
!6295 = !DILocation(line: 2907, column: 21, scope: !6293)
!6296 = !DILocation(line: 2907, column: 25, scope: !6293)
!6297 = !DILocation(line: 2907, column: 36, scope: !6293)
!6298 = !DILocation(line: 2907, column: 11, scope: !6294)
!6299 = !DILocation(line: 2908, column: 2, scope: !6293)
!6300 = !DILocation(line: 2909, column: 14, scope: !6294)
!6301 = !DILocation(line: 2909, column: 29, scope: !6294)
!6302 = !DILocation(line: 2910, column: 5, scope: !6294)
!6303 = !DILocation(line: 2912, column: 7, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 2912, column: 7)
!6305 = !DILocation(line: 2912, column: 17, scope: !6304)
!6306 = !DILocation(line: 2912, column: 21, scope: !6304)
!6307 = !DILocation(line: 2912, column: 32, scope: !6304)
!6308 = !DILocation(line: 2912, column: 7, scope: !6220)
!6309 = !DILocation(line: 2913, column: 5, scope: !6304)
!6310 = !DILocation(line: 2914, column: 1, scope: !6220)
!6311 = distinct !DISubprogram(name: "VEC_int_heap_alloc", scope: !1852, file: !1852, line: 32, type: !6312, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6314)
!6312 = !DISubroutineType(types: !6313)
!6313 = !{!1850, !469}
!6314 = !{!6315}
!6315 = !DILocalVariable(name: "alloc_", arg: 1, scope: !6311, file: !1852, line: 32, type: !469)
!6316 = !DILocation(line: 0, scope: !6311)
!6317 = !DILocation(line: 32, column: 1, scope: !6311)
!6318 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !330, file: !330, line: 85, type: !6319, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6321)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{!469, !4422, !7, !3259}
!6321 = !{!6322, !6323, !6324}
!6322 = !DILocalVariable(name: "vec_", arg: 1, scope: !6318, file: !330, line: 85, type: !4422)
!6323 = !DILocalVariable(name: "ix_", arg: 2, scope: !6318, file: !330, line: 85, type: !7)
!6324 = !DILocalVariable(name: "ptr", arg: 3, scope: !6318, file: !330, line: 85, type: !3259)
!6325 = !DILocation(line: 0, scope: !6318)
!6326 = !DILocation(line: 85, column: 1, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6318, file: !330, line: 85, column: 1)
!6328 = !DILocation(line: 85, column: 1, scope: !6318)
!6329 = !DILocation(line: 85, column: 1, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6327, file: !330, line: 85, column: 1)
!6331 = !DILocation(line: 85, column: 1, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6327, file: !330, line: 85, column: 1)
!6333 = !DILocation(line: 0, scope: !6327)
!6334 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !1852, file: !1852, line: 31, type: !6335, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6339)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!6337, !6338, !469}
!6337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!6338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!6339 = !{!6340, !6341, !6342}
!6340 = !DILocalVariable(name: "vec_", arg: 1, scope: !6334, file: !1852, line: 31, type: !6338)
!6341 = !DILocalVariable(name: "obj_", arg: 2, scope: !6334, file: !1852, line: 31, type: !469)
!6342 = !DILocalVariable(name: "slot_", scope: !6334, file: !1852, line: 31, type: !6337)
!6343 = !DILocation(line: 0, scope: !6334)
!6344 = !DILocation(line: 31, column: 1, scope: !6334)
!6345 = distinct !DISubprogram(name: "loop_outer", scope: !330, file: !330, line: 434, type: !6346, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6348)
!6346 = !DISubroutineType(types: !6347)
!6347 = !{!1016, !2692}
!6348 = !{!6349, !6350}
!6349 = !DILocalVariable(name: "loop", arg: 1, scope: !6345, file: !330, line: 434, type: !2692)
!6350 = !DILocalVariable(name: "n", scope: !6345, file: !330, line: 436, type: !7)
!6351 = !DILocation(line: 0, scope: !6345)
!6352 = !DILocation(line: 436, column: 16, scope: !6345)
!6353 = !DILocation(line: 438, column: 9, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6345, file: !330, line: 438, column: 7)
!6355 = !DILocation(line: 438, column: 7, scope: !6345)
!6356 = !DILocation(line: 441, column: 10, scope: !6345)
!6357 = !DILocation(line: 441, column: 3, scope: !6345)
!6358 = !DILocation(line: 442, column: 1, scope: !6345)
!6359 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !330, file: !330, line: 85, type: !6360, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6362)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{!7, !4422}
!6362 = !{!6363}
!6363 = !DILocalVariable(name: "vec_", arg: 1, scope: !6359, file: !330, line: 85, type: !4422)
!6364 = !DILocation(line: 0, scope: !6359)
!6365 = !DILocation(line: 85, column: 1, scope: !6359)
!6366 = distinct !DISubprogram(name: "VEC_int_base_iterate", scope: !1852, file: !1852, line: 31, type: !6367, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6371)
!6367 = !DISubroutineType(types: !6368)
!6368 = !{!469, !6369, !7, !6337}
!6369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6370, size: 64)
!6370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1856)
!6371 = !{!6372, !6373, !6374}
!6372 = !DILocalVariable(name: "vec_", arg: 1, scope: !6366, file: !1852, line: 31, type: !6369)
!6373 = !DILocalVariable(name: "ix_", arg: 2, scope: !6366, file: !1852, line: 31, type: !7)
!6374 = !DILocalVariable(name: "ptr", arg: 3, scope: !6366, file: !1852, line: 31, type: !6337)
!6375 = !DILocation(line: 0, scope: !6366)
!6376 = !DILocation(line: 31, column: 1, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6366, file: !1852, line: 31, column: 1)
!6378 = !DILocation(line: 31, column: 1, scope: !6366)
!6379 = !DILocation(line: 31, column: 1, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6377, file: !1852, line: 31, column: 1)
!6381 = !DILocation(line: 31, column: 1, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6377, file: !1852, line: 31, column: 1)
!6383 = !DILocation(line: 0, scope: !6377)
!6384 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !1852, file: !1852, line: 32, type: !6385, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6388)
!6385 = !DISubroutineType(types: !6386)
!6386 = !{null, !6387}
!6387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!6388 = !{!6389}
!6389 = !DILocalVariable(name: "vec_", arg: 1, scope: !6384, file: !1852, line: 32, type: !6387)
!6390 = !DILocation(line: 0, scope: !6384)
!6391 = !DILocation(line: 32, column: 1, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6384, file: !1852, line: 32, column: 1)
!6393 = !DILocation(line: 32, column: 1, scope: !6384)
!6394 = distinct !DISubprogram(name: "get_exit_conditions_rec", scope: !3, file: !3, line: 962, type: !6395, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6397)
!6395 = !DISubroutineType(types: !6396)
!6396 = !{null, !1016, !3599}
!6397 = !{!6398, !6399, !6400}
!6398 = !DILocalVariable(name: "loop", arg: 1, scope: !6394, file: !3, line: 962, type: !1016)
!6399 = !DILocalVariable(name: "exit_conditions", arg: 2, scope: !6394, file: !3, line: 963, type: !3599)
!6400 = !DILocalVariable(name: "loop_condition", scope: !6401, file: !3, line: 974, type: !800)
!6401 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 973, column: 5)
!6402 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 972, column: 7)
!6403 = !DILocation(line: 0, scope: !6394)
!6404 = !DILocation(line: 965, column: 8, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 965, column: 7)
!6406 = !DILocation(line: 965, column: 7, scope: !6394)
!6407 = !DILocation(line: 969, column: 34, scope: !6394)
!6408 = !DILocation(line: 969, column: 3, scope: !6394)
!6409 = !DILocation(line: 970, column: 34, scope: !6394)
!6410 = !DILocation(line: 970, column: 3, scope: !6394)
!6411 = !DILocation(line: 972, column: 7, scope: !6402)
!6412 = !DILocation(line: 972, column: 7, scope: !6394)
!6413 = !DILocation(line: 974, column: 31, scope: !6401)
!6414 = !DILocation(line: 0, scope: !6401)
!6415 = !DILocation(line: 976, column: 11, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 976, column: 11)
!6417 = !DILocation(line: 976, column: 11, scope: !6401)
!6418 = !DILocation(line: 977, column: 2, scope: !6416)
!6419 = !DILocation(line: 979, column: 1, scope: !6394)
!6420 = distinct !DISubprogram(name: "VEC_gimple_heap_safe_push", scope: !391, file: !391, line: 34, type: !6421, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6424)
!6421 = !DISubroutineType(types: !6422)
!6422 = !{!6423, !3599, !800}
!6423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!6424 = !{!6425, !6426}
!6425 = !DILocalVariable(name: "vec_", arg: 1, scope: !6420, file: !391, line: 34, type: !3599)
!6426 = !DILocalVariable(name: "obj_", arg: 2, scope: !6420, file: !391, line: 34, type: !800)
!6427 = !DILocation(line: 0, scope: !6420)
!6428 = !DILocation(line: 34, column: 1, scope: !6420)
!6429 = distinct !DISubprogram(name: "VEC_gimple_heap_reserve", scope: !391, file: !391, line: 34, type: !6430, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6432)
!6430 = !DISubroutineType(types: !6431)
!6431 = !{!469, !3599, !469}
!6432 = !{!6433, !6434, !6435}
!6433 = !DILocalVariable(name: "vec_", arg: 1, scope: !6429, file: !391, line: 34, type: !3599)
!6434 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6429, file: !391, line: 34, type: !469)
!6435 = !DILocalVariable(name: "extend", scope: !6429, file: !391, line: 34, type: !469)
!6436 = !DILocation(line: 0, scope: !6429)
!6437 = !DILocation(line: 34, column: 1, scope: !6429)
!6438 = !DILocation(line: 34, column: 1, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6429, file: !391, line: 34, column: 1)
!6440 = distinct !DISubprogram(name: "VEC_gimple_base_quick_push", scope: !391, file: !391, line: 33, type: !6441, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6444)
!6441 = !DISubroutineType(types: !6442)
!6442 = !{!6423, !6443, !800}
!6443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!6444 = !{!6445, !6446, !6447}
!6445 = !DILocalVariable(name: "vec_", arg: 1, scope: !6440, file: !391, line: 33, type: !6443)
!6446 = !DILocalVariable(name: "obj_", arg: 2, scope: !6440, file: !391, line: 33, type: !800)
!6447 = !DILocalVariable(name: "slot_", scope: !6440, file: !391, line: 33, type: !6423)
!6448 = !DILocation(line: 0, scope: !6440)
!6449 = !DILocation(line: 33, column: 1, scope: !6440)
!6450 = distinct !DISubprogram(name: "VEC_gimple_base_space", scope: !391, file: !391, line: 33, type: !6451, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6453)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{!469, !6443, !469}
!6453 = !{!6454, !6455}
!6454 = !DILocalVariable(name: "vec_", arg: 1, scope: !6450, file: !391, line: 33, type: !6443)
!6455 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6450, file: !391, line: 33, type: !469)
!6456 = !DILocation(line: 0, scope: !6450)
!6457 = !DILocation(line: 33, column: 1, scope: !6450)
!6458 = distinct !DISubprogram(name: "VEC_gimple_base_iterate", scope: !391, file: !391, line: 33, type: !6459, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6463)
!6459 = !DISubroutineType(types: !6460)
!6460 = !{!469, !6461, !7, !6423}
!6461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6462, size: 64)
!6462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1340)
!6463 = !{!6464, !6465, !6466}
!6464 = !DILocalVariable(name: "vec_", arg: 1, scope: !6458, file: !391, line: 33, type: !6461)
!6465 = !DILocalVariable(name: "ix_", arg: 2, scope: !6458, file: !391, line: 33, type: !7)
!6466 = !DILocalVariable(name: "ptr", arg: 3, scope: !6458, file: !391, line: 33, type: !6423)
!6467 = !DILocation(line: 0, scope: !6458)
!6468 = !DILocation(line: 33, column: 1, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6458, file: !391, line: 33, column: 1)
!6470 = !DILocation(line: 33, column: 1, scope: !6458)
!6471 = !DILocation(line: 33, column: 1, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6469, file: !391, line: 33, column: 1)
!6473 = !DILocation(line: 33, column: 1, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6469, file: !391, line: 33, column: 1)
!6475 = !DILocation(line: 0, scope: !6469)
!6476 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !343, file: !343, line: 150, type: !6477, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6479)
!6477 = !DISubroutineType(types: !6478)
!6478 = !{!7, !5133}
!6479 = !{!6480}
!6480 = !DILocalVariable(name: "vec_", arg: 1, scope: !6476, file: !343, line: 150, type: !5133)
!6481 = !DILocation(line: 0, scope: !6476)
!6482 = !DILocation(line: 150, column: 1, scope: !6476)
!6483 = distinct !DISubprogram(name: "gsi_start_bb", scope: !391, file: !391, line: 4418, type: !4177, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6484)
!6484 = !{!6485, !6486, !6487}
!6485 = !DILocalVariable(name: "bb", arg: 1, scope: !6483, file: !391, line: 4418, type: !1253)
!6486 = !DILocalVariable(name: "i", scope: !6483, file: !391, line: 4420, type: !3617)
!6487 = !DILocalVariable(name: "seq", scope: !6483, file: !391, line: 4421, type: !790)
!6488 = !DILocation(line: 0, scope: !6483)
!6489 = !DILocation(line: 4420, column: 24, scope: !6483)
!6490 = !DILocation(line: 4423, column: 9, scope: !6483)
!6491 = !DILocation(line: 4424, column: 11, scope: !6483)
!6492 = !DILocation(line: 4424, column: 5, scope: !6483)
!6493 = !DILocation(line: 4424, column: 9, scope: !6483)
!6494 = !DILocation(line: 4425, column: 5, scope: !6483)
!6495 = !DILocation(line: 4425, column: 9, scope: !6483)
!6496 = !DILocation(line: 4426, column: 5, scope: !6483)
!6497 = !DILocation(line: 4426, column: 8, scope: !6483)
!6498 = !DILocation(line: 4429, column: 1, scope: !6483)
!6499 = distinct !DISubprogram(name: "bb_seq", scope: !391, file: !391, line: 237, type: !6500, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6502)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{!790, !4167}
!6502 = !{!6503}
!6503 = !DILocalVariable(name: "bb", arg: 1, scope: !6499, file: !391, line: 237, type: !4167)
!6504 = !DILocation(line: 0, scope: !6499)
!6505 = !DILocation(line: 239, column: 17, scope: !6499)
!6506 = !DILocation(line: 239, column: 23, scope: !6499)
!6507 = !DILocation(line: 239, column: 33, scope: !6499)
!6508 = !DILocation(line: 239, column: 43, scope: !6499)
!6509 = !DILocation(line: 239, column: 36, scope: !6499)
!6510 = !DILocation(line: 239, column: 10, scope: !6499)
!6511 = !DILocation(line: 239, column: 68, scope: !6499)
!6512 = !DILocation(line: 239, column: 3, scope: !6499)
!6513 = distinct !DISubprogram(name: "gimple_seq_first", scope: !391, file: !391, line: 159, type: !6514, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6519)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{!795, !6516}
!6516 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !477, line: 67, baseType: !6517)
!6517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6518, size: 64)
!6518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !792)
!6519 = !{!6520}
!6520 = !DILocalVariable(name: "s", arg: 1, scope: !6513, file: !391, line: 159, type: !6516)
!6521 = !DILocation(line: 0, scope: !6513)
!6522 = !DILocation(line: 161, column: 10, scope: !6513)
!6523 = !DILocation(line: 161, column: 17, scope: !6513)
!6524 = !DILocation(line: 161, column: 3, scope: !6513)
!6525 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !391, file: !391, line: 3100, type: !6526, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6529)
!6526 = !DISubroutineType(types: !6527)
!6527 = !{!6528, !800, !7}
!6528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!6529 = !{!6530, !6531}
!6530 = !DILocalVariable(name: "gs", arg: 1, scope: !6525, file: !391, line: 3100, type: !800)
!6531 = !DILocalVariable(name: "index", arg: 2, scope: !6525, file: !391, line: 3100, type: !7)
!6532 = !DILocation(line: 0, scope: !6525)
!6533 = !DILocation(line: 3103, column: 3, scope: !6525)
!6534 = !DILocation(line: 3104, column: 12, scope: !6525)
!6535 = !DILocation(line: 3104, column: 3, scope: !6525)
