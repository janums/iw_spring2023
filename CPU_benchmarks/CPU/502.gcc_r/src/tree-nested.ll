; ModuleID = 'tree-nested.bc'
source_filename = "tree-nested.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type opaque
%struct.diagnostic_info = type opaque
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type opaque
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.nesting_info = type { %struct.nesting_info*, %struct.nesting_info*, %struct.nesting_info*, %struct.pointer_map_t*, %struct.pointer_map_t*, %struct.bitmap_head_def*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i8, i8, i8 }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.walk_stmt_info = type { %struct.gimple_stmt_iterator, i8*, %struct.pointer_set_t*, i8, i8, i8, i8, %union.tree_node* }
%struct.pointer_set_t = type opaque
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i8*, i32, i32 }
%struct.gimple_omp_for_iter = type { i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.nesting_copy_body_data = type { %struct.copy_body_data, %struct.nesting_info* }
%struct.copy_body_data = type { %union.tree_node*, %union.tree_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.function*, %union.tree_node*, %struct.pointer_map_t*, %union.tree_node* (%union.tree_node*, %struct.copy_body_data*)*, %union.tree_node*, %union.gimple_statement_d*, i32, %struct.pointer_map_t*, i32, i8, i8, i8, i8, i32, void (%union.tree_node*)*, %struct.pointer_set_t*, %struct.basic_block_def*, %struct.VEC_gimple_heap*, %struct.pointer_map_t* }
%struct.VEC_gimple_heap = type { %struct.VEC_gimple_base }
%struct.tree_block = type { %struct.tree_common, i32, i32, %union.tree_node*, %struct.VEC_tree_gc*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@dump_flags = external dso_local global i32, align 4
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [18 x i8] c"\0A;; Function %s\0A\0A\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@nesting_info_bitmap_obstack = internal global %struct.bitmap_obstack zeroinitializer, align 8, !dbg !0
@trampoline_type = internal global %union.tree_node* null, align 8, !dbg !2291
@gt_ggc_r_gt_tree_nested_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%union.tree_node** @trampoline_type to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2277
@optimize = external dso_local local_unnamed_addr global i32, align 4
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.1 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.3 = private unnamed_addr constant [14 x i8] c"tree-nested.c\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"FRAME.\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"FRAME\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"__chain\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"Setting static-chain for %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"CHAIN\00", align 1
@implicit_built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@ptr_mode = external dso_local local_unnamed_addr global i32, align 4
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.9 = private unnamed_addr constant [14 x i8] c"__nl_goto_buf\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Guessing no static-chain for %s\0A\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"convert_all_function_calls iterations: %d\0A\0A\00", align 1
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@.str.12 = private unnamed_addr constant [7 x i8] c"__data\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"__builtin_trampoline\00", align 1
@warn_padded = external dso_local local_unnamed_addr global i32, align 4
@.str.14 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2297 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2310, metadata !DIExpression()), !dbg !2312
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2311, metadata !DIExpression()), !dbg !2312
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2313
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2314
  ret i32 %call, !dbg !2315
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2316 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2320
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2321
  ret i32 %call, !dbg !2322
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2323 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2377, metadata !DIExpression()), !dbg !2378
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2379
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2379
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2379
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2379
  %cmp = icmp uge i8* %0, %1, !dbg !2379
  %conv1 = zext i1 %cmp to i64, !dbg !2379
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2379
  %tobool = icmp eq i64 %expval, 0, !dbg !2379
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2379

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2379
  br label %cond.end, !dbg !2379

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2379
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2379
  %2 = load i8, i8* %0, align 1, !dbg !2379
  %conv3 = zext i8 %2 to i32, !dbg !2379
  br label %cond.end, !dbg !2379

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2379
  ret i32 %cond, !dbg !2380
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2381 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2383, metadata !DIExpression()), !dbg !2384
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2385
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2385
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2385
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2385
  %cmp = icmp uge i8* %0, %1, !dbg !2385
  %conv1 = zext i1 %cmp to i64, !dbg !2385
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2385
  %tobool = icmp eq i64 %expval, 0, !dbg !2385
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2385

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2385
  br label %cond.end, !dbg !2385

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2385
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2385
  %2 = load i8, i8* %0, align 1, !dbg !2385
  %conv3 = zext i8 %2 to i32, !dbg !2385
  br label %cond.end, !dbg !2385

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2385
  ret i32 %cond, !dbg !2386
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2387 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2388
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2388
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2388
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2388
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2388
  %cmp = icmp uge i8* %1, %2, !dbg !2388
  %conv1 = zext i1 %cmp to i64, !dbg !2388
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2388
  %tobool = icmp eq i64 %expval, 0, !dbg !2388
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2388

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2388
  br label %cond.end, !dbg !2388

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2388
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2388
  %3 = load i8, i8* %1, align 1, !dbg !2388
  %conv3 = zext i8 %3 to i32, !dbg !2388
  br label %cond.end, !dbg !2388

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2388
  ret i32 %cond, !dbg !2389
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2390 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2394, metadata !DIExpression()), !dbg !2395
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2396
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2397
  ret i32 %call, !dbg !2398
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2399 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2403, metadata !DIExpression()), !dbg !2405
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2404, metadata !DIExpression()), !dbg !2405
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2406
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2406
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2406
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2406
  %cmp = icmp uge i8* %0, %1, !dbg !2406
  %conv1 = zext i1 %cmp to i64, !dbg !2406
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2406
  %tobool = icmp eq i64 %expval, 0, !dbg !2406
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2406

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2406
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2406
  br label %cond.end, !dbg !2406

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2406
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2406
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2406
  store i8 %conv2, i8* %0, align 1, !dbg !2406
  %conv6 = and i32 %__c, 255, !dbg !2406
  br label %cond.end, !dbg !2406

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2406
  ret i32 %cond, !dbg !2407
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2408 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2410, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2411, metadata !DIExpression()), !dbg !2412
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2413
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2413
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2413
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2413
  %cmp = icmp uge i8* %0, %1, !dbg !2413
  %conv1 = zext i1 %cmp to i64, !dbg !2413
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2413
  %tobool = icmp eq i64 %expval, 0, !dbg !2413
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2413

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2413
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2413
  br label %cond.end, !dbg !2413

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2413
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2413
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2413
  store i8 %conv2, i8* %0, align 1, !dbg !2413
  %conv6 = and i32 %__c, 255, !dbg !2413
  br label %cond.end, !dbg !2413

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2413
  ret i32 %cond, !dbg !2414
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2415 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2417, metadata !DIExpression()), !dbg !2418
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2419
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2419
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2419
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2419
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2419
  %cmp = icmp uge i8* %1, %2, !dbg !2419
  %conv1 = zext i1 %cmp to i64, !dbg !2419
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2419
  %tobool = icmp eq i64 %expval, 0, !dbg !2419
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2419

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2419
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2419
  br label %cond.end, !dbg !2419

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2419
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2419
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2419
  store i8 %conv4, i8* %1, align 1, !dbg !2419
  %conv6 = and i32 %__c, 255, !dbg !2419
  br label %cond.end, !dbg !2419

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2419
  ret i32 %cond, !dbg !2420
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2421 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2427, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2428, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2429, metadata !DIExpression()), !dbg !2430
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2431
  ret i64 %call, !dbg !2432
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2433 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2435, metadata !DIExpression()), !dbg !2436
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2437
  %0 = load i32, i32* %_flags, align 8, !dbg !2437
  %and = lshr i32 %0, 4, !dbg !2437
  %and.lobit = and i32 %and, 1, !dbg !2437
  ret i32 %and.lobit, !dbg !2438
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2439 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2441, metadata !DIExpression()), !dbg !2442
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2443
  %0 = load i32, i32* %_flags, align 8, !dbg !2443
  %and = lshr i32 %0, 5, !dbg !2443
  %and.lobit = and i32 %and, 1, !dbg !2443
  ret i32 %and.lobit, !dbg !2444
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2445 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2448, metadata !DIExpression()), !dbg !2449
  %__c.off = add i32 %__c, 128, !dbg !2450
  %0 = icmp ult i32 %__c.off, 384, !dbg !2450
  br i1 %0, label %cond.true, label %cond.end, !dbg !2450

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2451
  %1 = load i32*, i32** %call, align 8, !dbg !2452
  %idxprom = sext i32 %__c to i64, !dbg !2453
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2453
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2453
  br label %cond.end, !dbg !2454

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2454
  ret i32 %cond, !dbg !2455
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2456 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2458, metadata !DIExpression()), !dbg !2459
  %__c.off = add i32 %__c, 128, !dbg !2460
  %0 = icmp ult i32 %__c.off, 384, !dbg !2460
  br i1 %0, label %cond.true, label %cond.end, !dbg !2460

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2461
  %1 = load i32*, i32** %call, align 8, !dbg !2462
  %idxprom = sext i32 %__c to i64, !dbg !2463
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2463
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2463
  br label %cond.end, !dbg !2464

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2464
  ret i32 %cond, !dbg !2465
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2466 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2471, metadata !DIExpression()), !dbg !2472
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2473
  %conv = trunc i64 %call to i32, !dbg !2474
  ret i32 %conv, !dbg !2475
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2476 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2480, metadata !DIExpression()), !dbg !2481
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2482
  ret i64 %call, !dbg !2483
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2484 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2489, metadata !DIExpression()), !dbg !2490
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2491
  ret i64 %call, !dbg !2492
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2493 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2499, metadata !DIExpression()), !dbg !2509
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2500, metadata !DIExpression()), !dbg !2509
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2501, metadata !DIExpression()), !dbg !2509
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2502, metadata !DIExpression()), !dbg !2509
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2503, metadata !DIExpression()), !dbg !2509
  call void @llvm.dbg.value(metadata i64 0, metadata !2504, metadata !DIExpression()), !dbg !2509
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2505, metadata !DIExpression()), !dbg !2509
  br label %while.cond, !dbg !2510

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2511
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2509
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2505, metadata !DIExpression()), !dbg !2509
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2504, metadata !DIExpression()), !dbg !2509
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2512
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2510

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2513
  %div = lshr i64 %add, 1, !dbg !2515
  call void @llvm.dbg.value(metadata i64 %div, metadata !2506, metadata !DIExpression()), !dbg !2509
  %mul = mul i64 %div, %__size, !dbg !2516
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2517
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2507, metadata !DIExpression()), !dbg !2509
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2518
  call void @llvm.dbg.value(metadata i32 %call, metadata !2508, metadata !DIExpression()), !dbg !2509
  %cmp1 = icmp slt i32 %call, 0, !dbg !2519
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2521

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2522
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2524

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2525
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2504, metadata !DIExpression()), !dbg !2509
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2509
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2509
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2505, metadata !DIExpression()), !dbg !2509
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2504, metadata !DIExpression()), !dbg !2509
  br label %while.cond, !dbg !2510, !llvm.loop !2526

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2509
  ret i8* %retval.0, !dbg !2528
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2529 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2535, metadata !DIExpression()), !dbg !2536
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2537
  ret double %call, !dbg !2538
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2539 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2548, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2549, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata i32 %base, metadata !2550, metadata !DIExpression()), !dbg !2551
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2552
  ret i64 %call, !dbg !2553
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2554 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2560, metadata !DIExpression()), !dbg !2563
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2561, metadata !DIExpression()), !dbg !2563
  call void @llvm.dbg.value(metadata i32 %base, metadata !2562, metadata !DIExpression()), !dbg !2563
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2564
  ret i64 %call, !dbg !2565
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2566 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2577, metadata !DIExpression()), !dbg !2580
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2578, metadata !DIExpression()), !dbg !2580
  call void @llvm.dbg.value(metadata i32 %base, metadata !2579, metadata !DIExpression()), !dbg !2580
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2581
  ret i64 %call, !dbg !2582
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2583 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2587, metadata !DIExpression()), !dbg !2590
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2588, metadata !DIExpression()), !dbg !2590
  call void @llvm.dbg.value(metadata i32 %base, metadata !2589, metadata !DIExpression()), !dbg !2590
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2591
  ret i64 %call, !dbg !2592
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2593 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2633, metadata !DIExpression()), !dbg !2635
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2634, metadata !DIExpression()), !dbg !2635
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2636
  ret i32 %call, !dbg !2637
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2638 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2640, metadata !DIExpression()), !dbg !2642
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2641, metadata !DIExpression()), !dbg !2642
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2643
  ret i32 %call, !dbg !2644
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2645 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2649, metadata !DIExpression()), !dbg !2651
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2650, metadata !DIExpression()), !dbg !2651
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2652
  ret i32 %call, !dbg !2653
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2654 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2658, metadata !DIExpression()), !dbg !2662
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2659, metadata !DIExpression()), !dbg !2662
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2660, metadata !DIExpression()), !dbg !2662
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2661, metadata !DIExpression()), !dbg !2662
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2663
  ret i32 %call, !dbg !2664
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2665 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2669, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2670, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2671, metadata !DIExpression()), !dbg !2672
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2671, metadata !DIExpression(DW_OP_deref)), !dbg !2672
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2673
  ret i32 %call, !dbg !2674
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2675 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2680, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2681, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2682, metadata !DIExpression()), !dbg !2683
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2682, metadata !DIExpression(DW_OP_deref)), !dbg !2683
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2684
  ret i32 %call, !dbg !2685
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2686 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2710, metadata !DIExpression()), !dbg !2712
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2711, metadata !DIExpression()), !dbg !2712
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2713
  ret i32 %call, !dbg !2714
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2715 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2717, metadata !DIExpression()), !dbg !2719
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2718, metadata !DIExpression()), !dbg !2719
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2720
  ret i32 %call, !dbg !2721
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2722 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2726, metadata !DIExpression()), !dbg !2728
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2727, metadata !DIExpression()), !dbg !2728
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2729
  ret i32 %call, !dbg !2730
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2731 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2735, metadata !DIExpression()), !dbg !2739
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2736, metadata !DIExpression()), !dbg !2739
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2737, metadata !DIExpression()), !dbg !2739
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2738, metadata !DIExpression()), !dbg !2739
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2740
  ret i32 %call, !dbg !2741
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_addr(%union.tree_node* %exp, %union.tree_node* %context) local_unnamed_addr #5 !dbg !2742 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !2746, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.value(metadata %union.tree_node* %context, metadata !2747, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !2748, metadata !DIExpression()), !dbg !2751
  br label %while.cond, !dbg !2752

while.cond:                                       ; preds = %while.body, %entry
  %base.0 = phi %union.tree_node* [ %exp, %entry ], [ %0, %while.body ], !dbg !2751
  call void @llvm.dbg.value(metadata %union.tree_node* %base.0, metadata !2748, metadata !DIExpression()), !dbg !2751
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %base.0) #7, !dbg !2753
  %tobool = icmp eq i8 %call, 0, !dbg !2752
  br i1 %tobool, label %while.end, label %while.body, !dbg !2752

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %base.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2754
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !2754
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !2748, metadata !DIExpression()), !dbg !2751
  br label %while.cond, !dbg !2752, !llvm.loop !2755

while.end:                                        ; preds = %while.cond
  %base.0.lcssa = phi %union.tree_node* [ %base.0, %while.cond ], !dbg !2751
  call void @llvm.dbg.value(metadata %union.tree_node* %base.0.lcssa, metadata !2748, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.value(metadata %union.tree_node* %base.0.lcssa, metadata !2748, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.value(metadata %union.tree_node* %base.0.lcssa, metadata !2748, metadata !DIExpression()), !dbg !2751
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %base.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2756
  %bf.load = load i64, i64* %1, align 8, !dbg !2756
  %bf.cast = and i64 %bf.load, 65535, !dbg !2756
  %arrayidx4 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !2756
  %2 = load i32, i32* %arrayidx4, align 4, !dbg !2756
  %cmp = icmp eq i32 %2, 3, !dbg !2756
  br i1 %cmp, label %if.then, label %if.end, !dbg !2758

if.then:                                          ; preds = %while.end
  %bf.set = or i64 %bf.load, 262144, !dbg !2759
  store i64 %bf.set, i64* %1, align 8, !dbg !2759
  br label %if.end, !dbg !2760

if.end:                                           ; preds = %if.then, %while.end
  %3 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !2761
  store %union.tree_node* %context, %union.tree_node** @current_function_decl, align 8, !dbg !2762
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2763
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2763
  %call8 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %4) #6, !dbg !2763
  %call9 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %call8, %union.tree_node* %exp) #6, !dbg !2763
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !2750, metadata !DIExpression()), !dbg !2751
  store i64 %3, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !2764
  ret %union.tree_node* %call9, !dbg !2765
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !2766 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2773, metadata !DIExpression()), !dbg !2774
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2775
  %bf.load = load i64, i64* %0, align 8, !dbg !2775
  %1 = trunc i64 %bf.load to i16, !dbg !2775
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !2776

sw.default:                                       ; preds = %entry
  br label %return, !dbg !2777

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !2779
  ret i8 %retval.0, !dbg !2780
}

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @insert_field_into_struct(%union.tree_node* %type, %union.tree_node* %field) local_unnamed_addr #5 !dbg !2781 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !2785, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata %union.tree_node* %field, metadata !2786, metadata !DIExpression()), !dbg !2788
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2789
  store %union.tree_node* %type, %union.tree_node** %context, align 8, !dbg !2790
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2791
  %0 = bitcast i32* %values to %union.tree_node**, !dbg !2791
  call void @llvm.dbg.value(metadata %union.tree_node** %0, metadata !2787, metadata !DIExpression()), !dbg !2788
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2793
  br label %for.cond, !dbg !2796

for.cond:                                         ; preds = %for.inc, %entry
  %p.0 = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.inc ], !dbg !2797
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0, metadata !2787, metadata !DIExpression()), !dbg !2788
  %1 = load %union.tree_node*, %union.tree_node** %p.0, align 8, !dbg !2798
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !2799
  %2 = ptrtoint %union.tree_node* %1 to i64, !dbg !2799
  br i1 %tobool, label %for.end, label %for.body, !dbg !2799

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %align, align 8, !dbg !2793
  %align3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2800
  %4 = load i32, i32* %align3, align 8, !dbg !2800
  %cmp = icmp ult i32 %3, %4, !dbg !2801
  br i1 %cmp, label %for.inc, label %for.end, !dbg !2802

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2803
  call void @llvm.dbg.value(metadata %union.tree_node** %chain, metadata !2787, metadata !DIExpression()), !dbg !2788
  br label %for.cond, !dbg !2804, !llvm.loop !2805

for.end:                                          ; preds = %for.body, %for.cond
  %p.0.lcssa = phi %union.tree_node** [ %p.0, %for.body ], [ %p.0, %for.cond ], !dbg !2797
  %.lcssa = phi i64 [ %2, %for.body ], [ %2, %for.cond ], !dbg !2799
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa, metadata !2787, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa, metadata !2787, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa, metadata !2787, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa, metadata !2787, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa, metadata !2787, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0.lcssa, metadata !2787, metadata !DIExpression()), !dbg !2788
  %chain5 = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2807
  %5 = bitcast %union.tree_node** %chain5 to i64*, !dbg !2808
  store i64 %.lcssa, i64* %5, align 8, !dbg !2808
  store %union.tree_node* %field, %union.tree_node** %p.0.lcssa, align 8, !dbg !2809
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2810
  %7 = load i32, i32* %6, align 8, !dbg !2810
  %8 = load i32, i32* %align, align 8, !dbg !2812
  %cmp10 = icmp ult i32 %7, %8, !dbg !2813
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !2814

if.then11:                                        ; preds = %for.end
  store i32 %8, i32* %6, align 8, !dbg !2815
  br label %if.end16, !dbg !2816

if.end16:                                         ; preds = %if.then11, %for.end
  ret void, !dbg !2817
}

; Function Attrs: nounwind uwtable
define dso_local void @lower_nested_functions(%union.tree_node* %fndecl) local_unnamed_addr #5 !dbg !2818 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !2820, metadata !DIExpression()), !dbg !2823
  %call = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %fndecl) #6, !dbg !2824
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call, metadata !2821, metadata !DIExpression()), !dbg !2823
  %nested = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call, i64 0, i32 6, !dbg !2825
  %0 = load %struct.cgraph_node*, %struct.cgraph_node** %nested, align 8, !dbg !2825
  %tobool = icmp eq %struct.cgraph_node* %0, null, !dbg !2827
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !2828

if.end:                                           ; preds = %entry
  tail call fastcc void @gimplify_all_functions(%struct.cgraph_node* %call) #7, !dbg !2829
  %call1 = tail call %struct._IO_FILE* @dump_begin(i32 6, i32* nonnull @dump_flags) #6, !dbg !2830
  store %struct._IO_FILE* %call1, %struct._IO_FILE** @dump_file, align 8, !dbg !2831
  %tobool2 = icmp eq %struct._IO_FILE* %call1, null, !dbg !2832
  br i1 %tobool2, label %if.end6, label %if.then3, !dbg !2834

if.then3:                                         ; preds = %if.end
  %1 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !2835
  %call4 = tail call i8* %1(%union.tree_node* %fndecl, i32 2) #6, !dbg !2836
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* %call4) #6, !dbg !2837
  br label %if.end6, !dbg !2837

if.end6:                                          ; preds = %if.end, %if.then3
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* nonnull @nesting_info_bitmap_obstack) #6, !dbg !2838
  %call7 = tail call fastcc %struct.nesting_info* @create_nesting_tree(%struct.cgraph_node* %call) #7, !dbg !2839
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call7, metadata !2822, metadata !DIExpression()), !dbg !2823
  tail call fastcc void @walk_all_functions(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_nonlocal_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, %struct.nesting_info* %call7) #7, !dbg !2840
  tail call fastcc void @walk_all_functions(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_local_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, %struct.nesting_info* %call7) #7, !dbg !2841
  tail call fastcc void @walk_all_functions(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_nl_goto_reference, %union.tree_node* (%union.tree_node**, i32*, i8*)* null, %struct.nesting_info* %call7) #7, !dbg !2842
  tail call fastcc void @walk_all_functions(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_nl_goto_receiver, %union.tree_node* (%union.tree_node**, i32*, i8*)* null, %struct.nesting_info* %call7) #7, !dbg !2843
  tail call fastcc void @convert_all_function_calls(%struct.nesting_info* %call7) #7, !dbg !2844
  tail call fastcc void @finalize_nesting_tree(%struct.nesting_info* %call7) #7, !dbg !2845
  tail call fastcc void @unnest_nesting_tree(%struct.nesting_info* %call7) #7, !dbg !2846
  tail call fastcc void @free_nesting_tree(%struct.nesting_info* %call7) #7, !dbg !2847
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* nonnull @nesting_info_bitmap_obstack) #6, !dbg !2848
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2849
  %tobool8 = icmp eq %struct._IO_FILE* %2, null, !dbg !2849
  br i1 %tobool8, label %cleanup.cont, label %if.then9, !dbg !2851

if.then9:                                         ; preds = %if.end6
  tail call void @dump_end(i32 6, %struct._IO_FILE* nonnull %2) #6, !dbg !2852
  store %struct._IO_FILE* null, %struct._IO_FILE** @dump_file, align 8, !dbg !2854
  br label %cleanup.cont, !dbg !2855

cleanup.cont:                                     ; preds = %if.end6, %entry, %if.then9
  ret void, !dbg !2856
}

declare dso_local %struct.cgraph_node* @cgraph_node(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gimplify_all_functions(%struct.cgraph_node* %root) unnamed_addr #5 !dbg !2857 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %root, metadata !2859, metadata !DIExpression()), !dbg !2861
  %decl = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %root, i64 0, i32 0, !dbg !2862
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2862
  %call = tail call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %0) #6, !dbg !2864
  %tobool = icmp eq %struct.gimple_seq_d* %call, null, !dbg !2864
  br i1 %tobool, label %if.then, label %if.end, !dbg !2865

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2866
  tail call void @gimplify_function_tree(%union.tree_node* %1) #6, !dbg !2867
  br label %if.end, !dbg !2867

if.end:                                           ; preds = %entry, %if.then
  %nested = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %root, i64 0, i32 6, !dbg !2868
  br label %for.cond, !dbg !2870

for.cond:                                         ; preds = %for.body, %if.end
  %iter.0.in = phi %struct.cgraph_node** [ %nested, %if.end ], [ %next_nested, %for.body ]
  %iter.0 = load %struct.cgraph_node*, %struct.cgraph_node** %iter.0.in, align 8, !dbg !2871
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %iter.0, metadata !2860, metadata !DIExpression()), !dbg !2861
  %tobool2 = icmp eq %struct.cgraph_node* %iter.0, null, !dbg !2872
  br i1 %tobool2, label %for.end, label %for.body, !dbg !2872

for.body:                                         ; preds = %for.cond
  tail call fastcc void @gimplify_all_functions(%struct.cgraph_node* nonnull %iter.0) #7, !dbg !2873
  %next_nested = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %iter.0, i64 0, i32 7, !dbg !2875
  br label %for.cond, !dbg !2876, !llvm.loop !2877

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2879
}

declare dso_local %struct._IO_FILE* @dump_begin(i32, i32*) local_unnamed_addr #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_initialize(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.nesting_info* @create_nesting_tree(%struct.cgraph_node* %cgn) unnamed_addr #5 !dbg !2880 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %cgn, metadata !2884, metadata !DIExpression()), !dbg !2890
  %call = tail call i8* @xcalloc(i64 1, i64 120) #6, !dbg !2891
  call void @llvm.dbg.value(metadata %struct.nesting_info* %11, metadata !2885, metadata !DIExpression()), !dbg !2890
  %call1 = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !2892
  %field_map = getelementptr inbounds i8, i8* %call, i64 24, !dbg !2893
  %0 = bitcast i8* %field_map to %struct.pointer_map_t**, !dbg !2893
  store %struct.pointer_map_t* %call1, %struct.pointer_map_t** %0, align 8, !dbg !2894
  %call2 = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !2895
  %var_map = getelementptr inbounds i8, i8* %call, i64 32, !dbg !2896
  %1 = bitcast i8* %var_map to %struct.pointer_map_t**, !dbg !2896
  store %struct.pointer_map_t* %call2, %struct.pointer_map_t** %1, align 8, !dbg !2897
  %call3 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @nesting_info_bitmap_obstack) #6, !dbg !2898
  %suppress_expansion = getelementptr inbounds i8, i8* %call, i64 40, !dbg !2899
  %2 = bitcast i8* %suppress_expansion to %struct.bitmap_head_def**, !dbg !2899
  store %struct.bitmap_head_def* %call3, %struct.bitmap_head_def** %2, align 8, !dbg !2900
  %3 = bitcast %struct.cgraph_node* %cgn to i64*, !dbg !2901
  %4 = load i64, i64* %3, align 8, !dbg !2901
  %context = getelementptr inbounds i8, i8* %call, i64 48, !dbg !2902
  %5 = bitcast i8* %context to i64*, !dbg !2903
  store i64 %4, i64* %5, align 8, !dbg !2903
  %nested = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %cgn, i64 0, i32 6, !dbg !2904
  %inner = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2905
  %6 = bitcast i8* %inner to i64*, !dbg !2905
  %7 = bitcast i8* %inner to %struct.nesting_info**, !dbg !2905
  br label %for.cond, !dbg !2906

for.cond:                                         ; preds = %for.body, %entry
  %cgn.addr.0.in = phi %struct.cgraph_node** [ %nested, %entry ], [ %next_nested, %for.body ]
  %cgn.addr.0 = load %struct.cgraph_node*, %struct.cgraph_node** %cgn.addr.0.in, align 8, !dbg !2907
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %cgn.addr.0, metadata !2884, metadata !DIExpression()), !dbg !2890
  %tobool = icmp eq %struct.cgraph_node* %cgn.addr.0, null, !dbg !2908
  br i1 %tobool, label %for.end, label %for.body, !dbg !2908

for.body:                                         ; preds = %for.cond
  %call4 = tail call fastcc %struct.nesting_info* @create_nesting_tree(%struct.cgraph_node* nonnull %cgn.addr.0) #7, !dbg !2909
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call4, metadata !2886, metadata !DIExpression()), !dbg !2905
  %8 = bitcast %struct.nesting_info* %call4 to i8**, !dbg !2910
  store i8* %call, i8** %8, align 8, !dbg !2910
  %9 = load i64, i64* %6, align 8, !dbg !2911
  %next = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %call4, i64 0, i32 2, !dbg !2912
  %10 = bitcast %struct.nesting_info** %next to i64*, !dbg !2913
  store i64 %9, i64* %10, align 8, !dbg !2913
  store %struct.nesting_info* %call4, %struct.nesting_info** %7, align 8, !dbg !2914
  %next_nested = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %cgn.addr.0, i64 0, i32 7, !dbg !2915
  br label %for.cond, !dbg !2916, !llvm.loop !2917

for.end:                                          ; preds = %for.cond
  %11 = bitcast i8* %call to %struct.nesting_info*, !dbg !2891
  %12 = bitcast i8* %context to %union.tree_node**, !dbg !2919
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !2919
  %call8 = tail call fastcc zeroext i8 @check_for_nested_with_variably_modified(%union.tree_node* %13, %union.tree_node* %13) #7, !dbg !2921
  %tobool9 = icmp eq i8 %call8, 0, !dbg !2921
  br i1 %tobool9, label %if.end, label %if.then, !dbg !2922

if.then:                                          ; preds = %for.end
  %14 = bitcast i8* %context to %struct.tree_function_decl**, !dbg !2923
  %15 = load %struct.tree_function_decl*, %struct.tree_function_decl** %14, align 8, !dbg !2923
  %uninlinable = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %15, i64 0, i32 5, !dbg !2923
  %bf.load = load i32, i32* %uninlinable, align 8, !dbg !2924
  %bf.set = or i32 %bf.load, 32768, !dbg !2924
  store i32 %bf.set, i32* %uninlinable, align 8, !dbg !2924
  br label %if.end, !dbg !2923

if.end:                                           ; preds = %for.end, %if.then
  ret %struct.nesting_info* %11, !dbg !2925
}

; Function Attrs: nounwind uwtable
define internal fastcc void @walk_all_functions(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* %callback_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, %struct.nesting_info* %root) unnamed_addr #5 !dbg !2926 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* %callback_stmt, metadata !2940, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.value(metadata %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, metadata !2941, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root, metadata !2942, metadata !DIExpression()), !dbg !2944
  %call = tail call fastcc %struct.nesting_info* @iter_nestinfo_start(%struct.nesting_info* %root) #7, !dbg !2945
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call, metadata !2943, metadata !DIExpression()), !dbg !2944
  br label %for.cond, !dbg !2945

for.cond:                                         ; preds = %for.body, %entry
  %n.0 = phi %struct.nesting_info* [ %call, %entry ], [ %call1, %for.body ], !dbg !2947
  call void @llvm.dbg.value(metadata %struct.nesting_info* %n.0, metadata !2943, metadata !DIExpression()), !dbg !2944
  %tobool = icmp eq %struct.nesting_info* %n.0, null, !dbg !2945
  br i1 %tobool, label %for.end, label %for.body, !dbg !2945

for.body:                                         ; preds = %for.cond
  tail call fastcc void @walk_function(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* %callback_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, %struct.nesting_info* nonnull %n.0) #7, !dbg !2948
  %call1 = tail call fastcc %struct.nesting_info* @iter_nestinfo_next(%struct.nesting_info* nonnull %n.0) #7, !dbg !2950
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call1, metadata !2943, metadata !DIExpression()), !dbg !2944
  br label %for.cond, !dbg !2950, !llvm.loop !2951

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2953
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @convert_nonlocal_reference_stmt(%struct.gimple_stmt_iterator* %gsi, i8* %handled_ops_p, %struct.walk_stmt_info* %wi) #5 !dbg !2954 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2956, metadata !DIExpression()), !dbg !2968
  call void @llvm.dbg.value(metadata i8* %handled_ops_p, metadata !2957, metadata !DIExpression()), !dbg !2968
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !2958, metadata !DIExpression()), !dbg !2968
  %info1 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !2969
  %0 = bitcast i8** %info1 to %struct.nesting_info**, !dbg !2969
  %1 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !2969
  call void @llvm.dbg.value(metadata %struct.nesting_info* %1, metadata !2959, metadata !DIExpression()), !dbg !2968
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !2970
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !2962, metadata !DIExpression()), !dbg !2968
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !2971
  switch i32 %call2, label %sw.default [
    i32 3, label %sw.bb
    i32 26, label %sw.bb4
    i32 27, label %sw.bb4
    i32 23, label %sw.bb24
    i32 30, label %sw.bb30
    i32 32, label %sw.bb36
    i32 29, label %sw.bb42
    i32 24, label %sw.bb42
    i32 25, label %sw.bb42
    i32 10, label %sw.bb44
    i32 1, label %sw.bb51
  ], !dbg !2972

sw.bb:                                            ; preds = %entry
  %call3 = tail call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %call) #7, !dbg !2973
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2973
  %bf.load = load i64, i64* %2, align 8, !dbg !2973
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2975
  %cmp = icmp eq i64 %bf.cast1, 30, !dbg !2975
  br i1 %cmp, label %sw.epilog, label %if.then, !dbg !2976

if.then:                                          ; preds = %sw.bb
  %val_only = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 3, !dbg !2977
  store i8 1, i8* %val_only, align 8, !dbg !2979
  %is_lhs = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 4, !dbg !2980
  store i8 0, i8* %is_lhs, align 1, !dbg !2981
  store i8 1, i8* %handled_ops_p, align 1, !dbg !2982
  br label %cleanup, !dbg !2983

sw.bb4:                                           ; preds = %entry, %entry
  %suppress_expansion = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 5, !dbg !2984
  %3 = bitcast %struct.bitmap_head_def** %suppress_expansion to i64*, !dbg !2984
  %4 = load i64, i64* %3, align 8, !dbg !2984
  %call5 = tail call fastcc %union.tree_node** @gimple_omp_taskreg_clauses_ptr(%union.gimple_statement_d* %call) #7, !dbg !2985
  %call6 = tail call fastcc zeroext i8 @convert_nonlocal_omp_clauses(%union.tree_node** %call5, %struct.walk_stmt_info* %wi) #7, !dbg !2986
  %tobool = icmp eq i8 %call6, 0, !dbg !2986
  br i1 %tobool, label %if.end12, label %if.then7, !dbg !2987

if.then7:                                         ; preds = %sw.bb4
  %call8 = tail call fastcc %union.tree_node* @get_chain_decl(%struct.nesting_info* %1) #7, !dbg !2988
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !2967, metadata !DIExpression()), !dbg !2989
  %call9 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !2990
  %call10 = tail call %union.tree_node* @build_omp_clause(i32 %call9, i32 3) #6, !dbg !2991
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !2963, metadata !DIExpression()), !dbg !2989
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2992
  %arrayidx = bitcast i40* %ops to %union.tree_node**, !dbg !2992
  store %union.tree_node* %call8, %union.tree_node** %arrayidx, align 8, !dbg !2993
  %call11 = tail call fastcc %union.tree_node* @gimple_omp_taskreg_clauses(%union.gimple_statement_d* %call) #7, !dbg !2994
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2995
  store %union.tree_node* %call11, %union.tree_node** %chain, align 8, !dbg !2996
  tail call fastcc void @gimple_omp_taskreg_set_clauses(%union.gimple_statement_d* %call, %union.tree_node* %call10) #7, !dbg !2997
  br label %if.end12, !dbg !2998

if.end12:                                         ; preds = %sw.bb4, %if.then7
  %new_local_var_chain = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 7, !dbg !2999
  %5 = bitcast %union.tree_node** %new_local_var_chain to i64*, !dbg !2999
  %6 = load i64, i64* %5, align 8, !dbg !2999
  store %union.tree_node* null, %union.tree_node** %new_local_var_chain, align 8, !dbg !3000
  %call14 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !3001
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_nonlocal_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %call14) #7, !dbg !3002
  %7 = load %union.tree_node*, %union.tree_node** %new_local_var_chain, align 8, !dbg !3003
  %tobool16 = icmp eq %union.tree_node* %7, null, !dbg !3005
  br i1 %tobool16, label %if.end21, label %if.then17, !dbg !3006

if.then17:                                        ; preds = %if.end12
  %call19 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !3007
  %call20 = tail call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call19) #7, !dbg !3008
  tail call void @declare_vars(%union.tree_node* nonnull %7, %union.gimple_statement_d* %call20, i8 zeroext 0) #6, !dbg !3009
  br label %if.end21, !dbg !3009

if.end21:                                         ; preds = %if.end12, %if.then17
  store i64 %6, i64* %5, align 8, !dbg !3010
  store i64 %4, i64* %3, align 8, !dbg !3011
  br label %sw.epilog, !dbg !3012

sw.bb24:                                          ; preds = %entry
  %suppress_expansion25 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 5, !dbg !3013
  %8 = bitcast %struct.bitmap_head_def** %suppress_expansion25 to i64*, !dbg !3013
  %9 = load i64, i64* %8, align 8, !dbg !3013
  %call26 = tail call fastcc %union.tree_node** @gimple_omp_for_clauses_ptr(%union.gimple_statement_d* %call) #7, !dbg !3014
  %call27 = tail call fastcc zeroext i8 @convert_nonlocal_omp_clauses(%union.tree_node** %call26, %struct.walk_stmt_info* %wi) #7, !dbg !3015
  tail call fastcc void @walk_gimple_omp_for(%union.gimple_statement_d* %call, %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_nonlocal_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, %struct.nesting_info* %1) #7, !dbg !3016
  %call28 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !3017
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_nonlocal_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %call28) #7, !dbg !3018
  store i64 %9, i64* %8, align 8, !dbg !3019
  br label %sw.epilog, !dbg !3020

sw.bb30:                                          ; preds = %entry
  %suppress_expansion31 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 5, !dbg !3021
  %10 = bitcast %struct.bitmap_head_def** %suppress_expansion31 to i64*, !dbg !3021
  %11 = load i64, i64* %10, align 8, !dbg !3021
  %call32 = tail call fastcc %union.tree_node** @gimple_omp_sections_clauses_ptr(%union.gimple_statement_d* %call) #7, !dbg !3022
  %call33 = tail call fastcc zeroext i8 @convert_nonlocal_omp_clauses(%union.tree_node** %call32, %struct.walk_stmt_info* %wi) #7, !dbg !3023
  %call34 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !3024
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_nonlocal_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %call34) #7, !dbg !3025
  store i64 %11, i64* %10, align 8, !dbg !3026
  br label %sw.epilog, !dbg !3027

sw.bb36:                                          ; preds = %entry
  %suppress_expansion37 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 5, !dbg !3028
  %12 = bitcast %struct.bitmap_head_def** %suppress_expansion37 to i64*, !dbg !3028
  %13 = load i64, i64* %12, align 8, !dbg !3028
  %call38 = tail call fastcc %union.tree_node** @gimple_omp_single_clauses_ptr(%union.gimple_statement_d* %call) #7, !dbg !3029
  %call39 = tail call fastcc zeroext i8 @convert_nonlocal_omp_clauses(%union.tree_node** %call38, %struct.walk_stmt_info* %wi) #7, !dbg !3030
  %call40 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !3031
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_nonlocal_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %call40) #7, !dbg !3032
  store i64 %13, i64* %12, align 8, !dbg !3033
  br label %sw.epilog, !dbg !3034

sw.bb42:                                          ; preds = %entry, %entry, %entry
  %call43 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !3035
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_nonlocal_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %call43) #7, !dbg !3036
  br label %sw.epilog, !dbg !3037

sw.bb44:                                          ; preds = %entry
  %14 = load i32, i32* @optimize, align 4, !dbg !3038
  %tobool45 = icmp eq i32 %14, 0, !dbg !3038
  br i1 %tobool45, label %land.lhs.true, label %if.end50, !dbg !3040

land.lhs.true:                                    ; preds = %sw.bb44
  %call46 = tail call fastcc %union.tree_node* @gimple_bind_block(%union.gimple_statement_d* %call) #7, !dbg !3041
  %tobool47 = icmp eq %union.tree_node* %call46, null, !dbg !3041
  br i1 %tobool47, label %if.end50, label %if.then48, !dbg !3042

if.then48:                                        ; preds = %land.lhs.true
  %call49 = tail call fastcc %union.tree_node* @gimple_bind_block(%union.gimple_statement_d* %call) #7, !dbg !3043
  tail call fastcc void @note_nonlocal_block_vlas(%struct.nesting_info* %1, %union.tree_node* %call49) #7, !dbg !3044
  br label %if.end50, !dbg !3044

if.end50:                                         ; preds = %land.lhs.true, %sw.bb44, %if.then48
  store i8 0, i8* %handled_ops_p, align 1, !dbg !3045
  br label %cleanup, !dbg !3046

sw.bb51:                                          ; preds = %entry
  %val_only52 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 3, !dbg !3047
  store i8 1, i8* %val_only52, align 8, !dbg !3048
  %is_lhs53 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 4, !dbg !3049
  store i8 0, i8* %is_lhs53, align 1, !dbg !3050
  store i8 0, i8* %handled_ops_p, align 1, !dbg !3051
  br label %cleanup, !dbg !3052

sw.default:                                       ; preds = %entry
  store i8 0, i8* %handled_ops_p, align 1, !dbg !3053
  br label %cleanup, !dbg !3054

sw.epilog:                                        ; preds = %sw.bb, %sw.bb42, %sw.bb36, %sw.bb30, %sw.bb24, %if.end21
  store i8 1, i8* %handled_ops_p, align 1, !dbg !3055
  br label %cleanup, !dbg !3056

cleanup:                                          ; preds = %sw.epilog, %sw.default, %sw.bb51, %if.end50, %if.then
  ret %union.tree_node* null, !dbg !3057
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @convert_nonlocal_reference_op(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !3058 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !3060, metadata !DIExpression()), !dbg !3080
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !3061, metadata !DIExpression()), !dbg !3080
  call void @llvm.dbg.value(metadata i8* %data, metadata !3062, metadata !DIExpression()), !dbg !3080
  call void @llvm.dbg.value(metadata i8* %data, metadata !3063, metadata !DIExpression()), !dbg !3080
  %info1 = getelementptr inbounds i8, i8* %data, i64 24, !dbg !3081
  %0 = bitcast i8* %info1 to %struct.nesting_info**, !dbg !3081
  %1 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !3081
  call void @llvm.dbg.value(metadata %struct.nesting_info* %1, metadata !3064, metadata !DIExpression()), !dbg !3080
  %2 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !3082
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3066, metadata !DIExpression()), !dbg !3080
  store i32 0, i32* %walk_subtrees, align 4, !dbg !3083
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3084
  %bf.load = load i64, i64* %3, align 8, !dbg !3084
  %4 = trunc i64 %bf.load to i16, !dbg !3084
  switch i16 %4, label %sw.default [
    i16 32, label %sw.bb
    i16 34, label %sw.bb11
    i16 30, label %sw.bb44
    i16 121, label %sw.bb53
    i16 43, label %sw.bb71
    i16 44, label %sw.bb71
    i16 41, label %sw.bb71
    i16 45, label %sw.bb71
    i16 46, label %sw.bb71
    i16 42, label %sw.bb71
    i16 118, label %sw.bb138
  ], !dbg !3085

sw.bb:                                            ; preds = %entry
  %bf.cast55 = and i64 %bf.load, 67108864, !dbg !3086
  %tobool = icmp eq i64 %bf.cast55, 0, !dbg !3086
  br i1 %tobool, label %lor.lhs.false, label %sw.epilog, !dbg !3088

lor.lhs.false:                                    ; preds = %sw.bb
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3089
  %5 = bitcast i40* %decl_flag_1 to i64*, !dbg !3089
  %bf.load6 = load i64, i64* %5, align 8, !dbg !3089
  %bf.cast96 = and i64 %bf.load6, 33554432, !dbg !3089
  %tobool10 = icmp eq i64 %bf.cast96, 0, !dbg !3089
  br i1 %tobool10, label %sw.bb11, label %sw.epilog, !dbg !3090

sw.bb11:                                          ; preds = %lor.lhs.false, %entry
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %2) #6, !dbg !3091
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 6, !dbg !3092
  %6 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !3092
  %cmp = icmp eq %union.tree_node* %call, %6, !dbg !3093
  br i1 %cmp, label %sw.epilog, label %if.then12, !dbg !3094

if.then12:                                        ; preds = %sw.bb11
  %7 = getelementptr inbounds i8, i8* %data, i64 42, !dbg !3095
  store i8 1, i8* %7, align 2, !dbg !3096
  %call13 = tail call fastcc %union.tree_node* @get_nonlocal_debug_decl(%struct.nesting_info* %1, %union.tree_node* %2) #7, !dbg !3097
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !3067, metadata !DIExpression()), !dbg !3098
  %suppress_expansion = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 5, !dbg !3099
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %suppress_expansion, align 8, !dbg !3099
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3100
  %9 = load i32, i32* %uid, align 4, !dbg !3100
  %call14 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %9) #6, !dbg !3101
  %tobool15 = icmp eq i32 %call14, 0, !dbg !3101
  br i1 %tobool15, label %if.then16, label %if.end32, !dbg !3102

if.then16:                                        ; preds = %if.then12
  %call17 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %2) #6, !dbg !3103
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !3071, metadata !DIExpression()), !dbg !3104
  br label %for.cond, !dbg !3105

for.cond:                                         ; preds = %for.inc, %if.then16
  %.pn = phi %struct.nesting_info* [ %1, %if.then16 ], [ %i.0, %for.inc ]
  %i.0.in = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %.pn, i64 0, i32 0, !dbg !3107
  %i.0 = load %struct.nesting_info*, %struct.nesting_info** %i.0.in, align 8, !dbg !3107
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.0, metadata !3074, metadata !DIExpression()), !dbg !3104
  %context18 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i.0, i64 0, i32 6, !dbg !3108
  %10 = load %union.tree_node*, %union.tree_node** %context18, align 8, !dbg !3108
  %cmp19 = icmp eq %union.tree_node* %10, %call17, !dbg !3110
  br i1 %cmp19, label %for.end, label %for.inc, !dbg !3111

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !3112, !llvm.loop !3113

for.end:                                          ; preds = %for.cond
  %i.0.lcssa = phi %struct.nesting_info* [ %i.0, %for.cond ], !dbg !3107
  %call21 = tail call fastcc %union.tree_node* @lookup_field_for_decl(%struct.nesting_info* %i.0.lcssa, %union.tree_node* %2, i32 1) #7, !dbg !3115
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !3067, metadata !DIExpression()), !dbg !3098
  %gsi = bitcast i8* %data to %struct.gimple_stmt_iterator*, !dbg !3116
  %call22 = tail call fastcc %union.tree_node* @get_frame_field(%struct.nesting_info* %1, %union.tree_node* %call17, %union.tree_node* %call21, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !3117
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !3067, metadata !DIExpression()), !dbg !3098
  %call23 = tail call fastcc zeroext i8 @use_pointer_in_frame(%union.tree_node* %2) #7, !dbg !3118
  %tobool24 = icmp eq i8 %call23, 0, !dbg !3118
  br i1 %tobool24, label %if.end32, label %if.then25, !dbg !3120

if.then25:                                        ; preds = %for.end
  %call27 = tail call fastcc %union.tree_node* @init_tmp_var(%struct.nesting_info* %1, %union.tree_node* %call22, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !3121
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !3067, metadata !DIExpression()), !dbg !3098
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3123
  %11 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !3123
  %12 = load %struct.tree_common*, %struct.tree_common** %11, align 8, !dbg !3123
  %type29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %12, i64 0, i32 2, !dbg !3123
  %13 = load %union.tree_node*, %union.tree_node** %type29, align 8, !dbg !3123
  %call30 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %13, %union.tree_node* %call27) #6, !dbg !3123
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !3067, metadata !DIExpression()), !dbg !3098
  br label %if.end32, !dbg !3124

if.end32:                                         ; preds = %for.end, %if.then12, %if.then25
  %x.1 = phi %union.tree_node* [ %call13, %if.then12 ], [ %call30, %if.then25 ], [ %call22, %for.end ], !dbg !3098
  call void @llvm.dbg.value(metadata %union.tree_node* %x.1, metadata !3067, metadata !DIExpression()), !dbg !3098
  %14 = getelementptr inbounds i8, i8* %data, i64 40, !dbg !3125
  %15 = load i8, i8* %14, align 8, !dbg !3125
  %tobool33 = icmp eq i8 %15, 0, !dbg !3127
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !3128

if.then34:                                        ; preds = %if.end32
  %16 = getelementptr inbounds i8, i8* %data, i64 41, !dbg !3129
  %17 = load i8, i8* %16, align 1, !dbg !3129
  %tobool35 = icmp eq i8 %17, 0, !dbg !3132
  %gsi37 = bitcast i8* %data to %struct.gimple_stmt_iterator*, !dbg !3133
  br i1 %tobool35, label %if.else, label %if.then36, !dbg !3134

if.then36:                                        ; preds = %if.then34
  %call38 = tail call fastcc %union.tree_node* @save_tmp_var(%struct.nesting_info* %1, %union.tree_node* %x.1, %struct.gimple_stmt_iterator* %gsi37) #7, !dbg !3135
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !3067, metadata !DIExpression()), !dbg !3098
  br label %if.end42, !dbg !3136

if.else:                                          ; preds = %if.then34
  %call40 = tail call fastcc %union.tree_node* @init_tmp_var(%struct.nesting_info* %1, %union.tree_node* %x.1, %struct.gimple_stmt_iterator* %gsi37) #7, !dbg !3137
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !3067, metadata !DIExpression()), !dbg !3098
  br label %if.end42

if.end42:                                         ; preds = %if.end32, %if.then36, %if.else
  %x.3 = phi %union.tree_node* [ %x.1, %if.end32 ], [ %call38, %if.then36 ], [ %call40, %if.else ], !dbg !3098
  call void @llvm.dbg.value(metadata %union.tree_node* %x.3, metadata !3067, metadata !DIExpression()), !dbg !3098
  store %union.tree_node* %x.3, %union.tree_node** %tp, align 8, !dbg !3138
  br label %sw.epilog, !dbg !3139

sw.bb44:                                          ; preds = %entry
  %call45 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %2) #6, !dbg !3140
  %context46 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 6, !dbg !3142
  %18 = load %union.tree_node*, %union.tree_node** %context46, align 8, !dbg !3142
  %cmp47 = icmp eq %union.tree_node* %call45, %18, !dbg !3143
  br i1 %cmp47, label %sw.epilog, label %if.then48, !dbg !3144

if.then48:                                        ; preds = %sw.bb44
  %bf.load50 = load i64, i64* %3, align 8, !dbg !3145
  %bf.set = or i64 %bf.load50, 65536, !dbg !3145
  store i64 %bf.set, i64* %3, align 8, !dbg !3145
  br label %sw.epilog, !dbg !3146

sw.bb53:                                          ; preds = %entry
  %19 = getelementptr inbounds i8, i8* %data, i64 40, !dbg !3147
  %20 = load i8, i8* %19, align 8, !dbg !3147
  call void @llvm.dbg.value(metadata i8 %20, metadata !3075, metadata !DIExpression()), !dbg !3148
  store i8 0, i8* %19, align 8, !dbg !3149
  %21 = getelementptr inbounds i8, i8* %data, i64 41, !dbg !3150
  store i8 0, i8* %21, align 1, !dbg !3151
  %22 = getelementptr inbounds i8, i8* %data, i64 42, !dbg !3152
  store i8 0, i8* %22, align 2, !dbg !3153
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3154
  %call58 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %operands, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3154
  store i8 1, i8* %19, align 8, !dbg !3155
  %23 = load i8, i8* %22, align 2, !dbg !3156
  %tobool61 = icmp eq i8 %23, 0, !dbg !3157
  br i1 %tobool61, label %sw.epilog, label %if.then62, !dbg !3158

if.then62:                                        ; preds = %sw.bb53
  %24 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3159
  %context63 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 6, !dbg !3160
  %25 = bitcast %union.tree_node** %context63 to i64*, !dbg !3160
  %26 = load i64, i64* %25, align 8, !dbg !3160
  store i64 %26, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3161
  tail call void @recompute_tree_invariant_for_addr_expr(%union.tree_node* %2) #6, !dbg !3162
  store i64 %24, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3163
  %tobool64 = icmp eq i8 %20, 0, !dbg !3164
  br i1 %tobool64, label %sw.epilog, label %if.then65, !dbg !3166

if.then65:                                        ; preds = %if.then62
  %27 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !3167
  %gsi67 = bitcast i8* %data to %struct.gimple_stmt_iterator*, !dbg !3168
  %call68 = tail call fastcc %union.tree_node* @gsi_gimplify_val(%struct.nesting_info* %27, %union.tree_node* %2, %struct.gimple_stmt_iterator* %gsi67) #7, !dbg !3169
  store %union.tree_node* %call68, %union.tree_node** %tp, align 8, !dbg !3170
  br label %sw.epilog, !dbg !3171

sw.bb71:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %28 = getelementptr inbounds i8, i8* %data, i64 40, !dbg !3172
  store i8 1, i8* %28, align 8, !dbg !3173
  %29 = getelementptr inbounds i8, i8* %data, i64 41, !dbg !3174
  store i8 0, i8* %29, align 1, !dbg !3175
  br label %for.cond74, !dbg !3176

for.cond74:                                       ; preds = %for.inc131, %sw.bb71
  %t.0 = phi %union.tree_node* [ %2, %sw.bb71 ], [ %31, %for.inc131 ], !dbg !3080
  %tp.addr.0 = phi %union.tree_node** [ %tp, %sw.bb71 ], [ %operands133, %for.inc131 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.0, metadata !3060, metadata !DIExpression()), !dbg !3080
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !3066, metadata !DIExpression()), !dbg !3080
  %call75 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %t.0) #7, !dbg !3177
  %tobool76 = icmp eq i8 %call75, 0, !dbg !3180
  br i1 %tobool76, label %for.end135, label %for.body77, !dbg !3180

for.body77:                                       ; preds = %for.cond74
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3181
  %bf.load79 = load i64, i64* %30, align 8, !dbg !3181
  %bf.cast811 = and i64 %bf.load79, 65535, !dbg !3184
  %cmp82 = icmp eq i64 %bf.cast811, 41, !dbg !3184
  br i1 %cmp82, label %if.then83, label %if.else88, !dbg !3185

if.then83:                                        ; preds = %for.body77
  %operands85 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3186
  %arrayidx86 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands85, i64 2, !dbg !3186
  %call87 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx86, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3186
  br label %for.inc131, !dbg !3186

if.else88:                                        ; preds = %for.body77
  %cmp93 = icmp eq i64 %bf.cast811, 45, !dbg !3187
  br i1 %cmp93, label %if.then100, label %lor.lhs.false94, !dbg !3189

lor.lhs.false94:                                  ; preds = %if.else88
  %cmp99 = icmp eq i64 %bf.cast811, 46, !dbg !3190
  br i1 %cmp99, label %if.then100, label %if.else113, !dbg !3191

if.then100:                                       ; preds = %lor.lhs.false94, %if.else88
  %operands102 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3192
  %arrayidx103 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands102, i64 1, !dbg !3192
  %call104 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx103, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3192
  %arrayidx107 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands102, i64 2, !dbg !3194
  %call108 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx107, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3194
  %arrayidx111 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands102, i64 3, !dbg !3195
  %call112 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx111, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3195
  br label %for.inc131, !dbg !3196

if.else113:                                       ; preds = %lor.lhs.false94
  %cmp118 = icmp eq i64 %bf.cast811, 42, !dbg !3197
  br i1 %cmp118, label %if.then119, label %for.inc131, !dbg !3199

if.then119:                                       ; preds = %if.else113
  %operands121 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3200
  %arrayidx122 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands121, i64 1, !dbg !3200
  %call123 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx122, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3200
  %arrayidx126 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands121, i64 2, !dbg !3202
  %call127 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx126, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3202
  br label %for.inc131, !dbg !3203

for.inc131:                                       ; preds = %if.then83, %if.else113, %if.then119, %if.then100
  %operands133 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3204
  call void @llvm.dbg.value(metadata %union.tree_node** %operands133, metadata !3060, metadata !DIExpression()), !dbg !3080
  %31 = load %union.tree_node*, %union.tree_node** %operands133, align 8, !dbg !3205
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !3066, metadata !DIExpression()), !dbg !3080
  br label %for.cond74, !dbg !3206, !llvm.loop !3207

for.end135:                                       ; preds = %for.cond74
  %tp.addr.0.lcssa = phi %union.tree_node** [ %tp.addr.0, %for.cond74 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.0.lcssa, metadata !3060, metadata !DIExpression()), !dbg !3080
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.0.lcssa, metadata !3060, metadata !DIExpression()), !dbg !3080
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.0.lcssa, metadata !3060, metadata !DIExpression()), !dbg !3080
  store i8 0, i8* %28, align 8, !dbg !3209
  %call137 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** %tp.addr.0.lcssa, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3210
  br label %sw.epilog, !dbg !3211

sw.bb138:                                         ; preds = %entry
  store i32 1, i32* %walk_subtrees, align 4, !dbg !3212
  br label %sw.epilog, !dbg !3213

sw.default:                                       ; preds = %entry
  %bf.cast142 = and i64 %bf.load, 65535, !dbg !3214
  %arrayidx143 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast142, !dbg !3214
  %32 = load i32, i32* %arrayidx143, align 4, !dbg !3214
  %cmp144 = icmp eq i32 %32, 2, !dbg !3214
  br i1 %cmp144, label %sw.epilog, label %lor.lhs.false145, !dbg !3214

lor.lhs.false145:                                 ; preds = %sw.default
  %cmp152 = icmp eq i32 %32, 3, !dbg !3214
  br i1 %cmp152, label %sw.epilog, label %if.then153, !dbg !3216

if.then153:                                       ; preds = %lor.lhs.false145
  store i32 1, i32* %walk_subtrees, align 4, !dbg !3217
  %33 = getelementptr inbounds i8, i8* %data, i64 40, !dbg !3219
  store i8 1, i8* %33, align 8, !dbg !3220
  %34 = getelementptr inbounds i8, i8* %data, i64 41, !dbg !3221
  store i8 0, i8* %34, align 1, !dbg !3222
  br label %sw.epilog, !dbg !3223

sw.epilog:                                        ; preds = %lor.lhs.false, %sw.bb, %sw.bb11, %sw.bb44, %if.then62, %sw.bb53, %sw.default, %lor.lhs.false145, %if.then153, %if.then65, %if.then48, %if.end42, %sw.bb138, %for.end135
  ret %union.tree_node* null, !dbg !3224
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @convert_local_reference_stmt(%struct.gimple_stmt_iterator* %gsi, i8* %handled_ops_p, %struct.walk_stmt_info* %wi) #5 !dbg !3225 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3227, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.value(metadata i8* %handled_ops_p, metadata !3228, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !3229, metadata !DIExpression()), !dbg !3238
  %info1 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !3239
  %0 = bitcast i8** %info1 to %struct.nesting_info**, !dbg !3239
  %1 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !3239
  call void @llvm.dbg.value(metadata %struct.nesting_info* %1, metadata !3230, metadata !DIExpression()), !dbg !3238
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3240
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3233, metadata !DIExpression()), !dbg !3238
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !3241
  switch i32 %call2, label %sw.default [
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 23, label %sw.bb20
    i32 30, label %sw.bb26
    i32 32, label %sw.bb32
    i32 29, label %sw.bb38
    i32 24, label %sw.bb38
    i32 25, label %sw.bb38
    i32 1, label %sw.bb40
  ], !dbg !3242

sw.bb:                                            ; preds = %entry, %entry
  %suppress_expansion = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 5, !dbg !3243
  %2 = bitcast %struct.bitmap_head_def** %suppress_expansion to i64*, !dbg !3243
  %3 = load i64, i64* %2, align 8, !dbg !3243
  %call3 = tail call fastcc %union.tree_node** @gimple_omp_taskreg_clauses_ptr(%union.gimple_statement_d* %call) #7, !dbg !3244
  %call4 = tail call fastcc zeroext i8 @convert_local_omp_clauses(%union.tree_node** %call3, %struct.walk_stmt_info* %wi) #7, !dbg !3245
  %tobool = icmp eq i8 %call4, 0, !dbg !3245
  br i1 %tobool, label %if.end, label %if.then, !dbg !3246

if.then:                                          ; preds = %sw.bb
  %call5 = tail call fastcc %union.tree_node* @get_frame_type(%struct.nesting_info* %1) #7, !dbg !3247
  %call6 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !3248
  %call7 = tail call %union.tree_node* @build_omp_clause(i32 %call6, i32 2) #6, !dbg !3249
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !3234, metadata !DIExpression()), !dbg !3250
  %frame_decl = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 10, !dbg !3251
  %4 = bitcast %union.tree_node** %frame_decl to i64*, !dbg !3251
  %5 = load i64, i64* %4, align 8, !dbg !3251
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3252
  %6 = bitcast i40* %ops to i64*, !dbg !3253
  store i64 %5, i64* %6, align 8, !dbg !3253
  %call8 = tail call fastcc %union.tree_node* @gimple_omp_taskreg_clauses(%union.gimple_statement_d* %call) #7, !dbg !3254
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3255
  store %union.tree_node* %call8, %union.tree_node** %chain, align 8, !dbg !3256
  tail call fastcc void @gimple_omp_taskreg_set_clauses(%union.gimple_statement_d* %call, %union.tree_node* %call7) #7, !dbg !3257
  br label %if.end, !dbg !3258

if.end:                                           ; preds = %sw.bb, %if.then
  %new_local_var_chain = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 7, !dbg !3259
  %7 = bitcast %union.tree_node** %new_local_var_chain to i64*, !dbg !3259
  %8 = load i64, i64* %7, align 8, !dbg !3259
  store %union.tree_node* null, %union.tree_node** %new_local_var_chain, align 8, !dbg !3260
  %call10 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !3261
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_local_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %call10) #7, !dbg !3262
  %9 = load %union.tree_node*, %union.tree_node** %new_local_var_chain, align 8, !dbg !3263
  %tobool12 = icmp eq %union.tree_node* %9, null, !dbg !3265
  br i1 %tobool12, label %if.end17, label %if.then13, !dbg !3266

if.then13:                                        ; preds = %if.end
  %call15 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !3267
  %call16 = tail call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call15) #7, !dbg !3268
  tail call void @declare_vars(%union.tree_node* nonnull %9, %union.gimple_statement_d* %call16, i8 zeroext 0) #6, !dbg !3269
  br label %if.end17, !dbg !3269

if.end17:                                         ; preds = %if.end, %if.then13
  store i64 %8, i64* %7, align 8, !dbg !3270
  store i64 %3, i64* %2, align 8, !dbg !3271
  br label %sw.epilog, !dbg !3272

sw.bb20:                                          ; preds = %entry
  %suppress_expansion21 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 5, !dbg !3273
  %10 = bitcast %struct.bitmap_head_def** %suppress_expansion21 to i64*, !dbg !3273
  %11 = load i64, i64* %10, align 8, !dbg !3273
  %call22 = tail call fastcc %union.tree_node** @gimple_omp_for_clauses_ptr(%union.gimple_statement_d* %call) #7, !dbg !3274
  %call23 = tail call fastcc zeroext i8 @convert_local_omp_clauses(%union.tree_node** %call22, %struct.walk_stmt_info* %wi) #7, !dbg !3275
  tail call fastcc void @walk_gimple_omp_for(%union.gimple_statement_d* %call, %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_local_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, %struct.nesting_info* %1) #7, !dbg !3276
  %call24 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !3277
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_local_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %call24) #7, !dbg !3278
  store i64 %11, i64* %10, align 8, !dbg !3279
  br label %sw.epilog, !dbg !3280

sw.bb26:                                          ; preds = %entry
  %suppress_expansion27 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 5, !dbg !3281
  %12 = bitcast %struct.bitmap_head_def** %suppress_expansion27 to i64*, !dbg !3281
  %13 = load i64, i64* %12, align 8, !dbg !3281
  %call28 = tail call fastcc %union.tree_node** @gimple_omp_sections_clauses_ptr(%union.gimple_statement_d* %call) #7, !dbg !3282
  %call29 = tail call fastcc zeroext i8 @convert_local_omp_clauses(%union.tree_node** %call28, %struct.walk_stmt_info* %wi) #7, !dbg !3283
  %call30 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !3284
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_local_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %call30) #7, !dbg !3285
  store i64 %13, i64* %12, align 8, !dbg !3286
  br label %sw.epilog, !dbg !3287

sw.bb32:                                          ; preds = %entry
  %suppress_expansion33 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 5, !dbg !3288
  %14 = bitcast %struct.bitmap_head_def** %suppress_expansion33 to i64*, !dbg !3288
  %15 = load i64, i64* %14, align 8, !dbg !3288
  %call34 = tail call fastcc %union.tree_node** @gimple_omp_single_clauses_ptr(%union.gimple_statement_d* %call) #7, !dbg !3289
  %call35 = tail call fastcc zeroext i8 @convert_local_omp_clauses(%union.tree_node** %call34, %struct.walk_stmt_info* %wi) #7, !dbg !3290
  %call36 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !3291
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_local_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %call36) #7, !dbg !3292
  store i64 %15, i64* %14, align 8, !dbg !3293
  br label %sw.epilog, !dbg !3294

sw.bb38:                                          ; preds = %entry, %entry, %entry
  %call39 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !3295
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_local_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %call39) #7, !dbg !3296
  br label %sw.epilog, !dbg !3297

sw.bb40:                                          ; preds = %entry
  %val_only = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 3, !dbg !3298
  store i8 1, i8* %val_only, align 8, !dbg !3299
  %is_lhs = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 4, !dbg !3300
  store i8 0, i8* %is_lhs, align 1, !dbg !3301
  store i8 0, i8* %handled_ops_p, align 1, !dbg !3302
  br label %cleanup, !dbg !3303

sw.default:                                       ; preds = %entry
  store i8 0, i8* %handled_ops_p, align 1, !dbg !3304
  br label %cleanup, !dbg !3305

sw.epilog:                                        ; preds = %sw.bb38, %sw.bb32, %sw.bb26, %sw.bb20, %if.end17
  store i8 1, i8* %handled_ops_p, align 1, !dbg !3306
  br label %cleanup, !dbg !3307

cleanup:                                          ; preds = %sw.epilog, %sw.default, %sw.bb40
  ret %union.tree_node* null, !dbg !3308
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @convert_local_reference_op(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !3309 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !3311, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !3312, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata i8* %data, metadata !3313, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata i8* %data, metadata !3314, metadata !DIExpression()), !dbg !3324
  %info1 = getelementptr inbounds i8, i8* %data, i64 24, !dbg !3325
  %0 = bitcast i8* %info1 to %struct.nesting_info**, !dbg !3325
  %1 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !3325
  call void @llvm.dbg.value(metadata %struct.nesting_info* %1, metadata !3315, metadata !DIExpression()), !dbg !3324
  %2 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !3326
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3316, metadata !DIExpression()), !dbg !3324
  store i32 0, i32* %walk_subtrees, align 4, !dbg !3327
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3328
  %bf.load = load i64, i64* %3, align 8, !dbg !3328
  %4 = trunc i64 %bf.load to i16, !dbg !3328
  switch i16 %4, label %sw.default [
    i16 32, label %sw.bb
    i16 34, label %sw.bb11
    i16 121, label %sw.bb39
    i16 43, label %sw.bb60
    i16 44, label %sw.bb60
    i16 41, label %sw.bb60
    i16 45, label %sw.bb60
    i16 46, label %sw.bb60
    i16 42, label %sw.bb60
    i16 118, label %sw.bb125
  ], !dbg !3329

sw.bb:                                            ; preds = %entry
  %bf.cast55 = and i64 %bf.load, 67108864, !dbg !3330
  %tobool = icmp eq i64 %bf.cast55, 0, !dbg !3330
  br i1 %tobool, label %lor.lhs.false, label %sw.epilog, !dbg !3332

lor.lhs.false:                                    ; preds = %sw.bb
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3333
  %5 = bitcast i40* %decl_flag_1 to i64*, !dbg !3333
  %bf.load6 = load i64, i64* %5, align 8, !dbg !3333
  %bf.cast96 = and i64 %bf.load6, 33554432, !dbg !3333
  %tobool10 = icmp eq i64 %bf.cast96, 0, !dbg !3333
  br i1 %tobool10, label %sw.bb11, label %sw.epilog, !dbg !3334

sw.bb11:                                          ; preds = %lor.lhs.false, %entry
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %2) #6, !dbg !3335
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 6, !dbg !3337
  %6 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !3337
  %cmp = icmp eq %union.tree_node* %call, %6, !dbg !3338
  br i1 %cmp, label %if.then12, label %sw.epilog, !dbg !3339

if.then12:                                        ; preds = %sw.bb11
  %call13 = tail call fastcc zeroext i8 @use_pointer_in_frame(%union.tree_node* %2) #7, !dbg !3340
  %tobool14 = icmp eq i8 %call13, 0, !dbg !3340
  br i1 %tobool14, label %if.end16, label %sw.epilog, !dbg !3343

if.end16:                                         ; preds = %if.then12
  %call17 = tail call fastcc %union.tree_node* @lookup_field_for_decl(%struct.nesting_info* %1, %union.tree_node* %2, i32 0) #7, !dbg !3344
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !3317, metadata !DIExpression()), !dbg !3324
  %tobool18 = icmp eq %union.tree_node* %call17, null, !dbg !3345
  br i1 %tobool18, label %sw.epilog, label %if.end20, !dbg !3347

if.end20:                                         ; preds = %if.end16
  %7 = getelementptr inbounds i8, i8* %data, i64 42, !dbg !3348
  store i8 1, i8* %7, align 2, !dbg !3349
  %call21 = tail call fastcc %union.tree_node* @get_local_debug_decl(%struct.nesting_info* %1, %union.tree_node* %2, %union.tree_node* nonnull %call17) #7, !dbg !3350
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !3318, metadata !DIExpression()), !dbg !3324
  %suppress_expansion = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 5, !dbg !3351
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %suppress_expansion, align 8, !dbg !3351
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3353
  %9 = load i32, i32* %uid, align 4, !dbg !3353
  %call22 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %9) #6, !dbg !3354
  %tobool23 = icmp eq i32 %call22, 0, !dbg !3354
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !3355

if.then24:                                        ; preds = %if.end20
  %10 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !3356
  %gsi = bitcast i8* %data to %struct.gimple_stmt_iterator*, !dbg !3357
  %call26 = tail call fastcc %union.tree_node* @get_frame_field(%struct.nesting_info* %1, %union.tree_node* %10, %union.tree_node* nonnull %call17, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !3358
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !3318, metadata !DIExpression()), !dbg !3324
  br label %if.end27, !dbg !3359

if.end27:                                         ; preds = %if.end20, %if.then24
  %x.0 = phi %union.tree_node* [ %call21, %if.end20 ], [ %call26, %if.then24 ], !dbg !3360
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0, metadata !3318, metadata !DIExpression()), !dbg !3324
  %11 = getelementptr inbounds i8, i8* %data, i64 40, !dbg !3361
  %12 = load i8, i8* %11, align 8, !dbg !3361
  %tobool28 = icmp eq i8 %12, 0, !dbg !3363
  br i1 %tobool28, label %if.end37, label %if.then29, !dbg !3364

if.then29:                                        ; preds = %if.end27
  %13 = getelementptr inbounds i8, i8* %data, i64 41, !dbg !3365
  %14 = load i8, i8* %13, align 1, !dbg !3365
  %tobool30 = icmp eq i8 %14, 0, !dbg !3368
  %gsi32 = bitcast i8* %data to %struct.gimple_stmt_iterator*, !dbg !3369
  br i1 %tobool30, label %if.else, label %if.then31, !dbg !3370

if.then31:                                        ; preds = %if.then29
  %call33 = tail call fastcc %union.tree_node* @save_tmp_var(%struct.nesting_info* %1, %union.tree_node* %x.0, %struct.gimple_stmt_iterator* %gsi32) #7, !dbg !3371
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !3318, metadata !DIExpression()), !dbg !3324
  br label %if.end37, !dbg !3372

if.else:                                          ; preds = %if.then29
  %call35 = tail call fastcc %union.tree_node* @init_tmp_var(%struct.nesting_info* %1, %union.tree_node* %x.0, %struct.gimple_stmt_iterator* %gsi32) #7, !dbg !3373
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !3318, metadata !DIExpression()), !dbg !3324
  br label %if.end37

if.end37:                                         ; preds = %if.end27, %if.then31, %if.else
  %x.2 = phi %union.tree_node* [ %x.0, %if.end27 ], [ %call33, %if.then31 ], [ %call35, %if.else ], !dbg !3360
  call void @llvm.dbg.value(metadata %union.tree_node* %x.2, metadata !3318, metadata !DIExpression()), !dbg !3324
  store %union.tree_node* %x.2, %union.tree_node** %tp, align 8, !dbg !3374
  br label %sw.epilog, !dbg !3375

sw.bb39:                                          ; preds = %entry
  %15 = getelementptr inbounds i8, i8* %data, i64 40, !dbg !3376
  %16 = load i8, i8* %15, align 8, !dbg !3376
  call void @llvm.dbg.value(metadata i8 %16, metadata !3319, metadata !DIExpression()), !dbg !3324
  store i8 0, i8* %15, align 8, !dbg !3377
  %17 = getelementptr inbounds i8, i8* %data, i64 41, !dbg !3378
  store i8 0, i8* %17, align 1, !dbg !3379
  %18 = getelementptr inbounds i8, i8* %data, i64 42, !dbg !3380
  store i8 0, i8* %18, align 2, !dbg !3381
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3382
  %call44 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %operands, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3382
  store i8 %16, i8* %15, align 8, !dbg !3383
  %19 = load i8, i8* %18, align 2, !dbg !3384
  %tobool47 = icmp eq i8 %19, 0, !dbg !3385
  br i1 %tobool47, label %sw.epilog, label %if.then48, !dbg !3386

if.then48:                                        ; preds = %sw.bb39
  %frame_decl = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 10, !dbg !3387
  %20 = bitcast %union.tree_node** %frame_decl to i64**, !dbg !3387
  %21 = load i64*, i64** %20, align 8, !dbg !3387
  %bf.load50 = load i64, i64* %21, align 8, !dbg !3388
  %bf.set = or i64 %bf.load50, 262144, !dbg !3388
  store i64 %bf.set, i64* %21, align 8, !dbg !3388
  %22 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3389
  %context52 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 6, !dbg !3390
  %23 = bitcast %union.tree_node** %context52 to i64*, !dbg !3390
  %24 = load i64, i64* %23, align 8, !dbg !3390
  store i64 %24, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3391
  tail call void @recompute_tree_invariant_for_addr_expr(%union.tree_node* %2) #6, !dbg !3392
  store i64 %22, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3393
  %tobool53 = icmp eq i8 %16, 0, !dbg !3394
  br i1 %tobool53, label %sw.epilog, label %if.then54, !dbg !3396

if.then54:                                        ; preds = %if.then48
  %25 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !3397
  %gsi56 = bitcast i8* %data to %struct.gimple_stmt_iterator*, !dbg !3398
  %call57 = tail call fastcc %union.tree_node* @gsi_gimplify_val(%struct.nesting_info* %25, %union.tree_node* %2, %struct.gimple_stmt_iterator* %gsi56) #7, !dbg !3399
  store %union.tree_node* %call57, %union.tree_node** %tp, align 8, !dbg !3400
  br label %sw.epilog, !dbg !3401

sw.bb60:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %26 = getelementptr inbounds i8, i8* %data, i64 40, !dbg !3402
  %27 = load i8, i8* %26, align 8, !dbg !3402
  call void @llvm.dbg.value(metadata i8 %27, metadata !3319, metadata !DIExpression()), !dbg !3324
  store i8 1, i8* %26, align 8, !dbg !3403
  %28 = getelementptr inbounds i8, i8* %data, i64 41, !dbg !3404
  store i8 0, i8* %28, align 1, !dbg !3405
  br label %for.cond, !dbg !3406

for.cond:                                         ; preds = %for.inc, %sw.bb60
  %t.0 = phi %union.tree_node* [ %2, %sw.bb60 ], [ %30, %for.inc ], !dbg !3324
  %tp.addr.0 = phi %union.tree_node** [ %tp, %sw.bb60 ], [ %operands120, %for.inc ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.0, metadata !3311, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !3316, metadata !DIExpression()), !dbg !3324
  %call64 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %t.0) #7, !dbg !3407
  %tobool65 = icmp eq i8 %call64, 0, !dbg !3410
  br i1 %tobool65, label %for.end, label %for.body, !dbg !3410

for.body:                                         ; preds = %for.cond
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3411
  %bf.load67 = load i64, i64* %29, align 8, !dbg !3411
  %bf.cast691 = and i64 %bf.load67, 65535, !dbg !3414
  %cmp70 = icmp eq i64 %bf.cast691, 41, !dbg !3414
  br i1 %cmp70, label %if.then71, label %if.else76, !dbg !3415

if.then71:                                        ; preds = %for.body
  %operands73 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3416
  %arrayidx74 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands73, i64 2, !dbg !3416
  %call75 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx74, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3416
  br label %for.inc, !dbg !3416

if.else76:                                        ; preds = %for.body
  %cmp81 = icmp eq i64 %bf.cast691, 45, !dbg !3417
  br i1 %cmp81, label %if.then88, label %lor.lhs.false82, !dbg !3419

lor.lhs.false82:                                  ; preds = %if.else76
  %cmp87 = icmp eq i64 %bf.cast691, 46, !dbg !3420
  br i1 %cmp87, label %if.then88, label %if.else101, !dbg !3421

if.then88:                                        ; preds = %lor.lhs.false82, %if.else76
  %operands90 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3422
  %arrayidx91 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands90, i64 1, !dbg !3422
  %call92 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx91, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3422
  %arrayidx95 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands90, i64 2, !dbg !3424
  %call96 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx95, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3424
  %arrayidx99 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands90, i64 3, !dbg !3425
  %call100 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx99, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3425
  br label %for.inc, !dbg !3426

if.else101:                                       ; preds = %lor.lhs.false82
  %cmp106 = icmp eq i64 %bf.cast691, 42, !dbg !3427
  br i1 %cmp106, label %if.then107, label %for.inc, !dbg !3429

if.then107:                                       ; preds = %if.else101
  %operands109 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3430
  %arrayidx110 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands109, i64 1, !dbg !3430
  %call111 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx110, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3430
  %arrayidx114 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands109, i64 2, !dbg !3432
  %call115 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx114, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3432
  br label %for.inc, !dbg !3433

for.inc:                                          ; preds = %if.then71, %if.else101, %if.then107, %if.then88
  %operands120 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3434
  call void @llvm.dbg.value(metadata %union.tree_node** %operands120, metadata !3311, metadata !DIExpression()), !dbg !3324
  %30 = load %union.tree_node*, %union.tree_node** %operands120, align 8, !dbg !3435
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !3316, metadata !DIExpression()), !dbg !3324
  br label %for.cond, !dbg !3436, !llvm.loop !3437

for.end:                                          ; preds = %for.cond
  %tp.addr.0.lcssa = phi %union.tree_node** [ %tp.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.0.lcssa, metadata !3311, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.0.lcssa, metadata !3311, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.0.lcssa, metadata !3311, metadata !DIExpression()), !dbg !3324
  store i8 0, i8* %26, align 8, !dbg !3439
  %call123 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** %tp.addr.0.lcssa, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3440
  store i8 %27, i8* %26, align 8, !dbg !3441
  br label %sw.epilog, !dbg !3442

sw.bb125:                                         ; preds = %entry
  store i32 1, i32* %walk_subtrees, align 4, !dbg !3443
  br label %sw.epilog, !dbg !3444

sw.default:                                       ; preds = %entry
  %bf.cast129 = and i64 %bf.load, 65535, !dbg !3445
  %arrayidx130 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast129, !dbg !3445
  %31 = load i32, i32* %arrayidx130, align 4, !dbg !3445
  %cmp131 = icmp eq i32 %31, 2, !dbg !3445
  br i1 %cmp131, label %sw.epilog, label %lor.lhs.false132, !dbg !3445

lor.lhs.false132:                                 ; preds = %sw.default
  %cmp139 = icmp eq i32 %31, 3, !dbg !3445
  br i1 %cmp139, label %sw.epilog, label %if.then140, !dbg !3447

if.then140:                                       ; preds = %lor.lhs.false132
  store i32 1, i32* %walk_subtrees, align 4, !dbg !3448
  %32 = getelementptr inbounds i8, i8* %data, i64 40, !dbg !3450
  store i8 1, i8* %32, align 8, !dbg !3451
  %33 = getelementptr inbounds i8, i8* %data, i64 41, !dbg !3452
  store i8 0, i8* %33, align 1, !dbg !3453
  br label %sw.epilog, !dbg !3454

sw.epilog:                                        ; preds = %lor.lhs.false, %sw.bb, %if.end16, %if.then12, %if.then48, %sw.bb39, %sw.default, %lor.lhs.false132, %if.then140, %if.then54, %sw.bb11, %if.end37, %sw.bb125, %for.end
  ret %union.tree_node* null, !dbg !3455
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @convert_nl_goto_reference(%struct.gimple_stmt_iterator* %gsi, i8* %handled_ops_p, %struct.walk_stmt_info* %wi) #5 !dbg !3456 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3458, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i8* %handled_ops_p, metadata !3459, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !3460, metadata !DIExpression()), !dbg !3471
  %info1 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !3472
  %0 = bitcast i8** %info1 to %struct.nesting_info**, !dbg !3472
  %1 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !3472
  call void @llvm.dbg.value(metadata %struct.nesting_info* %1, metadata !3461, metadata !DIExpression()), !dbg !3471
  %call2 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3473
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !3470, metadata !DIExpression()), !dbg !3471
  %call3 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call2) #7, !dbg !3474
  %cmp = icmp eq i32 %call3, 3, !dbg !3476
  br i1 %cmp, label %if.end, label %if.then, !dbg !3477

if.then:                                          ; preds = %entry
  store i8 0, i8* %handled_ops_p, align 1, !dbg !3478
  br label %cleanup, !dbg !3480

if.end:                                           ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %call2) #7, !dbg !3481
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !3463, metadata !DIExpression()), !dbg !3471
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3482
  %bf.load = load i64, i64* %2, align 8, !dbg !3482
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3484
  %cmp5 = icmp eq i64 %bf.cast1, 30, !dbg !3484
  br i1 %cmp5, label %if.end7, label %if.then6, !dbg !3485

if.then6:                                         ; preds = %if.end
  store i8 0, i8* %handled_ops_p, align 1, !dbg !3486
  br label %cleanup, !dbg !3488

if.end7:                                          ; preds = %if.end
  %call8 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %call4) #6, !dbg !3489
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !3465, metadata !DIExpression()), !dbg !3471
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 6, !dbg !3490
  %3 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !3490
  %cmp9 = icmp eq %union.tree_node* %call8, %3, !dbg !3492
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !3493

if.then10:                                        ; preds = %if.end7
  store i8 0, i8* %handled_ops_p, align 1, !dbg !3494
  br label %cleanup, !dbg !3496

if.end11:                                         ; preds = %if.end7
  br label %for.cond, !dbg !3497

for.cond:                                         ; preds = %for.inc, %if.end11
  %.pn = phi %struct.nesting_info* [ %1, %if.end11 ], [ %i.0, %for.inc ]
  %i.0.in = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %.pn, i64 0, i32 0, !dbg !3499
  %i.0 = load %struct.nesting_info*, %struct.nesting_info** %i.0.in, align 8, !dbg !3499
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.0, metadata !3462, metadata !DIExpression()), !dbg !3471
  %context12 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i.0, i64 0, i32 6, !dbg !3500
  %4 = load %union.tree_node*, %union.tree_node** %context12, align 8, !dbg !3500
  %cmp13 = icmp eq %union.tree_node* %call8, %4, !dbg !3502
  br i1 %cmp13, label %for.end, label %for.inc, !dbg !3503

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !3504, !llvm.loop !3505

for.end:                                          ; preds = %for.cond
  %i.0.lcssa = phi %struct.nesting_info* [ %i.0, %for.cond ], !dbg !3499
  %var_map = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i.0.lcssa, i64 0, i32 4, !dbg !3507
  %5 = load %struct.pointer_map_t*, %struct.pointer_map_t** %var_map, align 8, !dbg !3507
  %6 = bitcast %union.tree_node* %call4 to i8*, !dbg !3508
  %call15 = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %5, i8* %6) #6, !dbg !3509
  call void @llvm.dbg.value(metadata i8** %call15, metadata !3468, metadata !DIExpression()), !dbg !3471
  %7 = load i8*, i8** %call15, align 8, !dbg !3510
  %cmp16 = icmp eq i8* %7, null, !dbg !3512
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !3513

if.then17:                                        ; preds = %for.end
  %call18 = tail call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !3514
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !3464, metadata !DIExpression()), !dbg !3471
  %nonlocal_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3516
  %8 = bitcast i40* %nonlocal_flag to i64*, !dbg !3516
  %bf.load19 = load i64, i64* %8, align 8, !dbg !3517
  %bf.set = or i64 %bf.load19, 256, !dbg !3517
  store i64 %bf.set, i64* %8, align 8, !dbg !3517
  %9 = bitcast i8** %call15 to %union.tree_node**, !dbg !3518
  store %union.tree_node* %call18, %union.tree_node** %9, align 8, !dbg !3518
  br label %if.end21, !dbg !3519

if.else:                                          ; preds = %for.end
  %10 = bitcast i8* %7 to %union.tree_node*, !dbg !3513
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !3464, metadata !DIExpression()), !dbg !3471
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then17
  %new_label.0 = phi %union.tree_node* [ %call18, %if.then17 ], [ %10, %if.else ], !dbg !3520
  call void @llvm.dbg.value(metadata %union.tree_node* %new_label.0, metadata !3464, metadata !DIExpression()), !dbg !3471
  %call22 = tail call fastcc %union.tree_node* @get_nl_goto_field(%struct.nesting_info* %i.0.lcssa) #7, !dbg !3521
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !3467, metadata !DIExpression()), !dbg !3471
  %gsi23 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 0, !dbg !3522
  %call24 = tail call fastcc %union.tree_node* @get_frame_field(%struct.nesting_info* %1, %union.tree_node* %call8, %union.tree_node* %call22, %struct.gimple_stmt_iterator* %gsi23) #7, !dbg !3523
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !3466, metadata !DIExpression()), !dbg !3471
  %call25 = tail call %union.tree_node* @build_addr(%union.tree_node* %call24, %union.tree_node* %call8) #7, !dbg !3524
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !3466, metadata !DIExpression()), !dbg !3471
  %call27 = tail call fastcc %union.tree_node* @gsi_gimplify_val(%struct.nesting_info* %1, %union.tree_node* %call25, %struct.gimple_stmt_iterator* %gsi23) #7, !dbg !3525
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !3466, metadata !DIExpression()), !dbg !3471
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 522), align 16, !dbg !3526
  %call28 = tail call %union.tree_node* @build_addr(%union.tree_node* %new_label.0, %union.tree_node* %call8) #7, !dbg !3527
  %call29 = tail call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %11, i32 2, %union.tree_node* %call28, %union.tree_node* %call27) #6, !dbg !3528
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call29, metadata !3469, metadata !DIExpression()), !dbg !3471
  tail call void @gsi_replace(%struct.gimple_stmt_iterator* %gsi23, %union.gimple_statement_d* %call29, i8 zeroext 0) #6, !dbg !3529
  store i8 1, i8* %handled_ops_p, align 1, !dbg !3530
  br label %cleanup, !dbg !3531

cleanup:                                          ; preds = %if.end21, %if.then10, %if.then6, %if.then
  ret %union.tree_node* null, !dbg !3532
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @convert_nl_goto_receiver(%struct.gimple_stmt_iterator* %gsi, i8* %handled_ops_p, %struct.walk_stmt_info* %wi) #5 !dbg !3533 {
entry:
  %tmp_gsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3535, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.value(metadata i8* %handled_ops_p, metadata !3536, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !3537, metadata !DIExpression()), !dbg !3547
  %info1 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !3548
  %0 = bitcast i8** %info1 to %struct.nesting_info**, !dbg !3548
  %1 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !3548
  call void @llvm.dbg.value(metadata %struct.nesting_info* %1, metadata !3538, metadata !DIExpression()), !dbg !3547
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp_gsi to i8*, !dbg !3549
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3549
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3550
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3543, metadata !DIExpression()), !dbg !3547
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !3551
  %cmp = icmp eq i32 %call2, 4, !dbg !3553
  br i1 %cmp, label %if.end, label %if.then, !dbg !3554

if.then:                                          ; preds = %entry
  store i8 0, i8* %handled_ops_p, align 1, !dbg !3555
  br label %cleanup, !dbg !3557

if.end:                                           ; preds = %entry
  %call3 = tail call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call) #7, !dbg !3558
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !3539, metadata !DIExpression()), !dbg !3547
  %var_map = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 4, !dbg !3559
  %3 = load %struct.pointer_map_t*, %struct.pointer_map_t** %var_map, align 8, !dbg !3559
  %4 = bitcast %union.tree_node* %call3 to i8*, !dbg !3560
  %call4 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %3, i8* %4) #6, !dbg !3561
  call void @llvm.dbg.value(metadata i8** %call4, metadata !3542, metadata !DIExpression()), !dbg !3547
  %tobool = icmp eq i8** %call4, null, !dbg !3562
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !3564

if.then5:                                         ; preds = %if.end
  store i8 0, i8* %handled_ops_p, align 1, !dbg !3565
  br label %cleanup, !dbg !3567

if.end6:                                          ; preds = %if.end
  %5 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !3568
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %5, i64 24, i1 false), !dbg !3568
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %tmp_gsi, metadata !3541, metadata !DIExpression(DW_OP_deref)), !dbg !3547
  call fastcc void @gsi_prev(%struct.gimple_stmt_iterator* nonnull %tmp_gsi) #7, !dbg !3569
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %tmp_gsi, metadata !3541, metadata !DIExpression(DW_OP_deref)), !dbg !3547
  %call8 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %tmp_gsi) #7, !dbg !3570
  %tobool9 = icmp eq i8 %call8, 0, !dbg !3570
  br i1 %tobool9, label %lor.lhs.false, label %if.then14, !dbg !3571

lor.lhs.false:                                    ; preds = %if.end6
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %tmp_gsi, metadata !3541, metadata !DIExpression(DW_OP_deref)), !dbg !3547
  %call10 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %tmp_gsi) #7, !dbg !3572
  %call11 = call zeroext i8 @gimple_stmt_may_fallthru(%union.gimple_statement_d* %call10) #6, !dbg !3573
  %tobool13 = icmp eq i8 %call11, 0, !dbg !3573
  br i1 %tobool13, label %if.end17, label %if.then14, !dbg !3574

if.then14:                                        ; preds = %lor.lhs.false, %if.end6
  %call16 = call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %call3) #6, !dbg !3575
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call16, metadata !3544, metadata !DIExpression()), !dbg !3576
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call16, i32 1) #6, !dbg !3577
  br label %if.end17, !dbg !3578

if.end17:                                         ; preds = %lor.lhs.false, %if.then14
  %6 = bitcast i8** %call4 to %union.tree_node**, !dbg !3579
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !3579
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !3540, metadata !DIExpression()), !dbg !3547
  %call18 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %7) #6, !dbg !3580
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call18, metadata !3543, metadata !DIExpression()), !dbg !3547
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call18, i32 1) #6, !dbg !3581
  store i8 1, i8* %handled_ops_p, align 1, !dbg !3582
  br label %cleanup, !dbg !3583

cleanup:                                          ; preds = %if.end17, %if.then5, %if.then
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3584
  ret %union.tree_node* null, !dbg !3584
}

; Function Attrs: nounwind uwtable
define internal fastcc void @convert_all_function_calls(%struct.nesting_info* %root) unnamed_addr #5 !dbg !3585 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root, metadata !3589, metadata !DIExpression()), !dbg !3603
  %call = tail call fastcc %struct.nesting_info* @iter_nestinfo_start(%struct.nesting_info* %root) #7, !dbg !3604
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call, metadata !3590, metadata !DIExpression()), !dbg !3603
  br label %for.cond, !dbg !3604

for.cond:                                         ; preds = %for.inc, %entry
  %n.0 = phi %struct.nesting_info* [ %call, %entry ], [ %call15, %for.inc ], !dbg !3605
  call void @llvm.dbg.value(metadata %struct.nesting_info* %n.0, metadata !3590, metadata !DIExpression()), !dbg !3603
  %tobool = icmp eq %struct.nesting_info* %n.0, null, !dbg !3604
  br i1 %tobool, label %do.body.preheader, label %for.body, !dbg !3604

do.body.preheader:                                ; preds = %for.cond
  br label %do.body, !dbg !3606

for.body:                                         ; preds = %for.cond
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %n.0, i64 0, i32 6, !dbg !3607
  %0 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !3607
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3593, metadata !DIExpression()), !dbg !3608
  %outer = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %n.0, i64 0, i32 0, !dbg !3609
  %1 = load %struct.nesting_info*, %struct.nesting_info** %outer, align 8, !dbg !3609
  %tobool1 = icmp eq %struct.nesting_info* %1, null, !dbg !3611
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !3612

lor.lhs.false:                                    ; preds = %for.body
  %chain_decl = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %n.0, i64 0, i32 12, !dbg !3613
  %2 = load %union.tree_node*, %union.tree_node** %chain_decl, align 8, !dbg !3613
  %tobool2 = icmp eq %union.tree_node* %2, null, !dbg !3614
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !3615

land.lhs.true:                                    ; preds = %lor.lhs.false
  %chain_field = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %n.0, i64 0, i32 11, !dbg !3616
  %3 = load %union.tree_node*, %union.tree_node** %chain_field, align 8, !dbg !3616
  %tobool3 = icmp eq %union.tree_node* %3, null, !dbg !3617
  br i1 %tobool3, label %if.then, label %if.else, !dbg !3618

if.then:                                          ; preds = %land.lhs.true, %for.body
  %regdecl_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 5, !dbg !3619
  %bf.load = load i32, i32* %regdecl_flag, align 8, !dbg !3621
  %bf.clear = and i32 %bf.load, -4194305, !dbg !3621
  store i32 %bf.clear, i32* %regdecl_flag, align 8, !dbg !3621
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3622
  %tobool4 = icmp eq %struct._IO_FILE* %4, null, !dbg !3622
  br i1 %tobool4, label %for.inc, label %land.lhs.true5, !dbg !3624

land.lhs.true5:                                   ; preds = %if.then
  %5 = load i32, i32* @dump_flags, align 4, !dbg !3625
  %and = and i32 %5, 8, !dbg !3626
  %tobool6 = icmp eq i32 %and, 0, !dbg !3626
  br i1 %tobool6, label %for.inc, label %if.then7, !dbg !3627

if.then7:                                         ; preds = %land.lhs.true5
  %6 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !3628
  %call8 = tail call i8* %6(%union.tree_node* %0, i32 2) #6, !dbg !3629
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0), i8* %call8) #6, !dbg !3630
  br label %for.inc, !dbg !3630

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %regdecl_flag11 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 5, !dbg !3631
  %bf.load12 = load i32, i32* %regdecl_flag11, align 8, !dbg !3632
  %bf.set = or i32 %bf.load12, 4194304, !dbg !3632
  store i32 %bf.set, i32* %regdecl_flag11, align 8, !dbg !3632
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true5, %if.then, %if.else, %if.then7
  %call15 = tail call fastcc %struct.nesting_info* @iter_nestinfo_next(%struct.nesting_info* nonnull %n.0) #7, !dbg !3633
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call15, metadata !3590, metadata !DIExpression()), !dbg !3603
  br label %for.cond, !dbg !3633, !llvm.loop !3634

do.body:                                          ; preds = %do.body.preheader, %do.cond
  %iter_count.0 = phi i32 [ %inc, %do.cond ], [ 0, %do.body.preheader ], !dbg !3603
  call void @llvm.dbg.value(metadata i32 %iter_count.0, metadata !3591, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i8 0, metadata !3592, metadata !DIExpression()), !dbg !3603
  %inc = add nuw nsw i32 %iter_count.0, 1, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3591, metadata !DIExpression()), !dbg !3603
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3637
  %tobool16 = icmp eq %struct._IO_FILE* %7, null, !dbg !3637
  br i1 %tobool16, label %if.end22, label %land.lhs.true17, !dbg !3639

land.lhs.true17:                                  ; preds = %do.body
  %8 = load i32, i32* @dump_flags, align 4, !dbg !3640
  %and18 = and i32 %8, 8, !dbg !3641
  %tobool19 = icmp eq i32 %and18, 0, !dbg !3641
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !3642

if.then20:                                        ; preds = %land.lhs.true17
  %call21 = tail call i32 @fputc(i32 10, %struct._IO_FILE* nonnull %7) #6, !dbg !3643
  br label %if.end22, !dbg !3643

if.end22:                                         ; preds = %land.lhs.true17, %do.body, %if.then20
  %call23 = tail call fastcc %struct.nesting_info* @iter_nestinfo_start(%struct.nesting_info* %root) #7, !dbg !3644
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call23, metadata !3590, metadata !DIExpression()), !dbg !3603
  br label %for.cond24, !dbg !3644

for.cond24:                                       ; preds = %for.inc43, %if.end22
  %n.1 = phi %struct.nesting_info* [ %call23, %if.end22 ], [ %call44, %for.inc43 ], !dbg !3645
  %any_changed.0 = phi i8 [ 0, %if.end22 ], [ %any_changed.1, %for.inc43 ], !dbg !3646
  call void @llvm.dbg.value(metadata i8 %any_changed.0, metadata !3592, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata %struct.nesting_info* %n.1, metadata !3590, metadata !DIExpression()), !dbg !3603
  %tobool25 = icmp eq %struct.nesting_info* %n.1, null, !dbg !3644
  br i1 %tobool25, label %do.cond, label %for.body26, !dbg !3644

for.body26:                                       ; preds = %for.cond24
  %context28 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %n.1, i64 0, i32 6, !dbg !3647
  %9 = load %union.tree_node*, %union.tree_node** %context28, align 8, !dbg !3647
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !3597, metadata !DIExpression()), !dbg !3648
  %regdecl_flag30 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 5, !dbg !3649
  %bf.load31 = load i32, i32* %regdecl_flag30, align 8, !dbg !3649
  tail call fastcc void @walk_function(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_tramp_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_tramp_reference_op, %struct.nesting_info* nonnull %n.1) #7, !dbg !3650
  tail call fastcc void @walk_function(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_gimple_call, %union.tree_node* (%union.tree_node**, i32*, i8*)* null, %struct.nesting_info* nonnull %n.1) #7, !dbg !3651
  %conv1 = and i32 %bf.load31, 4194304, !dbg !3652
  %tobool33 = icmp eq i32 %conv1, 0, !dbg !3652
  br i1 %tobool33, label %land.lhs.true34, label %for.inc43, !dbg !3654

land.lhs.true34:                                  ; preds = %for.body26
  %bf.load37 = load i32, i32* %regdecl_flag30, align 8, !dbg !3655
  %bf.clear39 = and i32 %bf.load37, 4194304, !dbg !3655
  %tobool40 = icmp eq i32 %bf.clear39, 0, !dbg !3655
  %spec.select = select i1 %tobool40, i8 %any_changed.0, i8 1, !dbg !3656
  br label %for.inc43, !dbg !3656

for.inc43:                                        ; preds = %for.body26, %land.lhs.true34
  %any_changed.1 = phi i8 [ %any_changed.0, %for.body26 ], [ %spec.select, %land.lhs.true34 ], !dbg !3657
  call void @llvm.dbg.value(metadata i8 %any_changed.1, metadata !3592, metadata !DIExpression()), !dbg !3603
  %call44 = tail call fastcc %struct.nesting_info* @iter_nestinfo_next(%struct.nesting_info* nonnull %n.1) #7, !dbg !3658
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call44, metadata !3590, metadata !DIExpression()), !dbg !3603
  br label %for.cond24, !dbg !3658, !llvm.loop !3659

do.cond:                                          ; preds = %for.cond24
  %any_changed.0.lcssa = phi i8 [ %any_changed.0, %for.cond24 ], !dbg !3646
  call void @llvm.dbg.value(metadata i8 %any_changed.0.lcssa, metadata !3592, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i8 %any_changed.0.lcssa, metadata !3592, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i8 %any_changed.0.lcssa, metadata !3592, metadata !DIExpression()), !dbg !3603
  %tobool46 = icmp eq i8 %any_changed.0.lcssa, 0, !dbg !3661
  br i1 %tobool46, label %do.end, label %do.body, !dbg !3661, !llvm.loop !3662

do.end:                                           ; preds = %do.cond
  %inc.lcssa = phi i32 [ %inc, %do.cond ], !dbg !3636
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3664
  %tobool47 = icmp eq %struct._IO_FILE* %10, null, !dbg !3664
  br i1 %tobool47, label %if.end53, label %land.lhs.true48, !dbg !3666

land.lhs.true48:                                  ; preds = %do.end
  %11 = load i32, i32* @dump_flags, align 4, !dbg !3667
  %and49 = and i32 %11, 8, !dbg !3668
  %tobool50 = icmp eq i32 %and49, 0, !dbg !3668
  br i1 %tobool50, label %if.end53, label %if.then51, !dbg !3669

if.then51:                                        ; preds = %land.lhs.true48
  %call52 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i32 %inc.lcssa) #6, !dbg !3670
  br label %if.end53, !dbg !3670

if.end53:                                         ; preds = %land.lhs.true48, %do.end, %if.then51
  ret void, !dbg !3671
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finalize_nesting_tree(%struct.nesting_info* %root) unnamed_addr #5 !dbg !3672 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root, metadata !3674, metadata !DIExpression()), !dbg !3676
  %call = tail call fastcc %struct.nesting_info* @iter_nestinfo_start(%struct.nesting_info* %root) #7, !dbg !3677
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call, metadata !3675, metadata !DIExpression()), !dbg !3676
  br label %for.cond, !dbg !3677

for.cond:                                         ; preds = %for.body, %entry
  %n.0 = phi %struct.nesting_info* [ %call, %entry ], [ %call1, %for.body ], !dbg !3679
  call void @llvm.dbg.value(metadata %struct.nesting_info* %n.0, metadata !3675, metadata !DIExpression()), !dbg !3676
  %tobool = icmp eq %struct.nesting_info* %n.0, null, !dbg !3677
  br i1 %tobool, label %for.end, label %for.body, !dbg !3677

for.body:                                         ; preds = %for.cond
  tail call fastcc void @finalize_nesting_tree_1(%struct.nesting_info* nonnull %n.0) #7, !dbg !3680
  %call1 = tail call fastcc %struct.nesting_info* @iter_nestinfo_next(%struct.nesting_info* nonnull %n.0) #7, !dbg !3682
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call1, metadata !3675, metadata !DIExpression()), !dbg !3676
  br label %for.cond, !dbg !3682, !llvm.loop !3683

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3685
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unnest_nesting_tree(%struct.nesting_info* %root) unnamed_addr #5 !dbg !3686 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root, metadata !3688, metadata !DIExpression()), !dbg !3690
  %call = tail call fastcc %struct.nesting_info* @iter_nestinfo_start(%struct.nesting_info* %root) #7, !dbg !3691
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call, metadata !3689, metadata !DIExpression()), !dbg !3690
  br label %for.cond, !dbg !3691

for.cond:                                         ; preds = %for.body, %entry
  %n.0 = phi %struct.nesting_info* [ %call, %entry ], [ %call1, %for.body ], !dbg !3693
  call void @llvm.dbg.value(metadata %struct.nesting_info* %n.0, metadata !3689, metadata !DIExpression()), !dbg !3690
  %tobool = icmp eq %struct.nesting_info* %n.0, null, !dbg !3691
  br i1 %tobool, label %for.end, label %for.body, !dbg !3691

for.body:                                         ; preds = %for.cond
  tail call fastcc void @unnest_nesting_tree_1(%struct.nesting_info* nonnull %n.0) #7, !dbg !3694
  %call1 = tail call fastcc %struct.nesting_info* @iter_nestinfo_next(%struct.nesting_info* nonnull %n.0) #7, !dbg !3696
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call1, metadata !3689, metadata !DIExpression()), !dbg !3690
  br label %for.cond, !dbg !3696, !llvm.loop !3697

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3699
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_nesting_tree(%struct.nesting_info* %root) unnamed_addr #5 !dbg !3700 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root, metadata !3702, metadata !DIExpression()), !dbg !3705
  %call = tail call fastcc %struct.nesting_info* @iter_nestinfo_start(%struct.nesting_info* %root) #7, !dbg !3706
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call, metadata !3703, metadata !DIExpression()), !dbg !3705
  br label %do.body, !dbg !3707

do.body:                                          ; preds = %do.body, %entry
  %node.0 = phi %struct.nesting_info* [ %call, %entry ], [ %call1, %do.body ], !dbg !3705
  call void @llvm.dbg.value(metadata %struct.nesting_info* %node.0, metadata !3703, metadata !DIExpression()), !dbg !3705
  %call1 = tail call fastcc %struct.nesting_info* @iter_nestinfo_next(%struct.nesting_info* %node.0) #7, !dbg !3708
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call1, metadata !3704, metadata !DIExpression()), !dbg !3705
  %var_map = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %node.0, i64 0, i32 4, !dbg !3710
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** %var_map, align 8, !dbg !3710
  tail call void @pointer_map_destroy(%struct.pointer_map_t* %0) #6, !dbg !3711
  %field_map = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %node.0, i64 0, i32 3, !dbg !3712
  %1 = load %struct.pointer_map_t*, %struct.pointer_map_t** %field_map, align 8, !dbg !3712
  tail call void @pointer_map_destroy(%struct.pointer_map_t* %1) #6, !dbg !3713
  %2 = bitcast %struct.nesting_info* %node.0 to i8*, !dbg !3714
  tail call void @free(i8* %2) #6, !dbg !3715
  call void @llvm.dbg.value(metadata %struct.nesting_info* %call1, metadata !3703, metadata !DIExpression()), !dbg !3705
  %tobool = icmp eq %struct.nesting_info* %call1, null, !dbg !3716
  br i1 %tobool, label %do.end, label %do.body, !dbg !3716, !llvm.loop !3717

do.end:                                           ; preds = %do.body
  ret void, !dbg !3719
}

declare dso_local void @bitmap_obstack_release(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local void @dump_end(i32, %struct._IO_FILE*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_lang_tree_node(i8*) #2

declare dso_local void @gt_pch_nx_lang_tree_node(i8*) #2

declare dso_local %struct.gimple_seq_d* @gimple_body(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @gimplify_function_tree(%union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local %struct.pointer_map_t* @pointer_map_create() local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @check_for_nested_with_variably_modified(%union.tree_node* %fndecl, %union.tree_node* %orig_fndecl) unnamed_addr #5 !dbg !3720 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !3724, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_fndecl, metadata !3725, metadata !DIExpression()), !dbg !3728
  %call = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %fndecl) #6, !dbg !3729
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call, metadata !3726, metadata !DIExpression()), !dbg !3728
  %nested = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call, i64 0, i32 6, !dbg !3730
  br label %for.cond, !dbg !3732

for.cond:                                         ; preds = %for.inc12, %entry
  %cgn.0.in = phi %struct.cgraph_node** [ %nested, %entry ], [ %next_nested, %for.inc12 ]
  %cgn.0 = load %struct.cgraph_node*, %struct.cgraph_node** %cgn.0.in, align 8, !dbg !3733
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %cgn.0, metadata !3726, metadata !DIExpression()), !dbg !3728
  %tobool = icmp eq %struct.cgraph_node* %cgn.0, null, !dbg !3734
  br i1 %tobool, label %cleanup.loopexit1, label %for.body, !dbg !3734

for.body:                                         ; preds = %for.cond
  %0 = bitcast %struct.cgraph_node* %cgn.0 to %struct.tree_decl_non_common**, !dbg !3735
  %1 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** %0, align 8, !dbg !3735
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %1, i64 0, i32 2, !dbg !3735
  br label %for.cond1, !dbg !3739

for.cond1:                                        ; preds = %for.inc, %for.body
  %arg.0.in = phi %union.tree_node** [ %arguments, %for.body ], [ %chain, %for.inc ]
  %arg.0 = load %union.tree_node*, %union.tree_node** %arg.0.in, align 8, !dbg !3740
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !3727, metadata !DIExpression()), !dbg !3728
  %tobool2 = icmp eq %union.tree_node* %arg.0, null, !dbg !3741
  br i1 %tobool2, label %for.end, label %for.body3, !dbg !3741

for.body3:                                        ; preds = %for.cond1
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3742
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3742
  %call4 = tail call zeroext i8 @variably_modified_type_p(%union.tree_node* %2, %union.tree_node* %orig_fndecl) #6, !dbg !3745
  %tobool5 = icmp eq i8 %call4, 0, !dbg !3745
  br i1 %tobool5, label %for.inc, label %cleanup.loopexit, !dbg !3746

for.inc:                                          ; preds = %for.body3
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3747
  br label %for.cond1, !dbg !3748, !llvm.loop !3749

for.end:                                          ; preds = %for.cond1
  %decl7 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %cgn.0, i64 0, i32 0, !dbg !3751
  %3 = load %union.tree_node*, %union.tree_node** %decl7, align 8, !dbg !3751
  %call8 = tail call fastcc zeroext i8 @check_for_nested_with_variably_modified(%union.tree_node* %3, %union.tree_node* %orig_fndecl) #7, !dbg !3753
  %tobool9 = icmp eq i8 %call8, 0, !dbg !3753
  br i1 %tobool9, label %for.inc12, label %cleanup.loopexit1, !dbg !3754

for.inc12:                                        ; preds = %for.end
  %next_nested = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %cgn.0, i64 0, i32 7, !dbg !3755
  br label %for.cond, !dbg !3756, !llvm.loop !3757

cleanup.loopexit:                                 ; preds = %for.body3
  br label %cleanup, !dbg !3759

cleanup.loopexit1:                                ; preds = %for.cond, %for.end
  %retval.0.ph = phi i8 [ 0, %for.cond ], [ 1, %for.end ]
  br label %cleanup, !dbg !3759

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit
  %retval.0 = phi i8 [ 1, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], !dbg !3728
  ret i8 %retval.0, !dbg !3759
}

declare dso_local zeroext i8 @variably_modified_type_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.nesting_info* @iter_nestinfo_start(%struct.nesting_info* %root) unnamed_addr #0 !dbg !3760 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root, metadata !3764, metadata !DIExpression()), !dbg !3765
  br label %while.cond, !dbg !3766

while.cond:                                       ; preds = %while.body, %entry
  %root.addr.0 = phi %struct.nesting_info* [ %root, %entry ], [ %0, %while.body ]
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root.addr.0, metadata !3764, metadata !DIExpression()), !dbg !3765
  %inner = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root.addr.0, i64 0, i32 1, !dbg !3767
  %0 = load %struct.nesting_info*, %struct.nesting_info** %inner, align 8, !dbg !3767
  %tobool = icmp eq %struct.nesting_info* %0, null, !dbg !3766
  br i1 %tobool, label %while.end, label %while.body, !dbg !3766

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.nesting_info* %0, metadata !3764, metadata !DIExpression()), !dbg !3765
  br label %while.cond, !dbg !3766, !llvm.loop !3768

while.end:                                        ; preds = %while.cond
  %root.addr.0.lcssa = phi %struct.nesting_info* [ %root.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root.addr.0.lcssa, metadata !3764, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root.addr.0.lcssa, metadata !3764, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root.addr.0.lcssa, metadata !3764, metadata !DIExpression()), !dbg !3765
  ret %struct.nesting_info* %root.addr.0.lcssa, !dbg !3770
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @walk_function(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* %callback_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, %struct.nesting_info* %info) unnamed_addr #0 !dbg !3771 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* %callback_stmt, metadata !3773, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, metadata !3774, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !3775, metadata !DIExpression()), !dbg !3776
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !3777
  %0 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !3777
  %call = tail call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %0) #6, !dbg !3778
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* %callback_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, %struct.nesting_info* %info, %struct.gimple_seq_d* %call) #7, !dbg !3779
  ret void, !dbg !3780
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.nesting_info* @iter_nestinfo_next(%struct.nesting_info* %node) unnamed_addr #0 !dbg !3781 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %node, metadata !3783, metadata !DIExpression()), !dbg !3784
  %next = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %node, i64 0, i32 2, !dbg !3785
  %0 = load %struct.nesting_info*, %struct.nesting_info** %next, align 8, !dbg !3785
  %tobool = icmp eq %struct.nesting_info* %0, null, !dbg !3787
  br i1 %tobool, label %if.end, label %if.then, !dbg !3788

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.nesting_info* @iter_nestinfo_start(%struct.nesting_info* nonnull %0) #7, !dbg !3789
  br label %return, !dbg !3790

if.end:                                           ; preds = %entry
  %outer = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %node, i64 0, i32 0, !dbg !3791
  %1 = load %struct.nesting_info*, %struct.nesting_info** %outer, align 8, !dbg !3791
  br label %return, !dbg !3792

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.nesting_info* [ %call, %if.then ], [ %1, %if.end ], !dbg !3784
  ret %struct.nesting_info* %retval.0, !dbg !3793
}

; Function Attrs: nounwind uwtable
define internal fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* %callback_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, %struct.nesting_info* %info, %struct.gimple_seq_d* %seq) unnamed_addr #5 !dbg !3794 {
entry:
  %wi = alloca %struct.walk_stmt_info, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* %callback_stmt, metadata !3798, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, metadata !3799, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !3800, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !3801, metadata !DIExpression()), !dbg !3803
  %0 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !3804
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !3804
  %call = call i8* @memset(i8* nonnull %0, i32 0, i64 56) #6, !dbg !3805
  %info1 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !3806
  %1 = bitcast i8** %info1 to %struct.nesting_info**, !dbg !3807
  store %struct.nesting_info* %info, %struct.nesting_info** %1, align 8, !dbg !3807
  %val_only = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 3, !dbg !3808
  store i8 1, i8* %val_only, align 8, !dbg !3809
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !3802, metadata !DIExpression(DW_OP_deref)), !dbg !3803
  %call2 = call %union.gimple_statement_d* @walk_gimple_seq(%struct.gimple_seq_d* %seq, %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* %callback_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, %struct.walk_stmt_info* nonnull %wi) #6, !dbg !3810
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !3811
  ret void, !dbg !3811
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @walk_gimple_seq(%struct.gimple_seq_d*, %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, %struct.walk_stmt_info*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3812 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3816, metadata !DIExpression()), !dbg !3817
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3818
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3818
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !3819
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3819
  ret %union.gimple_statement_d* %1, !dbg !3820
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3821 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3826, metadata !DIExpression()), !dbg !3827
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !3828
  %bf.load = load i32, i32* %0, align 8, !dbg !3828
  %bf.clear = and i32 %bf.load, 255, !dbg !3828
  ret i32 %bf.clear, !dbg !3829
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3830 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3834, metadata !DIExpression()), !dbg !3835
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !3836
  ret %union.tree_node* %call, !dbg !3837
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @convert_nonlocal_omp_clauses(%union.tree_node** %pclauses, %struct.walk_stmt_info* %wi) unnamed_addr #5 !dbg !3838 {
entry:
  %dummy = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node** %pclauses, metadata !3842, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !3843, metadata !DIExpression()), !dbg !3863
  %info1 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !3864
  %0 = bitcast i8** %info1 to %struct.nesting_info**, !dbg !3864
  %1 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !3864
  call void @llvm.dbg.value(metadata %struct.nesting_info* %1, metadata !3844, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8 0, metadata !3845, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8 0, metadata !3846, metadata !DIExpression()), !dbg !3863
  %2 = bitcast i32* %dummy to i8*, !dbg !3865
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !3865
  %call = tail call %struct.bitmap_head_def* @bitmap_gc_alloc_stat() #6, !dbg !3866
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !3850, metadata !DIExpression()), !dbg !3863
  %suppress_expansion = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 5, !dbg !3867
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %suppress_expansion, align 8, !dbg !3867
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %3) #6, !dbg !3868
  %val_only = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 3, !dbg !3869
  %is_lhs = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 4, !dbg !3869
  %4 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !3869
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 6, !dbg !3870
  br label %for.cond, !dbg !3872

for.cond:                                         ; preds = %for.inc, %entry
  %need_chain.0 = phi i8 [ 0, %entry ], [ %need_chain.2, %for.inc ], !dbg !3873
  %need_stmts.0 = phi i8 [ 0, %entry ], [ %need_stmts.4, %for.inc ], !dbg !3874
  %clause.0.in = phi %union.tree_node** [ %pclauses, %entry ], [ %chain, %for.inc ]
  %clause.0 = load %union.tree_node*, %union.tree_node** %clause.0.in, align 8, !dbg !3875
  call void @llvm.dbg.value(metadata %union.tree_node* %clause.0, metadata !3847, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8 %need_stmts.0, metadata !3846, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8 %need_chain.0, metadata !3845, metadata !DIExpression()), !dbg !3863
  %tobool = icmp eq %union.tree_node* %clause.0, null, !dbg !3876
  br i1 %tobool, label %for.end, label %for.body, !dbg !3876

for.body:                                         ; preds = %for.cond
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3877
  %6 = load i32, i32* %5, align 4, !dbg !3877
  switch i32 %6, label %sw.default [
    i32 5, label %sw.bb
    i32 4, label %sw.bb4
    i32 1, label %do_decl_clause
    i32 3, label %do_decl_clause
    i32 7, label %do_decl_clause
    i32 2, label %do_decl_clause
    i32 10, label %sw.bb34
    i32 8, label %sw.bb41
    i32 9, label %sw.bb41
    i32 11, label %for.inc
    i32 12, label %for.inc
    i32 13, label %for.inc
    i32 6, label %for.inc
    i32 14, label %for.inc
    i32 15, label %for.inc
  ], !dbg !3878

sw.bb:                                            ; preds = %for.body
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3879
  %arrayidx = getelementptr inbounds i40, i40* %ops, i64 3, !dbg !3879
  %7 = bitcast i40* %arrayidx to %union.tree_node**, !dbg !3879
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !3879
  %tobool3 = icmp eq %union.tree_node* %8, null, !dbg !3879
  %spec.select = select i1 %tobool3, i8 %need_stmts.0, i8 1, !dbg !3881
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !3846, metadata !DIExpression()), !dbg !3863
  br label %do_decl_clause, !dbg !3882

sw.bb4:                                           ; preds = %for.body
  %gimple_reduction_init = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3883
  %9 = bitcast %union.tree_node** %gimple_reduction_init to %struct.gimple_seq_d**, !dbg !3883
  %10 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %9, align 8, !dbg !3883
  %tobool6 = icmp eq %struct.gimple_seq_d* %10, null, !dbg !3883
  %spec.select1 = select i1 %tobool6, i8 %need_stmts.0, i8 1, !dbg !3885
  call void @llvm.dbg.value(metadata i8 %spec.select1, metadata !3846, metadata !DIExpression()), !dbg !3863
  br label %do_decl_clause, !dbg !3886

do_decl_clause:                                   ; preds = %for.body, %for.body, %for.body, %for.body, %sw.bb4, %sw.bb
  %need_stmts.3 = phi i8 [ %spec.select1, %sw.bb4 ], [ %spec.select, %sw.bb ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], !dbg !3863
  call void @llvm.dbg.value(metadata i8 %need_stmts.3, metadata !3846, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.label(metadata !3858), !dbg !3887
  %ops11 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3888
  %arrayidx12 = bitcast i40* %ops11 to %union.tree_node**, !dbg !3888
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !3888
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !3848, metadata !DIExpression()), !dbg !3863
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3889
  %bf.load = load i64, i64* %12, align 8, !dbg !3889
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3891
  %cmp = icmp eq i64 %bf.cast2, 32, !dbg !3891
  br i1 %cmp, label %land.lhs.true, label %if.end24, !dbg !3892

land.lhs.true:                                    ; preds = %do_decl_clause
  %bf.cast163 = and i64 %bf.load, 67108864, !dbg !3893
  %tobool17 = icmp eq i64 %bf.cast163, 0, !dbg !3893
  br i1 %tobool17, label %lor.lhs.false, label %for.inc, !dbg !3894

lor.lhs.false:                                    ; preds = %land.lhs.true
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3895
  %13 = bitcast i40* %decl_flag_1 to i64*, !dbg !3895
  %bf.load18 = load i64, i64* %13, align 8, !dbg !3895
  %bf.cast214 = and i64 %bf.load18, 33554432, !dbg !3895
  %tobool22 = icmp eq i64 %bf.cast214, 0, !dbg !3895
  br i1 %tobool22, label %if.end24, label %for.inc, !dbg !3896

if.end24:                                         ; preds = %lor.lhs.false, %do_decl_clause
  %call25 = call %union.tree_node* @decl_function_context(%union.tree_node* %11) #6, !dbg !3897
  %14 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !3898
  %cmp26 = icmp eq %union.tree_node* %call25, %14, !dbg !3899
  br i1 %cmp26, label %for.inc, label %if.then27, !dbg !3900

if.then27:                                        ; preds = %if.end24
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3901
  %15 = load i32, i32* %uid, align 4, !dbg !3901
  %call28 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %15) #6, !dbg !3903
  %call29 = call fastcc %union.tree_node* @get_nonlocal_debug_decl(%struct.nesting_info* %1, %union.tree_node* %11) #7, !dbg !3904
  store %union.tree_node* %call29, %union.tree_node** %arrayidx12, align 8, !dbg !3905
  call void @llvm.dbg.value(metadata i8 1, metadata !3845, metadata !DIExpression()), !dbg !3863
  br label %for.inc, !dbg !3906

sw.bb34:                                          ; preds = %for.body
  %ops36 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3907
  %arrayidx37 = bitcast i40* %ops36 to %union.tree_node**, !dbg !3907
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx37, align 8, !dbg !3907
  %cmp38 = icmp eq %union.tree_node* %16, null, !dbg !3909
  br i1 %cmp38, label %for.inc, label %sw.bb41, !dbg !3910

sw.bb41:                                          ; preds = %sw.bb34, %for.body, %for.body
  store i8 1, i8* %val_only, align 8, !dbg !3911
  store i8 0, i8* %is_lhs, align 1, !dbg !3912
  %ops43 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3913
  %arrayidx44 = bitcast i40* %ops43 to %union.tree_node**, !dbg !3913
  call void @llvm.dbg.value(metadata i32* %dummy, metadata !3849, metadata !DIExpression(DW_OP_deref)), !dbg !3863
  %call45 = call %union.tree_node* @convert_nonlocal_reference_op(%union.tree_node** nonnull %arrayidx44, i32* nonnull %dummy, i8* %4) #7, !dbg !3914
  br label %for.inc, !dbg !3915

sw.default:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 1116, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3916
  br label %for.inc, !dbg !3917

for.inc:                                          ; preds = %lor.lhs.false, %land.lhs.true, %if.end24, %sw.bb41, %sw.default, %if.then27, %sw.bb34, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %need_chain.2 = phi i8 [ %need_chain.0, %sw.default ], [ %need_chain.0, %sw.bb41 ], [ %need_chain.0, %lor.lhs.false ], [ %need_chain.0, %land.lhs.true ], [ 1, %if.then27 ], [ %need_chain.0, %if.end24 ], [ %need_chain.0, %sw.bb34 ], [ %need_chain.0, %for.body ], [ %need_chain.0, %for.body ], [ %need_chain.0, %for.body ], [ %need_chain.0, %for.body ], [ %need_chain.0, %for.body ], [ %need_chain.0, %for.body ], !dbg !3863
  %need_stmts.4 = phi i8 [ %need_stmts.0, %sw.default ], [ %need_stmts.0, %sw.bb41 ], [ %need_stmts.3, %lor.lhs.false ], [ %need_stmts.3, %land.lhs.true ], [ %need_stmts.3, %if.then27 ], [ %need_stmts.3, %if.end24 ], [ %need_stmts.0, %sw.bb34 ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], !dbg !3874
  call void @llvm.dbg.value(metadata i8 %need_stmts.4, metadata !3846, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8 %need_chain.2, metadata !3845, metadata !DIExpression()), !dbg !3863
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3918
  br label %for.cond, !dbg !3919, !llvm.loop !3920

for.end:                                          ; preds = %for.cond
  %need_chain.0.lcssa = phi i8 [ %need_chain.0, %for.cond ], !dbg !3873
  %need_stmts.0.lcssa = phi i8 [ %need_stmts.0, %for.cond ], !dbg !3874
  call void @llvm.dbg.value(metadata i8 %need_chain.0.lcssa, metadata !3845, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8 %need_stmts.0.lcssa, metadata !3846, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8 %need_chain.0.lcssa, metadata !3845, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8 %need_stmts.0.lcssa, metadata !3846, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8 %need_chain.0.lcssa, metadata !3845, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8 %need_stmts.0.lcssa, metadata !3846, metadata !DIExpression()), !dbg !3863
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %suppress_expansion, align 8, !dbg !3922
  %tobool48 = icmp eq i8 %need_stmts.0.lcssa, 0, !dbg !3923
  br i1 %tobool48, label %if.end90, label %if.then49, !dbg !3924

if.then49:                                        ; preds = %for.end
  %17 = bitcast %union.tree_node** %context to i64*, !dbg !3925
  br label %for.cond50, !dbg !3926

for.cond50:                                       ; preds = %for.inc86, %if.then49
  %clause.1.in = phi %union.tree_node** [ %pclauses, %if.then49 ], [ %chain88, %for.inc86 ]
  %clause.1 = load %union.tree_node*, %union.tree_node** %clause.1.in, align 8, !dbg !3927
  call void @llvm.dbg.value(metadata %union.tree_node* %clause.1, metadata !3847, metadata !DIExpression()), !dbg !3863
  %tobool51 = icmp eq %union.tree_node* %clause.1, null, !dbg !3928
  br i1 %tobool51, label %if.end90.loopexit, label %for.body52, !dbg !3928

for.body52:                                       ; preds = %for.cond50
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3929
  %19 = load i32, i32* %18, align 4, !dbg !3929
  switch i32 %19, label %for.inc86 [
    i32 5, label %sw.bb55
    i32 4, label %sw.bb81
  ], !dbg !3930

sw.bb55:                                          ; preds = %for.body52
  %ops57 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3931
  %arrayidx58 = getelementptr inbounds i40, i40* %ops57, i64 3, !dbg !3931
  %20 = bitcast i40* %arrayidx58 to %union.tree_node**, !dbg !3931
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !3931
  %tobool59 = icmp eq %union.tree_node* %21, null, !dbg !3931
  br i1 %tobool59, label %for.inc86, label %if.then60, !dbg !3932

if.then60:                                        ; preds = %sw.bb55
  %22 = bitcast i40* %arrayidx58 to %struct.tree_decl_minimal**, !dbg !3933
  %context65 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3933
  %23 = bitcast %union.tree_node** %context65 to i64*, !dbg !3933
  %24 = load i64, i64* %23, align 8, !dbg !3933
  %25 = load i64, i64* %17, align 8, !dbg !3934
  store i64 %25, i64* %23, align 8, !dbg !3935
  %gimple_reduction_init73 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3936
  %26 = bitcast %union.tree_node** %gimple_reduction_init73 to %struct.gimple_seq_d**, !dbg !3936
  %27 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %26, align 8, !dbg !3936
  call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_nonlocal_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %27) #7, !dbg !3937
  %gimple_reduction_merge = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3938
  %28 = bitcast %union.tree_node** %gimple_reduction_merge to %struct.gimple_seq_d**, !dbg !3938
  %29 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %28, align 8, !dbg !3938
  call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_nonlocal_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %29) #7, !dbg !3939
  %30 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %22, align 8, !dbg !3940
  %context79 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %30, i64 0, i32 4, !dbg !3940
  %31 = bitcast %union.tree_node** %context79 to i64*, !dbg !3941
  store i64 %24, i64* %31, align 8, !dbg !3941
  br label %for.inc86, !dbg !3942

sw.bb81:                                          ; preds = %for.body52
  %gimple_reduction_init83 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3943
  %32 = bitcast %union.tree_node** %gimple_reduction_init83 to %struct.gimple_seq_d**, !dbg !3943
  %33 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %32, align 8, !dbg !3943
  call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_nonlocal_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_nonlocal_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %33) #7, !dbg !3944
  br label %for.inc86, !dbg !3945

for.inc86:                                        ; preds = %sw.bb55, %sw.bb81, %if.then60, %for.body52
  %chain88 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3946
  br label %for.cond50, !dbg !3947, !llvm.loop !3948

if.end90.loopexit:                                ; preds = %for.cond50
  br label %if.end90, !dbg !3950

if.end90:                                         ; preds = %if.end90.loopexit, %for.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !3950
  ret i8 %need_chain.0.lcssa, !dbg !3951
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_omp_taskreg_clauses_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3952 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3956, metadata !DIExpression()), !dbg !3957
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !3958
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !3960
  ret %union.tree_node** %0, !dbg !3961
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_chain_decl(%struct.nesting_info* %info) unnamed_addr #5 !dbg !3962 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !3966, metadata !DIExpression()), !dbg !3971
  %chain_decl = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 12, !dbg !3972
  %0 = load %union.tree_node*, %union.tree_node** %chain_decl, align 8, !dbg !3972
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3967, metadata !DIExpression()), !dbg !3971
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !3973
  br i1 %tobool, label %if.then, label %if.end37, !dbg !3974

if.then:                                          ; preds = %entry
  %outer = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 0, !dbg !3975
  %1 = load %struct.nesting_info*, %struct.nesting_info** %outer, align 8, !dbg !3975
  %call = tail call fastcc %union.tree_node* @get_frame_type(%struct.nesting_info* %1) #7, !dbg !3976
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3968, metadata !DIExpression()), !dbg !3977
  %call1 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %call) #6, !dbg !3978
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3968, metadata !DIExpression()), !dbg !3977
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !3979
  %2 = bitcast %union.tree_node** %context to %struct.tree_decl_minimal**, !dbg !3979
  %3 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %2, align 8, !dbg !3979
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %3, i64 0, i32 1, !dbg !3979
  %4 = load i32, i32* %locus, align 8, !dbg !3979
  %call2 = tail call %union.tree_node* @create_tmp_var_name(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3979
  %call3 = tail call %union.tree_node* @build_decl_stat(i32 %4, i32 34, %union.tree_node* %call2, %union.tree_node* %call1) #6, !dbg !3979
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !3967, metadata !DIExpression()), !dbg !3971
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3980
  %5 = bitcast i40* %artificial_flag to i64*, !dbg !3980
  %bf.load = load i64, i64* %5, align 8, !dbg !3981
  %bf.set7 = or i64 %bf.load, 5120, !dbg !3982
  store i64 %bf.set7, i64* %5, align 8, !dbg !3982
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3983
  %bf.load8 = load i64, i64* %6, align 8, !dbg !3984
  %bf.set10 = or i64 %bf.load8, 16777216, !dbg !3984
  store i64 %bf.set10, i64* %6, align 8, !dbg !3984
  %7 = bitcast %union.tree_node** %context to i64*, !dbg !3985
  %8 = load i64, i64* %7, align 8, !dbg !3985
  %context13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3986
  %9 = bitcast %union.tree_node** %context13 to i64*, !dbg !3987
  store i64 %8, i64* %9, align 8, !dbg !3987
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3988
  store %union.tree_node* %call1, %union.tree_node** %initial, align 8, !dbg !3989
  %bf.set18 = or i64 %bf.load8, 17825792, !dbg !3990
  store i64 %bf.set18, i64* %6, align 8, !dbg !3990
  store %union.tree_node* %call3, %union.tree_node** %chain_decl, align 8, !dbg !3991
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3992
  %tobool20 = icmp eq %struct._IO_FILE* %10, null, !dbg !3992
  br i1 %tobool20, label %if.end, label %land.lhs.true, !dbg !3994

land.lhs.true:                                    ; preds = %if.then
  %11 = load i32, i32* @dump_flags, align 4, !dbg !3995
  %and = and i32 %11, 8, !dbg !3996
  %tobool21 = icmp eq i32 %and, 0, !dbg !3996
  br i1 %tobool21, label %if.end, label %land.lhs.true22, !dbg !3997

land.lhs.true22:                                  ; preds = %land.lhs.true
  %12 = bitcast %union.tree_node** %context to %struct.tree_function_decl**, !dbg !3998
  %13 = load %struct.tree_function_decl*, %struct.tree_function_decl** %12, align 8, !dbg !3998
  %regdecl_flag = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %13, i64 0, i32 5, !dbg !3998
  %bf.load24 = load i32, i32* %regdecl_flag, align 8, !dbg !3998
  %bf.clear25 = and i32 %bf.load24, 4194304, !dbg !3998
  %tobool26 = icmp eq i32 %bf.clear25, 0, !dbg !3998
  br i1 %tobool26, label %if.then27, label %if.end, !dbg !3999

if.then27:                                        ; preds = %land.lhs.true22
  %14 = bitcast %struct.tree_function_decl* %13 to %union.tree_node*, !dbg !3999
  %15 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !4000
  %call29 = tail call i8* %15(%union.tree_node* %14, i32 2) #6, !dbg !4001
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), i8* %call29) #6, !dbg !4002
  br label %if.end, !dbg !4002

if.end:                                           ; preds = %land.lhs.true22, %land.lhs.true, %if.then, %if.then27
  %16 = bitcast %union.tree_node** %context to %struct.tree_function_decl**, !dbg !4003
  %17 = load %struct.tree_function_decl*, %struct.tree_function_decl** %16, align 8, !dbg !4003
  %regdecl_flag33 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %17, i64 0, i32 5, !dbg !4003
  %bf.load34 = load i32, i32* %regdecl_flag33, align 8, !dbg !4004
  %bf.set36 = or i32 %bf.load34, 4194304, !dbg !4004
  store i32 %bf.set36, i32* %regdecl_flag33, align 8, !dbg !4004
  br label %if.end37, !dbg !4005

if.end37:                                         ; preds = %entry, %if.end
  %decl.0 = phi %union.tree_node* [ %0, %entry ], [ %call3, %if.end ], !dbg !3971
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !3967, metadata !DIExpression()), !dbg !3971
  ret %union.tree_node* %decl.0, !dbg !4006
}

declare dso_local %union.tree_node* @build_omp_clause(i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4007 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4011, metadata !DIExpression()), !dbg !4012
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !4013
  %0 = load i32, i32* %location, align 8, !dbg !4013
  ret i32 %0, !dbg !4014
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_omp_taskreg_clauses(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4015 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4017, metadata !DIExpression()), !dbg !4018
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4019
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !4021
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4021
  ret %union.tree_node* %1, !dbg !4022
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_taskreg_set_clauses(%union.gimple_statement_d* %gs, %union.tree_node* %clauses) unnamed_addr #0 !dbg !4023 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4027, metadata !DIExpression()), !dbg !4029
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses, metadata !4028, metadata !DIExpression()), !dbg !4029
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4030
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !4032
  store %union.tree_node* %clauses, %union.tree_node** %0, align 8, !dbg !4033
  ret void, !dbg !4034
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4035 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4039, metadata !DIExpression()), !dbg !4040
  %body = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !4041
  %0 = bitcast i32* %body to %struct.gimple_seq_d**, !dbg !4041
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !4041
  ret %struct.gimple_seq_d* %1, !dbg !4042
}

declare dso_local void @declare_vars(%union.tree_node*, %union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4043 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4050, metadata !DIExpression()), !dbg !4052
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) #7, !dbg !4053
  call void @llvm.dbg.value(metadata %struct.gimple_seq_node_d* %call, metadata !4051, metadata !DIExpression()), !dbg !4052
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !4054
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4054

cond.true:                                        ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !4055
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4055
  br label %cond.end, !dbg !4054

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.gimple_statement_d* [ %0, %cond.true ], [ null, %entry ], !dbg !4054
  ret %union.gimple_statement_d* %cond, !dbg !4056
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_omp_for_clauses_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4057 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4059, metadata !DIExpression()), !dbg !4060
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !4061
  ret %union.tree_node** %0, !dbg !4062
}

; Function Attrs: nounwind uwtable
define internal fastcc void @walk_gimple_omp_for(%union.gimple_statement_d* %for_stmt, %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* %callback_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, %struct.nesting_info* %info) unnamed_addr #5 !dbg !4063 {
entry:
  %wi = alloca %struct.walk_stmt_info, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %pre_body = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %for_stmt, metadata !4067, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* %callback_stmt, metadata !4068, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, metadata !4069, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4070, metadata !DIExpression()), !dbg !4078
  %0 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !4079
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !4079
  %call = tail call fastcc %struct.gimple_seq_d* @gimple_omp_for_pre_body(%union.gimple_statement_d* %for_stmt) #7, !dbg !4080
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* %callback_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, %struct.nesting_info* %info, %struct.gimple_seq_d* %call) #7, !dbg !4081
  %call1 = tail call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !4082
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call1, metadata !4072, metadata !DIExpression()), !dbg !4078
  %call2 = call i8* @memset(i8* nonnull %0, i32 0, i64 56) #6, !dbg !4083
  %info3 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !4084
  %1 = bitcast i8** %info3 to %struct.nesting_info**, !dbg !4085
  store %struct.nesting_info* %info, %struct.nesting_info** %1, align 8, !dbg !4085
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4086
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4086
  call fastcc void @gsi_last(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %call1) #7, !dbg !4086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !4086
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4086
  call void @llvm.dbg.value(metadata i64 0, metadata !4074, metadata !DIExpression()), !dbg !4078
  %val_only = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 3, !dbg !4087
  %is_lhs = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 4, !dbg !4087
  br label %for.cond, !dbg !4091

for.cond:                                         ; preds = %cond.end, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %cond.end ], !dbg !4092
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4074, metadata !DIExpression()), !dbg !4078
  %call4 = call fastcc i64 @gimple_omp_for_collapse(%union.gimple_statement_d* %for_stmt) #7, !dbg !4093
  %cmp = icmp ult i64 %i.0, %call4, !dbg !4094
  br i1 %cmp, label %for.body, label %for.end, !dbg !4095

for.body:                                         ; preds = %for.cond
  store i8 0, i8* %val_only, align 8, !dbg !4096
  %call5 = call fastcc %union.tree_node** @gimple_omp_for_index_ptr(%union.gimple_statement_d* %for_stmt, i64 %i.0) #7, !dbg !4097
  %call6 = call %union.tree_node* @walk_tree_1(%union.tree_node** %call5, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, i8* nonnull %0, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !4097
  store i8 1, i8* %val_only, align 8, !dbg !4098
  store i8 0, i8* %is_lhs, align 1, !dbg !4099
  %call8 = call fastcc %union.tree_node** @gimple_omp_for_initial_ptr(%union.gimple_statement_d* %for_stmt, i64 %i.0) #7, !dbg !4100
  %call9 = call %union.tree_node* @walk_tree_1(%union.tree_node** %call8, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, i8* nonnull %0, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !4100
  store i8 1, i8* %val_only, align 8, !dbg !4101
  store i8 0, i8* %is_lhs, align 1, !dbg !4102
  %call12 = call fastcc %union.tree_node** @gimple_omp_for_final_ptr(%union.gimple_statement_d* %for_stmt, i64 %i.0) #7, !dbg !4103
  %call13 = call %union.tree_node* @walk_tree_1(%union.tree_node** %call12, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, i8* nonnull %0, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !4103
  %call14 = call fastcc %union.tree_node* @gimple_omp_for_incr(%union.gimple_statement_d* %for_stmt, i64 %i.0) #7, !dbg !4104
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !4073, metadata !DIExpression()), !dbg !4078
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4105
  %bf.load = load i64, i64* %3, align 8, !dbg !4105
  %bf.cast = and i64 %bf.load, 65535, !dbg !4105
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4105
  %4 = load i32, i32* %arrayidx, align 4, !dbg !4105
  %cmp15 = icmp eq i32 %4, 7, !dbg !4105
  br i1 %cmp15, label %cond.end, label %cond.true, !dbg !4105

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 640, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4105
  br label %cond.end, !dbg !4105

cond.end:                                         ; preds = %for.body, %cond.true
  store i8 0, i8* %val_only, align 8, !dbg !4106
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4107
  %call18 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %operands, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, i8* nonnull %0, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !4107
  store i8 1, i8* %val_only, align 8, !dbg !4108
  store i8 0, i8* %is_lhs, align 1, !dbg !4109
  %arrayidx23 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !4110
  %call24 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx23, %union.tree_node* (%union.tree_node**, i32*, i8*)* %callback_op, i8* nonnull %0, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !4110
  %inc = add i64 %i.0, 1, !dbg !4111
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4074, metadata !DIExpression()), !dbg !4078
  br label %for.cond, !dbg !4112, !llvm.loop !4113

for.end:                                          ; preds = %for.cond
  %call25 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %call1) #7, !dbg !4115
  %tobool = icmp eq i8 %call25, 0, !dbg !4115
  br i1 %tobool, label %if.else, label %if.then, !dbg !4116

if.then:                                          ; preds = %for.end
  call void @gimple_seq_free(%struct.gimple_seq_d* %call1) #6, !dbg !4117
  br label %if.end, !dbg !4117

if.else:                                          ; preds = %for.end
  %5 = bitcast %struct.gimple_seq_d** %pre_body to i8*, !dbg !4118
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !4118
  %call26 = call fastcc %struct.gimple_seq_d* @gimple_omp_for_pre_body(%union.gimple_statement_d* %for_stmt) #7, !dbg !4119
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call26, metadata !4075, metadata !DIExpression()), !dbg !4120
  store %struct.gimple_seq_d* %call26, %struct.gimple_seq_d** %pre_body, align 8, !dbg !4121
  %call27 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %for_stmt) #7, !dbg !4122
  call void @annotate_all_with_location(%struct.gimple_seq_d* %call1, i32 %call27) #6, !dbg !4123
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_body, metadata !4075, metadata !DIExpression(DW_OP_deref)), !dbg !4120
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %pre_body, %struct.gimple_seq_d* %call1) #6, !dbg !4124
  %6 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %pre_body, align 8, !dbg !4125
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %6, metadata !4075, metadata !DIExpression()), !dbg !4120
  call fastcc void @gimple_omp_for_set_pre_body(%union.gimple_statement_d* %for_stmt, %struct.gimple_seq_d* %6) #7, !dbg !4126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !4127
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !4128
  ret void, !dbg !4128
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_omp_sections_clauses_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4129 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4131, metadata !DIExpression()), !dbg !4132
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !4133
  ret %union.tree_node** %0, !dbg !4134
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_omp_single_clauses_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4135 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4137, metadata !DIExpression()), !dbg !4138
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !4139
  ret %union.tree_node** %0, !dbg !4140
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_bind_block(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4141 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4143, metadata !DIExpression()), !dbg !4144
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !4145
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4145
  ret %union.tree_node* %1, !dbg !4146
}

; Function Attrs: nounwind uwtable
define internal fastcc void @note_nonlocal_block_vlas(%struct.nesting_info* %info, %union.tree_node* %block) unnamed_addr #5 !dbg !4147 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4151, metadata !DIExpression()), !dbg !4154
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !4152, metadata !DIExpression()), !dbg !4154
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4155
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !4157
  br label %for.cond, !dbg !4160

for.cond:                                         ; preds = %for.inc, %entry
  %var.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.inc ]
  %var.0 = load %union.tree_node*, %union.tree_node** %var.0.in, align 8, !dbg !4161
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !4153, metadata !DIExpression()), !dbg !4154
  %tobool = icmp eq %union.tree_node* %var.0, null, !dbg !4162
  br i1 %tobool, label %for.end, label %for.body, !dbg !4162

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4163
  %bf.load = load i64, i64* %1, align 8, !dbg !4163
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4164
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !4164
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !4165

land.lhs.true:                                    ; preds = %for.body
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4166
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4166
  %call = tail call zeroext i8 @variably_modified_type_p(%union.tree_node* %2, %union.tree_node* null) #6, !dbg !4167
  %tobool2 = icmp eq i8 %call, 0, !dbg !4167
  br i1 %tobool2, label %for.inc, label %land.lhs.true3, !dbg !4168

land.lhs.true3:                                   ; preds = %land.lhs.true
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4169
  %3 = bitcast i40* %decl_flag_2 to i64*, !dbg !4169
  %bf.load4 = load i64, i64* %3, align 8, !dbg !4169
  %bf.cast62 = and i64 %bf.load4, 67108864, !dbg !4169
  %tobool7 = icmp eq i64 %bf.cast62, 0, !dbg !4169
  br i1 %tobool7, label %for.inc, label %land.lhs.true8, !dbg !4170

land.lhs.true8:                                   ; preds = %land.lhs.true3
  %call9 = tail call %union.tree_node* @decl_function_context(%union.tree_node* nonnull %var.0) #6, !dbg !4171
  %4 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !4172
  %cmp10 = icmp eq %union.tree_node* %call9, %4, !dbg !4173
  br i1 %cmp10, label %for.inc, label %if.then, !dbg !4174

if.then:                                          ; preds = %land.lhs.true8
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4175
  tail call fastcc void @note_nonlocal_vla_type(%struct.nesting_info* %info, %union.tree_node* %5) #7, !dbg !4176
  br label %for.inc, !dbg !4176

for.inc:                                          ; preds = %land.lhs.true8, %land.lhs.true3, %land.lhs.true, %for.body, %if.then
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4177
  br label %for.cond, !dbg !4178, !llvm.loop !4179

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4181
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4182 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4186, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.value(metadata i32 %i, metadata !4187, metadata !DIExpression()), !dbg !4188
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4189
  %tobool = icmp eq i8 %call, 0, !dbg !4189
  br i1 %tobool, label %return, label %if.then, !dbg !4191

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4192
  %idxprom = zext i32 %i to i64, !dbg !4192
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !4192
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4192
  br label %return, !dbg !4194

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !4195
  ret %union.tree_node* %retval.0, !dbg !4196
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4197 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4201, metadata !DIExpression()), !dbg !4202
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4203
  %cmp = icmp eq i32 %call, 0, !dbg !4204
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !4205

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4206
  %cmp2 = icmp ult i32 %call1, 10, !dbg !4207
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4208
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4209 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4211, metadata !DIExpression()), !dbg !4213
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !4214
  %idxprom = zext i32 %call to i64, !dbg !4215
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !4215
  %0 = load i64, i64* %arrayidx, align 8, !dbg !4215
  call void @llvm.dbg.value(metadata i64 %0, metadata !4212, metadata !DIExpression()), !dbg !4213
  %cmp = icmp eq i64 %0, 0, !dbg !4216
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4216

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4216
  br label %cond.end, !dbg !4216

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !4217
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !4218
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !4219
  ret %union.tree_node** %2, !dbg !4220
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4221 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4225, metadata !DIExpression()), !dbg !4226
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4227
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !4228
  ret i32 %call1, !dbg !4229
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !4230 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4234, metadata !DIExpression()), !dbg !4235
  %idxprom = zext i32 %code to i64, !dbg !4236
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !4236
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4236
  ret i32 %0, !dbg !4237
}

declare dso_local %struct.bitmap_head_def* @bitmap_gc_alloc_stat() local_unnamed_addr #2

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local %union.tree_node* @decl_function_context(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_nonlocal_debug_decl(%struct.nesting_info* %info, %union.tree_node* %decl) unnamed_addr #5 !dbg !4238 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4242, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4243, metadata !DIExpression()), !dbg !4250
  %var_map = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 4, !dbg !4251
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** %var_map, align 8, !dbg !4251
  %1 = bitcast %union.tree_node* %decl to i8*, !dbg !4252
  %call = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !4253
  call void @llvm.dbg.value(metadata i8** %call, metadata !4249, metadata !DIExpression()), !dbg !4250
  %2 = load i8*, i8** %call, align 8, !dbg !4254
  %tobool = icmp eq i8* %2, null, !dbg !4254
  br i1 %tobool, label %if.end, label %if.then, !dbg !4256

if.then:                                          ; preds = %entry
  %3 = bitcast i8* %2 to %union.tree_node*, !dbg !4256
  br label %cleanup, !dbg !4257

if.end:                                           ; preds = %entry
  %call1 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %decl) #6, !dbg !4258
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4244, metadata !DIExpression()), !dbg !4250
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !4259
  %4 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !4259
  %cmp = icmp eq %union.tree_node* %4, %call1, !dbg !4261
  br i1 %cmp, label %if.then2, label %if.else, !dbg !4262

if.then2:                                         ; preds = %if.end
  %call3 = tail call fastcc %union.tree_node* @get_frame_type(%struct.nesting_info* %info) #7, !dbg !4263
  %frame_decl = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 10, !dbg !4265
  %5 = load %union.tree_node*, %union.tree_node** %frame_decl, align 8, !dbg !4265
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4246, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4245, metadata !DIExpression()), !dbg !4250
  br label %if.end20, !dbg !4266

if.else:                                          ; preds = %if.end
  %call4 = tail call fastcc %union.tree_node* @get_chain_decl(%struct.nesting_info* %info) #7, !dbg !4267
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !4246, metadata !DIExpression()), !dbg !4250
  br label %for.cond, !dbg !4269

for.cond:                                         ; preds = %for.body, %if.else
  %info.pn = phi %struct.nesting_info* [ %info, %if.else ], [ %i.0, %for.body ]
  %x.0 = phi %union.tree_node* [ %call4, %if.else ], [ %call13, %for.body ], !dbg !4271
  %i.0.in = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info.pn, i64 0, i32 0, !dbg !4272
  %i.0 = load %struct.nesting_info*, %struct.nesting_info** %i.0.in, align 8, !dbg !4272
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0, metadata !4246, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.0, metadata !4245, metadata !DIExpression()), !dbg !4250
  %context5 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i.0, i64 0, i32 6, !dbg !4273
  %6 = load %union.tree_node*, %union.tree_node** %context5, align 8, !dbg !4273
  %cmp6 = icmp eq %union.tree_node* %6, %call1, !dbg !4275
  br i1 %cmp6, label %for.end, label %for.body, !dbg !4276

for.body:                                         ; preds = %for.cond
  %call7 = tail call fastcc %union.tree_node* @get_chain_field(%struct.nesting_info* %i.0) #7, !dbg !4277
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !4247, metadata !DIExpression()), !dbg !4250
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4279
  %7 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !4279
  %8 = load %struct.tree_common*, %struct.tree_common** %7, align 8, !dbg !4279
  %type9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 2, !dbg !4279
  %9 = load %union.tree_node*, %union.tree_node** %type9, align 8, !dbg !4279
  %call10 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %9, %union.tree_node* %x.0) #6, !dbg !4279
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !4246, metadata !DIExpression()), !dbg !4250
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4280
  %10 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !4280
  %call13 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %10, %union.tree_node* %call10, %union.tree_node* %call7, %union.tree_node* null) #6, !dbg !4280
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !4246, metadata !DIExpression()), !dbg !4250
  br label %for.cond, !dbg !4281, !llvm.loop !4282

for.end:                                          ; preds = %for.cond
  %x.0.lcssa = phi %union.tree_node* [ %x.0, %for.cond ], !dbg !4271
  %i.0.lcssa = phi %struct.nesting_info* [ %i.0, %for.cond ], !dbg !4272
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa, metadata !4246, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa, metadata !4246, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa, metadata !4246, metadata !DIExpression()), !dbg !4250
  %type16 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4284
  %11 = bitcast %union.tree_node** %type16 to %struct.tree_common**, !dbg !4284
  %12 = load %struct.tree_common*, %struct.tree_common** %11, align 8, !dbg !4284
  %type18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %12, i64 0, i32 2, !dbg !4284
  %13 = load %union.tree_node*, %union.tree_node** %type18, align 8, !dbg !4284
  %call19 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %13, %union.tree_node* %x.0.lcssa) #6, !dbg !4284
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !4246, metadata !DIExpression()), !dbg !4250
  br label %if.end20

if.end20:                                         ; preds = %for.end, %if.then2
  %i.1 = phi %struct.nesting_info* [ %info, %if.then2 ], [ %i.0.lcssa, %for.end ], !dbg !4285
  %x.1 = phi %union.tree_node* [ %5, %if.then2 ], [ %call19, %for.end ], !dbg !4285
  call void @llvm.dbg.value(metadata %union.tree_node* %x.1, metadata !4246, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.1, metadata !4245, metadata !DIExpression()), !dbg !4250
  %call21 = tail call fastcc %union.tree_node* @lookup_field_for_decl(%struct.nesting_info* %i.1, %union.tree_node* %decl, i32 1) #7, !dbg !4286
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !4247, metadata !DIExpression()), !dbg !4250
  %type23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4287
  %14 = load %union.tree_node*, %union.tree_node** %type23, align 8, !dbg !4287
  %call24 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %14, %union.tree_node* %x.1, %union.tree_node* %call21, %union.tree_node* null) #6, !dbg !4287
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !4246, metadata !DIExpression()), !dbg !4250
  %call25 = tail call fastcc zeroext i8 @use_pointer_in_frame(%union.tree_node* %decl) #7, !dbg !4288
  %tobool26 = icmp eq i8 %call25, 0, !dbg !4288
  br i1 %tobool26, label %if.end33, label %if.then27, !dbg !4290

if.then27:                                        ; preds = %if.end20
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %call24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4291
  %15 = bitcast %union.tree_node** %type29 to %struct.tree_common**, !dbg !4291
  %16 = load %struct.tree_common*, %struct.tree_common** %15, align 8, !dbg !4291
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 2, !dbg !4291
  %17 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !4291
  %call32 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %17, %union.tree_node* %call24) #6, !dbg !4291
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !4246, metadata !DIExpression()), !dbg !4250
  br label %if.end33, !dbg !4292

if.end33:                                         ; preds = %if.end20, %if.then27
  %x.2 = phi %union.tree_node* [ %call32, %if.then27 ], [ %call24, %if.end20 ], !dbg !4250
  call void @llvm.dbg.value(metadata %union.tree_node* %x.2, metadata !4246, metadata !DIExpression()), !dbg !4250
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4293
  %18 = load i32, i32* %locus, align 8, !dbg !4293
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4293
  %19 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !4293
  %type36 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4293
  %20 = load %union.tree_node*, %union.tree_node** %type36, align 8, !dbg !4293
  %call37 = tail call %union.tree_node* @build_decl_stat(i32 %18, i32 32, %union.tree_node* %19, %union.tree_node* %20) #6, !dbg !4293
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !4248, metadata !DIExpression()), !dbg !4250
  %21 = bitcast %union.tree_node** %context to i64*, !dbg !4294
  %22 = load i64, i64* %21, align 8, !dbg !4294
  %context40 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4295
  %23 = bitcast %union.tree_node** %context40 to i64*, !dbg !4296
  store i64 %22, i64* %23, align 8, !dbg !4296
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4297
  %24 = bitcast i40* %artificial_flag to i64*, !dbg !4297
  %bf.load = load i64, i64* %24, align 8, !dbg !4297
  %bf.cast = and i64 %bf.load, 4096, !dbg !4297
  %artificial_flag42 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4298
  %25 = bitcast i40* %artificial_flag42 to i64*, !dbg !4298
  %bf.load43 = load i64, i64* %25, align 8, !dbg !4299
  %bf.clear44 = and i64 %bf.load43, -4097, !dbg !4299
  %bf.set = or i64 %bf.clear44, %bf.cast, !dbg !4299
  store i64 %bf.set, i64* %25, align 8, !dbg !4299
  %bf.load46 = load i64, i64* %24, align 8, !dbg !4300
  %bf.cast49 = and i64 %bf.load46, 1024, !dbg !4300
  %bf.clear55 = and i64 %bf.set, -1025, !dbg !4301
  %bf.set56 = or i64 %bf.clear55, %bf.cast49, !dbg !4301
  store i64 %bf.set56, i64* %25, align 8, !dbg !4301
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4302
  %bf.load58 = load i64, i64* %26, align 8, !dbg !4302
  %bf.cast61 = and i64 %bf.load58, 524288, !dbg !4302
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4303
  %bf.load63 = load i64, i64* %27, align 8, !dbg !4304
  %bf.clear66 = and i64 %bf.load63, -524289, !dbg !4304
  %bf.set67 = or i64 %bf.clear66, %bf.cast61, !dbg !4304
  store i64 %bf.set67, i64* %27, align 8, !dbg !4304
  %bf.load70 = load i64, i64* %26, align 8, !dbg !4305
  %bf.cast73 = and i64 %bf.load70, 65536, !dbg !4305
  %bf.clear78 = and i64 %bf.set67, -65537, !dbg !4306
  %bf.set79 = or i64 %bf.clear78, %bf.cast73, !dbg !4306
  store i64 %bf.set79, i64* %27, align 8, !dbg !4306
  %bf.load82 = load i64, i64* %26, align 8, !dbg !4307
  %bf.cast85 = and i64 %bf.load82, 1048576, !dbg !4307
  %bf.clear90 = and i64 %bf.set79, -1048577, !dbg !4308
  %bf.set91 = or i64 %bf.clear90, %bf.cast85, !dbg !4308
  store i64 %bf.set91, i64* %27, align 8, !dbg !4308
  %bf.load94 = load i64, i64* %26, align 8, !dbg !4309
  %bf.cast97 = and i64 %bf.load94, 262144, !dbg !4309
  %bf.clear102 = and i64 %bf.set91, -262145, !dbg !4310
  %bf.set103 = or i64 %bf.clear102, %bf.cast97, !dbg !4310
  store i64 %bf.set103, i64* %27, align 8, !dbg !4310
  %seen_in_bind_expr = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4311
  %28 = bitcast i24* %seen_in_bind_expr to i32*, !dbg !4311
  %bf.load105 = load i32, i32* %28, align 8, !dbg !4312
  %bf.set107 = or i32 %bf.load105, 256, !dbg !4312
  store i32 %bf.set107, i32* %28, align 8, !dbg !4312
  %bf.load109 = load i64, i64* %26, align 8, !dbg !4313
  %bf.cast1111 = and i64 %bf.load109, 65535, !dbg !4315
  %cmp112 = icmp eq i64 %bf.cast1111, 34, !dbg !4315
  br i1 %cmp112, label %land.lhs.true, label %lor.lhs.false, !dbg !4316

lor.lhs.false:                                    ; preds = %if.end33
  %cmp117 = icmp eq i64 %bf.cast1111, 36, !dbg !4317
  br i1 %cmp117, label %land.lhs.true, label %lor.lhs.false118, !dbg !4318

lor.lhs.false118:                                 ; preds = %lor.lhs.false
  %cmp123 = icmp eq i64 %bf.cast1111, 32, !dbg !4319
  br i1 %cmp123, label %land.lhs.true, label %if.end136, !dbg !4320

land.lhs.true:                                    ; preds = %lor.lhs.false118, %lor.lhs.false, %if.end33
  %bf.load125 = load i64, i64* %24, align 8, !dbg !4321
  %bf.cast1284 = and i64 %bf.load125, 268435456, !dbg !4321
  %tobool129 = icmp eq i64 %bf.cast1284, 0, !dbg !4321
  br i1 %tobool129, label %if.end136, label %if.then130, !dbg !4322

if.then130:                                       ; preds = %land.lhs.true
  %bf.set135 = or i64 %bf.set56, 268435456, !dbg !4323
  store i64 %bf.set135, i64* %25, align 8, !dbg !4323
  br label %if.end136, !dbg !4324

if.end136:                                        ; preds = %land.lhs.true, %if.then130, %lor.lhs.false118
  tail call void @decl_value_expr_insert(%union.tree_node* %call37, %union.tree_node* %x.2) #6, !dbg !4325
  %bf.load138 = load i64, i64* %25, align 8, !dbg !4326
  %bf.set140 = or i64 %bf.load138, 67108864, !dbg !4326
  store i64 %bf.set140, i64* %25, align 8, !dbg !4326
  %29 = bitcast i8** %call to %union.tree_node**, !dbg !4327
  store %union.tree_node* %call37, %union.tree_node** %29, align 8, !dbg !4327
  %debug_var_chain = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 8, !dbg !4328
  %30 = bitcast %union.tree_node** %debug_var_chain to i64*, !dbg !4328
  %31 = load i64, i64* %30, align 8, !dbg !4328
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4329
  %32 = bitcast %union.tree_node** %chain to i64*, !dbg !4330
  store i64 %31, i64* %32, align 8, !dbg !4330
  store %union.tree_node* %call37, %union.tree_node** %debug_var_chain, align 8, !dbg !4331
  %33 = load i32, i32* @optimize, align 4, !dbg !4332
  %tobool143 = icmp eq i32 %33, 0, !dbg !4332
  br i1 %tobool143, label %land.lhs.true144, label %cleanup, !dbg !4334

land.lhs.true144:                                 ; preds = %if.end136
  %34 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !4335
  %cmp146 = icmp eq %union.tree_node* %34, %call1, !dbg !4336
  br i1 %cmp146, label %cleanup, label %land.lhs.true147, !dbg !4337

land.lhs.true147:                                 ; preds = %land.lhs.true144
  %35 = load %union.tree_node*, %union.tree_node** %type36, align 8, !dbg !4338
  %call150 = tail call zeroext i8 @variably_modified_type_p(%union.tree_node* %35, %union.tree_node* null) #6, !dbg !4339
  %tobool151 = icmp eq i8 %call150, 0, !dbg !4339
  br i1 %tobool151, label %cleanup, label %if.then152, !dbg !4340

if.then152:                                       ; preds = %land.lhs.true147
  %36 = load %union.tree_node*, %union.tree_node** %type36, align 8, !dbg !4341
  tail call fastcc void @note_nonlocal_vla_type(%struct.nesting_info* %info, %union.tree_node* %36) #7, !dbg !4342
  br label %cleanup, !dbg !4342

cleanup:                                          ; preds = %land.lhs.true147, %land.lhs.true144, %if.end136, %if.then152, %if.then
  %retval.0 = phi %union.tree_node* [ %3, %if.then ], [ %call37, %if.then152 ], [ %call37, %land.lhs.true147 ], [ %call37, %land.lhs.true144 ], [ %call37, %if.end136 ], !dbg !4250
  ret %union.tree_node* %retval.0, !dbg !4343
}

declare dso_local i8** @pointer_map_insert(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_frame_type(%struct.nesting_info* %info) unnamed_addr #5 !dbg !4344 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4346, metadata !DIExpression()), !dbg !4351
  %frame_type = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 9, !dbg !4352
  %0 = load %union.tree_node*, %union.tree_node** %frame_type, align 8, !dbg !4352
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4347, metadata !DIExpression()), !dbg !4351
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !4353
  br i1 %tobool, label %if.then, label %if.end, !dbg !4354

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @make_node_stat(i32 16) #6, !dbg !4355
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4347, metadata !DIExpression()), !dbg !4351
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !4356
  %1 = bitcast %union.tree_node** %context to %struct.tree_decl_minimal**, !dbg !4356
  %2 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %1, align 8, !dbg !4356
  %name1 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %2, i64 0, i32 3, !dbg !4356
  %3 = bitcast %union.tree_node** %name1 to %struct.tree_identifier**, !dbg !4356
  %4 = load %struct.tree_identifier*, %struct.tree_identifier** %3, align 8, !dbg !4356
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %4, i64 0, i32 1, i32 0, !dbg !4356
  %5 = load i8*, i8** %str, align 8, !dbg !4356
  %call2 = tail call i8* (i8*, ...) @concat(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* %5, i8* null) #6, !dbg !4357
  call void @llvm.dbg.value(metadata i8* %call2, metadata !4348, metadata !DIExpression()), !dbg !4358
  %call3 = tail call %union.tree_node* @get_identifier(i8* %call2) #6, !dbg !4359
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4360
  store %union.tree_node* %call3, %union.tree_node** %6, align 8, !dbg !4361
  tail call void @free(i8* %call2) #6, !dbg !4362
  store %union.tree_node* %call, %union.tree_node** %frame_type, align 8, !dbg !4363
  %call7 = tail call fastcc %union.tree_node* @create_tmp_var_for(%struct.nesting_info* %info, %union.tree_node* %call, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #7, !dbg !4364
  %frame_decl = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 10, !dbg !4365
  store %union.tree_node* %call7, %union.tree_node** %frame_decl, align 8, !dbg !4366
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4367
  %bf.load = load i64, i64* %.cast, align 8, !dbg !4368
  %bf.set = or i64 %bf.load, 262144, !dbg !4368
  store i64 %bf.set, i64* %.cast, align 8, !dbg !4368
  br label %if.end, !dbg !4369

if.end:                                           ; preds = %entry, %if.then
  %type.0 = phi %union.tree_node* [ %0, %entry ], [ %call, %if.then ], !dbg !4351
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !4347, metadata !DIExpression()), !dbg !4351
  ret %union.tree_node* %type.0, !dbg !4370
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_chain_field(%struct.nesting_info* %info) unnamed_addr #5 !dbg !4371 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4373, metadata !DIExpression()), !dbg !4378
  %chain_field = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 11, !dbg !4379
  %0 = load %union.tree_node*, %union.tree_node** %chain_field, align 8, !dbg !4379
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4374, metadata !DIExpression()), !dbg !4378
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !4380
  br i1 %tobool, label %if.then, label %if.end26, !dbg !4381

if.then:                                          ; preds = %entry
  %outer = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 0, !dbg !4382
  %1 = load %struct.nesting_info*, %struct.nesting_info** %outer, align 8, !dbg !4382
  %call = tail call fastcc %union.tree_node* @get_frame_type(%struct.nesting_info* %1) #7, !dbg !4383
  %call1 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %call) #6, !dbg !4384
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4375, metadata !DIExpression()), !dbg !4385
  %call2 = tail call %union.tree_node* @make_node_stat(i32 31) #6, !dbg !4386
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4374, metadata !DIExpression()), !dbg !4378
  %call3 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !4387
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4388
  store %union.tree_node* %call3, %union.tree_node** %name, align 8, !dbg !4389
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4390
  store %union.tree_node* %call1, %union.tree_node** %type4, align 8, !dbg !4391
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4392
  %3 = load i32, i32* %2, align 8, !dbg !4392
  %align6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4393
  store i32 %3, i32* %align6, align 8, !dbg !4394
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4395
  %4 = bitcast i40* %decl_flag_2 to i64*, !dbg !4395
  %bf.load = load i64, i64* %4, align 8, !dbg !4396
  %bf.set = or i64 %bf.load, 67108864, !dbg !4396
  store i64 %bf.set, i64* %4, align 8, !dbg !4396
  %call8 = tail call fastcc %union.tree_node* @get_frame_type(%struct.nesting_info* %info) #7, !dbg !4397
  tail call void @insert_field_into_struct(%union.tree_node* %call8, %union.tree_node* %call2) #7, !dbg !4398
  store %union.tree_node* %call2, %union.tree_node** %chain_field, align 8, !dbg !4399
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4400
  %tobool10 = icmp eq %struct._IO_FILE* %5, null, !dbg !4400
  br i1 %tobool10, label %if.end, label %land.lhs.true, !dbg !4402

land.lhs.true:                                    ; preds = %if.then
  %6 = load i32, i32* @dump_flags, align 4, !dbg !4403
  %and = and i32 %6, 8, !dbg !4404
  %tobool11 = icmp eq i32 %and, 0, !dbg !4404
  br i1 %tobool11, label %if.end, label %land.lhs.true12, !dbg !4405

land.lhs.true12:                                  ; preds = %land.lhs.true
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !4406
  %7 = bitcast %union.tree_node** %context to %struct.tree_function_decl**, !dbg !4406
  %8 = load %struct.tree_function_decl*, %struct.tree_function_decl** %7, align 8, !dbg !4406
  %regdecl_flag = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %8, i64 0, i32 5, !dbg !4406
  %bf.load13 = load i32, i32* %regdecl_flag, align 8, !dbg !4406
  %bf.clear14 = and i32 %bf.load13, 4194304, !dbg !4406
  %tobool15 = icmp eq i32 %bf.clear14, 0, !dbg !4406
  br i1 %tobool15, label %if.then16, label %if.end, !dbg !4407

if.then16:                                        ; preds = %land.lhs.true12
  %9 = bitcast %struct.tree_function_decl* %8 to %union.tree_node*, !dbg !4407
  %10 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !4408
  %call18 = tail call i8* %10(%union.tree_node* %9, i32 2) #6, !dbg !4409
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), i8* %call18) #6, !dbg !4410
  br label %if.end, !dbg !4410

if.end:                                           ; preds = %land.lhs.true12, %land.lhs.true, %if.then, %if.then16
  %context20 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !4411
  %11 = bitcast %union.tree_node** %context20 to %struct.tree_function_decl**, !dbg !4411
  %12 = load %struct.tree_function_decl*, %struct.tree_function_decl** %11, align 8, !dbg !4411
  %regdecl_flag22 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %12, i64 0, i32 5, !dbg !4411
  %bf.load23 = load i32, i32* %regdecl_flag22, align 8, !dbg !4412
  %bf.set25 = or i32 %bf.load23, 4194304, !dbg !4412
  store i32 %bf.set25, i32* %regdecl_flag22, align 8, !dbg !4412
  br label %if.end26, !dbg !4413

if.end26:                                         ; preds = %entry, %if.end
  %field.0 = phi %union.tree_node* [ %0, %entry ], [ %call2, %if.end ], !dbg !4378
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !4374, metadata !DIExpression()), !dbg !4378
  ret %union.tree_node* %field.0, !dbg !4414
}

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lookup_field_for_decl(%struct.nesting_info* %info, %union.tree_node* %decl, i32 %insert) unnamed_addr #5 !dbg !4415 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4419, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4420, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata i32 %insert, metadata !4421, metadata !DIExpression()), !dbg !4426
  %cmp = icmp eq i32 %insert, 0, !dbg !4427
  %field_map = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 3, !dbg !4426
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** %field_map, align 8, !dbg !4426
  %1 = bitcast %union.tree_node* %decl to i8*, !dbg !4426
  br i1 %cmp, label %if.then, label %if.end, !dbg !4429

if.then:                                          ; preds = %entry
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !4430
  call void @llvm.dbg.value(metadata i8** %call, metadata !4422, metadata !DIExpression()), !dbg !4426
  %tobool = icmp eq i8** %call, null, !dbg !4432
  br i1 %tobool, label %cleanup, label %cond.true, !dbg !4432

cond.true:                                        ; preds = %if.then
  %2 = bitcast i8** %call to %union.tree_node**, !dbg !4433
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !4433
  br label %cleanup, !dbg !4432

if.end:                                           ; preds = %entry
  %call2 = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !4434
  call void @llvm.dbg.value(metadata i8** %call2, metadata !4422, metadata !DIExpression()), !dbg !4426
  %4 = load i8*, i8** %call2, align 8, !dbg !4435
  %tobool3 = icmp eq i8* %4, null, !dbg !4435
  br i1 %tobool3, label %if.then4, label %if.end.if.end85_crit_edge, !dbg !4436

if.end.if.end85_crit_edge:                        ; preds = %if.end
  %5 = bitcast i8* %4 to %union.tree_node*, !dbg !4436
  br label %if.end85, !dbg !4436

if.then4:                                         ; preds = %if.end
  %call5 = tail call %union.tree_node* @make_node_stat(i32 31) #6, !dbg !4437
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !4423, metadata !DIExpression()), !dbg !4438
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4439
  %6 = bitcast %union.tree_node** %name to i64*, !dbg !4439
  %7 = load i64, i64* %6, align 8, !dbg !4439
  %name7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4440
  %8 = bitcast %union.tree_node** %name7 to i64*, !dbg !4441
  store i64 %7, i64* %8, align 8, !dbg !4441
  %call8 = tail call fastcc zeroext i8 @use_pointer_in_frame(%union.tree_node* %decl) #7, !dbg !4442
  %tobool9 = icmp eq i8 %call8, 0, !dbg !4442
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4444
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4444
  br i1 %tobool9, label %if.else, label %if.then10, !dbg !4445

if.then10:                                        ; preds = %if.then4
  %call11 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %9) #6, !dbg !4446
  %type13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4448
  store %union.tree_node* %call11, %union.tree_node** %type13, align 8, !dbg !4449
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4450
  %11 = load i32, i32* %10, align 8, !dbg !4450
  %align17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4451
  store i32 %11, i32* %align17, align 8, !dbg !4452
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4453
  %12 = bitcast i40* %decl_flag_2 to i64*, !dbg !4453
  %bf.load = load i64, i64* %12, align 8, !dbg !4454
  %bf.set = or i64 %bf.load, 67108864, !dbg !4454
  store i64 %bf.set, i64* %12, align 8, !dbg !4454
  br label %if.end76, !dbg !4455

if.else:                                          ; preds = %if.then4
  %type22 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4456
  store %union.tree_node* %9, %union.tree_node** %type22, align 8, !dbg !4458
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4459
  %13 = load i32, i32* %locus, align 8, !dbg !4459
  %locus25 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4460
  store i32 %13, i32* %locus25, align 8, !dbg !4461
  %align27 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4462
  %14 = load i32, i32* %align27, align 8, !dbg !4462
  %align29 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4463
  store i32 %14, i32* %align29, align 8, !dbg !4464
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4465
  %bf.load31 = load i64, i64* %15, align 8, !dbg !4465
  %bf.cast = and i64 %bf.load31, 4398046511104, !dbg !4465
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4466
  %bf.load35 = load i64, i64* %16, align 8, !dbg !4467
  %bf.clear36 = and i64 %bf.load35, -4398046511105, !dbg !4467
  %bf.set37 = or i64 %bf.clear36, %bf.cast, !dbg !4467
  store i64 %bf.set37, i64* %16, align 8, !dbg !4467
  %bf.load39 = load i64, i64* %15, align 8, !dbg !4468
  %bf.cast42 = and i64 %bf.load39, 262144, !dbg !4468
  %bf.clear47 = and i64 %bf.set37, -262145, !dbg !4469
  %bf.set48 = or i64 %bf.clear47, %bf.cast42, !dbg !4469
  store i64 %bf.set48, i64* %16, align 8, !dbg !4469
  %bf.load51 = load i64, i64* %15, align 8, !dbg !4470
  %decl_flag_257 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4471
  %17 = bitcast i40* %decl_flag_257 to i64*, !dbg !4471
  %bf.load58 = load i64, i64* %17, align 8, !dbg !4472
  %18 = shl i64 %bf.load51, 8, !dbg !4472
  %19 = and i64 %18, 67108864, !dbg !4472
  %bf.clear61 = and i64 %bf.load58, -67108865, !dbg !4472
  %20 = or i64 %19, %bf.clear61, !dbg !4472
  %bf.set62 = xor i64 %20, 67108864, !dbg !4472
  store i64 %bf.set62, i64* %17, align 8, !dbg !4472
  %bf.load65 = load i64, i64* %15, align 8, !dbg !4473
  %bf.cast68 = and i64 %bf.load65, 524288, !dbg !4473
  %bf.clear73 = and i64 %bf.set48, -524289, !dbg !4474
  %bf.set74 = or i64 %bf.clear73, %bf.cast68, !dbg !4474
  store i64 %bf.set74, i64* %16, align 8, !dbg !4474
  br label %if.end76

if.end76:                                         ; preds = %if.else, %if.then10
  %call77 = tail call fastcc %union.tree_node* @get_frame_type(%struct.nesting_info* %info) #7, !dbg !4475
  tail call void @insert_field_into_struct(%union.tree_node* %call77, %union.tree_node* %call5) #7, !dbg !4476
  %21 = bitcast i8** %call2 to %union.tree_node**, !dbg !4477
  store %union.tree_node* %call5, %union.tree_node** %21, align 8, !dbg !4477
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4478
  %bf.load79 = load i64, i64* %22, align 8, !dbg !4478
  %bf.cast812 = and i64 %bf.load79, 65535, !dbg !4480
  %cmp82 = icmp eq i64 %bf.cast812, 34, !dbg !4480
  br i1 %cmp82, label %if.then83, label %if.end85, !dbg !4481

if.then83:                                        ; preds = %if.end76
  %any_parm_remapped = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 14, !dbg !4482
  store i8 1, i8* %any_parm_remapped, align 8, !dbg !4483
  %.pre = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !4484
  br label %if.end85, !dbg !4485

if.end85:                                         ; preds = %if.end.if.end85_crit_edge, %if.end76, %if.then83
  %23 = phi %union.tree_node* [ %5, %if.end.if.end85_crit_edge ], [ %call5, %if.end76 ], [ %.pre, %if.then83 ], !dbg !4484
  br label %cleanup, !dbg !4486

cleanup:                                          ; preds = %if.then, %cond.true, %if.end85
  %retval.0 = phi %union.tree_node* [ %23, %if.end85 ], [ %3, %cond.true ], [ null, %if.then ], !dbg !4426
  ret %union.tree_node* %retval.0, !dbg !4487
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @use_pointer_in_frame(%union.tree_node* %decl) unnamed_addr #5 !dbg !4488 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4492, metadata !DIExpression()), !dbg !4493
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4494
  %bf.load = load i64, i64* %0, align 8, !dbg !4494
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4496
  %cmp = icmp eq i64 %bf.cast1, 34, !dbg !4496
  br i1 %cmp, label %if.then, label %if.else, !dbg !4497

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4498
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !4498
  %2 = load i64*, i64** %1, align 8, !dbg !4498
  %bf.load2 = load i64, i64* %2, align 8, !dbg !4498
  %bf.cast43 = and i64 %bf.load2, 65535, !dbg !4498
  %cmp5 = icmp eq i64 %bf.cast43, 15, !dbg !4498
  br i1 %cmp5, label %lor.end28, label %lor.rhs, !dbg !4498

lor.rhs:                                          ; preds = %if.then
  %cmp12 = icmp eq i64 %bf.cast43, 16, !dbg !4498
  br i1 %cmp12, label %lor.end28, label %lor.lhs.false, !dbg !4498

lor.lhs.false:                                    ; preds = %lor.rhs
  %cmp19 = icmp eq i64 %bf.cast43, 17, !dbg !4498
  br i1 %cmp19, label %lor.end28, label %lor.rhs20, !dbg !4498

lor.rhs20:                                        ; preds = %lor.lhs.false
  %cmp27 = icmp eq i64 %bf.cast43, 18, !dbg !4498
  %phitmp = zext i1 %cmp27 to i8, !dbg !4498
  br label %lor.end28, !dbg !4498

lor.end28:                                        ; preds = %lor.rhs, %lor.lhs.false, %lor.rhs20, %if.then
  %3 = phi i8 [ 1, %if.then ], [ 1, %lor.lhs.false ], [ 1, %lor.rhs ], [ %phitmp, %lor.rhs20 ]
  br label %return, !dbg !4500

if.else:                                          ; preds = %entry
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4501
  %4 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !4501
  %cmp29 = icmp eq %union.tree_node* %4, null, !dbg !4503
  br i1 %cmp29, label %lor.end38, label %lor.rhs31, !dbg !4504

lor.rhs31:                                        ; preds = %if.else
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4504
  %bf.load35 = load i64, i64* %5, align 8, !dbg !4505
  %bf.cast372 = lshr i64 %bf.load35, 17, !dbg !4504
  %6 = trunc i64 %bf.cast372 to i8, !dbg !4504
  %7 = and i8 %6, 1, !dbg !4504
  %8 = xor i8 %7, 1, !dbg !4504
  br label %lor.end38, !dbg !4504

lor.end38:                                        ; preds = %lor.rhs31, %if.else
  %9 = phi i8 [ 1, %if.else ], [ %8, %lor.rhs31 ]
  br label %return, !dbg !4506

return:                                           ; preds = %lor.end38, %lor.end28
  %retval.0 = phi i8 [ %3, %lor.end28 ], [ %9, %lor.end38 ], !dbg !4507
  ret i8 %retval.0, !dbg !4508
}

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @decl_value_expr_insert(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @note_nonlocal_vla_type(%struct.nesting_info* %info, %union.tree_node* %type) unnamed_addr #5 !dbg !4509 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4511, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4512, metadata !DIExpression()), !dbg !4517
  br label %while.cond, !dbg !4518

while.cond:                                       ; preds = %while.body, %entry
  %type.addr.0 = phi %union.tree_node* [ %type, %entry ], [ %3, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !4512, metadata !DIExpression()), !dbg !4517
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4519
  %bf.load = load i64, i64* %0, align 8, !dbg !4519
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !4519
  %cmp = icmp eq i64 %bf.cast5, 10, !dbg !4519
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !4519

lor.lhs.false:                                    ; preds = %while.cond
  %cmp5 = icmp eq i64 %bf.cast5, 12, !dbg !4519
  br i1 %cmp5, label %land.rhs, label %lor.lhs.false.while.end_crit_edge, !dbg !4520

lor.lhs.false.while.end_crit_edge:                ; preds = %lor.lhs.false
  %type.addr.0.lcssa = phi %union.tree_node* [ %type.addr.0, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !4512, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !4512, metadata !DIExpression()), !dbg !4517
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4521
  %.pre = load %union.tree_node*, %union.tree_node** %.phi.trans.insert, align 8, !dbg !4523
  br label %while.end, !dbg !4520

land.rhs:                                         ; preds = %lor.lhs.false, %while.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4524
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4524
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !4525
  br i1 %tobool, label %while.body, label %while.end.loopexit, !dbg !4518

while.body:                                       ; preds = %land.rhs
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4526
  %3 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !4526
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !4512, metadata !DIExpression()), !dbg !4517
  br label %while.cond, !dbg !4518, !llvm.loop !4527

while.end.loopexit:                               ; preds = %land.rhs
  %.lcssa = phi %union.tree_node* [ %2, %land.rhs ], !dbg !4524
  %type.addr.0.lcssa24 = phi %union.tree_node* [ %type.addr.0, %land.rhs ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa24, metadata !4512, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa24, metadata !4512, metadata !DIExpression()), !dbg !4517
  br label %while.end, !dbg !4523

while.end:                                        ; preds = %while.end.loopexit, %lor.lhs.false.while.end_crit_edge
  %type.addr.025 = phi %union.tree_node* [ %type.addr.0.lcssa, %lor.lhs.false.while.end_crit_edge ], [ %type.addr.0.lcssa24, %while.end.loopexit ]
  %4 = phi %union.tree_node* [ %.pre, %lor.lhs.false.while.end_crit_edge ], [ %.lcssa, %while.end.loopexit ]
  %5 = phi %union.tree_node* [ %.pre, %lor.lhs.false.while.end_crit_edge ], [ %.lcssa, %while.end.loopexit ]
  %.pre.pn = phi %union.tree_node* [ %.pre, %lor.lhs.false.while.end_crit_edge ], [ %.lcssa, %while.end.loopexit ]
  %6 = phi %union.tree_node* [ %.pre, %lor.lhs.false.while.end_crit_edge ], [ %.lcssa, %while.end.loopexit ], !dbg !4523
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.025, metadata !4512, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.025, metadata !4512, metadata !DIExpression()), !dbg !4517
  %tobool10 = icmp eq %union.tree_node* %6, null, !dbg !4523
  br i1 %tobool10, label %if.end, label %land.lhs.true, !dbg !4528

land.lhs.true:                                    ; preds = %while.end
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %.pre.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4517
  %bf.load14 = load i64, i64* %7, align 8, !dbg !4529
  %bf.cast1617 = and i64 %bf.load14, 65535, !dbg !4530
  %cmp17 = icmp eq i64 %bf.cast1617, 35, !dbg !4530
  br i1 %cmp17, label %land.lhs.true18, label %if.end, !dbg !4531

land.lhs.true18:                                  ; preds = %land.lhs.true
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 3, !dbg !4532
  %8 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !4532
  %tobool21 = icmp eq %union.tree_node* %8, null, !dbg !4532
  br i1 %tobool21, label %if.end, label %if.then, !dbg !4533

if.then:                                          ; preds = %land.lhs.true18
  %result25 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 3, !dbg !4534
  %9 = load %union.tree_node*, %union.tree_node** %result25, align 8, !dbg !4534
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !4512, metadata !DIExpression()), !dbg !4517
  br label %if.end, !dbg !4535

if.end:                                           ; preds = %land.lhs.true18, %while.end, %if.then, %land.lhs.true
  %type.addr.1 = phi %union.tree_node* [ %9, %if.then ], [ %type.addr.025, %land.lhs.true18 ], [ %type.addr.025, %land.lhs.true ], [ %type.addr.025, %while.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.1, metadata !4512, metadata !DIExpression()), !dbg !4517
  br label %while.cond26, !dbg !4536

while.cond26:                                     ; preds = %while.body55, %if.end
  %type.addr.2 = phi %union.tree_node* [ %type.addr.1, %if.end ], [ %13, %while.body55 ], !dbg !4517
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.2, metadata !4512, metadata !DIExpression()), !dbg !4517
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4537
  %bf.load28 = load i64, i64* %10, align 8, !dbg !4537
  %bf.cast307 = and i64 %bf.load28, 65535, !dbg !4537
  %cmp31 = icmp eq i64 %bf.cast307, 10, !dbg !4537
  br i1 %cmp31, label %while.body55, label %lor.lhs.false32, !dbg !4537

lor.lhs.false32:                                  ; preds = %while.cond26
  %cmp37 = icmp eq i64 %bf.cast307, 12, !dbg !4537
  br i1 %cmp37, label %while.body55, label %lor.lhs.false38, !dbg !4538

lor.lhs.false38:                                  ; preds = %lor.lhs.false32
  %cmp43 = icmp eq i64 %bf.cast307, 14, !dbg !4539
  br i1 %cmp43, label %while.body55, label %lor.lhs.false44, !dbg !4540

lor.lhs.false44:                                  ; preds = %lor.lhs.false38
  %11 = or i64 %bf.cast307, 1, !dbg !4541
  %12 = icmp eq i64 %11, 21, !dbg !4541
  br i1 %12, label %while.body55, label %while.end58, !dbg !4541

while.body55:                                     ; preds = %while.cond26, %lor.lhs.false32, %lor.lhs.false38, %lor.lhs.false44
  %type57 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4542
  %13 = load %union.tree_node*, %union.tree_node** %type57, align 8, !dbg !4542
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !4512, metadata !DIExpression()), !dbg !4517
  br label %while.cond26, !dbg !4536, !llvm.loop !4543

while.end58:                                      ; preds = %lor.lhs.false44
  %type.addr.2.lcssa = phi %union.tree_node* [ %type.addr.2, %lor.lhs.false44 ], !dbg !4517
  %bf.cast307.lcssa = phi i64 [ %bf.cast307, %lor.lhs.false44 ], !dbg !4537
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.2.lcssa, metadata !4512, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.2.lcssa, metadata !4512, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.2.lcssa, metadata !4512, metadata !DIExpression()), !dbg !4517
  %cmp63 = icmp eq i64 %bf.cast307.lcssa, 15, !dbg !4544
  br i1 %cmp63, label %if.then64, label %if.end111, !dbg !4545

if.then64:                                        ; preds = %while.end58
  %type66 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.2.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4546
  %14 = load %union.tree_node*, %union.tree_node** %type66, align 8, !dbg !4546
  tail call fastcc void @note_nonlocal_vla_type(%struct.nesting_info* %info, %union.tree_node* %14) #7, !dbg !4547
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.2.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4548
  %15 = bitcast i32* %values to %union.tree_node**, !dbg !4548
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !4548
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !4513, metadata !DIExpression()), !dbg !4549
  %tobool68 = icmp eq %union.tree_node* %16, null, !dbg !4550
  br i1 %tobool68, label %if.end111, label %if.then69, !dbg !4552

if.then69:                                        ; preds = %if.then64
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !4553
  %17 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !4553
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !4553
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !4516, metadata !DIExpression()), !dbg !4549
  %tobool71 = icmp eq %union.tree_node* %18, null, !dbg !4555
  br i1 %tobool71, label %if.end88, label %land.lhs.true72, !dbg !4557

land.lhs.true72:                                  ; preds = %if.then69
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4558
  %bf.load74 = load i64, i64* %19, align 8, !dbg !4558
  %bf.cast7615 = and i64 %bf.load74, 65535, !dbg !4559
  %cmp77 = icmp eq i64 %bf.cast7615, 32, !dbg !4559
  br i1 %cmp77, label %land.lhs.true84, label %lor.lhs.false78, !dbg !4560

lor.lhs.false78:                                  ; preds = %land.lhs.true72
  %cmp83 = icmp eq i64 %bf.cast7615, 34, !dbg !4561
  br i1 %cmp83, label %land.lhs.true84, label %if.end88, !dbg !4562

land.lhs.true84:                                  ; preds = %lor.lhs.false78, %land.lhs.true72
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* nonnull %18) #6, !dbg !4563
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !4564
  %20 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !4564
  %cmp85 = icmp eq %union.tree_node* %call, %20, !dbg !4565
  br i1 %cmp85, label %if.end88, label %if.then86, !dbg !4566

if.then86:                                        ; preds = %land.lhs.true84
  %call87 = tail call fastcc %union.tree_node* @get_nonlocal_debug_decl(%struct.nesting_info* %info, %union.tree_node* nonnull %18) #7, !dbg !4567
  br label %if.end88, !dbg !4567

if.end88:                                         ; preds = %land.lhs.true84, %if.then69, %if.then86, %lor.lhs.false78
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4568
  %21 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !4568
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !4568
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !4516, metadata !DIExpression()), !dbg !4549
  %tobool90 = icmp eq %union.tree_node* %22, null, !dbg !4569
  br i1 %tobool90, label %if.end111, label %land.lhs.true91, !dbg !4571

land.lhs.true91:                                  ; preds = %if.end88
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4572
  %bf.load93 = load i64, i64* %23, align 8, !dbg !4572
  %bf.cast9513 = and i64 %bf.load93, 65535, !dbg !4573
  %cmp96 = icmp eq i64 %bf.cast9513, 32, !dbg !4573
  br i1 %cmp96, label %land.lhs.true103, label %lor.lhs.false97, !dbg !4574

lor.lhs.false97:                                  ; preds = %land.lhs.true91
  %cmp102 = icmp eq i64 %bf.cast9513, 34, !dbg !4575
  br i1 %cmp102, label %land.lhs.true103, label %if.end111, !dbg !4576

land.lhs.true103:                                 ; preds = %lor.lhs.false97, %land.lhs.true91
  %call104 = tail call %union.tree_node* @decl_function_context(%union.tree_node* nonnull %22) #6, !dbg !4577
  %context105 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !4578
  %24 = load %union.tree_node*, %union.tree_node** %context105, align 8, !dbg !4578
  %cmp106 = icmp eq %union.tree_node* %call104, %24, !dbg !4579
  br i1 %cmp106, label %if.end111, label %if.then107, !dbg !4580

if.then107:                                       ; preds = %land.lhs.true103
  %call108 = tail call fastcc %union.tree_node* @get_nonlocal_debug_decl(%struct.nesting_info* %info, %union.tree_node* nonnull %22) #7, !dbg !4581
  br label %if.end111, !dbg !4581

if.end111:                                        ; preds = %land.lhs.true103, %if.end88, %if.then64, %if.then107, %lor.lhs.false97, %while.end58
  ret void, !dbg !4582
}

declare dso_local %union.tree_node* @make_node_stat(i32) local_unnamed_addr #2

declare dso_local i8* @concat(i8*, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @create_tmp_var_for(%struct.nesting_info* %info, %union.tree_node* %type, i8* %prefix) unnamed_addr #5 !dbg !4583 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4587, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4588, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8* %prefix, metadata !4589, metadata !DIExpression()), !dbg !4591
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4592
  %bf.load = load i64, i64* %0, align 8, !dbg !4592
  %bf.cast1 = and i64 %bf.load, 262144, !dbg !4592
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !4592
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4592

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 146, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4592
  br label %cond.end, !dbg !4592

cond.end:                                         ; preds = %entry, %cond.true
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4593
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4593
  %tobool2 = icmp eq %union.tree_node* %2, null, !dbg !4593
  br i1 %tobool2, label %cond.end11, label %lor.lhs.false, !dbg !4593

lor.lhs.false:                                    ; preds = %cond.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4593
  %bf.load6 = load i64, i64* %3, align 8, !dbg !4593
  %bf.cast84 = and i64 %bf.load6, 65535, !dbg !4593
  %cmp = icmp eq i64 %bf.cast84, 23, !dbg !4593
  br i1 %cmp, label %cond.end11, label %cond.true9, !dbg !4593

cond.true9:                                       ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 148, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4593
  br label %cond.end11, !dbg !4593

cond.end11:                                       ; preds = %cond.end, %lor.lhs.false, %cond.true9
  %call = tail call %union.tree_node* @create_tmp_var_raw(%union.tree_node* %type, i8* %prefix) #6, !dbg !4594
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4590, metadata !DIExpression()), !dbg !4591
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !4595
  %4 = bitcast %union.tree_node** %context to i64*, !dbg !4595
  %5 = load i64, i64* %4, align 8, !dbg !4595
  %context13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4596
  %6 = bitcast %union.tree_node** %context13 to i64*, !dbg !4597
  store i64 %5, i64* %6, align 8, !dbg !4597
  %new_local_var_chain = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 7, !dbg !4598
  %7 = bitcast %union.tree_node** %new_local_var_chain to i64*, !dbg !4598
  %8 = load i64, i64* %7, align 8, !dbg !4598
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4599
  %9 = bitcast %union.tree_node** %chain to i64*, !dbg !4600
  store i64 %8, i64* %9, align 8, !dbg !4600
  %seen_in_bind_expr = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4601
  %10 = bitcast i24* %seen_in_bind_expr to i32*, !dbg !4601
  %bf.load14 = load i32, i32* %10, align 8, !dbg !4602
  %bf.set = or i32 %bf.load14, 256, !dbg !4602
  store i32 %bf.set, i32* %10, align 8, !dbg !4602
  %bf.load17 = load i64, i64* %0, align 8, !dbg !4603
  %bf.cast192 = and i64 %bf.load17, 65535, !dbg !4605
  %cmp20 = icmp eq i64 %bf.cast192, 13, !dbg !4605
  br i1 %cmp20, label %if.then, label %lor.lhs.false21, !dbg !4606

lor.lhs.false21:                                  ; preds = %cond.end11
  %cmp26 = icmp eq i64 %bf.cast192, 14, !dbg !4607
  br i1 %cmp26, label %if.then, label %if.end, !dbg !4608

if.then:                                          ; preds = %lor.lhs.false21, %cond.end11
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4609
  %11 = bitcast i40* %gimple_reg_flag to i64*, !dbg !4609
  %bf.load27 = load i64, i64* %11, align 8, !dbg !4610
  %bf.set29 = or i64 %bf.load27, 134217728, !dbg !4610
  store i64 %bf.set29, i64* %11, align 8, !dbg !4610
  br label %if.end, !dbg !4609

if.end:                                           ; preds = %if.then, %lor.lhs.false21
  store %union.tree_node* %call, %union.tree_node** %new_local_var_chain, align 8, !dbg !4611
  ret %union.tree_node* %call, !dbg !4612
}

declare dso_local %union.tree_node* @create_tmp_var_raw(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local i8** @pointer_map_contains(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_tmp_var_name(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4613 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4617, metadata !DIExpression()), !dbg !4618
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !4619
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4619

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !4620
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !4620
  br label %cond.end, !dbg !4619

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !4619
  ret %struct.gimple_seq_node_d* %cond, !dbg !4621
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_omp_for_pre_body(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4622 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4624, metadata !DIExpression()), !dbg !4625
  %pre_body = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 2, !dbg !4626
  %0 = bitcast %union.anon* %pre_body to %struct.gimple_seq_d**, !dbg !4626
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !4626
  ret %struct.gimple_seq_d* %1, !dbg !4627
}

declare dso_local %struct.gimple_seq_d* @gimple_seq_alloc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_last(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !4628 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !4632, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4633, metadata !DIExpression()), !dbg !4635
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %seq) #7, !dbg !4636
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4637
  store %struct.gimple_seq_node_d* %call, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4638
  %seq1 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4639
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq1, align 8, !dbg !4640
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !4641
  br i1 %tobool, label %cond.end, label %land.lhs.true, !dbg !4642

land.lhs.true:                                    ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !4643
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4643
  %tobool4 = icmp eq %union.gimple_statement_d* %0, null, !dbg !4644
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !4645

cond.true:                                        ; preds = %land.lhs.true
  %call7 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %0) #7, !dbg !4646
  br label %cond.end, !dbg !4645

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.basic_block_def* [ %call7, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !4645
  %bb = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4647
  store %struct.basic_block_def* %cond, %struct.basic_block_def** %bb, align 8, !dbg !4648
  ret void, !dbg !4649
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i64 @gimple_omp_for_collapse(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4650 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4654, metadata !DIExpression()), !dbg !4655
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !4656
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !4656
  %1 = load i64, i64* %0, align 8, !dbg !4656
  ret i64 %1, !dbg !4657
}

declare dso_local %union.tree_node* @walk_tree_1(%union.tree_node**, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_omp_for_index_ptr(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !4658 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4662, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.value(metadata i64 %i, metadata !4663, metadata !DIExpression()), !dbg !4664
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !4665
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !4665
  %1 = load i64, i64* %0, align 8, !dbg !4665
  %cmp = icmp ugt i64 %1, %i, !dbg !4665
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4665

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3464, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4665
  br label %cond.end, !dbg !4665

cond.end:                                         ; preds = %entry, %cond.true
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !4666
  %2 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !4666
  %3 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %2, align 8, !dbg !4666
  %index = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %3, i64 %i, i32 1, !dbg !4667
  ret %union.tree_node** %index, !dbg !4668
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_omp_for_initial_ptr(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !4669 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4671, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i64 %i, metadata !4672, metadata !DIExpression()), !dbg !4673
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !4674
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !4674
  %1 = load i64, i64* %0, align 8, !dbg !4674
  %cmp = icmp ugt i64 %1, %i, !dbg !4674
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4674

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3497, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4674
  br label %cond.end, !dbg !4674

cond.end:                                         ; preds = %entry, %cond.true
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !4675
  %2 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !4675
  %3 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %2, align 8, !dbg !4675
  %initial = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %3, i64 %i, i32 2, !dbg !4676
  ret %union.tree_node** %initial, !dbg !4677
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_omp_for_final_ptr(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !4678 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4680, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i64 %i, metadata !4681, metadata !DIExpression()), !dbg !4682
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !4683
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !4683
  %1 = load i64, i64* %0, align 8, !dbg !4683
  %cmp = icmp ugt i64 %1, %i, !dbg !4683
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4683

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3530, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4683
  br label %cond.end, !dbg !4683

cond.end:                                         ; preds = %entry, %cond.true
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !4684
  %2 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !4684
  %3 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %2, align 8, !dbg !4684
  %final = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %3, i64 %i, i32 3, !dbg !4685
  ret %union.tree_node** %final, !dbg !4686
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_omp_for_incr(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !4687 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4691, metadata !DIExpression()), !dbg !4693
  call void @llvm.dbg.value(metadata i64 %i, metadata !4692, metadata !DIExpression()), !dbg !4693
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !4694
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !4694
  %1 = load i64, i64* %0, align 8, !dbg !4694
  %cmp = icmp ugt i64 %1, %i, !dbg !4694
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4694

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3552, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4694
  br label %cond.end, !dbg !4694

cond.end:                                         ; preds = %entry, %cond.true
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !4695
  %2 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !4695
  %3 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %2, align 8, !dbg !4695
  %incr = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %3, i64 %i, i32 4, !dbg !4696
  %4 = load %union.tree_node*, %union.tree_node** %incr, align 8, !dbg !4696
  ret %union.tree_node* %4, !dbg !4697
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4698 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4702, metadata !DIExpression()), !dbg !4703
  %cmp = icmp eq %struct.gimple_seq_d* %s, null, !dbg !4704
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4705

lor.rhs:                                          ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !4706
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !4706
  %cmp1 = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !4707
  %phitmp = zext i1 %cmp1 to i8, !dbg !4705
  br label %lor.end, !dbg !4705

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %1, !dbg !4708
}

declare dso_local void @gimple_seq_free(%struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local void @annotate_all_with_location(%struct.gimple_seq_d*, i32) local_unnamed_addr #2

declare dso_local void @gimple_seq_add_seq(%struct.gimple_seq_d**, %struct.gimple_seq_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_for_set_pre_body(%union.gimple_statement_d* %gs, %struct.gimple_seq_d* %pre_body) unnamed_addr #0 !dbg !4709 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4713, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %pre_body, metadata !4714, metadata !DIExpression()), !dbg !4715
  %pre_body1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 2, !dbg !4716
  %0 = bitcast %union.anon* %pre_body1 to %struct.gimple_seq_d**, !dbg !4716
  store %struct.gimple_seq_d* %pre_body, %struct.gimple_seq_d** %0, align 8, !dbg !4717
  ret void, !dbg !4718
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4719 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4721, metadata !DIExpression()), !dbg !4722
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !4723
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4723

cond.true:                                        ; preds = %entry
  %last = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 1, !dbg !4724
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %last, align 8, !dbg !4724
  br label %cond.end, !dbg !4723

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !4723
  ret %struct.gimple_seq_node_d* %cond, !dbg !4725
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4726 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4730, metadata !DIExpression()), !dbg !4731
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !4732
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4732
  ret %struct.basic_block_def* %0, !dbg !4733
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_frame_field(%struct.nesting_info* %info, %union.tree_node* %target_context, %union.tree_node* %field, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !4734 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4738, metadata !DIExpression()), !dbg !4750
  call void @llvm.dbg.value(metadata %union.tree_node* %target_context, metadata !4739, metadata !DIExpression()), !dbg !4750
  call void @llvm.dbg.value(metadata %union.tree_node* %field, metadata !4740, metadata !DIExpression()), !dbg !4750
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4741, metadata !DIExpression()), !dbg !4750
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !4751
  %0 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !4751
  %cmp = icmp eq %union.tree_node* %0, %target_context, !dbg !4752
  br i1 %cmp, label %if.then, label %if.else, !dbg !4753

if.then:                                          ; preds = %entry
  %call = tail call fastcc %union.tree_node* @get_frame_type(%struct.nesting_info* %info) #7, !dbg !4754
  %frame_decl = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 10, !dbg !4756
  %1 = load %union.tree_node*, %union.tree_node** %frame_decl, align 8, !dbg !4756
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4743, metadata !DIExpression()), !dbg !4750
  br label %if.end, !dbg !4757

if.else:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @get_chain_decl(%struct.nesting_info* %info) #7, !dbg !4758
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4743, metadata !DIExpression()), !dbg !4750
  br label %for.cond, !dbg !4759

for.cond:                                         ; preds = %for.body, %if.else
  %info.pn = phi %struct.nesting_info* [ %info, %if.else ], [ %i.0, %for.body ]
  %x.0 = phi %union.tree_node* [ %call1, %if.else ], [ %call12, %for.body ], !dbg !4760
  %i.0.in = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info.pn, i64 0, i32 0, !dbg !4761
  %i.0 = load %struct.nesting_info*, %struct.nesting_info** %i.0.in, align 8, !dbg !4761
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0, metadata !4743, metadata !DIExpression()), !dbg !4750
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.0, metadata !4742, metadata !DIExpression()), !dbg !4750
  %context2 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i.0, i64 0, i32 6, !dbg !4762
  %2 = load %union.tree_node*, %union.tree_node** %context2, align 8, !dbg !4762
  %cmp3 = icmp eq %union.tree_node* %2, %target_context, !dbg !4763
  br i1 %cmp3, label %for.end, label %for.body, !dbg !4764

for.body:                                         ; preds = %for.cond
  %call5 = tail call fastcc %union.tree_node* @get_chain_field(%struct.nesting_info* %i.0) #7, !dbg !4765
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !4744, metadata !DIExpression()), !dbg !4766
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4767
  %3 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !4767
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !4767
  %type7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !4767
  %5 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !4767
  %call8 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %5, %union.tree_node* %x.0) #6, !dbg !4767
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !4743, metadata !DIExpression()), !dbg !4750
  %type10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4768
  %6 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !4768
  %call11 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %6, %union.tree_node* %call8, %union.tree_node* %call5, %union.tree_node* null) #6, !dbg !4768
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !4743, metadata !DIExpression()), !dbg !4750
  %call12 = tail call fastcc %union.tree_node* @init_tmp_var(%struct.nesting_info* %info, %union.tree_node* %call11, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !4769
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !4743, metadata !DIExpression()), !dbg !4750
  br label %for.cond, !dbg !4770, !llvm.loop !4771

for.end:                                          ; preds = %for.cond
  %x.0.lcssa = phi %union.tree_node* [ %x.0, %for.cond ], !dbg !4760
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa, metadata !4743, metadata !DIExpression()), !dbg !4750
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa, metadata !4743, metadata !DIExpression()), !dbg !4750
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa, metadata !4743, metadata !DIExpression()), !dbg !4750
  %type15 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4773
  %7 = bitcast %union.tree_node** %type15 to %struct.tree_common**, !dbg !4773
  %8 = load %struct.tree_common*, %struct.tree_common** %7, align 8, !dbg !4773
  %type17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 2, !dbg !4773
  %9 = load %union.tree_node*, %union.tree_node** %type17, align 8, !dbg !4773
  %call18 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %9, %union.tree_node* %x.0.lcssa) #6, !dbg !4773
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !4743, metadata !DIExpression()), !dbg !4750
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %x.1 = phi %union.tree_node* [ %1, %if.then ], [ %call18, %for.end ], !dbg !4774
  call void @llvm.dbg.value(metadata %union.tree_node* %x.1, metadata !4743, metadata !DIExpression()), !dbg !4750
  %type20 = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4775
  %10 = load %union.tree_node*, %union.tree_node** %type20, align 8, !dbg !4775
  %call21 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %10, %union.tree_node* %x.1, %union.tree_node* %field, %union.tree_node* null) #6, !dbg !4775
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !4743, metadata !DIExpression()), !dbg !4750
  ret %union.tree_node* %call21, !dbg !4776
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @init_tmp_var(%struct.nesting_info* %info, %union.tree_node* %exp, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !4777 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4781, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4782, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4783, metadata !DIExpression()), !dbg !4786
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4787
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4787
  %call = tail call fastcc %union.tree_node* @create_tmp_var_for(%struct.nesting_info* %info, %union.tree_node* %0, i8* null) #7, !dbg !4788
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4784, metadata !DIExpression()), !dbg !4786
  %call1 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call, %union.tree_node* %exp) #6, !dbg !4789
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4785, metadata !DIExpression()), !dbg !4786
  %call2 = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4790
  %tobool = icmp eq i8 %call2, 0, !dbg !4790
  br i1 %tobool, label %if.then, label %if.end, !dbg !4792

if.then:                                          ; preds = %entry
  %call3 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4793
  %call4 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call3) #7, !dbg !4794
  tail call fastcc void @gimple_set_location(%union.gimple_statement_d* %call1, i32 %call4) #7, !dbg !4795
  br label %if.end, !dbg !4795

if.end:                                           ; preds = %entry, %if.then
  tail call void @gsi_insert_before_without_update(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call1, i32 1) #6, !dbg !4796
  ret %union.tree_node* %call, !dbg !4797
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @save_tmp_var(%struct.nesting_info* %info, %union.tree_node* %exp, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !4798 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4800, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4801, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4802, metadata !DIExpression()), !dbg !4805
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4806
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4806
  %call = tail call fastcc %union.tree_node* @create_tmp_var_for(%struct.nesting_info* %info, %union.tree_node* %0, i8* null) #7, !dbg !4807
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4803, metadata !DIExpression()), !dbg !4805
  %call1 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %exp, %union.tree_node* %call) #6, !dbg !4808
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4804, metadata !DIExpression()), !dbg !4805
  %call2 = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4809
  %tobool = icmp eq i8 %call2, 0, !dbg !4809
  br i1 %tobool, label %if.then, label %if.end, !dbg !4811

if.then:                                          ; preds = %entry
  %call3 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4812
  %call4 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call3) #7, !dbg !4813
  tail call fastcc void @gimple_set_location(%union.gimple_statement_d* %call1, i32 %call4) #7, !dbg !4814
  br label %if.end, !dbg !4814

if.end:                                           ; preds = %entry, %if.then
  tail call void @gsi_insert_after_without_update(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call1, i32 1) #6, !dbg !4815
  ret %union.tree_node* %call, !dbg !4816
}

declare dso_local void @recompute_tree_invariant_for_addr_expr(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @gsi_gimplify_val(%struct.nesting_info* %info, %union.tree_node* %exp, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !4817 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4819, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4820, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4821, metadata !DIExpression()), !dbg !4822
  %call = tail call zeroext i8 @is_gimple_val(%union.tree_node* %exp) #6, !dbg !4823
  %tobool = icmp eq i8 %call, 0, !dbg !4823
  br i1 %tobool, label %if.else, label %return, !dbg !4825

if.else:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @init_tmp_var(%struct.nesting_info* %info, %union.tree_node* %exp, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !4826
  br label %return, !dbg !4827

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi %union.tree_node* [ %call1, %if.else ], [ %exp, %entry ], !dbg !4828
  ret %union.tree_node* %retval.0, !dbg !4829
}

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4830 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4834, metadata !DIExpression()), !dbg !4835
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4836
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4836
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !4837
  %conv1 = zext i1 %cmp to i8, !dbg !4838
  ret i8 %conv1, !dbg !4839
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_location(%union.gimple_statement_d* %g, i32 %location) unnamed_addr #0 !dbg !4840 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4844, metadata !DIExpression()), !dbg !4846
  call void @llvm.dbg.value(metadata i32 %location, metadata !4845, metadata !DIExpression()), !dbg !4846
  %location1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !4847
  store i32 %location, i32* %location1, align 8, !dbg !4848
  ret void, !dbg !4849
}

declare dso_local void @gsi_insert_before_without_update(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local void @gsi_insert_after_without_update(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_val(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @convert_local_omp_clauses(%union.tree_node** %pclauses, %struct.walk_stmt_info* %wi) unnamed_addr #5 !dbg !4850 {
entry:
  %dummy = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node** %pclauses, metadata !4852, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !4853, metadata !DIExpression()), !dbg !4876
  %info1 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !4877
  %0 = bitcast i8** %info1 to %struct.nesting_info**, !dbg !4877
  %1 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !4877
  call void @llvm.dbg.value(metadata %struct.nesting_info* %1, metadata !4854, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8 0, metadata !4855, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8 0, metadata !4856, metadata !DIExpression()), !dbg !4876
  %2 = bitcast i32* %dummy to i8*, !dbg !4878
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4878
  %call = tail call %struct.bitmap_head_def* @bitmap_gc_alloc_stat() #6, !dbg !4879
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !4860, metadata !DIExpression()), !dbg !4876
  %suppress_expansion = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 5, !dbg !4880
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %suppress_expansion, align 8, !dbg !4880
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %3) #6, !dbg !4881
  %val_only = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 3, !dbg !4882
  %is_lhs = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 4, !dbg !4882
  %4 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !4882
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 6, !dbg !4883
  br label %for.cond, !dbg !4884

for.cond:                                         ; preds = %for.inc, %entry
  %need_frame.0 = phi i8 [ 0, %entry ], [ %need_frame.3, %for.inc ], !dbg !4885
  %need_stmts.0 = phi i8 [ 0, %entry ], [ %need_stmts.4, %for.inc ], !dbg !4886
  %clause.0.in = phi %union.tree_node** [ %pclauses, %entry ], [ %chain, %for.inc ]
  %clause.0 = load %union.tree_node*, %union.tree_node** %clause.0.in, align 8, !dbg !4887
  call void @llvm.dbg.value(metadata %union.tree_node* %clause.0, metadata !4857, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8 %need_stmts.0, metadata !4856, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8 %need_frame.0, metadata !4855, metadata !DIExpression()), !dbg !4876
  %tobool = icmp eq %union.tree_node* %clause.0, null, !dbg !4888
  br i1 %tobool, label %for.end, label %for.body, !dbg !4888

for.body:                                         ; preds = %for.cond
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4889
  %6 = load i32, i32* %5, align 4, !dbg !4889
  switch i32 %6, label %sw.default [
    i32 5, label %sw.bb
    i32 4, label %sw.bb4
    i32 1, label %do_decl_clause
    i32 3, label %do_decl_clause
    i32 7, label %do_decl_clause
    i32 2, label %do_decl_clause
    i32 10, label %sw.bb41
    i32 8, label %sw.bb48
    i32 9, label %sw.bb48
    i32 11, label %for.inc
    i32 12, label %for.inc
    i32 13, label %for.inc
    i32 6, label %for.inc
    i32 14, label %for.inc
    i32 15, label %for.inc
  ], !dbg !4890

sw.bb:                                            ; preds = %for.body
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4891
  %arrayidx = getelementptr inbounds i40, i40* %ops, i64 3, !dbg !4891
  %7 = bitcast i40* %arrayidx to %union.tree_node**, !dbg !4891
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !4891
  %tobool3 = icmp eq %union.tree_node* %8, null, !dbg !4891
  %spec.select = select i1 %tobool3, i8 %need_stmts.0, i8 1, !dbg !4893
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !4856, metadata !DIExpression()), !dbg !4876
  br label %do_decl_clause, !dbg !4894

sw.bb4:                                           ; preds = %for.body
  %gimple_reduction_init = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4895
  %9 = bitcast %union.tree_node** %gimple_reduction_init to %struct.gimple_seq_d**, !dbg !4895
  %10 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %9, align 8, !dbg !4895
  %tobool6 = icmp eq %struct.gimple_seq_d* %10, null, !dbg !4895
  %spec.select1 = select i1 %tobool6, i8 %need_stmts.0, i8 1, !dbg !4897
  call void @llvm.dbg.value(metadata i8 %spec.select1, metadata !4856, metadata !DIExpression()), !dbg !4876
  br label %do_decl_clause, !dbg !4898

do_decl_clause:                                   ; preds = %for.body, %for.body, %for.body, %for.body, %sw.bb4, %sw.bb
  %need_stmts.3 = phi i8 [ %spec.select1, %sw.bb4 ], [ %spec.select, %sw.bb ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], !dbg !4876
  call void @llvm.dbg.value(metadata i8 %need_stmts.3, metadata !4856, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.label(metadata !4875), !dbg !4899
  %ops11 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4900
  %arrayidx12 = bitcast i40* %ops11 to %union.tree_node**, !dbg !4900
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !4900
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !4858, metadata !DIExpression()), !dbg !4876
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4901
  %bf.load = load i64, i64* %12, align 8, !dbg !4901
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !4903
  %cmp = icmp eq i64 %bf.cast2, 32, !dbg !4903
  br i1 %cmp, label %land.lhs.true, label %if.end24, !dbg !4904

land.lhs.true:                                    ; preds = %do_decl_clause
  %bf.cast163 = and i64 %bf.load, 67108864, !dbg !4905
  %tobool17 = icmp eq i64 %bf.cast163, 0, !dbg !4905
  br i1 %tobool17, label %lor.lhs.false, label %for.inc, !dbg !4906

lor.lhs.false:                                    ; preds = %land.lhs.true
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4907
  %13 = bitcast i40* %decl_flag_1 to i64*, !dbg !4907
  %bf.load18 = load i64, i64* %13, align 8, !dbg !4907
  %bf.cast214 = and i64 %bf.load18, 33554432, !dbg !4907
  %tobool22 = icmp eq i64 %bf.cast214, 0, !dbg !4907
  br i1 %tobool22, label %if.end24, label %for.inc, !dbg !4908

if.end24:                                         ; preds = %lor.lhs.false, %do_decl_clause
  %call25 = call %union.tree_node* @decl_function_context(%union.tree_node* %11) #6, !dbg !4909
  %14 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !4910
  %cmp26 = icmp eq %union.tree_node* %call25, %14, !dbg !4911
  br i1 %cmp26, label %land.lhs.true27, label %for.inc, !dbg !4912

land.lhs.true27:                                  ; preds = %if.end24
  %call28 = call fastcc zeroext i8 @use_pointer_in_frame(%union.tree_node* %11) #7, !dbg !4913
  %tobool29 = icmp eq i8 %call28, 0, !dbg !4913
  br i1 %tobool29, label %if.then30, label %for.inc, !dbg !4914

if.then30:                                        ; preds = %land.lhs.true27
  %call31 = call fastcc %union.tree_node* @lookup_field_for_decl(%struct.nesting_info* %1, %union.tree_node* %11, i32 0) #7, !dbg !4915
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !4861, metadata !DIExpression()), !dbg !4916
  %tobool32 = icmp eq %union.tree_node* %call31, null, !dbg !4917
  br i1 %tobool32, label %for.inc, label %if.then33, !dbg !4919

if.then33:                                        ; preds = %if.then30
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4920
  %15 = load i32, i32* %uid, align 4, !dbg !4920
  %call34 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %15) #6, !dbg !4922
  %call35 = call fastcc %union.tree_node* @get_local_debug_decl(%struct.nesting_info* %1, %union.tree_node* %11, %union.tree_node* nonnull %call31) #7, !dbg !4923
  store %union.tree_node* %call35, %union.tree_node** %arrayidx12, align 8, !dbg !4924
  call void @llvm.dbg.value(metadata i8 1, metadata !4855, metadata !DIExpression()), !dbg !4876
  br label %for.inc, !dbg !4925

sw.bb41:                                          ; preds = %for.body
  %ops43 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4926
  %arrayidx44 = bitcast i40* %ops43 to %union.tree_node**, !dbg !4926
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx44, align 8, !dbg !4926
  %cmp45 = icmp eq %union.tree_node* %16, null, !dbg !4928
  br i1 %cmp45, label %for.inc, label %sw.bb48, !dbg !4929

sw.bb48:                                          ; preds = %sw.bb41, %for.body, %for.body
  store i8 1, i8* %val_only, align 8, !dbg !4930
  store i8 0, i8* %is_lhs, align 1, !dbg !4931
  %ops50 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4932
  %arrayidx51 = bitcast i40* %ops50 to %union.tree_node**, !dbg !4932
  call void @llvm.dbg.value(metadata i32* %dummy, metadata !4859, metadata !DIExpression(DW_OP_deref)), !dbg !4876
  %call52 = call %union.tree_node* @convert_local_reference_op(%union.tree_node** nonnull %arrayidx51, i32* nonnull %dummy, i8* %4) #7, !dbg !4933
  br label %for.inc, !dbg !4934

sw.default:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 1598, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4935
  br label %for.inc, !dbg !4936

for.inc:                                          ; preds = %lor.lhs.false, %land.lhs.true, %if.then30, %land.lhs.true27, %sw.bb48, %sw.default, %if.then33, %if.end24, %sw.bb41, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %need_frame.3 = phi i8 [ %need_frame.0, %sw.default ], [ %need_frame.0, %sw.bb48 ], [ %need_frame.0, %lor.lhs.false ], [ %need_frame.0, %land.lhs.true ], [ %need_frame.0, %land.lhs.true27 ], [ %need_frame.0, %if.end24 ], [ 1, %if.then33 ], [ %need_frame.0, %if.then30 ], [ %need_frame.0, %sw.bb41 ], [ %need_frame.0, %for.body ], [ %need_frame.0, %for.body ], [ %need_frame.0, %for.body ], [ %need_frame.0, %for.body ], [ %need_frame.0, %for.body ], [ %need_frame.0, %for.body ], !dbg !4885
  %need_stmts.4 = phi i8 [ %need_stmts.0, %sw.default ], [ %need_stmts.0, %sw.bb48 ], [ %need_stmts.3, %lor.lhs.false ], [ %need_stmts.3, %land.lhs.true ], [ %need_stmts.3, %land.lhs.true27 ], [ %need_stmts.3, %if.end24 ], [ %need_stmts.3, %if.then33 ], [ %need_stmts.3, %if.then30 ], [ %need_stmts.0, %sw.bb41 ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], [ %need_stmts.0, %for.body ], !dbg !4886
  call void @llvm.dbg.value(metadata i8 %need_stmts.4, metadata !4856, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8 %need_frame.3, metadata !4855, metadata !DIExpression()), !dbg !4876
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4937
  br label %for.cond, !dbg !4938, !llvm.loop !4939

for.end:                                          ; preds = %for.cond
  %need_frame.0.lcssa = phi i8 [ %need_frame.0, %for.cond ], !dbg !4885
  %need_stmts.0.lcssa = phi i8 [ %need_stmts.0, %for.cond ], !dbg !4886
  call void @llvm.dbg.value(metadata i8 %need_frame.0.lcssa, metadata !4855, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8 %need_stmts.0.lcssa, metadata !4856, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8 %need_frame.0.lcssa, metadata !4855, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8 %need_stmts.0.lcssa, metadata !4856, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8 %need_frame.0.lcssa, metadata !4855, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8 %need_stmts.0.lcssa, metadata !4856, metadata !DIExpression()), !dbg !4876
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %suppress_expansion, align 8, !dbg !4941
  %tobool55 = icmp eq i8 %need_stmts.0.lcssa, 0, !dbg !4942
  br i1 %tobool55, label %if.end97, label %if.then56, !dbg !4943

if.then56:                                        ; preds = %for.end
  %17 = bitcast %union.tree_node** %context to i64*, !dbg !4944
  br label %for.cond57, !dbg !4945

for.cond57:                                       ; preds = %for.inc93, %if.then56
  %clause.1.in = phi %union.tree_node** [ %pclauses, %if.then56 ], [ %chain95, %for.inc93 ]
  %clause.1 = load %union.tree_node*, %union.tree_node** %clause.1.in, align 8, !dbg !4946
  call void @llvm.dbg.value(metadata %union.tree_node* %clause.1, metadata !4857, metadata !DIExpression()), !dbg !4876
  %tobool58 = icmp eq %union.tree_node* %clause.1, null, !dbg !4947
  br i1 %tobool58, label %if.end97.loopexit, label %for.body59, !dbg !4947

for.body59:                                       ; preds = %for.cond57
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4948
  %19 = load i32, i32* %18, align 4, !dbg !4948
  switch i32 %19, label %for.inc93 [
    i32 5, label %sw.bb62
    i32 4, label %sw.bb88
  ], !dbg !4949

sw.bb62:                                          ; preds = %for.body59
  %ops64 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4950
  %arrayidx65 = getelementptr inbounds i40, i40* %ops64, i64 3, !dbg !4950
  %20 = bitcast i40* %arrayidx65 to %union.tree_node**, !dbg !4950
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !4950
  %tobool66 = icmp eq %union.tree_node* %21, null, !dbg !4950
  br i1 %tobool66, label %for.inc93, label %if.then67, !dbg !4951

if.then67:                                        ; preds = %sw.bb62
  %22 = bitcast i40* %arrayidx65 to %struct.tree_decl_minimal**, !dbg !4952
  %context72 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4952
  %23 = bitcast %union.tree_node** %context72 to i64*, !dbg !4952
  %24 = load i64, i64* %23, align 8, !dbg !4952
  %25 = load i64, i64* %17, align 8, !dbg !4953
  store i64 %25, i64* %23, align 8, !dbg !4954
  %gimple_reduction_init80 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4955
  %26 = bitcast %union.tree_node** %gimple_reduction_init80 to %struct.gimple_seq_d**, !dbg !4955
  %27 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %26, align 8, !dbg !4955
  call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_local_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %27) #7, !dbg !4956
  %gimple_reduction_merge = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4957
  %28 = bitcast %union.tree_node** %gimple_reduction_merge to %struct.gimple_seq_d**, !dbg !4957
  %29 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %28, align 8, !dbg !4957
  call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_local_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %29) #7, !dbg !4958
  %30 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %22, align 8, !dbg !4959
  %context86 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %30, i64 0, i32 4, !dbg !4959
  %31 = bitcast %union.tree_node** %context86 to i64*, !dbg !4960
  store i64 %24, i64* %31, align 8, !dbg !4960
  br label %for.inc93, !dbg !4961

sw.bb88:                                          ; preds = %for.body59
  %gimple_reduction_init90 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4962
  %32 = bitcast %union.tree_node** %gimple_reduction_init90 to %struct.gimple_seq_d**, !dbg !4962
  %33 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %32, align 8, !dbg !4962
  call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_local_reference_stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_local_reference_op, %struct.nesting_info* %1, %struct.gimple_seq_d* %33) #7, !dbg !4963
  br label %for.inc93, !dbg !4964

for.inc93:                                        ; preds = %sw.bb62, %sw.bb88, %if.then67, %for.body59
  %chain95 = getelementptr inbounds %union.tree_node, %union.tree_node* %clause.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4965
  br label %for.cond57, !dbg !4966, !llvm.loop !4967

if.end97.loopexit:                                ; preds = %for.cond57
  br label %if.end97, !dbg !4969

if.end97:                                         ; preds = %if.end97.loopexit, %for.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4969
  ret i8 %need_frame.0.lcssa, !dbg !4970
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_local_debug_decl(%struct.nesting_info* %info, %union.tree_node* %decl, %union.tree_node* %field) unnamed_addr #5 !dbg !4971 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !4975, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4976, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata %union.tree_node* %field, metadata !4977, metadata !DIExpression()), !dbg !4981
  %var_map = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 4, !dbg !4982
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** %var_map, align 8, !dbg !4982
  %1 = bitcast %union.tree_node* %decl to i8*, !dbg !4983
  %call = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !4984
  call void @llvm.dbg.value(metadata i8** %call, metadata !4980, metadata !DIExpression()), !dbg !4981
  %2 = load i8*, i8** %call, align 8, !dbg !4985
  %tobool = icmp eq i8* %2, null, !dbg !4985
  br i1 %tobool, label %if.end, label %if.then, !dbg !4987

if.then:                                          ; preds = %entry
  %3 = bitcast i8* %2 to %union.tree_node*, !dbg !4987
  br label %cleanup, !dbg !4988

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @get_frame_type(%struct.nesting_info* %info) #7, !dbg !4989
  %frame_decl = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 10, !dbg !4990
  %4 = load %union.tree_node*, %union.tree_node** %frame_decl, align 8, !dbg !4990
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !4978, metadata !DIExpression()), !dbg !4981
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4991
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4991
  %call2 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %5, %union.tree_node* %4, %union.tree_node* %field, %union.tree_node* null) #6, !dbg !4991
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4978, metadata !DIExpression()), !dbg !4981
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4992
  %6 = load i32, i32* %locus, align 8, !dbg !4992
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4992
  %7 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !4992
  %type5 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4992
  %8 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !4992
  %call6 = tail call %union.tree_node* @build_decl_stat(i32 %6, i32 32, %union.tree_node* %7, %union.tree_node* %8) #6, !dbg !4992
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !4979, metadata !DIExpression()), !dbg !4981
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !4993
  %9 = bitcast %union.tree_node** %context to i64*, !dbg !4993
  %10 = load i64, i64* %9, align 8, !dbg !4993
  %context8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4994
  %11 = bitcast %union.tree_node** %context8 to i64*, !dbg !4995
  store i64 %10, i64* %11, align 8, !dbg !4995
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4996
  %12 = bitcast i40* %artificial_flag to i64*, !dbg !4996
  %bf.load = load i64, i64* %12, align 8, !dbg !4996
  %bf.cast = and i64 %bf.load, 4096, !dbg !4996
  %artificial_flag10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4997
  %13 = bitcast i40* %artificial_flag10 to i64*, !dbg !4997
  %bf.load11 = load i64, i64* %13, align 8, !dbg !4998
  %bf.clear12 = and i64 %bf.load11, -4097, !dbg !4998
  %bf.set = or i64 %bf.clear12, %bf.cast, !dbg !4998
  store i64 %bf.set, i64* %13, align 8, !dbg !4998
  %bf.load14 = load i64, i64* %12, align 8, !dbg !4999
  %bf.cast17 = and i64 %bf.load14, 1024, !dbg !4999
  %bf.clear23 = and i64 %bf.set, -1025, !dbg !5000
  %bf.set24 = or i64 %bf.clear23, %bf.cast17, !dbg !5000
  store i64 %bf.set24, i64* %13, align 8, !dbg !5000
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5001
  %bf.load26 = load i64, i64* %14, align 8, !dbg !5001
  %bf.cast29 = and i64 %bf.load26, 524288, !dbg !5001
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5002
  %bf.load31 = load i64, i64* %15, align 8, !dbg !5003
  %bf.clear34 = and i64 %bf.load31, -524289, !dbg !5003
  %bf.set35 = or i64 %bf.clear34, %bf.cast29, !dbg !5003
  store i64 %bf.set35, i64* %15, align 8, !dbg !5003
  %bf.load38 = load i64, i64* %14, align 8, !dbg !5004
  %bf.cast41 = and i64 %bf.load38, 65536, !dbg !5004
  %bf.clear46 = and i64 %bf.set35, -65537, !dbg !5005
  %bf.set47 = or i64 %bf.clear46, %bf.cast41, !dbg !5005
  store i64 %bf.set47, i64* %15, align 8, !dbg !5005
  %bf.load50 = load i64, i64* %14, align 8, !dbg !5006
  %bf.cast53 = and i64 %bf.load50, 1048576, !dbg !5006
  %bf.clear58 = and i64 %bf.set47, -1048577, !dbg !5007
  %bf.set59 = or i64 %bf.clear58, %bf.cast53, !dbg !5007
  store i64 %bf.set59, i64* %15, align 8, !dbg !5007
  %bf.load62 = load i64, i64* %14, align 8, !dbg !5008
  %bf.cast65 = and i64 %bf.load62, 262144, !dbg !5008
  %bf.clear70 = and i64 %bf.set59, -262145, !dbg !5009
  %bf.set71 = or i64 %bf.clear70, %bf.cast65, !dbg !5009
  store i64 %bf.set71, i64* %15, align 8, !dbg !5009
  %seen_in_bind_expr = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5010
  %16 = bitcast i24* %seen_in_bind_expr to i32*, !dbg !5010
  %bf.load73 = load i32, i32* %16, align 8, !dbg !5011
  %bf.set75 = or i32 %bf.load73, 256, !dbg !5011
  store i32 %bf.set75, i32* %16, align 8, !dbg !5011
  %bf.load77 = load i64, i64* %14, align 8, !dbg !5012
  %bf.cast791 = and i64 %bf.load77, 65535, !dbg !5014
  %cmp = icmp eq i64 %bf.cast791, 34, !dbg !5014
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5015

lor.lhs.false:                                    ; preds = %if.end
  %cmp84 = icmp eq i64 %bf.cast791, 36, !dbg !5016
  br i1 %cmp84, label %land.lhs.true, label %lor.lhs.false85, !dbg !5017

lor.lhs.false85:                                  ; preds = %lor.lhs.false
  %cmp90 = icmp eq i64 %bf.cast791, 32, !dbg !5018
  br i1 %cmp90, label %land.lhs.true, label %if.end103, !dbg !5019

land.lhs.true:                                    ; preds = %lor.lhs.false85, %lor.lhs.false, %if.end
  %bf.load92 = load i64, i64* %12, align 8, !dbg !5020
  %bf.cast954 = and i64 %bf.load92, 268435456, !dbg !5020
  %tobool96 = icmp eq i64 %bf.cast954, 0, !dbg !5020
  br i1 %tobool96, label %if.end103, label %if.then97, !dbg !5021

if.then97:                                        ; preds = %land.lhs.true
  %bf.set102 = or i64 %bf.set24, 268435456, !dbg !5022
  store i64 %bf.set102, i64* %13, align 8, !dbg !5022
  br label %if.end103, !dbg !5023

if.end103:                                        ; preds = %land.lhs.true, %if.then97, %lor.lhs.false85
  tail call void @decl_value_expr_insert(%union.tree_node* %call6, %union.tree_node* %call2) #6, !dbg !5024
  %bf.load105 = load i64, i64* %13, align 8, !dbg !5025
  %bf.set107 = or i64 %bf.load105, 67108864, !dbg !5025
  store i64 %bf.set107, i64* %13, align 8, !dbg !5025
  %17 = bitcast i8** %call to %union.tree_node**, !dbg !5026
  store %union.tree_node* %call6, %union.tree_node** %17, align 8, !dbg !5026
  %debug_var_chain = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 8, !dbg !5027
  %18 = bitcast %union.tree_node** %debug_var_chain to i64*, !dbg !5027
  %19 = load i64, i64* %18, align 8, !dbg !5027
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5028
  %20 = bitcast %union.tree_node** %chain to i64*, !dbg !5029
  store i64 %19, i64* %20, align 8, !dbg !5029
  store %union.tree_node* %call6, %union.tree_node** %debug_var_chain, align 8, !dbg !5030
  %bf.load112 = load i64, i64* %12, align 8, !dbg !5031
  %bf.set114 = or i64 %bf.load112, 1024, !dbg !5031
  store i64 %bf.set114, i64* %12, align 8, !dbg !5031
  br label %cleanup, !dbg !5032

cleanup:                                          ; preds = %if.end103, %if.then
  %retval.0 = phi %union.tree_node* [ %3, %if.then ], [ %call6, %if.end103 ], !dbg !4981
  ret %union.tree_node* %retval.0, !dbg !5033
}

declare dso_local %union.tree_node* @create_artificial_label(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_nl_goto_field(%struct.nesting_info* %info) unnamed_addr #5 !dbg !5034 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !5036, metadata !DIExpression()), !dbg !5042
  %nl_goto_field = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 13, !dbg !5043
  %0 = load %union.tree_node*, %union.tree_node** %nl_goto_field, align 8, !dbg !5043
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5037, metadata !DIExpression()), !dbg !5042
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !5044
  br i1 %tobool, label %if.then, label %if.end16, !dbg !5045

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @ptr_mode, align 4, !dbg !5046
  %cmp = icmp eq i32 %1, 16, !dbg !5048
  br i1 %cmp, label %if.then1, label %if.else, !dbg !5049

if.then1:                                         ; preds = %if.then
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !5050
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5041, metadata !DIExpression()), !dbg !5051
  br label %if.end, !dbg !5052

if.else:                                          ; preds = %if.then
  %3 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !5053
  %call = tail call %union.tree_node* %3(i32 16, i32 1) #6, !dbg !5054
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5041, metadata !DIExpression()), !dbg !5051
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %type.0 = phi %union.tree_node* [ %2, %if.then1 ], [ %call, %if.else ], !dbg !5055
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !5041, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 1, metadata !5038, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 2, metadata !5038, metadata !DIExpression()), !dbg !5051
  %call6 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 2) #6, !dbg !5056
  %call7 = tail call %union.tree_node* @build_index_type(%union.tree_node* %call6) #6, !dbg !5057
  %call8 = tail call %union.tree_node* @build_array_type(%union.tree_node* %type.0, %union.tree_node* %call7) #6, !dbg !5058
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !5041, metadata !DIExpression()), !dbg !5051
  %call9 = tail call %union.tree_node* @make_node_stat(i32 31) #6, !dbg !5059
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5037, metadata !DIExpression()), !dbg !5042
  %call10 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5060
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5061
  store %union.tree_node* %call10, %union.tree_node** %name, align 8, !dbg !5062
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5063
  store %union.tree_node* %call8, %union.tree_node** %type11, align 8, !dbg !5064
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5065
  %5 = load i32, i32* %4, align 8, !dbg !5065
  %align13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5066
  store i32 %5, i32* %align13, align 8, !dbg !5067
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5068
  %bf.load = load i64, i64* %6, align 8, !dbg !5069
  %bf.set = or i64 %bf.load, 262144, !dbg !5069
  store i64 %bf.set, i64* %6, align 8, !dbg !5069
  %call14 = tail call fastcc %union.tree_node* @get_frame_type(%struct.nesting_info* %info) #7, !dbg !5070
  tail call void @insert_field_into_struct(%union.tree_node* %call14, %union.tree_node* %call9) #7, !dbg !5071
  store %union.tree_node* %call9, %union.tree_node** %nl_goto_field, align 8, !dbg !5072
  br label %if.end16, !dbg !5073

if.end16:                                         ; preds = %entry, %if.end
  %field.0 = phi %union.tree_node* [ %0, %entry ], [ %call9, %if.end ], !dbg !5042
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !5037, metadata !DIExpression()), !dbg !5042
  ret %union.tree_node* %field.0, !dbg !5074
}

declare dso_local %union.gimple_statement_d* @gimple_build_call(%union.tree_node*, i32, ...) local_unnamed_addr #2

declare dso_local void @gsi_replace(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_array_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_index_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5075 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5077, metadata !DIExpression()), !dbg !5078
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !5079
  ret %union.tree_node* %call, !dbg !5080
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_prev(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !5081 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5085, metadata !DIExpression()), !dbg !5086
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5087
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5087
  %prev = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 1, !dbg !5088
  %1 = bitcast %struct.gimple_seq_node_d** %prev to i64*, !dbg !5088
  %2 = load i64, i64* %1, align 8, !dbg !5088
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !5089
  store i64 %2, i64* %3, align 8, !dbg !5089
  ret void, !dbg !5090
}

declare dso_local zeroext i8 @gimple_stmt_may_fallthru(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_goto(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_label(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @convert_tramp_reference_stmt(%struct.gimple_stmt_iterator* %gsi, i8* %handled_ops_p, %struct.walk_stmt_info* %wi) #5 !dbg !5091 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5093, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i8* %handled_ops_p, metadata !5094, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !5095, metadata !DIExpression()), !dbg !5101
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5102
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5096, metadata !DIExpression()), !dbg !5101
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !5103
  %cond = icmp eq i32 %call1, 8, !dbg !5104
  br i1 %cond, label %sw.bb, label %sw.epilog, !dbg !5104

sw.bb:                                            ; preds = %entry
  %call2 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call) #7, !dbg !5105
  %conv = zext i32 %call2 to i64, !dbg !5105
  call void @llvm.dbg.value(metadata i64 %conv, metadata !5100, metadata !DIExpression()), !dbg !5106
  call void @llvm.dbg.value(metadata i64 0, metadata !5097, metadata !DIExpression()), !dbg !5106
  %0 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !5107
  br label %for.cond, !dbg !5110

for.cond:                                         ; preds = %for.body, %sw.bb
  %i.0 = phi i64 [ 0, %sw.bb ], [ %inc, %for.body ], !dbg !5111
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5097, metadata !DIExpression()), !dbg !5106
  %exitcond = icmp eq i64 %i.0, %conv, !dbg !5112
  br i1 %exitcond, label %for.end, label %for.body, !dbg !5113

for.body:                                         ; preds = %for.cond
  %conv4 = trunc i64 %i.0 to i32, !dbg !5114
  %call5 = tail call fastcc %union.tree_node** @gimple_call_arg_ptr(%union.gimple_statement_d* %call, i32 %conv4) #7, !dbg !5114
  %call6 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** %call5, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @convert_tramp_reference_op, i8* %0, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !5114
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5115
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5097, metadata !DIExpression()), !dbg !5106
  br label %for.cond, !dbg !5116, !llvm.loop !5117

for.end:                                          ; preds = %for.cond
  br label %cleanup

sw.epilog:                                        ; preds = %entry
  br label %cleanup, !dbg !5119

cleanup:                                          ; preds = %sw.epilog, %for.end
  %storemerge = phi i8 [ 0, %sw.epilog ], [ 1, %for.end ], !dbg !5101
  store i8 %storemerge, i8* %handled_ops_p, align 1, !dbg !5101
  ret %union.tree_node* null, !dbg !5120
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @convert_tramp_reference_op(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !5121 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !5123, metadata !DIExpression()), !dbg !5135
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !5124, metadata !DIExpression()), !dbg !5135
  call void @llvm.dbg.value(metadata i8* %data, metadata !5125, metadata !DIExpression()), !dbg !5135
  call void @llvm.dbg.value(metadata i8* %data, metadata !5126, metadata !DIExpression()), !dbg !5135
  %info1 = getelementptr inbounds i8, i8* %data, i64 24, !dbg !5136
  %0 = bitcast i8* %info1 to %struct.nesting_info**, !dbg !5136
  %1 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !5136
  call void @llvm.dbg.value(metadata %struct.nesting_info* %1, metadata !5127, metadata !DIExpression()), !dbg !5135
  %2 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !5137
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5129, metadata !DIExpression()), !dbg !5135
  store i32 0, i32* %walk_subtrees, align 4, !dbg !5138
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5139
  %bf.load = load i64, i64* %3, align 8, !dbg !5139
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5140
  %cond = icmp eq i64 %bf.cast1, 121, !dbg !5140
  br i1 %cond, label %sw.bb, label %sw.default, !dbg !5140

sw.bb:                                            ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5141
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5141
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5130, metadata !DIExpression()), !dbg !5135
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5143
  %bf.load3 = load i64, i64* %5, align 8, !dbg !5143
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !5145
  %cmp = icmp eq i64 %bf.cast52, 29, !dbg !5145
  br i1 %cmp, label %if.end, label %sw.epilog, !dbg !5146

if.end:                                           ; preds = %sw.bb
  %call6 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %4) #6, !dbg !5147
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !5131, metadata !DIExpression()), !dbg !5135
  %tobool = icmp eq %union.tree_node* %call6, null, !dbg !5148
  br i1 %tobool, label %sw.epilog, label %if.end8, !dbg !5150

if.end8:                                          ; preds = %if.end
  %regdecl_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 5, !dbg !5151
  %bf.load9 = load i32, i32* %regdecl_flag, align 8, !dbg !5151
  %bf.clear10 = and i32 %bf.load9, 4194304, !dbg !5151
  %tobool11 = icmp eq i32 %bf.clear10, 0, !dbg !5151
  br i1 %tobool11, label %sw.epilog, label %if.end13, !dbg !5153

if.end13:                                         ; preds = %if.end8
  %bf.load15 = load i64, i64* %3, align 8, !dbg !5154
  %bf.cast183 = and i64 %bf.load15, 67108864, !dbg !5154
  %tobool19 = icmp eq i64 %bf.cast183, 0, !dbg !5154
  br i1 %tobool19, label %for.cond.preheader, label %sw.epilog, !dbg !5156

for.cond.preheader:                               ; preds = %if.end13
  br label %for.cond, !dbg !5157

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi %struct.nesting_info* [ %7, %for.inc ], [ %1, %for.cond.preheader ], !dbg !5159
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.0, metadata !5128, metadata !DIExpression()), !dbg !5135
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i.0, i64 0, i32 6, !dbg !5160
  %6 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !5160
  %cmp22 = icmp eq %union.tree_node* %6, %call6, !dbg !5162
  br i1 %cmp22, label %for.end, label %for.inc, !dbg !5157

for.inc:                                          ; preds = %for.cond
  %outer = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i.0, i64 0, i32 0, !dbg !5163
  %7 = load %struct.nesting_info*, %struct.nesting_info** %outer, align 8, !dbg !5163
  call void @llvm.dbg.value(metadata %struct.nesting_info* %7, metadata !5128, metadata !DIExpression()), !dbg !5135
  br label %for.cond, !dbg !5164, !llvm.loop !5165

for.end:                                          ; preds = %for.cond
  %i.0.lcssa = phi %struct.nesting_info* [ %i.0, %for.cond ], !dbg !5159
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.0.lcssa, metadata !5128, metadata !DIExpression()), !dbg !5135
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.0.lcssa, metadata !5128, metadata !DIExpression()), !dbg !5135
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.0.lcssa, metadata !5128, metadata !DIExpression()), !dbg !5135
  %call23 = tail call fastcc %union.tree_node* @lookup_tramp_for_decl(%struct.nesting_info* %i.0.lcssa, %union.tree_node* %4, i32 1) #7, !dbg !5167
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !5132, metadata !DIExpression()), !dbg !5135
  %gsi = bitcast i8* %data to %struct.gimple_stmt_iterator*, !dbg !5168
  %call24 = tail call fastcc %union.tree_node* @get_frame_field(%struct.nesting_info* %1, %union.tree_node* nonnull %call6, %union.tree_node* %call23, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5169
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !5132, metadata !DIExpression()), !dbg !5135
  %call25 = tail call %union.tree_node* @build_addr(%union.tree_node* %call24, %union.tree_node* nonnull %call6) #7, !dbg !5170
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !5132, metadata !DIExpression()), !dbg !5135
  %call27 = tail call fastcc %union.tree_node* @gsi_gimplify_val(%struct.nesting_info* %1, %union.tree_node* %call25, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5171
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !5132, metadata !DIExpression()), !dbg !5135
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 521), align 8, !dbg !5172
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5133, metadata !DIExpression()), !dbg !5135
  %call28 = tail call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %8, i32 1, %union.tree_node* %call27) #6, !dbg !5173
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call28, metadata !5134, metadata !DIExpression()), !dbg !5135
  %call30 = tail call fastcc %union.tree_node* @init_tmp_var_with_call(%struct.nesting_info* %1, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call28) #7, !dbg !5174
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !5132, metadata !DIExpression()), !dbg !5135
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5175
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5175
  %call31 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %9, %union.tree_node* %call30) #6, !dbg !5175
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !5132, metadata !DIExpression()), !dbg !5135
  %call33 = tail call fastcc %union.tree_node* @init_tmp_var(%struct.nesting_info* %1, %union.tree_node* %call31, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5176
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !5132, metadata !DIExpression()), !dbg !5135
  store %union.tree_node* %call33, %union.tree_node** %tp, align 8, !dbg !5177
  br label %sw.epilog, !dbg !5178

sw.default:                                       ; preds = %entry
  %arrayidx38 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast1, !dbg !5179
  %10 = load i32, i32* %arrayidx38, align 4, !dbg !5179
  %cmp39 = icmp eq i32 %10, 2, !dbg !5179
  br i1 %cmp39, label %sw.epilog, label %lor.lhs.false, !dbg !5179

lor.lhs.false:                                    ; preds = %sw.default
  %cmp46 = icmp eq i32 %10, 3, !dbg !5179
  br i1 %cmp46, label %sw.epilog, label %if.then47, !dbg !5181

if.then47:                                        ; preds = %lor.lhs.false
  store i32 1, i32* %walk_subtrees, align 4, !dbg !5182
  br label %sw.epilog, !dbg !5183

sw.epilog:                                        ; preds = %if.end13, %if.end8, %if.end, %sw.bb, %sw.default, %lor.lhs.false, %if.then47, %for.end
  ret %union.tree_node* null, !dbg !5184
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @convert_gimple_call(%struct.gimple_stmt_iterator* %gsi, i8* %handled_ops_p, %struct.walk_stmt_info* %wi) #5 !dbg !5185 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5187, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i8* %handled_ops_p, metadata !5188, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !5189, metadata !DIExpression()), !dbg !5202
  %info1 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !5203
  %0 = bitcast i8** %info1 to %struct.nesting_info**, !dbg !5203
  %1 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !5203
  call void @llvm.dbg.value(metadata %struct.nesting_info* %1, metadata !5190, metadata !DIExpression()), !dbg !5202
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5204
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5195, metadata !DIExpression()), !dbg !5202
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !5205
  switch i32 %call2, label %sw.default [
    i32 8, label %sw.bb
    i32 26, label %sw.bb17
    i32 27, label %sw.bb17
    i32 23, label %sw.bb71
    i32 30, label %sw.bb73
    i32 29, label %sw.bb73
    i32 32, label %sw.bb73
    i32 24, label %sw.bb73
    i32 25, label %sw.bb73
    i32 22, label %sw.bb73
  ], !dbg !5206

sw.bb:                                            ; preds = %entry
  %call3 = tail call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %call) #7, !dbg !5207
  %tobool = icmp eq %union.tree_node* %call3, null, !dbg !5207
  br i1 %tobool, label %if.end, label %sw.epilog, !dbg !5209

if.end:                                           ; preds = %sw.bb
  %call4 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call) #7, !dbg !5210
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5191, metadata !DIExpression()), !dbg !5202
  %tobool5 = icmp eq %union.tree_node* %call4, null, !dbg !5211
  br i1 %tobool5, label %sw.epilog, label %if.end7, !dbg !5213

if.end7:                                          ; preds = %if.end
  %call8 = tail call %union.tree_node* @decl_function_context(%union.tree_node* nonnull %call4) #6, !dbg !5214
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !5192, metadata !DIExpression()), !dbg !5202
  %tobool9 = icmp eq %union.tree_node* %call8, null, !dbg !5215
  br i1 %tobool9, label %sw.epilog, label %land.lhs.true, !dbg !5217

land.lhs.true:                                    ; preds = %if.end7
  %regdecl_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 5, !dbg !5218
  %bf.load = load i32, i32* %regdecl_flag, align 8, !dbg !5218
  %bf.clear = and i32 %bf.load, 4194304, !dbg !5218
  %tobool10 = icmp eq i32 %bf.clear, 0, !dbg !5218
  br i1 %tobool10, label %sw.epilog, label %if.then11, !dbg !5219

if.then11:                                        ; preds = %land.lhs.true
  %gsi12 = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 0, !dbg !5220
  %call13 = tail call fastcc %union.tree_node* @get_static_chain(%struct.nesting_info* %1, %union.tree_node* nonnull %call8, %struct.gimple_stmt_iterator* %gsi12) #7, !dbg !5222
  tail call fastcc void @gimple_call_set_chain(%union.gimple_statement_d* %call, %union.tree_node* %call13) #7, !dbg !5223
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 6, !dbg !5224
  %2 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !5224
  %cmp = icmp ne %union.tree_node* %2, %call8, !dbg !5225
  %conv = zext i1 %cmp to i32, !dbg !5225
  %shl = shl i32 1, %conv, !dbg !5226
  %static_chain_added = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 16, !dbg !5227
  %3 = load i8, i8* %static_chain_added, align 2, !dbg !5228
  %4 = trunc i32 %shl to i8, !dbg !5228
  %conv15 = or i8 %3, %4, !dbg !5228
  store i8 %conv15, i8* %static_chain_added, align 2, !dbg !5228
  br label %sw.epilog, !dbg !5229

sw.bb17:                                          ; preds = %entry, %entry
  %static_chain_added18 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 16, !dbg !5230
  %5 = load i8, i8* %static_chain_added18, align 2, !dbg !5230
  call void @llvm.dbg.value(metadata i8 %5, metadata !5193, metadata !DIExpression()), !dbg !5202
  store i8 0, i8* %static_chain_added18, align 2, !dbg !5231
  %call20 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !5232
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_gimple_call, %union.tree_node* (%union.tree_node**, i32*, i8*)* null, %struct.nesting_info* %1, %struct.gimple_seq_d* %call20) #7, !dbg !5233
  call void @llvm.dbg.value(metadata i32 0, metadata !5194, metadata !DIExpression()), !dbg !5202
  %frame_decl = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 10, !dbg !5234
  br label %for.cond, !dbg !5235

for.cond:                                         ; preds = %cleanup, %sw.bb17
  %i.0 = phi i32 [ 0, %sw.bb17 ], [ %inc, %cleanup ], !dbg !5236
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5194, metadata !DIExpression()), !dbg !5202
  %exitcond = icmp eq i32 %i.0, 2, !dbg !5237
  br i1 %exitcond, label %for.end65, label %for.body, !dbg !5238

for.body:                                         ; preds = %for.cond
  %6 = load i8, i8* %static_chain_added18, align 2, !dbg !5239
  %conv25 = sext i8 %6 to i32, !dbg !5241
  %shl26 = shl i32 1, %i.0, !dbg !5242
  %and = and i32 %shl26, %conv25, !dbg !5243
  %cmp27 = icmp eq i32 %and, 0, !dbg !5244
  br i1 %cmp27, label %cleanup, label %if.end30, !dbg !5245

if.end30:                                         ; preds = %for.body
  %tobool31 = icmp eq i32 %i.0, 0, !dbg !5246
  br i1 %tobool31, label %cond.false, label %cond.true, !dbg !5246

cond.true:                                        ; preds = %if.end30
  %call32 = tail call fastcc %union.tree_node* @get_chain_decl(%struct.nesting_info* %1) #7, !dbg !5247
  br label %cond.end, !dbg !5246

cond.false:                                       ; preds = %if.end30
  %7 = load %union.tree_node*, %union.tree_node** %frame_decl, align 8, !dbg !5248
  br label %cond.end, !dbg !5246

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %call32, %cond.true ], [ %7, %cond.false ], !dbg !5246
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !5201, metadata !DIExpression()), !dbg !5234
  %call33 = tail call fastcc %union.tree_node* @gimple_omp_taskreg_clauses(%union.gimple_statement_d* %call) #7, !dbg !5249
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !5196, metadata !DIExpression()), !dbg !5234
  br label %for.cond34, !dbg !5251

for.cond34:                                       ; preds = %for.inc, %cond.end
  %c.0 = phi %union.tree_node* [ %call33, %cond.end ], [ %11, %for.inc ], !dbg !5252
  call void @llvm.dbg.value(metadata %union.tree_node* %c.0, metadata !5196, metadata !DIExpression()), !dbg !5234
  %cond1 = icmp eq %union.tree_node* %c.0, null, !dbg !5253
  br i1 %cond1, label %if.then51.loopexit, label %for.body36, !dbg !5253

for.body36:                                       ; preds = %for.cond34
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5254
  %9 = load i32, i32* %8, align 4, !dbg !5254
  %cmp37 = icmp eq i32 %9, 3, !dbg !5257
  br i1 %cmp37, label %land.lhs.true43, label %lor.lhs.false, !dbg !5258

lor.lhs.false:                                    ; preds = %for.body36
  %cmp41 = icmp eq i32 %9, 2, !dbg !5259
  br i1 %cmp41, label %land.lhs.true43, label %for.inc, !dbg !5260

land.lhs.true43:                                  ; preds = %lor.lhs.false, %for.body36
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5261
  %arrayidx = bitcast i40* %ops to %union.tree_node**, !dbg !5261
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5261
  %cmp45 = icmp eq %union.tree_node* %10, %cond, !dbg !5262
  br i1 %cmp45, label %for.end, label %for.inc, !dbg !5263

for.inc:                                          ; preds = %lor.lhs.false, %land.lhs.true43
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5264
  %11 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5264
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !5196, metadata !DIExpression()), !dbg !5234
  br label %for.cond34, !dbg !5265, !llvm.loop !5266

for.end:                                          ; preds = %land.lhs.true43
  br label %cleanup, !dbg !5268

if.then51.loopexit:                               ; preds = %for.cond34
  %call52 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !5269
  %cond54 = select i1 %tobool31, i32 2, i32 3, !dbg !5272
  %call55 = tail call %union.tree_node* @build_omp_clause(i32 %call52, i32 %cond54) #6, !dbg !5273
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !5196, metadata !DIExpression()), !dbg !5234
  %ops57 = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5274
  %arrayidx58 = bitcast i40* %ops57 to %union.tree_node**, !dbg !5274
  store %union.tree_node* %cond, %union.tree_node** %arrayidx58, align 8, !dbg !5275
  %call59 = tail call fastcc %union.tree_node* @gimple_omp_taskreg_clauses(%union.gimple_statement_d* %call) #7, !dbg !5276
  %chain61 = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5277
  store %union.tree_node* %call59, %union.tree_node** %chain61, align 8, !dbg !5278
  tail call fastcc void @gimple_omp_taskreg_set_clauses(%union.gimple_statement_d* %call, %union.tree_node* %call55) #7, !dbg !5279
  br label %cleanup, !dbg !5280

cleanup:                                          ; preds = %for.end, %if.then51.loopexit, %for.body
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5281
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5194, metadata !DIExpression()), !dbg !5202
  br label %for.cond, !dbg !5282, !llvm.loop !5283

for.end65:                                        ; preds = %for.cond
  %12 = load i8, i8* %static_chain_added18, align 2, !dbg !5285
  %or692 = or i8 %12, %5, !dbg !5285
  store i8 %or692, i8* %static_chain_added18, align 2, !dbg !5285
  br label %sw.epilog, !dbg !5286

sw.bb71:                                          ; preds = %entry
  %call72 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_for_pre_body(%union.gimple_statement_d* %call) #7, !dbg !5287
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_gimple_call, %union.tree_node* (%union.tree_node**, i32*, i8*)* null, %struct.nesting_info* %1, %struct.gimple_seq_d* %call72) #7, !dbg !5288
  br label %sw.bb73, !dbg !5288

sw.bb73:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb71
  %call74 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !5289
  tail call fastcc void @walk_body(%union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @convert_gimple_call, %union.tree_node* (%union.tree_node**, i32*, i8*)* null, %struct.nesting_info* %1, %struct.gimple_seq_d* %call74) #7, !dbg !5290
  br label %sw.epilog, !dbg !5291

sw.default:                                       ; preds = %entry
  br label %cleanup75, !dbg !5292

sw.epilog:                                        ; preds = %land.lhs.true, %if.end7, %if.end, %sw.bb, %if.then11, %sw.bb73, %for.end65
  br label %cleanup75, !dbg !5293

cleanup75:                                        ; preds = %sw.epilog, %sw.default
  %storemerge = phi i8 [ 1, %sw.epilog ], [ 0, %sw.default ], !dbg !5202
  store i8 %storemerge, i8* %handled_ops_p, align 1, !dbg !5202
  ret %union.tree_node* null, !dbg !5294
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5295 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5299, metadata !DIExpression()), !dbg !5301
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !5302
  call void @llvm.dbg.value(metadata i32 %call, metadata !5300, metadata !DIExpression()), !dbg !5301
  %sub = add i32 %call, -3, !dbg !5303
  ret i32 %sub, !dbg !5304
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_call_arg_ptr(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !5305 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5309, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.value(metadata i32 %index, metadata !5310, metadata !DIExpression()), !dbg !5311
  %add = add i32 %index, 3, !dbg !5312
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !5313
  ret %union.tree_node** %call, !dbg !5314
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5315 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5317, metadata !DIExpression()), !dbg !5318
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !5319
  %0 = load i32, i32* %num_ops, align 4, !dbg !5319
  ret i32 %0, !dbg !5320
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5321 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5323, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.value(metadata i32 %i, metadata !5324, metadata !DIExpression()), !dbg !5325
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !5326
  %tobool = icmp eq i8 %call, 0, !dbg !5326
  br i1 %tobool, label %return, label %if.then, !dbg !5328

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !5329
  %idx.ext = zext i32 %i to i64, !dbg !5331
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idx.ext, !dbg !5331
  br label %return, !dbg !5332

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node** [ %add.ptr, %if.then ], [ null, %entry ], !dbg !5333
  ret %union.tree_node** %retval.0, !dbg !5334
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lookup_tramp_for_decl(%struct.nesting_info* %info, %union.tree_node* %decl, i32 %insert) unnamed_addr #5 !dbg !5335 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !5337, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !5338, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.value(metadata i32 %insert, metadata !5339, metadata !DIExpression()), !dbg !5344
  %cmp = icmp eq i32 %insert, 0, !dbg !5345
  %var_map = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 4, !dbg !5344
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** %var_map, align 8, !dbg !5344
  %1 = bitcast %union.tree_node* %decl to i8*, !dbg !5344
  br i1 %cmp, label %if.then, label %if.end, !dbg !5347

if.then:                                          ; preds = %entry
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !5348
  call void @llvm.dbg.value(metadata i8** %call, metadata !5340, metadata !DIExpression()), !dbg !5344
  %tobool = icmp eq i8** %call, null, !dbg !5350
  br i1 %tobool, label %cleanup, label %cond.true, !dbg !5350

cond.true:                                        ; preds = %if.then
  %2 = bitcast i8** %call to %union.tree_node**, !dbg !5351
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !5351
  br label %cleanup, !dbg !5350

if.end:                                           ; preds = %entry
  %call2 = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !5352
  call void @llvm.dbg.value(metadata i8** %call2, metadata !5340, metadata !DIExpression()), !dbg !5344
  %4 = load i8*, i8** %call2, align 8, !dbg !5353
  %tobool3 = icmp eq i8* %4, null, !dbg !5353
  br i1 %tobool3, label %if.then4, label %if.end.if.end10_crit_edge, !dbg !5354

if.end.if.end10_crit_edge:                        ; preds = %if.end
  %5 = bitcast i8* %4 to %union.tree_node*, !dbg !5354
  br label %if.end10, !dbg !5354

if.then4:                                         ; preds = %if.end
  %call5 = tail call %union.tree_node* @make_node_stat(i32 31) #6, !dbg !5355
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5341, metadata !DIExpression()), !dbg !5356
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5357
  %6 = bitcast %union.tree_node** %name to i64*, !dbg !5357
  %7 = load i64, i64* %6, align 8, !dbg !5357
  %name7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5358
  %8 = bitcast %union.tree_node** %name7 to i64*, !dbg !5359
  store i64 %7, i64* %8, align 8, !dbg !5359
  %call8 = tail call fastcc %union.tree_node* @get_trampoline_type(%struct.nesting_info* %info) #7, !dbg !5360
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5361
  store %union.tree_node* %call8, %union.tree_node** %type, align 8, !dbg !5362
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5363
  %bf.load = load i64, i64* %9, align 8, !dbg !5364
  %bf.set = or i64 %bf.load, 262144, !dbg !5364
  store i64 %bf.set, i64* %9, align 8, !dbg !5364
  %call9 = tail call fastcc %union.tree_node* @get_frame_type(%struct.nesting_info* %info) #7, !dbg !5365
  tail call void @insert_field_into_struct(%union.tree_node* %call9, %union.tree_node* %call5) #7, !dbg !5366
  %10 = bitcast i8** %call2 to %union.tree_node**, !dbg !5367
  store %union.tree_node* %call5, %union.tree_node** %10, align 8, !dbg !5367
  %any_tramp_created = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 15, !dbg !5368
  store i8 1, i8* %any_tramp_created, align 1, !dbg !5369
  %.pre = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !5370
  br label %if.end10, !dbg !5371

if.end10:                                         ; preds = %if.end.if.end10_crit_edge, %if.then4
  %11 = phi %union.tree_node* [ %5, %if.end.if.end10_crit_edge ], [ %.pre, %if.then4 ], !dbg !5370
  br label %cleanup, !dbg !5372

cleanup:                                          ; preds = %if.then, %cond.true, %if.end10
  %retval.0 = phi %union.tree_node* [ %11, %if.end10 ], [ %3, %cond.true ], [ null, %if.then ], !dbg !5344
  ret %union.tree_node* %retval.0, !dbg !5373
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @init_tmp_var_with_call(%struct.nesting_info* %info, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call) unnamed_addr #5 !dbg !5374 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !5378, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5379, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5380, metadata !DIExpression()), !dbg !5382
  %call1 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %call) #7, !dbg !5383
  %call2 = tail call fastcc %union.tree_node* @create_tmp_var_for(%struct.nesting_info* %info, %union.tree_node* %call1, i8* null) #7, !dbg !5384
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !5381, metadata !DIExpression()), !dbg !5382
  tail call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call, %union.tree_node* %call2) #7, !dbg !5385
  %call3 = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5386
  %tobool = icmp eq i8 %call3, 0, !dbg !5386
  br i1 %tobool, label %if.then, label %if.end, !dbg !5388

if.then:                                          ; preds = %entry
  %call4 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5389
  %call5 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call4) #7, !dbg !5390
  tail call fastcc void @gimple_set_location(%union.gimple_statement_d* %call, i32 %call5) #7, !dbg !5391
  br label %if.end, !dbg !5391

if.end:                                           ; preds = %entry, %if.then
  tail call void @gsi_insert_before(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call, i32 1) #6, !dbg !5392
  ret %union.tree_node* %call2, !dbg !5393
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_trampoline_type(%struct.nesting_info* %info) unnamed_addr #5 !dbg !5394 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !5396, metadata !DIExpression()), !dbg !5400
  %0 = load %union.tree_node*, %union.tree_node** @trampoline_type, align 8, !dbg !5401
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !5401
  br i1 %tobool, label %if.end, label %if.then, !dbg !5403

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !5404

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 8, metadata !5397, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i32 10, metadata !5398, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i32 8, metadata !5397, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i32 10, metadata !5398, metadata !DIExpression()), !dbg !5400
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 9) #6, !dbg !5405
  %call4 = tail call %union.tree_node* @build_index_type(%union.tree_node* %call) #6, !dbg !5406
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5399, metadata !DIExpression()), !dbg !5400
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !5407
  %call5 = tail call %union.tree_node* @build_array_type(%union.tree_node* %1, %union.tree_node* %call4) #6, !dbg !5408
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5399, metadata !DIExpression()), !dbg !5400
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !5409
  %2 = bitcast %union.tree_node** %context to %struct.tree_decl_minimal**, !dbg !5409
  %3 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %2, align 8, !dbg !5409
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %3, i64 0, i32 1, !dbg !5409
  %4 = load i32, i32* %locus, align 8, !dbg !5409
  %call6 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5409
  %call7 = tail call %union.tree_node* @build_decl_stat(i32 %4, i32 31, %union.tree_node* %call6, %union.tree_node* %call5) #6, !dbg !5409
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5399, metadata !DIExpression()), !dbg !5400
  %align8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5410
  store i32 8, i32* %align8, align 8, !dbg !5411
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5412
  %bf.load = load i64, i64* %5, align 8, !dbg !5413
  %bf.set = or i64 %bf.load, 4398046511104, !dbg !5413
  store i64 %bf.set, i64* %5, align 8, !dbg !5413
  %call9 = tail call %union.tree_node* @make_node_stat(i32 16) #6, !dbg !5414
  store %union.tree_node* %call9, %union.tree_node** @trampoline_type, align 8, !dbg !5415
  %call10 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5416
  %6 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** @trampoline_type to %struct.tree_type**), align 8, !dbg !5417
  %name = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 12, !dbg !5417
  store %union.tree_node* %call10, %union.tree_node** %name, align 8, !dbg !5418
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 1, !dbg !5419
  store %union.tree_node* %call7, %union.tree_node** %values, align 8, !dbg !5420
  %.cast = bitcast %struct.tree_type* %6 to %union.tree_node*, !dbg !5421
  tail call void @layout_type(%union.tree_node* %.cast) #6, !dbg !5422
  %7 = load i64, i64* bitcast (%union.tree_node** @trampoline_type to i64*), align 8, !dbg !5423
  %context13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5424
  %8 = bitcast %union.tree_node** %context13 to i64*, !dbg !5425
  store i64 %7, i64* %8, align 8, !dbg !5425
  %.cast1 = inttoptr i64 %7 to %union.tree_node*, !dbg !5426
  br label %cleanup, !dbg !5427

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ %.cast1, %if.end ], !dbg !5400
  ret %union.tree_node* %retval.0, !dbg !5428
}

declare dso_local void @layout_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5429 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5431, metadata !DIExpression()), !dbg !5434
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !5435
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5432, metadata !DIExpression()), !dbg !5434
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5436
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !5436
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !5436
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !5437
  %2 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !5437
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !5437
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !5438
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !5438
  ret %union.tree_node* %4, !dbg !5439
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !5440 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5442, metadata !DIExpression()), !dbg !5444
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !5443, metadata !DIExpression()), !dbg !5444
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !5445
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !5446
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5448

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5449
  %bf.load = load i64, i64* %0, align 8, !dbg !5449
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5450
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5450
  br i1 %cmp, label %if.then, label %if.end, !dbg !5451

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5452
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5452
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !5453
  br label %if.end, !dbg !5452

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !5454
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5455 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5457, metadata !DIExpression()), !dbg !5458
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !5459
  ret %union.tree_node* %call, !dbg !5460
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !5461 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5465, metadata !DIExpression()), !dbg !5468
  call void @llvm.dbg.value(metadata i32 %i, metadata !5466, metadata !DIExpression()), !dbg !5468
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !5467, metadata !DIExpression()), !dbg !5468
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !5469
  %tobool = icmp eq i8 %call, 0, !dbg !5469
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !5469

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !5469
  %cmp = icmp ugt i32 %call1, %i, !dbg !5469
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5469

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5469
  br label %cond.end, !dbg !5469

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !5470
  %idxprom = zext i32 %i to i64, !dbg !5470
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !5470
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !5471
  ret void, !dbg !5472
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5473 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5475, metadata !DIExpression()), !dbg !5476
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !5477
  ret %union.tree_node* %call, !dbg !5478
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5479 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5481, metadata !DIExpression()), !dbg !5483
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !5484
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5482, metadata !DIExpression()), !dbg !5483
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5485
  %bf.load = load i64, i64* %0, align 8, !dbg !5485
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5487
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !5487
  br i1 %cmp, label %if.then, label %cleanup, !dbg !5488

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5489
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5489
  br label %cleanup, !dbg !5490

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !5483
  ret %union.tree_node* %retval.0, !dbg !5491
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_chain(%union.gimple_statement_d* %gs, %union.tree_node* %chain) unnamed_addr #0 !dbg !5492 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5494, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.value(metadata %union.tree_node* %chain, metadata !5495, metadata !DIExpression()), !dbg !5496
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 2, %union.tree_node* %chain) #7, !dbg !5497
  ret void, !dbg !5498
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_static_chain(%struct.nesting_info* %info, %union.tree_node* %target_context, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !5499 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %info, metadata !5501, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.value(metadata %union.tree_node* %target_context, metadata !5502, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5503, metadata !DIExpression()), !dbg !5512
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 6, !dbg !5513
  %0 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !5513
  %cmp = icmp eq %union.tree_node* %0, %target_context, !dbg !5514
  br i1 %cmp, label %if.then, label %if.else, !dbg !5515

if.then:                                          ; preds = %entry
  %frame_decl = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info, i64 0, i32 10, !dbg !5516
  %1 = load %union.tree_node*, %union.tree_node** %frame_decl, align 8, !dbg !5516
  %call = tail call %union.tree_node* @build_addr(%union.tree_node* %1, %union.tree_node* %target_context) #7, !dbg !5518
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5505, metadata !DIExpression()), !dbg !5512
  br label %if.end, !dbg !5519

if.else:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @get_chain_decl(%struct.nesting_info* %info) #7, !dbg !5520
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5505, metadata !DIExpression()), !dbg !5512
  br label %for.cond, !dbg !5521

for.cond:                                         ; preds = %for.body, %if.else
  %info.pn = phi %struct.nesting_info* [ %info, %if.else ], [ %i.0, %for.body ]
  %x.0 = phi %union.tree_node* [ %call1, %if.else ], [ %call11, %for.body ], !dbg !5522
  %i.0.in = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %info.pn, i64 0, i32 0, !dbg !5523
  %i.0 = load %struct.nesting_info*, %struct.nesting_info** %i.0.in, align 8, !dbg !5523
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0, metadata !5505, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.0, metadata !5504, metadata !DIExpression()), !dbg !5512
  %context2 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i.0, i64 0, i32 6, !dbg !5524
  %2 = load %union.tree_node*, %union.tree_node** %context2, align 8, !dbg !5524
  %cmp3 = icmp eq %union.tree_node* %2, %target_context, !dbg !5525
  br i1 %cmp3, label %if.end.loopexit, label %for.body, !dbg !5526

for.body:                                         ; preds = %for.cond
  %call4 = tail call fastcc %union.tree_node* @get_chain_field(%struct.nesting_info* %i.0) #7, !dbg !5527
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5506, metadata !DIExpression()), !dbg !5528
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5529
  %3 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !5529
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !5529
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !5529
  %5 = load %union.tree_node*, %union.tree_node** %type6, align 8, !dbg !5529
  %call7 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %5, %union.tree_node* %x.0) #6, !dbg !5529
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5505, metadata !DIExpression()), !dbg !5512
  %type9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5530
  %6 = load %union.tree_node*, %union.tree_node** %type9, align 8, !dbg !5530
  %call10 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %6, %union.tree_node* %call7, %union.tree_node* %call4, %union.tree_node* null) #6, !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !5505, metadata !DIExpression()), !dbg !5512
  %call11 = tail call fastcc %union.tree_node* @init_tmp_var(%struct.nesting_info* %info, %union.tree_node* %call10, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5531
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !5505, metadata !DIExpression()), !dbg !5512
  br label %for.cond, !dbg !5532, !llvm.loop !5533

if.end.loopexit:                                  ; preds = %for.cond
  %x.0.lcssa = phi %union.tree_node* [ %x.0, %for.cond ], !dbg !5522
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa, metadata !5505, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa, metadata !5505, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa, metadata !5505, metadata !DIExpression()), !dbg !5512
  br label %if.end, !dbg !5535

if.end:                                           ; preds = %if.end.loopexit, %if.then
  %x.1 = phi %union.tree_node* [ %call, %if.then ], [ %x.0.lcssa, %if.end.loopexit ], !dbg !5536
  call void @llvm.dbg.value(metadata %union.tree_node* %x.1, metadata !5505, metadata !DIExpression()), !dbg !5512
  ret %union.tree_node* %x.1, !dbg !5535
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finalize_nesting_tree_1(%struct.nesting_info* %root) unnamed_addr #5 !dbg !5537 {
entry:
  %stmt_list = alloca %struct.gimple_seq_d*, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %id = alloca %struct.nesting_copy_body_data, align 8
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root, metadata !5539, metadata !DIExpression()), !dbg !5592
  %0 = bitcast %struct.gimple_seq_d** %stmt_list to i8*, !dbg !5593
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5593
  %context1 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 6, !dbg !5594
  %1 = load %union.tree_node*, %union.tree_node** %context1, align 8, !dbg !5594
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5542, metadata !DIExpression()), !dbg !5592
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !5540, metadata !DIExpression()), !dbg !5592
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmt_list, align 8, !dbg !5595
  %frame_type = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 9, !dbg !5596
  %2 = load %union.tree_node*, %union.tree_node** %frame_type, align 8, !dbg !5596
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !5597
  br i1 %tobool, label %if.end, label %if.then, !dbg !5598

if.then:                                          ; preds = %entry
  %3 = load i32, i32* @warn_padded, align 4, !dbg !5599
  call void @llvm.dbg.value(metadata i32 %3, metadata !5544, metadata !DIExpression()), !dbg !5600
  store i32 0, i32* @warn_padded, align 4, !dbg !5601
  tail call void @layout_type(%union.tree_node* nonnull %2) #6, !dbg !5602
  store i32 %3, i32* @warn_padded, align 4, !dbg !5603
  %frame_decl = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 10, !dbg !5604
  %4 = load %union.tree_node*, %union.tree_node** %frame_decl, align 8, !dbg !5604
  tail call void @layout_decl(%union.tree_node* %4, i32 0) #6, !dbg !5605
  %new_local_var_chain = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 7, !dbg !5606
  call void @llvm.dbg.value(metadata %union.tree_node** %new_local_var_chain, metadata !5547, metadata !DIExpression()), !dbg !5600
  br label %for.cond, !dbg !5608

for.cond:                                         ; preds = %for.inc, %if.then
  %adjust.0 = phi %union.tree_node** [ %new_local_var_chain, %if.then ], [ %chain6, %for.inc ], !dbg !5609
  call void @llvm.dbg.value(metadata %union.tree_node** %adjust.0, metadata !5547, metadata !DIExpression()), !dbg !5600
  %5 = load %union.tree_node*, %union.tree_node** %adjust.0, align 8, !dbg !5610
  %6 = load %union.tree_node*, %union.tree_node** %frame_decl, align 8, !dbg !5612
  %cmp = icmp eq %union.tree_node* %5, %6, !dbg !5613
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5600
  %7 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5600
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5614
  br i1 %cmp, label %for.end, label %for.body, !dbg !5614

for.body:                                         ; preds = %for.cond
  %tobool4 = icmp eq %union.tree_node* %7, null, !dbg !5615
  br i1 %tobool4, label %cond.true, label %for.body.for.inc_crit_edge, !dbg !5615

for.body.for.inc_crit_edge:                       ; preds = %for.body
  br label %for.inc, !dbg !5615

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 2287, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5615
  %.phi.trans.insert = bitcast %union.tree_node** %adjust.0 to %struct.tree_common**, !dbg !5616
  %.pre = load %struct.tree_common*, %struct.tree_common** %.phi.trans.insert, align 8, !dbg !5617
  br label %for.inc, !dbg !5615

for.inc:                                          ; preds = %for.body.for.inc_crit_edge, %cond.true
  %9 = phi %struct.tree_common* [ %8, %for.body.for.inc_crit_edge ], [ %.pre, %cond.true ], !dbg !5617
  %chain6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 1, !dbg !5617
  call void @llvm.dbg.value(metadata %union.tree_node** %chain6, metadata !5547, metadata !DIExpression()), !dbg !5600
  br label %for.cond, !dbg !5618, !llvm.loop !5619

for.end:                                          ; preds = %for.cond
  %adjust.0.lcssa = phi %union.tree_node** [ %adjust.0, %for.cond ], !dbg !5609
  %.lcssa28 = phi %union.tree_node* [ %7, %for.cond ], !dbg !5600
  call void @llvm.dbg.value(metadata %union.tree_node** %adjust.0.lcssa, metadata !5547, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %union.tree_node** %adjust.0.lcssa, metadata !5547, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata %union.tree_node** %adjust.0.lcssa, metadata !5547, metadata !DIExpression()), !dbg !5600
  store %union.tree_node* %.lcssa28, %union.tree_node** %adjust.0.lcssa, align 8, !dbg !5621
  %10 = bitcast %union.tree_node** %frame_decl to %struct.tree_common**, !dbg !5622
  %11 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !5622
  %chain11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %11, i64 0, i32 1, !dbg !5622
  store %union.tree_node* null, %union.tree_node** %chain11, align 8, !dbg !5623
  %12 = load %union.tree_node*, %union.tree_node** %frame_decl, align 8, !dbg !5624
  %call = tail call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %1) #6, !dbg !5625
  %call13 = tail call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call) #7, !dbg !5626
  tail call void @declare_vars(%union.tree_node* %12, %union.gimple_statement_d* %call13, i8 zeroext 1) #6, !dbg !5627
  br label %if.end, !dbg !5628

if.end:                                           ; preds = %entry, %for.end
  %any_parm_remapped = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 14, !dbg !5629
  %13 = load i8, i8* %any_parm_remapped, align 8, !dbg !5629
  %tobool14 = icmp eq i8 %13, 0, !dbg !5630
  br i1 %tobool14, label %if.end47, label %if.then15, !dbg !5631

if.then15:                                        ; preds = %if.end
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2, !dbg !5632
  %frame_decl29 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 10, !dbg !5633
  %14 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5634
  br label %for.cond16, !dbg !5635

for.cond16:                                       ; preds = %cleanup, %if.then15
  %p.0.in = phi %union.tree_node** [ %arguments, %if.then15 ], [ %chain45, %cleanup ]
  %p.0 = load %union.tree_node*, %union.tree_node** %p.0.in, align 8, !dbg !5636
  call void @llvm.dbg.value(metadata %union.tree_node* %p.0, metadata !5548, metadata !DIExpression()), !dbg !5637
  %tobool17 = icmp eq %union.tree_node* %p.0, null, !dbg !5638
  br i1 %tobool17, label %if.end47.loopexit, label %for.body18, !dbg !5638

for.body18:                                       ; preds = %for.cond16
  %call19 = call fastcc %union.tree_node* @lookup_field_for_decl(%struct.nesting_info* %root, %union.tree_node* nonnull %p.0, i32 0) #7, !dbg !5639
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !5551, metadata !DIExpression()), !dbg !5633
  %tobool20 = icmp eq %union.tree_node* %call19, null, !dbg !5640
  br i1 %tobool20, label %cleanup, label %if.end22, !dbg !5642

if.end22:                                         ; preds = %for.body18
  %call23 = call fastcc zeroext i8 @use_pointer_in_frame(%union.tree_node* nonnull %p.0) #7, !dbg !5643
  %tobool24 = icmp eq i8 %call23, 0, !dbg !5643
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !5645

if.then25:                                        ; preds = %if.end22
  %call26 = call %union.tree_node* @build_addr(%union.tree_node* nonnull %p.0, %union.tree_node* %1) #7, !dbg !5646
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !5555, metadata !DIExpression()), !dbg !5633
  br label %if.end27, !dbg !5647

if.end27:                                         ; preds = %if.end22, %if.then25
  %x.0 = phi %union.tree_node* [ %call26, %if.then25 ], [ %p.0, %if.end22 ], !dbg !5648
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0, metadata !5555, metadata !DIExpression()), !dbg !5633
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5649
  %15 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5649
  %16 = load %union.tree_node*, %union.tree_node** %frame_decl29, align 8, !dbg !5649
  %call30 = call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %15, %union.tree_node* %16, %union.tree_node* nonnull %call19, %union.tree_node* null) #6, !dbg !5649
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !5556, metadata !DIExpression()), !dbg !5633
  %call31 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call30, %union.tree_node* %x.0) #6, !dbg !5650
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call31, metadata !5541, metadata !DIExpression()), !dbg !5592
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmt_list, metadata !5540, metadata !DIExpression(DW_OP_deref)), !dbg !5592
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %stmt_list, %union.gimple_statement_d* %call31) #6, !dbg !5651
  %call32 = call zeroext i8 @is_gimple_reg(%union.tree_node* %x.0) #6, !dbg !5652
  %tobool33 = icmp eq i8 %call32, 0, !dbg !5652
  br i1 %tobool33, label %land.lhs.true, label %cleanup, !dbg !5653

land.lhs.true:                                    ; preds = %if.end27
  %type35 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5654
  %17 = load %union.tree_node*, %union.tree_node** %type35, align 8, !dbg !5654
  %call36 = call zeroext i8 @is_gimple_reg_type(%union.tree_node* %17) #6, !dbg !5655
  %tobool37 = icmp eq i8 %call36, 0, !dbg !5655
  br i1 %tobool37, label %cleanup, label %if.then38, !dbg !5656

if.then38:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8, !dbg !5657
  %18 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmt_list, align 8, !dbg !5658
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %18, metadata !5540, metadata !DIExpression()), !dbg !5592
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5557, metadata !DIExpression(DW_OP_deref)), !dbg !5634
  call fastcc void @gsi_last(%struct.gimple_stmt_iterator* nonnull sret %gsi, %struct.gimple_seq_d* %18) #7, !dbg !5659
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5557, metadata !DIExpression(DW_OP_deref)), !dbg !5634
  %call39 = call fastcc %union.tree_node* @init_tmp_var(%struct.nesting_info* %root, %union.tree_node* %x.0, %struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !5660
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !5555, metadata !DIExpression()), !dbg !5633
  call fastcc void @gimple_assign_set_rhs1(%union.gimple_statement_d* %call31, %union.tree_node* %call39) #7, !dbg !5661
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8, !dbg !5662
  br label %cleanup, !dbg !5663

cleanup:                                          ; preds = %land.lhs.true, %if.end27, %for.body18, %if.then38
  %chain45 = getelementptr inbounds %union.tree_node, %union.tree_node* %p.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5664
  br label %for.cond16, !dbg !5665, !llvm.loop !5666

if.end47.loopexit:                                ; preds = %for.cond16
  br label %if.end47, !dbg !5668

if.end47:                                         ; preds = %if.end47.loopexit, %if.end
  %chain_field = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 11, !dbg !5668
  %19 = load %union.tree_node*, %union.tree_node** %chain_field, align 8, !dbg !5668
  %tobool48 = icmp eq %union.tree_node* %19, null, !dbg !5669
  br i1 %tobool48, label %if.end59, label %if.then49, !dbg !5670

if.then49:                                        ; preds = %if.end47
  %type53 = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5671
  %20 = load %union.tree_node*, %union.tree_node** %type53, align 8, !dbg !5671
  %frame_decl54 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 10, !dbg !5671
  %21 = load %union.tree_node*, %union.tree_node** %frame_decl54, align 8, !dbg !5671
  %call56 = call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %20, %union.tree_node* %21, %union.tree_node* nonnull %19, %union.tree_node* null) #6, !dbg !5671
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !5560, metadata !DIExpression()), !dbg !5672
  %call57 = call fastcc %union.tree_node* @get_chain_decl(%struct.nesting_info* %root) #7, !dbg !5673
  %call58 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call56, %union.tree_node* %call57) #6, !dbg !5673
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call58, metadata !5541, metadata !DIExpression()), !dbg !5592
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmt_list, metadata !5540, metadata !DIExpression(DW_OP_deref)), !dbg !5592
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %stmt_list, %union.gimple_statement_d* %call58) #6, !dbg !5674
  br label %if.end59, !dbg !5675

if.end59:                                         ; preds = %if.end47, %if.then49
  %any_tramp_created = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 15, !dbg !5676
  %22 = load i8, i8* %any_tramp_created, align 1, !dbg !5676
  %tobool60 = icmp eq i8 %22, 0, !dbg !5677
  br i1 %tobool60, label %if.end97, label %if.then61, !dbg !5678

if.then61:                                        ; preds = %if.end59
  %inner = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 1, !dbg !5679
  %frame_decl78 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 10, !dbg !5680
  br label %for.cond62, !dbg !5681

for.cond62:                                       ; preds = %cleanup88, %if.then61
  %i.0.in = phi %struct.nesting_info** [ %inner, %if.then61 ], [ %next, %cleanup88 ]
  %i.0 = load %struct.nesting_info*, %struct.nesting_info** %i.0.in, align 8, !dbg !5682
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.0, metadata !5563, metadata !DIExpression()), !dbg !5683
  %tobool63 = icmp eq %struct.nesting_info* %i.0, null, !dbg !5684
  br i1 %tobool63, label %if.end97.loopexit, label %for.body64, !dbg !5684

for.body64:                                       ; preds = %for.cond62
  %context67 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i.0, i64 0, i32 6, !dbg !5685
  %23 = load %union.tree_node*, %union.tree_node** %context67, align 8, !dbg !5685
  %call68 = call fastcc %union.tree_node* @lookup_tramp_for_decl(%struct.nesting_info* %root, %union.tree_node* %23, i32 0) #7, !dbg !5686
  call void @llvm.dbg.value(metadata %union.tree_node* %call68, metadata !5573, metadata !DIExpression()), !dbg !5680
  %tobool69 = icmp eq %union.tree_node* %call68, null, !dbg !5687
  br i1 %tobool69, label %cleanup88, label %if.end71, !dbg !5689

if.end71:                                         ; preds = %for.body64
  %24 = bitcast %union.tree_node** %context67 to %struct.tree_function_decl**, !dbg !5690
  %25 = load %struct.tree_function_decl*, %struct.tree_function_decl** %24, align 8, !dbg !5690
  %regdecl_flag = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %25, i64 0, i32 5, !dbg !5690
  %bf.load = load i32, i32* %regdecl_flag, align 8, !dbg !5690
  %bf.clear = and i32 %bf.load, 4194304, !dbg !5690
  %tobool73 = icmp eq i32 %bf.clear, 0, !dbg !5690
  br i1 %tobool73, label %cond.true74, label %cond.end76, !dbg !5690

cond.true74:                                      ; preds = %if.end71
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 2352, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5690
  br label %cond.end76, !dbg !5690

cond.end76:                                       ; preds = %if.end71, %cond.true74
  %26 = load %union.tree_node*, %union.tree_node** %frame_decl78, align 8, !dbg !5691
  %call79 = call %union.tree_node* @build_addr(%union.tree_node* %26, %union.tree_node* %1) #7, !dbg !5692
  call void @llvm.dbg.value(metadata %union.tree_node* %call79, metadata !5571, metadata !DIExpression()), !dbg !5680
  %27 = load %union.tree_node*, %union.tree_node** %context67, align 8, !dbg !5693
  %call81 = call %union.tree_node* @build_addr(%union.tree_node* %27, %union.tree_node* %1) #7, !dbg !5694
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !5570, metadata !DIExpression()), !dbg !5680
  %type83 = getelementptr inbounds %union.tree_node, %union.tree_node* %call68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5695
  %28 = load %union.tree_node*, %union.tree_node** %type83, align 8, !dbg !5695
  %29 = load %union.tree_node*, %union.tree_node** %frame_decl78, align 8, !dbg !5695
  %call85 = call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %28, %union.tree_node* %29, %union.tree_node* nonnull %call68, %union.tree_node* null) #6, !dbg !5695
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !5572, metadata !DIExpression()), !dbg !5680
  %call86 = call %union.tree_node* @build_addr(%union.tree_node* %call85, %union.tree_node* %1) #7, !dbg !5696
  call void @llvm.dbg.value(metadata %union.tree_node* %call86, metadata !5566, metadata !DIExpression()), !dbg !5680
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 520), align 16, !dbg !5697
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !5572, metadata !DIExpression()), !dbg !5680
  %call87 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %30, i32 3, %union.tree_node* %call86, %union.tree_node* %call81, %union.tree_node* %call79) #6, !dbg !5698
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call87, metadata !5541, metadata !DIExpression()), !dbg !5592
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmt_list, metadata !5540, metadata !DIExpression(DW_OP_deref)), !dbg !5592
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %stmt_list, %union.gimple_statement_d* %call87) #6, !dbg !5699
  br label %cleanup88, !dbg !5700

cleanup88:                                        ; preds = %for.body64, %cond.end76
  %next = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i.0, i64 0, i32 2, !dbg !5701
  br label %for.cond62, !dbg !5702, !llvm.loop !5703

if.end97.loopexit:                                ; preds = %for.cond62
  br label %if.end97, !dbg !5705

if.end97:                                         ; preds = %if.end97.loopexit, %if.end59
  %31 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmt_list, align 8, !dbg !5705
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %31, metadata !5540, metadata !DIExpression()), !dbg !5592
  %tobool98 = icmp eq %struct.gimple_seq_d* %31, null, !dbg !5705
  br i1 %tobool98, label %if.end103, label %if.then99, !dbg !5706

if.then99:                                        ; preds = %if.end97
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %31, metadata !5540, metadata !DIExpression()), !dbg !5592
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5707
  %32 = load i32, i32* %locus, align 8, !dbg !5707
  call void @annotate_all_with_location(%struct.gimple_seq_d* nonnull %31, i32 %32) #6, !dbg !5708
  %call100 = call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %1) #6, !dbg !5709
  %call101 = call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call100) #7, !dbg !5710
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call101, metadata !5574, metadata !DIExpression()), !dbg !5711
  %call102 = call fastcc %struct.gimple_seq_d* @gimple_bind_body(%union.gimple_statement_d* %call101) #7, !dbg !5712
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmt_list, metadata !5540, metadata !DIExpression(DW_OP_deref)), !dbg !5592
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %stmt_list, %struct.gimple_seq_d* %call102) #6, !dbg !5713
  %33 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmt_list, align 8, !dbg !5714
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %33, metadata !5540, metadata !DIExpression()), !dbg !5592
  call fastcc void @gimple_bind_set_body(%union.gimple_statement_d* %call101, %struct.gimple_seq_d* %33) #7, !dbg !5715
  br label %if.end103, !dbg !5716

if.end103:                                        ; preds = %if.end97, %if.then99
  %34 = bitcast %union.tree_node** %context1 to %struct.tree_function_decl**, !dbg !5717
  %35 = load %struct.tree_function_decl*, %struct.tree_function_decl** %34, align 8, !dbg !5717
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %35, i64 0, i32 1, !dbg !5717
  %36 = load %struct.function*, %struct.function** %f, align 8, !dbg !5717
  call void @llvm.dbg.value(metadata %struct.function* %36, metadata !5543, metadata !DIExpression()), !dbg !5592
  %chain_decl = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 12, !dbg !5718
  %37 = bitcast %union.tree_node** %chain_decl to i64*, !dbg !5718
  %38 = load i64, i64* %37, align 8, !dbg !5718
  %static_chain_decl = getelementptr inbounds %struct.function, %struct.function* %36, i64 0, i32 7, !dbg !5719
  %39 = bitcast %union.tree_node** %static_chain_decl to i64*, !dbg !5720
  store i64 %38, i64* %39, align 8, !dbg !5720
  %nl_goto_field = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 13, !dbg !5721
  %40 = load %union.tree_node*, %union.tree_node** %nl_goto_field, align 8, !dbg !5721
  %tobool106 = icmp eq %union.tree_node* %40, null, !dbg !5723
  br i1 %tobool106, label %if.end112, label %if.then107, !dbg !5724

if.then107:                                       ; preds = %if.end103
  %call109 = call fastcc %union.tree_node* @get_frame_field(%struct.nesting_info* %root, %union.tree_node* %1, %union.tree_node* nonnull %40, %struct.gimple_stmt_iterator* null) #7, !dbg !5725
  %nonlocal_goto_save_area = getelementptr inbounds %struct.function, %struct.function* %36, i64 0, i32 8, !dbg !5727
  store %union.tree_node* %call109, %union.tree_node** %nonlocal_goto_save_area, align 8, !dbg !5728
  %has_nonlocal_label = getelementptr inbounds %struct.function, %struct.function* %36, i64 0, i32 20, !dbg !5729
  %bf.load110 = load i32, i32* %has_nonlocal_label, align 8, !dbg !5730
  %bf.set = or i32 %bf.load110, 1048576, !dbg !5730
  store i32 %bf.set, i32* %has_nonlocal_label, align 8, !dbg !5730
  br label %if.end112, !dbg !5731

if.end112:                                        ; preds = %if.end103, %if.then107
  %new_local_var_chain113 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 7, !dbg !5732
  %41 = load %union.tree_node*, %union.tree_node** %new_local_var_chain113, align 8, !dbg !5732
  %tobool114 = icmp eq %union.tree_node* %41, null, !dbg !5734
  br i1 %tobool114, label %if.end120, label %if.then115, !dbg !5735

if.then115:                                       ; preds = %if.end112
  %42 = load %union.tree_node*, %union.tree_node** %context1, align 8, !dbg !5736
  %call118 = call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %42) #6, !dbg !5737
  %call119 = call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call118) #7, !dbg !5738
  call void @declare_vars(%union.tree_node* nonnull %41, %union.gimple_statement_d* %call119, i8 zeroext 0) #6, !dbg !5739
  br label %if.end120, !dbg !5739

if.end120:                                        ; preds = %if.end112, %if.then115
  %debug_var_chain = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 8, !dbg !5740
  %43 = load %union.tree_node*, %union.tree_node** %debug_var_chain, align 8, !dbg !5740
  %tobool121 = icmp eq %union.tree_node* %43, null, !dbg !5741
  br i1 %tobool121, label %if.end266, label %if.then122, !dbg !5742

if.then122:                                       ; preds = %if.end120
  %44 = bitcast %union.tree_node** %context1 to %struct.tree_decl_common**, !dbg !5743
  %45 = load %struct.tree_decl_common*, %struct.tree_decl_common** %44, align 8, !dbg !5743
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %45, i64 0, i32 5, !dbg !5743
  %46 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !5743
  call fastcc void @remap_vla_decls(%union.tree_node* %46, %struct.nesting_info* %root) #7, !dbg !5744
  br label %for.cond125, !dbg !5745

for.cond125:                                      ; preds = %for.inc134, %if.then122
  %debug_var.0.in = phi %union.tree_node** [ %debug_var_chain, %if.then122 ], [ %chain136, %for.inc134 ]
  %debug_var.0 = load %union.tree_node*, %union.tree_node** %debug_var.0.in, align 8, !dbg !5747
  call void @llvm.dbg.value(metadata %union.tree_node* %debug_var.0, metadata !5577, metadata !DIExpression()), !dbg !5748
  %cond = icmp eq %union.tree_node* %debug_var.0, null, !dbg !5749
  br i1 %cond, label %if.end246.loopexit, label %for.body127, !dbg !5749

for.body127:                                      ; preds = %for.cond125
  %type129 = getelementptr inbounds %union.tree_node, %union.tree_node* %debug_var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5750
  %47 = load %union.tree_node*, %union.tree_node** %type129, align 8, !dbg !5750
  %call130 = call zeroext i8 @variably_modified_type_p(%union.tree_node* %47, %union.tree_node* null) #6, !dbg !5753
  %tobool131 = icmp eq i8 %call130, 0, !dbg !5753
  br i1 %tobool131, label %for.inc134, label %for.end137, !dbg !5754

for.inc134:                                       ; preds = %for.body127
  %chain136 = getelementptr inbounds %union.tree_node, %union.tree_node* %debug_var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5755
  br label %for.cond125, !dbg !5756, !llvm.loop !5757

for.end137:                                       ; preds = %for.body127
  %debug_var.0.lcssa27 = phi %union.tree_node* [ %debug_var.0, %for.body127 ], !dbg !5747
  %48 = bitcast %struct.nesting_copy_body_data* %id to i8*, !dbg !5759
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %48) #8, !dbg !5759
  %call140 = call i8* @memset(i8* nonnull %48, i32 0, i64 160) #6, !dbg !5760
  %copy_decl = getelementptr inbounds %struct.nesting_copy_body_data, %struct.nesting_copy_body_data* %id, i64 0, i32 0, i32 7, !dbg !5761
  store %union.tree_node* (%union.tree_node*, %struct.copy_body_data*)* @nesting_copy_decl, %union.tree_node* (%union.tree_node*, %struct.copy_body_data*)** %copy_decl, align 8, !dbg !5762
  %call141 = call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !5763
  %decl_map = getelementptr inbounds %struct.nesting_copy_body_data, %struct.nesting_copy_body_data* %id, i64 0, i32 0, i32 6, !dbg !5764
  store %struct.pointer_map_t* %call141, %struct.pointer_map_t** %decl_map, align 8, !dbg !5765
  %root143 = getelementptr inbounds %struct.nesting_copy_body_data, %struct.nesting_copy_body_data* %id, i64 0, i32 1, !dbg !5766
  store %struct.nesting_info* %root, %struct.nesting_info** %root143, align 8, !dbg !5767
  %49 = bitcast %struct.nesting_copy_body_data* %id to i64*, !dbg !5768
  %dst_fn = getelementptr inbounds %struct.nesting_copy_body_data, %struct.nesting_copy_body_data* %id, i64 0, i32 0, i32 1, !dbg !5768
  %50 = bitcast %union.tree_node** %dst_fn to i64*, !dbg !5768
  %src_cfun = getelementptr inbounds %struct.nesting_copy_body_data, %struct.nesting_copy_body_data* %id, i64 0, i32 0, i32 4, !dbg !5768
  %51 = bitcast %struct.function** %src_cfun to i64*, !dbg !5768
  %cb178 = getelementptr inbounds %struct.nesting_copy_body_data, %struct.nesting_copy_body_data* %id, i64 0, i32 0, !dbg !5768
  br label %for.cond144, !dbg !5769

for.cond144:                                      ; preds = %for.inc240, %for.end137
  %debug_var.1 = phi %union.tree_node* [ %debug_var.0.lcssa27, %for.end137 ], [ %72, %for.inc240 ], !dbg !5748
  call void @llvm.dbg.value(metadata %union.tree_node* %debug_var.1, metadata !5577, metadata !DIExpression()), !dbg !5748
  %tobool145 = icmp eq %union.tree_node* %debug_var.1, null, !dbg !5770
  br i1 %tobool145, label %for.end243, label %for.body146, !dbg !5770

for.body146:                                      ; preds = %for.cond144
  %type148 = getelementptr inbounds %union.tree_node, %union.tree_node* %debug_var.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5771
  %52 = load %union.tree_node*, %union.tree_node** %type148, align 8, !dbg !5771
  %call149 = call zeroext i8 @variably_modified_type_p(%union.tree_node* %52, %union.tree_node* null) #6, !dbg !5772
  %tobool150 = icmp eq i8 %call149, 0, !dbg !5772
  br i1 %tobool150, label %for.inc240, label %if.then151, !dbg !5773

if.then151:                                       ; preds = %for.body146
  %53 = load %union.tree_node*, %union.tree_node** %type148, align 8, !dbg !5774
  call void @llvm.dbg.value(metadata %union.tree_node* %53, metadata !5584, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %53, metadata !5590, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root, metadata !5591, metadata !DIExpression()), !dbg !5768
  br label %for.cond156, !dbg !5775

for.cond156:                                      ; preds = %for.inc164, %if.then151
  %i155.0 = phi %struct.nesting_info* [ %root, %if.then151 ], [ %55, %for.inc164 ], !dbg !5777
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i155.0, metadata !5591, metadata !DIExpression()), !dbg !5768
  %cond4 = icmp eq %struct.nesting_info* %i155.0, null, !dbg !5778
  br i1 %cond4, label %for.inc240.loopexit, label %for.body158, !dbg !5778

for.body158:                                      ; preds = %for.cond156
  %context159 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i155.0, i64 0, i32 6, !dbg !5779
  %54 = load %union.tree_node*, %union.tree_node** %context159, align 8, !dbg !5779
  %call160 = call zeroext i8 @variably_modified_type_p(%union.tree_node* %53, %union.tree_node* %54) #6, !dbg !5782
  %tobool161 = icmp eq i8 %call160, 0, !dbg !5782
  br i1 %tobool161, label %for.inc164, label %for.end165, !dbg !5783

for.inc164:                                       ; preds = %for.body158
  %outer = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i155.0, i64 0, i32 0, !dbg !5784
  %55 = load %struct.nesting_info*, %struct.nesting_info** %outer, align 8, !dbg !5784
  call void @llvm.dbg.value(metadata %struct.nesting_info* %55, metadata !5591, metadata !DIExpression()), !dbg !5768
  br label %for.cond156, !dbg !5785, !llvm.loop !5786

for.end165:                                       ; preds = %for.body158
  %context159.lcssa = phi %union.tree_node** [ %context159, %for.body158 ], !dbg !5779
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i155.0, metadata !5591, metadata !DIExpression()), !dbg !5768
  %56 = bitcast %union.tree_node** %context159.lcssa to i64*, !dbg !5788
  %57 = load i64, i64* %56, align 8, !dbg !5788
  store i64 %57, i64* %49, align 8, !dbg !5789
  store i64 %57, i64* %50, align 8, !dbg !5790
  %58 = load %struct.tree_function_decl*, %struct.tree_function_decl** %34, align 8, !dbg !5791
  %f176 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %58, i64 0, i32 1, !dbg !5791
  %59 = bitcast %struct.function** %f176 to i64*, !dbg !5791
  %60 = load i64, i64* %59, align 8, !dbg !5791
  store i64 %60, i64* %51, align 8, !dbg !5792
  %call179 = call %union.tree_node* @remap_type(%union.tree_node* %53, %struct.copy_body_data* nonnull %cb178) #6, !dbg !5793
  call void @llvm.dbg.value(metadata %union.tree_node* %call179, metadata !5589, metadata !DIExpression()), !dbg !5768
  store %union.tree_node* %call179, %union.tree_node** %type148, align 8, !dbg !5794
  br label %while.cond, !dbg !5795

while.cond:                                       ; preds = %while.body, %for.end165
  %newt.0 = phi %union.tree_node* [ %call179, %for.end165 ], [ %64, %while.body ], !dbg !5768
  %t.0 = phi %union.tree_node* [ %53, %for.end165 ], [ %65, %while.body ], !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !5590, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.0, metadata !5589, metadata !DIExpression()), !dbg !5768
  %61 = getelementptr inbounds %union.tree_node, %union.tree_node* %newt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5796
  %bf.load182 = load i64, i64* %61, align 8, !dbg !5796
  %bf.cast5 = and i64 %bf.load182, 65535, !dbg !5796
  %cmp184 = icmp eq i64 %bf.cast5, 10, !dbg !5796
  br i1 %cmp184, label %land.rhs, label %lor.lhs.false, !dbg !5796

lor.lhs.false:                                    ; preds = %while.cond
  %cmp190 = icmp eq i64 %bf.cast5, 12, !dbg !5796
  br i1 %cmp190, label %land.rhs, label %lor.lhs.false.while.end_crit_edge, !dbg !5797

lor.lhs.false.while.end_crit_edge:                ; preds = %lor.lhs.false
  %newt.0.lcssa = phi %union.tree_node* [ %newt.0, %lor.lhs.false ], !dbg !5768
  %t.0.lcssa = phi %union.tree_node* [ %t.0, %lor.lhs.false ], !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.0.lcssa, metadata !5589, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !5590, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.0.lcssa, metadata !5589, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !5590, metadata !DIExpression()), !dbg !5768
  %.phi.trans.insert11 = getelementptr inbounds %union.tree_node, %union.tree_node* %newt.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !5798
  %.pre12 = load %union.tree_node*, %union.tree_node** %.phi.trans.insert11, align 8, !dbg !5800
  br label %while.end, !dbg !5797

land.rhs:                                         ; preds = %lor.lhs.false, %while.cond
  %62 = getelementptr inbounds %union.tree_node, %union.tree_node* %newt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !5801
  %63 = load %union.tree_node*, %union.tree_node** %62, align 8, !dbg !5801
  %tobool193 = icmp eq %union.tree_node* %63, null, !dbg !5802
  br i1 %tobool193, label %while.body, label %while.end.loopexit, !dbg !5795

while.body:                                       ; preds = %land.rhs
  %type195 = getelementptr inbounds %union.tree_node, %union.tree_node* %newt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5803
  %64 = load %union.tree_node*, %union.tree_node** %type195, align 8, !dbg !5803
  call void @llvm.dbg.value(metadata %union.tree_node* %64, metadata !5589, metadata !DIExpression()), !dbg !5768
  %type197 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5805
  %65 = load %union.tree_node*, %union.tree_node** %type197, align 8, !dbg !5805
  call void @llvm.dbg.value(metadata %union.tree_node* %65, metadata !5590, metadata !DIExpression()), !dbg !5768
  br label %while.cond, !dbg !5795, !llvm.loop !5806

while.end.loopexit:                               ; preds = %land.rhs
  %.lcssa = phi %union.tree_node* [ %63, %land.rhs ], !dbg !5801
  %newt.0.lcssa25 = phi %union.tree_node* [ %newt.0, %land.rhs ], !dbg !5768
  %t.0.lcssa23 = phi %union.tree_node* [ %t.0, %land.rhs ], !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.0.lcssa25, metadata !5589, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa23, metadata !5590, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.0.lcssa25, metadata !5589, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa23, metadata !5590, metadata !DIExpression()), !dbg !5768
  br label %while.end, !dbg !5800

while.end:                                        ; preds = %while.end.loopexit, %lor.lhs.false.while.end_crit_edge
  %newt.026 = phi %union.tree_node* [ %newt.0.lcssa, %lor.lhs.false.while.end_crit_edge ], [ %newt.0.lcssa25, %while.end.loopexit ]
  %t.024 = phi %union.tree_node* [ %t.0.lcssa, %lor.lhs.false.while.end_crit_edge ], [ %t.0.lcssa23, %while.end.loopexit ]
  %.pre12.pn22 = phi %union.tree_node* [ %.pre12, %lor.lhs.false.while.end_crit_edge ], [ %.lcssa, %while.end.loopexit ]
  %.pre12.pn = phi %union.tree_node* [ %.pre12, %lor.lhs.false.while.end_crit_edge ], [ %.lcssa, %while.end.loopexit ]
  %66 = phi %union.tree_node* [ %.pre12, %lor.lhs.false.while.end_crit_edge ], [ %.lcssa, %while.end.loopexit ], !dbg !5800
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.026, metadata !5589, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.026, metadata !5589, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %t.024, metadata !5590, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %union.tree_node* %t.024, metadata !5590, metadata !DIExpression()), !dbg !5768
  %67 = getelementptr inbounds %union.tree_node, %union.tree_node* %newt.026, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !5800
  %tobool200 = icmp eq %union.tree_node* %66, null, !dbg !5800
  br i1 %tobool200, label %for.inc240, label %land.lhs.true201, !dbg !5808

land.lhs.true201:                                 ; preds = %while.end
  %68 = getelementptr inbounds %union.tree_node, %union.tree_node* %.pre12.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5768
  %bf.load205 = load i64, i64* %68, align 8, !dbg !5809
  %bf.cast2077 = and i64 %bf.load205, 65535, !dbg !5810
  %cmp208 = icmp eq i64 %bf.cast2077, 35, !dbg !5810
  br i1 %cmp208, label %land.lhs.true210, label %for.inc240, !dbg !5811

land.lhs.true210:                                 ; preds = %land.lhs.true201
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %.pre12.pn22, i64 0, i32 0, i32 0, i32 3, !dbg !5812
  %69 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !5812
  %tobool214 = icmp ne %union.tree_node* %69, null, !dbg !5812
  %cmp216 = icmp ne %union.tree_node* %newt.026, %t.024, !dbg !5813
  %or.cond = and i1 %tobool214, %cmp216, !dbg !5814
  br i1 %or.cond, label %land.lhs.true218, label %for.inc240, !dbg !5814

land.lhs.true218:                                 ; preds = %land.lhs.true210
  %70 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.024, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !5815
  %71 = load %union.tree_node*, %union.tree_node** %70, align 8, !dbg !5815
  %cmp223 = icmp eq %union.tree_node* %66, %71, !dbg !5816
  br i1 %cmp223, label %if.then225, label %for.inc240, !dbg !5817

if.then225:                                       ; preds = %land.lhs.true218
  %call229 = call %union.tree_node* @remap_decl(%union.tree_node* nonnull %66, %struct.copy_body_data* nonnull %cb178) #6, !dbg !5818
  store %union.tree_node* %call229, %union.tree_node** %67, align 8, !dbg !5819
  br label %for.inc240, !dbg !5820

for.inc240.loopexit:                              ; preds = %for.cond156
  br label %for.inc240, !dbg !5821

for.inc240:                                       ; preds = %for.inc240.loopexit, %while.end, %for.body146, %if.then225, %land.lhs.true218, %land.lhs.true210, %land.lhs.true201
  %chain242 = getelementptr inbounds %union.tree_node, %union.tree_node* %debug_var.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5821
  %72 = load %union.tree_node*, %union.tree_node** %chain242, align 8, !dbg !5821
  call void @llvm.dbg.value(metadata %union.tree_node* %72, metadata !5577, metadata !DIExpression()), !dbg !5748
  br label %for.cond144, !dbg !5822, !llvm.loop !5823

for.end243:                                       ; preds = %for.cond144
  %73 = load %struct.pointer_map_t*, %struct.pointer_map_t** %decl_map, align 8, !dbg !5825
  call void @pointer_map_destroy(%struct.pointer_map_t* %73) #6, !dbg !5826
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %48) #8, !dbg !5827
  br label %if.end246, !dbg !5828

if.end246.loopexit:                               ; preds = %for.cond125
  br label %if.end246, !dbg !5829

if.end246:                                        ; preds = %if.end246.loopexit, %for.end243
  %74 = load %union.tree_node*, %union.tree_node** %context1, align 8, !dbg !5829
  %call248 = call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %74) #6, !dbg !5830
  %call249 = call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call248) #7, !dbg !5831
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call249, metadata !5580, metadata !DIExpression()), !dbg !5748
  %call250 = call fastcc %union.tree_node* @gimple_bind_block(%union.gimple_statement_d* %call249) #7, !dbg !5832
  %tobool251 = icmp eq %union.tree_node* %call250, null, !dbg !5832
  br i1 %tobool251, label %if.else254, label %if.then252, !dbg !5834

if.then252:                                       ; preds = %if.end246
  %75 = load %union.tree_node*, %union.tree_node** %debug_var_chain, align 8, !dbg !5835
  call void @declare_vars(%union.tree_node* %75, %union.gimple_statement_d* %call249, i8 zeroext 1) #6, !dbg !5836
  br label %if.end266, !dbg !5836

if.else254:                                       ; preds = %if.end246
  %76 = load %struct.tree_decl_common*, %struct.tree_decl_common** %44, align 8, !dbg !5837
  %initial257 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %76, i64 0, i32 5, !dbg !5837
  %77 = bitcast %union.tree_node** %initial257 to %struct.tree_block**, !dbg !5837
  %78 = load %struct.tree_block*, %struct.tree_block** %77, align 8, !dbg !5837
  %vars = getelementptr inbounds %struct.tree_block, %struct.tree_block* %78, i64 0, i32 3, !dbg !5837
  %79 = load %union.tree_node*, %union.tree_node** %vars, align 8, !dbg !5837
  %80 = load %union.tree_node*, %union.tree_node** %debug_var_chain, align 8, !dbg !5838
  %call259 = call %union.tree_node* @chainon(%union.tree_node* %79, %union.tree_node* %80) #6, !dbg !5839
  %81 = load %struct.tree_decl_common*, %struct.tree_decl_common** %44, align 8, !dbg !5840
  %initial262 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %81, i64 0, i32 5, !dbg !5840
  %82 = bitcast %union.tree_node** %initial262 to %struct.tree_block**, !dbg !5840
  %83 = load %struct.tree_block*, %struct.tree_block** %82, align 8, !dbg !5840
  %vars264 = getelementptr inbounds %struct.tree_block, %struct.tree_block* %83, i64 0, i32 3, !dbg !5840
  store %union.tree_node* %call259, %union.tree_node** %vars264, align 8, !dbg !5841
  br label %if.end266

if.end266:                                        ; preds = %if.end120, %if.then252, %if.else254
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5842
  %tobool267 = icmp eq %struct._IO_FILE* %84, null, !dbg !5842
  br i1 %tobool267, label %if.end271, label %if.then268, !dbg !5844

if.then268:                                       ; preds = %if.end266
  %call269 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), %struct._IO_FILE* nonnull %84) #6, !dbg !5845
  %85 = load %union.tree_node*, %union.tree_node** %context1, align 8, !dbg !5847
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5848
  %87 = load i32, i32* @dump_flags, align 4, !dbg !5849
  call void @dump_function_to_file(%union.tree_node* %85, %struct._IO_FILE* %86, i32 %87) #6, !dbg !5850
  br label %if.end271, !dbg !5851

if.end271:                                        ; preds = %if.end266, %if.then268
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5852
  ret void, !dbg !5852
}

declare dso_local void @layout_decl(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @gimple_seq_add_stmt(%struct.gimple_seq_d**, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_reg_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_rhs1(%union.gimple_statement_d* %gs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !5853 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5855, metadata !DIExpression()), !dbg !5857
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !5856, metadata !DIExpression()), !dbg !5857
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %rhs) #7, !dbg !5858
  ret void, !dbg !5859
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_bind_body(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5860 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5862, metadata !DIExpression()), !dbg !5863
  %body = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !5864
  %0 = bitcast [1 x %struct.phi_arg_d]* %body to %struct.gimple_seq_d**, !dbg !5864
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !5864
  ret %struct.gimple_seq_d* %1, !dbg !5865
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_bind_set_body(%union.gimple_statement_d* %gs, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !5866 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5868, metadata !DIExpression()), !dbg !5870
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !5869, metadata !DIExpression()), !dbg !5870
  %body = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !5871
  %0 = bitcast [1 x %struct.phi_arg_d]* %body to %struct.gimple_seq_d**, !dbg !5871
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %0, align 8, !dbg !5872
  ret void, !dbg !5873
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remap_vla_decls(%union.tree_node* %block, %struct.nesting_info* %root) unnamed_addr #5 !dbg !5874 {
entry:
  %val = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %id = alloca %struct.nesting_copy_body_data, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !5878, metadata !DIExpression()), !dbg !5893
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root, metadata !5879, metadata !DIExpression()), !dbg !5893
  %0 = bitcast %union.tree_node** %val to i8*, !dbg !5894
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5894
  %1 = bitcast %union.tree_node** %type to i8*, !dbg !5894
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5894
  %2 = bitcast %struct.nesting_copy_body_data* %id to i8*, !dbg !5895
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %2) #8, !dbg !5895
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5896
  br label %for.cond, !dbg !5898

for.cond:                                         ; preds = %for.body, %entry
  %subblock.0.in = phi %union.tree_node** [ %3, %entry ], [ %chain, %for.body ]
  %subblock.0 = load %union.tree_node*, %union.tree_node** %subblock.0.in, align 8, !dbg !5899
  call void @llvm.dbg.value(metadata %union.tree_node* %subblock.0, metadata !5881, metadata !DIExpression()), !dbg !5893
  %tobool = icmp eq %union.tree_node* %subblock.0, null, !dbg !5900
  br i1 %tobool, label %for.end, label %for.body, !dbg !5900

for.body:                                         ; preds = %for.cond
  tail call fastcc void @remap_vla_decls(%union.tree_node* nonnull %subblock.0, %struct.nesting_info* %root) #7, !dbg !5901
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %subblock.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5903
  br label %for.cond, !dbg !5904, !llvm.loop !5905

for.end:                                          ; preds = %for.cond
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5907
  %5 = bitcast %union.tree_node** %type to i64*, !dbg !5909
  %6 = bitcast %struct.nesting_info* %root to i8*, !dbg !5914
  br label %for.cond3, !dbg !5916

for.cond3:                                        ; preds = %for.inc25, %for.end
  %var.0.in = phi %union.tree_node** [ %4, %for.end ], [ %chain27, %for.inc25 ]
  %var.0 = load %union.tree_node*, %union.tree_node** %var.0.in, align 8, !dbg !5917
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !5880, metadata !DIExpression()), !dbg !5893
  %cond = icmp eq %union.tree_node* %var.0, null, !dbg !5918
  br i1 %cond, label %cleanup168.loopexit, label %for.body5, !dbg !5918

for.body5:                                        ; preds = %for.cond3
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5919
  %bf.load = load i64, i64* %7, align 8, !dbg !5919
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !5920
  %cmp = icmp eq i64 %bf.cast3, 32, !dbg !5920
  br i1 %cmp, label %land.lhs.true, label %for.inc25, !dbg !5921

land.lhs.true:                                    ; preds = %for.body5
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5922
  %8 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !5922
  %call = call zeroext i8 @variably_modified_type_p(%union.tree_node* %8, %union.tree_node* null) #6, !dbg !5923
  %tobool8 = icmp eq i8 %call, 0, !dbg !5923
  br i1 %tobool8, label %for.inc25, label %land.lhs.true9, !dbg !5924

land.lhs.true9:                                   ; preds = %land.lhs.true
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5925
  %9 = bitcast i40* %decl_flag_2 to i64*, !dbg !5925
  %bf.load10 = load i64, i64* %9, align 8, !dbg !5925
  %bf.cast124 = and i64 %bf.load10, 67108864, !dbg !5925
  %tobool13 = icmp eq i64 %bf.cast124, 0, !dbg !5925
  br i1 %tobool13, label %for.inc25, label %if.then, !dbg !5926

if.then:                                          ; preds = %land.lhs.true9
  %10 = bitcast %union.tree_node** %type7 to i64*, !dbg !5927
  %11 = load i64, i64* %10, align 8, !dbg !5927
  store i64 %11, i64* %5, align 8, !dbg !5928
  %call16 = call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* nonnull %var.0) #6, !dbg !5929
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !5882, metadata !DIExpression()), !dbg !5893
  store %union.tree_node* %call16, %union.tree_node** %val, align 8, !dbg !5930
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !5883, metadata !DIExpression(DW_OP_deref)), !dbg !5893
  %call17 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %type, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @contains_remapped_vars, i8* %6, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !5931
  %cmp18 = icmp eq %union.tree_node* %call17, null, !dbg !5932
  br i1 %cmp18, label %lor.lhs.false, label %for.end28, !dbg !5933

lor.lhs.false:                                    ; preds = %if.then
  call void @llvm.dbg.value(metadata %union.tree_node** %val, metadata !5882, metadata !DIExpression(DW_OP_deref)), !dbg !5893
  %call20 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %val, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @contains_remapped_vars, i8* %6, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !5934
  %cmp21 = icmp eq %union.tree_node* %call20, null, !dbg !5935
  br i1 %cmp21, label %for.inc25, label %for.end28, !dbg !5936

for.inc25:                                        ; preds = %lor.lhs.false, %land.lhs.true9, %land.lhs.true, %for.body5
  %chain27 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5937
  br label %for.cond3, !dbg !5938, !llvm.loop !5939

for.end28:                                        ; preds = %lor.lhs.false, %if.then
  %var.0.lcssa26 = phi %union.tree_node* [ %var.0, %lor.lhs.false ], [ %var.0, %if.then ], !dbg !5917
  %call33 = call i8* @memset(i8* nonnull %2, i32 0, i64 160) #6, !dbg !5941
  %copy_decl = getelementptr inbounds %struct.nesting_copy_body_data, %struct.nesting_copy_body_data* %id, i64 0, i32 0, i32 7, !dbg !5942
  store %union.tree_node* (%union.tree_node*, %struct.copy_body_data*)* @nesting_copy_decl, %union.tree_node* (%union.tree_node*, %struct.copy_body_data*)** %copy_decl, align 8, !dbg !5943
  %call34 = call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !5944
  %decl_map = getelementptr inbounds %struct.nesting_copy_body_data, %struct.nesting_copy_body_data* %id, i64 0, i32 0, i32 6, !dbg !5945
  store %struct.pointer_map_t* %call34, %struct.pointer_map_t** %decl_map, align 8, !dbg !5946
  %root36 = getelementptr inbounds %struct.nesting_copy_body_data, %struct.nesting_copy_body_data* %id, i64 0, i32 1, !dbg !5947
  store %struct.nesting_info* %root, %struct.nesting_info** %root36, align 8, !dbg !5948
  %12 = bitcast %struct.nesting_copy_body_data* %id to i64*, !dbg !5949
  %dst_fn = getelementptr inbounds %struct.nesting_copy_body_data, %struct.nesting_copy_body_data* %id, i64 0, i32 0, i32 1, !dbg !5949
  %13 = bitcast %union.tree_node** %dst_fn to i64*, !dbg !5949
  %context92 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 6, !dbg !5949
  %14 = bitcast %union.tree_node** %context92 to %struct.tree_function_decl**, !dbg !5949
  %src_cfun = getelementptr inbounds %struct.nesting_copy_body_data, %struct.nesting_copy_body_data* %id, i64 0, i32 0, i32 4, !dbg !5949
  %15 = bitcast %struct.function** %src_cfun to i64*, !dbg !5949
  %cb94 = getelementptr inbounds %struct.nesting_copy_body_data, %struct.nesting_copy_body_data* %id, i64 0, i32 0, !dbg !5949
  br label %for.cond37, !dbg !5950

for.cond37:                                       ; preds = %for.inc162, %for.end28
  %var.1 = phi %union.tree_node* [ %var.0.lcssa26, %for.end28 ], [ %40, %for.inc162 ], !dbg !5893
  call void @llvm.dbg.value(metadata %union.tree_node* %var.1, metadata !5880, metadata !DIExpression()), !dbg !5893
  %tobool38 = icmp eq %union.tree_node* %var.1, null, !dbg !5951
  br i1 %tobool38, label %for.end165, label %for.body39, !dbg !5951

for.body39:                                       ; preds = %for.cond37
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5952
  %bf.load41 = load i64, i64* %16, align 8, !dbg !5952
  %bf.cast435 = and i64 %bf.load41, 65535, !dbg !5953
  %cmp44 = icmp eq i64 %bf.cast435, 32, !dbg !5953
  br i1 %cmp44, label %land.lhs.true46, label %for.inc162, !dbg !5954

land.lhs.true46:                                  ; preds = %for.body39
  %type48 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5955
  %17 = load %union.tree_node*, %union.tree_node** %type48, align 8, !dbg !5955
  %call49 = call zeroext i8 @variably_modified_type_p(%union.tree_node* %17, %union.tree_node* null) #6, !dbg !5956
  %tobool51 = icmp eq i8 %call49, 0, !dbg !5956
  br i1 %tobool51, label %for.inc162, label %land.lhs.true52, !dbg !5957

land.lhs.true52:                                  ; preds = %land.lhs.true46
  %decl_flag_254 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5958
  %18 = bitcast i40* %decl_flag_254 to i64*, !dbg !5958
  %bf.load55 = load i64, i64* %18, align 8, !dbg !5958
  %bf.cast586 = and i64 %bf.load55, 67108864, !dbg !5958
  %tobool59 = icmp eq i64 %bf.cast586, 0, !dbg !5958
  br i1 %tobool59, label %for.inc162, label %if.then60, !dbg !5959

if.then60:                                        ; preds = %land.lhs.true52
  %19 = load %union.tree_node*, %union.tree_node** %type48, align 8, !dbg !5960
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !5883, metadata !DIExpression()), !dbg !5893
  store %union.tree_node* %19, %union.tree_node** %type, align 8, !dbg !5961
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !5891, metadata !DIExpression()), !dbg !5949
  %call63 = call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* nonnull %var.1) #6, !dbg !5962
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !5882, metadata !DIExpression()), !dbg !5893
  store %union.tree_node* %call63, %union.tree_node** %val, align 8, !dbg !5963
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !5883, metadata !DIExpression(DW_OP_deref)), !dbg !5893
  %call64 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %type, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @contains_remapped_vars, i8* %6, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !5964
  %cmp65 = icmp eq %union.tree_node* %call64, null, !dbg !5966
  br i1 %cmp65, label %land.lhs.true67, label %if.end72, !dbg !5967

land.lhs.true67:                                  ; preds = %if.then60
  call void @llvm.dbg.value(metadata %union.tree_node** %val, metadata !5882, metadata !DIExpression(DW_OP_deref)), !dbg !5893
  %call68 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %val, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @contains_remapped_vars, i8* %6, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !5968
  %cmp69 = icmp eq %union.tree_node* %call68, null, !dbg !5969
  br i1 %cmp69, label %for.inc162, label %if.end72, !dbg !5970

if.end72:                                         ; preds = %land.lhs.true67, %if.then60
  %call73 = call %union.tree_node* @decl_function_context(%union.tree_node* nonnull %var.1) #6, !dbg !5971
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !5892, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root, metadata !5885, metadata !DIExpression()), !dbg !5949
  br label %for.cond74, !dbg !5972

for.cond74:                                       ; preds = %for.inc82, %if.end72
  %i.0 = phi %struct.nesting_info* [ %root, %if.end72 ], [ %22, %for.inc82 ], !dbg !5974
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.0, metadata !5885, metadata !DIExpression()), !dbg !5949
  %cond2 = icmp eq %struct.nesting_info* %i.0, null, !dbg !5975
  br i1 %cond2, label %for.inc162.loopexit, label %for.body76, !dbg !5975

for.body76:                                       ; preds = %for.cond74
  %context77 = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i.0, i64 0, i32 6, !dbg !5976
  %20 = load %union.tree_node*, %union.tree_node** %context77, align 8, !dbg !5976
  %cmp78 = icmp eq %union.tree_node* %20, %call73, !dbg !5979
  %21 = ptrtoint %union.tree_node* %20 to i64, !dbg !5980
  br i1 %cmp78, label %for.end83, label %for.inc82, !dbg !5980

for.inc82:                                        ; preds = %for.body76
  %outer = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %i.0, i64 0, i32 0, !dbg !5981
  %22 = load %struct.nesting_info*, %struct.nesting_info** %outer, align 8, !dbg !5981
  call void @llvm.dbg.value(metadata %struct.nesting_info* %22, metadata !5885, metadata !DIExpression()), !dbg !5949
  br label %for.cond74, !dbg !5982, !llvm.loop !5983

for.end83:                                        ; preds = %for.body76
  %.lcssa = phi i64 [ %21, %for.body76 ], !dbg !5980
  call void @llvm.dbg.value(metadata %struct.nesting_info* %i.0, metadata !5885, metadata !DIExpression()), !dbg !5949
  store i64 %.lcssa, i64* %12, align 8, !dbg !5985
  store i64 %.lcssa, i64* %13, align 8, !dbg !5986
  %23 = load %struct.tree_function_decl*, %struct.tree_function_decl** %14, align 8, !dbg !5987
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %23, i64 0, i32 1, !dbg !5987
  %24 = bitcast %struct.function** %f to i64*, !dbg !5987
  %25 = load i64, i64* %24, align 8, !dbg !5987
  store i64 %25, i64* %15, align 8, !dbg !5988
  %26 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5989
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !5883, metadata !DIExpression()), !dbg !5893
  %call95 = call %union.tree_node* @remap_type(%union.tree_node* %26, %struct.copy_body_data* nonnull %cb94) #6, !dbg !5990
  call void @llvm.dbg.value(metadata %union.tree_node* %call95, metadata !5890, metadata !DIExpression()), !dbg !5949
  store %union.tree_node* %call95, %union.tree_node** %type48, align 8, !dbg !5991
  br label %while.cond, !dbg !5992

while.cond:                                       ; preds = %while.body, %for.end83
  %newt.0 = phi %union.tree_node* [ %call95, %for.end83 ], [ %30, %while.body ], !dbg !5949
  %t.0 = phi %union.tree_node* [ %19, %for.end83 ], [ %31, %while.body ], !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !5891, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.0, metadata !5890, metadata !DIExpression()), !dbg !5949
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %newt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5993
  %bf.load99 = load i64, i64* %27, align 8, !dbg !5993
  %bf.cast1017 = and i64 %bf.load99, 65535, !dbg !5993
  %cmp102 = icmp eq i64 %bf.cast1017, 10, !dbg !5993
  br i1 %cmp102, label %land.rhs, label %lor.lhs.false104, !dbg !5993

lor.lhs.false104:                                 ; preds = %while.cond
  %cmp109 = icmp eq i64 %bf.cast1017, 12, !dbg !5993
  br i1 %cmp109, label %land.rhs, label %lor.lhs.false104.while.end_crit_edge, !dbg !5994

lor.lhs.false104.while.end_crit_edge:             ; preds = %lor.lhs.false104
  %newt.0.lcssa = phi %union.tree_node* [ %newt.0, %lor.lhs.false104 ], !dbg !5949
  %t.0.lcssa = phi %union.tree_node* [ %t.0, %lor.lhs.false104 ], !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.0.lcssa, metadata !5890, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !5891, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.0.lcssa, metadata !5890, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !5891, metadata !DIExpression()), !dbg !5949
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %newt.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !5995
  %.pre = load %union.tree_node*, %union.tree_node** %.phi.trans.insert, align 8, !dbg !5997
  br label %while.end, !dbg !5994

land.rhs:                                         ; preds = %lor.lhs.false104, %while.cond
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %newt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !5998
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !5998
  %tobool112 = icmp eq %union.tree_node* %29, null, !dbg !5999
  br i1 %tobool112, label %while.body, label %while.end.loopexit, !dbg !5992

while.body:                                       ; preds = %land.rhs
  %type114 = getelementptr inbounds %union.tree_node, %union.tree_node* %newt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6000
  %30 = load %union.tree_node*, %union.tree_node** %type114, align 8, !dbg !6000
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !5890, metadata !DIExpression()), !dbg !5949
  %type116 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6002
  %31 = load %union.tree_node*, %union.tree_node** %type116, align 8, !dbg !6002
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !5891, metadata !DIExpression()), !dbg !5949
  br label %while.cond, !dbg !5992, !llvm.loop !6003

while.end.loopexit:                               ; preds = %land.rhs
  %.lcssa25 = phi %union.tree_node* [ %29, %land.rhs ], !dbg !5998
  %newt.0.lcssa23 = phi %union.tree_node* [ %newt.0, %land.rhs ], !dbg !5949
  %t.0.lcssa21 = phi %union.tree_node* [ %t.0, %land.rhs ], !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.0.lcssa23, metadata !5890, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa21, metadata !5891, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.0.lcssa23, metadata !5890, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa21, metadata !5891, metadata !DIExpression()), !dbg !5949
  br label %while.end, !dbg !5997

while.end:                                        ; preds = %while.end.loopexit, %lor.lhs.false104.while.end_crit_edge
  %newt.024 = phi %union.tree_node* [ %newt.0.lcssa, %lor.lhs.false104.while.end_crit_edge ], [ %newt.0.lcssa23, %while.end.loopexit ]
  %t.022 = phi %union.tree_node* [ %t.0.lcssa, %lor.lhs.false104.while.end_crit_edge ], [ %t.0.lcssa21, %while.end.loopexit ]
  %.pre.pn20 = phi %union.tree_node* [ %.pre, %lor.lhs.false104.while.end_crit_edge ], [ %.lcssa25, %while.end.loopexit ]
  %.pre.pn = phi %union.tree_node* [ %.pre, %lor.lhs.false104.while.end_crit_edge ], [ %.lcssa25, %while.end.loopexit ]
  %32 = phi %union.tree_node* [ %.pre, %lor.lhs.false104.while.end_crit_edge ], [ %.lcssa25, %while.end.loopexit ], !dbg !5997
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.024, metadata !5890, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %newt.024, metadata !5890, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %t.022, metadata !5891, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %t.022, metadata !5891, metadata !DIExpression()), !dbg !5949
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %newt.024, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !5997
  %tobool119 = icmp eq %union.tree_node* %32, null, !dbg !5997
  br i1 %tobool119, label %if.end150, label %land.lhs.true120, !dbg !6005

land.lhs.true120:                                 ; preds = %while.end
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %.pre.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5949
  %bf.load124 = load i64, i64* %34, align 8, !dbg !6006
  %bf.cast1269 = and i64 %bf.load124, 65535, !dbg !6007
  %cmp127 = icmp eq i64 %bf.cast1269, 35, !dbg !6007
  br i1 %cmp127, label %land.lhs.true129, label %if.end150, !dbg !6008

land.lhs.true129:                                 ; preds = %land.lhs.true120
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %.pre.pn20, i64 0, i32 0, i32 0, i32 3, !dbg !6009
  %35 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !6009
  %tobool132 = icmp ne %union.tree_node* %35, null, !dbg !6009
  %cmp134 = icmp ne %union.tree_node* %newt.024, %t.022, !dbg !6010
  %or.cond = and i1 %tobool132, %cmp134, !dbg !6011
  br i1 %or.cond, label %land.lhs.true136, label %if.end150, !dbg !6011

land.lhs.true136:                                 ; preds = %land.lhs.true129
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.022, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !6012
  %37 = load %union.tree_node*, %union.tree_node** %36, align 8, !dbg !6012
  %cmp141 = icmp eq %union.tree_node* %32, %37, !dbg !6013
  br i1 %cmp141, label %if.then143, label %if.end150, !dbg !6014

if.then143:                                       ; preds = %land.lhs.true136
  %call147 = call %union.tree_node* @remap_decl(%union.tree_node* nonnull %32, %struct.copy_body_data* nonnull %cb94) #6, !dbg !6015
  store %union.tree_node* %call147, %union.tree_node** %33, align 8, !dbg !6016
  br label %if.end150, !dbg !6017

if.end150:                                        ; preds = %while.end, %if.then143, %land.lhs.true136, %land.lhs.true129, %land.lhs.true120
  call void @llvm.dbg.value(metadata %union.tree_node** %val, metadata !5882, metadata !DIExpression(DW_OP_deref)), !dbg !5893
  %call152 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %val, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @copy_tree_body_r, i8* nonnull %2, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !6018
  %38 = load %union.tree_node*, %union.tree_node** %val, align 8, !dbg !6019
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !5882, metadata !DIExpression()), !dbg !5893
  %call153 = call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* nonnull %var.1) #6, !dbg !6021
  %cmp154 = icmp eq %union.tree_node* %38, %call153, !dbg !6022
  br i1 %cmp154, label %for.inc162, label %if.then156, !dbg !6023

if.then156:                                       ; preds = %if.end150
  %39 = load %union.tree_node*, %union.tree_node** %val, align 8, !dbg !6024
  call void @llvm.dbg.value(metadata %union.tree_node* %39, metadata !5882, metadata !DIExpression()), !dbg !5893
  call void @decl_value_expr_insert(%union.tree_node* nonnull %var.1, %union.tree_node* %39) #6, !dbg !6024
  br label %for.inc162, !dbg !6024

for.inc162.loopexit:                              ; preds = %for.cond74
  br label %for.inc162, !dbg !6025

for.inc162:                                       ; preds = %for.inc162.loopexit, %if.end150, %land.lhs.true52, %land.lhs.true46, %land.lhs.true67, %if.then156, %for.body39
  %chain164 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6025
  %40 = load %union.tree_node*, %union.tree_node** %chain164, align 8, !dbg !6025
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !5880, metadata !DIExpression()), !dbg !5893
  br label %for.cond37, !dbg !6026, !llvm.loop !6027

for.end165:                                       ; preds = %for.cond37
  %41 = load %struct.pointer_map_t*, %struct.pointer_map_t** %decl_map, align 8, !dbg !6029
  call void @pointer_map_destroy(%struct.pointer_map_t* %41) #6, !dbg !6030
  br label %cleanup168, !dbg !6031

cleanup168.loopexit:                              ; preds = %for.cond3
  br label %cleanup168, !dbg !6031

cleanup168:                                       ; preds = %cleanup168.loopexit, %for.end165
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2) #8, !dbg !6031
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6031
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6031
  ret void, !dbg !6031
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @nesting_copy_decl(%union.tree_node* %decl, %struct.copy_body_data* %id) #5 !dbg !6032 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6037, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.value(metadata %struct.copy_body_data* %id, metadata !6038, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.value(metadata %struct.copy_body_data* %id, metadata !6039, metadata !DIExpression()), !dbg !6044
  %root = getelementptr inbounds %struct.copy_body_data, %struct.copy_body_data* %id, i64 1, !dbg !6045
  %0 = bitcast %struct.copy_body_data* %root to %struct.nesting_info**, !dbg !6045
  %1 = load %struct.nesting_info*, %struct.nesting_info** %0, align 8, !dbg !6045
  %var_map = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %1, i64 0, i32 4, !dbg !6046
  %2 = load %struct.pointer_map_t*, %struct.pointer_map_t** %var_map, align 8, !dbg !6046
  %3 = bitcast %union.tree_node* %decl to i8*, !dbg !6047
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %2, i8* %3) #6, !dbg !6048
  call void @llvm.dbg.value(metadata i8** %call, metadata !6040, metadata !DIExpression()), !dbg !6044
  %tobool = icmp eq i8** %call, null, !dbg !6049
  br i1 %tobool, label %if.end, label %if.then, !dbg !6051

if.then:                                          ; preds = %entry
  %4 = bitcast i8** %call to %union.tree_node**, !dbg !6052
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !6052
  br label %cleanup, !dbg !6053

if.end:                                           ; preds = %entry
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6054
  %bf.load = load i64, i64* %6, align 8, !dbg !6054
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6055
  %cmp = icmp eq i64 %bf.cast1, 35, !dbg !6055
  br i1 %cmp, label %land.lhs.true, label %if.end9, !dbg !6056

land.lhs.true:                                    ; preds = %if.end
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 3, !dbg !6057
  %7 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !6057
  %tobool1 = icmp eq %union.tree_node* %7, null, !dbg !6057
  br i1 %tobool1, label %if.end9, label %if.then2, !dbg !6058

if.then2:                                         ; preds = %land.lhs.true
  %call3 = tail call %union.tree_node* @copy_decl_no_change(%union.tree_node* %decl, %struct.copy_body_data* %id) #6, !dbg !6059
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !6041, metadata !DIExpression()), !dbg !6060
  %8 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !6061
  %call6 = tail call %union.tree_node* @remap_type(%union.tree_node* %8, %struct.copy_body_data* %id) #6, !dbg !6062
  %result8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 3, !dbg !6063
  store %union.tree_node* %call6, %union.tree_node** %result8, align 8, !dbg !6064
  br label %cleanup

if.end9:                                          ; preds = %land.lhs.true, %if.end
  %cmp14 = icmp eq i64 %bf.cast1, 32, !dbg !6065
  br i1 %cmp14, label %cleanup, label %lor.lhs.false, !dbg !6067

lor.lhs.false:                                    ; preds = %if.end9
  %cmp19 = icmp eq i64 %bf.cast1, 34, !dbg !6068
  br i1 %cmp19, label %cleanup, label %lor.lhs.false20, !dbg !6069

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %cmp25 = icmp eq i64 %bf.cast1, 36, !dbg !6070
  br i1 %cmp25, label %cleanup, label %if.end27, !dbg !6071

if.end27:                                         ; preds = %lor.lhs.false20
  %call28 = tail call %union.tree_node* @copy_decl_no_change(%union.tree_node* %decl, %struct.copy_body_data* %id) #6, !dbg !6072
  br label %cleanup, !dbg !6073

cleanup:                                          ; preds = %if.end9, %lor.lhs.false, %lor.lhs.false20, %if.end27, %if.then2, %if.then
  %retval.0 = phi %union.tree_node* [ %5, %if.then ], [ %call3, %if.then2 ], [ %call28, %if.end27 ], [ %decl, %lor.lhs.false20 ], [ %decl, %lor.lhs.false ], [ %decl, %if.end9 ], !dbg !6044
  ret %union.tree_node* %retval.0, !dbg !6074
}

declare dso_local %union.tree_node* @remap_type(%union.tree_node*, %struct.copy_body_data*) local_unnamed_addr #2

declare dso_local %union.tree_node* @remap_decl(%union.tree_node*, %struct.copy_body_data*) local_unnamed_addr #2

declare dso_local void @pointer_map_destroy(%struct.pointer_map_t*) local_unnamed_addr #2

declare dso_local %union.tree_node* @chainon(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) local_unnamed_addr #2

declare dso_local void @dump_function_to_file(%union.tree_node*, %struct._IO_FILE*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_value_expr_lookup(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @contains_remapped_vars(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !6075 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !6077, metadata !DIExpression()), !dbg !6083
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !6078, metadata !DIExpression()), !dbg !6083
  call void @llvm.dbg.value(metadata i8* %data, metadata !6079, metadata !DIExpression()), !dbg !6083
  call void @llvm.dbg.value(metadata i8* %data, metadata !6080, metadata !DIExpression()), !dbg !6083
  %0 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !6084
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6081, metadata !DIExpression()), !dbg !6083
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6085
  %bf.load = load i64, i64* %1, align 8, !dbg !6085
  %bf.cast = and i64 %bf.load, 65535, !dbg !6085
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !6085
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6085
  %cmp = icmp eq i32 %2, 3, !dbg !6085
  br i1 %cmp, label %if.then, label %cleanup, !dbg !6087

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %data, metadata !6080, metadata !DIExpression()), !dbg !6083
  store i32 0, i32* %walk_subtrees, align 4, !dbg !6088
  %var_map = getelementptr inbounds i8, i8* %data, i64 32, !dbg !6090
  %3 = bitcast i8* %var_map to %struct.pointer_map_t**, !dbg !6090
  %4 = load %struct.pointer_map_t*, %struct.pointer_map_t** %3, align 8, !dbg !6090
  %5 = bitcast %union.tree_node* %0 to i8*, !dbg !6091
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %4, i8* %5) #6, !dbg !6092
  call void @llvm.dbg.value(metadata i8** %call, metadata !6082, metadata !DIExpression()), !dbg !6083
  %tobool = icmp eq i8** %call, null, !dbg !6093
  br i1 %tobool, label %cleanup, label %if.then1, !dbg !6095

if.then1:                                         ; preds = %if.then
  %6 = bitcast i8** %call to %union.tree_node**, !dbg !6096
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !6096
  br label %cleanup, !dbg !6097

cleanup:                                          ; preds = %if.then, %entry, %if.then1
  %retval.0 = phi %union.tree_node* [ %7, %if.then1 ], [ null, %if.then ], [ null, %entry ], !dbg !6083
  ret %union.tree_node* %retval.0, !dbg !6098
}

declare dso_local %union.tree_node* @copy_tree_body_r(%union.tree_node**, i32*, i8*) #2

declare dso_local %union.tree_node* @copy_decl_no_change(%union.tree_node*, %struct.copy_body_data*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @unnest_nesting_tree_1(%struct.nesting_info* %root) unnamed_addr #5 !dbg !6099 {
entry:
  call void @llvm.dbg.value(metadata %struct.nesting_info* %root, metadata !6101, metadata !DIExpression()), !dbg !6103
  %context = getelementptr inbounds %struct.nesting_info, %struct.nesting_info* %root, i64 0, i32 6, !dbg !6104
  %0 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !6104
  %call = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %0) #6, !dbg !6105
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call, metadata !6102, metadata !DIExpression()), !dbg !6103
  %origin = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call, i64 0, i32 5, !dbg !6106
  %1 = load %struct.cgraph_node*, %struct.cgraph_node** %origin, align 8, !dbg !6106
  %tobool = icmp eq %struct.cgraph_node* %1, null, !dbg !6108
  br i1 %tobool, label %if.end, label %if.then, !dbg !6109

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !6110
  %call2 = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %2) #6, !dbg !6112
  tail call void @cgraph_unnest_node(%struct.cgraph_node* %call2) #6, !dbg !6113
  %3 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !6114
  tail call void @cgraph_finalize_function(%union.tree_node* %3, i8 zeroext 1) #6, !dbg !6115
  br label %if.end, !dbg !6116

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !6117
}

declare dso_local void @cgraph_unnest_node(%struct.cgraph_node*) local_unnamed_addr #2

declare dso_local void @cgraph_finalize_function(%union.tree_node*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2293, !2294, !2295}
!llvm.ident = !{!2296}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "nesting_info_bitmap_obstack", scope: !2, file: !3, line: 128, type: !707, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !659, globals: !2276, nameTableKind: None)
!3 = !DIFile(filename: "tree-nested.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !335, !340, !345, !363, !370, !377, !400, !407, !583, !622, !648, !653}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !330, line: 363, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334}
!332 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!335 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !330, line: 355, baseType: !7, size: 32, elements: !336)
!336 = !{!337, !338, !339}
!337 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!338 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!339 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !341, line: 474, baseType: !7, size: 32, elements: !342)
!341 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!342 = !{!343, !344}
!343 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!344 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362}
!347 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!363 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !364)
!364 = !{!365, !366, !367, !368, !369}
!365 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !378, line: 309, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399}
!380 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!386 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!387 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!388 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!389 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!390 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!391 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!392 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!393 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!394 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!395 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!396 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!397 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!398 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!399 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !401, line: 104, baseType: !7, size: 32, elements: !402)
!401 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!402 = !{!403, !404, !405, !406}
!403 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!404 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!405 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!406 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !408, line: 74, baseType: !7, size: 32, elements: !409)
!408 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!409 = !{!410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582}
!410 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!581 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!582 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!583 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !584, line: 51, baseType: !7, size: 32, elements: !585)
!584 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!585 = !{!586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621}
!586 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!587 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!588 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!589 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!590 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!591 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!592 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!593 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!594 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!595 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!596 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!597 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!598 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!599 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!600 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!601 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!602 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!603 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!604 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!605 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!606 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!607 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!608 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!609 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!610 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!611 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!612 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!613 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!614 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!615 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!616 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!617 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!618 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!619 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!620 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!621 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!622 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !584, line: 727, baseType: !7, size: 32, elements: !623)
!623 = !{!624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647}
!624 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!625 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!626 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!627 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!628 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!629 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!630 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!631 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!632 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!633 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!634 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!635 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!636 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!637 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!638 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!639 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!640 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!641 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!642 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!643 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!644 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!645 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!646 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!647 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!648 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insert_option", file: !649, line: 147, baseType: !7, size: 32, elements: !650)
!649 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!650 = !{!651, !652}
!651 = !DIEnumerator(name: "NO_INSERT", value: 0, isUnsigned: true)
!652 = !DIEnumerator(name: "INSERT", value: 1, isUnsigned: true)
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "copy_body_cge_which", file: !654, line: 33, baseType: !7, size: 32, elements: !655)
!654 = !DIFile(filename: "./tree-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!655 = !{!656, !657, !658}
!656 = !DIEnumerator(name: "CB_CGE_DUPLICATE", value: 0, isUnsigned: true)
!657 = !DIEnumerator(name: "CB_CGE_MOVE", value: 1, isUnsigned: true)
!658 = !DIEnumerator(name: "CB_CGE_MOVE_CLONES", value: 2, isUnsigned: true)
!659 = !{!660, !661, !662, !663, !666, !667, !134, !669, !745, !1008, !1983, !1042, !664, !1985, !869, !2004, !2005}
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!662 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !665)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nesting_info", file: !3, line: 81, size: 960, elements: !671)
!671 = !{!672, !673, !674, !675, !679, !680, !744, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !670, file: !3, line: 83, baseType: !669, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !670, file: !3, line: 84, baseType: !669, size: 64, offset: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !670, file: !3, line: 85, baseType: !669, size: 64, offset: 128)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "field_map", scope: !670, file: !3, line: 87, baseType: !676, size: 64, offset: 192)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !678, line: 33, flags: DIFlagFwdDecl)
!678 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!679 = !DIDerivedType(tag: DW_TAG_member, name: "var_map", scope: !670, file: !3, line: 88, baseType: !676, size: 64, offset: 256)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_expansion", scope: !670, file: !3, line: 89, baseType: !681, size: 64, offset: 320)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !682, line: 47, baseType: !683)
!682 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !685, line: 75, size: 256, elements: !686)
!685 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!686 = !{!687, !702, !703, !704}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !684, file: !685, line: 76, baseType: !688, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !685, line: 68, baseType: !690)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !685, line: 63, size: 320, elements: !691)
!691 = !{!692, !694, !695, !696}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !690, file: !685, line: 64, baseType: !693, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !690, file: !685, line: 65, baseType: !693, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !690, file: !685, line: 66, baseType: !7, size: 32, offset: 128)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !690, file: !685, line: 67, baseType: !697, size: 128, offset: 192)
!697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !698, size: 128, elements: !700)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !685, line: 29, baseType: !699)
!699 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!700 = !{!701}
!701 = !DISubrange(count: 2)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !684, file: !685, line: 77, baseType: !688, size: 64, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !684, file: !685, line: 78, baseType: !7, size: 32, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !684, file: !685, line: 79, baseType: !705, size: 64, offset: 192)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !685, line: 49, baseType: !707)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !685, line: 45, size: 832, elements: !708)
!708 = !{!709, !710, !711}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !707, file: !685, line: 46, baseType: !693, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !707, file: !685, line: 47, baseType: !683, size: 64, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !707, file: !685, line: 48, baseType: !712, size: 704, offset: 128)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !713, line: 164, size: 704, elements: !714)
!713 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!714 = !{!715, !717, !727, !728, !729, !730, !731, !732, !736, !740, !741, !742, !743}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !712, file: !713, line: 166, baseType: !716, size: 64)
!716 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !712, file: !713, line: 167, baseType: !718, size: 64, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !713, line: 157, size: 192, elements: !720)
!720 = !{!721, !722, !723}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !719, file: !713, line: 159, baseType: !664, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !719, file: !713, line: 160, baseType: !718, size: 64, offset: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !719, file: !713, line: 161, baseType: !724, size: 32, offset: 128)
!724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 32, elements: !725)
!725 = !{!726}
!726 = !DISubrange(count: 4)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !712, file: !713, line: 168, baseType: !664, size: 64, offset: 128)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !712, file: !713, line: 169, baseType: !664, size: 64, offset: 192)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !712, file: !713, line: 170, baseType: !664, size: 64, offset: 256)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !712, file: !713, line: 171, baseType: !716, size: 64, offset: 320)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !712, file: !713, line: 172, baseType: !662, size: 32, offset: 384)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !712, file: !713, line: 176, baseType: !733, size: 64, offset: 448)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{!718, !666, !716}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !712, file: !713, line: 177, baseType: !737, size: 64, offset: 512)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DISubroutineType(types: !739)
!739 = !{null, !666, !718}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !712, file: !713, line: 178, baseType: !666, size: 64, offset: 576)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !712, file: !713, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !712, file: !713, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !712, file: !713, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !670, file: !3, line: 91, baseType: !745, size: 64, offset: 384)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !682, line: 56, baseType: !746)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !748)
!748 = !{!749, !782, !788, !799, !818, !829, !834, !843, !849, !862, !874, !912, !1311, !1339, !1356, !1357, !1362, !1371, !1377, !1382, !1386, !1390, !1624, !1671, !1677, !1683, !1690, !1703, !1717, !1734, !1746, !1768, !1783, !1955}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !747, file: !135, line: 3372, baseType: !750, size: 64)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !751)
!751 = !{!752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !750, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !750, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !750, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !750, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !750, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !750, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !750, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !750, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !750, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !750, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !750, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !750, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !750, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !750, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !750, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !750, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !750, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !750, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !750, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !750, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !750, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !750, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !750, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !750, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !750, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !750, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !750, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !750, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !750, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !750, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !747, file: !135, line: 3373, baseType: !783, size: 192)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !784)
!784 = !{!785, !786, !787}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !783, file: !135, line: 403, baseType: !750, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !783, file: !135, line: 404, baseType: !745, size: 64, offset: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !783, file: !135, line: 405, baseType: !745, size: 64, offset: 128)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !747, file: !135, line: 3374, baseType: !789, size: 320)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !790)
!790 = !{!791, !792}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !789, file: !135, line: 1385, baseType: !783, size: 192)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !789, file: !135, line: 1386, baseType: !793, size: 128, offset: 192)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !794, line: 58, baseType: !795)
!794 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 54, size: 128, elements: !796)
!796 = !{!797, !798}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !795, file: !794, line: 56, baseType: !699, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !795, file: !794, line: 57, baseType: !716, size: 64, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !747, file: !135, line: 3375, baseType: !800, size: 256)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !801)
!801 = !{!802, !803}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !800, file: !135, line: 1398, baseType: !783, size: 192)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !800, file: !135, line: 1399, baseType: !804, size: 64, offset: 192)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !806, line: 52, size: 256, elements: !807)
!806 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!807 = !{!808, !809, !810, !811, !812, !813, !814}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !805, file: !806, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !805, file: !806, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !805, file: !806, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !805, file: !806, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !805, file: !806, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !805, file: !806, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !805, file: !806, line: 62, baseType: !815, size: 192, offset: 64)
!815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !699, size: 192, elements: !816)
!816 = !{!817}
!817 = !DISubrange(count: 3)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !747, file: !135, line: 3376, baseType: !819, size: 256)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !820)
!820 = !{!821, !822}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !819, file: !135, line: 1409, baseType: !783, size: 192)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !819, file: !135, line: 1410, baseType: !823, size: 64, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !825, line: 27, size: 192, elements: !826)
!825 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!826 = !{!827, !828}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !824, file: !825, line: 29, baseType: !793, size: 128)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !824, file: !825, line: 30, baseType: !5, size: 32, offset: 128)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !747, file: !135, line: 3377, baseType: !830, size: 256)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !831)
!831 = !{!832, !833}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !830, file: !135, line: 1438, baseType: !783, size: 192)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !830, file: !135, line: 1439, baseType: !745, size: 64, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !747, file: !135, line: 3378, baseType: !835, size: 256)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !836)
!836 = !{!837, !838, !839}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !835, file: !135, line: 1419, baseType: !783, size: 192)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !835, file: !135, line: 1420, baseType: !662, size: 32, offset: 192)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !835, file: !135, line: 1421, baseType: !840, size: 8, offset: 224)
!840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 8, elements: !841)
!841 = !{!842}
!842 = !DISubrange(count: 1)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !747, file: !135, line: 3379, baseType: !844, size: 320)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !845)
!845 = !{!846, !847, !848}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !844, file: !135, line: 1429, baseType: !783, size: 192)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !844, file: !135, line: 1430, baseType: !745, size: 64, offset: 192)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !844, file: !135, line: 1431, baseType: !745, size: 64, offset: 256)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !747, file: !135, line: 3380, baseType: !850, size: 320)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !851)
!851 = !{!852, !853}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !850, file: !135, line: 1461, baseType: !783, size: 192)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !850, file: !135, line: 1462, baseType: !854, size: 128, offset: 192)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !855, line: 31, size: 128, elements: !856)
!855 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!856 = !{!857, !860, !861}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !854, file: !855, line: 32, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !854, file: !855, line: 33, baseType: !7, size: 32, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !854, file: !855, line: 34, baseType: !7, size: 32, offset: 96)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !747, file: !135, line: 3381, baseType: !863, size: 384)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !864)
!864 = !{!865, !866, !871, !872, !873}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !863, file: !135, line: 2508, baseType: !783, size: 192)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !863, file: !135, line: 2509, baseType: !867, size: 32, offset: 192)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !868, line: 58, baseType: !869)
!868 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !870, line: 44, baseType: !7)
!870 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!871 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !863, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !863, file: !135, line: 2511, baseType: !745, size: 64, offset: 256)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !863, file: !135, line: 2512, baseType: !745, size: 64, offset: 320)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !747, file: !135, line: 3382, baseType: !875, size: 896)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !876)
!876 = !{!877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !875, file: !135, line: 2653, baseType: !863, size: 384)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !875, file: !135, line: 2654, baseType: !745, size: 64, offset: 384)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !875, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !875, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !875, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !875, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !875, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !875, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !875, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !875, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !875, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !875, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !875, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !875, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !875, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !875, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !875, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !875, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !875, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !875, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !875, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !875, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !875, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !875, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !875, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !875, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !875, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !875, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !875, file: !135, line: 2705, baseType: !745, size: 64, offset: 576)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !875, file: !135, line: 2706, baseType: !745, size: 64, offset: 640)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !875, file: !135, line: 2707, baseType: !745, size: 64, offset: 704)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !875, file: !135, line: 2708, baseType: !745, size: 64, offset: 768)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !875, file: !135, line: 2711, baseType: !910, size: 64, offset: 832)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !135, line: 2711, flags: DIFlagFwdDecl)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !747, file: !135, line: 3383, baseType: !913, size: 960)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !914)
!914 = !{!915, !916}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !913, file: !135, line: 2757, baseType: !875, size: 896)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !913, file: !135, line: 2758, baseType: !917, size: 64, offset: 896)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !682, line: 50, baseType: !918)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !920, line: 240, size: 384, elements: !921)
!920 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!921 = !{!922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !919, file: !920, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !919, file: !920, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !919, file: !920, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !919, file: !920, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !919, file: !920, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !919, file: !920, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !919, file: !920, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !919, file: !920, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !919, file: !920, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !919, file: !920, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !919, file: !920, line: 321, baseType: !933, size: 320, offset: 64)
!933 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !920, line: 315, size: 320, elements: !934)
!934 = !{!935, !1278, !1280, !1309, !1310}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !933, file: !920, line: 316, baseType: !936, size: 64)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 64, elements: !841)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !920, line: 183, baseType: !938)
!938 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !920, line: 166, size: 64, elements: !939)
!939 = !{!940, !941, !942, !943, !944, !952, !953, !965, !968, !969, !970, !1255, !1268, !1275}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !938, file: !920, line: 168, baseType: !662, size: 32)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !938, file: !920, line: 169, baseType: !7, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !938, file: !920, line: 170, baseType: !667, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !938, file: !920, line: 171, baseType: !917, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !938, file: !920, line: 172, baseType: !945, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !682, line: 53, baseType: !946)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !920, line: 359, size: 128, elements: !948)
!948 = !{!949, !950}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !947, file: !920, line: 360, baseType: !662, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !947, file: !920, line: 361, baseType: !951, size: 64, offset: 64)
!951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 64, elements: !841)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !938, file: !920, line: 173, baseType: !5, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !938, file: !920, line: 174, baseType: !954, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !920, line: 133, baseType: !955)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !920, line: 115, size: 32, elements: !956)
!956 = !{!957, !958, !959, !960, !961, !962, !963, !964}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !955, file: !920, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !955, file: !920, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !955, file: !920, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !955, file: !920, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !955, file: !920, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !955, file: !920, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !955, file: !920, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !955, file: !920, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !938, file: !920, line: 175, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !920, line: 175, flags: DIFlagFwdDecl)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !938, file: !920, line: 176, baseType: !683, size: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !938, file: !920, line: 177, baseType: !745, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !938, file: !920, line: 178, baseType: !971, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !330, line: 217, size: 832, elements: !973)
!973 = !{!974, !1220, !1221, !1222, !1225, !1229, !1230, !1231, !1249, !1250, !1251, !1252, !1253, !1254}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !972, file: !330, line: 219, baseType: !975, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !330, line: 151, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !330, line: 151, size: 128, elements: !978)
!978 = !{!979}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !977, file: !330, line: 151, baseType: !980, size: 128)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !330, line: 150, baseType: !981)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !330, line: 150, size: 128, elements: !982)
!982 = !{!983, !984, !985}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !981, file: !330, line: 150, baseType: !7, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !981, file: !330, line: 150, baseType: !7, size: 32, offset: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !981, file: !330, line: 150, baseType: !986, size: 64, offset: 64)
!986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 64, elements: !841)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !682, line: 108, baseType: !988)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !330, line: 122, size: 512, elements: !990)
!990 = !{!991, !992, !993, !1212, !1213, !1214, !1215, !1216, !1217, !1218}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !989, file: !330, line: 124, baseType: !971, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !989, file: !330, line: 125, baseType: !971, size: 64, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !989, file: !330, line: 131, baseType: !994, size: 64, offset: 128)
!994 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !330, line: 128, size: 64, elements: !995)
!995 = !{!996, !1211}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !994, file: !330, line: 129, baseType: !997, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !682, line: 66, baseType: !998)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !584, line: 143, size: 192, elements: !1000)
!1000 = !{!1001, !1209, !1210}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !999, file: !584, line: 145, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !682, line: 69, baseType: !1003)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !584, line: 136, size: 192, elements: !1005)
!1005 = !{!1006, !1207, !1208}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1004, file: !584, line: 137, baseType: !1007, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !682, line: 58, baseType: !1008)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !584, line: 737, size: 768, elements: !1010)
!1010 = !{!1011, !1028, !1062, !1068, !1073, !1078, !1085, !1091, !1097, !1102, !1116, !1121, !1127, !1132, !1142, !1147, !1165, !1172, !1179, !1185, !1190, !1196, !1202}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1009, file: !584, line: 738, baseType: !1012, size: 256)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !584, line: 271, size: 256, elements: !1013)
!1013 = !{!1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1012, file: !584, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1012, file: !584, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1012, file: !584, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1012, file: !584, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1012, file: !584, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1012, file: !584, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1012, file: !584, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1012, file: !584, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1012, file: !584, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1012, file: !584, line: 312, baseType: !7, size: 32, offset: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1012, file: !584, line: 316, baseType: !867, size: 32, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1012, file: !584, line: 319, baseType: !7, size: 32, offset: 96)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1012, file: !584, line: 323, baseType: !971, size: 64, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1012, file: !584, line: 327, baseType: !745, size: 64, offset: 192)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1009, file: !584, line: 739, baseType: !1029, size: 448)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !584, line: 350, size: 448, elements: !1030)
!1030 = !{!1031, !1060}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1029, file: !584, line: 353, baseType: !1032, size: 384)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !584, line: 333, size: 384, elements: !1033)
!1033 = !{!1034, !1035, !1043}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1032, file: !584, line: 336, baseType: !1012, size: 256)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1032, file: !584, line: 343, baseType: !1036, size: 64, offset: 256)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !1038, line: 37, size: 128, elements: !1039)
!1038 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1037, file: !1038, line: 39, baseType: !1036, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1037, file: !1038, line: 40, baseType: !1042, size: 64, offset: 64)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1032, file: !584, line: 344, baseType: !1044, size: 64, offset: 320)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !1038, line: 45, size: 320, elements: !1046)
!1046 = !{!1047, !1048}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1045, file: !1038, line: 47, baseType: !1044, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1045, file: !1038, line: 48, baseType: !1049, size: 256, offset: 64)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !1050)
!1050 = !{!1051, !1053, !1054, !1059}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1049, file: !135, line: 1884, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1049, file: !135, line: 1885, baseType: !1052, size: 64, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1049, file: !135, line: 1891, baseType: !1055, size: 64, offset: 128)
!1055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1049, file: !135, line: 1891, size: 64, elements: !1056)
!1056 = !{!1057, !1058}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1055, file: !135, line: 1891, baseType: !1007, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1055, file: !135, line: 1891, baseType: !745, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1049, file: !135, line: 1892, baseType: !1042, size: 64, offset: 192)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1029, file: !584, line: 359, baseType: !1061, size: 64, offset: 384)
!1061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !745, size: 64, elements: !841)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1009, file: !584, line: 740, baseType: !1063, size: 512)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !584, line: 365, size: 512, elements: !1064)
!1064 = !{!1065, !1066, !1067}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1063, file: !584, line: 368, baseType: !1032, size: 384)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1063, file: !584, line: 373, baseType: !745, size: 64, offset: 384)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1063, file: !584, line: 374, baseType: !745, size: 64, offset: 448)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1009, file: !584, line: 741, baseType: !1069, size: 576)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !584, line: 380, size: 576, elements: !1070)
!1070 = !{!1071, !1072}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1069, file: !584, line: 383, baseType: !1063, size: 512)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1069, file: !584, line: 389, baseType: !1061, size: 64, offset: 512)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1009, file: !584, line: 742, baseType: !1074, size: 320)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !584, line: 395, size: 320, elements: !1075)
!1075 = !{!1076, !1077}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1074, file: !584, line: 397, baseType: !1012, size: 256)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1074, file: !584, line: 400, baseType: !997, size: 64, offset: 256)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1009, file: !584, line: 743, baseType: !1079, size: 448)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !584, line: 406, size: 448, elements: !1080)
!1080 = !{!1081, !1082, !1083, !1084}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1079, file: !584, line: 408, baseType: !1012, size: 256)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1079, file: !584, line: 412, baseType: !745, size: 64, offset: 256)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1079, file: !584, line: 420, baseType: !745, size: 64, offset: 320)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1079, file: !584, line: 423, baseType: !997, size: 64, offset: 384)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1009, file: !584, line: 744, baseType: !1086, size: 384)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !584, line: 429, size: 384, elements: !1087)
!1087 = !{!1088, !1089, !1090}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1086, file: !584, line: 431, baseType: !1012, size: 256)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1086, file: !584, line: 434, baseType: !745, size: 64, offset: 256)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1086, file: !584, line: 437, baseType: !997, size: 64, offset: 320)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1009, file: !584, line: 745, baseType: !1092, size: 384)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !584, line: 443, size: 384, elements: !1093)
!1093 = !{!1094, !1095, !1096}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1092, file: !584, line: 445, baseType: !1012, size: 256)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1092, file: !584, line: 449, baseType: !745, size: 64, offset: 256)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1092, file: !584, line: 453, baseType: !997, size: 64, offset: 320)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1009, file: !584, line: 746, baseType: !1098, size: 320)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !584, line: 459, size: 320, elements: !1099)
!1099 = !{!1100, !1101}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1098, file: !584, line: 461, baseType: !1012, size: 256)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1098, file: !584, line: 464, baseType: !745, size: 64, offset: 256)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1009, file: !584, line: 747, baseType: !1103, size: 768)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !584, line: 469, size: 768, elements: !1104)
!1104 = !{!1105, !1106, !1107, !1108, !1109}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1103, file: !584, line: 471, baseType: !1012, size: 256)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1103, file: !584, line: 474, baseType: !7, size: 32, offset: 256)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1103, file: !584, line: 475, baseType: !7, size: 32, offset: 288)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1103, file: !584, line: 478, baseType: !745, size: 64, offset: 320)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1103, file: !584, line: 481, baseType: !1110, size: 384, offset: 384)
!1110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1111, size: 384, elements: !841)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !1112)
!1112 = !{!1113, !1114, !1115}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1111, file: !135, line: 1920, baseType: !1049, size: 256)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1111, file: !135, line: 1921, baseType: !745, size: 64, offset: 256)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1111, file: !135, line: 1922, baseType: !867, size: 32, offset: 320)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1009, file: !584, line: 748, baseType: !1117, size: 320)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !584, line: 487, size: 320, elements: !1118)
!1118 = !{!1119, !1120}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1117, file: !584, line: 490, baseType: !1012, size: 256)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1117, file: !584, line: 494, baseType: !662, size: 32, offset: 256)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1009, file: !584, line: 749, baseType: !1122, size: 384)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !584, line: 500, size: 384, elements: !1123)
!1123 = !{!1124, !1125, !1126}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1122, file: !584, line: 502, baseType: !1012, size: 256)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1122, file: !584, line: 506, baseType: !997, size: 64, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1122, file: !584, line: 510, baseType: !997, size: 64, offset: 320)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1009, file: !584, line: 750, baseType: !1128, size: 320)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !584, line: 529, size: 320, elements: !1129)
!1129 = !{!1130, !1131}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1128, file: !584, line: 531, baseType: !1012, size: 256)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1128, file: !584, line: 540, baseType: !997, size: 64, offset: 256)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1009, file: !584, line: 751, baseType: !1133, size: 704)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !584, line: 546, size: 704, elements: !1134)
!1134 = !{!1135, !1136, !1137, !1138, !1139, !1140, !1141}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1133, file: !584, line: 549, baseType: !1063, size: 512)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1133, file: !584, line: 553, baseType: !667, size: 64, offset: 512)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1133, file: !584, line: 557, baseType: !661, size: 8, offset: 576)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1133, file: !584, line: 558, baseType: !661, size: 8, offset: 584)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1133, file: !584, line: 559, baseType: !661, size: 8, offset: 592)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1133, file: !584, line: 560, baseType: !661, size: 8, offset: 600)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1133, file: !584, line: 566, baseType: !1061, size: 64, offset: 640)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1009, file: !584, line: 752, baseType: !1143, size: 384)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !584, line: 571, size: 384, elements: !1144)
!1144 = !{!1145, !1146}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1143, file: !584, line: 573, baseType: !1074, size: 320)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1143, file: !584, line: 577, baseType: !745, size: 64, offset: 320)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1009, file: !584, line: 753, baseType: !1148, size: 576)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !584, line: 600, size: 576, elements: !1149)
!1149 = !{!1150, !1151, !1152, !1155, !1164}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1148, file: !584, line: 602, baseType: !1074, size: 320)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1148, file: !584, line: 605, baseType: !745, size: 64, offset: 320)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1148, file: !584, line: 609, baseType: !1153, size: 64, offset: 384)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1154, line: 46, baseType: !699)
!1154 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1148, file: !584, line: 612, baseType: !1156, size: 64, offset: 448)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !584, line: 581, size: 320, elements: !1158)
!1158 = !{!1159, !1160, !1161, !1162, !1163}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1157, file: !584, line: 583, baseType: !134, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1157, file: !584, line: 586, baseType: !745, size: 64, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1157, file: !584, line: 589, baseType: !745, size: 64, offset: 128)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1157, file: !584, line: 592, baseType: !745, size: 64, offset: 192)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1157, file: !584, line: 595, baseType: !745, size: 64, offset: 256)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1148, file: !584, line: 616, baseType: !997, size: 64, offset: 512)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1009, file: !584, line: 754, baseType: !1166, size: 512)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !584, line: 622, size: 512, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1171}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1166, file: !584, line: 624, baseType: !1074, size: 320)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1166, file: !584, line: 628, baseType: !745, size: 64, offset: 320)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1166, file: !584, line: 632, baseType: !745, size: 64, offset: 384)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1166, file: !584, line: 636, baseType: !745, size: 64, offset: 448)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1009, file: !584, line: 755, baseType: !1173, size: 704)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !584, line: 642, size: 704, elements: !1174)
!1174 = !{!1175, !1176, !1177, !1178}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1173, file: !584, line: 644, baseType: !1166, size: 512)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1173, file: !584, line: 648, baseType: !745, size: 64, offset: 512)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1173, file: !584, line: 652, baseType: !745, size: 64, offset: 576)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1173, file: !584, line: 653, baseType: !745, size: 64, offset: 640)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1009, file: !584, line: 756, baseType: !1180, size: 448)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !584, line: 663, size: 448, elements: !1181)
!1181 = !{!1182, !1183, !1184}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1180, file: !584, line: 665, baseType: !1074, size: 320)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1180, file: !584, line: 668, baseType: !745, size: 64, offset: 320)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1180, file: !584, line: 673, baseType: !745, size: 64, offset: 384)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1009, file: !584, line: 757, baseType: !1186, size: 384)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !584, line: 694, size: 384, elements: !1187)
!1187 = !{!1188, !1189}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1186, file: !584, line: 696, baseType: !1074, size: 320)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1186, file: !584, line: 699, baseType: !745, size: 64, offset: 320)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1009, file: !584, line: 758, baseType: !1191, size: 384)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !584, line: 681, size: 384, elements: !1192)
!1192 = !{!1193, !1194, !1195}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1191, file: !584, line: 683, baseType: !1012, size: 256)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1191, file: !584, line: 686, baseType: !745, size: 64, offset: 256)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1191, file: !584, line: 689, baseType: !745, size: 64, offset: 320)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1009, file: !584, line: 759, baseType: !1197, size: 384)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !584, line: 707, size: 384, elements: !1198)
!1198 = !{!1199, !1200, !1201}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1197, file: !584, line: 709, baseType: !1012, size: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1197, file: !584, line: 712, baseType: !745, size: 64, offset: 256)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1197, file: !584, line: 712, baseType: !745, size: 64, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1009, file: !584, line: 760, baseType: !1203, size: 320)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !584, line: 718, size: 320, elements: !1204)
!1204 = !{!1205, !1206}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1203, file: !584, line: 720, baseType: !1012, size: 256)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1203, file: !584, line: 723, baseType: !745, size: 64, offset: 256)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1004, file: !584, line: 138, baseType: !1003, size: 64, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1004, file: !584, line: 139, baseType: !1003, size: 64, offset: 128)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !999, file: !584, line: 146, baseType: !1002, size: 64, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !999, file: !584, line: 152, baseType: !997, size: 64, offset: 128)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !994, file: !330, line: 130, baseType: !917, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !989, file: !330, line: 134, baseType: !666, size: 64, offset: 192)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !989, file: !330, line: 137, baseType: !745, size: 64, offset: 256)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !989, file: !330, line: 138, baseType: !867, size: 32, offset: 320)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !989, file: !330, line: 142, baseType: !7, size: 32, offset: 352)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !989, file: !330, line: 144, baseType: !662, size: 32, offset: 384)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !989, file: !330, line: 145, baseType: !662, size: 32, offset: 416)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !989, file: !330, line: 146, baseType: !1219, size: 64, offset: 448)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !330, line: 119, baseType: !716)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !972, file: !330, line: 220, baseType: !975, size: 64, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !972, file: !330, line: 223, baseType: !666, size: 64, offset: 128)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !972, file: !330, line: 226, baseType: !1223, size: 64, offset: 192)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !330, line: 185, flags: DIFlagFwdDecl)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !972, file: !330, line: 229, baseType: !1226, size: 128, offset: 256)
!1226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1227, size: 128, elements: !700)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !330, line: 229, flags: DIFlagFwdDecl)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !972, file: !330, line: 232, baseType: !971, size: 64, offset: 384)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !972, file: !330, line: 233, baseType: !971, size: 64, offset: 448)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !972, file: !330, line: 238, baseType: !1232, size: 64, offset: 512)
!1232 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !330, line: 235, size: 64, elements: !1233)
!1233 = !{!1234, !1240}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1232, file: !330, line: 236, baseType: !1235, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !330, line: 273, size: 128, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1236, file: !330, line: 275, baseType: !997, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1236, file: !330, line: 278, baseType: !997, size: 64, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1232, file: !330, line: 237, baseType: !1241, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !330, line: 259, size: 320, elements: !1243)
!1243 = !{!1244, !1245, !1246, !1247, !1248}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1242, file: !330, line: 261, baseType: !917, size: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1242, file: !330, line: 262, baseType: !917, size: 64, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1242, file: !330, line: 266, baseType: !917, size: 64, offset: 128)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1242, file: !330, line: 267, baseType: !917, size: 64, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1242, file: !330, line: 270, baseType: !662, size: 32, offset: 256)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !972, file: !330, line: 241, baseType: !1219, size: 64, offset: 576)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !972, file: !330, line: 244, baseType: !662, size: 32, offset: 640)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !972, file: !330, line: 247, baseType: !662, size: 32, offset: 672)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !972, file: !330, line: 250, baseType: !662, size: 32, offset: 704)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !972, file: !330, line: 253, baseType: !662, size: 32, offset: 736)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !972, file: !330, line: 256, baseType: !662, size: 32, offset: 768)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !938, file: !920, line: 179, baseType: !1256, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !920, line: 150, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !920, line: 142, size: 320, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1263, !1266, !1267}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1258, file: !920, line: 144, baseType: !745, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1258, file: !920, line: 145, baseType: !917, size: 64, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1258, file: !920, line: 146, baseType: !917, size: 64, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1258, file: !920, line: 147, baseType: !1264, size: 32, offset: 192)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1265, line: 31, baseType: !662)
!1265 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1258, file: !920, line: 148, baseType: !7, size: 32, offset: 224)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1258, file: !920, line: 149, baseType: !661, size: 8, offset: 256)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !938, file: !920, line: 180, baseType: !1269, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !920, line: 162, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !920, line: 159, size: 128, elements: !1272)
!1272 = !{!1273, !1274}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1271, file: !920, line: 160, baseType: !745, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1271, file: !920, line: 161, baseType: !716, size: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !938, file: !920, line: 181, baseType: !1276, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !920, line: 181, flags: DIFlagFwdDecl)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !933, file: !920, line: 317, baseType: !1279, size: 64)
!1279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 64, elements: !841)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !933, file: !920, line: 318, baseType: !1281, size: 320)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !920, line: 188, size: 320, elements: !1282)
!1282 = !{!1283, !1285, !1308}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1281, file: !920, line: 190, baseType: !1284, size: 192)
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 192, elements: !816)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1281, file: !920, line: 193, baseType: !1286, size: 64, offset: 192)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !920, line: 206, size: 320, elements: !1288)
!1288 = !{!1289, !1293, !1294, !1295, !1307}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1287, file: !920, line: 208, baseType: !1290, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !682, line: 62, baseType: !1292)
!1292 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !682, line: 61, flags: DIFlagFwdDecl)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1287, file: !920, line: 211, baseType: !7, size: 32, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1287, file: !920, line: 214, baseType: !716, size: 64, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1287, file: !920, line: 224, baseType: !1296, size: 64, offset: 192)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !920, line: 202, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !920, line: 202, size: 128, elements: !1299)
!1299 = !{!1300}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1298, file: !920, line: 202, baseType: !1301, size: 128)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !920, line: 200, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !920, line: 200, size: 128, elements: !1303)
!1303 = !{!1304, !1305, !1306}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1302, file: !920, line: 200, baseType: !7, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1302, file: !920, line: 200, baseType: !7, size: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1302, file: !920, line: 200, baseType: !951, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1287, file: !920, line: 234, baseType: !1296, size: 64, offset: 256)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1281, file: !920, line: 197, baseType: !716, size: 64, offset: 256)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !933, file: !920, line: 319, baseType: !805, size: 256)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !933, file: !920, line: 320, baseType: !824, size: 192)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !747, file: !135, line: 3384, baseType: !1312, size: 1472)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !1313)
!1313 = !{!1314, !1335, !1336, !1337, !1338}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1312, file: !135, line: 3115, baseType: !1315, size: 1216)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1315, file: !135, line: 2985, baseType: !913, size: 960)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1315, file: !135, line: 2986, baseType: !745, size: 64, offset: 960)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1315, file: !135, line: 2987, baseType: !745, size: 64, offset: 1024)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1315, file: !135, line: 2988, baseType: !745, size: 64, offset: 1088)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1315, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1315, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1315, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1315, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1315, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1315, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1315, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1315, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1315, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1315, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1315, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1315, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1315, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1315, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1312, file: !135, line: 3117, baseType: !745, size: 64, offset: 1216)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1312, file: !135, line: 3119, baseType: !745, size: 64, offset: 1280)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1312, file: !135, line: 3121, baseType: !745, size: 64, offset: 1344)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1312, file: !135, line: 3123, baseType: !745, size: 64, offset: 1408)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !747, file: !135, line: 3385, baseType: !1340, size: 1088)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !1341)
!1341 = !{!1342, !1343, !1344}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1340, file: !135, line: 2875, baseType: !913, size: 960)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1340, file: !135, line: 2876, baseType: !917, size: 64, offset: 960)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1340, file: !135, line: 2877, baseType: !1345, size: 64, offset: 1024)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1347, line: 172, size: 128, elements: !1348)
!1347 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1348 = !{!1349, !1350, !1351, !1352, !1353, !1354, !1355}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1346, file: !1347, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1346, file: !1347, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1346, file: !1347, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1346, file: !1347, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1346, file: !1347, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1346, file: !1347, line: 195, baseType: !7, size: 32, offset: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1346, file: !1347, line: 199, baseType: !745, size: 64, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !747, file: !135, line: 3386, baseType: !1315, size: 1216)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !747, file: !135, line: 3387, baseType: !1358, size: 1280)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !1359)
!1359 = !{!1360, !1361}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1358, file: !135, line: 3094, baseType: !1315, size: 1216)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1358, file: !135, line: 3095, baseType: !1345, size: 64, offset: 1216)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !747, file: !135, line: 3388, baseType: !1363, size: 1216)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !1364)
!1364 = !{!1365, !1366, !1367, !1368, !1369, !1370}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1363, file: !135, line: 2825, baseType: !875, size: 896)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1363, file: !135, line: 2827, baseType: !745, size: 64, offset: 896)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1363, file: !135, line: 2828, baseType: !745, size: 64, offset: 960)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1363, file: !135, line: 2829, baseType: !745, size: 64, offset: 1024)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1363, file: !135, line: 2830, baseType: !745, size: 64, offset: 1088)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1363, file: !135, line: 2831, baseType: !745, size: 64, offset: 1152)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !747, file: !135, line: 3389, baseType: !1372, size: 1024)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !1373)
!1373 = !{!1374, !1375, !1376}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1372, file: !135, line: 2851, baseType: !913, size: 960)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1372, file: !135, line: 2852, baseType: !662, size: 32, offset: 960)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1372, file: !135, line: 2853, baseType: !662, size: 32, offset: 992)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !747, file: !135, line: 3390, baseType: !1378, size: 1024)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !1379)
!1379 = !{!1380, !1381}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1378, file: !135, line: 2858, baseType: !913, size: 960)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1378, file: !135, line: 2859, baseType: !1345, size: 64, offset: 960)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !747, file: !135, line: 3391, baseType: !1383, size: 960)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !1384)
!1384 = !{!1385}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1383, file: !135, line: 2863, baseType: !913, size: 960)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !747, file: !135, line: 3392, baseType: !1387, size: 1472)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !1388)
!1388 = !{!1389}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1387, file: !135, line: 3305, baseType: !1312, size: 1472)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !747, file: !135, line: 3393, baseType: !1391, size: 1792)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !1392)
!1392 = !{!1393, !1394, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1391, file: !135, line: 3249, baseType: !1312, size: 1472)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1391, file: !135, line: 3251, baseType: !1395, size: 64, offset: 1472)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1397, line: 463, size: 1152, elements: !1398)
!1397 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1398 = !{!1399, !1402, !1433, !1434, !1544, !1547, !1548, !1549, !1550, !1551, !1552, !1576, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1396, file: !1397, line: 464, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1397, line: 464, flags: DIFlagFwdDecl)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1396, file: !1397, line: 467, baseType: !1403, size: 64, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !330, line: 374, size: 640, elements: !1405)
!1405 = !{!1406, !1408, !1409, !1422, !1423, !1424, !1425, !1426, !1427, !1429, !1431, !1432}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1404, file: !330, line: 377, baseType: !1407, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !682, line: 111, baseType: !971)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1404, file: !330, line: 378, baseType: !1407, size: 64, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1404, file: !330, line: 381, baseType: !1410, size: 64, offset: 128)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !330, line: 282, baseType: !1412)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !330, line: 282, size: 128, elements: !1413)
!1413 = !{!1414}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1412, file: !330, line: 282, baseType: !1415, size: 128)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !330, line: 281, baseType: !1416)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !330, line: 281, size: 128, elements: !1417)
!1417 = !{!1418, !1419, !1420}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1416, file: !330, line: 281, baseType: !7, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1416, file: !330, line: 281, baseType: !7, size: 32, offset: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1416, file: !330, line: 281, baseType: !1421, size: 64, offset: 64)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 64, elements: !841)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1404, file: !330, line: 384, baseType: !662, size: 32, offset: 192)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1404, file: !330, line: 387, baseType: !662, size: 32, offset: 224)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1404, file: !330, line: 390, baseType: !662, size: 32, offset: 256)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1404, file: !330, line: 394, baseType: !1410, size: 64, offset: 320)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1404, file: !330, line: 396, baseType: !329, size: 32, offset: 384)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1404, file: !330, line: 399, baseType: !1428, size: 64, offset: 416)
!1428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 64, elements: !700)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1404, file: !330, line: 402, baseType: !1430, size: 64, offset: 480)
!1430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !700)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1404, file: !330, line: 406, baseType: !662, size: 32, offset: 544)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1404, file: !330, line: 409, baseType: !662, size: 32, offset: 576)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1396, file: !1397, line: 470, baseType: !998, size: 64, offset: 128)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1396, file: !1397, line: 473, baseType: !1435, size: 64, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1347, line: 39, size: 1152, elements: !1437)
!1437 = !{!1438, !1487, !1500, !1512, !1513, !1524, !1525, !1526, !1527, !1528, !1529, !1530}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1436, file: !1347, line: 41, baseType: !1439, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !649, line: 144, baseType: !1440)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !649, line: 100, size: 896, elements: !1442)
!1442 = !{!1443, !1451, !1456, !1461, !1463, !1464, !1465, !1466, !1467, !1468, !1473, !1475, !1476, !1481, !1486}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1441, file: !649, line: 102, baseType: !1444, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !649, line: 52, baseType: !1445)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!1448, !1449}
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !649, line: 47, baseType: !7)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1441, file: !649, line: 105, baseType: !1452, size: 64, offset: 64)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !649, line: 59, baseType: !1453)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!662, !1449, !1449}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1441, file: !649, line: 108, baseType: !1457, size: 64, offset: 128)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !649, line: 63, baseType: !1458)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{null, !666}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1441, file: !649, line: 111, baseType: !1462, size: 64, offset: 192)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1441, file: !649, line: 114, baseType: !1153, size: 64, offset: 256)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1441, file: !649, line: 117, baseType: !1153, size: 64, offset: 320)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1441, file: !649, line: 120, baseType: !1153, size: 64, offset: 384)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1441, file: !649, line: 124, baseType: !7, size: 32, offset: 448)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1441, file: !649, line: 128, baseType: !7, size: 32, offset: 480)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1441, file: !649, line: 131, baseType: !1469, size: 64, offset: 512)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !649, line: 75, baseType: !1470)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!666, !1153, !1153}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1441, file: !649, line: 132, baseType: !1474, size: 64, offset: 576)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !649, line: 78, baseType: !1458)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1441, file: !649, line: 135, baseType: !666, size: 64, offset: 640)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1441, file: !649, line: 136, baseType: !1477, size: 64, offset: 704)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !649, line: 82, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!666, !666, !1153, !1153}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1441, file: !649, line: 137, baseType: !1482, size: 64, offset: 768)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !649, line: 83, baseType: !1483)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{null, !666, !666}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1441, file: !649, line: 141, baseType: !7, size: 32, offset: 832)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1436, file: !1347, line: 48, baseType: !1488, size: 64, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !584, line: 35, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !584, line: 35, size: 128, elements: !1491)
!1491 = !{!1492}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1490, file: !584, line: 35, baseType: !1493, size: 128)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !584, line: 33, baseType: !1494)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !584, line: 33, size: 128, elements: !1495)
!1495 = !{!1496, !1497, !1498}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1494, file: !584, line: 33, baseType: !7, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1494, file: !584, line: 33, baseType: !7, size: 32, offset: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1494, file: !584, line: 33, baseType: !1499, size: 64, offset: 64)
!1499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 64, elements: !841)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1436, file: !1347, line: 51, baseType: !1501, size: 64, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !1504)
!1504 = !{!1505}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1503, file: !135, line: 183, baseType: !1506, size: 128)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !1507)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !1508)
!1508 = !{!1509, !1510, !1511}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1507, file: !135, line: 182, baseType: !7, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1507, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1507, file: !135, line: 182, baseType: !1061, size: 64, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1436, file: !1347, line: 54, baseType: !745, size: 64, offset: 192)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1436, file: !1347, line: 57, baseType: !1514, size: 128, offset: 256)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1515, line: 31, size: 128, elements: !1516)
!1515 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1516 = !{!1517, !1518, !1519, !1520, !1521, !1522, !1523}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1514, file: !1515, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1514, file: !1515, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1514, file: !1515, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1514, file: !1515, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1514, file: !1515, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1514, file: !1515, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1514, file: !1515, line: 56, baseType: !681, size: 64, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1436, file: !1347, line: 60, baseType: !1514, size: 128, offset: 384)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1436, file: !1347, line: 64, baseType: !676, size: 64, offset: 512)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1436, file: !1347, line: 67, baseType: !745, size: 64, offset: 576)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1436, file: !1347, line: 73, baseType: !1439, size: 64, offset: 640)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1436, file: !1347, line: 77, baseType: !681, size: 64, offset: 704)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1436, file: !1347, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1436, file: !1347, line: 82, baseType: !1531, size: 320, offset: 832)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !1038, line: 62, size: 320, elements: !1532)
!1532 = !{!1533, !1539, !1540, !1541, !1542, !1543}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1531, file: !1038, line: 63, baseType: !1534, size: 64)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !1038, line: 56, size: 128, elements: !1536)
!1536 = !{!1537, !1538}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1535, file: !1038, line: 57, baseType: !1534, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1535, file: !1038, line: 58, baseType: !840, size: 8, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1531, file: !1038, line: 64, baseType: !7, size: 32, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1531, file: !1038, line: 66, baseType: !7, size: 32, offset: 96)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1531, file: !1038, line: 68, baseType: !661, size: 8, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1531, file: !1038, line: 70, baseType: !1036, size: 64, offset: 192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1531, file: !1038, line: 71, baseType: !1044, size: 64, offset: 256)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1396, file: !1397, line: 476, baseType: !1545, size: 64, offset: 256)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1397, line: 476, flags: DIFlagFwdDecl)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1396, file: !1397, line: 479, baseType: !1439, size: 64, offset: 320)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1396, file: !1397, line: 484, baseType: !745, size: 64, offset: 384)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1396, file: !1397, line: 488, baseType: !745, size: 64, offset: 448)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1396, file: !1397, line: 493, baseType: !745, size: 64, offset: 512)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1396, file: !1397, line: 496, baseType: !745, size: 64, offset: 576)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1396, file: !1397, line: 501, baseType: !1553, size: 64, offset: 640)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !341, line: 2355, size: 576, elements: !1555)
!1555 = !{!1556, !1559, !1560, !1561, !1562, !1564, !1565, !1570, !1571, !1572, !1573, !1574, !1575}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1554, file: !341, line: 2356, baseType: !1557, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !341, line: 2356, flags: DIFlagFwdDecl)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1554, file: !341, line: 2357, baseType: !667, size: 64, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1554, file: !341, line: 2358, baseType: !662, size: 32, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1554, file: !341, line: 2359, baseType: !662, size: 32, offset: 160)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1554, file: !341, line: 2360, baseType: !1563, size: 128, offset: 192)
!1563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, size: 128, elements: !725)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1554, file: !341, line: 2364, baseType: !662, size: 32, offset: 320)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1554, file: !341, line: 2367, baseType: !1566, size: 128, offset: 384)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !341, line: 2349, size: 128, elements: !1567)
!1567 = !{!1568, !1569}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1566, file: !341, line: 2351, baseType: !917, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1566, file: !341, line: 2352, baseType: !716, size: 64, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1554, file: !341, line: 2371, baseType: !340, size: 32, offset: 512)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1554, file: !341, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1554, file: !341, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1554, file: !341, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1554, file: !341, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1554, file: !341, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1396, file: !1397, line: 504, baseType: !1577, size: 64, offset: 704)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1397, line: 504, flags: DIFlagFwdDecl)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1396, file: !1397, line: 507, baseType: !1439, size: 64, offset: 768)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1396, file: !1397, line: 510, baseType: !662, size: 32, offset: 832)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1396, file: !1397, line: 513, baseType: !662, size: 32, offset: 864)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1396, file: !1397, line: 516, baseType: !867, size: 32, offset: 896)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1396, file: !1397, line: 519, baseType: !867, size: 32, offset: 928)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1396, file: !1397, line: 522, baseType: !7, size: 32, offset: 960)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1396, file: !1397, line: 523, baseType: !7, size: 32, offset: 992)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1396, file: !1397, line: 528, baseType: !667, size: 64, offset: 1024)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1396, file: !1397, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1396, file: !1397, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1396, file: !1397, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1396, file: !1397, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1396, file: !1397, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1396, file: !1397, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1396, file: !1397, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1396, file: !1397, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1396, file: !1397, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1396, file: !1397, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1396, file: !1397, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1396, file: !1397, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1396, file: !1397, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1396, file: !1397, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1396, file: !1397, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1396, file: !1397, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1391, file: !135, line: 3254, baseType: !745, size: 64, offset: 1536)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1391, file: !135, line: 3257, baseType: !745, size: 64, offset: 1600)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1391, file: !135, line: 3258, baseType: !745, size: 64, offset: 1664)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1391, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1391, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1391, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1391, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1391, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1391, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1391, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1391, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1391, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1391, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1391, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1391, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1391, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1391, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1391, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1391, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1391, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1391, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !747, file: !135, line: 3394, baseType: !1625, size: 1344)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !1626)
!1626 = !{!1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1625, file: !135, line: 2280, baseType: !783, size: 192)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1625, file: !135, line: 2281, baseType: !745, size: 64, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1625, file: !135, line: 2282, baseType: !745, size: 64, offset: 256)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1625, file: !135, line: 2283, baseType: !745, size: 64, offset: 320)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1625, file: !135, line: 2284, baseType: !745, size: 64, offset: 384)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1625, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1625, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1625, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1625, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1625, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1625, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1625, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1625, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1625, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1625, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1625, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1625, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1625, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1625, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1625, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1625, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1625, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1625, file: !135, line: 2306, baseType: !1264, size: 32, offset: 544)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1625, file: !135, line: 2307, baseType: !745, size: 64, offset: 576)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1625, file: !135, line: 2308, baseType: !745, size: 64, offset: 640)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1625, file: !135, line: 2314, baseType: !1653, size: 64, offset: 704)
!1653 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !1654)
!1654 = !{!1655, !1656, !1657}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1653, file: !135, line: 2310, baseType: !662, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1653, file: !135, line: 2311, baseType: !667, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1653, file: !135, line: 2312, baseType: !1658, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1625, file: !135, line: 2315, baseType: !745, size: 64, offset: 768)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1625, file: !135, line: 2316, baseType: !745, size: 64, offset: 832)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1625, file: !135, line: 2317, baseType: !745, size: 64, offset: 896)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1625, file: !135, line: 2318, baseType: !745, size: 64, offset: 960)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1625, file: !135, line: 2319, baseType: !745, size: 64, offset: 1024)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1625, file: !135, line: 2320, baseType: !745, size: 64, offset: 1088)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1625, file: !135, line: 2321, baseType: !745, size: 64, offset: 1152)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1625, file: !135, line: 2322, baseType: !745, size: 64, offset: 1216)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1625, file: !135, line: 2324, baseType: !1669, size: 64, offset: 1280)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !135, line: 2324, flags: DIFlagFwdDecl)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !747, file: !135, line: 3395, baseType: !1672, size: 320)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !1673)
!1673 = !{!1674, !1675, !1676}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1672, file: !135, line: 1470, baseType: !783, size: 192)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1672, file: !135, line: 1471, baseType: !745, size: 64, offset: 192)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1672, file: !135, line: 1472, baseType: !745, size: 64, offset: 256)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !747, file: !135, line: 3396, baseType: !1678, size: 320)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !1679)
!1679 = !{!1680, !1681, !1682}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1678, file: !135, line: 1483, baseType: !783, size: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1678, file: !135, line: 1484, baseType: !662, size: 32, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1678, file: !135, line: 1485, baseType: !1061, size: 64, offset: 256)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !747, file: !135, line: 3397, baseType: !1684, size: 384)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !1685)
!1685 = !{!1686, !1687, !1688, !1689}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1684, file: !135, line: 1830, baseType: !783, size: 192)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1684, file: !135, line: 1831, baseType: !867, size: 32, offset: 192)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1684, file: !135, line: 1832, baseType: !745, size: 64, offset: 256)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1684, file: !135, line: 1835, baseType: !1061, size: 64, offset: 320)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !747, file: !135, line: 3398, baseType: !1691, size: 704)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !1692)
!1692 = !{!1693, !1694, !1695, !1696, !1697, !1702}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1691, file: !135, line: 1899, baseType: !783, size: 192)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1691, file: !135, line: 1902, baseType: !745, size: 64, offset: 192)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1691, file: !135, line: 1905, baseType: !1007, size: 64, offset: 256)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1691, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1691, file: !135, line: 1911, baseType: !1698, size: 64, offset: 384)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1347, line: 117, size: 128, elements: !1700)
!1700 = !{!1701}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1699, file: !1347, line: 120, baseType: !1514, size: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1691, file: !135, line: 1914, baseType: !1049, size: 256, offset: 448)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !747, file: !135, line: 3399, baseType: !1704, size: 704)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !1705)
!1705 = !{!1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1704, file: !135, line: 2009, baseType: !783, size: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1704, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1704, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1704, file: !135, line: 2014, baseType: !867, size: 32, offset: 224)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1704, file: !135, line: 2016, baseType: !745, size: 64, offset: 256)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1704, file: !135, line: 2017, baseType: !1501, size: 64, offset: 320)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1704, file: !135, line: 2019, baseType: !745, size: 64, offset: 384)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1704, file: !135, line: 2020, baseType: !745, size: 64, offset: 448)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1704, file: !135, line: 2021, baseType: !745, size: 64, offset: 512)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1704, file: !135, line: 2022, baseType: !745, size: 64, offset: 576)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1704, file: !135, line: 2023, baseType: !745, size: 64, offset: 640)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !747, file: !135, line: 3400, baseType: !1718, size: 832)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !1719)
!1719 = !{!1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1718, file: !135, line: 2431, baseType: !783, size: 192)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1718, file: !135, line: 2433, baseType: !745, size: 64, offset: 192)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1718, file: !135, line: 2434, baseType: !745, size: 64, offset: 256)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1718, file: !135, line: 2435, baseType: !745, size: 64, offset: 320)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1718, file: !135, line: 2436, baseType: !745, size: 64, offset: 384)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1718, file: !135, line: 2437, baseType: !1501, size: 64, offset: 448)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1718, file: !135, line: 2438, baseType: !745, size: 64, offset: 512)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1718, file: !135, line: 2440, baseType: !745, size: 64, offset: 576)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1718, file: !135, line: 2441, baseType: !745, size: 64, offset: 640)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1718, file: !135, line: 2443, baseType: !1730, size: 128, offset: 704)
!1730 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !1731)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !1732)
!1732 = !{!1733}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1731, file: !135, line: 182, baseType: !1506, size: 128)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !747, file: !135, line: 3401, baseType: !1735, size: 320)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !1736)
!1736 = !{!1737, !1738, !1745}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1735, file: !135, line: 3329, baseType: !783, size: 192)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1735, file: !135, line: 3330, baseType: !1739, size: 64, offset: 192)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !1741)
!1741 = !{!1742, !1743, !1744}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1740, file: !135, line: 3322, baseType: !1739, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1740, file: !135, line: 3323, baseType: !1739, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1740, file: !135, line: 3324, baseType: !745, size: 64, offset: 128)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1735, file: !135, line: 3331, baseType: !1739, size: 64, offset: 256)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !747, file: !135, line: 3402, baseType: !1747, size: 256)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !1748)
!1748 = !{!1749, !1750}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1747, file: !135, line: 1541, baseType: !783, size: 192)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1747, file: !135, line: 1542, baseType: !1751, size: 64, offset: 192)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !1753)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !1754)
!1754 = !{!1755}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1753, file: !135, line: 1538, baseType: !1756, size: 192)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !1757)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !1758)
!1758 = !{!1759, !1760, !1761}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1757, file: !135, line: 1537, baseType: !7, size: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1757, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1757, file: !135, line: 1537, baseType: !1762, size: 128, offset: 64)
!1762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1763, size: 128, elements: !841)
!1763 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !1765)
!1765 = !{!1766, !1767}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1764, file: !135, line: 1533, baseType: !745, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1764, file: !135, line: 1534, baseType: !745, size: 64, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !747, file: !135, line: 3403, baseType: !1769, size: 512)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !1770)
!1770 = !{!1771, !1772, !1773, !1774, !1780, !1781, !1782}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1769, file: !135, line: 1939, baseType: !783, size: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1769, file: !135, line: 1940, baseType: !867, size: 32, offset: 192)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1769, file: !135, line: 1941, baseType: !345, size: 32, offset: 224)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1769, file: !135, line: 1946, baseType: !1775, size: 32, offset: 256)
!1775 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !1776)
!1776 = !{!1777, !1778, !1779}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1775, file: !135, line: 1943, baseType: !363, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1775, file: !135, line: 1944, baseType: !370, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1775, file: !135, line: 1945, baseType: !134, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1769, file: !135, line: 1950, baseType: !997, size: 64, offset: 320)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1769, file: !135, line: 1951, baseType: !997, size: 64, offset: 384)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1769, file: !135, line: 1953, baseType: !1061, size: 64, offset: 448)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !747, file: !135, line: 3404, baseType: !1784, size: 1664)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !1785)
!1785 = !{!1786, !1787}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1784, file: !135, line: 3338, baseType: !783, size: 192)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1784, file: !135, line: 3341, baseType: !1788, size: 1472, offset: 192)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1789, line: 410, size: 1472, elements: !1790)
!1789 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1790 = !{!1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1788, file: !1789, line: 412, baseType: !662, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1788, file: !1789, line: 413, baseType: !662, size: 32, offset: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1788, file: !1789, line: 414, baseType: !662, size: 32, offset: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1788, file: !1789, line: 415, baseType: !662, size: 32, offset: 96)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1788, file: !1789, line: 416, baseType: !662, size: 32, offset: 128)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1788, file: !1789, line: 417, baseType: !662, size: 32, offset: 160)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1788, file: !1789, line: 418, baseType: !661, size: 8, offset: 192)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1788, file: !1789, line: 419, baseType: !661, size: 8, offset: 200)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1788, file: !1789, line: 420, baseType: !1800, size: 8, offset: 208)
!1800 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1788, file: !1789, line: 421, baseType: !1800, size: 8, offset: 216)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1788, file: !1789, line: 422, baseType: !1800, size: 8, offset: 224)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1788, file: !1789, line: 423, baseType: !1800, size: 8, offset: 232)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1788, file: !1789, line: 424, baseType: !1800, size: 8, offset: 240)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1788, file: !1789, line: 425, baseType: !1800, size: 8, offset: 248)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1788, file: !1789, line: 426, baseType: !1800, size: 8, offset: 256)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1788, file: !1789, line: 427, baseType: !1800, size: 8, offset: 264)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1788, file: !1789, line: 428, baseType: !1800, size: 8, offset: 272)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1788, file: !1789, line: 429, baseType: !1800, size: 8, offset: 280)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1788, file: !1789, line: 430, baseType: !1800, size: 8, offset: 288)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1788, file: !1789, line: 431, baseType: !1800, size: 8, offset: 296)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1788, file: !1789, line: 432, baseType: !1800, size: 8, offset: 304)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1788, file: !1789, line: 433, baseType: !1800, size: 8, offset: 312)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1788, file: !1789, line: 434, baseType: !1800, size: 8, offset: 320)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1788, file: !1789, line: 435, baseType: !1800, size: 8, offset: 328)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1788, file: !1789, line: 436, baseType: !1800, size: 8, offset: 336)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1788, file: !1789, line: 437, baseType: !1800, size: 8, offset: 344)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1788, file: !1789, line: 438, baseType: !1800, size: 8, offset: 352)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1788, file: !1789, line: 439, baseType: !1800, size: 8, offset: 360)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1788, file: !1789, line: 440, baseType: !1800, size: 8, offset: 368)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1788, file: !1789, line: 441, baseType: !1800, size: 8, offset: 376)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1788, file: !1789, line: 442, baseType: !1800, size: 8, offset: 384)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1788, file: !1789, line: 443, baseType: !1800, size: 8, offset: 392)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1788, file: !1789, line: 444, baseType: !1800, size: 8, offset: 400)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1788, file: !1789, line: 445, baseType: !1800, size: 8, offset: 408)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1788, file: !1789, line: 446, baseType: !1800, size: 8, offset: 416)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1788, file: !1789, line: 447, baseType: !1800, size: 8, offset: 424)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1788, file: !1789, line: 448, baseType: !1800, size: 8, offset: 432)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1788, file: !1789, line: 449, baseType: !1800, size: 8, offset: 440)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1788, file: !1789, line: 450, baseType: !1800, size: 8, offset: 448)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1788, file: !1789, line: 451, baseType: !1800, size: 8, offset: 456)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1788, file: !1789, line: 452, baseType: !1800, size: 8, offset: 464)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1788, file: !1789, line: 453, baseType: !1800, size: 8, offset: 472)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1788, file: !1789, line: 454, baseType: !1800, size: 8, offset: 480)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1788, file: !1789, line: 455, baseType: !1800, size: 8, offset: 488)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1788, file: !1789, line: 456, baseType: !1800, size: 8, offset: 496)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1788, file: !1789, line: 457, baseType: !1800, size: 8, offset: 504)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1788, file: !1789, line: 458, baseType: !1800, size: 8, offset: 512)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1788, file: !1789, line: 459, baseType: !1800, size: 8, offset: 520)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1788, file: !1789, line: 460, baseType: !1800, size: 8, offset: 528)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1788, file: !1789, line: 461, baseType: !1800, size: 8, offset: 536)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1788, file: !1789, line: 462, baseType: !1800, size: 8, offset: 544)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1788, file: !1789, line: 463, baseType: !1800, size: 8, offset: 552)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1788, file: !1789, line: 464, baseType: !1800, size: 8, offset: 560)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1788, file: !1789, line: 465, baseType: !1800, size: 8, offset: 568)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1788, file: !1789, line: 466, baseType: !1800, size: 8, offset: 576)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1788, file: !1789, line: 467, baseType: !1800, size: 8, offset: 584)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1788, file: !1789, line: 468, baseType: !1800, size: 8, offset: 592)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1788, file: !1789, line: 469, baseType: !1800, size: 8, offset: 600)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1788, file: !1789, line: 470, baseType: !1800, size: 8, offset: 608)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1788, file: !1789, line: 471, baseType: !1800, size: 8, offset: 616)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1788, file: !1789, line: 472, baseType: !1800, size: 8, offset: 624)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1788, file: !1789, line: 473, baseType: !1800, size: 8, offset: 632)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1788, file: !1789, line: 474, baseType: !1800, size: 8, offset: 640)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1788, file: !1789, line: 475, baseType: !1800, size: 8, offset: 648)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1788, file: !1789, line: 476, baseType: !1800, size: 8, offset: 656)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1788, file: !1789, line: 477, baseType: !1800, size: 8, offset: 664)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1788, file: !1789, line: 478, baseType: !1800, size: 8, offset: 672)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1788, file: !1789, line: 479, baseType: !1800, size: 8, offset: 680)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1788, file: !1789, line: 480, baseType: !1800, size: 8, offset: 688)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1788, file: !1789, line: 481, baseType: !1800, size: 8, offset: 696)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1788, file: !1789, line: 482, baseType: !1800, size: 8, offset: 704)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1788, file: !1789, line: 483, baseType: !1800, size: 8, offset: 712)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1788, file: !1789, line: 484, baseType: !1800, size: 8, offset: 720)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1788, file: !1789, line: 485, baseType: !1800, size: 8, offset: 728)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1788, file: !1789, line: 486, baseType: !1800, size: 8, offset: 736)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1788, file: !1789, line: 487, baseType: !1800, size: 8, offset: 744)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1788, file: !1789, line: 488, baseType: !1800, size: 8, offset: 752)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1788, file: !1789, line: 489, baseType: !1800, size: 8, offset: 760)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1788, file: !1789, line: 490, baseType: !1800, size: 8, offset: 768)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1788, file: !1789, line: 491, baseType: !1800, size: 8, offset: 776)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1788, file: !1789, line: 492, baseType: !1800, size: 8, offset: 784)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1788, file: !1789, line: 493, baseType: !1800, size: 8, offset: 792)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1788, file: !1789, line: 494, baseType: !1800, size: 8, offset: 800)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1788, file: !1789, line: 495, baseType: !1800, size: 8, offset: 808)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1788, file: !1789, line: 496, baseType: !1800, size: 8, offset: 816)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1788, file: !1789, line: 497, baseType: !1800, size: 8, offset: 824)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1788, file: !1789, line: 498, baseType: !1800, size: 8, offset: 832)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1788, file: !1789, line: 499, baseType: !1800, size: 8, offset: 840)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1788, file: !1789, line: 500, baseType: !1800, size: 8, offset: 848)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1788, file: !1789, line: 501, baseType: !1800, size: 8, offset: 856)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1788, file: !1789, line: 502, baseType: !1800, size: 8, offset: 864)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1788, file: !1789, line: 503, baseType: !1800, size: 8, offset: 872)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1788, file: !1789, line: 504, baseType: !1800, size: 8, offset: 880)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1788, file: !1789, line: 505, baseType: !1800, size: 8, offset: 888)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1788, file: !1789, line: 506, baseType: !1800, size: 8, offset: 896)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1788, file: !1789, line: 507, baseType: !1800, size: 8, offset: 904)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1788, file: !1789, line: 508, baseType: !1800, size: 8, offset: 912)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1788, file: !1789, line: 509, baseType: !1800, size: 8, offset: 920)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1788, file: !1789, line: 510, baseType: !1800, size: 8, offset: 928)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1788, file: !1789, line: 511, baseType: !1800, size: 8, offset: 936)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1788, file: !1789, line: 512, baseType: !1800, size: 8, offset: 944)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1788, file: !1789, line: 513, baseType: !1800, size: 8, offset: 952)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1788, file: !1789, line: 514, baseType: !1800, size: 8, offset: 960)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1788, file: !1789, line: 515, baseType: !1800, size: 8, offset: 968)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1788, file: !1789, line: 516, baseType: !1800, size: 8, offset: 976)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1788, file: !1789, line: 517, baseType: !1800, size: 8, offset: 984)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1788, file: !1789, line: 518, baseType: !1800, size: 8, offset: 992)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1788, file: !1789, line: 519, baseType: !1800, size: 8, offset: 1000)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1788, file: !1789, line: 520, baseType: !1800, size: 8, offset: 1008)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1788, file: !1789, line: 521, baseType: !1800, size: 8, offset: 1016)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1788, file: !1789, line: 522, baseType: !1800, size: 8, offset: 1024)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1788, file: !1789, line: 523, baseType: !1800, size: 8, offset: 1032)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1788, file: !1789, line: 524, baseType: !1800, size: 8, offset: 1040)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1788, file: !1789, line: 525, baseType: !1800, size: 8, offset: 1048)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1788, file: !1789, line: 526, baseType: !1800, size: 8, offset: 1056)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1788, file: !1789, line: 527, baseType: !1800, size: 8, offset: 1064)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1788, file: !1789, line: 528, baseType: !1800, size: 8, offset: 1072)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1788, file: !1789, line: 529, baseType: !1800, size: 8, offset: 1080)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1788, file: !1789, line: 530, baseType: !1800, size: 8, offset: 1088)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1788, file: !1789, line: 531, baseType: !1800, size: 8, offset: 1096)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1788, file: !1789, line: 532, baseType: !1800, size: 8, offset: 1104)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1788, file: !1789, line: 533, baseType: !1800, size: 8, offset: 1112)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1788, file: !1789, line: 534, baseType: !1800, size: 8, offset: 1120)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1788, file: !1789, line: 535, baseType: !1800, size: 8, offset: 1128)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1788, file: !1789, line: 536, baseType: !1800, size: 8, offset: 1136)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1788, file: !1789, line: 537, baseType: !1800, size: 8, offset: 1144)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1788, file: !1789, line: 538, baseType: !1800, size: 8, offset: 1152)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1788, file: !1789, line: 539, baseType: !1800, size: 8, offset: 1160)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1788, file: !1789, line: 540, baseType: !1800, size: 8, offset: 1168)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1788, file: !1789, line: 541, baseType: !1800, size: 8, offset: 1176)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1788, file: !1789, line: 542, baseType: !1800, size: 8, offset: 1184)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1788, file: !1789, line: 543, baseType: !1800, size: 8, offset: 1192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1788, file: !1789, line: 544, baseType: !1800, size: 8, offset: 1200)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1788, file: !1789, line: 545, baseType: !1800, size: 8, offset: 1208)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1788, file: !1789, line: 546, baseType: !1800, size: 8, offset: 1216)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1788, file: !1789, line: 547, baseType: !1800, size: 8, offset: 1224)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1788, file: !1789, line: 548, baseType: !1800, size: 8, offset: 1232)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1788, file: !1789, line: 549, baseType: !1800, size: 8, offset: 1240)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1788, file: !1789, line: 550, baseType: !1800, size: 8, offset: 1248)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1788, file: !1789, line: 551, baseType: !1800, size: 8, offset: 1256)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1788, file: !1789, line: 552, baseType: !1800, size: 8, offset: 1264)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1788, file: !1789, line: 553, baseType: !1800, size: 8, offset: 1272)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1788, file: !1789, line: 554, baseType: !1800, size: 8, offset: 1280)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1788, file: !1789, line: 555, baseType: !1800, size: 8, offset: 1288)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1788, file: !1789, line: 556, baseType: !1800, size: 8, offset: 1296)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1788, file: !1789, line: 557, baseType: !1800, size: 8, offset: 1304)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1788, file: !1789, line: 558, baseType: !1800, size: 8, offset: 1312)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1788, file: !1789, line: 559, baseType: !1800, size: 8, offset: 1320)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1788, file: !1789, line: 560, baseType: !1800, size: 8, offset: 1328)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1788, file: !1789, line: 561, baseType: !1800, size: 8, offset: 1336)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1788, file: !1789, line: 562, baseType: !1800, size: 8, offset: 1344)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1788, file: !1789, line: 563, baseType: !1800, size: 8, offset: 1352)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1788, file: !1789, line: 564, baseType: !1800, size: 8, offset: 1360)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1788, file: !1789, line: 565, baseType: !1800, size: 8, offset: 1368)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1788, file: !1789, line: 566, baseType: !1800, size: 8, offset: 1376)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1788, file: !1789, line: 567, baseType: !1800, size: 8, offset: 1384)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1788, file: !1789, line: 568, baseType: !1800, size: 8, offset: 1392)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1788, file: !1789, line: 569, baseType: !1800, size: 8, offset: 1400)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1788, file: !1789, line: 570, baseType: !1800, size: 8, offset: 1408)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1788, file: !1789, line: 571, baseType: !1800, size: 8, offset: 1416)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1788, file: !1789, line: 572, baseType: !1800, size: 8, offset: 1424)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1788, file: !1789, line: 573, baseType: !1800, size: 8, offset: 1432)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1788, file: !1789, line: 574, baseType: !1800, size: 8, offset: 1440)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !747, file: !135, line: 3405, baseType: !1956, size: 384)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !1957)
!1957 = !{!1958, !1959}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1956, file: !135, line: 3353, baseType: !783, size: 192)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1956, file: !135, line: 3356, baseType: !1960, size: 192, offset: 192)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1789, line: 578, size: 192, elements: !1961)
!1961 = !{!1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1960, file: !1789, line: 580, baseType: !662, size: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1960, file: !1789, line: 581, baseType: !662, size: 32, offset: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1960, file: !1789, line: 582, baseType: !662, size: 32, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1960, file: !1789, line: 583, baseType: !662, size: 32, offset: 96)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1960, file: !1789, line: 584, baseType: !661, size: 8, offset: 128)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1960, file: !1789, line: 585, baseType: !661, size: 8, offset: 136)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1960, file: !1789, line: 586, baseType: !661, size: 8, offset: 144)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1960, file: !1789, line: 587, baseType: !661, size: 8, offset: 152)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1960, file: !1789, line: 588, baseType: !661, size: 8, offset: 160)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1960, file: !1789, line: 589, baseType: !661, size: 8, offset: 168)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1960, file: !1789, line: 590, baseType: !661, size: 8, offset: 176)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "new_local_var_chain", scope: !670, file: !3, line: 92, baseType: !745, size: 64, offset: 448)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "debug_var_chain", scope: !670, file: !3, line: 93, baseType: !745, size: 64, offset: 512)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "frame_type", scope: !670, file: !3, line: 94, baseType: !745, size: 64, offset: 576)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "frame_decl", scope: !670, file: !3, line: 95, baseType: !745, size: 64, offset: 640)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "chain_field", scope: !670, file: !3, line: 96, baseType: !745, size: 64, offset: 704)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "chain_decl", scope: !670, file: !3, line: 97, baseType: !745, size: 64, offset: 768)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "nl_goto_field", scope: !670, file: !3, line: 98, baseType: !745, size: 64, offset: 832)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "any_parm_remapped", scope: !670, file: !3, line: 100, baseType: !661, size: 8, offset: 896)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "any_tramp_created", scope: !670, file: !3, line: 101, baseType: !661, size: 8, offset: 904)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_added", scope: !670, file: !3, line: 102, baseType: !665, size: 8, offset: 912)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "walk_stmt_info", file: !584, line: 4652, size: 448, elements: !1987)
!1987 = !{!1988, !1995, !1996, !1999, !2000, !2001, !2002, !2003}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "gsi", scope: !1986, file: !584, line: 4655, baseType: !1989, size: 192)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !584, line: 265, baseType: !1990)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !584, line: 254, size: 192, elements: !1991)
!1991 = !{!1992, !1993, !1994}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1990, file: !584, line: 257, baseType: !1002, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1990, file: !584, line: 263, baseType: !997, size: 64, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1990, file: !584, line: 264, baseType: !1407, size: 64, offset: 128)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1986, file: !584, line: 4659, baseType: !666, size: 64, offset: 192)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "pset", scope: !1986, file: !584, line: 4664, baseType: !1997, size: 64, offset: 256)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_set_t", file: !135, line: 5199, flags: DIFlagFwdDecl)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "val_only", scope: !1986, file: !584, line: 4678, baseType: !661, size: 8, offset: 320)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "is_lhs", scope: !1986, file: !584, line: 4681, baseType: !661, size: 8, offset: 328)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1986, file: !584, line: 4685, baseType: !661, size: 8, offset: 336)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "want_locations", scope: !1986, file: !584, line: 4688, baseType: !661, size: 8, offset: 344)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "callback_result", scope: !1986, file: !584, line: 4694, baseType: !745, size: 64, offset: 384)
!2004 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nesting_copy_body_data", file: !3, line: 2115, size: 1280, elements: !2007)
!2007 = !{!2008, !2275}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2006, file: !3, line: 2117, baseType: !2009, size: 1216)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "copy_body_data", file: !654, line: 129, baseType: !2010)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "copy_body_data", file: !654, line: 42, size: 1216, elements: !2011)
!2011 = !{!2012, !2013, !2014, !2243, !2244, !2245, !2246, !2247, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2266, !2267, !2268, !2274}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "src_fn", scope: !2010, file: !654, line: 46, baseType: !745, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "dst_fn", scope: !2010, file: !654, line: 50, baseType: !745, size: 64, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "src_node", scope: !2010, file: !654, line: 53, baseType: !2015, size: 64, offset: 128)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !378, line: 181, size: 2496, elements: !2017)
!2017 = !{!2018, !2019, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2158, !2180, !2190, !2194, !2220, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2016, file: !378, line: 182, baseType: !745, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !2016, file: !378, line: 183, baseType: !2020, size: 64, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !378, line: 314, size: 768, elements: !2022)
!2022 = !{!2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2034, !2035, !2036, !2037, !2038, !2039, !2040}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2021, file: !378, line: 316, baseType: !1219, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2021, file: !378, line: 317, baseType: !2015, size: 64, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !2021, file: !378, line: 318, baseType: !2015, size: 64, offset: 128)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !2021, file: !378, line: 319, baseType: !2020, size: 64, offset: 192)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !2021, file: !378, line: 320, baseType: !2020, size: 64, offset: 256)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !2021, file: !378, line: 321, baseType: !2020, size: 64, offset: 320)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !2021, file: !378, line: 322, baseType: !2020, size: 64, offset: 384)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !2021, file: !378, line: 323, baseType: !1007, size: 64, offset: 448)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2021, file: !378, line: 324, baseType: !666, size: 64, offset: 512)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !2021, file: !378, line: 327, baseType: !2033, size: 32, offset: 576)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !378, line: 312, baseType: !377)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !2021, file: !378, line: 330, baseType: !7, size: 32, offset: 608)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2021, file: !378, line: 334, baseType: !662, size: 32, offset: 640)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2021, file: !378, line: 336, baseType: !662, size: 32, offset: 672)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !2021, file: !378, line: 338, baseType: !2004, size: 16, offset: 704)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !2021, file: !378, line: 340, baseType: !7, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !2021, file: !378, line: 342, baseType: !7, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !2021, file: !378, line: 344, baseType: !7, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !2016, file: !378, line: 184, baseType: !2020, size: 64, offset: 128)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2016, file: !378, line: 185, baseType: !2015, size: 64, offset: 192)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !2016, file: !378, line: 186, baseType: !2015, size: 64, offset: 256)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !2016, file: !378, line: 188, baseType: !2015, size: 64, offset: 320)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2016, file: !378, line: 190, baseType: !2015, size: 64, offset: 384)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !2016, file: !378, line: 192, baseType: !2015, size: 64, offset: 448)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !2016, file: !378, line: 194, baseType: !2015, size: 64, offset: 512)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !2016, file: !378, line: 196, baseType: !2015, size: 64, offset: 576)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !2016, file: !378, line: 197, baseType: !2015, size: 64, offset: 640)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !2016, file: !378, line: 198, baseType: !2015, size: 64, offset: 704)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !2016, file: !378, line: 199, baseType: !2015, size: 64, offset: 768)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !2016, file: !378, line: 202, baseType: !2015, size: 64, offset: 832)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !2016, file: !378, line: 204, baseType: !2015, size: 64, offset: 896)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !2016, file: !378, line: 207, baseType: !1439, size: 64, offset: 960)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2016, file: !378, line: 209, baseType: !666, size: 64, offset: 1024)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !2016, file: !378, line: 214, baseType: !2057, size: 64, offset: 1088)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !1397, line: 177, baseType: !2059)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !1397, line: 177, size: 128, elements: !2060)
!2060 = !{!2061}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2059, file: !1397, line: 177, baseType: !2062, size: 128)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !1397, line: 176, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !1397, line: 176, size: 128, elements: !2064)
!2064 = !{!2065, !2066, !2067}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2063, file: !1397, line: 176, baseType: !7, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2063, file: !1397, line: 176, baseType: !7, size: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2063, file: !1397, line: 176, baseType: !2068, size: 64, offset: 64)
!2068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2069, size: 64, elements: !841)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !1397, line: 174, baseType: !2070)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !401, line: 173, size: 1152, elements: !2072)
!2072 = !{!2073, !2097, !2101, !2124, !2125, !2129, !2134, !2135, !2139}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2071, file: !401, line: 175, baseType: !2074, size: 640)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !401, line: 114, size: 640, elements: !2075)
!2075 = !{!2076, !2077, !2078, !2082, !2086, !2088, !2089, !2090, !2092, !2093, !2094, !2095, !2096}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2074, file: !401, line: 117, baseType: !400, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2074, file: !401, line: 121, baseType: !667, size: 64, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2074, file: !401, line: 125, baseType: !2079, size: 64, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{!661}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2074, file: !401, line: 130, baseType: !2083, size: 64, offset: 192)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{!7}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2074, file: !401, line: 133, baseType: !2087, size: 64, offset: 256)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2074, file: !401, line: 136, baseType: !2087, size: 64, offset: 320)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2074, file: !401, line: 139, baseType: !662, size: 32, offset: 384)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2074, file: !401, line: 143, baseType: !2091, size: 32, offset: 416)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !408, line: 80, baseType: !407)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2074, file: !401, line: 146, baseType: !7, size: 32, offset: 448)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2074, file: !401, line: 147, baseType: !7, size: 32, offset: 480)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2074, file: !401, line: 148, baseType: !7, size: 32, offset: 512)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2074, file: !401, line: 151, baseType: !7, size: 32, offset: 544)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2074, file: !401, line: 152, baseType: !7, size: 32, offset: 576)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !2071, file: !401, line: 179, baseType: !2098, size: 64, offset: 640)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{null}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !2071, file: !401, line: 182, baseType: !2102, size: 64, offset: 704)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DISubroutineType(types: !2104)
!2104 = !{null, !2105}
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !378, line: 276, size: 192, elements: !2107)
!2107 = !{!2108, !2109, !2123}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !2106, file: !378, line: 278, baseType: !1439, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2106, file: !378, line: 279, baseType: !2110, size: 64, offset: 64)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !378, line: 272, baseType: !2112)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !378, line: 272, size: 128, elements: !2113)
!2113 = !{!2114}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2112, file: !378, line: 272, baseType: !2115, size: 128)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !378, line: 270, baseType: !2116)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !378, line: 270, size: 128, elements: !2117)
!2117 = !{!2118, !2119, !2120}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2116, file: !378, line: 270, baseType: !7, size: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2116, file: !378, line: 270, baseType: !7, size: 32, offset: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2116, file: !378, line: 270, baseType: !2121, size: 64, offset: 64)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2122, size: 64, elements: !841)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !378, line: 268, baseType: !2015)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2106, file: !378, line: 280, baseType: !666, size: 64, offset: 128)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !2071, file: !401, line: 187, baseType: !2098, size: 64, offset: 768)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !2071, file: !401, line: 188, baseType: !2126, size: 64, offset: 832)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{null, !2015}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !2071, file: !401, line: 191, baseType: !2130, size: 64, offset: 896)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{null, !2015, !2133}
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !2071, file: !401, line: 195, baseType: !7, size: 32, offset: 960)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !2071, file: !401, line: 196, baseType: !2136, size: 64, offset: 1024)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!7, !2015}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !2071, file: !401, line: 197, baseType: !2140, size: 64, offset: 1088)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{null, !2143}
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !378, line: 358, size: 320, elements: !2145)
!2145 = !{!2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2144, file: !378, line: 359, baseType: !745, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2144, file: !378, line: 361, baseType: !2143, size: 64, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !2144, file: !378, line: 363, baseType: !2143, size: 64, offset: 128)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !2144, file: !378, line: 366, baseType: !2143, size: 64, offset: 192)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2144, file: !378, line: 368, baseType: !662, size: 32, offset: 256)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !2144, file: !378, line: 372, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !2144, file: !378, line: 375, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !2144, file: !378, line: 378, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !2144, file: !378, line: 380, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2144, file: !378, line: 382, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !2144, file: !378, line: 384, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2144, file: !378, line: 387, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !2016, file: !378, line: 216, baseType: !2159, size: 320, offset: 1152)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !378, line: 88, size: 320, elements: !2160)
!2160 = !{!2161, !2164, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !2159, file: !378, line: 90, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !378, line: 51, flags: DIFlagFwdDecl)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !2159, file: !378, line: 92, baseType: !2165, size: 192, offset: 64)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !378, line: 57, size: 192, elements: !2166)
!2166 = !{!2167, !2168, !2169, !2170, !2171}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !2165, file: !378, line: 60, baseType: !716, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !2165, file: !378, line: 63, baseType: !662, size: 32, offset: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !2165, file: !378, line: 65, baseType: !662, size: 32, offset: 96)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !2165, file: !378, line: 67, baseType: !662, size: 32, offset: 128)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !2165, file: !378, line: 69, baseType: !662, size: 32, offset: 160)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !2159, file: !378, line: 96, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !2159, file: !378, line: 99, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !2159, file: !378, line: 102, baseType: !7, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !2159, file: !378, line: 105, baseType: !7, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2159, file: !378, line: 108, baseType: !7, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !2159, file: !378, line: 112, baseType: !7, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !2159, file: !378, line: 116, baseType: !7, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !2159, file: !378, line: 120, baseType: !7, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !2016, file: !378, line: 217, baseType: !2181, size: 320, offset: 1472)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !378, line: 126, size: 320, elements: !2182)
!2182 = !{!2183, !2184, !2185, !2186, !2187, !2188, !2189}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !2181, file: !378, line: 128, baseType: !716, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !2181, file: !378, line: 130, baseType: !716, size: 64, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !2181, file: !378, line: 134, baseType: !2015, size: 64, offset: 128)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2181, file: !378, line: 137, baseType: !662, size: 32, offset: 192)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2181, file: !378, line: 138, baseType: !662, size: 32, offset: 224)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !2181, file: !378, line: 141, baseType: !662, size: 32, offset: 256)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !2181, file: !378, line: 144, baseType: !661, size: 8, offset: 288)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2016, file: !378, line: 218, baseType: !2191, size: 32, offset: 1792)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !378, line: 150, size: 32, elements: !2192)
!2192 = !{!2193}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !2191, file: !378, line: 151, baseType: !7, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2016, file: !378, line: 219, baseType: !2195, size: 192, offset: 1856)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !378, line: 171, size: 192, elements: !2196)
!2196 = !{!2197, !2218, !2219}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !2195, file: !378, line: 173, baseType: !2198, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !378, line: 169, baseType: !2200)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !378, line: 169, size: 128, elements: !2201)
!2201 = !{!2202}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2200, file: !378, line: 169, baseType: !2203, size: 128)
!2203 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !378, line: 168, baseType: !2204)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !378, line: 168, size: 128, elements: !2205)
!2205 = !{!2206, !2207, !2208}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2204, file: !378, line: 168, baseType: !7, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2204, file: !378, line: 168, baseType: !7, size: 32, offset: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2204, file: !378, line: 168, baseType: !2209, size: 64, offset: 64)
!2209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2210, size: 64, elements: !841)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !378, line: 167, baseType: !2211)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !378, line: 156, size: 192, elements: !2213)
!2213 = !{!2214, !2215, !2216, !2217}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !2212, file: !378, line: 159, baseType: !745, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !2212, file: !378, line: 161, baseType: !745, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !2212, file: !378, line: 163, baseType: !661, size: 8, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !2212, file: !378, line: 165, baseType: !661, size: 8, offset: 136)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !2195, file: !378, line: 174, baseType: !681, size: 64, offset: 64)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !2195, file: !378, line: 175, baseType: !681, size: 64, offset: 128)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !2016, file: !378, line: 220, baseType: !2221, size: 256, offset: 2048)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !378, line: 74, size: 256, elements: !2222)
!2222 = !{!2223, !2224, !2225, !2226, !2227, !2228}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !2221, file: !378, line: 76, baseType: !716, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !2221, file: !378, line: 77, baseType: !716, size: 64, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2221, file: !378, line: 78, baseType: !745, size: 64, offset: 128)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !2221, file: !378, line: 79, baseType: !661, size: 8, offset: 192)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !2221, file: !378, line: 80, baseType: !661, size: 8, offset: 200)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !2221, file: !378, line: 82, baseType: !661, size: 8, offset: 208)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2016, file: !378, line: 223, baseType: !1219, size: 64, offset: 2304)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2016, file: !378, line: 225, baseType: !662, size: 32, offset: 2368)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2016, file: !378, line: 227, baseType: !662, size: 32, offset: 2400)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2016, file: !378, line: 231, baseType: !662, size: 32, offset: 2432)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !2016, file: !378, line: 238, baseType: !7, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !2016, file: !378, line: 241, baseType: !7, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !2016, file: !378, line: 244, baseType: !7, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !2016, file: !378, line: 251, baseType: !7, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !2016, file: !378, line: 253, baseType: !7, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !2016, file: !378, line: 256, baseType: !7, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !2016, file: !378, line: 258, baseType: !7, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2016, file: !378, line: 260, baseType: !7, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !2016, file: !378, line: 262, baseType: !7, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !2016, file: !378, line: 265, baseType: !7, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "dst_node", scope: !2010, file: !654, line: 56, baseType: !2015, size: 64, offset: 192)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "src_cfun", scope: !2010, file: !654, line: 61, baseType: !1395, size: 64, offset: 256)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "retvar", scope: !2010, file: !654, line: 64, baseType: !745, size: 64, offset: 320)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "decl_map", scope: !2010, file: !654, line: 68, baseType: !676, size: 64, offset: 384)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "copy_decl", scope: !2010, file: !654, line: 71, baseType: !2248, size: 64, offset: 448)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2249 = !DISubroutineType(types: !2250)
!2250 = !{!745, !745, !2251}
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2010, file: !654, line: 74, baseType: !745, size: 64, offset: 512)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_call", scope: !2010, file: !654, line: 78, baseType: !1007, size: 64, offset: 576)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "eh_lp_nr", scope: !2010, file: !654, line: 81, baseType: !662, size: 32, offset: 640)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "eh_map", scope: !2010, file: !654, line: 85, baseType: !676, size: 64, offset: 704)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "transform_call_graph_edges", scope: !2010, file: !654, line: 92, baseType: !653, size: 32, offset: 768)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "transform_new_cfg", scope: !2010, file: !654, line: 96, baseType: !661, size: 8, offset: 800)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "transform_return_to_modify", scope: !2010, file: !654, line: 101, baseType: !661, size: 8, offset: 808)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "regimplify", scope: !2010, file: !654, line: 104, baseType: !661, size: 8, offset: 816)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "do_not_unshare", scope: !2010, file: !654, line: 107, baseType: !661, size: 8, offset: 824)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "remapping_type_depth", scope: !2010, file: !654, line: 110, baseType: !662, size: 32, offset: 832)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "transform_lang_insert_block", scope: !2010, file: !654, line: 113, baseType: !2263, size: 64, offset: 896)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{null, !745}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "statements_to_fold", scope: !2010, file: !654, line: 116, baseType: !1997, size: 64, offset: 960)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "entry_bb", scope: !2010, file: !654, line: 119, baseType: !971, size: 64, offset: 1024)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "debug_stmts", scope: !2010, file: !654, line: 122, baseType: !2269, size: 64, offset: 1088)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_heap", file: !584, line: 34, baseType: !2271)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_heap", file: !584, line: 34, size: 128, elements: !2272)
!2272 = !{!2273}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2271, file: !584, line: 34, baseType: !1493, size: 128)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "debug_map", scope: !2010, file: !654, line: 128, baseType: !676, size: 64, offset: 1152)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2006, file: !3, line: 2118, baseType: !669, size: 64, offset: 1216)
!2276 = !{!2277, !0, !2291}
!2277 = !DIGlobalVariableExpression(var: !2278, expr: !DIExpression())
!2278 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_tree_nested_h", scope: !2, file: !2279, line: 24, type: !2280, isLocal: false, isDefinition: true)
!2279 = !DIFile(filename: "./gt-tree-nested.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2281, size: 640, elements: !700)
!2281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2282)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !2283, line: 69, size: 320, elements: !2284)
!2283 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2284 = !{!2285, !2286, !2287, !2288, !2290}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2282, file: !2283, line: 70, baseType: !666, size: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2282, file: !2283, line: 71, baseType: !1153, size: 64, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2282, file: !2283, line: 72, baseType: !1153, size: 64, offset: 128)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2282, file: !2283, line: 73, baseType: !2289, size: 64, offset: 192)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !2283, line: 65, baseType: !1458)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2282, file: !2283, line: 74, baseType: !2289, size: 64, offset: 256)
!2291 = !DIGlobalVariableExpression(var: !2292, expr: !DIExpression())
!2292 = distinct !DIGlobalVariable(name: "trampoline_type", scope: !2, file: !3, line: 468, type: !745, isLocal: true, isDefinition: true)
!2293 = !{i32 2, !"Dwarf Version", i32 4}
!2294 = !{i32 2, !"Debug Info Version", i32 3}
!2295 = !{i32 1, !"wchar_size", i32 4}
!2296 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2297 = distinct !DISubprogram(name: "vprintf", scope: !2298, file: !2298, line: 39, type: !2299, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2309)
!2298 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!662, !2301, !2302}
!2301 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !667)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2304)
!2304 = !{!2305, !2306, !2307, !2308}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2303, file: !3, baseType: !7, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2303, file: !3, baseType: !7, size: 32, offset: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2303, file: !3, baseType: !666, size: 64, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2303, file: !3, baseType: !666, size: 64, offset: 128)
!2309 = !{!2310, !2311}
!2310 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2297, file: !2298, line: 39, type: !2301)
!2311 = !DILocalVariable(name: "__arg", arg: 2, scope: !2297, file: !2298, line: 39, type: !2302)
!2312 = !DILocation(line: 0, scope: !2297)
!2313 = !DILocation(line: 41, column: 20, scope: !2297)
!2314 = !DILocation(line: 41, column: 10, scope: !2297)
!2315 = !DILocation(line: 41, column: 3, scope: !2297)
!2316 = distinct !DISubprogram(name: "getchar", scope: !2298, file: !2298, line: 47, type: !2317, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2319)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!662}
!2319 = !{}
!2320 = !DILocation(line: 49, column: 16, scope: !2316)
!2321 = !DILocation(line: 49, column: 10, scope: !2316)
!2322 = !DILocation(line: 49, column: 3, scope: !2316)
!2323 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2298, file: !2298, line: 56, type: !2324, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2376)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!662, !2326}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2328, line: 7, baseType: !2329)
!2328 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2330, line: 49, size: 1728, elements: !2331)
!2330 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2331 = !{!2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2347, !2349, !2350, !2351, !2354, !2355, !2356, !2357, !2360, !2362, !2365, !2368, !2369, !2370, !2371, !2372}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2329, file: !2330, line: 51, baseType: !662, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2329, file: !2330, line: 54, baseType: !664, size: 64, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2329, file: !2330, line: 55, baseType: !664, size: 64, offset: 128)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2329, file: !2330, line: 56, baseType: !664, size: 64, offset: 192)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2329, file: !2330, line: 57, baseType: !664, size: 64, offset: 256)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2329, file: !2330, line: 58, baseType: !664, size: 64, offset: 320)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2329, file: !2330, line: 59, baseType: !664, size: 64, offset: 384)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2329, file: !2330, line: 60, baseType: !664, size: 64, offset: 448)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2329, file: !2330, line: 61, baseType: !664, size: 64, offset: 512)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2329, file: !2330, line: 64, baseType: !664, size: 64, offset: 576)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2329, file: !2330, line: 65, baseType: !664, size: 64, offset: 640)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2329, file: !2330, line: 66, baseType: !664, size: 64, offset: 704)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2329, file: !2330, line: 68, baseType: !2345, size: 64, offset: 768)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!2346 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2330, line: 36, flags: DIFlagFwdDecl)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2329, file: !2330, line: 70, baseType: !2348, size: 64, offset: 832)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2329, file: !2330, line: 72, baseType: !662, size: 32, offset: 896)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2329, file: !2330, line: 73, baseType: !662, size: 32, offset: 928)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2329, file: !2330, line: 74, baseType: !2352, size: 64, offset: 960)
!2352 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2353, line: 152, baseType: !716)
!2353 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2329, file: !2330, line: 77, baseType: !2004, size: 16, offset: 1024)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2329, file: !2330, line: 78, baseType: !1800, size: 8, offset: 1040)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2329, file: !2330, line: 79, baseType: !840, size: 8, offset: 1048)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2329, file: !2330, line: 81, baseType: !2358, size: 64, offset: 1088)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2330, line: 43, baseType: null)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2329, file: !2330, line: 89, baseType: !2361, size: 64, offset: 1152)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2353, line: 153, baseType: !716)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2329, file: !2330, line: 91, baseType: !2363, size: 64, offset: 1216)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2330, line: 37, flags: DIFlagFwdDecl)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2329, file: !2330, line: 92, baseType: !2366, size: 64, offset: 1280)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2330, line: 38, flags: DIFlagFwdDecl)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2329, file: !2330, line: 93, baseType: !2348, size: 64, offset: 1344)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2329, file: !2330, line: 94, baseType: !666, size: 64, offset: 1408)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2329, file: !2330, line: 95, baseType: !1153, size: 64, offset: 1472)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2329, file: !2330, line: 96, baseType: !662, size: 32, offset: 1536)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2329, file: !2330, line: 98, baseType: !2373, size: 160, offset: 1568)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 160, elements: !2374)
!2374 = !{!2375}
!2375 = !DISubrange(count: 20)
!2376 = !{!2377}
!2377 = !DILocalVariable(name: "__fp", arg: 1, scope: !2323, file: !2298, line: 56, type: !2326)
!2378 = !DILocation(line: 0, scope: !2323)
!2379 = !DILocation(line: 58, column: 10, scope: !2323)
!2380 = !DILocation(line: 58, column: 3, scope: !2323)
!2381 = distinct !DISubprogram(name: "getc_unlocked", scope: !2298, file: !2298, line: 66, type: !2324, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2382)
!2382 = !{!2383}
!2383 = !DILocalVariable(name: "__fp", arg: 1, scope: !2381, file: !2298, line: 66, type: !2326)
!2384 = !DILocation(line: 0, scope: !2381)
!2385 = !DILocation(line: 68, column: 10, scope: !2381)
!2386 = !DILocation(line: 68, column: 3, scope: !2381)
!2387 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2298, file: !2298, line: 73, type: !2317, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2319)
!2388 = !DILocation(line: 75, column: 10, scope: !2387)
!2389 = !DILocation(line: 75, column: 3, scope: !2387)
!2390 = distinct !DISubprogram(name: "putchar", scope: !2298, file: !2298, line: 82, type: !2391, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2393)
!2391 = !DISubroutineType(types: !2392)
!2392 = !{!662, !662}
!2393 = !{!2394}
!2394 = !DILocalVariable(name: "__c", arg: 1, scope: !2390, file: !2298, line: 82, type: !662)
!2395 = !DILocation(line: 0, scope: !2390)
!2396 = !DILocation(line: 84, column: 21, scope: !2390)
!2397 = !DILocation(line: 84, column: 10, scope: !2390)
!2398 = !DILocation(line: 84, column: 3, scope: !2390)
!2399 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2298, file: !2298, line: 91, type: !2400, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2402)
!2400 = !DISubroutineType(types: !2401)
!2401 = !{!662, !662, !2326}
!2402 = !{!2403, !2404}
!2403 = !DILocalVariable(name: "__c", arg: 1, scope: !2399, file: !2298, line: 91, type: !662)
!2404 = !DILocalVariable(name: "__stream", arg: 2, scope: !2399, file: !2298, line: 91, type: !2326)
!2405 = !DILocation(line: 0, scope: !2399)
!2406 = !DILocation(line: 93, column: 10, scope: !2399)
!2407 = !DILocation(line: 93, column: 3, scope: !2399)
!2408 = distinct !DISubprogram(name: "putc_unlocked", scope: !2298, file: !2298, line: 101, type: !2400, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2409)
!2409 = !{!2410, !2411}
!2410 = !DILocalVariable(name: "__c", arg: 1, scope: !2408, file: !2298, line: 101, type: !662)
!2411 = !DILocalVariable(name: "__stream", arg: 2, scope: !2408, file: !2298, line: 101, type: !2326)
!2412 = !DILocation(line: 0, scope: !2408)
!2413 = !DILocation(line: 103, column: 10, scope: !2408)
!2414 = !DILocation(line: 103, column: 3, scope: !2408)
!2415 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2298, file: !2298, line: 108, type: !2391, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2416)
!2416 = !{!2417}
!2417 = !DILocalVariable(name: "__c", arg: 1, scope: !2415, file: !2298, line: 108, type: !662)
!2418 = !DILocation(line: 0, scope: !2415)
!2419 = !DILocation(line: 110, column: 10, scope: !2415)
!2420 = !DILocation(line: 110, column: 3, scope: !2415)
!2421 = distinct !DISubprogram(name: "getline", scope: !2298, file: !2298, line: 118, type: !2422, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2426)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{!2424, !663, !2425, !2326}
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2353, line: 193, baseType: !716)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!2426 = !{!2427, !2428, !2429}
!2427 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2421, file: !2298, line: 118, type: !663)
!2428 = !DILocalVariable(name: "__n", arg: 2, scope: !2421, file: !2298, line: 118, type: !2425)
!2429 = !DILocalVariable(name: "__stream", arg: 3, scope: !2421, file: !2298, line: 118, type: !2326)
!2430 = !DILocation(line: 0, scope: !2421)
!2431 = !DILocation(line: 120, column: 10, scope: !2421)
!2432 = !DILocation(line: 120, column: 3, scope: !2421)
!2433 = distinct !DISubprogram(name: "feof_unlocked", scope: !2298, file: !2298, line: 128, type: !2324, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2434)
!2434 = !{!2435}
!2435 = !DILocalVariable(name: "__stream", arg: 1, scope: !2433, file: !2298, line: 128, type: !2326)
!2436 = !DILocation(line: 0, scope: !2433)
!2437 = !DILocation(line: 130, column: 10, scope: !2433)
!2438 = !DILocation(line: 130, column: 3, scope: !2433)
!2439 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2298, file: !2298, line: 135, type: !2324, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2440)
!2440 = !{!2441}
!2441 = !DILocalVariable(name: "__stream", arg: 1, scope: !2439, file: !2298, line: 135, type: !2326)
!2442 = !DILocation(line: 0, scope: !2439)
!2443 = !DILocation(line: 137, column: 10, scope: !2439)
!2444 = !DILocation(line: 137, column: 3, scope: !2439)
!2445 = distinct !DISubprogram(name: "tolower", scope: !2446, file: !2446, line: 207, type: !2391, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2447)
!2446 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2447 = !{!2448}
!2448 = !DILocalVariable(name: "__c", arg: 1, scope: !2445, file: !2446, line: 207, type: !662)
!2449 = !DILocation(line: 0, scope: !2445)
!2450 = !DILocation(line: 209, column: 22, scope: !2445)
!2451 = !DILocation(line: 209, column: 39, scope: !2445)
!2452 = !DILocation(line: 209, column: 38, scope: !2445)
!2453 = !DILocation(line: 209, column: 37, scope: !2445)
!2454 = !DILocation(line: 209, column: 10, scope: !2445)
!2455 = !DILocation(line: 209, column: 3, scope: !2445)
!2456 = distinct !DISubprogram(name: "toupper", scope: !2446, file: !2446, line: 213, type: !2391, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2457)
!2457 = !{!2458}
!2458 = !DILocalVariable(name: "__c", arg: 1, scope: !2456, file: !2446, line: 213, type: !662)
!2459 = !DILocation(line: 0, scope: !2456)
!2460 = !DILocation(line: 215, column: 22, scope: !2456)
!2461 = !DILocation(line: 215, column: 39, scope: !2456)
!2462 = !DILocation(line: 215, column: 38, scope: !2456)
!2463 = !DILocation(line: 215, column: 37, scope: !2456)
!2464 = !DILocation(line: 215, column: 10, scope: !2456)
!2465 = !DILocation(line: 215, column: 3, scope: !2456)
!2466 = distinct !DISubprogram(name: "atoi", scope: !2467, file: !2467, line: 361, type: !2468, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2470)
!2467 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2468 = !DISubroutineType(types: !2469)
!2469 = !{!662, !667}
!2470 = !{!2471}
!2471 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2466, file: !2467, line: 361, type: !667)
!2472 = !DILocation(line: 0, scope: !2466)
!2473 = !DILocation(line: 363, column: 16, scope: !2466)
!2474 = !DILocation(line: 363, column: 10, scope: !2466)
!2475 = !DILocation(line: 363, column: 3, scope: !2466)
!2476 = distinct !DISubprogram(name: "atol", scope: !2467, file: !2467, line: 366, type: !2477, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2479)
!2477 = !DISubroutineType(types: !2478)
!2478 = !{!716, !667}
!2479 = !{!2480}
!2480 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2476, file: !2467, line: 366, type: !667)
!2481 = !DILocation(line: 0, scope: !2476)
!2482 = !DILocation(line: 368, column: 10, scope: !2476)
!2483 = !DILocation(line: 368, column: 3, scope: !2476)
!2484 = distinct !DISubprogram(name: "atoll", scope: !2467, file: !2467, line: 373, type: !2485, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2488)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{!2487, !667}
!2487 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2488 = !{!2489}
!2489 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2484, file: !2467, line: 373, type: !667)
!2490 = !DILocation(line: 0, scope: !2484)
!2491 = !DILocation(line: 375, column: 10, scope: !2484)
!2492 = !DILocation(line: 375, column: 3, scope: !2484)
!2493 = distinct !DISubprogram(name: "bsearch", scope: !2494, file: !2494, line: 20, type: !2495, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2498)
!2494 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2495 = !DISubroutineType(types: !2496)
!2496 = !{!666, !1449, !1449, !1153, !1153, !2497}
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2467, line: 808, baseType: !1453)
!2498 = !{!2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508}
!2499 = !DILocalVariable(name: "__key", arg: 1, scope: !2493, file: !2494, line: 20, type: !1449)
!2500 = !DILocalVariable(name: "__base", arg: 2, scope: !2493, file: !2494, line: 20, type: !1449)
!2501 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2493, file: !2494, line: 20, type: !1153)
!2502 = !DILocalVariable(name: "__size", arg: 4, scope: !2493, file: !2494, line: 20, type: !1153)
!2503 = !DILocalVariable(name: "__compar", arg: 5, scope: !2493, file: !2494, line: 21, type: !2497)
!2504 = !DILocalVariable(name: "__l", scope: !2493, file: !2494, line: 23, type: !1153)
!2505 = !DILocalVariable(name: "__u", scope: !2493, file: !2494, line: 23, type: !1153)
!2506 = !DILocalVariable(name: "__idx", scope: !2493, file: !2494, line: 23, type: !1153)
!2507 = !DILocalVariable(name: "__p", scope: !2493, file: !2494, line: 24, type: !1449)
!2508 = !DILocalVariable(name: "__comparison", scope: !2493, file: !2494, line: 25, type: !662)
!2509 = !DILocation(line: 0, scope: !2493)
!2510 = !DILocation(line: 29, column: 3, scope: !2493)
!2511 = !DILocation(line: 27, column: 7, scope: !2493)
!2512 = !DILocation(line: 29, column: 14, scope: !2493)
!2513 = !DILocation(line: 31, column: 20, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2493, file: !2494, line: 30, column: 5)
!2515 = !DILocation(line: 31, column: 27, scope: !2514)
!2516 = !DILocation(line: 32, column: 56, scope: !2514)
!2517 = !DILocation(line: 32, column: 47, scope: !2514)
!2518 = !DILocation(line: 33, column: 22, scope: !2514)
!2519 = !DILocation(line: 34, column: 24, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2514, file: !2494, line: 34, column: 11)
!2521 = !DILocation(line: 34, column: 11, scope: !2514)
!2522 = !DILocation(line: 36, column: 29, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2520, file: !2494, line: 36, column: 16)
!2524 = !DILocation(line: 36, column: 16, scope: !2520)
!2525 = !DILocation(line: 37, column: 14, scope: !2523)
!2526 = distinct !{!2526, !2510, !2527}
!2527 = !DILocation(line: 40, column: 5, scope: !2493)
!2528 = !DILocation(line: 43, column: 1, scope: !2493)
!2529 = distinct !DISubprogram(name: "atof", scope: !2530, file: !2530, line: 25, type: !2531, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2534)
!2530 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2531 = !DISubroutineType(types: !2532)
!2532 = !{!2533, !667}
!2533 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2534 = !{!2535}
!2535 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2529, file: !2530, line: 25, type: !667)
!2536 = !DILocation(line: 0, scope: !2529)
!2537 = !DILocation(line: 27, column: 10, scope: !2529)
!2538 = !DILocation(line: 27, column: 3, scope: !2529)
!2539 = distinct !DISubprogram(name: "strtoimax", scope: !2540, file: !2540, line: 324, type: !2541, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2547)
!2540 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2541 = !DISubroutineType(types: !2542)
!2542 = !{!2543, !2301, !2546, !662}
!2543 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2544, line: 101, baseType: !2545)
!2544 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2353, line: 72, baseType: !716)
!2546 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !663)
!2547 = !{!2548, !2549, !2550}
!2548 = !DILocalVariable(name: "nptr", arg: 1, scope: !2539, file: !2540, line: 324, type: !2301)
!2549 = !DILocalVariable(name: "endptr", arg: 2, scope: !2539, file: !2540, line: 324, type: !2546)
!2550 = !DILocalVariable(name: "base", arg: 3, scope: !2539, file: !2540, line: 324, type: !662)
!2551 = !DILocation(line: 0, scope: !2539)
!2552 = !DILocation(line: 327, column: 10, scope: !2539)
!2553 = !DILocation(line: 327, column: 3, scope: !2539)
!2554 = distinct !DISubprogram(name: "strtoumax", scope: !2540, file: !2540, line: 336, type: !2555, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2559)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!2557, !2301, !2546, !662}
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2544, line: 102, baseType: !2558)
!2558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2353, line: 73, baseType: !699)
!2559 = !{!2560, !2561, !2562}
!2560 = !DILocalVariable(name: "nptr", arg: 1, scope: !2554, file: !2540, line: 336, type: !2301)
!2561 = !DILocalVariable(name: "endptr", arg: 2, scope: !2554, file: !2540, line: 336, type: !2546)
!2562 = !DILocalVariable(name: "base", arg: 3, scope: !2554, file: !2540, line: 336, type: !662)
!2563 = !DILocation(line: 0, scope: !2554)
!2564 = !DILocation(line: 339, column: 10, scope: !2554)
!2565 = !DILocation(line: 339, column: 3, scope: !2554)
!2566 = distinct !DISubprogram(name: "wcstoimax", scope: !2540, file: !2540, line: 348, type: !2567, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2576)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{!2543, !2569, !2573, !662}
!2569 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2570)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2572)
!2572 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2540, line: 34, baseType: !662)
!2573 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2574)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2576 = !{!2577, !2578, !2579}
!2577 = !DILocalVariable(name: "nptr", arg: 1, scope: !2566, file: !2540, line: 348, type: !2569)
!2578 = !DILocalVariable(name: "endptr", arg: 2, scope: !2566, file: !2540, line: 348, type: !2573)
!2579 = !DILocalVariable(name: "base", arg: 3, scope: !2566, file: !2540, line: 348, type: !662)
!2580 = !DILocation(line: 0, scope: !2566)
!2581 = !DILocation(line: 351, column: 10, scope: !2566)
!2582 = !DILocation(line: 351, column: 3, scope: !2566)
!2583 = distinct !DISubprogram(name: "wcstoumax", scope: !2540, file: !2540, line: 362, type: !2584, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2586)
!2584 = !DISubroutineType(types: !2585)
!2585 = !{!2557, !2569, !2573, !662}
!2586 = !{!2587, !2588, !2589}
!2587 = !DILocalVariable(name: "nptr", arg: 1, scope: !2583, file: !2540, line: 362, type: !2569)
!2588 = !DILocalVariable(name: "endptr", arg: 2, scope: !2583, file: !2540, line: 362, type: !2573)
!2589 = !DILocalVariable(name: "base", arg: 3, scope: !2583, file: !2540, line: 362, type: !662)
!2590 = !DILocation(line: 0, scope: !2583)
!2591 = !DILocation(line: 365, column: 10, scope: !2583)
!2592 = !DILocation(line: 365, column: 3, scope: !2583)
!2593 = distinct !DISubprogram(name: "stat", scope: !2594, file: !2594, line: 453, type: !2595, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2632)
!2594 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!662, !667, !2597}
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2599, line: 46, size: 1152, elements: !2600)
!2599 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2600 = !{!2601, !2603, !2605, !2607, !2609, !2611, !2613, !2614, !2615, !2616, !2618, !2620, !2628, !2629, !2630}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2598, file: !2599, line: 48, baseType: !2602, size: 64)
!2602 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2353, line: 145, baseType: !699)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2598, file: !2599, line: 53, baseType: !2604, size: 64, offset: 64)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2353, line: 148, baseType: !699)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2598, file: !2599, line: 61, baseType: !2606, size: 64, offset: 128)
!2606 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2353, line: 151, baseType: !699)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2598, file: !2599, line: 62, baseType: !2608, size: 32, offset: 192)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2353, line: 150, baseType: !7)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2598, file: !2599, line: 64, baseType: !2610, size: 32, offset: 224)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2353, line: 146, baseType: !7)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2598, file: !2599, line: 65, baseType: !2612, size: 32, offset: 256)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2353, line: 147, baseType: !7)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2598, file: !2599, line: 67, baseType: !662, size: 32, offset: 288)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2598, file: !2599, line: 69, baseType: !2602, size: 64, offset: 320)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2598, file: !2599, line: 74, baseType: !2352, size: 64, offset: 384)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2598, file: !2599, line: 78, baseType: !2617, size: 64, offset: 448)
!2617 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2353, line: 174, baseType: !716)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2598, file: !2599, line: 80, baseType: !2619, size: 64, offset: 512)
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2353, line: 179, baseType: !716)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2598, file: !2599, line: 91, baseType: !2621, size: 128, offset: 576)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2622, line: 10, size: 128, elements: !2623)
!2622 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2623 = !{!2624, !2626}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2621, file: !2622, line: 12, baseType: !2625, size: 64)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2353, line: 160, baseType: !716)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2621, file: !2622, line: 16, baseType: !2627, size: 64, offset: 64)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2353, line: 196, baseType: !716)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2598, file: !2599, line: 92, baseType: !2621, size: 128, offset: 704)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2598, file: !2599, line: 93, baseType: !2621, size: 128, offset: 832)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2598, file: !2599, line: 106, baseType: !2631, size: 192, offset: 960)
!2631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2627, size: 192, elements: !816)
!2632 = !{!2633, !2634}
!2633 = !DILocalVariable(name: "__path", arg: 1, scope: !2593, file: !2594, line: 453, type: !667)
!2634 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2593, file: !2594, line: 453, type: !2597)
!2635 = !DILocation(line: 0, scope: !2593)
!2636 = !DILocation(line: 455, column: 10, scope: !2593)
!2637 = !DILocation(line: 455, column: 3, scope: !2593)
!2638 = distinct !DISubprogram(name: "lstat", scope: !2594, file: !2594, line: 460, type: !2595, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2639)
!2639 = !{!2640, !2641}
!2640 = !DILocalVariable(name: "__path", arg: 1, scope: !2638, file: !2594, line: 460, type: !667)
!2641 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2638, file: !2594, line: 460, type: !2597)
!2642 = !DILocation(line: 0, scope: !2638)
!2643 = !DILocation(line: 462, column: 10, scope: !2638)
!2644 = !DILocation(line: 462, column: 3, scope: !2638)
!2645 = distinct !DISubprogram(name: "fstat", scope: !2594, file: !2594, line: 467, type: !2646, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2648)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{!662, !662, !2597}
!2648 = !{!2649, !2650}
!2649 = !DILocalVariable(name: "__fd", arg: 1, scope: !2645, file: !2594, line: 467, type: !662)
!2650 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2645, file: !2594, line: 467, type: !2597)
!2651 = !DILocation(line: 0, scope: !2645)
!2652 = !DILocation(line: 469, column: 10, scope: !2645)
!2653 = !DILocation(line: 469, column: 3, scope: !2645)
!2654 = distinct !DISubprogram(name: "fstatat", scope: !2594, file: !2594, line: 474, type: !2655, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2657)
!2655 = !DISubroutineType(types: !2656)
!2656 = !{!662, !662, !667, !2597, !662}
!2657 = !{!2658, !2659, !2660, !2661}
!2658 = !DILocalVariable(name: "__fd", arg: 1, scope: !2654, file: !2594, line: 474, type: !662)
!2659 = !DILocalVariable(name: "__filename", arg: 2, scope: !2654, file: !2594, line: 474, type: !667)
!2660 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2654, file: !2594, line: 474, type: !2597)
!2661 = !DILocalVariable(name: "__flag", arg: 4, scope: !2654, file: !2594, line: 474, type: !662)
!2662 = !DILocation(line: 0, scope: !2654)
!2663 = !DILocation(line: 477, column: 10, scope: !2654)
!2664 = !DILocation(line: 477, column: 3, scope: !2654)
!2665 = distinct !DISubprogram(name: "mknod", scope: !2594, file: !2594, line: 483, type: !2666, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2668)
!2666 = !DISubroutineType(types: !2667)
!2667 = !{!662, !667, !2608, !2602}
!2668 = !{!2669, !2670, !2671}
!2669 = !DILocalVariable(name: "__path", arg: 1, scope: !2665, file: !2594, line: 483, type: !667)
!2670 = !DILocalVariable(name: "__mode", arg: 2, scope: !2665, file: !2594, line: 483, type: !2608)
!2671 = !DILocalVariable(name: "__dev", arg: 3, scope: !2665, file: !2594, line: 483, type: !2602)
!2672 = !DILocation(line: 0, scope: !2665)
!2673 = !DILocation(line: 485, column: 10, scope: !2665)
!2674 = !DILocation(line: 485, column: 3, scope: !2665)
!2675 = distinct !DISubprogram(name: "mknodat", scope: !2594, file: !2594, line: 491, type: !2676, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2678)
!2676 = !DISubroutineType(types: !2677)
!2677 = !{!662, !662, !667, !2608, !2602}
!2678 = !{!2679, !2680, !2681, !2682}
!2679 = !DILocalVariable(name: "__fd", arg: 1, scope: !2675, file: !2594, line: 491, type: !662)
!2680 = !DILocalVariable(name: "__path", arg: 2, scope: !2675, file: !2594, line: 491, type: !667)
!2681 = !DILocalVariable(name: "__mode", arg: 3, scope: !2675, file: !2594, line: 491, type: !2608)
!2682 = !DILocalVariable(name: "__dev", arg: 4, scope: !2675, file: !2594, line: 491, type: !2602)
!2683 = !DILocation(line: 0, scope: !2675)
!2684 = !DILocation(line: 494, column: 10, scope: !2675)
!2685 = !DILocation(line: 494, column: 3, scope: !2675)
!2686 = distinct !DISubprogram(name: "stat64", scope: !2594, file: !2594, line: 502, type: !2687, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2709)
!2687 = !DISubroutineType(types: !2688)
!2688 = !{!662, !667, !2689}
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2599, line: 119, size: 1152, elements: !2691)
!2691 = !{!2692, !2693, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2705, !2706, !2707, !2708}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2690, file: !2599, line: 121, baseType: !2602, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2690, file: !2599, line: 123, baseType: !2694, size: 64, offset: 64)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2353, line: 149, baseType: !699)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2690, file: !2599, line: 124, baseType: !2606, size: 64, offset: 128)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2690, file: !2599, line: 125, baseType: !2608, size: 32, offset: 192)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2690, file: !2599, line: 132, baseType: !2610, size: 32, offset: 224)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2690, file: !2599, line: 133, baseType: !2612, size: 32, offset: 256)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2690, file: !2599, line: 135, baseType: !662, size: 32, offset: 288)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2690, file: !2599, line: 136, baseType: !2602, size: 64, offset: 320)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2690, file: !2599, line: 137, baseType: !2352, size: 64, offset: 384)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2690, file: !2599, line: 143, baseType: !2617, size: 64, offset: 448)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2690, file: !2599, line: 144, baseType: !2704, size: 64, offset: 512)
!2704 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2353, line: 180, baseType: !716)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2690, file: !2599, line: 152, baseType: !2621, size: 128, offset: 576)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2690, file: !2599, line: 153, baseType: !2621, size: 128, offset: 704)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2690, file: !2599, line: 154, baseType: !2621, size: 128, offset: 832)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2690, file: !2599, line: 164, baseType: !2631, size: 192, offset: 960)
!2709 = !{!2710, !2711}
!2710 = !DILocalVariable(name: "__path", arg: 1, scope: !2686, file: !2594, line: 502, type: !667)
!2711 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2686, file: !2594, line: 502, type: !2689)
!2712 = !DILocation(line: 0, scope: !2686)
!2713 = !DILocation(line: 504, column: 10, scope: !2686)
!2714 = !DILocation(line: 504, column: 3, scope: !2686)
!2715 = distinct !DISubprogram(name: "lstat64", scope: !2594, file: !2594, line: 509, type: !2687, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2716)
!2716 = !{!2717, !2718}
!2717 = !DILocalVariable(name: "__path", arg: 1, scope: !2715, file: !2594, line: 509, type: !667)
!2718 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2715, file: !2594, line: 509, type: !2689)
!2719 = !DILocation(line: 0, scope: !2715)
!2720 = !DILocation(line: 511, column: 10, scope: !2715)
!2721 = !DILocation(line: 511, column: 3, scope: !2715)
!2722 = distinct !DISubprogram(name: "fstat64", scope: !2594, file: !2594, line: 516, type: !2723, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2725)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!662, !662, !2689}
!2725 = !{!2726, !2727}
!2726 = !DILocalVariable(name: "__fd", arg: 1, scope: !2722, file: !2594, line: 516, type: !662)
!2727 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2722, file: !2594, line: 516, type: !2689)
!2728 = !DILocation(line: 0, scope: !2722)
!2729 = !DILocation(line: 518, column: 10, scope: !2722)
!2730 = !DILocation(line: 518, column: 3, scope: !2722)
!2731 = distinct !DISubprogram(name: "fstatat64", scope: !2594, file: !2594, line: 523, type: !2732, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2734)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!662, !662, !667, !2689, !662}
!2734 = !{!2735, !2736, !2737, !2738}
!2735 = !DILocalVariable(name: "__fd", arg: 1, scope: !2731, file: !2594, line: 523, type: !662)
!2736 = !DILocalVariable(name: "__filename", arg: 2, scope: !2731, file: !2594, line: 523, type: !667)
!2737 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2731, file: !2594, line: 523, type: !2689)
!2738 = !DILocalVariable(name: "__flag", arg: 4, scope: !2731, file: !2594, line: 523, type: !662)
!2739 = !DILocation(line: 0, scope: !2731)
!2740 = !DILocation(line: 526, column: 10, scope: !2731)
!2741 = !DILocation(line: 526, column: 3, scope: !2731)
!2742 = distinct !DISubprogram(name: "build_addr", scope: !3, file: !3, line: 167, type: !2743, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2745)
!2743 = !DISubroutineType(types: !2744)
!2744 = !{!745, !745, !745}
!2745 = !{!2746, !2747, !2748, !2749, !2750}
!2746 = !DILocalVariable(name: "exp", arg: 1, scope: !2742, file: !3, line: 167, type: !745)
!2747 = !DILocalVariable(name: "context", arg: 2, scope: !2742, file: !3, line: 167, type: !745)
!2748 = !DILocalVariable(name: "base", scope: !2742, file: !3, line: 169, type: !745)
!2749 = !DILocalVariable(name: "save_context", scope: !2742, file: !3, line: 170, type: !745)
!2750 = !DILocalVariable(name: "retval", scope: !2742, file: !3, line: 171, type: !745)
!2751 = !DILocation(line: 0, scope: !2742)
!2752 = !DILocation(line: 173, column: 3, scope: !2742)
!2753 = !DILocation(line: 173, column: 10, scope: !2742)
!2754 = !DILocation(line: 174, column: 12, scope: !2742)
!2755 = distinct !{!2755, !2752, !2754}
!2756 = !DILocation(line: 176, column: 7, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2742, file: !3, line: 176, column: 7)
!2758 = !DILocation(line: 176, column: 7, scope: !2742)
!2759 = !DILocation(line: 177, column: 29, scope: !2757)
!2760 = !DILocation(line: 177, column: 5, scope: !2757)
!2761 = !DILocation(line: 186, column: 18, scope: !2742)
!2762 = !DILocation(line: 187, column: 25, scope: !2742)
!2763 = !DILocation(line: 188, column: 12, scope: !2742)
!2764 = !DILocation(line: 189, column: 25, scope: !2742)
!2765 = !DILocation(line: 190, column: 3, scope: !2742)
!2766 = distinct !DISubprogram(name: "handled_component_p", scope: !135, file: !135, line: 4551, type: !2767, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2772)
!2767 = !DISubroutineType(types: !2768)
!2768 = !{!661, !2769}
!2769 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !682, line: 59, baseType: !2770)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !747)
!2772 = !{!2773}
!2773 = !DILocalVariable(name: "t", arg: 1, scope: !2766, file: !135, line: 4551, type: !2769)
!2774 = !DILocation(line: 0, scope: !2766)
!2775 = !DILocation(line: 4553, column: 11, scope: !2766)
!2776 = !DILocation(line: 4553, column: 3, scope: !2766)
!2777 = !DILocation(line: 4565, column: 7, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2766, file: !135, line: 4554, column: 5)
!2779 = !DILocation(line: 0, scope: !2778)
!2780 = !DILocation(line: 4567, column: 1, scope: !2766)
!2781 = distinct !DISubprogram(name: "insert_field_into_struct", scope: !3, file: !3, line: 196, type: !2782, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2784)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{null, !745, !745}
!2784 = !{!2785, !2786, !2787}
!2785 = !DILocalVariable(name: "type", arg: 1, scope: !2781, file: !3, line: 196, type: !745)
!2786 = !DILocalVariable(name: "field", arg: 2, scope: !2781, file: !3, line: 196, type: !745)
!2787 = !DILocalVariable(name: "p", scope: !2781, file: !3, line: 198, type: !1042)
!2788 = !DILocation(line: 0, scope: !2781)
!2789 = !DILocation(line: 200, column: 3, scope: !2781)
!2790 = !DILocation(line: 200, column: 24, scope: !2781)
!2791 = !DILocation(line: 202, column: 13, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2781, file: !3, line: 202, column: 3)
!2793 = !DILocation(line: 203, column: 9, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 203, column: 9)
!2795 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 202, column: 3)
!2796 = !DILocation(line: 202, column: 8, scope: !2792)
!2797 = !DILocation(line: 0, scope: !2792)
!2798 = !DILocation(line: 202, column: 33, scope: !2795)
!2799 = !DILocation(line: 202, column: 3, scope: !2792)
!2800 = !DILocation(line: 203, column: 31, scope: !2794)
!2801 = !DILocation(line: 203, column: 28, scope: !2794)
!2802 = !DILocation(line: 203, column: 9, scope: !2795)
!2803 = !DILocation(line: 202, column: 43, scope: !2795)
!2804 = !DILocation(line: 202, column: 3, scope: !2795)
!2805 = distinct !{!2805, !2799, !2806}
!2806 = !DILocation(line: 204, column: 7, scope: !2792)
!2807 = !DILocation(line: 206, column: 3, scope: !2781)
!2808 = !DILocation(line: 206, column: 22, scope: !2781)
!2809 = !DILocation(line: 207, column: 6, scope: !2781)
!2810 = !DILocation(line: 210, column: 7, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2781, file: !3, line: 210, column: 7)
!2812 = !DILocation(line: 210, column: 27, scope: !2811)
!2813 = !DILocation(line: 210, column: 25, scope: !2811)
!2814 = !DILocation(line: 210, column: 7, scope: !2781)
!2815 = !DILocation(line: 211, column: 23, scope: !2811)
!2816 = !DILocation(line: 211, column: 5, scope: !2811)
!2817 = !DILocation(line: 212, column: 1, scope: !2781)
!2818 = distinct !DISubprogram(name: "lower_nested_functions", scope: !3, file: !3, line: 2539, type: !2264, scopeLine: 2540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2819)
!2819 = !{!2820, !2821, !2822}
!2820 = !DILocalVariable(name: "fndecl", arg: 1, scope: !2818, file: !3, line: 2539, type: !745)
!2821 = !DILocalVariable(name: "cgn", scope: !2818, file: !3, line: 2541, type: !2015)
!2822 = !DILocalVariable(name: "root", scope: !2818, file: !3, line: 2542, type: !669)
!2823 = !DILocation(line: 0, scope: !2818)
!2824 = !DILocation(line: 2545, column: 9, scope: !2818)
!2825 = !DILocation(line: 2546, column: 13, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 2546, column: 7)
!2827 = !DILocation(line: 2546, column: 8, scope: !2826)
!2828 = !DILocation(line: 2546, column: 7, scope: !2818)
!2829 = !DILocation(line: 2549, column: 3, scope: !2818)
!2830 = !DILocation(line: 2551, column: 15, scope: !2818)
!2831 = !DILocation(line: 2551, column: 13, scope: !2818)
!2832 = !DILocation(line: 2552, column: 7, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 2552, column: 7)
!2834 = !DILocation(line: 2552, column: 7, scope: !2818)
!2835 = !DILocation(line: 2554, column: 18, scope: !2833)
!2836 = !DILocation(line: 2554, column: 7, scope: !2833)
!2837 = !DILocation(line: 2553, column: 5, scope: !2833)
!2838 = !DILocation(line: 2556, column: 3, scope: !2818)
!2839 = !DILocation(line: 2557, column: 10, scope: !2818)
!2840 = !DILocation(line: 2559, column: 3, scope: !2818)
!2841 = !DILocation(line: 2562, column: 3, scope: !2818)
!2842 = !DILocation(line: 2565, column: 3, scope: !2818)
!2843 = !DILocation(line: 2566, column: 3, scope: !2818)
!2844 = !DILocation(line: 2568, column: 3, scope: !2818)
!2845 = !DILocation(line: 2569, column: 3, scope: !2818)
!2846 = !DILocation(line: 2570, column: 3, scope: !2818)
!2847 = !DILocation(line: 2572, column: 3, scope: !2818)
!2848 = !DILocation(line: 2573, column: 3, scope: !2818)
!2849 = !DILocation(line: 2575, column: 7, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 2575, column: 7)
!2851 = !DILocation(line: 2575, column: 7, scope: !2818)
!2852 = !DILocation(line: 2577, column: 7, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 2576, column: 5)
!2854 = !DILocation(line: 2578, column: 17, scope: !2853)
!2855 = !DILocation(line: 2579, column: 5, scope: !2853)
!2856 = !DILocation(line: 2580, column: 1, scope: !2818)
!2857 = distinct !DISubprogram(name: "gimplify_all_functions", scope: !3, file: !3, line: 2526, type: !2127, scopeLine: 2527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2858)
!2858 = !{!2859, !2860}
!2859 = !DILocalVariable(name: "root", arg: 1, scope: !2857, file: !3, line: 2526, type: !2015)
!2860 = !DILocalVariable(name: "iter", scope: !2857, file: !3, line: 2528, type: !2015)
!2861 = !DILocation(line: 0, scope: !2857)
!2862 = !DILocation(line: 2529, column: 27, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 2529, column: 7)
!2864 = !DILocation(line: 2529, column: 8, scope: !2863)
!2865 = !DILocation(line: 2529, column: 7, scope: !2857)
!2866 = !DILocation(line: 2530, column: 35, scope: !2863)
!2867 = !DILocation(line: 2530, column: 5, scope: !2863)
!2868 = !DILocation(line: 2531, column: 21, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 2531, column: 3)
!2870 = !DILocation(line: 2531, column: 8, scope: !2869)
!2871 = !DILocation(line: 0, scope: !2869)
!2872 = !DILocation(line: 2531, column: 3, scope: !2869)
!2873 = !DILocation(line: 2532, column: 5, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2869, file: !3, line: 2531, column: 3)
!2875 = !DILocation(line: 2531, column: 48, scope: !2874)
!2876 = !DILocation(line: 2531, column: 3, scope: !2874)
!2877 = distinct !{!2877, !2872, !2878}
!2878 = !DILocation(line: 2532, column: 33, scope: !2869)
!2879 = !DILocation(line: 2533, column: 1, scope: !2857)
!2880 = distinct !DISubprogram(name: "create_nesting_tree", scope: !3, file: !3, line: 717, type: !2881, scopeLine: 718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2883)
!2881 = !DISubroutineType(types: !2882)
!2882 = !{!669, !2015}
!2883 = !{!2884, !2885, !2886}
!2884 = !DILocalVariable(name: "cgn", arg: 1, scope: !2880, file: !3, line: 717, type: !2015)
!2885 = !DILocalVariable(name: "info", scope: !2880, file: !3, line: 719, type: !669)
!2886 = !DILocalVariable(name: "sub", scope: !2887, file: !3, line: 727, type: !669)
!2887 = distinct !DILexicalBlock(scope: !2888, file: !3, line: 726, column: 5)
!2888 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 725, column: 3)
!2889 = distinct !DILexicalBlock(scope: !2880, file: !3, line: 725, column: 3)
!2890 = !DILocation(line: 0, scope: !2880)
!2891 = !DILocation(line: 719, column: 31, scope: !2880)
!2892 = !DILocation(line: 720, column: 21, scope: !2880)
!2893 = !DILocation(line: 720, column: 9, scope: !2880)
!2894 = !DILocation(line: 720, column: 19, scope: !2880)
!2895 = !DILocation(line: 721, column: 19, scope: !2880)
!2896 = !DILocation(line: 721, column: 9, scope: !2880)
!2897 = !DILocation(line: 721, column: 17, scope: !2880)
!2898 = !DILocation(line: 722, column: 30, scope: !2880)
!2899 = !DILocation(line: 722, column: 9, scope: !2880)
!2900 = !DILocation(line: 722, column: 28, scope: !2880)
!2901 = !DILocation(line: 723, column: 24, scope: !2880)
!2902 = !DILocation(line: 723, column: 9, scope: !2880)
!2903 = !DILocation(line: 723, column: 17, scope: !2880)
!2904 = !DILocation(line: 725, column: 19, scope: !2889)
!2905 = !DILocation(line: 0, scope: !2887)
!2906 = !DILocation(line: 725, column: 8, scope: !2889)
!2907 = !DILocation(line: 0, scope: !2889)
!2908 = !DILocation(line: 725, column: 3, scope: !2889)
!2909 = !DILocation(line: 727, column: 34, scope: !2887)
!2910 = !DILocation(line: 728, column: 18, scope: !2887)
!2911 = !DILocation(line: 729, column: 25, scope: !2887)
!2912 = !DILocation(line: 729, column: 12, scope: !2887)
!2913 = !DILocation(line: 729, column: 17, scope: !2887)
!2914 = !DILocation(line: 730, column: 19, scope: !2887)
!2915 = !DILocation(line: 725, column: 44, scope: !2888)
!2916 = !DILocation(line: 725, column: 3, scope: !2888)
!2917 = distinct !{!2917, !2908, !2918}
!2918 = !DILocation(line: 731, column: 5, scope: !2889)
!2919 = !DILocation(line: 735, column: 54, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2880, file: !3, line: 735, column: 7)
!2921 = !DILocation(line: 735, column: 7, scope: !2920)
!2922 = !DILocation(line: 735, column: 7, scope: !2880)
!2923 = !DILocation(line: 736, column: 5, scope: !2920)
!2924 = !DILocation(line: 736, column: 38, scope: !2920)
!2925 = !DILocation(line: 738, column: 3, scope: !2880)
!2926 = distinct !DISubprogram(name: "walk_all_functions", scope: !3, file: !3, line: 662, type: !2927, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2939)
!2927 = !DISubroutineType(types: !2928)
!2928 = !{null, !2929, !2934, !669}
!2929 = !DIDerivedType(tag: DW_TAG_typedef, name: "walk_stmt_fn", file: !584, line: 4704, baseType: !2930)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = !DISubroutineType(types: !2932)
!2932 = !{!745, !2933, !660, !1985}
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!2934 = !DIDerivedType(tag: DW_TAG_typedef, name: "walk_tree_fn", file: !135, line: 5203, baseType: !2935)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{!745, !1042, !2938, !666}
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!2939 = !{!2940, !2941, !2942, !2943}
!2940 = !DILocalVariable(name: "callback_stmt", arg: 1, scope: !2926, file: !3, line: 662, type: !2929)
!2941 = !DILocalVariable(name: "callback_op", arg: 2, scope: !2926, file: !3, line: 662, type: !2934)
!2942 = !DILocalVariable(name: "root", arg: 3, scope: !2926, file: !3, line: 663, type: !669)
!2943 = !DILocalVariable(name: "n", scope: !2926, file: !3, line: 665, type: !669)
!2944 = !DILocation(line: 0, scope: !2926)
!2945 = !DILocation(line: 666, column: 3, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 666, column: 3)
!2947 = !DILocation(line: 0, scope: !2946)
!2948 = !DILocation(line: 667, column: 5, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 666, column: 3)
!2950 = !DILocation(line: 666, column: 3, scope: !2949)
!2951 = distinct !{!2951, !2945, !2952}
!2952 = !DILocation(line: 667, column: 49, scope: !2946)
!2953 = !DILocation(line: 668, column: 1, scope: !2926)
!2954 = distinct !DISubprogram(name: "convert_nonlocal_reference_stmt", scope: !3, file: !3, line: 1220, type: !2931, scopeLine: 1222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2955)
!2955 = !{!2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2967}
!2956 = !DILocalVariable(name: "gsi", arg: 1, scope: !2954, file: !3, line: 1220, type: !2933)
!2957 = !DILocalVariable(name: "handled_ops_p", arg: 2, scope: !2954, file: !3, line: 1220, type: !660)
!2958 = !DILocalVariable(name: "wi", arg: 3, scope: !2954, file: !3, line: 1221, type: !1985)
!2959 = !DILocalVariable(name: "info", scope: !2954, file: !3, line: 1223, type: !669)
!2960 = !DILocalVariable(name: "save_local_var_chain", scope: !2954, file: !3, line: 1224, type: !745)
!2961 = !DILocalVariable(name: "save_suppress", scope: !2954, file: !3, line: 1225, type: !681)
!2962 = !DILocalVariable(name: "stmt", scope: !2954, file: !3, line: 1226, type: !1007)
!2963 = !DILocalVariable(name: "c", scope: !2964, file: !3, line: 1247, type: !745)
!2964 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 1246, column: 2)
!2965 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1244, column: 11)
!2966 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 1229, column: 5)
!2967 = !DILocalVariable(name: "decl", scope: !2964, file: !3, line: 1247, type: !745)
!2968 = !DILocation(line: 0, scope: !2954)
!2969 = !DILocation(line: 1223, column: 59, scope: !2954)
!2970 = !DILocation(line: 1226, column: 17, scope: !2954)
!2971 = !DILocation(line: 1228, column: 11, scope: !2954)
!2972 = !DILocation(line: 1228, column: 3, scope: !2954)
!2973 = !DILocation(line: 1232, column: 11, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1232, column: 11)
!2975 = !DILocation(line: 1232, column: 47, scope: !2974)
!2976 = !DILocation(line: 1232, column: 11, scope: !2966)
!2977 = !DILocation(line: 1234, column: 8, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 1233, column: 2)
!2979 = !DILocation(line: 1234, column: 17, scope: !2978)
!2980 = !DILocation(line: 1235, column: 8, scope: !2978)
!2981 = !DILocation(line: 1235, column: 15, scope: !2978)
!2982 = !DILocation(line: 1236, column: 19, scope: !2978)
!2983 = !DILocation(line: 1237, column: 4, scope: !2978)
!2984 = !DILocation(line: 1243, column: 29, scope: !2966)
!2985 = !DILocation(line: 1244, column: 41, scope: !2965)
!2986 = !DILocation(line: 1244, column: 11, scope: !2965)
!2987 = !DILocation(line: 1244, column: 11, scope: !2966)
!2988 = !DILocation(line: 1248, column: 11, scope: !2964)
!2989 = !DILocation(line: 0, scope: !2964)
!2990 = !DILocation(line: 1249, column: 26, scope: !2964)
!2991 = !DILocation(line: 1249, column: 8, scope: !2964)
!2992 = !DILocation(line: 1251, column: 4, scope: !2964)
!2993 = !DILocation(line: 1251, column: 24, scope: !2964)
!2994 = !DILocation(line: 1252, column: 27, scope: !2964)
!2995 = !DILocation(line: 1252, column: 4, scope: !2964)
!2996 = !DILocation(line: 1252, column: 25, scope: !2964)
!2997 = !DILocation(line: 1253, column: 4, scope: !2964)
!2998 = !DILocation(line: 1254, column: 2, scope: !2964)
!2999 = !DILocation(line: 1256, column: 36, scope: !2966)
!3000 = !DILocation(line: 1257, column: 33, scope: !2966)
!3001 = !DILocation(line: 1260, column: 17, scope: !2966)
!3002 = !DILocation(line: 1259, column: 7, scope: !2966)
!3003 = !DILocation(line: 1262, column: 17, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1262, column: 11)
!3005 = !DILocation(line: 1262, column: 11, scope: !3004)
!3006 = !DILocation(line: 1262, column: 11, scope: !2966)
!3007 = !DILocation(line: 1264, column: 39, scope: !3004)
!3008 = !DILocation(line: 1264, column: 16, scope: !3004)
!3009 = !DILocation(line: 1263, column: 2, scope: !3004)
!3010 = !DILocation(line: 1266, column: 33, scope: !2966)
!3011 = !DILocation(line: 1267, column: 32, scope: !2966)
!3012 = !DILocation(line: 1268, column: 7, scope: !2966)
!3013 = !DILocation(line: 1271, column: 29, scope: !2966)
!3014 = !DILocation(line: 1272, column: 37, scope: !2966)
!3015 = !DILocation(line: 1272, column: 7, scope: !2966)
!3016 = !DILocation(line: 1273, column: 7, scope: !2966)
!3017 = !DILocation(line: 1276, column: 43, scope: !2966)
!3018 = !DILocation(line: 1275, column: 7, scope: !2966)
!3019 = !DILocation(line: 1277, column: 32, scope: !2966)
!3020 = !DILocation(line: 1278, column: 7, scope: !2966)
!3021 = !DILocation(line: 1281, column: 29, scope: !2966)
!3022 = !DILocation(line: 1282, column: 37, scope: !2966)
!3023 = !DILocation(line: 1282, column: 7, scope: !2966)
!3024 = !DILocation(line: 1284, column: 17, scope: !2966)
!3025 = !DILocation(line: 1283, column: 7, scope: !2966)
!3026 = !DILocation(line: 1285, column: 32, scope: !2966)
!3027 = !DILocation(line: 1286, column: 7, scope: !2966)
!3028 = !DILocation(line: 1289, column: 29, scope: !2966)
!3029 = !DILocation(line: 1290, column: 37, scope: !2966)
!3030 = !DILocation(line: 1290, column: 7, scope: !2966)
!3031 = !DILocation(line: 1292, column: 17, scope: !2966)
!3032 = !DILocation(line: 1291, column: 7, scope: !2966)
!3033 = !DILocation(line: 1293, column: 32, scope: !2966)
!3034 = !DILocation(line: 1294, column: 7, scope: !2966)
!3035 = !DILocation(line: 1300, column: 17, scope: !2966)
!3036 = !DILocation(line: 1299, column: 7, scope: !2966)
!3037 = !DILocation(line: 1301, column: 7, scope: !2966)
!3038 = !DILocation(line: 1304, column: 12, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1304, column: 11)
!3040 = !DILocation(line: 1304, column: 21, scope: !3039)
!3041 = !DILocation(line: 1304, column: 24, scope: !3039)
!3042 = !DILocation(line: 1304, column: 11, scope: !2966)
!3043 = !DILocation(line: 1305, column: 34, scope: !3039)
!3044 = !DILocation(line: 1305, column: 2, scope: !3039)
!3045 = !DILocation(line: 1307, column: 22, scope: !2966)
!3046 = !DILocation(line: 1308, column: 7, scope: !2966)
!3047 = !DILocation(line: 1311, column: 11, scope: !2966)
!3048 = !DILocation(line: 1311, column: 20, scope: !2966)
!3049 = !DILocation(line: 1312, column: 11, scope: !2966)
!3050 = !DILocation(line: 1312, column: 18, scope: !2966)
!3051 = !DILocation(line: 1313, column: 22, scope: !2966)
!3052 = !DILocation(line: 1314, column: 7, scope: !2966)
!3053 = !DILocation(line: 1319, column: 22, scope: !2966)
!3054 = !DILocation(line: 1320, column: 7, scope: !2966)
!3055 = !DILocation(line: 1324, column: 18, scope: !2954)
!3056 = !DILocation(line: 1325, column: 3, scope: !2954)
!3057 = !DILocation(line: 1326, column: 1, scope: !2954)
!3058 = distinct !DISubprogram(name: "convert_nonlocal_reference_op", scope: !3, file: !3, line: 899, type: !2936, scopeLine: 900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3059)
!3059 = !{!3060, !3061, !3062, !3063, !3064, !3066, !3067, !3071, !3074, !3075, !3077}
!3060 = !DILocalVariable(name: "tp", arg: 1, scope: !3058, file: !3, line: 899, type: !1042)
!3061 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !3058, file: !3, line: 899, type: !2938)
!3062 = !DILocalVariable(name: "data", arg: 3, scope: !3058, file: !3, line: 899, type: !666)
!3063 = !DILocalVariable(name: "wi", scope: !3058, file: !3, line: 901, type: !1985)
!3064 = !DILocalVariable(name: "info", scope: !3058, file: !3, line: 902, type: !3065)
!3065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!3066 = !DILocalVariable(name: "t", scope: !3058, file: !3, line: 903, type: !745)
!3067 = !DILocalVariable(name: "x", scope: !3068, file: !3, line: 917, type: !745)
!3068 = distinct !DILexicalBlock(scope: !3069, file: !3, line: 916, column: 2)
!3069 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 915, column: 11)
!3070 = distinct !DILexicalBlock(scope: !3058, file: !3, line: 907, column: 5)
!3071 = !DILocalVariable(name: "target_context", scope: !3072, file: !3, line: 923, type: !745)
!3072 = distinct !DILexicalBlock(scope: !3073, file: !3, line: 922, column: 6)
!3073 = distinct !DILexicalBlock(scope: !3068, file: !3, line: 921, column: 8)
!3074 = !DILocalVariable(name: "i", scope: !3072, file: !3, line: 924, type: !669)
!3075 = !DILocalVariable(name: "save_val_only", scope: !3076, file: !3, line: 959, type: !661)
!3076 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 958, column: 7)
!3077 = !DILocalVariable(name: "save_context", scope: !3078, file: !3, line: 969, type: !745)
!3078 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 968, column: 4)
!3079 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 967, column: 6)
!3080 = !DILocation(line: 0, scope: !3058)
!3081 = !DILocation(line: 902, column: 65, scope: !3058)
!3082 = !DILocation(line: 903, column: 12, scope: !3058)
!3083 = !DILocation(line: 905, column: 18, scope: !3058)
!3084 = !DILocation(line: 906, column: 11, scope: !3058)
!3085 = !DILocation(line: 906, column: 3, scope: !3058)
!3086 = !DILocation(line: 910, column: 11, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 910, column: 11)
!3088 = !DILocation(line: 910, column: 27, scope: !3087)
!3089 = !DILocation(line: 910, column: 30, scope: !3087)
!3090 = !DILocation(line: 910, column: 11, scope: !3070)
!3091 = !DILocation(line: 915, column: 11, scope: !3069)
!3092 = !DILocation(line: 915, column: 46, scope: !3069)
!3093 = !DILocation(line: 915, column: 37, scope: !3069)
!3094 = !DILocation(line: 915, column: 11, scope: !3070)
!3095 = !DILocation(line: 918, column: 8, scope: !3068)
!3096 = !DILocation(line: 918, column: 16, scope: !3068)
!3097 = !DILocation(line: 920, column: 8, scope: !3068)
!3098 = !DILocation(line: 0, scope: !3068)
!3099 = !DILocation(line: 921, column: 29, scope: !3073)
!3100 = !DILocation(line: 921, column: 49, scope: !3073)
!3101 = !DILocation(line: 921, column: 9, scope: !3073)
!3102 = !DILocation(line: 921, column: 8, scope: !3068)
!3103 = !DILocation(line: 923, column: 30, scope: !3072)
!3104 = !DILocation(line: 0, scope: !3072)
!3105 = !DILocation(line: 925, column: 13, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3072, file: !3, line: 925, column: 8)
!3107 = !DILocation(line: 0, scope: !3106)
!3108 = !DILocation(line: 925, column: 33, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 925, column: 8)
!3110 = !DILocation(line: 925, column: 41, scope: !3109)
!3111 = !DILocation(line: 925, column: 8, scope: !3106)
!3112 = !DILocation(line: 925, column: 8, scope: !3109)
!3113 = distinct !{!3113, !3111, !3114}
!3114 = !DILocation(line: 926, column: 3, scope: !3106)
!3115 = !DILocation(line: 927, column: 12, scope: !3072)
!3116 = !DILocation(line: 928, column: 59, scope: !3072)
!3117 = !DILocation(line: 928, column: 12, scope: !3072)
!3118 = !DILocation(line: 929, column: 12, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3072, file: !3, line: 929, column: 12)
!3120 = !DILocation(line: 929, column: 12, scope: !3072)
!3121 = !DILocation(line: 931, column: 9, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 930, column: 3)
!3123 = !DILocation(line: 932, column: 9, scope: !3122)
!3124 = !DILocation(line: 933, column: 3, scope: !3122)
!3125 = !DILocation(line: 936, column: 12, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3068, file: !3, line: 936, column: 8)
!3127 = !DILocation(line: 936, column: 8, scope: !3126)
!3128 = !DILocation(line: 936, column: 8, scope: !3068)
!3129 = !DILocation(line: 938, column: 16, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3131, file: !3, line: 938, column: 12)
!3131 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 937, column: 6)
!3132 = !DILocation(line: 938, column: 12, scope: !3130)
!3133 = !DILocation(line: 0, scope: !3130)
!3134 = !DILocation(line: 938, column: 12, scope: !3131)
!3135 = !DILocation(line: 939, column: 7, scope: !3130)
!3136 = !DILocation(line: 939, column: 3, scope: !3130)
!3137 = !DILocation(line: 941, column: 7, scope: !3130)
!3138 = !DILocation(line: 944, column: 8, scope: !3068)
!3139 = !DILocation(line: 945, column: 2, scope: !3068)
!3140 = !DILocation(line: 953, column: 11, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 953, column: 11)
!3142 = !DILocation(line: 953, column: 46, scope: !3141)
!3143 = !DILocation(line: 953, column: 37, scope: !3141)
!3144 = !DILocation(line: 953, column: 11, scope: !3070)
!3145 = !DILocation(line: 954, column: 26, scope: !3141)
!3146 = !DILocation(line: 954, column: 9, scope: !3141)
!3147 = !DILocation(line: 959, column: 27, scope: !3076)
!3148 = !DILocation(line: 0, scope: !3076)
!3149 = !DILocation(line: 961, column: 15, scope: !3076)
!3150 = !DILocation(line: 962, column: 6, scope: !3076)
!3151 = !DILocation(line: 962, column: 13, scope: !3076)
!3152 = !DILocation(line: 963, column: 6, scope: !3076)
!3153 = !DILocation(line: 963, column: 14, scope: !3076)
!3154 = !DILocation(line: 964, column: 2, scope: !3076)
!3155 = !DILocation(line: 965, column: 15, scope: !3076)
!3156 = !DILocation(line: 967, column: 10, scope: !3079)
!3157 = !DILocation(line: 967, column: 6, scope: !3079)
!3158 = !DILocation(line: 967, column: 6, scope: !3076)
!3159 = !DILocation(line: 973, column: 21, scope: !3078)
!3160 = !DILocation(line: 974, column: 36, scope: !3078)
!3161 = !DILocation(line: 974, column: 28, scope: !3078)
!3162 = !DILocation(line: 975, column: 6, scope: !3078)
!3163 = !DILocation(line: 976, column: 28, scope: !3078)
!3164 = !DILocation(line: 981, column: 10, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 981, column: 10)
!3166 = !DILocation(line: 981, column: 10, scope: !3078)
!3167 = !DILocation(line: 982, column: 60, scope: !3165)
!3168 = !DILocation(line: 983, column: 19, scope: !3165)
!3169 = !DILocation(line: 982, column: 14, scope: !3165)
!3170 = !DILocation(line: 982, column: 12, scope: !3165)
!3171 = !DILocation(line: 982, column: 8, scope: !3165)
!3172 = !DILocation(line: 997, column: 11, scope: !3070)
!3173 = !DILocation(line: 997, column: 20, scope: !3070)
!3174 = !DILocation(line: 998, column: 11, scope: !3070)
!3175 = !DILocation(line: 998, column: 18, scope: !3070)
!3176 = !DILocation(line: 999, column: 7, scope: !3070)
!3177 = !DILocation(line: 999, column: 14, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 999, column: 7)
!3179 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 999, column: 7)
!3180 = !DILocation(line: 999, column: 7, scope: !3179)
!3181 = !DILocation(line: 1001, column: 8, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 1001, column: 8)
!3183 = distinct !DILexicalBlock(scope: !3178, file: !3, line: 1000, column: 2)
!3184 = !DILocation(line: 1001, column: 22, scope: !3182)
!3185 = !DILocation(line: 1001, column: 8, scope: !3183)
!3186 = !DILocation(line: 1002, column: 6, scope: !3182)
!3187 = !DILocation(line: 1004, column: 27, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3182, file: !3, line: 1004, column: 13)
!3189 = !DILocation(line: 1005, column: 6, scope: !3188)
!3190 = !DILocation(line: 1005, column: 23, scope: !3188)
!3191 = !DILocation(line: 1004, column: 13, scope: !3182)
!3192 = !DILocation(line: 1007, column: 8, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 1006, column: 6)
!3194 = !DILocation(line: 1009, column: 8, scope: !3193)
!3195 = !DILocation(line: 1011, column: 8, scope: !3193)
!3196 = !DILocation(line: 1013, column: 6, scope: !3193)
!3197 = !DILocation(line: 1014, column: 27, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 1014, column: 13)
!3199 = !DILocation(line: 1014, column: 13, scope: !3188)
!3200 = !DILocation(line: 1016, column: 8, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 1015, column: 6)
!3202 = !DILocation(line: 1018, column: 8, scope: !3201)
!3203 = !DILocation(line: 1020, column: 6, scope: !3201)
!3204 = !DILocation(line: 999, column: 45, scope: !3178)
!3205 = !DILocation(line: 999, column: 70, scope: !3178)
!3206 = !DILocation(line: 999, column: 7, scope: !3178)
!3207 = distinct !{!3207, !3180, !3208}
!3208 = !DILocation(line: 1021, column: 2, scope: !3179)
!3209 = !DILocation(line: 1022, column: 20, scope: !3070)
!3210 = !DILocation(line: 1023, column: 7, scope: !3070)
!3211 = !DILocation(line: 1024, column: 7, scope: !3070)
!3212 = !DILocation(line: 1030, column: 22, scope: !3070)
!3213 = !DILocation(line: 1031, column: 7, scope: !3070)
!3214 = !DILocation(line: 1034, column: 12, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 1034, column: 11)
!3216 = !DILocation(line: 1034, column: 11, scope: !3070)
!3217 = !DILocation(line: 1036, column: 19, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 1035, column: 2)
!3219 = !DILocation(line: 1037, column: 15, scope: !3218)
!3220 = !DILocation(line: 1037, column: 24, scope: !3218)
!3221 = !DILocation(line: 1038, column: 8, scope: !3218)
!3222 = !DILocation(line: 1038, column: 15, scope: !3218)
!3223 = !DILocation(line: 1039, column: 2, scope: !3218)
!3224 = !DILocation(line: 1043, column: 3, scope: !3058)
!3225 = distinct !DISubprogram(name: "convert_local_reference_stmt", scope: !3, file: !3, line: 1645, type: !2931, scopeLine: 1647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3226)
!3226 = !{!3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234}
!3227 = !DILocalVariable(name: "gsi", arg: 1, scope: !3225, file: !3, line: 1645, type: !2933)
!3228 = !DILocalVariable(name: "handled_ops_p", arg: 2, scope: !3225, file: !3, line: 1645, type: !660)
!3229 = !DILocalVariable(name: "wi", arg: 3, scope: !3225, file: !3, line: 1646, type: !1985)
!3230 = !DILocalVariable(name: "info", scope: !3225, file: !3, line: 1648, type: !669)
!3231 = !DILocalVariable(name: "save_local_var_chain", scope: !3225, file: !3, line: 1649, type: !745)
!3232 = !DILocalVariable(name: "save_suppress", scope: !3225, file: !3, line: 1650, type: !681)
!3233 = !DILocalVariable(name: "stmt", scope: !3225, file: !3, line: 1651, type: !1007)
!3234 = !DILocalVariable(name: "c", scope: !3235, file: !3, line: 1661, type: !745)
!3235 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 1660, column: 2)
!3236 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 1658, column: 11)
!3237 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 1654, column: 5)
!3238 = !DILocation(line: 0, scope: !3225)
!3239 = !DILocation(line: 1648, column: 59, scope: !3225)
!3240 = !DILocation(line: 1651, column: 17, scope: !3225)
!3241 = !DILocation(line: 1653, column: 11, scope: !3225)
!3242 = !DILocation(line: 1653, column: 3, scope: !3225)
!3243 = !DILocation(line: 1657, column: 29, scope: !3237)
!3244 = !DILocation(line: 1658, column: 38, scope: !3236)
!3245 = !DILocation(line: 1658, column: 11, scope: !3236)
!3246 = !DILocation(line: 1658, column: 11, scope: !3237)
!3247 = !DILocation(line: 1662, column: 11, scope: !3235)
!3248 = !DILocation(line: 1663, column: 26, scope: !3235)
!3249 = !DILocation(line: 1663, column: 8, scope: !3235)
!3250 = !DILocation(line: 0, scope: !3235)
!3251 = !DILocation(line: 1665, column: 32, scope: !3235)
!3252 = !DILocation(line: 1665, column: 4, scope: !3235)
!3253 = !DILocation(line: 1665, column: 24, scope: !3235)
!3254 = !DILocation(line: 1666, column: 27, scope: !3235)
!3255 = !DILocation(line: 1666, column: 4, scope: !3235)
!3256 = !DILocation(line: 1666, column: 25, scope: !3235)
!3257 = !DILocation(line: 1667, column: 4, scope: !3235)
!3258 = !DILocation(line: 1668, column: 2, scope: !3235)
!3259 = !DILocation(line: 1670, column: 36, scope: !3237)
!3260 = !DILocation(line: 1671, column: 33, scope: !3237)
!3261 = !DILocation(line: 1674, column: 11, scope: !3237)
!3262 = !DILocation(line: 1673, column: 7, scope: !3237)
!3263 = !DILocation(line: 1676, column: 17, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 1676, column: 11)
!3265 = !DILocation(line: 1676, column: 11, scope: !3264)
!3266 = !DILocation(line: 1676, column: 11, scope: !3237)
!3267 = !DILocation(line: 1678, column: 32, scope: !3264)
!3268 = !DILocation(line: 1678, column: 9, scope: !3264)
!3269 = !DILocation(line: 1677, column: 2, scope: !3264)
!3270 = !DILocation(line: 1679, column: 33, scope: !3237)
!3271 = !DILocation(line: 1680, column: 32, scope: !3237)
!3272 = !DILocation(line: 1681, column: 7, scope: !3237)
!3273 = !DILocation(line: 1684, column: 29, scope: !3237)
!3274 = !DILocation(line: 1685, column: 34, scope: !3237)
!3275 = !DILocation(line: 1685, column: 7, scope: !3237)
!3276 = !DILocation(line: 1686, column: 7, scope: !3237)
!3277 = !DILocation(line: 1689, column: 10, scope: !3237)
!3278 = !DILocation(line: 1688, column: 7, scope: !3237)
!3279 = !DILocation(line: 1690, column: 32, scope: !3237)
!3280 = !DILocation(line: 1691, column: 7, scope: !3237)
!3281 = !DILocation(line: 1694, column: 29, scope: !3237)
!3282 = !DILocation(line: 1695, column: 34, scope: !3237)
!3283 = !DILocation(line: 1695, column: 7, scope: !3237)
!3284 = !DILocation(line: 1697, column: 10, scope: !3237)
!3285 = !DILocation(line: 1696, column: 7, scope: !3237)
!3286 = !DILocation(line: 1698, column: 32, scope: !3237)
!3287 = !DILocation(line: 1699, column: 7, scope: !3237)
!3288 = !DILocation(line: 1702, column: 29, scope: !3237)
!3289 = !DILocation(line: 1703, column: 34, scope: !3237)
!3290 = !DILocation(line: 1703, column: 7, scope: !3237)
!3291 = !DILocation(line: 1705, column: 10, scope: !3237)
!3292 = !DILocation(line: 1704, column: 7, scope: !3237)
!3293 = !DILocation(line: 1706, column: 32, scope: !3237)
!3294 = !DILocation(line: 1707, column: 7, scope: !3237)
!3295 = !DILocation(line: 1713, column: 10, scope: !3237)
!3296 = !DILocation(line: 1712, column: 7, scope: !3237)
!3297 = !DILocation(line: 1714, column: 7, scope: !3237)
!3298 = !DILocation(line: 1717, column: 11, scope: !3237)
!3299 = !DILocation(line: 1717, column: 20, scope: !3237)
!3300 = !DILocation(line: 1718, column: 11, scope: !3237)
!3301 = !DILocation(line: 1718, column: 18, scope: !3237)
!3302 = !DILocation(line: 1719, column: 22, scope: !3237)
!3303 = !DILocation(line: 1720, column: 7, scope: !3237)
!3304 = !DILocation(line: 1725, column: 22, scope: !3237)
!3305 = !DILocation(line: 1726, column: 7, scope: !3237)
!3306 = !DILocation(line: 1730, column: 18, scope: !3225)
!3307 = !DILocation(line: 1731, column: 3, scope: !3225)
!3308 = !DILocation(line: 1732, column: 1, scope: !3225)
!3309 = distinct !DISubprogram(name: "convert_local_reference_op", scope: !3, file: !3, line: 1386, type: !2936, scopeLine: 1387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3310)
!3310 = !{!3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320}
!3311 = !DILocalVariable(name: "tp", arg: 1, scope: !3309, file: !3, line: 1386, type: !1042)
!3312 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !3309, file: !3, line: 1386, type: !2938)
!3313 = !DILocalVariable(name: "data", arg: 3, scope: !3309, file: !3, line: 1386, type: !666)
!3314 = !DILocalVariable(name: "wi", scope: !3309, file: !3, line: 1388, type: !1985)
!3315 = !DILocalVariable(name: "info", scope: !3309, file: !3, line: 1389, type: !3065)
!3316 = !DILocalVariable(name: "t", scope: !3309, file: !3, line: 1390, type: !745)
!3317 = !DILocalVariable(name: "field", scope: !3309, file: !3, line: 1390, type: !745)
!3318 = !DILocalVariable(name: "x", scope: !3309, file: !3, line: 1390, type: !745)
!3319 = !DILocalVariable(name: "save_val_only", scope: !3309, file: !3, line: 1391, type: !661)
!3320 = !DILocalVariable(name: "save_context", scope: !3321, file: !3, line: 1444, type: !745)
!3321 = distinct !DILexicalBlock(scope: !3322, file: !3, line: 1443, column: 2)
!3322 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 1442, column: 11)
!3323 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 1395, column: 5)
!3324 = !DILocation(line: 0, scope: !3309)
!3325 = !DILocation(line: 1389, column: 65, scope: !3309)
!3326 = !DILocation(line: 1390, column: 12, scope: !3309)
!3327 = !DILocation(line: 1393, column: 18, scope: !3309)
!3328 = !DILocation(line: 1394, column: 11, scope: !3309)
!3329 = !DILocation(line: 1394, column: 3, scope: !3309)
!3330 = !DILocation(line: 1398, column: 11, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 1398, column: 11)
!3332 = !DILocation(line: 1398, column: 27, scope: !3331)
!3333 = !DILocation(line: 1398, column: 30, scope: !3331)
!3334 = !DILocation(line: 1398, column: 11, scope: !3323)
!3335 = !DILocation(line: 1403, column: 11, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 1403, column: 11)
!3337 = !DILocation(line: 1403, column: 46, scope: !3336)
!3338 = !DILocation(line: 1403, column: 37, scope: !3336)
!3339 = !DILocation(line: 1403, column: 11, scope: !3323)
!3340 = !DILocation(line: 1407, column: 8, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 1407, column: 8)
!3342 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1404, column: 2)
!3343 = !DILocation(line: 1407, column: 8, scope: !3342)
!3344 = !DILocation(line: 1412, column: 12, scope: !3342)
!3345 = !DILocation(line: 1413, column: 9, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 1413, column: 8)
!3347 = !DILocation(line: 1413, column: 8, scope: !3342)
!3348 = !DILocation(line: 1415, column: 8, scope: !3342)
!3349 = !DILocation(line: 1415, column: 16, scope: !3342)
!3350 = !DILocation(line: 1417, column: 8, scope: !3342)
!3351 = !DILocation(line: 1418, column: 29, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 1418, column: 8)
!3353 = !DILocation(line: 1418, column: 49, scope: !3352)
!3354 = !DILocation(line: 1418, column: 9, scope: !3352)
!3355 = !DILocation(line: 1418, column: 8, scope: !3342)
!3356 = !DILocation(line: 1419, column: 39, scope: !3352)
!3357 = !DILocation(line: 1419, column: 60, scope: !3352)
!3358 = !DILocation(line: 1419, column: 10, scope: !3352)
!3359 = !DILocation(line: 1419, column: 6, scope: !3352)
!3360 = !DILocation(line: 0, scope: !3342)
!3361 = !DILocation(line: 1421, column: 12, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 1421, column: 8)
!3363 = !DILocation(line: 1421, column: 8, scope: !3362)
!3364 = !DILocation(line: 1421, column: 8, scope: !3342)
!3365 = !DILocation(line: 1423, column: 16, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 1423, column: 12)
!3367 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 1422, column: 6)
!3368 = !DILocation(line: 1423, column: 12, scope: !3366)
!3369 = !DILocation(line: 0, scope: !3366)
!3370 = !DILocation(line: 1423, column: 12, scope: !3367)
!3371 = !DILocation(line: 1424, column: 7, scope: !3366)
!3372 = !DILocation(line: 1424, column: 3, scope: !3366)
!3373 = !DILocation(line: 1426, column: 7, scope: !3366)
!3374 = !DILocation(line: 1429, column: 8, scope: !3342)
!3375 = !DILocation(line: 1430, column: 2, scope: !3342)
!3376 = !DILocation(line: 1434, column: 27, scope: !3323)
!3377 = !DILocation(line: 1435, column: 20, scope: !3323)
!3378 = !DILocation(line: 1436, column: 11, scope: !3323)
!3379 = !DILocation(line: 1436, column: 18, scope: !3323)
!3380 = !DILocation(line: 1437, column: 11, scope: !3323)
!3381 = !DILocation(line: 1437, column: 19, scope: !3323)
!3382 = !DILocation(line: 1438, column: 7, scope: !3323)
!3383 = !DILocation(line: 1439, column: 20, scope: !3323)
!3384 = !DILocation(line: 1442, column: 15, scope: !3322)
!3385 = !DILocation(line: 1442, column: 11, scope: !3322)
!3386 = !DILocation(line: 1442, column: 11, scope: !3323)
!3387 = !DILocation(line: 1447, column: 4, scope: !3321)
!3388 = !DILocation(line: 1447, column: 40, scope: !3321)
!3389 = !DILocation(line: 1449, column: 19, scope: !3321)
!3390 = !DILocation(line: 1450, column: 34, scope: !3321)
!3391 = !DILocation(line: 1450, column: 26, scope: !3321)
!3392 = !DILocation(line: 1451, column: 4, scope: !3321)
!3393 = !DILocation(line: 1452, column: 26, scope: !3321)
!3394 = !DILocation(line: 1456, column: 8, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 1456, column: 8)
!3396 = !DILocation(line: 1456, column: 8, scope: !3321)
!3397 = !DILocation(line: 1457, column: 58, scope: !3395)
!3398 = !DILocation(line: 1458, column: 17, scope: !3395)
!3399 = !DILocation(line: 1457, column: 12, scope: !3395)
!3400 = !DILocation(line: 1457, column: 10, scope: !3395)
!3401 = !DILocation(line: 1457, column: 6, scope: !3395)
!3402 = !DILocation(line: 1471, column: 27, scope: !3323)
!3403 = !DILocation(line: 1472, column: 20, scope: !3323)
!3404 = !DILocation(line: 1473, column: 11, scope: !3323)
!3405 = !DILocation(line: 1473, column: 18, scope: !3323)
!3406 = !DILocation(line: 1474, column: 7, scope: !3323)
!3407 = !DILocation(line: 1474, column: 14, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 1474, column: 7)
!3409 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 1474, column: 7)
!3410 = !DILocation(line: 1474, column: 7, scope: !3409)
!3411 = !DILocation(line: 1476, column: 8, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !3, line: 1476, column: 8)
!3413 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 1475, column: 2)
!3414 = !DILocation(line: 1476, column: 22, scope: !3412)
!3415 = !DILocation(line: 1476, column: 8, scope: !3413)
!3416 = !DILocation(line: 1477, column: 6, scope: !3412)
!3417 = !DILocation(line: 1479, column: 27, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3412, file: !3, line: 1479, column: 13)
!3419 = !DILocation(line: 1480, column: 6, scope: !3418)
!3420 = !DILocation(line: 1480, column: 23, scope: !3418)
!3421 = !DILocation(line: 1479, column: 13, scope: !3412)
!3422 = !DILocation(line: 1482, column: 8, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 1481, column: 6)
!3424 = !DILocation(line: 1484, column: 8, scope: !3423)
!3425 = !DILocation(line: 1486, column: 8, scope: !3423)
!3426 = !DILocation(line: 1488, column: 6, scope: !3423)
!3427 = !DILocation(line: 1489, column: 27, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 1489, column: 13)
!3429 = !DILocation(line: 1489, column: 13, scope: !3418)
!3430 = !DILocation(line: 1491, column: 8, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3428, file: !3, line: 1490, column: 6)
!3432 = !DILocation(line: 1493, column: 8, scope: !3431)
!3433 = !DILocation(line: 1495, column: 6, scope: !3431)
!3434 = !DILocation(line: 1474, column: 45, scope: !3408)
!3435 = !DILocation(line: 1474, column: 70, scope: !3408)
!3436 = !DILocation(line: 1474, column: 7, scope: !3408)
!3437 = distinct !{!3437, !3410, !3438}
!3438 = !DILocation(line: 1496, column: 2, scope: !3409)
!3439 = !DILocation(line: 1497, column: 20, scope: !3323)
!3440 = !DILocation(line: 1498, column: 7, scope: !3323)
!3441 = !DILocation(line: 1499, column: 20, scope: !3323)
!3442 = !DILocation(line: 1500, column: 7, scope: !3323)
!3443 = !DILocation(line: 1506, column: 22, scope: !3323)
!3444 = !DILocation(line: 1507, column: 7, scope: !3323)
!3445 = !DILocation(line: 1510, column: 12, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 1510, column: 11)
!3447 = !DILocation(line: 1510, column: 11, scope: !3323)
!3448 = !DILocation(line: 1512, column: 19, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 1511, column: 2)
!3450 = !DILocation(line: 1513, column: 8, scope: !3449)
!3451 = !DILocation(line: 1513, column: 17, scope: !3449)
!3452 = !DILocation(line: 1514, column: 8, scope: !3449)
!3453 = !DILocation(line: 1514, column: 15, scope: !3449)
!3454 = !DILocation(line: 1515, column: 2, scope: !3449)
!3455 = !DILocation(line: 1519, column: 3, scope: !3309)
!3456 = distinct !DISubprogram(name: "convert_nl_goto_reference", scope: !3, file: !3, line: 1740, type: !2931, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3457)
!3457 = !{!3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470}
!3458 = !DILocalVariable(name: "gsi", arg: 1, scope: !3456, file: !3, line: 1740, type: !2933)
!3459 = !DILocalVariable(name: "handled_ops_p", arg: 2, scope: !3456, file: !3, line: 1740, type: !660)
!3460 = !DILocalVariable(name: "wi", arg: 3, scope: !3456, file: !3, line: 1741, type: !1985)
!3461 = !DILocalVariable(name: "info", scope: !3456, file: !3, line: 1743, type: !3065)
!3462 = !DILocalVariable(name: "i", scope: !3456, file: !3, line: 1743, type: !669)
!3463 = !DILocalVariable(name: "label", scope: !3456, file: !3, line: 1744, type: !745)
!3464 = !DILocalVariable(name: "new_label", scope: !3456, file: !3, line: 1744, type: !745)
!3465 = !DILocalVariable(name: "target_context", scope: !3456, file: !3, line: 1744, type: !745)
!3466 = !DILocalVariable(name: "x", scope: !3456, file: !3, line: 1744, type: !745)
!3467 = !DILocalVariable(name: "field", scope: !3456, file: !3, line: 1744, type: !745)
!3468 = !DILocalVariable(name: "slot", scope: !3456, file: !3, line: 1745, type: !1462)
!3469 = !DILocalVariable(name: "call", scope: !3456, file: !3, line: 1746, type: !1007)
!3470 = !DILocalVariable(name: "stmt", scope: !3456, file: !3, line: 1747, type: !1007)
!3471 = !DILocation(line: 0, scope: !3456)
!3472 = !DILocation(line: 1743, column: 65, scope: !3456)
!3473 = !DILocation(line: 1747, column: 17, scope: !3456)
!3474 = !DILocation(line: 1749, column: 7, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 1749, column: 7)
!3476 = !DILocation(line: 1749, column: 26, scope: !3475)
!3477 = !DILocation(line: 1749, column: 7, scope: !3456)
!3478 = !DILocation(line: 1751, column: 22, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 1750, column: 5)
!3480 = !DILocation(line: 1752, column: 7, scope: !3479)
!3481 = !DILocation(line: 1755, column: 11, scope: !3456)
!3482 = !DILocation(line: 1756, column: 7, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 1756, column: 7)
!3484 = !DILocation(line: 1756, column: 25, scope: !3483)
!3485 = !DILocation(line: 1756, column: 7, scope: !3456)
!3486 = !DILocation(line: 1758, column: 22, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1757, column: 5)
!3488 = !DILocation(line: 1759, column: 7, scope: !3487)
!3489 = !DILocation(line: 1762, column: 20, scope: !3456)
!3490 = !DILocation(line: 1763, column: 31, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 1763, column: 7)
!3492 = !DILocation(line: 1763, column: 22, scope: !3491)
!3493 = !DILocation(line: 1763, column: 7, scope: !3456)
!3494 = !DILocation(line: 1765, column: 22, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 1764, column: 5)
!3496 = !DILocation(line: 1766, column: 7, scope: !3495)
!3497 = !DILocation(line: 1769, column: 8, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 1769, column: 3)
!3499 = !DILocation(line: 0, scope: !3498)
!3500 = !DILocation(line: 1769, column: 46, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 1769, column: 3)
!3502 = !DILocation(line: 1769, column: 40, scope: !3501)
!3503 = !DILocation(line: 1769, column: 3, scope: !3498)
!3504 = !DILocation(line: 1769, column: 3, scope: !3501)
!3505 = distinct !{!3505, !3503, !3506}
!3506 = !DILocation(line: 1770, column: 5, scope: !3498)
!3507 = !DILocation(line: 1779, column: 33, scope: !3456)
!3508 = !DILocation(line: 1779, column: 42, scope: !3456)
!3509 = !DILocation(line: 1779, column: 10, scope: !3456)
!3510 = !DILocation(line: 1780, column: 7, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 1780, column: 7)
!3512 = !DILocation(line: 1780, column: 13, scope: !3511)
!3513 = !DILocation(line: 1780, column: 7, scope: !3456)
!3514 = !DILocation(line: 1782, column: 19, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3511, file: !3, line: 1781, column: 5)
!3516 = !DILocation(line: 1783, column: 7, scope: !3515)
!3517 = !DILocation(line: 1783, column: 33, scope: !3515)
!3518 = !DILocation(line: 1784, column: 13, scope: !3515)
!3519 = !DILocation(line: 1785, column: 5, scope: !3515)
!3520 = !DILocation(line: 0, scope: !3511)
!3521 = !DILocation(line: 1790, column: 11, scope: !3456)
!3522 = !DILocation(line: 1791, column: 58, scope: !3456)
!3523 = !DILocation(line: 1791, column: 7, scope: !3456)
!3524 = !DILocation(line: 1792, column: 7, scope: !3456)
!3525 = !DILocation(line: 1793, column: 7, scope: !3456)
!3526 = !DILocation(line: 1794, column: 29, scope: !3456)
!3527 = !DILocation(line: 1795, column: 8, scope: !3456)
!3528 = !DILocation(line: 1794, column: 10, scope: !3456)
!3529 = !DILocation(line: 1796, column: 3, scope: !3456)
!3530 = !DILocation(line: 1799, column: 18, scope: !3456)
!3531 = !DILocation(line: 1800, column: 3, scope: !3456)
!3532 = !DILocation(line: 1801, column: 1, scope: !3456)
!3533 = distinct !DISubprogram(name: "convert_nl_goto_receiver", scope: !3, file: !3, line: 1811, type: !2931, scopeLine: 1813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3534)
!3534 = !{!3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544}
!3535 = !DILocalVariable(name: "gsi", arg: 1, scope: !3533, file: !3, line: 1811, type: !2933)
!3536 = !DILocalVariable(name: "handled_ops_p", arg: 2, scope: !3533, file: !3, line: 1811, type: !660)
!3537 = !DILocalVariable(name: "wi", arg: 3, scope: !3533, file: !3, line: 1812, type: !1985)
!3538 = !DILocalVariable(name: "info", scope: !3533, file: !3, line: 1814, type: !3065)
!3539 = !DILocalVariable(name: "label", scope: !3533, file: !3, line: 1815, type: !745)
!3540 = !DILocalVariable(name: "new_label", scope: !3533, file: !3, line: 1815, type: !745)
!3541 = !DILocalVariable(name: "tmp_gsi", scope: !3533, file: !3, line: 1816, type: !1989)
!3542 = !DILocalVariable(name: "slot", scope: !3533, file: !3, line: 1817, type: !1462)
!3543 = !DILocalVariable(name: "stmt", scope: !3533, file: !3, line: 1818, type: !1007)
!3544 = !DILocalVariable(name: "stmt", scope: !3545, file: !3, line: 1841, type: !1007)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 1840, column: 5)
!3546 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 1839, column: 7)
!3547 = !DILocation(line: 0, scope: !3533)
!3548 = !DILocation(line: 1814, column: 65, scope: !3533)
!3549 = !DILocation(line: 1816, column: 3, scope: !3533)
!3550 = !DILocation(line: 1818, column: 17, scope: !3533)
!3551 = !DILocation(line: 1820, column: 7, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 1820, column: 7)
!3553 = !DILocation(line: 1820, column: 26, scope: !3552)
!3554 = !DILocation(line: 1820, column: 7, scope: !3533)
!3555 = !DILocation(line: 1822, column: 22, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 1821, column: 5)
!3557 = !DILocation(line: 1823, column: 7, scope: !3556)
!3558 = !DILocation(line: 1826, column: 11, scope: !3533)
!3559 = !DILocation(line: 1828, column: 38, scope: !3533)
!3560 = !DILocation(line: 1828, column: 47, scope: !3533)
!3561 = !DILocation(line: 1828, column: 10, scope: !3533)
!3562 = !DILocation(line: 1829, column: 8, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 1829, column: 7)
!3564 = !DILocation(line: 1829, column: 7, scope: !3533)
!3565 = !DILocation(line: 1831, column: 22, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3563, file: !3, line: 1830, column: 5)
!3567 = !DILocation(line: 1832, column: 7, scope: !3566)
!3568 = !DILocation(line: 1837, column: 17, scope: !3533)
!3569 = !DILocation(line: 1838, column: 3, scope: !3533)
!3570 = !DILocation(line: 1839, column: 7, scope: !3546)
!3571 = !DILocation(line: 1839, column: 27, scope: !3546)
!3572 = !DILocation(line: 1839, column: 56, scope: !3546)
!3573 = !DILocation(line: 1839, column: 30, scope: !3546)
!3574 = !DILocation(line: 1839, column: 7, scope: !3533)
!3575 = !DILocation(line: 1841, column: 21, scope: !3545)
!3576 = !DILocation(line: 0, scope: !3545)
!3577 = !DILocation(line: 1842, column: 7, scope: !3545)
!3578 = !DILocation(line: 1843, column: 5, scope: !3545)
!3579 = !DILocation(line: 1845, column: 22, scope: !3533)
!3580 = !DILocation(line: 1846, column: 10, scope: !3533)
!3581 = !DILocation(line: 1847, column: 3, scope: !3533)
!3582 = !DILocation(line: 1849, column: 18, scope: !3533)
!3583 = !DILocation(line: 1850, column: 3, scope: !3533)
!3584 = !DILocation(line: 1851, column: 1, scope: !3533)
!3585 = distinct !DISubprogram(name: "convert_all_function_calls", scope: !3, file: !3, line: 2055, type: !3586, scopeLine: 2056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3588)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{null, !669}
!3588 = !{!3589, !3590, !3591, !3592, !3593, !3597, !3602}
!3589 = !DILocalVariable(name: "root", arg: 1, scope: !3585, file: !3, line: 2055, type: !669)
!3590 = !DILocalVariable(name: "n", scope: !3585, file: !3, line: 2057, type: !669)
!3591 = !DILocalVariable(name: "iter_count", scope: !3585, file: !3, line: 2058, type: !662)
!3592 = !DILocalVariable(name: "any_changed", scope: !3585, file: !3, line: 2059, type: !661)
!3593 = !DILocalVariable(name: "decl", scope: !3594, file: !3, line: 2065, type: !745)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 2064, column: 5)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !3, line: 2063, column: 3)
!3596 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 2063, column: 3)
!3597 = !DILocalVariable(name: "decl", scope: !3598, file: !3, line: 2095, type: !745)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !3, line: 2094, column: 2)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !3, line: 2093, column: 7)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !3, line: 2093, column: 7)
!3601 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 2086, column: 5)
!3602 = !DILocalVariable(name: "old_static_chain", scope: !3598, file: !3, line: 2096, type: !661)
!3603 = !DILocation(line: 0, scope: !3585)
!3604 = !DILocation(line: 2063, column: 3, scope: !3596)
!3605 = !DILocation(line: 0, scope: !3596)
!3606 = !DILocation(line: 2085, column: 3, scope: !3585)
!3607 = !DILocation(line: 2065, column: 22, scope: !3594)
!3608 = !DILocation(line: 0, scope: !3594)
!3609 = !DILocation(line: 2066, column: 15, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3594, file: !3, line: 2066, column: 11)
!3611 = !DILocation(line: 2066, column: 12, scope: !3610)
!3612 = !DILocation(line: 2066, column: 21, scope: !3610)
!3613 = !DILocation(line: 2066, column: 29, scope: !3610)
!3614 = !DILocation(line: 2066, column: 26, scope: !3610)
!3615 = !DILocation(line: 2066, column: 40, scope: !3610)
!3616 = !DILocation(line: 2066, column: 47, scope: !3610)
!3617 = !DILocation(line: 2066, column: 44, scope: !3610)
!3618 = !DILocation(line: 2066, column: 11, scope: !3594)
!3619 = !DILocation(line: 2068, column: 4, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 2067, column: 2)
!3621 = !DILocation(line: 2068, column: 29, scope: !3620)
!3622 = !DILocation(line: 2069, column: 8, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 2069, column: 8)
!3624 = !DILocation(line: 2069, column: 18, scope: !3623)
!3625 = !DILocation(line: 2069, column: 22, scope: !3623)
!3626 = !DILocation(line: 2069, column: 33, scope: !3623)
!3627 = !DILocation(line: 2069, column: 8, scope: !3620)
!3628 = !DILocation(line: 2071, column: 19, scope: !3623)
!3629 = !DILocation(line: 2071, column: 8, scope: !3623)
!3630 = !DILocation(line: 2070, column: 6, scope: !3623)
!3631 = !DILocation(line: 2074, column: 2, scope: !3610)
!3632 = !DILocation(line: 2074, column: 27, scope: !3610)
!3633 = !DILocation(line: 2063, column: 3, scope: !3595)
!3634 = distinct !{!3634, !3604, !3635}
!3635 = !DILocation(line: 2075, column: 5, scope: !3596)
!3636 = !DILocation(line: 2088, column: 17, scope: !3601)
!3637 = !DILocation(line: 2090, column: 11, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3601, file: !3, line: 2090, column: 11)
!3639 = !DILocation(line: 2090, column: 21, scope: !3638)
!3640 = !DILocation(line: 2090, column: 25, scope: !3638)
!3641 = !DILocation(line: 2090, column: 36, scope: !3638)
!3642 = !DILocation(line: 2090, column: 11, scope: !3601)
!3643 = !DILocation(line: 2091, column: 2, scope: !3638)
!3644 = !DILocation(line: 2093, column: 7, scope: !3600)
!3645 = !DILocation(line: 0, scope: !3600)
!3646 = !DILocation(line: 2087, column: 19, scope: !3601)
!3647 = !DILocation(line: 2095, column: 19, scope: !3598)
!3648 = !DILocation(line: 0, scope: !3598)
!3649 = !DILocation(line: 2096, column: 28, scope: !3598)
!3650 = !DILocation(line: 2098, column: 4, scope: !3598)
!3651 = !DILocation(line: 2100, column: 4, scope: !3598)
!3652 = !DILocation(line: 2104, column: 9, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 2104, column: 8)
!3654 = !DILocation(line: 2104, column: 26, scope: !3653)
!3655 = !DILocation(line: 2104, column: 29, scope: !3653)
!3656 = !DILocation(line: 2104, column: 8, scope: !3598)
!3657 = !DILocation(line: 0, scope: !3601)
!3658 = !DILocation(line: 2093, column: 7, scope: !3599)
!3659 = distinct !{!3659, !3644, !3660}
!3660 = !DILocation(line: 2106, column: 2, scope: !3600)
!3661 = !DILocation(line: 2107, column: 5, scope: !3601)
!3662 = distinct !{!3662, !3606, !3663}
!3663 = !DILocation(line: 2108, column: 21, scope: !3585)
!3664 = !DILocation(line: 2110, column: 7, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 2110, column: 7)
!3666 = !DILocation(line: 2110, column: 17, scope: !3665)
!3667 = !DILocation(line: 2110, column: 21, scope: !3665)
!3668 = !DILocation(line: 2110, column: 32, scope: !3665)
!3669 = !DILocation(line: 2110, column: 7, scope: !3585)
!3670 = !DILocation(line: 2111, column: 5, scope: !3665)
!3671 = !DILocation(line: 2113, column: 1, scope: !3585)
!3672 = distinct !DISubprogram(name: "finalize_nesting_tree", scope: !3, file: !3, line: 2474, type: !3586, scopeLine: 2475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3673)
!3673 = !{!3674, !3675}
!3674 = !DILocalVariable(name: "root", arg: 1, scope: !3672, file: !3, line: 2474, type: !669)
!3675 = !DILocalVariable(name: "n", scope: !3672, file: !3, line: 2476, type: !669)
!3676 = !DILocation(line: 0, scope: !3672)
!3677 = !DILocation(line: 2477, column: 3, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3672, file: !3, line: 2477, column: 3)
!3679 = !DILocation(line: 0, scope: !3678)
!3680 = !DILocation(line: 2478, column: 5, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3678, file: !3, line: 2477, column: 3)
!3682 = !DILocation(line: 2477, column: 3, scope: !3681)
!3683 = distinct !{!3683, !3677, !3684}
!3684 = !DILocation(line: 2478, column: 31, scope: !3678)
!3685 = !DILocation(line: 2479, column: 1, scope: !3672)
!3686 = distinct !DISubprogram(name: "unnest_nesting_tree", scope: !3, file: !3, line: 2498, type: !3586, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3687)
!3687 = !{!3688, !3689}
!3688 = !DILocalVariable(name: "root", arg: 1, scope: !3686, file: !3, line: 2498, type: !669)
!3689 = !DILocalVariable(name: "n", scope: !3686, file: !3, line: 2500, type: !669)
!3690 = !DILocation(line: 0, scope: !3686)
!3691 = !DILocation(line: 2501, column: 3, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 2501, column: 3)
!3693 = !DILocation(line: 0, scope: !3692)
!3694 = !DILocation(line: 2502, column: 5, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 2501, column: 3)
!3696 = !DILocation(line: 2501, column: 3, scope: !3695)
!3697 = distinct !{!3697, !3691, !3698}
!3698 = !DILocation(line: 2502, column: 29, scope: !3692)
!3699 = !DILocation(line: 2503, column: 1, scope: !3686)
!3700 = distinct !DISubprogram(name: "free_nesting_tree", scope: !3, file: !3, line: 2508, type: !3586, scopeLine: 2509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3701)
!3701 = !{!3702, !3703, !3704}
!3702 = !DILocalVariable(name: "root", arg: 1, scope: !3700, file: !3, line: 2508, type: !669)
!3703 = !DILocalVariable(name: "node", scope: !3700, file: !3, line: 2510, type: !669)
!3704 = !DILocalVariable(name: "next", scope: !3700, file: !3, line: 2510, type: !669)
!3705 = !DILocation(line: 0, scope: !3700)
!3706 = !DILocation(line: 2512, column: 10, scope: !3700)
!3707 = !DILocation(line: 2513, column: 3, scope: !3700)
!3708 = !DILocation(line: 2515, column: 14, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 2514, column: 5)
!3710 = !DILocation(line: 2516, column: 34, scope: !3709)
!3711 = !DILocation(line: 2516, column: 7, scope: !3709)
!3712 = !DILocation(line: 2517, column: 34, scope: !3709)
!3713 = !DILocation(line: 2517, column: 7, scope: !3709)
!3714 = !DILocation(line: 2518, column: 13, scope: !3709)
!3715 = !DILocation(line: 2518, column: 7, scope: !3709)
!3716 = !DILocation(line: 2520, column: 5, scope: !3709)
!3717 = distinct !{!3717, !3707, !3718}
!3718 = !DILocation(line: 2521, column: 14, scope: !3700)
!3719 = !DILocation(line: 2522, column: 1, scope: !3700)
!3720 = distinct !DISubprogram(name: "check_for_nested_with_variably_modified", scope: !3, file: !3, line: 695, type: !3721, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3723)
!3721 = !DISubroutineType(types: !3722)
!3722 = !{!661, !745, !745}
!3723 = !{!3724, !3725, !3726, !3727}
!3724 = !DILocalVariable(name: "fndecl", arg: 1, scope: !3720, file: !3, line: 695, type: !745)
!3725 = !DILocalVariable(name: "orig_fndecl", arg: 2, scope: !3720, file: !3, line: 695, type: !745)
!3726 = !DILocalVariable(name: "cgn", scope: !3720, file: !3, line: 697, type: !2015)
!3727 = !DILocalVariable(name: "arg", scope: !3720, file: !3, line: 698, type: !745)
!3728 = !DILocation(line: 0, scope: !3720)
!3729 = !DILocation(line: 697, column: 29, scope: !3720)
!3730 = !DILocation(line: 700, column: 19, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3720, file: !3, line: 700, column: 3)
!3732 = !DILocation(line: 700, column: 8, scope: !3731)
!3733 = !DILocation(line: 0, scope: !3731)
!3734 = !DILocation(line: 700, column: 3, scope: !3731)
!3735 = !DILocation(line: 702, column: 18, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 702, column: 7)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 701, column: 5)
!3738 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 700, column: 3)
!3739 = !DILocation(line: 702, column: 12, scope: !3736)
!3740 = !DILocation(line: 0, scope: !3736)
!3741 = !DILocation(line: 702, column: 7, scope: !3736)
!3742 = !DILocation(line: 703, column: 32, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 703, column: 6)
!3744 = distinct !DILexicalBlock(scope: !3736, file: !3, line: 702, column: 7)
!3745 = !DILocation(line: 703, column: 6, scope: !3743)
!3746 = !DILocation(line: 703, column: 6, scope: !3744)
!3747 = !DILocation(line: 702, column: 57, scope: !3744)
!3748 = !DILocation(line: 702, column: 7, scope: !3744)
!3749 = distinct !{!3749, !3741, !3750}
!3750 = !DILocation(line: 704, column: 11, scope: !3736)
!3751 = !DILocation(line: 706, column: 57, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 706, column: 11)
!3753 = !DILocation(line: 706, column: 11, scope: !3752)
!3754 = !DILocation(line: 706, column: 11, scope: !3737)
!3755 = !DILocation(line: 700, column: 44, scope: !3738)
!3756 = !DILocation(line: 700, column: 3, scope: !3738)
!3757 = distinct !{!3757, !3734, !3758}
!3758 = !DILocation(line: 708, column: 5, scope: !3731)
!3759 = !DILocation(line: 711, column: 1, scope: !3720)
!3760 = distinct !DISubprogram(name: "iter_nestinfo_start", scope: !3, file: !3, line: 109, type: !3761, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3763)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{!669, !669}
!3763 = !{!3764}
!3764 = !DILocalVariable(name: "root", arg: 1, scope: !3760, file: !3, line: 109, type: !669)
!3765 = !DILocation(line: 0, scope: !3760)
!3766 = !DILocation(line: 111, column: 3, scope: !3760)
!3767 = !DILocation(line: 111, column: 16, scope: !3760)
!3768 = distinct !{!3768, !3766, !3769}
!3769 = !DILocation(line: 112, column: 18, scope: !3760)
!3770 = !DILocation(line: 113, column: 3, scope: !3760)
!3771 = distinct !DISubprogram(name: "walk_function", scope: !3, file: !3, line: 599, type: !2927, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3772)
!3772 = !{!3773, !3774, !3775}
!3773 = !DILocalVariable(name: "callback_stmt", arg: 1, scope: !3771, file: !3, line: 599, type: !2929)
!3774 = !DILocalVariable(name: "callback_op", arg: 2, scope: !3771, file: !3, line: 599, type: !2934)
!3775 = !DILocalVariable(name: "info", arg: 3, scope: !3771, file: !3, line: 600, type: !669)
!3776 = !DILocation(line: 0, scope: !3771)
!3777 = !DILocation(line: 602, column: 67, scope: !3771)
!3778 = !DILocation(line: 602, column: 48, scope: !3771)
!3779 = !DILocation(line: 602, column: 3, scope: !3771)
!3780 = !DILocation(line: 603, column: 1, scope: !3771)
!3781 = distinct !DISubprogram(name: "iter_nestinfo_next", scope: !3, file: !3, line: 117, type: !3761, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3782)
!3782 = !{!3783}
!3783 = !DILocalVariable(name: "node", arg: 1, scope: !3781, file: !3, line: 117, type: !669)
!3784 = !DILocation(line: 0, scope: !3781)
!3785 = !DILocation(line: 119, column: 13, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 119, column: 7)
!3787 = !DILocation(line: 119, column: 7, scope: !3786)
!3788 = !DILocation(line: 119, column: 7, scope: !3781)
!3789 = !DILocation(line: 120, column: 12, scope: !3786)
!3790 = !DILocation(line: 120, column: 5, scope: !3786)
!3791 = !DILocation(line: 121, column: 16, scope: !3781)
!3792 = !DILocation(line: 121, column: 3, scope: !3781)
!3793 = !DILocation(line: 122, column: 1, scope: !3781)
!3794 = distinct !DISubprogram(name: "walk_body", scope: !3, file: !3, line: 584, type: !3795, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3797)
!3795 = !DISubroutineType(types: !3796)
!3796 = !{null, !2929, !2934, !669, !997}
!3797 = !{!3798, !3799, !3800, !3801, !3802}
!3798 = !DILocalVariable(name: "callback_stmt", arg: 1, scope: !3794, file: !3, line: 584, type: !2929)
!3799 = !DILocalVariable(name: "callback_op", arg: 2, scope: !3794, file: !3, line: 584, type: !2934)
!3800 = !DILocalVariable(name: "info", arg: 3, scope: !3794, file: !3, line: 585, type: !669)
!3801 = !DILocalVariable(name: "seq", arg: 4, scope: !3794, file: !3, line: 585, type: !997)
!3802 = !DILocalVariable(name: "wi", scope: !3794, file: !3, line: 587, type: !1986)
!3803 = !DILocation(line: 0, scope: !3794)
!3804 = !DILocation(line: 587, column: 3, scope: !3794)
!3805 = !DILocation(line: 589, column: 3, scope: !3794)
!3806 = !DILocation(line: 590, column: 6, scope: !3794)
!3807 = !DILocation(line: 590, column: 11, scope: !3794)
!3808 = !DILocation(line: 591, column: 6, scope: !3794)
!3809 = !DILocation(line: 591, column: 15, scope: !3794)
!3810 = !DILocation(line: 592, column: 3, scope: !3794)
!3811 = !DILocation(line: 593, column: 1, scope: !3794)
!3812 = distinct !DISubprogram(name: "gsi_stmt", scope: !584, file: !584, line: 4501, type: !3813, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3815)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!1007, !1989}
!3815 = !{!3816}
!3816 = !DILocalVariable(name: "i", arg: 1, scope: !3812, file: !584, line: 4501, type: !1989)
!3817 = !DILocation(line: 4501, column: 32, scope: !3812)
!3818 = !DILocation(line: 4503, column: 12, scope: !3812)
!3819 = !DILocation(line: 4503, column: 17, scope: !3812)
!3820 = !DILocation(line: 4503, column: 3, scope: !3812)
!3821 = distinct !DISubprogram(name: "gimple_code", scope: !584, file: !584, line: 1052, type: !3822, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3825)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{!583, !3824}
!3824 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !682, line: 60, baseType: !1983)
!3825 = !{!3826}
!3826 = !DILocalVariable(name: "g", arg: 1, scope: !3821, file: !584, line: 1052, type: !3824)
!3827 = !DILocation(line: 0, scope: !3821)
!3828 = !DILocation(line: 1054, column: 20, scope: !3821)
!3829 = !DILocation(line: 1054, column: 3, scope: !3821)
!3830 = distinct !DISubprogram(name: "gimple_goto_dest", scope: !584, file: !584, line: 2465, type: !3831, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3833)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{!745, !3824}
!3833 = !{!3834}
!3834 = !DILocalVariable(name: "gs", arg: 1, scope: !3830, file: !584, line: 2465, type: !3824)
!3835 = !DILocation(line: 0, scope: !3830)
!3836 = !DILocation(line: 2468, column: 10, scope: !3830)
!3837 = !DILocation(line: 2468, column: 3, scope: !3830)
!3838 = distinct !DISubprogram(name: "convert_nonlocal_omp_clauses", scope: !3, file: !3, line: 1053, type: !3839, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3841)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!661, !1042, !1985}
!3841 = !{!3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3858}
!3842 = !DILocalVariable(name: "pclauses", arg: 1, scope: !3838, file: !3, line: 1053, type: !1042)
!3843 = !DILocalVariable(name: "wi", arg: 2, scope: !3838, file: !3, line: 1053, type: !1985)
!3844 = !DILocalVariable(name: "info", scope: !3838, file: !3, line: 1055, type: !3065)
!3845 = !DILocalVariable(name: "need_chain", scope: !3838, file: !3, line: 1056, type: !661)
!3846 = !DILocalVariable(name: "need_stmts", scope: !3838, file: !3, line: 1056, type: !661)
!3847 = !DILocalVariable(name: "clause", scope: !3838, file: !3, line: 1057, type: !745)
!3848 = !DILocalVariable(name: "decl", scope: !3838, file: !3, line: 1057, type: !745)
!3849 = !DILocalVariable(name: "dummy", scope: !3838, file: !3, line: 1058, type: !662)
!3850 = !DILocalVariable(name: "new_suppress", scope: !3838, file: !3, line: 1059, type: !681)
!3851 = !DILocalVariable(name: "old_context", scope: !3852, file: !3, line: 1129, type: !745)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 1128, column: 6)
!3853 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 1127, column: 8)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 1125, column: 2)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !3, line: 1123, column: 5)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1123, column: 5)
!3857 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 1122, column: 7)
!3858 = !DILabel(scope: !3859, name: "do_decl_clause", file: !3, line: 1082)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 1067, column: 2)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 1065, column: 5)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 1064, column: 3)
!3862 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 1064, column: 3)
!3863 = !DILocation(line: 0, scope: !3838)
!3864 = !DILocation(line: 1055, column: 65, scope: !3838)
!3865 = !DILocation(line: 1058, column: 3, scope: !3838)
!3866 = !DILocation(line: 1061, column: 18, scope: !3838)
!3867 = !DILocation(line: 1062, column: 36, scope: !3838)
!3868 = !DILocation(line: 1062, column: 3, scope: !3838)
!3869 = !DILocation(line: 0, scope: !3859)
!3870 = !DILocation(line: 0, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1087, column: 8)
!3872 = !DILocation(line: 1064, column: 8, scope: !3862)
!3873 = !DILocation(line: 1056, column: 8, scope: !3838)
!3874 = !DILocation(line: 1056, column: 28, scope: !3838)
!3875 = !DILocation(line: 0, scope: !3862)
!3876 = !DILocation(line: 1064, column: 3, scope: !3862)
!3877 = !DILocation(line: 1066, column: 15, scope: !3860)
!3878 = !DILocation(line: 1066, column: 7, scope: !3860)
!3879 = !DILocation(line: 1069, column: 8, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1069, column: 8)
!3881 = !DILocation(line: 1069, column: 8, scope: !3859)
!3882 = !DILocation(line: 1071, column: 4, scope: !3859)
!3883 = !DILocation(line: 1074, column: 8, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1074, column: 8)
!3885 = !DILocation(line: 1074, column: 8, scope: !3859)
!3886 = !DILocation(line: 1076, column: 4, scope: !3859)
!3887 = !DILocation(line: 1082, column: 2, scope: !3859)
!3888 = !DILocation(line: 1083, column: 11, scope: !3859)
!3889 = !DILocation(line: 1084, column: 8, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1084, column: 8)
!3891 = !DILocation(line: 1084, column: 25, scope: !3890)
!3892 = !DILocation(line: 1085, column: 8, scope: !3890)
!3893 = !DILocation(line: 1085, column: 12, scope: !3890)
!3894 = !DILocation(line: 1085, column: 31, scope: !3890)
!3895 = !DILocation(line: 1085, column: 34, scope: !3890)
!3896 = !DILocation(line: 1084, column: 8, scope: !3859)
!3897 = !DILocation(line: 1087, column: 8, scope: !3871)
!3898 = !DILocation(line: 1087, column: 46, scope: !3871)
!3899 = !DILocation(line: 1087, column: 37, scope: !3871)
!3900 = !DILocation(line: 1087, column: 8, scope: !3859)
!3901 = !DILocation(line: 1089, column: 38, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 1088, column: 6)
!3903 = !DILocation(line: 1089, column: 8, scope: !3902)
!3904 = !DILocation(line: 1090, column: 35, scope: !3902)
!3905 = !DILocation(line: 1090, column: 33, scope: !3902)
!3906 = !DILocation(line: 1092, column: 6, scope: !3902)
!3907 = !DILocation(line: 1096, column: 8, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1096, column: 8)
!3909 = !DILocation(line: 1096, column: 48, scope: !3908)
!3910 = !DILocation(line: 1096, column: 8, scope: !3859)
!3911 = !DILocation(line: 1101, column: 17, scope: !3859)
!3912 = !DILocation(line: 1102, column: 15, scope: !3859)
!3913 = !DILocation(line: 1103, column: 36, scope: !3859)
!3914 = !DILocation(line: 1103, column: 4, scope: !3859)
!3915 = !DILocation(line: 1105, column: 4, scope: !3859)
!3916 = !DILocation(line: 1116, column: 4, scope: !3859)
!3917 = !DILocation(line: 1117, column: 2, scope: !3859)
!3918 = !DILocation(line: 1064, column: 46, scope: !3861)
!3919 = !DILocation(line: 1064, column: 3, scope: !3861)
!3920 = distinct !{!3920, !3876, !3921}
!3921 = !DILocation(line: 1118, column: 5, scope: !3862)
!3922 = !DILocation(line: 1120, column: 28, scope: !3838)
!3923 = !DILocation(line: 1122, column: 7, scope: !3857)
!3924 = !DILocation(line: 1122, column: 7, scope: !3838)
!3925 = !DILocation(line: 0, scope: !3852)
!3926 = !DILocation(line: 1123, column: 10, scope: !3856)
!3927 = !DILocation(line: 0, scope: !3856)
!3928 = !DILocation(line: 1123, column: 5, scope: !3856)
!3929 = !DILocation(line: 1124, column: 15, scope: !3855)
!3930 = !DILocation(line: 1124, column: 7, scope: !3855)
!3931 = !DILocation(line: 1127, column: 8, scope: !3853)
!3932 = !DILocation(line: 1127, column: 8, scope: !3854)
!3933 = !DILocation(line: 1130, column: 5, scope: !3852)
!3934 = !DILocation(line: 1132, column: 11, scope: !3852)
!3935 = !DILocation(line: 1132, column: 3, scope: !3852)
!3936 = !DILocation(line: 1135, column: 5, scope: !3852)
!3937 = !DILocation(line: 1133, column: 8, scope: !3852)
!3938 = !DILocation(line: 1138, column: 5, scope: !3852)
!3939 = !DILocation(line: 1136, column: 8, scope: !3852)
!3940 = !DILocation(line: 1139, column: 8, scope: !3852)
!3941 = !DILocation(line: 1140, column: 3, scope: !3852)
!3942 = !DILocation(line: 1141, column: 6, scope: !3852)
!3943 = !DILocation(line: 1147, column: 8, scope: !3854)
!3944 = !DILocation(line: 1145, column: 4, scope: !3854)
!3945 = !DILocation(line: 1148, column: 4, scope: !3854)
!3946 = !DILocation(line: 1123, column: 48, scope: !3855)
!3947 = !DILocation(line: 1123, column: 5, scope: !3855)
!3948 = distinct !{!3948, !3928, !3949}
!3949 = !DILocation(line: 1152, column: 2, scope: !3856)
!3950 = !DILocation(line: 1155, column: 1, scope: !3838)
!3951 = !DILocation(line: 1154, column: 3, scope: !3838)
!3952 = distinct !DISubprogram(name: "gimple_omp_taskreg_clauses_ptr", scope: !584, file: !584, line: 3799, type: !3953, scopeLine: 3800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3955)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!1042, !1007}
!3955 = !{!3956}
!3956 = !DILocalVariable(name: "gs", arg: 1, scope: !3952, file: !584, line: 3799, type: !1007)
!3957 = !DILocation(line: 0, scope: !3952)
!3958 = !DILocation(line: 3801, column: 7, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3952, file: !584, line: 3801, column: 7)
!3960 = !DILocation(line: 3803, column: 35, scope: !3952)
!3961 = !DILocation(line: 3803, column: 3, scope: !3952)
!3962 = distinct !DISubprogram(name: "get_chain_decl", scope: !3, file: !3, line: 323, type: !3963, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3965)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!745, !669}
!3965 = !{!3966, !3967, !3968}
!3966 = !DILocalVariable(name: "info", arg: 1, scope: !3962, file: !3, line: 323, type: !669)
!3967 = !DILocalVariable(name: "decl", scope: !3962, file: !3, line: 325, type: !745)
!3968 = !DILocalVariable(name: "type", scope: !3969, file: !3, line: 329, type: !745)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 328, column: 5)
!3970 = distinct !DILexicalBlock(scope: !3962, file: !3, line: 327, column: 7)
!3971 = !DILocation(line: 0, scope: !3962)
!3972 = !DILocation(line: 325, column: 21, scope: !3962)
!3973 = !DILocation(line: 327, column: 8, scope: !3970)
!3974 = !DILocation(line: 327, column: 7, scope: !3962)
!3975 = !DILocation(line: 331, column: 36, scope: !3969)
!3976 = !DILocation(line: 331, column: 14, scope: !3969)
!3977 = !DILocation(line: 0, scope: !3969)
!3978 = !DILocation(line: 332, column: 14, scope: !3969)
!3979 = !DILocation(line: 340, column: 14, scope: !3969)
!3980 = !DILocation(line: 342, column: 7, scope: !3969)
!3981 = !DILocation(line: 342, column: 30, scope: !3969)
!3982 = !DILocation(line: 343, column: 29, scope: !3969)
!3983 = !DILocation(line: 344, column: 7, scope: !3969)
!3984 = !DILocation(line: 344, column: 24, scope: !3969)
!3985 = !DILocation(line: 345, column: 35, scope: !3969)
!3986 = !DILocation(line: 345, column: 7, scope: !3969)
!3987 = !DILocation(line: 345, column: 27, scope: !3969)
!3988 = !DILocation(line: 346, column: 7, scope: !3969)
!3989 = !DILocation(line: 346, column: 28, scope: !3969)
!3990 = !DILocation(line: 350, column: 28, scope: !3969)
!3991 = !DILocation(line: 352, column: 24, scope: !3969)
!3992 = !DILocation(line: 354, column: 11, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 354, column: 11)
!3994 = !DILocation(line: 355, column: 11, scope: !3993)
!3995 = !DILocation(line: 355, column: 15, scope: !3993)
!3996 = !DILocation(line: 355, column: 26, scope: !3993)
!3997 = !DILocation(line: 356, column: 4, scope: !3993)
!3998 = !DILocation(line: 356, column: 8, scope: !3993)
!3999 = !DILocation(line: 354, column: 11, scope: !3969)
!4000 = !DILocation(line: 358, column: 15, scope: !3993)
!4001 = !DILocation(line: 358, column: 4, scope: !3993)
!4002 = !DILocation(line: 357, column: 2, scope: !3993)
!4003 = !DILocation(line: 360, column: 7, scope: !3969)
!4004 = !DILocation(line: 360, column: 41, scope: !3969)
!4005 = !DILocation(line: 361, column: 5, scope: !3969)
!4006 = !DILocation(line: 362, column: 3, scope: !3962)
!4007 = distinct !DISubprogram(name: "gimple_location", scope: !584, file: !584, line: 1139, type: !4008, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4010)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!867, !3824}
!4010 = !{!4011}
!4011 = !DILocalVariable(name: "g", arg: 1, scope: !4007, file: !584, line: 1139, type: !3824)
!4012 = !DILocation(line: 0, scope: !4007)
!4013 = !DILocation(line: 1141, column: 20, scope: !4007)
!4014 = !DILocation(line: 1141, column: 3, scope: !4007)
!4015 = distinct !DISubprogram(name: "gimple_omp_taskreg_clauses", scope: !584, file: !584, line: 3788, type: !3831, scopeLine: 3789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4016)
!4016 = !{!4017}
!4017 = !DILocalVariable(name: "gs", arg: 1, scope: !4015, file: !584, line: 3788, type: !3824)
!4018 = !DILocation(line: 0, scope: !4015)
!4019 = !DILocation(line: 3790, column: 7, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4015, file: !584, line: 3790, column: 7)
!4021 = !DILocation(line: 3792, column: 34, scope: !4015)
!4022 = !DILocation(line: 3792, column: 3, scope: !4015)
!4023 = distinct !DISubprogram(name: "gimple_omp_taskreg_set_clauses", scope: !584, file: !584, line: 3811, type: !4024, scopeLine: 3812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4026)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{null, !1007, !745}
!4026 = !{!4027, !4028}
!4027 = !DILocalVariable(name: "gs", arg: 1, scope: !4023, file: !584, line: 3811, type: !1007)
!4028 = !DILocalVariable(name: "clauses", arg: 2, scope: !4023, file: !584, line: 3811, type: !745)
!4029 = !DILocation(line: 0, scope: !4023)
!4030 = !DILocation(line: 3813, column: 7, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4023, file: !584, line: 3813, column: 7)
!4032 = !DILocation(line: 3815, column: 27, scope: !4023)
!4033 = !DILocation(line: 3815, column: 35, scope: !4023)
!4034 = !DILocation(line: 3816, column: 1, scope: !4023)
!4035 = distinct !DISubprogram(name: "gimple_omp_body", scope: !584, file: !584, line: 3363, type: !4036, scopeLine: 3364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4038)
!4036 = !DISubroutineType(types: !4037)
!4037 = !{!997, !1007}
!4038 = !{!4039}
!4039 = !DILocalVariable(name: "gs", arg: 1, scope: !4035, file: !584, line: 3363, type: !1007)
!4040 = !DILocation(line: 0, scope: !4035)
!4041 = !DILocation(line: 3365, column: 18, scope: !4035)
!4042 = !DILocation(line: 3365, column: 3, scope: !4035)
!4043 = distinct !DISubprogram(name: "gimple_seq_first_stmt", scope: !584, file: !584, line: 168, type: !4044, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4049)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{!1007, !4046}
!4046 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !682, line: 67, baseType: !4047)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !999)
!4049 = !{!4050, !4051}
!4050 = !DILocalVariable(name: "s", arg: 1, scope: !4043, file: !584, line: 168, type: !4046)
!4051 = !DILocalVariable(name: "n", scope: !4043, file: !584, line: 170, type: !1002)
!4052 = !DILocation(line: 0, scope: !4043)
!4053 = !DILocation(line: 170, column: 23, scope: !4043)
!4054 = !DILocation(line: 171, column: 10, scope: !4043)
!4055 = !DILocation(line: 171, column: 19, scope: !4043)
!4056 = !DILocation(line: 171, column: 3, scope: !4043)
!4057 = distinct !DISubprogram(name: "gimple_omp_for_clauses_ptr", scope: !584, file: !584, line: 3420, type: !3953, scopeLine: 3421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4058)
!4058 = !{!4059}
!4059 = !DILocalVariable(name: "gs", arg: 1, scope: !4057, file: !584, line: 3420, type: !1007)
!4060 = !DILocation(line: 0, scope: !4057)
!4061 = !DILocation(line: 3423, column: 30, scope: !4057)
!4062 = !DILocation(line: 3423, column: 3, scope: !4057)
!4063 = distinct !DISubprogram(name: "walk_gimple_omp_for", scope: !3, file: !3, line: 608, type: !4064, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4066)
!4064 = !DISubroutineType(types: !4065)
!4065 = !{null, !1007, !2929, !2934, !669}
!4066 = !{!4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075}
!4067 = !DILocalVariable(name: "for_stmt", arg: 1, scope: !4063, file: !3, line: 608, type: !1007)
!4068 = !DILocalVariable(name: "callback_stmt", arg: 2, scope: !4063, file: !3, line: 609, type: !2929)
!4069 = !DILocalVariable(name: "callback_op", arg: 3, scope: !4063, file: !3, line: 609, type: !2934)
!4070 = !DILocalVariable(name: "info", arg: 4, scope: !4063, file: !3, line: 610, type: !669)
!4071 = !DILocalVariable(name: "wi", scope: !4063, file: !3, line: 612, type: !1986)
!4072 = !DILocalVariable(name: "seq", scope: !4063, file: !3, line: 613, type: !997)
!4073 = !DILocalVariable(name: "t", scope: !4063, file: !3, line: 614, type: !745)
!4074 = !DILocalVariable(name: "i", scope: !4063, file: !3, line: 615, type: !1153)
!4075 = !DILocalVariable(name: "pre_body", scope: !4076, file: !3, line: 652, type: !997)
!4076 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 651, column: 5)
!4077 = distinct !DILexicalBlock(scope: !4063, file: !3, line: 648, column: 7)
!4078 = !DILocation(line: 0, scope: !4063)
!4079 = !DILocation(line: 612, column: 3, scope: !4063)
!4080 = !DILocation(line: 617, column: 48, scope: !4063)
!4081 = !DILocation(line: 617, column: 3, scope: !4063)
!4082 = !DILocation(line: 619, column: 9, scope: !4063)
!4083 = !DILocation(line: 620, column: 3, scope: !4063)
!4084 = !DILocation(line: 621, column: 6, scope: !4063)
!4085 = !DILocation(line: 621, column: 11, scope: !4063)
!4086 = !DILocation(line: 622, column: 12, scope: !4063)
!4087 = !DILocation(line: 0, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 625, column: 5)
!4089 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 624, column: 3)
!4090 = distinct !DILexicalBlock(scope: !4063, file: !3, line: 624, column: 3)
!4091 = !DILocation(line: 624, column: 8, scope: !4090)
!4092 = !DILocation(line: 0, scope: !4090)
!4093 = !DILocation(line: 624, column: 19, scope: !4089)
!4094 = !DILocation(line: 624, column: 17, scope: !4089)
!4095 = !DILocation(line: 624, column: 3, scope: !4090)
!4096 = !DILocation(line: 626, column: 19, scope: !4088)
!4097 = !DILocation(line: 627, column: 7, scope: !4088)
!4098 = !DILocation(line: 629, column: 19, scope: !4088)
!4099 = !DILocation(line: 630, column: 17, scope: !4088)
!4100 = !DILocation(line: 631, column: 7, scope: !4088)
!4101 = !DILocation(line: 634, column: 19, scope: !4088)
!4102 = !DILocation(line: 635, column: 17, scope: !4088)
!4103 = !DILocation(line: 636, column: 7, scope: !4088)
!4104 = !DILocation(line: 639, column: 11, scope: !4088)
!4105 = !DILocation(line: 640, column: 7, scope: !4088)
!4106 = !DILocation(line: 641, column: 19, scope: !4088)
!4107 = !DILocation(line: 642, column: 7, scope: !4088)
!4108 = !DILocation(line: 643, column: 19, scope: !4088)
!4109 = !DILocation(line: 644, column: 17, scope: !4088)
!4110 = !DILocation(line: 645, column: 7, scope: !4088)
!4111 = !DILocation(line: 624, column: 56, scope: !4089)
!4112 = !DILocation(line: 624, column: 3, scope: !4089)
!4113 = distinct !{!4113, !4095, !4114}
!4114 = !DILocation(line: 646, column: 5, scope: !4090)
!4115 = !DILocation(line: 648, column: 7, scope: !4077)
!4116 = !DILocation(line: 648, column: 7, scope: !4063)
!4117 = !DILocation(line: 649, column: 5, scope: !4077)
!4118 = !DILocation(line: 652, column: 7, scope: !4076)
!4119 = !DILocation(line: 652, column: 29, scope: !4076)
!4120 = !DILocation(line: 0, scope: !4076)
!4121 = !DILocation(line: 652, column: 18, scope: !4076)
!4122 = !DILocation(line: 653, column: 40, scope: !4076)
!4123 = !DILocation(line: 653, column: 7, scope: !4076)
!4124 = !DILocation(line: 654, column: 7, scope: !4076)
!4125 = !DILocation(line: 655, column: 46, scope: !4076)
!4126 = !DILocation(line: 655, column: 7, scope: !4076)
!4127 = !DILocation(line: 656, column: 5, scope: !4077)
!4128 = !DILocation(line: 657, column: 1, scope: !4063)
!4129 = distinct !DISubprogram(name: "gimple_omp_sections_clauses_ptr", scope: !584, file: !584, line: 4019, type: !3953, scopeLine: 4020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4130)
!4130 = !{!4131}
!4131 = !DILocalVariable(name: "gs", arg: 1, scope: !4129, file: !584, line: 4019, type: !1007)
!4132 = !DILocation(line: 0, scope: !4129)
!4133 = !DILocation(line: 4022, column: 35, scope: !4129)
!4134 = !DILocation(line: 4022, column: 3, scope: !4129)
!4135 = distinct !DISubprogram(name: "gimple_omp_single_clauses_ptr", scope: !584, file: !584, line: 3989, type: !3953, scopeLine: 3990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4136)
!4136 = !{!4137}
!4137 = !DILocalVariable(name: "gs", arg: 1, scope: !4135, file: !584, line: 3989, type: !1007)
!4138 = !DILocation(line: 0, scope: !4135)
!4139 = !DILocation(line: 3992, column: 33, scope: !4135)
!4140 = !DILocation(line: 3992, column: 3, scope: !4135)
!4141 = distinct !DISubprogram(name: "gimple_bind_block", scope: !584, file: !584, line: 2559, type: !3831, scopeLine: 2560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4142)
!4142 = !{!4143}
!4143 = !DILocalVariable(name: "gs", arg: 1, scope: !4141, file: !584, line: 2559, type: !3824)
!4144 = !DILocation(line: 0, scope: !4141)
!4145 = !DILocation(line: 2562, column: 26, scope: !4141)
!4146 = !DILocation(line: 2562, column: 3, scope: !4141)
!4147 = distinct !DISubprogram(name: "note_nonlocal_block_vlas", scope: !3, file: !3, line: 1200, type: !4148, scopeLine: 1201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4150)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{null, !669, !745}
!4150 = !{!4151, !4152, !4153}
!4151 = !DILocalVariable(name: "info", arg: 1, scope: !4147, file: !3, line: 1200, type: !669)
!4152 = !DILocalVariable(name: "block", arg: 2, scope: !4147, file: !3, line: 1200, type: !745)
!4153 = !DILocalVariable(name: "var", scope: !4147, file: !3, line: 1202, type: !745)
!4154 = !DILocation(line: 0, scope: !4147)
!4155 = !DILocation(line: 1204, column: 14, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 1204, column: 3)
!4157 = !DILocation(line: 0, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 1205, column: 9)
!4159 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 1204, column: 3)
!4160 = !DILocation(line: 1204, column: 8, scope: !4156)
!4161 = !DILocation(line: 0, scope: !4156)
!4162 = !DILocation(line: 1204, column: 3, scope: !4156)
!4163 = !DILocation(line: 1205, column: 9, scope: !4158)
!4164 = !DILocation(line: 1205, column: 25, scope: !4158)
!4165 = !DILocation(line: 1206, column: 2, scope: !4158)
!4166 = !DILocation(line: 1206, column: 31, scope: !4158)
!4167 = !DILocation(line: 1206, column: 5, scope: !4158)
!4168 = !DILocation(line: 1207, column: 2, scope: !4158)
!4169 = !DILocation(line: 1207, column: 5, scope: !4158)
!4170 = !DILocation(line: 1208, column: 2, scope: !4158)
!4171 = !DILocation(line: 1208, column: 5, scope: !4158)
!4172 = !DILocation(line: 1208, column: 42, scope: !4158)
!4173 = !DILocation(line: 1208, column: 33, scope: !4158)
!4174 = !DILocation(line: 1205, column: 9, scope: !4159)
!4175 = !DILocation(line: 1209, column: 37, scope: !4158)
!4176 = !DILocation(line: 1209, column: 7, scope: !4158)
!4177 = !DILocation(line: 1204, column: 45, scope: !4159)
!4178 = !DILocation(line: 1204, column: 3, scope: !4159)
!4179 = distinct !{!4179, !4162, !4180}
!4180 = !DILocation(line: 1209, column: 52, scope: !4156)
!4181 = !DILocation(line: 1210, column: 1, scope: !4147)
!4182 = distinct !DISubprogram(name: "gimple_op", scope: !584, file: !584, line: 1631, type: !4183, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4185)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!745, !3824, !7}
!4185 = !{!4186, !4187}
!4186 = !DILocalVariable(name: "gs", arg: 1, scope: !4182, file: !584, line: 1631, type: !3824)
!4187 = !DILocalVariable(name: "i", arg: 2, scope: !4182, file: !584, line: 1631, type: !7)
!4188 = !DILocation(line: 0, scope: !4182)
!4189 = !DILocation(line: 1633, column: 7, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4182, file: !584, line: 1633, column: 7)
!4191 = !DILocation(line: 1633, column: 7, scope: !4182)
!4192 = !DILocation(line: 1638, column: 14, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4190, file: !584, line: 1634, column: 5)
!4194 = !DILocation(line: 1638, column: 7, scope: !4193)
!4195 = !DILocation(line: 0, scope: !4190)
!4196 = !DILocation(line: 1642, column: 1, scope: !4182)
!4197 = distinct !DISubprogram(name: "gimple_has_ops", scope: !584, file: !584, line: 1274, type: !4198, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4200)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!661, !3824}
!4200 = !{!4201}
!4201 = !DILocalVariable(name: "g", arg: 1, scope: !4197, file: !584, line: 1274, type: !3824)
!4202 = !DILocation(line: 0, scope: !4197)
!4203 = !DILocation(line: 1276, column: 10, scope: !4197)
!4204 = !DILocation(line: 1276, column: 26, scope: !4197)
!4205 = !DILocation(line: 1276, column: 41, scope: !4197)
!4206 = !DILocation(line: 1276, column: 44, scope: !4197)
!4207 = !DILocation(line: 1276, column: 60, scope: !4197)
!4208 = !DILocation(line: 1276, column: 3, scope: !4197)
!4209 = distinct !DISubprogram(name: "gimple_ops", scope: !584, file: !584, line: 1614, type: !3953, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4210)
!4210 = !{!4211, !4212}
!4211 = !DILocalVariable(name: "gs", arg: 1, scope: !4209, file: !584, line: 1614, type: !1007)
!4212 = !DILocalVariable(name: "off", scope: !4209, file: !584, line: 1616, type: !1153)
!4213 = !DILocation(line: 0, scope: !4209)
!4214 = !DILocation(line: 1621, column: 28, scope: !4209)
!4215 = !DILocation(line: 1621, column: 9, scope: !4209)
!4216 = !DILocation(line: 1622, column: 3, scope: !4209)
!4217 = !DILocation(line: 1624, column: 20, scope: !4209)
!4218 = !DILocation(line: 1624, column: 32, scope: !4209)
!4219 = !DILocation(line: 1624, column: 10, scope: !4209)
!4220 = !DILocation(line: 1624, column: 3, scope: !4209)
!4221 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !584, file: !584, line: 1073, type: !4222, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4224)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{!622, !1007}
!4224 = !{!4225}
!4225 = !DILocalVariable(name: "gs", arg: 1, scope: !4221, file: !584, line: 1073, type: !1007)
!4226 = !DILocation(line: 0, scope: !4221)
!4227 = !DILocation(line: 1075, column: 24, scope: !4221)
!4228 = !DILocation(line: 1075, column: 10, scope: !4221)
!4229 = !DILocation(line: 1075, column: 3, scope: !4221)
!4230 = distinct !DISubprogram(name: "gss_for_code", scope: !584, file: !584, line: 1061, type: !4231, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4233)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{!622, !583}
!4233 = !{!4234}
!4234 = !DILocalVariable(name: "code", arg: 1, scope: !4230, file: !584, line: 1061, type: !583)
!4235 = !DILocation(line: 0, scope: !4230)
!4236 = !DILocation(line: 1066, column: 10, scope: !4230)
!4237 = !DILocation(line: 1066, column: 3, scope: !4230)
!4238 = distinct !DISubprogram(name: "get_nonlocal_debug_decl", scope: !3, file: !3, line: 818, type: !4239, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4241)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!745, !669, !745}
!4241 = !{!4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249}
!4242 = !DILocalVariable(name: "info", arg: 1, scope: !4238, file: !3, line: 818, type: !669)
!4243 = !DILocalVariable(name: "decl", arg: 2, scope: !4238, file: !3, line: 818, type: !745)
!4244 = !DILocalVariable(name: "target_context", scope: !4238, file: !3, line: 820, type: !745)
!4245 = !DILocalVariable(name: "i", scope: !4238, file: !3, line: 821, type: !669)
!4246 = !DILocalVariable(name: "x", scope: !4238, file: !3, line: 822, type: !745)
!4247 = !DILocalVariable(name: "field", scope: !4238, file: !3, line: 822, type: !745)
!4248 = !DILocalVariable(name: "new_decl", scope: !4238, file: !3, line: 822, type: !745)
!4249 = !DILocalVariable(name: "slot", scope: !4238, file: !3, line: 823, type: !1462)
!4250 = !DILocation(line: 0, scope: !4238)
!4251 = !DILocation(line: 825, column: 36, scope: !4238)
!4252 = !DILocation(line: 825, column: 45, scope: !4238)
!4253 = !DILocation(line: 825, column: 10, scope: !4238)
!4254 = !DILocation(line: 827, column: 7, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 827, column: 7)
!4256 = !DILocation(line: 827, column: 7, scope: !4238)
!4257 = !DILocation(line: 828, column: 5, scope: !4255)
!4258 = !DILocation(line: 830, column: 20, scope: !4238)
!4259 = !DILocation(line: 833, column: 13, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 833, column: 7)
!4261 = !DILocation(line: 833, column: 21, scope: !4260)
!4262 = !DILocation(line: 833, column: 7, scope: !4238)
!4263 = !DILocation(line: 836, column: 14, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 834, column: 5)
!4265 = !DILocation(line: 837, column: 17, scope: !4264)
!4266 = !DILocation(line: 839, column: 5, scope: !4264)
!4267 = !DILocation(line: 842, column: 11, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 841, column: 5)
!4269 = !DILocation(line: 843, column: 12, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4268, file: !3, line: 843, column: 7)
!4271 = !DILocation(line: 0, scope: !4268)
!4272 = !DILocation(line: 0, scope: !4270)
!4273 = !DILocation(line: 843, column: 32, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4270, file: !3, line: 843, column: 7)
!4275 = !DILocation(line: 843, column: 40, scope: !4274)
!4276 = !DILocation(line: 843, column: 7, scope: !4270)
!4277 = !DILocation(line: 845, column: 12, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4274, file: !3, line: 844, column: 2)
!4279 = !DILocation(line: 846, column: 8, scope: !4278)
!4280 = !DILocation(line: 847, column: 8, scope: !4278)
!4281 = !DILocation(line: 843, column: 7, scope: !4274)
!4282 = distinct !{!4282, !4276, !4283}
!4283 = !DILocation(line: 848, column: 2, scope: !4270)
!4284 = !DILocation(line: 849, column: 11, scope: !4268)
!4285 = !DILocation(line: 0, scope: !4260)
!4286 = !DILocation(line: 852, column: 11, scope: !4238)
!4287 = !DILocation(line: 853, column: 7, scope: !4238)
!4288 = !DILocation(line: 854, column: 7, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 854, column: 7)
!4290 = !DILocation(line: 854, column: 7, scope: !4238)
!4291 = !DILocation(line: 855, column: 9, scope: !4289)
!4292 = !DILocation(line: 855, column: 5, scope: !4289)
!4293 = !DILocation(line: 858, column: 14, scope: !4238)
!4294 = !DILocation(line: 860, column: 35, scope: !4238)
!4295 = !DILocation(line: 860, column: 3, scope: !4238)
!4296 = !DILocation(line: 860, column: 27, scope: !4238)
!4297 = !DILocation(line: 861, column: 32, scope: !4238)
!4298 = !DILocation(line: 861, column: 3, scope: !4238)
!4299 = !DILocation(line: 861, column: 30, scope: !4238)
!4300 = !DILocation(line: 862, column: 31, scope: !4238)
!4301 = !DILocation(line: 862, column: 29, scope: !4238)
!4302 = !DILocation(line: 863, column: 35, scope: !4238)
!4303 = !DILocation(line: 863, column: 3, scope: !4238)
!4304 = !DILocation(line: 863, column: 33, scope: !4238)
!4305 = !DILocation(line: 864, column: 34, scope: !4238)
!4306 = !DILocation(line: 864, column: 32, scope: !4238)
!4307 = !DILocation(line: 865, column: 30, scope: !4238)
!4308 = !DILocation(line: 865, column: 28, scope: !4238)
!4309 = !DILocation(line: 866, column: 33, scope: !4238)
!4310 = !DILocation(line: 866, column: 31, scope: !4238)
!4311 = !DILocation(line: 867, column: 3, scope: !4238)
!4312 = !DILocation(line: 867, column: 39, scope: !4238)
!4313 = !DILocation(line: 868, column: 8, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 868, column: 7)
!4315 = !DILocation(line: 868, column: 25, scope: !4314)
!4316 = !DILocation(line: 869, column: 8, scope: !4314)
!4317 = !DILocation(line: 869, column: 28, scope: !4314)
!4318 = !DILocation(line: 870, column: 8, scope: !4314)
!4319 = !DILocation(line: 870, column: 28, scope: !4314)
!4320 = !DILocation(line: 871, column: 7, scope: !4314)
!4321 = !DILocation(line: 871, column: 10, scope: !4314)
!4322 = !DILocation(line: 868, column: 7, scope: !4238)
!4323 = !DILocation(line: 872, column: 34, scope: !4314)
!4324 = !DILocation(line: 872, column: 5, scope: !4314)
!4325 = !DILocation(line: 874, column: 3, scope: !4238)
!4326 = !DILocation(line: 875, column: 36, scope: !4238)
!4327 = !DILocation(line: 877, column: 9, scope: !4238)
!4328 = !DILocation(line: 878, column: 33, scope: !4238)
!4329 = !DILocation(line: 878, column: 3, scope: !4238)
!4330 = !DILocation(line: 878, column: 25, scope: !4238)
!4331 = !DILocation(line: 879, column: 25, scope: !4238)
!4332 = !DILocation(line: 881, column: 8, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 881, column: 7)
!4334 = !DILocation(line: 882, column: 7, scope: !4333)
!4335 = !DILocation(line: 882, column: 16, scope: !4333)
!4336 = !DILocation(line: 882, column: 24, scope: !4333)
!4337 = !DILocation(line: 883, column: 7, scope: !4333)
!4338 = !DILocation(line: 883, column: 36, scope: !4333)
!4339 = !DILocation(line: 883, column: 10, scope: !4333)
!4340 = !DILocation(line: 881, column: 7, scope: !4238)
!4341 = !DILocation(line: 884, column: 35, scope: !4333)
!4342 = !DILocation(line: 884, column: 5, scope: !4333)
!4343 = !DILocation(line: 887, column: 1, scope: !4238)
!4344 = distinct !DISubprogram(name: "get_frame_type", scope: !3, file: !3, line: 222, type: !3963, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4345)
!4345 = !{!4346, !4347, !4348}
!4346 = !DILocalVariable(name: "info", arg: 1, scope: !4344, file: !3, line: 222, type: !669)
!4347 = !DILocalVariable(name: "type", scope: !4344, file: !3, line: 224, type: !745)
!4348 = !DILocalVariable(name: "name", scope: !4349, file: !3, line: 227, type: !664)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 226, column: 5)
!4350 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 225, column: 7)
!4351 = !DILocation(line: 0, scope: !4344)
!4352 = !DILocation(line: 224, column: 21, scope: !4344)
!4353 = !DILocation(line: 225, column: 8, scope: !4350)
!4354 = !DILocation(line: 225, column: 7, scope: !4344)
!4355 = !DILocation(line: 229, column: 14, scope: !4349)
!4356 = !DILocation(line: 232, column: 8, scope: !4349)
!4357 = !DILocation(line: 231, column: 14, scope: !4349)
!4358 = !DILocation(line: 0, scope: !4349)
!4359 = !DILocation(line: 234, column: 26, scope: !4349)
!4360 = !DILocation(line: 234, column: 7, scope: !4349)
!4361 = !DILocation(line: 234, column: 24, scope: !4349)
!4362 = !DILocation(line: 235, column: 7, scope: !4349)
!4363 = !DILocation(line: 237, column: 24, scope: !4349)
!4364 = !DILocation(line: 238, column: 26, scope: !4349)
!4365 = !DILocation(line: 238, column: 13, scope: !4349)
!4366 = !DILocation(line: 238, column: 24, scope: !4349)
!4367 = !DILocation(line: 246, column: 7, scope: !4349)
!4368 = !DILocation(line: 246, column: 43, scope: !4349)
!4369 = !DILocation(line: 247, column: 5, scope: !4349)
!4370 = !DILocation(line: 248, column: 3, scope: !4344)
!4371 = distinct !DISubprogram(name: "get_chain_field", scope: !3, file: !3, line: 370, type: !3963, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4372)
!4372 = !{!4373, !4374, !4375}
!4373 = !DILocalVariable(name: "info", arg: 1, scope: !4371, file: !3, line: 370, type: !669)
!4374 = !DILocalVariable(name: "field", scope: !4371, file: !3, line: 372, type: !745)
!4375 = !DILocalVariable(name: "type", scope: !4376, file: !3, line: 376, type: !745)
!4376 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 375, column: 5)
!4377 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 374, column: 7)
!4378 = !DILocation(line: 0, scope: !4371)
!4379 = !DILocation(line: 372, column: 22, scope: !4371)
!4380 = !DILocation(line: 374, column: 8, scope: !4377)
!4381 = !DILocation(line: 374, column: 7, scope: !4371)
!4382 = !DILocation(line: 376, column: 61, scope: !4376)
!4383 = !DILocation(line: 376, column: 39, scope: !4376)
!4384 = !DILocation(line: 376, column: 19, scope: !4376)
!4385 = !DILocation(line: 0, scope: !4376)
!4386 = !DILocation(line: 378, column: 15, scope: !4376)
!4387 = !DILocation(line: 379, column: 27, scope: !4376)
!4388 = !DILocation(line: 379, column: 7, scope: !4376)
!4389 = !DILocation(line: 379, column: 25, scope: !4376)
!4390 = !DILocation(line: 380, column: 7, scope: !4376)
!4391 = !DILocation(line: 380, column: 25, scope: !4376)
!4392 = !DILocation(line: 381, column: 28, scope: !4376)
!4393 = !DILocation(line: 381, column: 7, scope: !4376)
!4394 = !DILocation(line: 381, column: 26, scope: !4376)
!4395 = !DILocation(line: 382, column: 7, scope: !4376)
!4396 = !DILocation(line: 382, column: 37, scope: !4376)
!4397 = !DILocation(line: 384, column: 33, scope: !4376)
!4398 = !DILocation(line: 384, column: 7, scope: !4376)
!4399 = !DILocation(line: 386, column: 25, scope: !4376)
!4400 = !DILocation(line: 388, column: 11, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 388, column: 11)
!4402 = !DILocation(line: 389, column: 11, scope: !4401)
!4403 = !DILocation(line: 389, column: 15, scope: !4401)
!4404 = !DILocation(line: 389, column: 26, scope: !4401)
!4405 = !DILocation(line: 390, column: 4, scope: !4401)
!4406 = !DILocation(line: 390, column: 8, scope: !4401)
!4407 = !DILocation(line: 388, column: 11, scope: !4376)
!4408 = !DILocation(line: 392, column: 15, scope: !4401)
!4409 = !DILocation(line: 392, column: 4, scope: !4401)
!4410 = !DILocation(line: 391, column: 2, scope: !4401)
!4411 = !DILocation(line: 394, column: 7, scope: !4376)
!4412 = !DILocation(line: 394, column: 41, scope: !4376)
!4413 = !DILocation(line: 395, column: 5, scope: !4376)
!4414 = !DILocation(line: 396, column: 3, scope: !4371)
!4415 = distinct !DISubprogram(name: "lookup_field_for_decl", scope: !3, file: !3, line: 275, type: !4416, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4418)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!745, !669, !745, !648}
!4418 = !{!4419, !4420, !4421, !4422, !4423}
!4419 = !DILocalVariable(name: "info", arg: 1, scope: !4415, file: !3, line: 275, type: !669)
!4420 = !DILocalVariable(name: "decl", arg: 2, scope: !4415, file: !3, line: 275, type: !745)
!4421 = !DILocalVariable(name: "insert", arg: 3, scope: !4415, file: !3, line: 276, type: !648)
!4422 = !DILocalVariable(name: "slot", scope: !4415, file: !3, line: 278, type: !1462)
!4423 = !DILocalVariable(name: "field", scope: !4424, file: !3, line: 289, type: !745)
!4424 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 288, column: 5)
!4425 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 287, column: 7)
!4426 = !DILocation(line: 0, scope: !4415)
!4427 = !DILocation(line: 280, column: 14, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 280, column: 7)
!4429 = !DILocation(line: 280, column: 7, scope: !4415)
!4430 = !DILocation(line: 282, column: 14, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 281, column: 5)
!4432 = !DILocation(line: 283, column: 14, scope: !4431)
!4433 = !DILocation(line: 283, column: 28, scope: !4431)
!4434 = !DILocation(line: 286, column: 10, scope: !4415)
!4435 = !DILocation(line: 287, column: 8, scope: !4425)
!4436 = !DILocation(line: 287, column: 7, scope: !4415)
!4437 = !DILocation(line: 289, column: 20, scope: !4424)
!4438 = !DILocation(line: 0, scope: !4424)
!4439 = !DILocation(line: 290, column: 27, scope: !4424)
!4440 = !DILocation(line: 290, column: 7, scope: !4424)
!4441 = !DILocation(line: 290, column: 25, scope: !4424)
!4442 = !DILocation(line: 292, column: 11, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 292, column: 11)
!4444 = !DILocation(line: 0, scope: !4443)
!4445 = !DILocation(line: 292, column: 11, scope: !4424)
!4446 = !DILocation(line: 294, column: 24, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 293, column: 2)
!4448 = !DILocation(line: 294, column: 4, scope: !4447)
!4449 = !DILocation(line: 294, column: 22, scope: !4447)
!4450 = !DILocation(line: 295, column: 25, scope: !4447)
!4451 = !DILocation(line: 295, column: 4, scope: !4447)
!4452 = !DILocation(line: 295, column: 23, scope: !4447)
!4453 = !DILocation(line: 296, column: 4, scope: !4447)
!4454 = !DILocation(line: 296, column: 34, scope: !4447)
!4455 = !DILocation(line: 297, column: 2, scope: !4447)
!4456 = !DILocation(line: 300, column: 11, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 299, column: 2)
!4458 = !DILocation(line: 300, column: 29, scope: !4457)
!4459 = !DILocation(line: 301, column: 42, scope: !4457)
!4460 = !DILocation(line: 301, column: 11, scope: !4457)
!4461 = !DILocation(line: 301, column: 40, scope: !4457)
!4462 = !DILocation(line: 302, column: 32, scope: !4457)
!4463 = !DILocation(line: 302, column: 11, scope: !4457)
!4464 = !DILocation(line: 302, column: 30, scope: !4457)
!4465 = !DILocation(line: 303, column: 37, scope: !4457)
!4466 = !DILocation(line: 303, column: 11, scope: !4457)
!4467 = !DILocation(line: 303, column: 35, scope: !4457)
!4468 = !DILocation(line: 304, column: 38, scope: !4457)
!4469 = !DILocation(line: 304, column: 36, scope: !4457)
!4470 = !DILocation(line: 305, column: 44, scope: !4457)
!4471 = !DILocation(line: 305, column: 11, scope: !4457)
!4472 = !DILocation(line: 305, column: 41, scope: !4457)
!4473 = !DILocation(line: 306, column: 40, scope: !4457)
!4474 = !DILocation(line: 306, column: 38, scope: !4457)
!4475 = !DILocation(line: 309, column: 33, scope: !4424)
!4476 = !DILocation(line: 309, column: 7, scope: !4424)
!4477 = !DILocation(line: 310, column: 13, scope: !4424)
!4478 = !DILocation(line: 312, column: 11, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 312, column: 11)
!4480 = !DILocation(line: 312, column: 28, scope: !4479)
!4481 = !DILocation(line: 312, column: 11, scope: !4424)
!4482 = !DILocation(line: 313, column: 8, scope: !4479)
!4483 = !DILocation(line: 313, column: 26, scope: !4479)
!4484 = !DILocation(line: 316, column: 17, scope: !4415)
!4485 = !DILocation(line: 313, column: 2, scope: !4479)
!4486 = !DILocation(line: 316, column: 3, scope: !4415)
!4487 = !DILocation(line: 317, column: 1, scope: !4415)
!4488 = distinct !DISubprogram(name: "use_pointer_in_frame", scope: !3, file: !3, line: 255, type: !4489, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4491)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!661, !745}
!4491 = !{!4492}
!4492 = !DILocalVariable(name: "decl", arg: 1, scope: !4488, file: !3, line: 255, type: !745)
!4493 = !DILocation(line: 0, scope: !4488)
!4494 = !DILocation(line: 257, column: 7, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 257, column: 7)
!4496 = !DILocation(line: 257, column: 24, scope: !4495)
!4497 = !DILocation(line: 257, column: 7, scope: !4488)
!4498 = !DILocation(line: 262, column: 14, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 258, column: 5)
!4500 = !DILocation(line: 262, column: 7, scope: !4499)
!4501 = !DILocation(line: 267, column: 14, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 265, column: 5)
!4503 = !DILocation(line: 267, column: 31, scope: !4502)
!4504 = !DILocation(line: 267, column: 39, scope: !4502)
!4505 = !DILocation(line: 267, column: 43, scope: !4502)
!4506 = !DILocation(line: 267, column: 7, scope: !4502)
!4507 = !DILocation(line: 0, scope: !4495)
!4508 = !DILocation(line: 269, column: 1, scope: !4488)
!4509 = distinct !DISubprogram(name: "note_nonlocal_vla_type", scope: !3, file: !3, line: 1160, type: !4148, scopeLine: 1161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4510)
!4510 = !{!4511, !4512, !4513, !4516}
!4511 = !DILocalVariable(name: "info", arg: 1, scope: !4509, file: !3, line: 1160, type: !669)
!4512 = !DILocalVariable(name: "type", arg: 2, scope: !4509, file: !3, line: 1160, type: !745)
!4513 = !DILocalVariable(name: "domain", scope: !4514, file: !3, line: 1178, type: !745)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 1177, column: 5)
!4515 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 1176, column: 7)
!4516 = !DILocalVariable(name: "t", scope: !4514, file: !3, line: 1178, type: !745)
!4517 = !DILocation(line: 0, scope: !4509)
!4518 = !DILocation(line: 1162, column: 3, scope: !4509)
!4519 = !DILocation(line: 1162, column: 10, scope: !4509)
!4520 = !DILocation(line: 1162, column: 32, scope: !4509)
!4521 = !DILocation(line: 0, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 1165, column: 7)
!4523 = !DILocation(line: 1165, column: 7, scope: !4522)
!4524 = !DILocation(line: 1162, column: 36, scope: !4509)
!4525 = !DILocation(line: 1162, column: 35, scope: !4509)
!4526 = !DILocation(line: 1163, column: 12, scope: !4509)
!4527 = distinct !{!4527, !4518, !4526}
!4528 = !DILocation(line: 1166, column: 7, scope: !4522)
!4529 = !DILocation(line: 1166, column: 10, scope: !4522)
!4530 = !DILocation(line: 1166, column: 39, scope: !4522)
!4531 = !DILocation(line: 1167, column: 7, scope: !4522)
!4532 = !DILocation(line: 1167, column: 10, scope: !4522)
!4533 = !DILocation(line: 1165, column: 7, scope: !4509)
!4534 = !DILocation(line: 1168, column: 12, scope: !4522)
!4535 = !DILocation(line: 1168, column: 5, scope: !4522)
!4536 = !DILocation(line: 1170, column: 3, scope: !4509)
!4537 = !DILocation(line: 1170, column: 10, scope: !4509)
!4538 = !DILocation(line: 1171, column: 3, scope: !4509)
!4539 = !DILocation(line: 1171, column: 23, scope: !4509)
!4540 = !DILocation(line: 1172, column: 3, scope: !4509)
!4541 = !DILocation(line: 1173, column: 3, scope: !4509)
!4542 = !DILocation(line: 1174, column: 12, scope: !4509)
!4543 = distinct !{!4543, !4536, !4542}
!4544 = !DILocation(line: 1176, column: 24, scope: !4515)
!4545 = !DILocation(line: 1176, column: 7, scope: !4509)
!4546 = !DILocation(line: 1180, column: 37, scope: !4514)
!4547 = !DILocation(line: 1180, column: 7, scope: !4514)
!4548 = !DILocation(line: 1181, column: 16, scope: !4514)
!4549 = !DILocation(line: 0, scope: !4514)
!4550 = !DILocation(line: 1182, column: 11, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 1182, column: 11)
!4552 = !DILocation(line: 1182, column: 11, scope: !4514)
!4553 = !DILocation(line: 1184, column: 8, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 1183, column: 2)
!4555 = !DILocation(line: 1185, column: 8, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 1185, column: 8)
!4557 = !DILocation(line: 1185, column: 10, scope: !4556)
!4558 = !DILocation(line: 1185, column: 14, scope: !4556)
!4559 = !DILocation(line: 1185, column: 28, scope: !4556)
!4560 = !DILocation(line: 1185, column: 40, scope: !4556)
!4561 = !DILocation(line: 1185, column: 57, scope: !4556)
!4562 = !DILocation(line: 1186, column: 8, scope: !4556)
!4563 = !DILocation(line: 1186, column: 11, scope: !4556)
!4564 = !DILocation(line: 1186, column: 46, scope: !4556)
!4565 = !DILocation(line: 1186, column: 37, scope: !4556)
!4566 = !DILocation(line: 1185, column: 8, scope: !4554)
!4567 = !DILocation(line: 1187, column: 6, scope: !4556)
!4568 = !DILocation(line: 1188, column: 8, scope: !4554)
!4569 = !DILocation(line: 1189, column: 8, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 1189, column: 8)
!4571 = !DILocation(line: 1189, column: 10, scope: !4570)
!4572 = !DILocation(line: 1189, column: 14, scope: !4570)
!4573 = !DILocation(line: 1189, column: 28, scope: !4570)
!4574 = !DILocation(line: 1189, column: 40, scope: !4570)
!4575 = !DILocation(line: 1189, column: 57, scope: !4570)
!4576 = !DILocation(line: 1190, column: 8, scope: !4570)
!4577 = !DILocation(line: 1190, column: 11, scope: !4570)
!4578 = !DILocation(line: 1190, column: 46, scope: !4570)
!4579 = !DILocation(line: 1190, column: 37, scope: !4570)
!4580 = !DILocation(line: 1189, column: 8, scope: !4554)
!4581 = !DILocation(line: 1191, column: 6, scope: !4570)
!4582 = !DILocation(line: 1194, column: 1, scope: !4509)
!4583 = distinct !DISubprogram(name: "create_tmp_var_for", scope: !3, file: !3, line: 139, type: !4584, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4586)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{!745, !669, !745, !667}
!4586 = !{!4587, !4588, !4589, !4590}
!4587 = !DILocalVariable(name: "info", arg: 1, scope: !4583, file: !3, line: 139, type: !669)
!4588 = !DILocalVariable(name: "type", arg: 2, scope: !4583, file: !3, line: 139, type: !745)
!4589 = !DILocalVariable(name: "prefix", arg: 3, scope: !4583, file: !3, line: 139, type: !667)
!4590 = !DILocalVariable(name: "tmp_var", scope: !4583, file: !3, line: 141, type: !745)
!4591 = !DILocation(line: 0, scope: !4583)
!4592 = !DILocation(line: 146, column: 3, scope: !4583)
!4593 = !DILocation(line: 147, column: 3, scope: !4583)
!4594 = !DILocation(line: 150, column: 13, scope: !4583)
!4595 = !DILocation(line: 151, column: 34, scope: !4583)
!4596 = !DILocation(line: 151, column: 3, scope: !4583)
!4597 = !DILocation(line: 151, column: 26, scope: !4583)
!4598 = !DILocation(line: 152, column: 32, scope: !4583)
!4599 = !DILocation(line: 152, column: 3, scope: !4583)
!4600 = !DILocation(line: 152, column: 24, scope: !4583)
!4601 = !DILocation(line: 153, column: 3, scope: !4583)
!4602 = !DILocation(line: 153, column: 38, scope: !4583)
!4603 = !DILocation(line: 154, column: 7, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 154, column: 7)
!4605 = !DILocation(line: 154, column: 24, scope: !4604)
!4606 = !DILocation(line: 155, column: 7, scope: !4604)
!4607 = !DILocation(line: 155, column: 27, scope: !4604)
!4608 = !DILocation(line: 154, column: 7, scope: !4583)
!4609 = !DILocation(line: 156, column: 5, scope: !4604)
!4610 = !DILocation(line: 156, column: 33, scope: !4604)
!4611 = !DILocation(line: 158, column: 29, scope: !4583)
!4612 = !DILocation(line: 160, column: 3, scope: !4583)
!4613 = distinct !DISubprogram(name: "gimple_seq_first", scope: !584, file: !584, line: 159, type: !4614, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4616)
!4614 = !DISubroutineType(types: !4615)
!4615 = !{!1002, !4046}
!4616 = !{!4617}
!4617 = !DILocalVariable(name: "s", arg: 1, scope: !4613, file: !584, line: 159, type: !4046)
!4618 = !DILocation(line: 0, scope: !4613)
!4619 = !DILocation(line: 161, column: 10, scope: !4613)
!4620 = !DILocation(line: 161, column: 17, scope: !4613)
!4621 = !DILocation(line: 161, column: 3, scope: !4613)
!4622 = distinct !DISubprogram(name: "gimple_omp_for_pre_body", scope: !584, file: !584, line: 3583, type: !4036, scopeLine: 3584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4623)
!4623 = !{!4624}
!4624 = !DILocalVariable(name: "gs", arg: 1, scope: !4622, file: !584, line: 3583, type: !1007)
!4625 = !DILocation(line: 0, scope: !4622)
!4626 = !DILocation(line: 3586, column: 29, scope: !4622)
!4627 = !DILocation(line: 3586, column: 3, scope: !4622)
!4628 = distinct !DISubprogram(name: "gsi_last", scope: !584, file: !584, line: 4435, type: !4629, scopeLine: 4436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4631)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{!1989, !997}
!4631 = !{!4632, !4633}
!4632 = !DILocalVariable(name: "seq", arg: 1, scope: !4628, file: !584, line: 4435, type: !997)
!4633 = !DILocalVariable(name: "i", scope: !4628, file: !584, line: 4437, type: !1989)
!4634 = !DILocation(line: 0, scope: !4628)
!4635 = !DILocation(line: 4437, column: 24, scope: !4628)
!4636 = !DILocation(line: 4439, column: 11, scope: !4628)
!4637 = !DILocation(line: 4439, column: 5, scope: !4628)
!4638 = !DILocation(line: 4439, column: 9, scope: !4628)
!4639 = !DILocation(line: 4440, column: 5, scope: !4628)
!4640 = !DILocation(line: 4440, column: 9, scope: !4628)
!4641 = !DILocation(line: 4441, column: 11, scope: !4628)
!4642 = !DILocation(line: 4441, column: 17, scope: !4628)
!4643 = !DILocation(line: 4441, column: 27, scope: !4628)
!4644 = !DILocation(line: 4441, column: 20, scope: !4628)
!4645 = !DILocation(line: 4441, column: 10, scope: !4628)
!4646 = !DILocation(line: 4441, column: 35, scope: !4628)
!4647 = !DILocation(line: 4441, column: 5, scope: !4628)
!4648 = !DILocation(line: 4441, column: 8, scope: !4628)
!4649 = !DILocation(line: 4443, column: 3, scope: !4628)
!4650 = distinct !DISubprogram(name: "gimple_omp_for_collapse", scope: !584, file: !584, line: 3440, type: !4651, scopeLine: 3441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4653)
!4651 = !DISubroutineType(types: !4652)
!4652 = !{!1153, !1007}
!4653 = !{!4654}
!4654 = !DILocalVariable(name: "gs", arg: 1, scope: !4650, file: !584, line: 3440, type: !1007)
!4655 = !DILocation(line: 0, scope: !4650)
!4656 = !DILocation(line: 3443, column: 29, scope: !4650)
!4657 = !DILocation(line: 3443, column: 3, scope: !4650)
!4658 = distinct !DISubprogram(name: "gimple_omp_for_index_ptr", scope: !584, file: !584, line: 3461, type: !4659, scopeLine: 3462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4661)
!4659 = !DISubroutineType(types: !4660)
!4660 = !{!1042, !1007, !1153}
!4661 = !{!4662, !4663}
!4662 = !DILocalVariable(name: "gs", arg: 1, scope: !4658, file: !584, line: 3461, type: !1007)
!4663 = !DILocalVariable(name: "i", arg: 2, scope: !4658, file: !584, line: 3461, type: !1153)
!4664 = !DILocation(line: 0, scope: !4658)
!4665 = !DILocation(line: 3464, column: 3, scope: !4658)
!4666 = !DILocation(line: 3465, column: 30, scope: !4658)
!4667 = !DILocation(line: 3465, column: 38, scope: !4658)
!4668 = !DILocation(line: 3465, column: 3, scope: !4658)
!4669 = distinct !DISubprogram(name: "gimple_omp_for_initial_ptr", scope: !584, file: !584, line: 3494, type: !4659, scopeLine: 3495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4670)
!4670 = !{!4671, !4672}
!4671 = !DILocalVariable(name: "gs", arg: 1, scope: !4669, file: !584, line: 3494, type: !1007)
!4672 = !DILocalVariable(name: "i", arg: 2, scope: !4669, file: !584, line: 3494, type: !1153)
!4673 = !DILocation(line: 0, scope: !4669)
!4674 = !DILocation(line: 3497, column: 3, scope: !4669)
!4675 = !DILocation(line: 3498, column: 30, scope: !4669)
!4676 = !DILocation(line: 3498, column: 38, scope: !4669)
!4677 = !DILocation(line: 3498, column: 3, scope: !4669)
!4678 = distinct !DISubprogram(name: "gimple_omp_for_final_ptr", scope: !584, file: !584, line: 3527, type: !4659, scopeLine: 3528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4679)
!4679 = !{!4680, !4681}
!4680 = !DILocalVariable(name: "gs", arg: 1, scope: !4678, file: !584, line: 3527, type: !1007)
!4681 = !DILocalVariable(name: "i", arg: 2, scope: !4678, file: !584, line: 3527, type: !1153)
!4682 = !DILocation(line: 0, scope: !4678)
!4683 = !DILocation(line: 3530, column: 3, scope: !4678)
!4684 = !DILocation(line: 3531, column: 30, scope: !4678)
!4685 = !DILocation(line: 3531, column: 38, scope: !4678)
!4686 = !DILocation(line: 3531, column: 3, scope: !4678)
!4687 = distinct !DISubprogram(name: "gimple_omp_for_incr", scope: !584, file: !584, line: 3549, type: !4688, scopeLine: 3550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4690)
!4688 = !DISubroutineType(types: !4689)
!4689 = !{!745, !3824, !1153}
!4690 = !{!4691, !4692}
!4691 = !DILocalVariable(name: "gs", arg: 1, scope: !4687, file: !584, line: 3549, type: !3824)
!4692 = !DILocalVariable(name: "i", arg: 2, scope: !4687, file: !584, line: 3549, type: !1153)
!4693 = !DILocation(line: 0, scope: !4687)
!4694 = !DILocation(line: 3552, column: 3, scope: !4687)
!4695 = !DILocation(line: 3553, column: 29, scope: !4687)
!4696 = !DILocation(line: 3553, column: 37, scope: !4687)
!4697 = !DILocation(line: 3553, column: 3, scope: !4687)
!4698 = distinct !DISubprogram(name: "gimple_seq_empty_p", scope: !584, file: !584, line: 215, type: !4699, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4701)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{!661, !4046}
!4701 = !{!4702}
!4702 = !DILocalVariable(name: "s", arg: 1, scope: !4698, file: !584, line: 215, type: !4046)
!4703 = !DILocation(line: 0, scope: !4698)
!4704 = !DILocation(line: 217, column: 12, scope: !4698)
!4705 = !DILocation(line: 217, column: 20, scope: !4698)
!4706 = !DILocation(line: 217, column: 26, scope: !4698)
!4707 = !DILocation(line: 217, column: 32, scope: !4698)
!4708 = !DILocation(line: 217, column: 3, scope: !4698)
!4709 = distinct !DISubprogram(name: "gimple_omp_for_set_pre_body", scope: !584, file: !584, line: 3594, type: !4710, scopeLine: 3595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4712)
!4710 = !DISubroutineType(types: !4711)
!4711 = !{null, !1007, !997}
!4712 = !{!4713, !4714}
!4713 = !DILocalVariable(name: "gs", arg: 1, scope: !4709, file: !584, line: 3594, type: !1007)
!4714 = !DILocalVariable(name: "pre_body", arg: 2, scope: !4709, file: !584, line: 3594, type: !997)
!4715 = !DILocation(line: 0, scope: !4709)
!4716 = !DILocation(line: 3597, column: 22, scope: !4709)
!4717 = !DILocation(line: 3597, column: 31, scope: !4709)
!4718 = !DILocation(line: 3598, column: 1, scope: !4709)
!4719 = distinct !DISubprogram(name: "gimple_seq_last", scope: !584, file: !584, line: 178, type: !4614, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4720)
!4720 = !{!4721}
!4721 = !DILocalVariable(name: "s", arg: 1, scope: !4719, file: !584, line: 178, type: !4046)
!4722 = !DILocation(line: 0, scope: !4719)
!4723 = !DILocation(line: 180, column: 10, scope: !4719)
!4724 = !DILocation(line: 180, column: 17, scope: !4719)
!4725 = !DILocation(line: 180, column: 3, scope: !4719)
!4726 = distinct !DISubprogram(name: "gimple_bb", scope: !584, file: !584, line: 1112, type: !4727, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4729)
!4727 = !DISubroutineType(types: !4728)
!4728 = !{!971, !3824}
!4729 = !{!4730}
!4730 = !DILocalVariable(name: "g", arg: 1, scope: !4726, file: !584, line: 1112, type: !3824)
!4731 = !DILocation(line: 0, scope: !4726)
!4732 = !DILocation(line: 1114, column: 20, scope: !4726)
!4733 = !DILocation(line: 1114, column: 3, scope: !4726)
!4734 = distinct !DISubprogram(name: "get_frame_field", scope: !3, file: !3, line: 778, type: !4735, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4737)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{!745, !669, !745, !745, !2933}
!4737 = !{!4738, !4739, !4740, !4741, !4742, !4743, !4744}
!4738 = !DILocalVariable(name: "info", arg: 1, scope: !4734, file: !3, line: 778, type: !669)
!4739 = !DILocalVariable(name: "target_context", arg: 2, scope: !4734, file: !3, line: 778, type: !745)
!4740 = !DILocalVariable(name: "field", arg: 3, scope: !4734, file: !3, line: 779, type: !745)
!4741 = !DILocalVariable(name: "gsi", arg: 4, scope: !4734, file: !3, line: 779, type: !2933)
!4742 = !DILocalVariable(name: "i", scope: !4734, file: !3, line: 781, type: !669)
!4743 = !DILocalVariable(name: "x", scope: !4734, file: !3, line: 782, type: !745)
!4744 = !DILocalVariable(name: "field", scope: !4745, file: !3, line: 796, type: !745)
!4745 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 795, column: 2)
!4746 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 794, column: 7)
!4747 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 794, column: 7)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 791, column: 5)
!4749 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 784, column: 7)
!4750 = !DILocation(line: 0, scope: !4734)
!4751 = !DILocation(line: 784, column: 13, scope: !4749)
!4752 = !DILocation(line: 784, column: 21, scope: !4749)
!4753 = !DILocation(line: 784, column: 7, scope: !4734)
!4754 = !DILocation(line: 787, column: 14, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 785, column: 5)
!4756 = !DILocation(line: 788, column: 17, scope: !4755)
!4757 = !DILocation(line: 789, column: 5, scope: !4755)
!4758 = !DILocation(line: 792, column: 11, scope: !4748)
!4759 = !DILocation(line: 794, column: 12, scope: !4747)
!4760 = !DILocation(line: 0, scope: !4748)
!4761 = !DILocation(line: 0, scope: !4747)
!4762 = !DILocation(line: 794, column: 32, scope: !4746)
!4763 = !DILocation(line: 794, column: 40, scope: !4746)
!4764 = !DILocation(line: 794, column: 7, scope: !4747)
!4765 = !DILocation(line: 796, column: 17, scope: !4745)
!4766 = !DILocation(line: 0, scope: !4745)
!4767 = !DILocation(line: 798, column: 8, scope: !4745)
!4768 = !DILocation(line: 799, column: 8, scope: !4745)
!4769 = !DILocation(line: 800, column: 8, scope: !4745)
!4770 = !DILocation(line: 794, column: 7, scope: !4746)
!4771 = distinct !{!4771, !4764, !4772}
!4772 = !DILocation(line: 801, column: 2, scope: !4747)
!4773 = !DILocation(line: 803, column: 11, scope: !4748)
!4774 = !DILocation(line: 0, scope: !4749)
!4775 = !DILocation(line: 806, column: 7, scope: !4734)
!4776 = !DILocation(line: 807, column: 3, scope: !4734)
!4777 = distinct !DISubprogram(name: "init_tmp_var", scope: !3, file: !3, line: 421, type: !4778, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4780)
!4778 = !DISubroutineType(types: !4779)
!4779 = !{!745, !669, !745, !2933}
!4780 = !{!4781, !4782, !4783, !4784, !4785}
!4781 = !DILocalVariable(name: "info", arg: 1, scope: !4777, file: !3, line: 421, type: !669)
!4782 = !DILocalVariable(name: "exp", arg: 2, scope: !4777, file: !3, line: 421, type: !745)
!4783 = !DILocalVariable(name: "gsi", arg: 3, scope: !4777, file: !3, line: 421, type: !2933)
!4784 = !DILocalVariable(name: "t", scope: !4777, file: !3, line: 423, type: !745)
!4785 = !DILocalVariable(name: "stmt", scope: !4777, file: !3, line: 424, type: !1007)
!4786 = !DILocation(line: 0, scope: !4777)
!4787 = !DILocation(line: 426, column: 33, scope: !4777)
!4788 = !DILocation(line: 426, column: 7, scope: !4777)
!4789 = !DILocation(line: 427, column: 10, scope: !4777)
!4790 = !DILocation(line: 428, column: 9, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 428, column: 7)
!4792 = !DILocation(line: 428, column: 7, scope: !4777)
!4793 = !DILocation(line: 429, column: 49, scope: !4791)
!4794 = !DILocation(line: 429, column: 32, scope: !4791)
!4795 = !DILocation(line: 429, column: 5, scope: !4791)
!4796 = !DILocation(line: 430, column: 3, scope: !4777)
!4797 = !DILocation(line: 432, column: 3, scope: !4777)
!4798 = distinct !DISubprogram(name: "save_tmp_var", scope: !3, file: !3, line: 452, type: !4778, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4799)
!4799 = !{!4800, !4801, !4802, !4803, !4804}
!4800 = !DILocalVariable(name: "info", arg: 1, scope: !4798, file: !3, line: 452, type: !669)
!4801 = !DILocalVariable(name: "exp", arg: 2, scope: !4798, file: !3, line: 452, type: !745)
!4802 = !DILocalVariable(name: "gsi", arg: 3, scope: !4798, file: !3, line: 452, type: !2933)
!4803 = !DILocalVariable(name: "t", scope: !4798, file: !3, line: 454, type: !745)
!4804 = !DILocalVariable(name: "stmt", scope: !4798, file: !3, line: 455, type: !1007)
!4805 = !DILocation(line: 0, scope: !4798)
!4806 = !DILocation(line: 457, column: 33, scope: !4798)
!4807 = !DILocation(line: 457, column: 7, scope: !4798)
!4808 = !DILocation(line: 458, column: 10, scope: !4798)
!4809 = !DILocation(line: 459, column: 9, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 459, column: 7)
!4811 = !DILocation(line: 459, column: 7, scope: !4798)
!4812 = !DILocation(line: 460, column: 49, scope: !4810)
!4813 = !DILocation(line: 460, column: 32, scope: !4810)
!4814 = !DILocation(line: 460, column: 5, scope: !4810)
!4815 = !DILocation(line: 461, column: 3, scope: !4798)
!4816 = !DILocation(line: 463, column: 3, scope: !4798)
!4817 = distinct !DISubprogram(name: "gsi_gimplify_val", scope: !3, file: !3, line: 439, type: !4778, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4818)
!4818 = !{!4819, !4820, !4821}
!4819 = !DILocalVariable(name: "info", arg: 1, scope: !4817, file: !3, line: 439, type: !669)
!4820 = !DILocalVariable(name: "exp", arg: 2, scope: !4817, file: !3, line: 439, type: !745)
!4821 = !DILocalVariable(name: "gsi", arg: 3, scope: !4817, file: !3, line: 440, type: !2933)
!4822 = !DILocation(line: 0, scope: !4817)
!4823 = !DILocation(line: 442, column: 7, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 442, column: 7)
!4825 = !DILocation(line: 442, column: 7, scope: !4817)
!4826 = !DILocation(line: 445, column: 12, scope: !4824)
!4827 = !DILocation(line: 445, column: 5, scope: !4824)
!4828 = !DILocation(line: 0, scope: !4824)
!4829 = !DILocation(line: 446, column: 1, scope: !4817)
!4830 = distinct !DISubprogram(name: "gsi_end_p", scope: !584, file: !584, line: 4467, type: !4831, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4833)
!4831 = !DISubroutineType(types: !4832)
!4832 = !{!661, !1989}
!4833 = !{!4834}
!4834 = !DILocalVariable(name: "i", arg: 1, scope: !4830, file: !584, line: 4467, type: !1989)
!4835 = !DILocation(line: 4467, column: 33, scope: !4830)
!4836 = !DILocation(line: 4469, column: 12, scope: !4830)
!4837 = !DILocation(line: 4469, column: 16, scope: !4830)
!4838 = !DILocation(line: 4469, column: 10, scope: !4830)
!4839 = !DILocation(line: 4469, column: 3, scope: !4830)
!4840 = distinct !DISubprogram(name: "gimple_set_location", scope: !584, file: !584, line: 1156, type: !4841, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4843)
!4841 = !DISubroutineType(types: !4842)
!4842 = !{null, !1007, !867}
!4843 = !{!4844, !4845}
!4844 = !DILocalVariable(name: "g", arg: 1, scope: !4840, file: !584, line: 1156, type: !1007)
!4845 = !DILocalVariable(name: "location", arg: 2, scope: !4840, file: !584, line: 1156, type: !867)
!4846 = !DILocation(line: 0, scope: !4840)
!4847 = !DILocation(line: 1158, column: 13, scope: !4840)
!4848 = !DILocation(line: 1158, column: 22, scope: !4840)
!4849 = !DILocation(line: 1159, column: 1, scope: !4840)
!4850 = distinct !DISubprogram(name: "convert_local_omp_clauses", scope: !3, file: !3, line: 1529, type: !3839, scopeLine: 1530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4851)
!4851 = !{!4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4868, !4875}
!4852 = !DILocalVariable(name: "pclauses", arg: 1, scope: !4850, file: !3, line: 1529, type: !1042)
!4853 = !DILocalVariable(name: "wi", arg: 2, scope: !4850, file: !3, line: 1529, type: !1985)
!4854 = !DILocalVariable(name: "info", scope: !4850, file: !3, line: 1531, type: !3065)
!4855 = !DILocalVariable(name: "need_frame", scope: !4850, file: !3, line: 1532, type: !661)
!4856 = !DILocalVariable(name: "need_stmts", scope: !4850, file: !3, line: 1532, type: !661)
!4857 = !DILocalVariable(name: "clause", scope: !4850, file: !3, line: 1533, type: !745)
!4858 = !DILocalVariable(name: "decl", scope: !4850, file: !3, line: 1533, type: !745)
!4859 = !DILocalVariable(name: "dummy", scope: !4850, file: !3, line: 1534, type: !662)
!4860 = !DILocalVariable(name: "new_suppress", scope: !4850, file: !3, line: 1535, type: !681)
!4861 = !DILocalVariable(name: "field", scope: !4862, file: !3, line: 1566, type: !745)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 1565, column: 6)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1563, column: 8)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 1543, column: 2)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 1541, column: 5)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 1540, column: 3)
!4867 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1540, column: 3)
!4868 = !DILocalVariable(name: "old_context", scope: !4869, file: !3, line: 1611, type: !745)
!4869 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 1610, column: 6)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 1609, column: 8)
!4871 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 1607, column: 2)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 1605, column: 5)
!4873 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1605, column: 5)
!4874 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1604, column: 7)
!4875 = !DILabel(scope: !4864, name: "do_decl_clause", file: !3, line: 1558)
!4876 = !DILocation(line: 0, scope: !4850)
!4877 = !DILocation(line: 1531, column: 65, scope: !4850)
!4878 = !DILocation(line: 1534, column: 3, scope: !4850)
!4879 = !DILocation(line: 1537, column: 18, scope: !4850)
!4880 = !DILocation(line: 1538, column: 36, scope: !4850)
!4881 = !DILocation(line: 1538, column: 3, scope: !4850)
!4882 = !DILocation(line: 0, scope: !4864)
!4883 = !DILocation(line: 0, scope: !4863)
!4884 = !DILocation(line: 1540, column: 8, scope: !4867)
!4885 = !DILocation(line: 1532, column: 8, scope: !4850)
!4886 = !DILocation(line: 1532, column: 28, scope: !4850)
!4887 = !DILocation(line: 0, scope: !4867)
!4888 = !DILocation(line: 1540, column: 3, scope: !4867)
!4889 = !DILocation(line: 1542, column: 15, scope: !4865)
!4890 = !DILocation(line: 1542, column: 7, scope: !4865)
!4891 = !DILocation(line: 1545, column: 8, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1545, column: 8)
!4893 = !DILocation(line: 1545, column: 8, scope: !4864)
!4894 = !DILocation(line: 1547, column: 4, scope: !4864)
!4895 = !DILocation(line: 1550, column: 8, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1550, column: 8)
!4897 = !DILocation(line: 1550, column: 8, scope: !4864)
!4898 = !DILocation(line: 1552, column: 4, scope: !4864)
!4899 = !DILocation(line: 1558, column: 2, scope: !4864)
!4900 = !DILocation(line: 1559, column: 11, scope: !4864)
!4901 = !DILocation(line: 1560, column: 8, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1560, column: 8)
!4903 = !DILocation(line: 1560, column: 25, scope: !4902)
!4904 = !DILocation(line: 1561, column: 8, scope: !4902)
!4905 = !DILocation(line: 1561, column: 12, scope: !4902)
!4906 = !DILocation(line: 1561, column: 31, scope: !4902)
!4907 = !DILocation(line: 1561, column: 34, scope: !4902)
!4908 = !DILocation(line: 1560, column: 8, scope: !4864)
!4909 = !DILocation(line: 1563, column: 8, scope: !4863)
!4910 = !DILocation(line: 1563, column: 46, scope: !4863)
!4911 = !DILocation(line: 1563, column: 37, scope: !4863)
!4912 = !DILocation(line: 1564, column: 8, scope: !4863)
!4913 = !DILocation(line: 1564, column: 12, scope: !4863)
!4914 = !DILocation(line: 1563, column: 8, scope: !4864)
!4915 = !DILocation(line: 1566, column: 21, scope: !4862)
!4916 = !DILocation(line: 0, scope: !4862)
!4917 = !DILocation(line: 1567, column: 12, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1567, column: 12)
!4919 = !DILocation(line: 1567, column: 12, scope: !4862)
!4920 = !DILocation(line: 1569, column: 35, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 1568, column: 3)
!4922 = !DILocation(line: 1569, column: 5, scope: !4921)
!4923 = !DILocation(line: 1571, column: 9, scope: !4921)
!4924 = !DILocation(line: 1571, column: 7, scope: !4921)
!4925 = !DILocation(line: 1573, column: 3, scope: !4921)
!4926 = !DILocation(line: 1578, column: 8, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1578, column: 8)
!4928 = !DILocation(line: 1578, column: 48, scope: !4927)
!4929 = !DILocation(line: 1578, column: 8, scope: !4864)
!4930 = !DILocation(line: 1583, column: 17, scope: !4864)
!4931 = !DILocation(line: 1584, column: 15, scope: !4864)
!4932 = !DILocation(line: 1585, column: 33, scope: !4864)
!4933 = !DILocation(line: 1585, column: 4, scope: !4864)
!4934 = !DILocation(line: 1587, column: 4, scope: !4864)
!4935 = !DILocation(line: 1598, column: 4, scope: !4864)
!4936 = !DILocation(line: 1599, column: 2, scope: !4864)
!4937 = !DILocation(line: 1540, column: 46, scope: !4866)
!4938 = !DILocation(line: 1540, column: 3, scope: !4866)
!4939 = distinct !{!4939, !4888, !4940}
!4940 = !DILocation(line: 1600, column: 5, scope: !4867)
!4941 = !DILocation(line: 1602, column: 28, scope: !4850)
!4942 = !DILocation(line: 1604, column: 7, scope: !4874)
!4943 = !DILocation(line: 1604, column: 7, scope: !4850)
!4944 = !DILocation(line: 0, scope: !4869)
!4945 = !DILocation(line: 1605, column: 10, scope: !4873)
!4946 = !DILocation(line: 0, scope: !4873)
!4947 = !DILocation(line: 1605, column: 5, scope: !4873)
!4948 = !DILocation(line: 1606, column: 15, scope: !4872)
!4949 = !DILocation(line: 1606, column: 7, scope: !4872)
!4950 = !DILocation(line: 1609, column: 8, scope: !4870)
!4951 = !DILocation(line: 1609, column: 8, scope: !4871)
!4952 = !DILocation(line: 1612, column: 5, scope: !4869)
!4953 = !DILocation(line: 1614, column: 11, scope: !4869)
!4954 = !DILocation(line: 1614, column: 3, scope: !4869)
!4955 = !DILocation(line: 1617, column: 5, scope: !4869)
!4956 = !DILocation(line: 1615, column: 8, scope: !4869)
!4957 = !DILocation(line: 1620, column: 5, scope: !4869)
!4958 = !DILocation(line: 1618, column: 8, scope: !4869)
!4959 = !DILocation(line: 1621, column: 8, scope: !4869)
!4960 = !DILocation(line: 1622, column: 3, scope: !4869)
!4961 = !DILocation(line: 1623, column: 6, scope: !4869)
!4962 = !DILocation(line: 1629, column: 8, scope: !4871)
!4963 = !DILocation(line: 1627, column: 4, scope: !4871)
!4964 = !DILocation(line: 1630, column: 4, scope: !4871)
!4965 = !DILocation(line: 1605, column: 48, scope: !4872)
!4966 = !DILocation(line: 1605, column: 5, scope: !4872)
!4967 = distinct !{!4967, !4947, !4968}
!4968 = !DILocation(line: 1634, column: 2, scope: !4873)
!4969 = !DILocation(line: 1637, column: 1, scope: !4850)
!4970 = !DILocation(line: 1636, column: 3, scope: !4850)
!4971 = distinct !DISubprogram(name: "get_local_debug_decl", scope: !3, file: !3, line: 1335, type: !4972, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4974)
!4972 = !DISubroutineType(types: !4973)
!4973 = !{!745, !669, !745, !745}
!4974 = !{!4975, !4976, !4977, !4978, !4979, !4980}
!4975 = !DILocalVariable(name: "info", arg: 1, scope: !4971, file: !3, line: 1335, type: !669)
!4976 = !DILocalVariable(name: "decl", arg: 2, scope: !4971, file: !3, line: 1335, type: !745)
!4977 = !DILocalVariable(name: "field", arg: 3, scope: !4971, file: !3, line: 1335, type: !745)
!4978 = !DILocalVariable(name: "x", scope: !4971, file: !3, line: 1337, type: !745)
!4979 = !DILocalVariable(name: "new_decl", scope: !4971, file: !3, line: 1337, type: !745)
!4980 = !DILocalVariable(name: "slot", scope: !4971, file: !3, line: 1338, type: !1462)
!4981 = !DILocation(line: 0, scope: !4971)
!4982 = !DILocation(line: 1340, column: 36, scope: !4971)
!4983 = !DILocation(line: 1340, column: 45, scope: !4971)
!4984 = !DILocation(line: 1340, column: 10, scope: !4971)
!4985 = !DILocation(line: 1341, column: 7, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 1341, column: 7)
!4987 = !DILocation(line: 1341, column: 7, scope: !4971)
!4988 = !DILocation(line: 1342, column: 5, scope: !4986)
!4989 = !DILocation(line: 1345, column: 10, scope: !4971)
!4990 = !DILocation(line: 1346, column: 13, scope: !4971)
!4991 = !DILocation(line: 1347, column: 7, scope: !4971)
!4992 = !DILocation(line: 1349, column: 14, scope: !4971)
!4993 = !DILocation(line: 1351, column: 35, scope: !4971)
!4994 = !DILocation(line: 1351, column: 3, scope: !4971)
!4995 = !DILocation(line: 1351, column: 27, scope: !4971)
!4996 = !DILocation(line: 1352, column: 32, scope: !4971)
!4997 = !DILocation(line: 1352, column: 3, scope: !4971)
!4998 = !DILocation(line: 1352, column: 30, scope: !4971)
!4999 = !DILocation(line: 1353, column: 31, scope: !4971)
!5000 = !DILocation(line: 1353, column: 29, scope: !4971)
!5001 = !DILocation(line: 1354, column: 35, scope: !4971)
!5002 = !DILocation(line: 1354, column: 3, scope: !4971)
!5003 = !DILocation(line: 1354, column: 33, scope: !4971)
!5004 = !DILocation(line: 1355, column: 34, scope: !4971)
!5005 = !DILocation(line: 1355, column: 32, scope: !4971)
!5006 = !DILocation(line: 1356, column: 30, scope: !4971)
!5007 = !DILocation(line: 1356, column: 28, scope: !4971)
!5008 = !DILocation(line: 1357, column: 33, scope: !4971)
!5009 = !DILocation(line: 1357, column: 31, scope: !4971)
!5010 = !DILocation(line: 1358, column: 3, scope: !4971)
!5011 = !DILocation(line: 1358, column: 39, scope: !4971)
!5012 = !DILocation(line: 1359, column: 8, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 1359, column: 7)
!5014 = !DILocation(line: 1359, column: 25, scope: !5013)
!5015 = !DILocation(line: 1360, column: 8, scope: !5013)
!5016 = !DILocation(line: 1360, column: 28, scope: !5013)
!5017 = !DILocation(line: 1361, column: 8, scope: !5013)
!5018 = !DILocation(line: 1361, column: 28, scope: !5013)
!5019 = !DILocation(line: 1362, column: 7, scope: !5013)
!5020 = !DILocation(line: 1362, column: 10, scope: !5013)
!5021 = !DILocation(line: 1359, column: 7, scope: !4971)
!5022 = !DILocation(line: 1363, column: 34, scope: !5013)
!5023 = !DILocation(line: 1363, column: 5, scope: !5013)
!5024 = !DILocation(line: 1365, column: 3, scope: !4971)
!5025 = !DILocation(line: 1366, column: 36, scope: !4971)
!5026 = !DILocation(line: 1367, column: 9, scope: !4971)
!5027 = !DILocation(line: 1369, column: 33, scope: !4971)
!5028 = !DILocation(line: 1369, column: 3, scope: !4971)
!5029 = !DILocation(line: 1369, column: 25, scope: !4971)
!5030 = !DILocation(line: 1370, column: 25, scope: !4971)
!5031 = !DILocation(line: 1373, column: 25, scope: !4971)
!5032 = !DILocation(line: 1375, column: 3, scope: !4971)
!5033 = !DILocation(line: 1376, column: 1, scope: !4971)
!5034 = distinct !DISubprogram(name: "get_nl_goto_field", scope: !3, file: !3, line: 543, type: !3963, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5035)
!5035 = !{!5036, !5037, !5038, !5041}
!5036 = !DILocalVariable(name: "info", arg: 1, scope: !5034, file: !3, line: 543, type: !669)
!5037 = !DILocalVariable(name: "field", scope: !5034, file: !3, line: 545, type: !745)
!5038 = !DILocalVariable(name: "size", scope: !5039, file: !3, line: 548, type: !7)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 547, column: 5)
!5040 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 546, column: 7)
!5041 = !DILocalVariable(name: "type", scope: !5039, file: !3, line: 549, type: !745)
!5042 = !DILocation(line: 0, scope: !5034)
!5043 = !DILocation(line: 545, column: 22, scope: !5034)
!5044 = !DILocation(line: 546, column: 8, scope: !5040)
!5045 = !DILocation(line: 546, column: 7, scope: !5034)
!5046 = !DILocation(line: 555, column: 20, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5039, file: !3, line: 555, column: 11)
!5048 = !DILocation(line: 555, column: 17, scope: !5047)
!5049 = !DILocation(line: 555, column: 11, scope: !5039)
!5050 = !DILocation(line: 556, column: 9, scope: !5047)
!5051 = !DILocation(line: 0, scope: !5039)
!5052 = !DILocation(line: 556, column: 2, scope: !5047)
!5053 = !DILocation(line: 558, column: 26, scope: !5047)
!5054 = !DILocation(line: 558, column: 9, scope: !5047)
!5055 = !DILocation(line: 0, scope: !5047)
!5056 = !DILocation(line: 565, column: 27, scope: !5039)
!5057 = !DILocation(line: 565, column: 9, scope: !5039)
!5058 = !DILocation(line: 564, column: 14, scope: !5039)
!5059 = !DILocation(line: 567, column: 15, scope: !5039)
!5060 = !DILocation(line: 568, column: 27, scope: !5039)
!5061 = !DILocation(line: 568, column: 7, scope: !5039)
!5062 = !DILocation(line: 568, column: 25, scope: !5039)
!5063 = !DILocation(line: 569, column: 7, scope: !5039)
!5064 = !DILocation(line: 569, column: 25, scope: !5039)
!5065 = !DILocation(line: 570, column: 28, scope: !5039)
!5066 = !DILocation(line: 570, column: 7, scope: !5039)
!5067 = !DILocation(line: 570, column: 26, scope: !5039)
!5068 = !DILocation(line: 571, column: 7, scope: !5039)
!5069 = !DILocation(line: 571, column: 32, scope: !5039)
!5070 = !DILocation(line: 573, column: 33, scope: !5039)
!5071 = !DILocation(line: 573, column: 7, scope: !5039)
!5072 = !DILocation(line: 575, column: 27, scope: !5039)
!5073 = !DILocation(line: 576, column: 5, scope: !5039)
!5074 = !DILocation(line: 578, column: 3, scope: !5034)
!5075 = distinct !DISubprogram(name: "gimple_label_label", scope: !584, file: !584, line: 2444, type: !3831, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5076)
!5076 = !{!5077}
!5077 = !DILocalVariable(name: "gs", arg: 1, scope: !5075, file: !584, line: 2444, type: !3824)
!5078 = !DILocation(line: 0, scope: !5075)
!5079 = !DILocation(line: 2447, column: 10, scope: !5075)
!5080 = !DILocation(line: 2447, column: 3, scope: !5075)
!5081 = distinct !DISubprogram(name: "gsi_prev", scope: !584, file: !584, line: 4493, type: !5082, scopeLine: 4494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5084)
!5082 = !DISubroutineType(types: !5083)
!5083 = !{null, !2933}
!5084 = !{!5085}
!5085 = !DILocalVariable(name: "i", arg: 1, scope: !5081, file: !584, line: 4493, type: !2933)
!5086 = !DILocation(line: 0, scope: !5081)
!5087 = !DILocation(line: 4495, column: 15, scope: !5081)
!5088 = !DILocation(line: 4495, column: 20, scope: !5081)
!5089 = !DILocation(line: 4495, column: 10, scope: !5081)
!5090 = !DILocation(line: 4496, column: 1, scope: !5081)
!5091 = distinct !DISubprogram(name: "convert_tramp_reference_stmt", scope: !3, file: !3, line: 1934, type: !2931, scopeLine: 1936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5092)
!5092 = !{!5093, !5094, !5095, !5096, !5097, !5100}
!5093 = !DILocalVariable(name: "gsi", arg: 1, scope: !5091, file: !3, line: 1934, type: !2933)
!5094 = !DILocalVariable(name: "handled_ops_p", arg: 2, scope: !5091, file: !3, line: 1934, type: !660)
!5095 = !DILocalVariable(name: "wi", arg: 3, scope: !5091, file: !3, line: 1935, type: !1985)
!5096 = !DILocalVariable(name: "stmt", scope: !5091, file: !3, line: 1937, type: !1007)
!5097 = !DILocalVariable(name: "i", scope: !5098, file: !3, line: 1945, type: !699)
!5098 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 1942, column: 7)
!5099 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 1940, column: 5)
!5100 = !DILocalVariable(name: "nargs", scope: !5098, file: !3, line: 1945, type: !699)
!5101 = !DILocation(line: 0, scope: !5091)
!5102 = !DILocation(line: 1937, column: 17, scope: !5091)
!5103 = !DILocation(line: 1939, column: 11, scope: !5091)
!5104 = !DILocation(line: 1939, column: 3, scope: !5091)
!5105 = !DILocation(line: 1945, column: 27, scope: !5098)
!5106 = !DILocation(line: 0, scope: !5098)
!5107 = !DILocation(line: 0, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 1946, column: 2)
!5109 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 1946, column: 2)
!5110 = !DILocation(line: 1946, column: 7, scope: !5109)
!5111 = !DILocation(line: 0, scope: !5109)
!5112 = !DILocation(line: 1946, column: 16, scope: !5108)
!5113 = !DILocation(line: 1946, column: 2, scope: !5109)
!5114 = !DILocation(line: 1947, column: 4, scope: !5108)
!5115 = !DILocation(line: 1946, column: 26, scope: !5108)
!5116 = !DILocation(line: 1946, column: 2, scope: !5108)
!5117 = distinct !{!5117, !5113, !5118}
!5118 = !DILocation(line: 1947, column: 4, scope: !5109)
!5119 = !DILocation(line: 1959, column: 3, scope: !5091)
!5120 = !DILocation(line: 1960, column: 1, scope: !5091)
!5121 = distinct !DISubprogram(name: "convert_tramp_reference_op", scope: !3, file: !3, line: 1859, type: !2936, scopeLine: 1860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5122)
!5122 = !{!5123, !5124, !5125, !5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134}
!5123 = !DILocalVariable(name: "tp", arg: 1, scope: !5121, file: !3, line: 1859, type: !1042)
!5124 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !5121, file: !3, line: 1859, type: !2938)
!5125 = !DILocalVariable(name: "data", arg: 3, scope: !5121, file: !3, line: 1859, type: !666)
!5126 = !DILocalVariable(name: "wi", scope: !5121, file: !3, line: 1861, type: !1985)
!5127 = !DILocalVariable(name: "info", scope: !5121, file: !3, line: 1862, type: !3065)
!5128 = !DILocalVariable(name: "i", scope: !5121, file: !3, line: 1862, type: !669)
!5129 = !DILocalVariable(name: "t", scope: !5121, file: !3, line: 1863, type: !745)
!5130 = !DILocalVariable(name: "decl", scope: !5121, file: !3, line: 1863, type: !745)
!5131 = !DILocalVariable(name: "target_context", scope: !5121, file: !3, line: 1863, type: !745)
!5132 = !DILocalVariable(name: "x", scope: !5121, file: !3, line: 1863, type: !745)
!5133 = !DILocalVariable(name: "builtin", scope: !5121, file: !3, line: 1863, type: !745)
!5134 = !DILocalVariable(name: "call", scope: !5121, file: !3, line: 1864, type: !1007)
!5135 = !DILocation(line: 0, scope: !5121)
!5136 = !DILocation(line: 1862, column: 65, scope: !5121)
!5137 = !DILocation(line: 1863, column: 12, scope: !5121)
!5138 = !DILocation(line: 1866, column: 18, scope: !5121)
!5139 = !DILocation(line: 1867, column: 11, scope: !5121)
!5140 = !DILocation(line: 1867, column: 3, scope: !5121)
!5141 = !DILocation(line: 1876, column: 14, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5121, file: !3, line: 1868, column: 5)
!5143 = !DILocation(line: 1877, column: 11, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1877, column: 11)
!5145 = !DILocation(line: 1877, column: 28, scope: !5144)
!5146 = !DILocation(line: 1877, column: 11, scope: !5142)
!5147 = !DILocation(line: 1881, column: 24, scope: !5142)
!5148 = !DILocation(line: 1882, column: 12, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1882, column: 11)
!5150 = !DILocation(line: 1882, column: 11, scope: !5142)
!5151 = !DILocation(line: 1887, column: 12, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1887, column: 11)
!5153 = !DILocation(line: 1887, column: 11, scope: !5142)
!5154 = !DILocation(line: 1891, column: 11, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1891, column: 11)
!5156 = !DILocation(line: 1891, column: 11, scope: !5142)
!5157 = !DILocation(line: 1896, column: 7, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1896, column: 7)
!5159 = !DILocation(line: 0, scope: !5158)
!5160 = !DILocation(line: 1896, column: 25, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 1896, column: 7)
!5162 = !DILocation(line: 1896, column: 33, scope: !5161)
!5163 = !DILocation(line: 1896, column: 59, scope: !5161)
!5164 = !DILocation(line: 1896, column: 7, scope: !5161)
!5165 = distinct !{!5165, !5157, !5166}
!5166 = !DILocation(line: 1897, column: 2, scope: !5158)
!5167 = !DILocation(line: 1898, column: 11, scope: !5142)
!5168 = !DILocation(line: 1901, column: 58, scope: !5142)
!5169 = !DILocation(line: 1901, column: 11, scope: !5142)
!5170 = !DILocation(line: 1902, column: 11, scope: !5142)
!5171 = !DILocation(line: 1903, column: 11, scope: !5142)
!5172 = !DILocation(line: 1907, column: 17, scope: !5142)
!5173 = !DILocation(line: 1908, column: 14, scope: !5142)
!5174 = !DILocation(line: 1909, column: 11, scope: !5142)
!5175 = !DILocation(line: 1912, column: 11, scope: !5142)
!5176 = !DILocation(line: 1913, column: 11, scope: !5142)
!5177 = !DILocation(line: 1915, column: 11, scope: !5142)
!5178 = !DILocation(line: 1916, column: 7, scope: !5142)
!5179 = !DILocation(line: 1919, column: 12, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1919, column: 11)
!5181 = !DILocation(line: 1919, column: 11, scope: !5142)
!5182 = !DILocation(line: 1920, column: 17, scope: !5180)
!5183 = !DILocation(line: 1920, column: 2, scope: !5180)
!5184 = !DILocation(line: 1924, column: 3, scope: !5121)
!5185 = distinct !DISubprogram(name: "convert_gimple_call", scope: !3, file: !3, line: 1969, type: !2931, scopeLine: 1971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5186)
!5186 = !{!5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5201}
!5187 = !DILocalVariable(name: "gsi", arg: 1, scope: !5185, file: !3, line: 1969, type: !2933)
!5188 = !DILocalVariable(name: "handled_ops_p", arg: 2, scope: !5185, file: !3, line: 1969, type: !660)
!5189 = !DILocalVariable(name: "wi", arg: 3, scope: !5185, file: !3, line: 1970, type: !1985)
!5190 = !DILocalVariable(name: "info", scope: !5185, file: !3, line: 1972, type: !3065)
!5191 = !DILocalVariable(name: "decl", scope: !5185, file: !3, line: 1973, type: !745)
!5192 = !DILocalVariable(name: "target_context", scope: !5185, file: !3, line: 1973, type: !745)
!5193 = !DILocalVariable(name: "save_static_chain_added", scope: !5185, file: !3, line: 1974, type: !665)
!5194 = !DILocalVariable(name: "i", scope: !5185, file: !3, line: 1975, type: !662)
!5195 = !DILocalVariable(name: "stmt", scope: !5185, file: !3, line: 1976, type: !1007)
!5196 = !DILocalVariable(name: "c", scope: !5197, file: !3, line: 2002, type: !745)
!5197 = distinct !DILexicalBlock(scope: !5198, file: !3, line: 2001, column: 2)
!5198 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 2000, column: 7)
!5199 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 2000, column: 7)
!5200 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 1979, column: 5)
!5201 = !DILocalVariable(name: "decl", scope: !5197, file: !3, line: 2002, type: !745)
!5202 = !DILocation(line: 0, scope: !5185)
!5203 = !DILocation(line: 1972, column: 65, scope: !5185)
!5204 = !DILocation(line: 1976, column: 17, scope: !5185)
!5205 = !DILocation(line: 1978, column: 11, scope: !5185)
!5206 = !DILocation(line: 1978, column: 3, scope: !5185)
!5207 = !DILocation(line: 1981, column: 11, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 1981, column: 11)
!5209 = !DILocation(line: 1981, column: 11, scope: !5200)
!5210 = !DILocation(line: 1983, column: 14, scope: !5200)
!5211 = !DILocation(line: 1984, column: 12, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 1984, column: 11)
!5213 = !DILocation(line: 1984, column: 11, scope: !5200)
!5214 = !DILocation(line: 1986, column: 24, scope: !5200)
!5215 = !DILocation(line: 1987, column: 11, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 1987, column: 11)
!5217 = !DILocation(line: 1987, column: 26, scope: !5216)
!5218 = !DILocation(line: 1987, column: 29, scope: !5216)
!5219 = !DILocation(line: 1987, column: 11, scope: !5200)
!5220 = !DILocation(line: 1990, column: 14, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 1988, column: 2)
!5222 = !DILocation(line: 1989, column: 33, scope: !5221)
!5223 = !DILocation(line: 1989, column: 4, scope: !5221)
!5224 = !DILocation(line: 1991, column: 45, scope: !5221)
!5225 = !DILocation(line: 1991, column: 53, scope: !5221)
!5226 = !DILocation(line: 1991, column: 35, scope: !5221)
!5227 = !DILocation(line: 1991, column: 10, scope: !5221)
!5228 = !DILocation(line: 1991, column: 29, scope: !5221)
!5229 = !DILocation(line: 1992, column: 2, scope: !5221)
!5230 = !DILocation(line: 1997, column: 39, scope: !5200)
!5231 = !DILocation(line: 1998, column: 32, scope: !5200)
!5232 = !DILocation(line: 1999, column: 51, scope: !5200)
!5233 = !DILocation(line: 1999, column: 7, scope: !5200)
!5234 = !DILocation(line: 0, scope: !5197)
!5235 = !DILocation(line: 2000, column: 12, scope: !5199)
!5236 = !DILocation(line: 0, scope: !5199)
!5237 = !DILocation(line: 2000, column: 21, scope: !5198)
!5238 = !DILocation(line: 2000, column: 7, scope: !5199)
!5239 = !DILocation(line: 2003, column: 15, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 2003, column: 8)
!5241 = !DILocation(line: 2003, column: 9, scope: !5240)
!5242 = !DILocation(line: 2003, column: 39, scope: !5240)
!5243 = !DILocation(line: 2003, column: 34, scope: !5240)
!5244 = !DILocation(line: 2003, column: 46, scope: !5240)
!5245 = !DILocation(line: 2003, column: 8, scope: !5197)
!5246 = !DILocation(line: 2005, column: 11, scope: !5197)
!5247 = !DILocation(line: 2005, column: 15, scope: !5197)
!5248 = !DILocation(line: 2005, column: 45, scope: !5197)
!5249 = !DILocation(line: 2007, column: 13, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 2007, column: 4)
!5251 = !DILocation(line: 2007, column: 9, scope: !5250)
!5252 = !DILocation(line: 0, scope: !5250)
!5253 = !DILocation(line: 2007, column: 4, scope: !5250)
!5254 = !DILocation(line: 2010, column: 11, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 2010, column: 10)
!5256 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 2007, column: 4)
!5257 = !DILocation(line: 2010, column: 31, scope: !5255)
!5258 = !DILocation(line: 2011, column: 4, scope: !5255)
!5259 = !DILocation(line: 2011, column: 27, scope: !5255)
!5260 = !DILocation(line: 2012, column: 3, scope: !5255)
!5261 = !DILocation(line: 2012, column: 6, scope: !5255)
!5262 = !DILocation(line: 2012, column: 26, scope: !5255)
!5263 = !DILocation(line: 2010, column: 10, scope: !5256)
!5264 = !DILocation(line: 2009, column: 13, scope: !5256)
!5265 = !DILocation(line: 2007, column: 4, scope: !5256)
!5266 = distinct !{!5266, !5253, !5267}
!5267 = !DILocation(line: 2013, column: 8, scope: !5250)
!5268 = !DILocation(line: 2014, column: 8, scope: !5197)
!5269 = !DILocation(line: 2016, column: 30, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 2015, column: 6)
!5271 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 2014, column: 8)
!5272 = !DILocation(line: 2017, column: 9, scope: !5270)
!5273 = !DILocation(line: 2016, column: 12, scope: !5270)
!5274 = !DILocation(line: 2019, column: 8, scope: !5270)
!5275 = !DILocation(line: 2019, column: 28, scope: !5270)
!5276 = !DILocation(line: 2020, column: 31, scope: !5270)
!5277 = !DILocation(line: 2020, column: 8, scope: !5270)
!5278 = !DILocation(line: 2020, column: 29, scope: !5270)
!5279 = !DILocation(line: 2021, column: 8, scope: !5270)
!5280 = !DILocation(line: 2022, column: 6, scope: !5270)
!5281 = !DILocation(line: 2000, column: 27, scope: !5198)
!5282 = !DILocation(line: 2000, column: 7, scope: !5198)
!5283 = distinct !{!5283, !5238, !5284}
!5284 = !DILocation(line: 2023, column: 2, scope: !5199)
!5285 = !DILocation(line: 2024, column: 32, scope: !5200)
!5286 = !DILocation(line: 2025, column: 7, scope: !5200)
!5287 = !DILocation(line: 2029, column: 6, scope: !5200)
!5288 = !DILocation(line: 2028, column: 7, scope: !5200)
!5289 = !DILocation(line: 2037, column: 51, scope: !5200)
!5290 = !DILocation(line: 2037, column: 7, scope: !5200)
!5291 = !DILocation(line: 2038, column: 7, scope: !5200)
!5292 = !DILocation(line: 2043, column: 7, scope: !5200)
!5293 = !DILocation(line: 2047, column: 3, scope: !5185)
!5294 = !DILocation(line: 2048, column: 1, scope: !5185)
!5295 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !584, file: !584, line: 2013, type: !5296, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5298)
!5296 = !DISubroutineType(types: !5297)
!5297 = !{!7, !3824}
!5298 = !{!5299, !5300}
!5299 = !DILocalVariable(name: "gs", arg: 1, scope: !5295, file: !584, line: 2013, type: !3824)
!5300 = !DILocalVariable(name: "num_ops", scope: !5295, file: !584, line: 2015, type: !7)
!5301 = !DILocation(line: 0, scope: !5295)
!5302 = !DILocation(line: 2017, column: 13, scope: !5295)
!5303 = !DILocation(line: 2018, column: 18, scope: !5295)
!5304 = !DILocation(line: 2018, column: 3, scope: !5295)
!5305 = distinct !DISubprogram(name: "gimple_call_arg_ptr", scope: !584, file: !584, line: 2036, type: !5306, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5308)
!5306 = !DISubroutineType(types: !5307)
!5307 = !{!1042, !3824, !7}
!5308 = !{!5309, !5310}
!5309 = !DILocalVariable(name: "gs", arg: 1, scope: !5305, file: !584, line: 2036, type: !3824)
!5310 = !DILocalVariable(name: "index", arg: 2, scope: !5305, file: !584, line: 2036, type: !7)
!5311 = !DILocation(line: 0, scope: !5305)
!5312 = !DILocation(line: 2039, column: 35, scope: !5305)
!5313 = !DILocation(line: 2039, column: 10, scope: !5305)
!5314 = !DILocation(line: 2039, column: 3, scope: !5305)
!5315 = distinct !DISubprogram(name: "gimple_num_ops", scope: !584, file: !584, line: 1596, type: !5296, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5316)
!5316 = !{!5317}
!5317 = !DILocalVariable(name: "gs", arg: 1, scope: !5315, file: !584, line: 1596, type: !3824)
!5318 = !DILocation(line: 0, scope: !5315)
!5319 = !DILocation(line: 1598, column: 21, scope: !5315)
!5320 = !DILocation(line: 1598, column: 3, scope: !5315)
!5321 = distinct !DISubprogram(name: "gimple_op_ptr", scope: !584, file: !584, line: 1647, type: !5306, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5322)
!5322 = !{!5323, !5324}
!5323 = !DILocalVariable(name: "gs", arg: 1, scope: !5321, file: !584, line: 1647, type: !3824)
!5324 = !DILocalVariable(name: "i", arg: 2, scope: !5321, file: !584, line: 1647, type: !7)
!5325 = !DILocation(line: 0, scope: !5321)
!5326 = !DILocation(line: 1649, column: 7, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5321, file: !584, line: 1649, column: 7)
!5328 = !DILocation(line: 1649, column: 7, scope: !5321)
!5329 = !DILocation(line: 1654, column: 14, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5327, file: !584, line: 1650, column: 5)
!5331 = !DILocation(line: 1654, column: 50, scope: !5330)
!5332 = !DILocation(line: 1654, column: 7, scope: !5330)
!5333 = !DILocation(line: 0, scope: !5327)
!5334 = !DILocation(line: 1658, column: 1, scope: !5321)
!5335 = distinct !DISubprogram(name: "lookup_tramp_for_decl", scope: !3, file: !3, line: 510, type: !4416, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5336)
!5336 = !{!5337, !5338, !5339, !5340, !5341}
!5337 = !DILocalVariable(name: "info", arg: 1, scope: !5335, file: !3, line: 510, type: !669)
!5338 = !DILocalVariable(name: "decl", arg: 2, scope: !5335, file: !3, line: 510, type: !745)
!5339 = !DILocalVariable(name: "insert", arg: 3, scope: !5335, file: !3, line: 511, type: !648)
!5340 = !DILocalVariable(name: "slot", scope: !5335, file: !3, line: 513, type: !1462)
!5341 = !DILocalVariable(name: "field", scope: !5342, file: !3, line: 524, type: !745)
!5342 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 523, column: 5)
!5343 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 522, column: 7)
!5344 = !DILocation(line: 0, scope: !5335)
!5345 = !DILocation(line: 515, column: 14, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 515, column: 7)
!5347 = !DILocation(line: 515, column: 7, scope: !5335)
!5348 = !DILocation(line: 517, column: 14, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 516, column: 5)
!5350 = !DILocation(line: 518, column: 14, scope: !5349)
!5351 = !DILocation(line: 518, column: 28, scope: !5349)
!5352 = !DILocation(line: 521, column: 10, scope: !5335)
!5353 = !DILocation(line: 522, column: 8, scope: !5343)
!5354 = !DILocation(line: 522, column: 7, scope: !5335)
!5355 = !DILocation(line: 524, column: 20, scope: !5342)
!5356 = !DILocation(line: 0, scope: !5342)
!5357 = !DILocation(line: 525, column: 27, scope: !5342)
!5358 = !DILocation(line: 525, column: 7, scope: !5342)
!5359 = !DILocation(line: 525, column: 25, scope: !5342)
!5360 = !DILocation(line: 526, column: 27, scope: !5342)
!5361 = !DILocation(line: 526, column: 7, scope: !5342)
!5362 = !DILocation(line: 526, column: 25, scope: !5342)
!5363 = !DILocation(line: 527, column: 7, scope: !5342)
!5364 = !DILocation(line: 527, column: 32, scope: !5342)
!5365 = !DILocation(line: 529, column: 33, scope: !5342)
!5366 = !DILocation(line: 529, column: 7, scope: !5342)
!5367 = !DILocation(line: 530, column: 13, scope: !5342)
!5368 = !DILocation(line: 532, column: 13, scope: !5342)
!5369 = !DILocation(line: 532, column: 31, scope: !5342)
!5370 = !DILocation(line: 535, column: 17, scope: !5335)
!5371 = !DILocation(line: 533, column: 5, scope: !5342)
!5372 = !DILocation(line: 535, column: 3, scope: !5335)
!5373 = !DILocation(line: 536, column: 1, scope: !5335)
!5374 = distinct !DISubprogram(name: "init_tmp_var_with_call", scope: !3, file: !3, line: 402, type: !5375, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5377)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{!745, !669, !2933, !1007}
!5377 = !{!5378, !5379, !5380, !5381}
!5378 = !DILocalVariable(name: "info", arg: 1, scope: !5374, file: !3, line: 402, type: !669)
!5379 = !DILocalVariable(name: "gsi", arg: 2, scope: !5374, file: !3, line: 402, type: !2933)
!5380 = !DILocalVariable(name: "call", arg: 3, scope: !5374, file: !3, line: 403, type: !1007)
!5381 = !DILocalVariable(name: "t", scope: !5374, file: !3, line: 405, type: !745)
!5382 = !DILocation(line: 0, scope: !5374)
!5383 = !DILocation(line: 407, column: 33, scope: !5374)
!5384 = !DILocation(line: 407, column: 7, scope: !5374)
!5385 = !DILocation(line: 408, column: 3, scope: !5374)
!5386 = !DILocation(line: 409, column: 9, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 409, column: 7)
!5388 = !DILocation(line: 409, column: 7, scope: !5374)
!5389 = !DILocation(line: 410, column: 49, scope: !5387)
!5390 = !DILocation(line: 410, column: 32, scope: !5387)
!5391 = !DILocation(line: 410, column: 5, scope: !5387)
!5392 = !DILocation(line: 411, column: 3, scope: !5374)
!5393 = !DILocation(line: 413, column: 3, scope: !5374)
!5394 = distinct !DISubprogram(name: "get_trampoline_type", scope: !3, file: !3, line: 471, type: !3963, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5395)
!5395 = !{!5396, !5397, !5398, !5399}
!5396 = !DILocalVariable(name: "info", arg: 1, scope: !5394, file: !3, line: 471, type: !669)
!5397 = !DILocalVariable(name: "align", scope: !5394, file: !3, line: 473, type: !7)
!5398 = !DILocalVariable(name: "size", scope: !5394, file: !3, line: 473, type: !7)
!5399 = !DILocalVariable(name: "t", scope: !5394, file: !3, line: 474, type: !745)
!5400 = !DILocation(line: 0, scope: !5394)
!5401 = !DILocation(line: 476, column: 7, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5394, file: !3, line: 476, column: 7)
!5403 = !DILocation(line: 476, column: 7, scope: !5394)
!5404 = !DILocation(line: 477, column: 5, scope: !5402)
!5405 = !DILocation(line: 490, column: 25, scope: !5394)
!5406 = !DILocation(line: 490, column: 7, scope: !5394)
!5407 = !DILocation(line: 491, column: 25, scope: !5394)
!5408 = !DILocation(line: 491, column: 7, scope: !5394)
!5409 = !DILocation(line: 492, column: 7, scope: !5394)
!5410 = !DILocation(line: 494, column: 3, scope: !5394)
!5411 = !DILocation(line: 494, column: 18, scope: !5394)
!5412 = !DILocation(line: 495, column: 3, scope: !5394)
!5413 = !DILocation(line: 495, column: 23, scope: !5394)
!5414 = !DILocation(line: 497, column: 21, scope: !5394)
!5415 = !DILocation(line: 497, column: 19, scope: !5394)
!5416 = !DILocation(line: 498, column: 33, scope: !5394)
!5417 = !DILocation(line: 498, column: 3, scope: !5394)
!5418 = !DILocation(line: 498, column: 31, scope: !5394)
!5419 = !DILocation(line: 499, column: 3, scope: !5394)
!5420 = !DILocation(line: 499, column: 33, scope: !5394)
!5421 = !DILocation(line: 500, column: 16, scope: !5394)
!5422 = !DILocation(line: 500, column: 3, scope: !5394)
!5423 = !DILocation(line: 501, column: 22, scope: !5394)
!5424 = !DILocation(line: 501, column: 3, scope: !5394)
!5425 = !DILocation(line: 501, column: 20, scope: !5394)
!5426 = !DILocation(line: 503, column: 10, scope: !5394)
!5427 = !DILocation(line: 503, column: 3, scope: !5394)
!5428 = !DILocation(line: 504, column: 1, scope: !5394)
!5429 = distinct !DISubprogram(name: "gimple_call_return_type", scope: !584, file: !584, line: 1966, type: !3831, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5430)
!5430 = !{!5431, !5432, !5433}
!5431 = !DILocalVariable(name: "gs", arg: 1, scope: !5429, file: !584, line: 1966, type: !3824)
!5432 = !DILocalVariable(name: "fn", scope: !5429, file: !584, line: 1968, type: !745)
!5433 = !DILocalVariable(name: "type", scope: !5429, file: !584, line: 1969, type: !745)
!5434 = !DILocation(line: 0, scope: !5429)
!5435 = !DILocation(line: 1968, column: 13, scope: !5429)
!5436 = !DILocation(line: 1969, column: 15, scope: !5429)
!5437 = !DILocation(line: 1972, column: 10, scope: !5429)
!5438 = !DILocation(line: 1976, column: 10, scope: !5429)
!5439 = !DILocation(line: 1976, column: 3, scope: !5429)
!5440 = distinct !DISubprogram(name: "gimple_call_set_lhs", scope: !584, file: !584, line: 1898, type: !4024, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5441)
!5441 = !{!5442, !5443}
!5442 = !DILocalVariable(name: "gs", arg: 1, scope: !5440, file: !584, line: 1898, type: !1007)
!5443 = !DILocalVariable(name: "lhs", arg: 2, scope: !5440, file: !584, line: 1898, type: !745)
!5444 = !DILocation(line: 0, scope: !5440)
!5445 = !DILocation(line: 1901, column: 3, scope: !5440)
!5446 = !DILocation(line: 1902, column: 7, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5440, file: !584, line: 1902, column: 7)
!5448 = !DILocation(line: 1902, column: 11, scope: !5447)
!5449 = !DILocation(line: 1902, column: 14, scope: !5447)
!5450 = !DILocation(line: 1902, column: 30, scope: !5447)
!5451 = !DILocation(line: 1902, column: 7, scope: !5440)
!5452 = !DILocation(line: 1903, column: 5, scope: !5447)
!5453 = !DILocation(line: 1903, column: 29, scope: !5447)
!5454 = !DILocation(line: 1904, column: 1, scope: !5440)
!5455 = distinct !DISubprogram(name: "gimple_call_fn", scope: !584, file: !584, line: 1911, type: !3831, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5456)
!5456 = !{!5457}
!5457 = !DILocalVariable(name: "gs", arg: 1, scope: !5455, file: !584, line: 1911, type: !3824)
!5458 = !DILocation(line: 0, scope: !5455)
!5459 = !DILocation(line: 1914, column: 10, scope: !5455)
!5460 = !DILocation(line: 1914, column: 3, scope: !5455)
!5461 = distinct !DISubprogram(name: "gimple_set_op", scope: !584, file: !584, line: 1663, type: !5462, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5464)
!5462 = !DISubroutineType(types: !5463)
!5463 = !{null, !1007, !7, !745}
!5464 = !{!5465, !5466, !5467}
!5465 = !DILocalVariable(name: "gs", arg: 1, scope: !5461, file: !584, line: 1663, type: !1007)
!5466 = !DILocalVariable(name: "i", arg: 2, scope: !5461, file: !584, line: 1663, type: !7)
!5467 = !DILocalVariable(name: "op", arg: 3, scope: !5461, file: !584, line: 1663, type: !745)
!5468 = !DILocation(line: 0, scope: !5461)
!5469 = !DILocation(line: 1665, column: 3, scope: !5461)
!5470 = !DILocation(line: 1671, column: 3, scope: !5461)
!5471 = !DILocation(line: 1671, column: 22, scope: !5461)
!5472 = !DILocation(line: 1672, column: 1, scope: !5461)
!5473 = distinct !DISubprogram(name: "gimple_call_chain", scope: !584, file: !584, line: 1983, type: !3831, scopeLine: 1984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5474)
!5474 = !{!5475}
!5475 = !DILocalVariable(name: "gs", arg: 1, scope: !5473, file: !584, line: 1983, type: !3824)
!5476 = !DILocation(line: 0, scope: !5473)
!5477 = !DILocation(line: 1986, column: 10, scope: !5473)
!5478 = !DILocation(line: 1986, column: 3, scope: !5473)
!5479 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !584, file: !584, line: 1954, type: !3831, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5480)
!5480 = !{!5481, !5482}
!5481 = !DILocalVariable(name: "gs", arg: 1, scope: !5479, file: !584, line: 1954, type: !3824)
!5482 = !DILocalVariable(name: "addr", scope: !5479, file: !584, line: 1956, type: !745)
!5483 = !DILocation(line: 0, scope: !5479)
!5484 = !DILocation(line: 1956, column: 15, scope: !5479)
!5485 = !DILocation(line: 1957, column: 7, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5479, file: !584, line: 1957, column: 7)
!5487 = !DILocation(line: 1957, column: 24, scope: !5486)
!5488 = !DILocation(line: 1957, column: 7, scope: !5479)
!5489 = !DILocation(line: 1958, column: 12, scope: !5486)
!5490 = !DILocation(line: 1958, column: 5, scope: !5486)
!5491 = !DILocation(line: 1960, column: 1, scope: !5479)
!5492 = distinct !DISubprogram(name: "gimple_call_set_chain", scope: !584, file: !584, line: 2002, type: !4024, scopeLine: 2003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5493)
!5493 = !{!5494, !5495}
!5494 = !DILocalVariable(name: "gs", arg: 1, scope: !5492, file: !584, line: 2002, type: !1007)
!5495 = !DILocalVariable(name: "chain", arg: 2, scope: !5492, file: !584, line: 2002, type: !745)
!5496 = !DILocation(line: 0, scope: !5492)
!5497 = !DILocation(line: 2006, column: 3, scope: !5492)
!5498 = !DILocation(line: 2007, column: 1, scope: !5492)
!5499 = distinct !DISubprogram(name: "get_static_chain", scope: !3, file: !3, line: 745, type: !4778, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5500)
!5500 = !{!5501, !5502, !5503, !5504, !5505, !5506}
!5501 = !DILocalVariable(name: "info", arg: 1, scope: !5499, file: !3, line: 745, type: !669)
!5502 = !DILocalVariable(name: "target_context", arg: 2, scope: !5499, file: !3, line: 745, type: !745)
!5503 = !DILocalVariable(name: "gsi", arg: 3, scope: !5499, file: !3, line: 746, type: !2933)
!5504 = !DILocalVariable(name: "i", scope: !5499, file: !3, line: 748, type: !669)
!5505 = !DILocalVariable(name: "x", scope: !5499, file: !3, line: 749, type: !745)
!5506 = !DILocalVariable(name: "field", scope: !5507, file: !3, line: 761, type: !745)
!5507 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 760, column: 2)
!5508 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 759, column: 7)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 759, column: 7)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 756, column: 5)
!5511 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 751, column: 7)
!5512 = !DILocation(line: 0, scope: !5499)
!5513 = !DILocation(line: 751, column: 13, scope: !5511)
!5514 = !DILocation(line: 751, column: 21, scope: !5511)
!5515 = !DILocation(line: 751, column: 7, scope: !5499)
!5516 = !DILocation(line: 753, column: 29, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 752, column: 5)
!5518 = !DILocation(line: 753, column: 11, scope: !5517)
!5519 = !DILocation(line: 754, column: 5, scope: !5517)
!5520 = !DILocation(line: 757, column: 11, scope: !5510)
!5521 = !DILocation(line: 759, column: 12, scope: !5509)
!5522 = !DILocation(line: 0, scope: !5510)
!5523 = !DILocation(line: 0, scope: !5509)
!5524 = !DILocation(line: 759, column: 32, scope: !5508)
!5525 = !DILocation(line: 759, column: 40, scope: !5508)
!5526 = !DILocation(line: 759, column: 7, scope: !5509)
!5527 = !DILocation(line: 761, column: 17, scope: !5507)
!5528 = !DILocation(line: 0, scope: !5507)
!5529 = !DILocation(line: 763, column: 8, scope: !5507)
!5530 = !DILocation(line: 764, column: 8, scope: !5507)
!5531 = !DILocation(line: 765, column: 8, scope: !5507)
!5532 = !DILocation(line: 759, column: 7, scope: !5508)
!5533 = distinct !{!5533, !5526, !5534}
!5534 = !DILocation(line: 766, column: 2, scope: !5509)
!5535 = !DILocation(line: 769, column: 3, scope: !5499)
!5536 = !DILocation(line: 0, scope: !5511)
!5537 = distinct !DISubprogram(name: "finalize_nesting_tree_1", scope: !3, file: !3, line: 2257, type: !3586, scopeLine: 2258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5538)
!5538 = !{!5539, !5540, !5541, !5542, !5543, !5544, !5547, !5548, !5551, !5555, !5556, !5557, !5560, !5563, !5566, !5570, !5571, !5572, !5573, !5574, !5577, !5580, !5581, !5584, !5589, !5590, !5591}
!5539 = !DILocalVariable(name: "root", arg: 1, scope: !5537, file: !3, line: 2257, type: !669)
!5540 = !DILocalVariable(name: "stmt_list", scope: !5537, file: !3, line: 2259, type: !997)
!5541 = !DILocalVariable(name: "stmt", scope: !5537, file: !3, line: 2260, type: !1007)
!5542 = !DILocalVariable(name: "context", scope: !5537, file: !3, line: 2261, type: !745)
!5543 = !DILocalVariable(name: "sf", scope: !5537, file: !3, line: 2262, type: !1395)
!5544 = !DILocalVariable(name: "save_warn_padded", scope: !5545, file: !3, line: 2272, type: !662)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 2269, column: 5)
!5546 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2268, column: 7)
!5547 = !DILocalVariable(name: "adjust", scope: !5545, file: !3, line: 2273, type: !1042)
!5548 = !DILocalVariable(name: "p", scope: !5549, file: !3, line: 2300, type: !745)
!5549 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 2299, column: 5)
!5550 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2298, column: 7)
!5551 = !DILocalVariable(name: "field", scope: !5552, file: !3, line: 2303, type: !745)
!5552 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 2302, column: 2)
!5553 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 2301, column: 7)
!5554 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 2301, column: 7)
!5555 = !DILocalVariable(name: "x", scope: !5552, file: !3, line: 2303, type: !745)
!5556 = !DILocalVariable(name: "y", scope: !5552, file: !3, line: 2303, type: !745)
!5557 = !DILocalVariable(name: "gsi", scope: !5558, file: !3, line: 2323, type: !1989)
!5558 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 2322, column: 6)
!5559 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 2320, column: 8)
!5560 = !DILocalVariable(name: "x", scope: !5561, file: !3, line: 2334, type: !745)
!5561 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 2333, column: 5)
!5562 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2332, column: 7)
!5563 = !DILocalVariable(name: "i", scope: !5564, file: !3, line: 2343, type: !669)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 2342, column: 5)
!5565 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2341, column: 7)
!5566 = !DILocalVariable(name: "arg1", scope: !5567, file: !3, line: 2346, type: !745)
!5567 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 2345, column: 2)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 2344, column: 7)
!5569 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 2344, column: 7)
!5570 = !DILocalVariable(name: "arg2", scope: !5567, file: !3, line: 2346, type: !745)
!5571 = !DILocalVariable(name: "arg3", scope: !5567, file: !3, line: 2346, type: !745)
!5572 = !DILocalVariable(name: "x", scope: !5567, file: !3, line: 2346, type: !745)
!5573 = !DILocalVariable(name: "field", scope: !5567, file: !3, line: 2346, type: !745)
!5574 = !DILocalVariable(name: "bind", scope: !5575, file: !3, line: 2370, type: !1007)
!5575 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 2369, column: 5)
!5576 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2368, column: 7)
!5577 = !DILocalVariable(name: "debug_var", scope: !5578, file: !3, line: 2400, type: !745)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 2399, column: 5)
!5579 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2398, column: 7)
!5580 = !DILocalVariable(name: "scope", scope: !5578, file: !3, line: 2401, type: !1007)
!5581 = !DILocalVariable(name: "id", scope: !5582, file: !3, line: 2414, type: !2006)
!5582 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 2413, column: 2)
!5583 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 2412, column: 11)
!5584 = !DILocalVariable(name: "type", scope: !5585, file: !3, line: 2424, type: !745)
!5585 = distinct !DILexicalBlock(scope: !5586, file: !3, line: 2423, column: 8)
!5586 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 2422, column: 10)
!5587 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 2421, column: 4)
!5588 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 2421, column: 4)
!5589 = !DILocalVariable(name: "newt", scope: !5585, file: !3, line: 2425, type: !745)
!5590 = !DILocalVariable(name: "t", scope: !5585, file: !3, line: 2425, type: !745)
!5591 = !DILocalVariable(name: "i", scope: !5585, file: !3, line: 2426, type: !669)
!5592 = !DILocation(line: 0, scope: !5537)
!5593 = !DILocation(line: 2259, column: 3, scope: !5537)
!5594 = !DILocation(line: 2261, column: 24, scope: !5537)
!5595 = !DILocation(line: 2264, column: 13, scope: !5537)
!5596 = !DILocation(line: 2268, column: 13, scope: !5546)
!5597 = !DILocation(line: 2268, column: 7, scope: !5546)
!5598 = !DILocation(line: 2268, column: 7, scope: !5537)
!5599 = !DILocation(line: 2272, column: 30, scope: !5545)
!5600 = !DILocation(line: 0, scope: !5545)
!5601 = !DILocation(line: 2275, column: 19, scope: !5545)
!5602 = !DILocation(line: 2276, column: 7, scope: !5545)
!5603 = !DILocation(line: 2277, column: 19, scope: !5545)
!5604 = !DILocation(line: 2278, column: 26, scope: !5545)
!5605 = !DILocation(line: 2278, column: 7, scope: !5545)
!5606 = !DILocation(line: 2284, column: 28, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 2284, column: 7)
!5608 = !DILocation(line: 2284, column: 12, scope: !5607)
!5609 = !DILocation(line: 0, scope: !5607)
!5610 = !DILocation(line: 2285, column: 5, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 2284, column: 7)
!5612 = !DILocation(line: 2285, column: 22, scope: !5611)
!5613 = !DILocation(line: 2285, column: 13, scope: !5611)
!5614 = !DILocation(line: 2284, column: 7, scope: !5607)
!5615 = !DILocation(line: 2287, column: 2, scope: !5611)
!5616 = !DILocation(line: 0, scope: !5611)
!5617 = !DILocation(line: 2286, column: 15, scope: !5611)
!5618 = !DILocation(line: 2284, column: 7, scope: !5611)
!5619 = distinct !{!5619, !5614, !5620}
!5620 = !DILocation(line: 2287, column: 2, scope: !5607)
!5621 = !DILocation(line: 2288, column: 15, scope: !5545)
!5622 = !DILocation(line: 2290, column: 7, scope: !5545)
!5623 = !DILocation(line: 2290, column: 37, scope: !5545)
!5624 = !DILocation(line: 2291, column: 27, scope: !5545)
!5625 = !DILocation(line: 2292, column: 30, scope: !5545)
!5626 = !DILocation(line: 2292, column: 7, scope: !5545)
!5627 = !DILocation(line: 2291, column: 7, scope: !5545)
!5628 = !DILocation(line: 2293, column: 5, scope: !5545)
!5629 = !DILocation(line: 2298, column: 13, scope: !5550)
!5630 = !DILocation(line: 2298, column: 7, scope: !5550)
!5631 = !DILocation(line: 2298, column: 7, scope: !5537)
!5632 = !DILocation(line: 2301, column: 16, scope: !5554)
!5633 = !DILocation(line: 0, scope: !5552)
!5634 = !DILocation(line: 0, scope: !5558)
!5635 = !DILocation(line: 2301, column: 12, scope: !5554)
!5636 = !DILocation(line: 0, scope: !5554)
!5637 = !DILocation(line: 0, scope: !5549)
!5638 = !DILocation(line: 2301, column: 7, scope: !5554)
!5639 = !DILocation(line: 2305, column: 12, scope: !5552)
!5640 = !DILocation(line: 2306, column: 9, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 2306, column: 8)
!5642 = !DILocation(line: 2306, column: 8, scope: !5552)
!5643 = !DILocation(line: 2309, column: 8, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 2309, column: 8)
!5645 = !DILocation(line: 2309, column: 8, scope: !5552)
!5646 = !DILocation(line: 2310, column: 10, scope: !5644)
!5647 = !DILocation(line: 2310, column: 6, scope: !5644)
!5648 = !DILocation(line: 0, scope: !5644)
!5649 = !DILocation(line: 2314, column: 8, scope: !5552)
!5650 = !DILocation(line: 2316, column: 11, scope: !5552)
!5651 = !DILocation(line: 2317, column: 4, scope: !5552)
!5652 = !DILocation(line: 2320, column: 9, scope: !5559)
!5653 = !DILocation(line: 2321, column: 8, scope: !5559)
!5654 = !DILocation(line: 2321, column: 31, scope: !5559)
!5655 = !DILocation(line: 2321, column: 11, scope: !5559)
!5656 = !DILocation(line: 2320, column: 8, scope: !5552)
!5657 = !DILocation(line: 2323, column: 8, scope: !5558)
!5658 = !DILocation(line: 2323, column: 45, scope: !5558)
!5659 = !DILocation(line: 2323, column: 35, scope: !5558)
!5660 = !DILocation(line: 2324, column: 12, scope: !5558)
!5661 = !DILocation(line: 2325, column: 8, scope: !5558)
!5662 = !DILocation(line: 2326, column: 6, scope: !5559)
!5663 = !DILocation(line: 2326, column: 6, scope: !5558)
!5664 = !DILocation(line: 2301, column: 50, scope: !5553)
!5665 = !DILocation(line: 2301, column: 7, scope: !5553)
!5666 = distinct !{!5666, !5638, !5667}
!5667 = !DILocation(line: 2327, column: 2, scope: !5554)
!5668 = !DILocation(line: 2332, column: 13, scope: !5562)
!5669 = !DILocation(line: 2332, column: 7, scope: !5562)
!5670 = !DILocation(line: 2332, column: 7, scope: !5537)
!5671 = !DILocation(line: 2334, column: 16, scope: !5561)
!5672 = !DILocation(line: 0, scope: !5561)
!5673 = !DILocation(line: 2336, column: 14, scope: !5561)
!5674 = !DILocation(line: 2337, column: 7, scope: !5561)
!5675 = !DILocation(line: 2338, column: 5, scope: !5561)
!5676 = !DILocation(line: 2341, column: 13, scope: !5565)
!5677 = !DILocation(line: 2341, column: 7, scope: !5565)
!5678 = !DILocation(line: 2341, column: 7, scope: !5537)
!5679 = !DILocation(line: 2344, column: 22, scope: !5569)
!5680 = !DILocation(line: 0, scope: !5567)
!5681 = !DILocation(line: 2344, column: 12, scope: !5569)
!5682 = !DILocation(line: 0, scope: !5569)
!5683 = !DILocation(line: 0, scope: !5564)
!5684 = !DILocation(line: 2344, column: 7, scope: !5569)
!5685 = !DILocation(line: 2348, column: 44, scope: !5567)
!5686 = !DILocation(line: 2348, column: 12, scope: !5567)
!5687 = !DILocation(line: 2349, column: 9, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 2349, column: 8)
!5689 = !DILocation(line: 2349, column: 8, scope: !5567)
!5690 = !DILocation(line: 2352, column: 4, scope: !5567)
!5691 = !DILocation(line: 2353, column: 29, scope: !5567)
!5692 = !DILocation(line: 2353, column: 11, scope: !5567)
!5693 = !DILocation(line: 2355, column: 26, scope: !5567)
!5694 = !DILocation(line: 2355, column: 11, scope: !5567)
!5695 = !DILocation(line: 2357, column: 8, scope: !5567)
!5696 = !DILocation(line: 2359, column: 11, scope: !5567)
!5697 = !DILocation(line: 2361, column: 8, scope: !5567)
!5698 = !DILocation(line: 2362, column: 11, scope: !5567)
!5699 = !DILocation(line: 2363, column: 4, scope: !5567)
!5700 = !DILocation(line: 2364, column: 2, scope: !5568)
!5701 = !DILocation(line: 2344, column: 40, scope: !5568)
!5702 = !DILocation(line: 2344, column: 7, scope: !5568)
!5703 = distinct !{!5703, !5684, !5704}
!5704 = !DILocation(line: 2364, column: 2, scope: !5569)
!5705 = !DILocation(line: 2368, column: 7, scope: !5576)
!5706 = !DILocation(line: 2368, column: 7, scope: !5537)
!5707 = !DILocation(line: 2371, column: 46, scope: !5575)
!5708 = !DILocation(line: 2371, column: 7, scope: !5575)
!5709 = !DILocation(line: 2372, column: 37, scope: !5575)
!5710 = !DILocation(line: 2372, column: 14, scope: !5575)
!5711 = !DILocation(line: 0, scope: !5575)
!5712 = !DILocation(line: 2373, column: 39, scope: !5575)
!5713 = !DILocation(line: 2373, column: 7, scope: !5575)
!5714 = !DILocation(line: 2374, column: 35, scope: !5575)
!5715 = !DILocation(line: 2374, column: 7, scope: !5575)
!5716 = !DILocation(line: 2375, column: 5, scope: !5575)
!5717 = !DILocation(line: 2380, column: 8, scope: !5537)
!5718 = !DILocation(line: 2381, column: 33, scope: !5537)
!5719 = !DILocation(line: 2381, column: 7, scope: !5537)
!5720 = !DILocation(line: 2381, column: 25, scope: !5537)
!5721 = !DILocation(line: 2384, column: 13, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2384, column: 7)
!5723 = !DILocation(line: 2384, column: 7, scope: !5722)
!5724 = !DILocation(line: 2384, column: 7, scope: !5537)
!5725 = !DILocation(line: 2387, column: 4, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 2385, column: 5)
!5727 = !DILocation(line: 2386, column: 11, scope: !5726)
!5728 = !DILocation(line: 2387, column: 2, scope: !5726)
!5729 = !DILocation(line: 2388, column: 11, scope: !5726)
!5730 = !DILocation(line: 2388, column: 30, scope: !5726)
!5731 = !DILocation(line: 2389, column: 5, scope: !5726)
!5732 = !DILocation(line: 2393, column: 13, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2393, column: 7)
!5734 = !DILocation(line: 2393, column: 7, scope: !5733)
!5735 = !DILocation(line: 2393, column: 7, scope: !5537)
!5736 = !DILocation(line: 2395, column: 47, scope: !5733)
!5737 = !DILocation(line: 2395, column: 28, scope: !5733)
!5738 = !DILocation(line: 2395, column: 5, scope: !5733)
!5739 = !DILocation(line: 2394, column: 5, scope: !5733)
!5740 = !DILocation(line: 2398, column: 13, scope: !5579)
!5741 = !DILocation(line: 2398, column: 7, scope: !5579)
!5742 = !DILocation(line: 2398, column: 7, scope: !5537)
!5743 = !DILocation(line: 2403, column: 24, scope: !5578)
!5744 = !DILocation(line: 2403, column: 7, scope: !5578)
!5745 = !DILocation(line: 2405, column: 12, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 2405, column: 7)
!5747 = !DILocation(line: 0, scope: !5746)
!5748 = !DILocation(line: 0, scope: !5578)
!5749 = !DILocation(line: 2405, column: 7, scope: !5746)
!5750 = !DILocation(line: 2407, column: 32, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 2407, column: 6)
!5752 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 2405, column: 7)
!5753 = !DILocation(line: 2407, column: 6, scope: !5751)
!5754 = !DILocation(line: 2407, column: 6, scope: !5752)
!5755 = !DILocation(line: 2406, column: 17, scope: !5752)
!5756 = !DILocation(line: 2405, column: 7, scope: !5752)
!5757 = distinct !{!5757, !5749, !5758}
!5758 = !DILocation(line: 2408, column: 4, scope: !5746)
!5759 = !DILocation(line: 2414, column: 4, scope: !5582)
!5760 = !DILocation(line: 2416, column: 4, scope: !5582)
!5761 = !DILocation(line: 2417, column: 10, scope: !5582)
!5762 = !DILocation(line: 2417, column: 20, scope: !5582)
!5763 = !DILocation(line: 2418, column: 21, scope: !5582)
!5764 = !DILocation(line: 2418, column: 10, scope: !5582)
!5765 = !DILocation(line: 2418, column: 19, scope: !5582)
!5766 = !DILocation(line: 2419, column: 7, scope: !5582)
!5767 = !DILocation(line: 2419, column: 12, scope: !5582)
!5768 = !DILocation(line: 0, scope: !5585)
!5769 = !DILocation(line: 2421, column: 4, scope: !5582)
!5770 = !DILocation(line: 2421, column: 4, scope: !5588)
!5771 = !DILocation(line: 2422, column: 36, scope: !5586)
!5772 = !DILocation(line: 2422, column: 10, scope: !5586)
!5773 = !DILocation(line: 2422, column: 10, scope: !5587)
!5774 = !DILocation(line: 2424, column: 15, scope: !5585)
!5775 = !DILocation(line: 2428, column: 8, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5585, file: !3, line: 2428, column: 3)
!5777 = !DILocation(line: 0, scope: !5776)
!5778 = !DILocation(line: 2428, column: 3, scope: !5776)
!5779 = !DILocation(line: 2429, column: 44, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 2429, column: 9)
!5781 = distinct !DILexicalBlock(scope: !5776, file: !3, line: 2428, column: 3)
!5782 = !DILocation(line: 2429, column: 9, scope: !5780)
!5783 = !DILocation(line: 2429, column: 9, scope: !5781)
!5784 = !DILocation(line: 2428, column: 28, scope: !5781)
!5785 = !DILocation(line: 2428, column: 3, scope: !5781)
!5786 = distinct !{!5786, !5778, !5787}
!5787 = !DILocation(line: 2430, column: 7, scope: !5776)
!5788 = !DILocation(line: 2435, column: 21, scope: !5585)
!5789 = !DILocation(line: 2435, column: 16, scope: !5585)
!5790 = !DILocation(line: 2436, column: 16, scope: !5585)
!5791 = !DILocation(line: 2437, column: 20, scope: !5585)
!5792 = !DILocation(line: 2437, column: 18, scope: !5585)
!5793 = !DILocation(line: 2439, column: 34, scope: !5585)
!5794 = !DILocation(line: 2439, column: 25, scope: !5585)
!5795 = !DILocation(line: 2440, column: 3, scope: !5585)
!5796 = !DILocation(line: 2440, column: 10, scope: !5585)
!5797 = !DILocation(line: 2440, column: 32, scope: !5585)
!5798 = !DILocation(line: 0, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5585, file: !3, line: 2445, column: 7)
!5800 = !DILocation(line: 2445, column: 7, scope: !5799)
!5801 = !DILocation(line: 2440, column: 36, scope: !5585)
!5802 = !DILocation(line: 2440, column: 35, scope: !5585)
!5803 = !DILocation(line: 2442, column: 14, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5585, file: !3, line: 2441, column: 5)
!5805 = !DILocation(line: 2443, column: 11, scope: !5804)
!5806 = distinct !{!5806, !5795, !5807}
!5807 = !DILocation(line: 2444, column: 5, scope: !5585)
!5808 = !DILocation(line: 2446, column: 7, scope: !5799)
!5809 = !DILocation(line: 2446, column: 10, scope: !5799)
!5810 = !DILocation(line: 2446, column: 39, scope: !5799)
!5811 = !DILocation(line: 2447, column: 7, scope: !5799)
!5812 = !DILocation(line: 2447, column: 10, scope: !5799)
!5813 = !DILocation(line: 2448, column: 15, scope: !5799)
!5814 = !DILocation(line: 2448, column: 7, scope: !5799)
!5815 = !DILocation(line: 2449, column: 30, scope: !5799)
!5816 = !DILocation(line: 2449, column: 27, scope: !5799)
!5817 = !DILocation(line: 2445, column: 7, scope: !5585)
!5818 = !DILocation(line: 2450, column: 24, scope: !5799)
!5819 = !DILocation(line: 2450, column: 22, scope: !5799)
!5820 = !DILocation(line: 2450, column: 5, scope: !5799)
!5821 = !DILocation(line: 2421, column: 34, scope: !5587)
!5822 = !DILocation(line: 2421, column: 4, scope: !5587)
!5823 = distinct !{!5823, !5770, !5824}
!5824 = !DILocation(line: 2451, column: 8, scope: !5588)
!5825 = !DILocation(line: 2453, column: 31, scope: !5582)
!5826 = !DILocation(line: 2453, column: 4, scope: !5582)
!5827 = !DILocation(line: 2454, column: 2, scope: !5583)
!5828 = !DILocation(line: 2454, column: 2, scope: !5582)
!5829 = !DILocation(line: 2456, column: 57, scope: !5578)
!5830 = !DILocation(line: 2456, column: 38, scope: !5578)
!5831 = !DILocation(line: 2456, column: 15, scope: !5578)
!5832 = !DILocation(line: 2457, column: 11, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 2457, column: 11)
!5834 = !DILocation(line: 2457, column: 11, scope: !5578)
!5835 = !DILocation(line: 2458, column: 22, scope: !5833)
!5836 = !DILocation(line: 2458, column: 2, scope: !5833)
!5837 = !DILocation(line: 2461, column: 15, scope: !5833)
!5838 = !DILocation(line: 2462, column: 14, scope: !5833)
!5839 = !DILocation(line: 2461, column: 6, scope: !5833)
!5840 = !DILocation(line: 2460, column: 2, scope: !5833)
!5841 = !DILocation(line: 2461, column: 4, scope: !5833)
!5842 = !DILocation(line: 2466, column: 7, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2466, column: 7)
!5844 = !DILocation(line: 2466, column: 7, scope: !5537)
!5845 = !DILocation(line: 2468, column: 7, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 2467, column: 5)
!5847 = !DILocation(line: 2469, column: 36, scope: !5846)
!5848 = !DILocation(line: 2469, column: 45, scope: !5846)
!5849 = !DILocation(line: 2469, column: 56, scope: !5846)
!5850 = !DILocation(line: 2469, column: 7, scope: !5846)
!5851 = !DILocation(line: 2470, column: 5, scope: !5846)
!5852 = !DILocation(line: 2471, column: 1, scope: !5537)
!5853 = distinct !DISubprogram(name: "gimple_assign_set_rhs1", scope: !584, file: !584, line: 1747, type: !4024, scopeLine: 1748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5854)
!5854 = !{!5855, !5856}
!5855 = !DILocalVariable(name: "gs", arg: 1, scope: !5853, file: !584, line: 1747, type: !1007)
!5856 = !DILocalVariable(name: "rhs", arg: 2, scope: !5853, file: !584, line: 1747, type: !745)
!5857 = !DILocation(line: 0, scope: !5853)
!5858 = !DILocation(line: 1751, column: 3, scope: !5853)
!5859 = !DILocation(line: 1752, column: 1, scope: !5853)
!5860 = distinct !DISubprogram(name: "gimple_bind_body", scope: !584, file: !584, line: 2517, type: !4036, scopeLine: 2518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5861)
!5861 = !{!5862}
!5862 = !DILocalVariable(name: "gs", arg: 1, scope: !5860, file: !584, line: 2517, type: !1007)
!5863 = !DILocation(line: 0, scope: !5860)
!5864 = !DILocation(line: 2520, column: 26, scope: !5860)
!5865 = !DILocation(line: 2520, column: 3, scope: !5860)
!5866 = distinct !DISubprogram(name: "gimple_bind_set_body", scope: !584, file: !584, line: 2528, type: !4710, scopeLine: 2529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5867)
!5867 = !{!5868, !5869}
!5868 = !DILocalVariable(name: "gs", arg: 1, scope: !5866, file: !584, line: 2528, type: !1007)
!5869 = !DILocalVariable(name: "seq", arg: 2, scope: !5866, file: !584, line: 2528, type: !997)
!5870 = !DILocation(line: 0, scope: !5866)
!5871 = !DILocation(line: 2531, column: 19, scope: !5866)
!5872 = !DILocation(line: 2531, column: 24, scope: !5866)
!5873 = !DILocation(line: 2532, column: 1, scope: !5866)
!5874 = distinct !DISubprogram(name: "remap_vla_decls", scope: !3, file: !3, line: 2173, type: !5875, scopeLine: 2174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5877)
!5875 = !DISubroutineType(types: !5876)
!5876 = !{null, !745, !669}
!5877 = !{!5878, !5879, !5880, !5881, !5882, !5883, !5884, !5885, !5890, !5891, !5892}
!5878 = !DILocalVariable(name: "block", arg: 1, scope: !5874, file: !3, line: 2173, type: !745)
!5879 = !DILocalVariable(name: "root", arg: 2, scope: !5874, file: !3, line: 2173, type: !669)
!5880 = !DILocalVariable(name: "var", scope: !5874, file: !3, line: 2175, type: !745)
!5881 = !DILocalVariable(name: "subblock", scope: !5874, file: !3, line: 2175, type: !745)
!5882 = !DILocalVariable(name: "val", scope: !5874, file: !3, line: 2175, type: !745)
!5883 = !DILocalVariable(name: "type", scope: !5874, file: !3, line: 2175, type: !745)
!5884 = !DILocalVariable(name: "id", scope: !5874, file: !3, line: 2176, type: !2006)
!5885 = !DILocalVariable(name: "i", scope: !5886, file: !3, line: 2209, type: !669)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 2208, column: 7)
!5887 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 2205, column: 9)
!5888 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 2204, column: 3)
!5889 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 2204, column: 3)
!5890 = !DILocalVariable(name: "newt", scope: !5886, file: !3, line: 2210, type: !745)
!5891 = !DILocalVariable(name: "t", scope: !5886, file: !3, line: 2210, type: !745)
!5892 = !DILocalVariable(name: "context", scope: !5886, file: !3, line: 2210, type: !745)
!5893 = !DILocation(line: 0, scope: !5874)
!5894 = !DILocation(line: 2175, column: 3, scope: !5874)
!5895 = !DILocation(line: 2176, column: 3, scope: !5874)
!5896 = !DILocation(line: 2178, column: 19, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 2178, column: 3)
!5898 = !DILocation(line: 2178, column: 8, scope: !5897)
!5899 = !DILocation(line: 0, scope: !5897)
!5900 = !DILocation(line: 2178, column: 3, scope: !5897)
!5901 = !DILocation(line: 2181, column: 5, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 2178, column: 3)
!5903 = !DILocation(line: 2180, column: 19, scope: !5902)
!5904 = !DILocation(line: 2178, column: 3, scope: !5902)
!5905 = distinct !{!5905, !5900, !5906}
!5906 = !DILocation(line: 2181, column: 36, scope: !5897)
!5907 = !DILocation(line: 2183, column: 14, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 2183, column: 3)
!5909 = !DILocation(line: 0, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !3, line: 2188, column: 2)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 2185, column: 11)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 2184, column: 5)
!5913 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 2183, column: 3)
!5914 = !DILocation(line: 0, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 2191, column: 8)
!5916 = !DILocation(line: 2183, column: 8, scope: !5908)
!5917 = !DILocation(line: 0, scope: !5908)
!5918 = !DILocation(line: 2183, column: 3, scope: !5908)
!5919 = !DILocation(line: 2185, column: 11, scope: !5911)
!5920 = !DILocation(line: 2185, column: 27, scope: !5911)
!5921 = !DILocation(line: 2186, column: 4, scope: !5911)
!5922 = !DILocation(line: 2186, column: 33, scope: !5911)
!5923 = !DILocation(line: 2186, column: 7, scope: !5911)
!5924 = !DILocation(line: 2187, column: 4, scope: !5911)
!5925 = !DILocation(line: 2187, column: 7, scope: !5911)
!5926 = !DILocation(line: 2185, column: 11, scope: !5912)
!5927 = !DILocation(line: 2189, column: 11, scope: !5910)
!5928 = !DILocation(line: 2189, column: 9, scope: !5910)
!5929 = !DILocation(line: 2190, column: 10, scope: !5910)
!5930 = !DILocation(line: 2190, column: 8, scope: !5910)
!5931 = !DILocation(line: 2191, column: 8, scope: !5915)
!5932 = !DILocation(line: 2191, column: 62, scope: !5915)
!5933 = !DILocation(line: 2192, column: 8, scope: !5915)
!5934 = !DILocation(line: 2192, column: 12, scope: !5915)
!5935 = !DILocation(line: 2192, column: 65, scope: !5915)
!5936 = !DILocation(line: 2191, column: 8, scope: !5910)
!5937 = !DILocation(line: 2183, column: 45, scope: !5913)
!5938 = !DILocation(line: 2183, column: 3, scope: !5913)
!5939 = distinct !{!5939, !5918, !5940}
!5940 = !DILocation(line: 2195, column: 5, scope: !5908)
!5941 = !DILocation(line: 2199, column: 3, scope: !5874)
!5942 = !DILocation(line: 2200, column: 9, scope: !5874)
!5943 = !DILocation(line: 2200, column: 19, scope: !5874)
!5944 = !DILocation(line: 2201, column: 20, scope: !5874)
!5945 = !DILocation(line: 2201, column: 9, scope: !5874)
!5946 = !DILocation(line: 2201, column: 18, scope: !5874)
!5947 = !DILocation(line: 2202, column: 6, scope: !5874)
!5948 = !DILocation(line: 2202, column: 11, scope: !5874)
!5949 = !DILocation(line: 0, scope: !5886)
!5950 = !DILocation(line: 2204, column: 3, scope: !5874)
!5951 = !DILocation(line: 2204, column: 3, scope: !5889)
!5952 = !DILocation(line: 2205, column: 9, scope: !5887)
!5953 = !DILocation(line: 2205, column: 25, scope: !5887)
!5954 = !DILocation(line: 2206, column: 2, scope: !5887)
!5955 = !DILocation(line: 2206, column: 31, scope: !5887)
!5956 = !DILocation(line: 2206, column: 5, scope: !5887)
!5957 = !DILocation(line: 2207, column: 2, scope: !5887)
!5958 = !DILocation(line: 2207, column: 5, scope: !5887)
!5959 = !DILocation(line: 2205, column: 9, scope: !5888)
!5960 = !DILocation(line: 2212, column: 13, scope: !5886)
!5961 = !DILocation(line: 2212, column: 11, scope: !5886)
!5962 = !DILocation(line: 2213, column: 8, scope: !5886)
!5963 = !DILocation(line: 2213, column: 6, scope: !5886)
!5964 = !DILocation(line: 2214, column: 6, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 2214, column: 6)
!5966 = !DILocation(line: 2214, column: 60, scope: !5965)
!5967 = !DILocation(line: 2215, column: 6, scope: !5965)
!5968 = !DILocation(line: 2215, column: 9, scope: !5965)
!5969 = !DILocation(line: 2215, column: 62, scope: !5965)
!5970 = !DILocation(line: 2214, column: 6, scope: !5886)
!5971 = !DILocation(line: 2218, column: 12, scope: !5886)
!5972 = !DILocation(line: 2219, column: 7, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 2219, column: 2)
!5974 = !DILocation(line: 0, scope: !5973)
!5975 = !DILocation(line: 2219, column: 2, scope: !5973)
!5976 = !DILocation(line: 2220, column: 11, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 2220, column: 8)
!5978 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 2219, column: 2)
!5979 = !DILocation(line: 2220, column: 19, scope: !5977)
!5980 = !DILocation(line: 2220, column: 8, scope: !5978)
!5981 = !DILocation(line: 2219, column: 27, scope: !5978)
!5982 = !DILocation(line: 2219, column: 2, scope: !5978)
!5983 = distinct !{!5983, !5975, !5984}
!5984 = !DILocation(line: 2221, column: 6, scope: !5973)
!5985 = !DILocation(line: 2226, column: 15, scope: !5886)
!5986 = !DILocation(line: 2227, column: 15, scope: !5886)
!5987 = !DILocation(line: 2228, column: 19, scope: !5886)
!5988 = !DILocation(line: 2228, column: 17, scope: !5886)
!5989 = !DILocation(line: 2230, column: 39, scope: !5886)
!5990 = !DILocation(line: 2230, column: 27, scope: !5886)
!5991 = !DILocation(line: 2230, column: 18, scope: !5886)
!5992 = !DILocation(line: 2231, column: 2, scope: !5886)
!5993 = !DILocation(line: 2231, column: 9, scope: !5886)
!5994 = !DILocation(line: 2231, column: 31, scope: !5886)
!5995 = !DILocation(line: 0, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 2236, column: 6)
!5997 = !DILocation(line: 2236, column: 6, scope: !5996)
!5998 = !DILocation(line: 2231, column: 35, scope: !5886)
!5999 = !DILocation(line: 2231, column: 34, scope: !5886)
!6000 = !DILocation(line: 2233, column: 13, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 2232, column: 4)
!6002 = !DILocation(line: 2234, column: 10, scope: !6001)
!6003 = distinct !{!6003, !5992, !6004}
!6004 = !DILocation(line: 2235, column: 4, scope: !5886)
!6005 = !DILocation(line: 2237, column: 6, scope: !5996)
!6006 = !DILocation(line: 2237, column: 9, scope: !5996)
!6007 = !DILocation(line: 2237, column: 38, scope: !5996)
!6008 = !DILocation(line: 2238, column: 6, scope: !5996)
!6009 = !DILocation(line: 2238, column: 9, scope: !5996)
!6010 = !DILocation(line: 2239, column: 14, scope: !5996)
!6011 = !DILocation(line: 2239, column: 6, scope: !5996)
!6012 = !DILocation(line: 2240, column: 29, scope: !5996)
!6013 = !DILocation(line: 2240, column: 26, scope: !5996)
!6014 = !DILocation(line: 2236, column: 6, scope: !5886)
!6015 = !DILocation(line: 2241, column: 23, scope: !5996)
!6016 = !DILocation(line: 2241, column: 21, scope: !5996)
!6017 = !DILocation(line: 2241, column: 4, scope: !5996)
!6018 = !DILocation(line: 2243, column: 2, scope: !5886)
!6019 = !DILocation(line: 2244, column: 6, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 2244, column: 6)
!6021 = !DILocation(line: 2244, column: 13, scope: !6020)
!6022 = !DILocation(line: 2244, column: 10, scope: !6020)
!6023 = !DILocation(line: 2244, column: 6, scope: !5886)
!6024 = !DILocation(line: 2245, column: 4, scope: !6020)
!6025 = !DILocation(line: 2204, column: 21, scope: !5888)
!6026 = !DILocation(line: 2204, column: 3, scope: !5888)
!6027 = distinct !{!6027, !5951, !6028}
!6028 = !DILocation(line: 2246, column: 7, scope: !5889)
!6029 = !DILocation(line: 2248, column: 30, scope: !5874)
!6030 = !DILocation(line: 2248, column: 3, scope: !5874)
!6031 = !DILocation(line: 2249, column: 1, scope: !5874)
!6032 = distinct !DISubprogram(name: "nesting_copy_decl", scope: !3, file: !3, line: 2124, type: !6033, scopeLine: 2125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6036)
!6033 = !DISubroutineType(types: !6034)
!6034 = !{!745, !745, !6035}
!6035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!6036 = !{!6037, !6038, !6039, !6040, !6041}
!6037 = !DILocalVariable(name: "decl", arg: 1, scope: !6032, file: !3, line: 2124, type: !745)
!6038 = !DILocalVariable(name: "id", arg: 2, scope: !6032, file: !3, line: 2124, type: !6035)
!6039 = !DILocalVariable(name: "nid", scope: !6032, file: !3, line: 2126, type: !2005)
!6040 = !DILocalVariable(name: "slot", scope: !6032, file: !3, line: 2127, type: !1462)
!6041 = !DILocalVariable(name: "new_decl", scope: !6042, file: !3, line: 2134, type: !745)
!6042 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 2133, column: 5)
!6043 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 2132, column: 7)
!6044 = !DILocation(line: 0, scope: !6032)
!6045 = !DILocation(line: 2127, column: 44, scope: !6032)
!6046 = !DILocation(line: 2127, column: 50, scope: !6032)
!6047 = !DILocation(line: 2127, column: 59, scope: !6032)
!6048 = !DILocation(line: 2127, column: 17, scope: !6032)
!6049 = !DILocation(line: 2129, column: 7, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 2129, column: 7)
!6051 = !DILocation(line: 2129, column: 7, scope: !6032)
!6052 = !DILocation(line: 2130, column: 19, scope: !6050)
!6053 = !DILocation(line: 2130, column: 5, scope: !6050)
!6054 = !DILocation(line: 2132, column: 7, scope: !6043)
!6055 = !DILocation(line: 2132, column: 24, scope: !6043)
!6056 = !DILocation(line: 2132, column: 37, scope: !6043)
!6057 = !DILocation(line: 2132, column: 40, scope: !6043)
!6058 = !DILocation(line: 2132, column: 7, scope: !6032)
!6059 = !DILocation(line: 2134, column: 23, scope: !6042)
!6060 = !DILocation(line: 0, scope: !6042)
!6061 = !DILocation(line: 2136, column: 16, scope: !6042)
!6062 = !DILocation(line: 2136, column: 4, scope: !6042)
!6063 = !DILocation(line: 2135, column: 7, scope: !6042)
!6064 = !DILocation(line: 2136, column: 2, scope: !6042)
!6065 = !DILocation(line: 2140, column: 24, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 2140, column: 7)
!6067 = !DILocation(line: 2141, column: 7, scope: !6066)
!6068 = !DILocation(line: 2141, column: 27, scope: !6066)
!6069 = !DILocation(line: 2142, column: 7, scope: !6066)
!6070 = !DILocation(line: 2142, column: 27, scope: !6066)
!6071 = !DILocation(line: 2140, column: 7, scope: !6032)
!6072 = !DILocation(line: 2145, column: 10, scope: !6032)
!6073 = !DILocation(line: 2145, column: 3, scope: !6032)
!6074 = !DILocation(line: 2146, column: 1, scope: !6032)
!6075 = distinct !DISubprogram(name: "contains_remapped_vars", scope: !3, file: !3, line: 2152, type: !2936, scopeLine: 2153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6076)
!6076 = !{!6077, !6078, !6079, !6080, !6081, !6082}
!6077 = !DILocalVariable(name: "tp", arg: 1, scope: !6075, file: !3, line: 2152, type: !1042)
!6078 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !6075, file: !3, line: 2152, type: !2938)
!6079 = !DILocalVariable(name: "data", arg: 3, scope: !6075, file: !3, line: 2152, type: !666)
!6080 = !DILocalVariable(name: "root", scope: !6075, file: !3, line: 2154, type: !669)
!6081 = !DILocalVariable(name: "t", scope: !6075, file: !3, line: 2155, type: !745)
!6082 = !DILocalVariable(name: "slot", scope: !6075, file: !3, line: 2156, type: !1462)
!6083 = !DILocation(line: 0, scope: !6075)
!6084 = !DILocation(line: 2155, column: 12, scope: !6075)
!6085 = !DILocation(line: 2158, column: 7, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6075, file: !3, line: 2158, column: 7)
!6087 = !DILocation(line: 2158, column: 7, scope: !6075)
!6088 = !DILocation(line: 2160, column: 22, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 2159, column: 5)
!6090 = !DILocation(line: 2161, column: 42, scope: !6089)
!6091 = !DILocation(line: 2161, column: 51, scope: !6089)
!6092 = !DILocation(line: 2161, column: 14, scope: !6089)
!6093 = !DILocation(line: 2163, column: 11, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 2163, column: 11)
!6095 = !DILocation(line: 2163, column: 11, scope: !6089)
!6096 = !DILocation(line: 2164, column: 16, scope: !6094)
!6097 = !DILocation(line: 2164, column: 2, scope: !6094)
!6098 = !DILocation(line: 2167, column: 1, scope: !6075)
!6099 = distinct !DISubprogram(name: "unnest_nesting_tree_1", scope: !3, file: !3, line: 2484, type: !3586, scopeLine: 2485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6100)
!6100 = !{!6101, !6102}
!6101 = !DILocalVariable(name: "root", arg: 1, scope: !6099, file: !3, line: 2484, type: !669)
!6102 = !DILocalVariable(name: "node", scope: !6099, file: !3, line: 2486, type: !2015)
!6103 = !DILocation(line: 0, scope: !6099)
!6104 = !DILocation(line: 2486, column: 49, scope: !6099)
!6105 = !DILocation(line: 2486, column: 30, scope: !6099)
!6106 = !DILocation(line: 2490, column: 13, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 2490, column: 7)
!6108 = !DILocation(line: 2490, column: 7, scope: !6107)
!6109 = !DILocation(line: 2490, column: 7, scope: !6099)
!6110 = !DILocation(line: 2492, column: 47, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 2491, column: 5)
!6112 = !DILocation(line: 2492, column: 28, scope: !6111)
!6113 = !DILocation(line: 2492, column: 8, scope: !6111)
!6114 = !DILocation(line: 2493, column: 40, scope: !6111)
!6115 = !DILocation(line: 2493, column: 8, scope: !6111)
!6116 = !DILocation(line: 2494, column: 5, scope: !6111)
!6117 = !DILocation(line: 2495, column: 1, scope: !6099)
